public class org.eclipse.jdt.internal.compiler.ast.EqualExpression extends org.eclipse.jdt.internal.compiler.ast.BinaryExpression
{

    public void <init>(org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Expression, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r1, r2;
        int i0;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: void <init>(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.ast.Expression,int)>(r1, r2, i0);

        return;
    }

    private void checkNullComparison(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r2, $r15;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r6, r7, r8;
        long $l0, $l1, $l4, $l5;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r9, $r10, $r12, $r13, $r14;
        byte $b2, $b6;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r11;
        int $i3, $i7;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r6 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r7 := @parameter3: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r8 := @parameter4: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()>();

        if $r2 == null goto label1;

        $r11 = $r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $l4 = $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l5 = $l4 & 2L;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label1;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i7 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.Expression: int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6);

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void checkVariableComparison(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,int,org.eclipse.jdt.internal.compiler.ast.Expression)>(r4, r5, r6, r7, r8, $r2, $i7, $r13);

     label1:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r15 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding localVariableBinding()>();

        if $r15 == null goto label2;

        $r3 = $r15.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $l0 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: long tagBits>;

        $l1 = $l0 & 2L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i3 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: int nullStatus(org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r6);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void checkVariableComparison(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,int,org.eclipse.jdt.internal.compiler.ast.Expression)>(r4, r5, r6, r7, r8, $r15, $i3, $r10);

     label2:
        return;
    }

    private void checkVariableComparison(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.flow.FlowInfo, org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, int, org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r5, r6, r7;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.ast.Expression r4;
        org.eclipse.jdt.internal.compiler.flow.FlowContext r1;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r5 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r6 := @parameter3: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r7 := @parameter4: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        r3 := @parameter5: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        i0 := @parameter6: int;

        r4 := @parameter7: org.eclipse.jdt.internal.compiler.ast.Expression;

        tableswitch(i0)
        {
            case -1: goto label3;
            case 0: goto label5;
            case 1: goto label1;
            default: goto label5;
        };

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i2 = $i1 & 4032;

        $i3 = $i2 >> 6;

        if $i3 != 18 goto label2;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordUsingNullReference(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r3, r4, 256, r5);

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        virtualinvoke r7.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        goto label5;

     label2:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordUsingNullReference(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r3, r4, 512, r5);

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        virtualinvoke r7.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        goto label5;

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i5 = $i4 & 4032;

        $i6 = $i5 >> 6;

        if $i6 != 18 goto label4;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordUsingNullReference(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r3, r4, 513, r5);

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: void markAsComparedEqualToNonNull(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        goto label5;

     label4:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.flow.FlowContext: void recordUsingNullReference(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding,org.eclipse.jdt.internal.compiler.ast.Expression,int,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r2, r3, r4, 257, r5);

     label5:
        return;
    }

    public org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.flow.FlowContext, org.eclipse.jdt.internal.compiler.flow.FlowInfo)
    {
        org.eclipse.jdt.internal.compiler.flow.FlowContext r8;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r5, $r6, $r18, $r20, $r25, $r27, $r32, $r33, $r35, $r36, $r43, $r45, $r50, $r52;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        org.eclipse.jdt.internal.compiler.flow.FlowInfo r9, $r12, $r14, $r15, $r16, $r22, $r29, $r39, $r41, $r47, $r54, r56, $r57, $r58;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo $r13, $r40;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r4, $r10, $r11, $r17, $r19, $r21, $r23, $r24, $r26, $r28, $r30, $r31, $r34, $r37, $r38, $r42, $r44, $r46, $r48, $r49, $r51, $r53, $r55;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.flow.FlowContext;

        r9 := @parameter2: org.eclipse.jdt.internal.compiler.flow.FlowInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i1 = $i0 & 4032;

        $i2 = $i1 >> 6;

        if $i2 != 18 goto label05;

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r33 = $r31.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r32 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r33 == $r32 goto label02;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r50 = $r49.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i8 = virtualinvoke $r50.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i8 != 5 goto label02;

        $r51 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r52 = $r51.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z3 = virtualinvoke $r52.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z3 == 0 goto label01;

        $r55 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        r56 = virtualinvoke $r55.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        goto label10;

     label01:
        $r53 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r54 = virtualinvoke $r53.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        r56 = virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo asNegatedCondition()>();

        goto label10;

     label02:
        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r36 = $r34.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r35 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r36 == $r35 goto label04;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r43 = $r42.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i7 = virtualinvoke $r43.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i7 != 5 goto label04;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r45 = $r44.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z2 = virtualinvoke $r45.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z2 == 0 goto label03;

        $r48 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        r56 = virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        goto label10;

     label03:
        $r46 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r47 = virtualinvoke $r46.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        r56 = virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo asNegatedCondition()>();

        goto label10;

     label04:
        $r38 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r39 = virtualinvoke $r37.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        $r40 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r41 = virtualinvoke $r38.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, $r40);

        r56 = virtualinvoke $r41.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        goto label10;

     label05:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r3 = $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label07;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r25 = $r24.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i6 = virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i6 != 5 goto label07;

        $r26 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r27 = $r26.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z1 = virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z1 != 0 goto label06;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        r56 = virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        goto label10;

     label06:
        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r29 = virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        r56 = virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo asNegatedCondition()>();

        goto label10;

     label07:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r6 = $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r6 == $r5 goto label09;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r18 = $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i5 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

        if $i5 != 5 goto label09;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r20 = $r19.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z0 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z0 != 0 goto label08;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        r56 = virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        goto label10;

     label08:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        r56 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo asNegatedCondition()>();

        goto label10;

     label09:
        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r12 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r9);

        $r13 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

        $r14 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.flow.FlowInfo analyseCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, $r13);

        r56 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo unconditionalInits()>();

     label10:
        $z4 = r56 instanceof org.eclipse.jdt.internal.compiler.flow.UnconditionalFlowInfo;

        if $z4 == 0 goto label11;

        $i3 = r56.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: int tagBits>;

        $i4 = $i3 & 1;

        if $i4 != 0 goto label11;

        $r15 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        $r16 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo copy()>();

        r56 = staticinvoke <org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo conditional(org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>($r15, $r16);

     label11:
        $r57 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenTrue()>();

        $r58 = virtualinvoke r56.<org.eclipse.jdt.internal.compiler.flow.FlowInfo: org.eclipse.jdt.internal.compiler.flow.FlowInfo initsWhenFalse()>();

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void checkNullComparison(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.flow.FlowContext,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo,org.eclipse.jdt.internal.compiler.flow.FlowInfo)>(r7, r8, r56, $r57, $r58);

        return r56;
    }

    public final void computeConstant(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r5, $r8, $r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r9, r11;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r4, $r6, $r7, $r12, $r13, $r14, $r15;
        org.eclipse.jdt.internal.compiler.impl.BooleanConstant $r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r11 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r3 = $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label3;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r7 = $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r6 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r7 == $r6 goto label3;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r13 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i1 = r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r12 = $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i0 = r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $r14 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant computeConstantOperationEQUAL_EQUAL(org.eclipse.jdt.internal.compiler.impl.Constant,int,org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r13, $i1, $r12, $i0);

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r14;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i3 = $i2 & 4032;

        $i4 = $i3 >> 6;

        if $i4 != 29 goto label4;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z0 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $z1 = 0;

        goto label2;

     label1:
        $z1 = 1;

     label2:
        $r16 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.BooleanConstant: org.eclipse.jdt.internal.compiler.impl.BooleanConstant fromValue(boolean)>($z1);

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r16;

        goto label4;

     label3:
        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r4;

     label4:
        return;
    }

    public void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r1;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r6;
        org.eclipse.jdt.internal.compiler.ast.Expression $r4;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label2;

        if z0 == 0 goto label1;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $i6 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant,int)>($r6, $i6);

     label1:
        $i5 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i5);

        return;

     label2:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i1 = $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i2 = $i1 & 15;

        if $i2 != 5 goto label3;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void generateBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r5, r0, z0);

        goto label4;

     label3:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void generateNonBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r5, r0, z0);

     label4:
        if z0 == 0 goto label5;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i4);

     label5:
        $i3 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i3);

        return;
    }

    public void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r6, r7;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean z0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r5;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r7 := @parameter2: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r6 := @parameter3: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        z0 := @parameter4: boolean;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r1 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r2 == $r1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.BinaryExpression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r4, r5, r7, r6, z0);

        return;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i1 = $i0 & 4032;

        $i2 = $i1 >> 6;

        if $i2 != 18 goto label3;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i5 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i6 = $i5 & 15;

        if $i6 != 5 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void generateOptimizedBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r4, r5, r7, r6, z0);

        goto label5;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void generateOptimizedNonBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r4, r5, r7, r6, z0);

        goto label5;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i3 = $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i4 = $i3 & 15;

        if $i4 != 5 goto label4;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void generateOptimizedBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r4, r5, r6, r7, z0);

        goto label5;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void generateOptimizedNonBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r4, r5, r6, r7, z0);

     label5:
        return;
    }

    public void generateBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r4, $r9, $r10, $r13, $r14, $r16, $r17, $r19, $r20, $r21, $r24, $r25, $r27, $r28, $r30, $r31, $r32, $r33;
        boolean z0, $z1, $z2, $z3, $z4, $z6, $z7, $z8, $z9;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r5, $r6, $r22, $r23;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r11, $r12, $r15, $r18, $r26, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r8;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter2: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i1 = $i0 & 4032;

        $i2 = $i1 >> 6;

        if $i2 != 18 goto label01;

        $z9 = 1;

        $z8 = 1;

        $z7 = 1;

        $z6 = 1;

        goto label02;

     label01:
        $z9 = 0;

        $z8 = 0;

        $z7 = 0;

        $z6 = 0;

     label02:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r2 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r3 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r2 == $r3 goto label11;

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r23 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r22 == $r23 goto label06;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r32.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r33.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        if z0 == 0 goto label10;

        $z3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        $z4 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z7 == 0 goto label04;

        if $z3 != $z4 goto label03;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label10;

     label03:
        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label10;

     label04:
        if $z3 == $z4 goto label05;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label10;

     label05:
        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label10;

     label06:
        $z2 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z2 != $z6 goto label07;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r30.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, z0);

        goto label10;

     label07:
        if z0 == 0 goto label09;

        $r26 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r26.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        $r28 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r7, r8, null, $r26, z0);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i10 = $i9 & 16;

        if $i10 == 0 goto label08;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i11);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label10;

     label08:
        $r29 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r29.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r29);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        goto label10;

     label09:
        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        $r25 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

     label10:
        return;

     label11:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant optimizedBooleanConstant()>();

        $r6 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r5 == $r6 goto label16;

        $z1 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        if $z1 != $z9 goto label12;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, z0);

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        goto label15;

     label12:
        if z0 == 0 goto label14;

        $r15 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r15.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

        $r16 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r7, r8, null, $r15, z0);

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i7 = $i6 & 16;

        if $i7 == 0 goto label13;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i8);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label15;

     label13:
        $r18 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r18.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r18);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        goto label15;

     label14:
        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, 0);

     label15:
        return;

     label16:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, z0);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, z0);

        if z0 == 0 goto label19;

        if $z8 == 0 goto label18;

        $r11 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r11);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $i3 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i4 = $i3 & 16;

        if $i4 == 0 goto label17;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i5);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label19;

     label17:
        $r12 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r8);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r12);

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        goto label19;

     label18:
        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ixor()>();

     label19:
        return;
    }

    public void generateOptimizedBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r7;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r11, r12, $r18, $r19, $r21, $r22;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r4, $r9, $r10, $r13, $r15, $r17, $r20;
        int $i0;
        boolean z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r8;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.impl.Constant $r2, $r3, $r5, $r6, $r14, $r16;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r8 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r12 := @parameter2: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r11 := @parameter3: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        z0 := @parameter4: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r3 = $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r2 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r2 goto label05;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r16 = $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z2 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        if $z2 == 0 goto label01;

        $r18 = r12;

        goto label02;

     label01:
        $r18 = r11;

     label02:
        if $z2 == 0 goto label03;

        $r19 = r11;

        goto label04;

     label03:
        $r19 = r12;

     label04:
        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r7, r8, $r18, $r19, z0);

        return;

     label05:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r6 = $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r5 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r6 == $r5 goto label10;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r14 = $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $z1 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        if $z1 == 0 goto label06;

        $r21 = r12;

        goto label07;

     label06:
        $r21 = r11;

     label07:
        if $z1 == 0 goto label08;

        $r22 = r11;

        goto label09;

     label08:
        $r22 = r12;

     label09:
        virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedBoolean(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,org.eclipse.jdt.internal.compiler.codegen.BranchLabel,boolean)>(r7, r8, $r21, $r22, z0);

        return;

     label10:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, z0);

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r7, r8, z0);

        if z0 == 0 goto label12;

        if r11 != null goto label11;

        if r12 == null goto label12;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r12);

        goto label12;

     label11:
        if r12 != null goto label12;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r11);

     label12:
        $i0 = r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r8.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void updateLastRecordedEndPC(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r7, $i0);

        return;
    }

    public void generateNonBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, boolean)
    {
        org.eclipse.jdt.internal.compiler.impl.Constant $r19, $r20, $r22, $r23;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r4;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r2, $r5, $r6, $r8, $r10, $r11, $r14, $r15, $r18, $r21, $r24, $r27, $r30;
        boolean z0, $z1, z2, $z3, $z5, $z6, $z7;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r7, $r9, $r12, $r13, $r16, $r17, $r25, $r26, $r28, $r29;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z2 := @parameter2: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i1 = $i0 & 4032;

        $i2 = $i1 >> 6;

        if $i2 != 18 goto label01;

        $z7 = 1;

        $z6 = 1;

        goto label02;

     label01:
        $z7 = 0;

        $z6 = 0;

     label02:
        z0 = $z7;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i3 = $r1.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i4 = $i3 & 255;

        $i5 = $i4 >> 4;

        if $i5 != 10 goto label12;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r19 = $r18.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r20 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r19 == $r20 goto label07;

        $i23 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        if $i23 != 0 goto label07;

        $r27 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r27.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r3, r4, z2);

        if z2 == 0 goto label06;

        $r28 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r28.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        if $z6 == 0 goto label03;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r28);

        goto label04;

     label03:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r28);

     label04:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $i24 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i25 = $i24 & 16;

        if $i25 == 0 goto label05;

        $i26 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i26);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label06;

     label05:
        $r29 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r29.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r29);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r28.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label06:
        return;

     label07:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r22 = $r21.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r23 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r22 == $r23 goto label12;

        $i19 = virtualinvoke $r22.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        if $i19 != 0 goto label12;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r24.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r3, r4, z2);

        if z2 == 0 goto label11;

        $r25 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r25.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        if z0 == 0 goto label08;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r25);

        goto label09;

     label08:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r25);

     label09:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $i20 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i21 = $i20 & 16;

        if $i21 == 0 goto label10;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i22);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label11;

     label10:
        $r26 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r26.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r26);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r25.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r26.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label11:
        return;

     label12:
        $r30 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $z5 = $r30 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z5 == 0 goto label19;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $z3 = $r14 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z3 == 0 goto label14;

        if z2 == 0 goto label18;

        if z0 == 0 goto label13;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label18;

     label13:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label18;

     label14:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r3, r4, z2);

        if z2 == 0 goto label18;

        $r16 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r16.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        if z0 == 0 goto label15;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnonnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r16);

        goto label16;

     label15:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r16);

     label16:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $i16 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i17 = $i16 & 16;

        if $i17 == 0 goto label17;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i18);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label18;

     label17:
        $r17 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r17.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r17);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label18:
        return;

     label19:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $z1 = $r2 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z1 == 0 goto label24;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r3, r4, z2);

        if z2 == 0 goto label23;

        $r12 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        if z0 == 0 goto label20;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnonnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r12);

        goto label21;

     label20:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r12);

     label21:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i14 = $i13 & 16;

        if $i14 == 0 goto label22;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i15);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label23;

     label22:
        $r13 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r13.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r13);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label23:
        return;

     label24:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r3, r4, z2);

        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r3, r4, z2);

        if z2 == 0 goto label38;

        $r7 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        if z0 == 0 goto label30;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i10 = $r10.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i11 = $i10 & 255;

        $i12 = $i11 >> 4;

        tableswitch($i12)
        {
            case 7: goto label27;
            case 8: goto label28;
            case 9: goto label26;
            case 10: goto label25;
            default: goto label29;
        };

     label25:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label26:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fcmpl()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label27:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lcmp()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label28:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dcmpl()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label29:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_acmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label30:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i6 = $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i7 = $i6 & 255;

        $i8 = $i7 >> 4;

        tableswitch($i8)
        {
            case 7: goto label33;
            case 8: goto label34;
            case 9: goto label32;
            case 10: goto label31;
            default: goto label35;
        };

     label31:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label32:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fcmpl()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label33:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lcmp()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label34:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dcmpl()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

        goto label36;

     label35:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_acmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r7);

     label36:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        $i27 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i28 = $i27 & 16;

        if $i28 == 0 goto label37;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int implicitConversion>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateImplicitConversion(int)>($i9);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)>(r0);

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label38;

     label37:
        $r9 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r9);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void decrStackSize(int)>(1);

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label38:
        return;
    }

    public void generateOptimizedNonBooleanEqual(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.codegen.CodeStream, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, org.eclipse.jdt.internal.compiler.codegen.BranchLabel, boolean)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression $r2, $r5, $r7, $r8, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r23;
        boolean $z0, z1, $z2, $z3;
        org.eclipse.jdt.internal.compiler.impl.Constant $r3, $r4, $r21, $r22;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r6;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r9, r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r10 := @parameter2: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r9 := @parameter3: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        z1 := @parameter4: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r4 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r3 == $r4 goto label03;

        $r18 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i11 = $r18.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i12 = $i11 & 255;

        $i13 = $i12 >> 4;

        if $i13 != 10 goto label03;

        $i14 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        if $i14 != 0 goto label03;

        $r19 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r0, z1);

        if z1 == 0 goto label02;

        if r9 != null goto label01;

        if r10 == null goto label02;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label02;

     label01:
        if r10 != null goto label02;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

     label02:
        $i15 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i15);

        return;

     label03:
        $r20 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r21 = $r20.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.impl.Constant constant>;

        $r22 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        if $r21 == $r22 goto label06;

        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i7 = $r16.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i8 = $i7 & 255;

        $i9 = $i8 >> 4;

        if $i9 != 10 goto label06;

        $i10 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        if $i10 != 0 goto label06;

        $r17 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r17.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r0, z1);

        if z1 == 0 goto label05;

        if r9 != null goto label04;

        if r10 == null goto label05;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label05;

     label04:
        if r10 != null goto label05;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

     label05:
        $i16 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i16);

        return;

     label06:
        $r23 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $z3 = $r23 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z3 == 0 goto label10;

        $r14 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $z2 = $r14 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z2 == 0 goto label07;

        if z1 == 0 goto label09;

        if r9 != null goto label09;

        if r10 == null goto label09;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label09;

     label07:
        $r15 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r0, z1);

        if z1 == 0 goto label09;

        if r9 != null goto label08;

        if r10 == null goto label09;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label09;

     label08:
        if r10 != null goto label09;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnonnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

     label09:
        $i17 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i17);

        return;

     label10:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $z0 = $r5 instanceof org.eclipse.jdt.internal.compiler.ast.NullLiteral;

        if $z0 == 0 goto label13;

        $r13 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r0, z1);

        if z1 == 0 goto label12;

        if r9 != null goto label11;

        if r10 == null goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label12;

     label11:
        if r10 != null goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnonnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

     label12:
        $i18 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i18);

        return;

     label13:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r0, z1);

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r6, r0, z1);

        if z1 == 0 goto label25;

        if r9 != null goto label19;

        if r10 == null goto label25;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i4 = $r12.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i5 = $i4 & 255;

        $i6 = $i5 >> 4;

        tableswitch($i6)
        {
            case 7: goto label16;
            case 8: goto label17;
            case 9: goto label15;
            case 10: goto label14;
            default: goto label18;
        };

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label25;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fcmpl()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label25;

     label16:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lcmp()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label25;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dcmpl()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label25;

     label18:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_acmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r10);

        goto label25;

     label19:
        if r10 != null goto label25;

        $r11 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i1 = $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i2 = $i1 & 255;

        $i3 = $i2 >> 4;

        tableswitch($i3)
        {
            case 7: goto label22;
            case 8: goto label23;
            case 9: goto label21;
            case 10: goto label20;
            default: goto label24;
        };

     label20:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_icmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

        goto label25;

     label21:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fcmpl()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

        goto label25;

     label22:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lcmp()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

        goto label25;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dcmpl()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

        goto label25;

     label24:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void if_acmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r9);

     label25:
        $i19 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int sourceStart>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i0, $i19);

        return;
    }

    public boolean isCompactableOperation()
    {
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        return 0;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        byte $b1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r4, $r7, r12, $r30, $r32, r43, r44, $r50, $r51;
        org.eclipse.jdt.internal.compiler.impl.Constant $r8, $r10, $r35, $r53;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r9;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        long $l0;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r39, $r40;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r0;
        org.eclipse.jdt.internal.compiler.ast.CastExpression $r15, $r18, $r20, $r23;
        int[][] $r27;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r13, $r16, $r36, $r54;
        org.eclipse.jdt.internal.compiler.ast.Expression $r1, $r3, $r5, $r6, $r11, $r14, $r17, $r19, $r21, $r22, $r24, $r29, $r31, $r33, $r34, $r41, $r42, $r47, $r48, $r49;
        int[] $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15, z17, $z18, $z19;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, i23, i24, $i25, $i26, $i27;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r46;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r25, $r26, $r37, $r38, $r45, $r52;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $z0 = $r1 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z0 == 0 goto label01;

        $r42 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i20 = $r42.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i21 = $i20 | 32;

        $r42.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i21;

     label01:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r2);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $z1 = $r5 instanceof org.eclipse.jdt.internal.compiler.ast.CastExpression;

        if $z1 == 0 goto label02;

        $r41 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i18 = $r41.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i19 = $i18 | 32;

        $r41.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits> = $i19;

     label02:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r2);

        if $r4 == null goto label03;

        if $r7 != null goto label04;

     label03:
        $r8 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r8;

        return null;

     label04:
        $r9 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $l0 = $r9.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long sourceLevel>;

        $b1 = $l0 cmp 3211264L;

        $i27 = (int) $b1;

        if $i27 < 0 goto label05;

        $z12 = 1;

        goto label06;

     label05:
        $z12 = 0;

     label06:
        r43 = $r4;

        r44 = $r7;

        if $z12 == 0 goto label08;

        $r37 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if $r4 == $r37 goto label07;

        $z10 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z10 == 0 goto label07;

        $z11 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z11 != 0 goto label08;

        $r40 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        r44 = virtualinvoke $r40.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r7);

        goto label08;

     label07:
        $r38 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if $r7 == $r38 goto label08;

        $z9 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z9 == 0 goto label08;

        $r39 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment()>();

        r43 = virtualinvoke $r39.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.TypeBinding computeBoxingType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r4);

     label08:
        $z13 = virtualinvoke r43.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z13 == 0 goto label12;

        $z8 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z8 == 0 goto label12;

        i22 = r43.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        i23 = r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $r27 = <org.eclipse.jdt.internal.compiler.ast.EqualExpression: int[][] OperatorSignatures>;

        $r28 = $r27[18];

        $i6 = i22 << 4;

        $i7 = $i6 + i23;

        i24 = $r28[$i7];

        $r29 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i8 = i24 >>> 16;

        $i9 = $i8 & 15;

        $r30 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding wellKnownType(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r2, $i9);

        virtualinvoke $r29.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r30, $r4);

        $r31 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i10 = i24 >>> 8;

        $i11 = $i10 & 15;

        $r32 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding wellKnownType(org.eclipse.jdt.internal.compiler.lookup.Scope,int)>(r2, $i11);

        virtualinvoke $r31.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r32, $r7);

        $i13 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits>;

        $i12 = i24 & 15;

        $i14 = $i13 | $i12;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: int bits> = $i14;

        $i15 = i24 & 15;

        if $i15 != 0 goto label09;

        $r35 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r35;

        $r36 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r36.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidOperator(org.eclipse.jdt.internal.compiler.ast.BinaryExpression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r43, r44);

        return null;

     label09:
        if $z0 != 0 goto label10;

        if $z1 == 0 goto label11;

     label10:
        $r34 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i17 = r43.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i16 = r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.CastExpression: void checkNeedForArgumentCasts(org.eclipse.jdt.internal.compiler.lookup.BlockScope,int,int,org.eclipse.jdt.internal.compiler.ast.Expression,int,boolean,org.eclipse.jdt.internal.compiler.ast.Expression,int,boolean)>(r2, 18, i24, $r34, $i17, $z0, $r33, $i16, $z1);

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void computeConstant(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r43, r44);

        $r45 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r45;

        return $r45;

     label12:
        $z2 = virtualinvoke r43.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z2 == 0 goto label13;

        $r26 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r43 != $r26 goto label30;

     label13:
        $z3 = virtualinvoke r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z3 == 0 goto label14;

        $r25 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r44 != $r25 goto label30;

     label14:
        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, r43, r44, null);

        if $z4 != 0 goto label15;

        $z7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, r44, r43, null);

        if $z7 == 0 goto label30;

     label15:
        $i2 = r44.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i2 != 11 goto label16;

        $i5 = r43.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i5 != 11 goto label16;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: void computeConstant(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r43, r44);

        goto label17;

     label16:
        $r10 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r10;

     label17:
        $r46 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getJavaLangObject()>();

        $r47 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r47.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r46, r43);

        $r48 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r48.<org.eclipse.jdt.internal.compiler.ast.Expression: void computeConversion(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2, $r46, r44);

        $r49 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $i25 = $r49.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i26 = $i25 & 16384;

        if $i26 == 0 goto label18;

        $z14 = 1;

        goto label19;

     label18:
        $z14 = 0;

     label19:
        z15 = $z14;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $i3 = $r11.<org.eclipse.jdt.internal.compiler.ast.Expression: int bits>;

        $i4 = $i3 & 16384;

        if $i4 == 0 goto label20;

        $z19 = 1;

        $z18 = 1;

        goto label21;

     label20:
        $z19 = 0;

        $z18 = 0;

     label21:
        z17 = $z18;

        if z15 != 0 goto label22;

        if $z19 == 0 goto label29;

     label22:
        if z15 == 0 goto label23;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r23 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r22;

        $r24 = $r23.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r50 = $r24.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        goto label24;

     label23:
        $r50 = r43;

     label24:
        r12 = $r50;

        if z17 == 0 goto label25;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r20 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r19;

        $r21 = $r20.<org.eclipse.jdt.internal.compiler.ast.CastExpression: org.eclipse.jdt.internal.compiler.ast.Expression expression>;

        $r51 = $r21.<org.eclipse.jdt.internal.compiler.ast.Expression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType>;

        goto label26;

     label25:
        $r51 = r44;

     label26:
        $z5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, r12, $r51, null);

        if $z5 != 0 goto label27;

        $z6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: boolean checkCastTypesCompatibility(org.eclipse.jdt.internal.compiler.lookup.Scope,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.Expression)>(r2, $r51, r12, null);

        if $z6 == 0 goto label29;

     label27:
        if z15 == 0 goto label28;

        $r16 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r17 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        $r18 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r17;

        virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r18);

     label28:
        if z17 == 0 goto label29;

        $r13 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r14 = r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        $r15 = (org.eclipse.jdt.internal.compiler.ast.CastExpression) $r14;

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryCast(org.eclipse.jdt.internal.compiler.ast.CastExpression)>($r15);

     label29:
        $r52 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding BOOLEAN>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolvedType> = $r52;

        return $r52;

     label30:
        $r53 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        r0.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.impl.Constant constant> = $r53;

        $r54 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r54.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void notCompatibleTypesError(org.eclipse.jdt.internal.compiler.ast.EqualExpression,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0, r43, r44);

        return null;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Expression $r3, $r4;
        org.eclipse.jdt.internal.compiler.ast.EqualExpression r1;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.EqualExpression;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.EqualExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label1;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression left>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.EqualExpression: org.eclipse.jdt.internal.compiler.ast.Expression right>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.Expression: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.EqualExpression,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }
}
