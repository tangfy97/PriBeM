final class org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState extends java.lang.Object
{
    final java.util.Map definitions;
    final java.util.Map references;
    final java.util.Set undergoingResolution;
    final java.util.List deferredCompiles;

    void <init>(java.util.Map)
    {
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState r0;
        java.util.TreeMap $r1;
        java.util.Map r4;
        java.util.TreeSet $r2;
        java.util.ArrayList $r3;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState;

        r4 := @parameter0: java.util.Map;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.TreeMap;

        specialinvoke $r1.<java.util.TreeMap: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState: java.util.Map references> = $r1;

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState: java.util.Set undergoingResolution> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState: java.util.List deferredCompiles> = $r3;

        r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState: java.util.Map definitions> = r4;

        return;
    }

    org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment lookupDefinition(java.lang.String) throws org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException
    {
        org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException $r5;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState r0;
        java.util.Map $r2;
        org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment r4;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment$CompilerState: java.util.Map definitions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (org.waveprotocol.wave.model.experimental.schema.IntermediateSchemaFragment) $r3;

        if r4 != null goto label1;

        $r5 = new org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Reference to undefined pattern definition: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<org.waveprotocol.wave.model.experimental.schema.InvalidSchemaException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        return r4;
    }
}
