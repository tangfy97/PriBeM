public abstract class org.codehaus.jackson.JsonStreamContext extends java.lang.Object
{
    protected static final int TYPE_ROOT;
    protected static final int TYPE_ARRAY;
    protected static final int TYPE_OBJECT;
    protected int _type;
    protected int _index;

    public void <init>(int)
    {
        int i0, $i2;
        org.codehaus.jackson.JsonStreamContext r0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.JsonStreamContext: int _type> = i0;

        $i2 = (int) -1;

        r0.<org.codehaus.jackson.JsonStreamContext: int _index> = $i2;

        return;
    }

    public abstract org.codehaus.jackson.JsonStreamContext getParent();

    public final boolean inArray()
    {
        int $i0;
        org.codehaus.jackson.JsonStreamContext r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _type>;

        if $i0 != 1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean inRoot()
    {
        int $i0;
        org.codehaus.jackson.JsonStreamContext r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _type>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final boolean inObject()
    {
        int $i0;
        org.codehaus.jackson.JsonStreamContext r0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _type>;

        if $i0 != 2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public final java.lang.String getTypeDesc()
    {
        int $i0;
        org.codehaus.jackson.JsonStreamContext r0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _type>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        return "ROOT";

     label2:
        return "ARRAY";

     label3:
        return "OBJECT";

     label4:
        return "?";
    }

    public final int getEntryCount()
    {
        int $i0, $i1;
        org.codehaus.jackson.JsonStreamContext r0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _index>;

        $i1 = $i0 + 1;

        return $i1;
    }

    public final int getCurrentIndex()
    {
        int $i0, $i1;
        org.codehaus.jackson.JsonStreamContext r0;

        r0 := @this: org.codehaus.jackson.JsonStreamContext;

        $i0 = r0.<org.codehaus.jackson.JsonStreamContext: int _index>;

        if $i0 >= 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = r0.<org.codehaus.jackson.JsonStreamContext: int _index>;

     label2:
        return $i1;
    }

    public abstract java.lang.String getCurrentName();

    public static void <clinit>()
    {
        <org.codehaus.jackson.JsonStreamContext: int TYPE_OBJECT> = 2;

        <org.codehaus.jackson.JsonStreamContext: int TYPE_ARRAY> = 1;

        <org.codehaus.jackson.JsonStreamContext: int TYPE_ROOT> = 0;

        return;
    }
}
