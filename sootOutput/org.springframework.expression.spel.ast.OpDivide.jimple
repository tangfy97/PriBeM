public class org.springframework.expression.spel.ast.OpDivide extends org.springframework.expression.spel.ast.Operator
{

    public transient void <init>(int, org.springframework.expression.spel.ast.SpelNodeImpl[])
    {
        int i0;
        org.springframework.expression.spel.ast.OpDivide r0;
        org.springframework.expression.spel.ast.SpelNodeImpl[] r1;

        r0 := @this: org.springframework.expression.spel.ast.OpDivide;

        i0 := @parameter0: int;

        r1 := @parameter1: org.springframework.expression.spel.ast.SpelNodeImpl[];

        specialinvoke r0.<org.springframework.expression.spel.ast.Operator: void <init>(java.lang.String,int,org.springframework.expression.spel.ast.SpelNodeImpl[])>("/", i0, r1);

        return;
    }

    public org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState) throws org.springframework.expression.EvaluationException
    {
        java.lang.Integer $r18;
        org.springframework.expression.spel.ast.OpDivide r0;
        java.lang.Long $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.expression.spel.ExpressionState r2;
        org.springframework.expression.spel.ast.SpelNodeImpl $r1, $r5;
        java.lang.Double $r14;
        org.springframework.expression.Operation $r8;
        long $l0, $l1, $l2;
        org.springframework.core.convert.TypeDescriptor $r11;
        int $i3, $i4, $i5;
        org.springframework.expression.TypedValue $r3, $r6, $r9, $r10, $r13, $r15, $r17;
        java.lang.Number r12, r19;
        double $d0, $d1, $d2;
        java.lang.Object $r4, $r7;

        r0 := @this: org.springframework.expression.spel.ast.OpDivide;

        r2 := @parameter0: org.springframework.expression.spel.ExpressionState;

        $r1 = virtualinvoke r0.<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.spel.ast.SpelNodeImpl getLeftOperand()>();

        $r3 = virtualinvoke $r1.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r2);

        $r4 = virtualinvoke $r3.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        $r5 = virtualinvoke r0.<org.springframework.expression.spel.ast.OpDivide: org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()>();

        $r6 = virtualinvoke $r5.<org.springframework.expression.spel.ast.SpelNodeImpl: org.springframework.expression.TypedValue getValueInternal(org.springframework.expression.spel.ExpressionState)>(r2);

        $r7 = virtualinvoke $r6.<org.springframework.expression.TypedValue: java.lang.Object getValue()>();

        $z0 = $r4 instanceof java.lang.Number;

        if $z0 == 0 goto label5;

        $z1 = $r7 instanceof java.lang.Number;

        if $z1 == 0 goto label5;

        r19 = (java.lang.Number) $r4;

        r12 = (java.lang.Number) $r7;

        $z2 = r19 instanceof java.lang.Double;

        if $z2 != 0 goto label1;

        $z3 = r12 instanceof java.lang.Double;

        if $z3 == 0 goto label2;

     label1:
        $r13 = new org.springframework.expression.TypedValue;

        $d0 = virtualinvoke r19.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r12.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 / $d1;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d2);

        specialinvoke $r13.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r14);

        return $r13;

     label2:
        $z4 = r19 instanceof java.lang.Long;

        if $z4 != 0 goto label3;

        $z5 = r12 instanceof java.lang.Long;

        if $z5 == 0 goto label4;

     label3:
        $r15 = new org.springframework.expression.TypedValue;

        $l0 = virtualinvoke r19.<java.lang.Number: long longValue()>();

        $l1 = virtualinvoke r12.<java.lang.Number: long longValue()>();

        $l2 = $l0 / $l1;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        specialinvoke $r15.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r16);

        return $r15;

     label4:
        $r17 = new org.springframework.expression.TypedValue;

        $i3 = virtualinvoke r19.<java.lang.Number: int intValue()>();

        $i4 = virtualinvoke r12.<java.lang.Number: int intValue()>();

        $i5 = $i3 / $i4;

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i5);

        specialinvoke $r17.<org.springframework.expression.TypedValue: void <init>(java.lang.Object)>($r18);

        return $r17;

     label5:
        $r8 = <org.springframework.expression.Operation: org.springframework.expression.Operation DIVIDE>;

        $r9 = virtualinvoke r2.<org.springframework.expression.spel.ExpressionState: org.springframework.expression.TypedValue operate(org.springframework.expression.Operation,java.lang.Object,java.lang.Object)>($r8, $r4, $r7);

        $r10 = new org.springframework.expression.TypedValue;

        $r11 = staticinvoke <org.springframework.core.convert.TypeDescriptor: org.springframework.core.convert.TypeDescriptor forObject(java.lang.Object)>($r9);

        specialinvoke $r10.<org.springframework.expression.TypedValue: void <init>(java.lang.Object,org.springframework.core.convert.TypeDescriptor)>($r9, $r11);

        return $r10;
    }
}
