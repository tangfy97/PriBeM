public class org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement extends org.eclipse.jdt.internal.compiler.ast.ReturnStatement
{

    public void <init>(int, int)
    {
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r0;
        int i0, i1, $i2, $i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.ReturnStatement: void <init>(org.eclipse.jdt.internal.compiler.ast.Expression,int,int)>(null, i0, i1);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int bits>;

        $i3 = $i2 | 294912;

        r0.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int bits> = $i3;

        return;
    }

    public void resolve(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r3, $r6;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r1;
        org.eclipse.jdt.internal.compiler.impl.ReferenceContext $r2, $r7;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r10;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r9;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r5;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r8;

        r4 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        $r2 = $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $z0 = $r2 instanceof org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        if $z0 == 0 goto label2;

        $r7 = $r1.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.ReferenceContext referenceContext>;

        $r8 = (org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration) $r7;

        $r9 = $r8.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        if $r9 != null goto label1;

        $r10 = null;

        goto label3;

     label1:
        $r10 = $r9.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        goto label3;

     label2:
        $r10 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

     label3:
        if $r10 == null goto label4;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r10 != $r5 goto label5;

     label4:
        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i1 = r4.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int sourceStart>;

        $i0 = r4.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int sourceEnd>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocUnexpectedTag(int,int)>($i1, $i0);

        goto label6;

     label5:
        $i2 = r4.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int bits>;

        $i3 = $i2 & 262144;

        if $i3 == 0 goto label6;

        $r6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $i4 = r4.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int sourceStart>;

        $i5 = r4.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int sourceEnd>;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: int getDeclarationModifiers()>();

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void javadocEmptyReturnTag(int,int,int)>($i4, $i5, $i6);

     label6:
        return;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        java.lang.StringBuffer r0, $r1, $r3;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r2;
        int i0, $i1, $i2;

        r2 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        $r1 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return");

        $i1 = r2.<org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement: int bits>;

        $i2 = $i1 & 262144;

        if $i2 != 0 goto label1;

        $r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <not empty>");

     label1:
        return r0;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.JavadocReturnStatement,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }
}
