public class org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder extends java.lang.Object implements org.apache.lucene.queryparser.xml.QueryBuilder
{
    private final org.apache.lucene.queryparser.xml.QueryBuilder factory;

    public void <init>(org.apache.lucene.queryparser.xml.QueryBuilder)
    {
        org.apache.lucene.queryparser.xml.QueryBuilder r1;
        org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.xml.QueryBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder: org.apache.lucene.queryparser.xml.QueryBuilder factory> = r1;

        return;
    }

    public org.apache.lucene.search.Query getQuery(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.search.Query $r10;
        org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder r8;
        org.apache.lucene.queryparser.xml.QueryBuilder $r9;
        org.w3c.dom.Node $r3;
        int $i0, $i1, i2;
        java.lang.String $r4;
        org.apache.lucene.search.BooleanClause$Occur $r6;
        boolean $z0, $z1;
        org.w3c.dom.NodeList $r2;
        org.apache.lucene.search.BooleanClause $r11;
        org.w3c.dom.Element r1, r5, $r7;
        org.apache.lucene.search.BooleanQuery $r0;
        float $f0;

        r8 := @this: org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new org.apache.lucene.search.BooleanQuery;

        $z0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: boolean getAttribute(org.w3c.dom.Element,java.lang.String,boolean)>(r1, "disableCoord", 0);

        specialinvoke $r0.<org.apache.lucene.search.BooleanQuery: void <init>(boolean)>($z0);

        $i0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: int getAttribute(org.w3c.dom.Element,java.lang.String,int)>(r1, "minimumNumberShouldMatch", 0);

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void setMinimumNumberShouldMatch(int)>($i0);

        $f0 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: float getAttribute(org.w3c.dom.Element,java.lang.String,float)>(r1, "boost", 1.0F);

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void setBoost(float)>($f0);

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.NodeList getChildNodes()>();

        i2 = 0;

     label1:
        $i1 = interfaceinvoke $r2.<org.w3c.dom.NodeList: int getLength()>();

        if i2 >= $i1 goto label3;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i2);

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("Clause");

        if $z1 == 0 goto label2;

        r5 = (org.w3c.dom.Element) $r3;

        $r6 = staticinvoke <org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder: org.apache.lucene.search.BooleanClause$Occur getOccursValue(org.w3c.dom.Element)>(r5);

        $r7 = staticinvoke <org.apache.lucene.queryparser.xml.DOMUtils: org.w3c.dom.Element getFirstChildOrFail(org.w3c.dom.Element)>(r5);

        $r9 = r8.<org.apache.lucene.queryparser.xml.builders.BooleanQueryBuilder: org.apache.lucene.queryparser.xml.QueryBuilder factory>;

        $r10 = interfaceinvoke $r9.<org.apache.lucene.queryparser.xml.QueryBuilder: org.apache.lucene.search.Query getQuery(org.w3c.dom.Element)>($r7);

        $r11 = new org.apache.lucene.search.BooleanClause;

        specialinvoke $r11.<org.apache.lucene.search.BooleanClause: void <init>(org.apache.lucene.search.Query,org.apache.lucene.search.BooleanClause$Occur)>($r10, $r6);

        virtualinvoke $r0.<org.apache.lucene.search.BooleanQuery: void add(org.apache.lucene.search.BooleanClause)>($r11);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return $r0;
    }

    static org.apache.lucene.search.BooleanClause$Occur getOccursValue(org.w3c.dom.Element) throws org.apache.lucene.queryparser.xml.ParserException
    {
        org.apache.lucene.queryparser.xml.ParserException $r6;
        java.lang.String $r1, $r2, $r3, $r4, $r5, $r10;
        org.apache.lucene.search.BooleanClause$Occur r11;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r7, $r8, $r9;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("occurs");

        r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        $r2 = "must";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST>;

        goto label5;

     label1:
        $r3 = "mustNot";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z1 == 0 goto label2;

        r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur MUST_NOT>;

        goto label5;

     label2:
        $r4 = "should";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r1);

        if $z2 != 0 goto label3;

        $r5 = "";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label4;

     label3:
        r11 = <org.apache.lucene.search.BooleanClause$Occur: org.apache.lucene.search.BooleanClause$Occur SHOULD>;

        goto label5;

     label4:
        if $r1 == null goto label5;

        $r6 = new org.apache.lucene.queryparser.xml.ParserException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid value for \"occurs\" attribute of clause:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.lucene.queryparser.xml.ParserException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label5:
        return r11;
    }
}
