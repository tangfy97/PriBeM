public class org.apache.tika.io.IOUtils extends java.lang.Object
{
    private static final int DEFAULT_BUFFER_SIZE;

    public void <init>()
    {
        org.apache.tika.io.IOUtils r0;

        r0 := @this: org.apache.tika.io.IOUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void closeQuietly(java.io.Reader)
    {
        java.io.IOException $r1;
        java.io.Reader r0;

        r0 := @parameter0: java.io.Reader;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.Reader: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.nio.channels.Channel)
    {
        java.io.IOException $r1;
        java.nio.channels.Channel r0;

        r0 := @parameter0: java.nio.channels.Channel;

     label1:
        if r0 == null goto label2;

        interfaceinvoke r0.<java.nio.channels.Channel: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.io.Writer)
    {
        java.io.Writer r0;
        java.io.IOException $r1;

        r0 := @parameter0: java.io.Writer;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.Writer: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.io.InputStream)
    {
        java.io.IOException $r1;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.InputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static void closeQuietly(java.io.OutputStream)
    {
        java.io.OutputStream r0;
        java.io.IOException $r1;

        r0 := @parameter0: java.io.OutputStream;

     label1:
        if r0 == null goto label2;

        virtualinvoke r0.<java.io.OutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static byte[] toByteArray(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        java.io.ByteArrayOutputStream $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static byte[] toByteArray(java.io.Reader) throws java.io.IOException
    {
        byte[] $r2;
        java.io.Reader r1;
        java.io.ByteArrayOutputStream $r0;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.Reader,java.io.OutputStream)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r2;
    }

    public static byte[] toByteArray(java.io.Reader, java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r0;
        java.io.Reader r1;
        java.lang.String r2;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.Reader,java.io.OutputStream,java.lang.String)>(r1, $r0, r2);

        $r3 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;
    }

    public static byte[] toByteArray(java.lang.String) throws java.io.IOException
    {
        byte[] $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        return $r1;
    }

    public static char[] toCharArray(java.io.InputStream) throws java.io.IOException
    {
        char[] $r2;
        java.io.CharArrayWriter $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.CharArrayWriter;

        specialinvoke $r0.<java.io.CharArrayWriter: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.InputStream,java.io.Writer)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.CharArrayWriter: char[] toCharArray()>();

        return $r2;
    }

    public static char[] toCharArray(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        char[] $r3;
        java.io.CharArrayWriter $r0;
        java.lang.String r2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.CharArrayWriter;

        specialinvoke $r0.<java.io.CharArrayWriter: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.InputStream,java.io.Writer,java.lang.String)>(r1, $r0, r2);

        $r3 = virtualinvoke $r0.<java.io.CharArrayWriter: char[] toCharArray()>();

        return $r3;
    }

    public static char[] toCharArray(java.io.Reader) throws java.io.IOException
    {
        char[] $r2;
        java.io.CharArrayWriter $r0;
        java.io.Reader r1;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.CharArrayWriter;

        specialinvoke $r0.<java.io.CharArrayWriter: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.Reader,java.io.Writer)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.CharArrayWriter: char[] toCharArray()>();

        return $r2;
    }

    public static java.lang.String toString(java.io.InputStream) throws java.io.IOException
    {
        java.lang.String $r2;
        java.io.StringWriter $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.InputStream,java.io.Writer)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toString(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.io.StringWriter $r0;
        java.lang.String r2, $r3;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.InputStream,java.io.Writer,java.lang.String)>(r1, $r0, r2);

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String toString(java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r1;
        java.lang.String $r2;
        java.io.StringWriter $r0;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.Reader,java.io.Writer)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String toString(byte[]) throws java.io.IOException
    {
        byte[] r1;
        java.lang.String $r0;

        r1 := @parameter0: byte[];

        $r0 = new java.lang.String;

        specialinvoke $r0.<java.lang.String: void <init>(byte[],java.lang.String)>(r1, "UTF-8");

        return $r0;
    }

    public static java.lang.String toString(byte[], java.lang.String) throws java.io.IOException
    {
        byte[] r2;
        java.lang.String r0, $r1, $r3;

        r2 := @parameter0: byte[];

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, "UTF-8");

        return $r3;

     label1:
        $r1 = new java.lang.String;

        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>(r2, r0);

        return $r1;
    }

    public static java.util.List readLines(java.io.InputStream) throws java.io.IOException
    {
        java.util.List $r2;
        java.io.InputStreamReader $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8");

        $r2 = staticinvoke <org.apache.tika.io.IOUtils: java.util.List readLines(java.io.Reader)>($r0);

        return $r2;
    }

    public static java.util.List readLines(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        java.util.List $r3, $r4;
        java.lang.String r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r0 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r4 = staticinvoke <org.apache.tika.io.IOUtils: java.util.List readLines(java.io.InputStream)>(r2);

        return $r4;

     label1:
        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, r0);

        $r3 = staticinvoke <org.apache.tika.io.IOUtils: java.util.List readLines(java.io.Reader)>($r1);

        return $r3;
    }

    public static java.util.List readLines(java.io.Reader) throws java.io.IOException
    {
        java.io.BufferedReader $r0;
        java.io.Reader r1;
        java.lang.String r3;
        java.util.ArrayList $r2;

        r1 := @parameter0: java.io.Reader;

        $r0 = new java.io.BufferedReader;

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>(r1);

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r3 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

     label1:
        if r3 == null goto label2;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r3);

        r3 = virtualinvoke $r0.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label1;

     label2:
        return $r2;
    }

    public static java.io.InputStream toInputStream(java.lang.CharSequence)
    {
        java.lang.String $r1;
        java.lang.CharSequence r0;
        java.io.InputStream $r2;

        r0 := @parameter0: java.lang.CharSequence;

        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        $r2 = staticinvoke <org.apache.tika.io.IOUtils: java.io.InputStream toInputStream(java.lang.String)>($r1);

        return $r2;
    }

    public static java.io.InputStream toInputStream(java.lang.CharSequence, java.lang.String) throws java.io.IOException
    {
        java.lang.CharSequence r0;
        java.lang.String $r1, r2;
        java.io.InputStream $r3;

        r0 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        $r3 = staticinvoke <org.apache.tika.io.IOUtils: java.io.InputStream toInputStream(java.lang.String,java.lang.String)>($r1, r2);

        return $r3;
    }

    public static java.io.InputStream toInputStream(java.lang.String)
    {
        byte[] $r1;
        java.io.ByteArrayInputStream $r2;
        java.lang.String r0;
        java.lang.AssertionError $r4;
        java.io.UnsupportedEncodingException $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>("UTF-8 not supported.");

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public static java.io.InputStream toInputStream(java.lang.String, java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        java.io.ByteArrayInputStream $r2;
        java.lang.String r0, r1;

        r1 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r0);

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

     label2:
        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>($r3);

        return $r2;
    }

    public static void write(byte[], java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] r0;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.io.OutputStream;

        if r0 == null goto label1;

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r0);

     label1:
        return;
    }

    public static void write(byte[], java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        byte[] r0;
        java.lang.String $r2;

        r0 := @parameter0: byte[];

        r1 := @parameter1: java.io.Writer;

        if r0 == null goto label1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, "UTF-8");

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r2);

     label1:
        return;
    }

    public static void write(byte[], java.io.Writer, java.lang.String) throws java.io.IOException
    {
        byte[] r0;
        java.io.Writer r2;
        java.lang.String r1, $r3;

        r0 := @parameter0: byte[];

        r2 := @parameter1: java.io.Writer;

        r1 := @parameter2: java.lang.String;

        if r0 == null goto label2;

        if r1 != null goto label1;

        staticinvoke <org.apache.tika.io.IOUtils: void write(byte[],java.io.Writer)>(r0, r2);

        goto label2;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>(r0, r1);

        virtualinvoke r2.<java.io.Writer: void write(java.lang.String)>($r3);

     label2:
        return;
    }

    public static void write(char[], java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        char[] r0;

        r0 := @parameter0: char[];

        r1 := @parameter1: java.io.Writer;

        if r0 == null goto label1;

        virtualinvoke r1.<java.io.Writer: void write(char[])>(r0);

     label1:
        return;
    }

    public static void write(char[], java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r3;
        char[] r0;
        java.lang.String $r2;

        r0 := @parameter0: char[];

        r1 := @parameter1: java.io.OutputStream;

        if r0 == null goto label1;

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r0);

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

     label1:
        return;
    }

    public static void write(char[], java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r4;
        char[] r0;
        java.lang.String r1, $r3;

        r0 := @parameter0: char[];

        r2 := @parameter1: java.io.OutputStream;

        r1 := @parameter2: java.lang.String;

        if r0 == null goto label2;

        if r1 != null goto label1;

        staticinvoke <org.apache.tika.io.IOUtils: void write(char[],java.io.OutputStream)>(r0, r2);

        goto label2;

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>(r0);

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r4);

     label2:
        return;
    }

    public static void write(java.lang.CharSequence, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r2;
        java.lang.String $r1;
        java.lang.CharSequence r0;

        r0 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.io.Writer;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <org.apache.tika.io.IOUtils: void write(java.lang.String,java.io.Writer)>($r1, r2);

     label1:
        return;
    }

    public static void write(java.lang.CharSequence, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        java.lang.String $r1;
        java.lang.CharSequence r0;

        r0 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.io.OutputStream;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <org.apache.tika.io.IOUtils: void write(java.lang.String,java.io.OutputStream)>($r1, r2);

     label1:
        return;
    }

    public static void write(java.lang.CharSequence, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        java.lang.CharSequence r0;
        java.lang.String $r1, r3;

        r0 := @parameter0: java.lang.CharSequence;

        r2 := @parameter1: java.io.OutputStream;

        r3 := @parameter2: java.lang.String;

        if r0 == null goto label1;

        $r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>();

        staticinvoke <org.apache.tika.io.IOUtils: void write(java.lang.String,java.io.OutputStream,java.lang.String)>($r1, r2, r3);

     label1:
        return;
    }

    public static void write(java.lang.String, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.Writer;

        if r0 == null goto label1;

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>(r0);

     label1:
        return;
    }

    public static void write(java.lang.String, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.io.OutputStream;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

     label1:
        return;
    }

    public static void write(java.lang.String, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r3;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.OutputStream;

        r1 := @parameter2: java.lang.String;

        if r0 == null goto label2;

        if r1 != null goto label1;

        staticinvoke <org.apache.tika.io.IOUtils: void write(java.lang.String,java.io.OutputStream)>(r0, r2);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r3);

     label2:
        return;
    }

    public static void write(java.lang.StringBuffer, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r1;
        java.lang.String $r2;
        java.lang.StringBuffer r0;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.io.Writer;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r1.<java.io.Writer: void write(java.lang.String)>($r2);

     label1:
        return;
    }

    public static void write(java.lang.StringBuffer, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r3;
        java.lang.StringBuffer r0;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.StringBuffer;

        r1 := @parameter1: java.io.OutputStream;

        if r0 == null goto label1;

        $r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r3);

     label1:
        return;
    }

    public static void write(java.lang.StringBuffer, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] $r4;
        java.lang.StringBuffer r0;
        java.lang.String r1, $r3;

        r0 := @parameter0: java.lang.StringBuffer;

        r2 := @parameter1: java.io.OutputStream;

        r1 := @parameter2: java.lang.String;

        if r0 == null goto label2;

        if r1 != null goto label1;

        staticinvoke <org.apache.tika.io.IOUtils: void write(java.lang.StringBuffer,java.io.OutputStream)>(r0, r2);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>(r1);

        virtualinvoke r2.<java.io.OutputStream: void write(byte[])>($r4);

     label2:
        return;
    }

    public static int copy(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte $b1;
        int $i2, $i3, $i5;
        long $l0;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        r1 := @parameter1: java.io.OutputStream;

        $l0 = staticinvoke <org.apache.tika.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>(r0, r1);

        $b1 = $l0 cmp 2147483647L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        $i2 = (int) $l0;

        return $i2;
    }

    public static long copyLarge(java.io.InputStream, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        byte[] r0;
        int $i0, $i4;
        long $l1, l2;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.OutputStream;

        r0 = newarray (byte)[4096];

        l2 = 0L;

     label1:
        $i0 = virtualinvoke r1.<java.io.InputStream: int read(byte[])>(r0);

        $i4 = (int) -1;

        if $i4 == $i0 goto label2;

        virtualinvoke r2.<java.io.OutputStream: void write(byte[],int,int)>(r0, 0, $i0);

        $l1 = (long) $i0;

        l2 = l2 + $l1;

        goto label1;

     label2:
        return l2;
    }

    public static void copy(java.io.InputStream, java.io.Writer) throws java.io.IOException
    {
        java.io.Writer r2;
        java.io.InputStreamReader $r0;
        java.io.InputStream r1;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.Writer;

        $r0 = new java.io.InputStreamReader;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r1, "UTF-8");

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.Reader,java.io.Writer)>($r0, r2);

        return;
    }

    public static void copy(java.io.InputStream, java.io.Writer, java.lang.String) throws java.io.IOException
    {
        java.io.Writer r3;
        java.lang.String r0;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.io.Writer;

        r0 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.InputStream,java.io.Writer)>(r2, r3);

        goto label2;

     label1:
        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, r0);

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.Reader,java.io.Writer)>($r1, r3);

     label2:
        return;
    }

    public static int copy(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        byte $b1;
        java.io.Writer r1;
        int $i2, $i3, $i5;
        long $l0;
        java.io.Reader r0;

        r0 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.io.Writer;

        $l0 = staticinvoke <org.apache.tika.io.IOUtils: long copyLarge(java.io.Reader,java.io.Writer)>(r0, r1);

        $b1 = $l0 cmp 2147483647L;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label1;

        $i5 = (int) -1;

        return $i5;

     label1:
        $i2 = (int) $l0;

        return $i2;
    }

    public static long copyLarge(java.io.Reader, java.io.Writer) throws java.io.IOException
    {
        int $i0, $i4;
        java.io.Writer r2;
        char[] r0;
        long $l1, l2;
        java.io.Reader r1;

        r1 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.io.Writer;

        r0 = newarray (char)[4096];

        l2 = 0L;

     label1:
        $i0 = virtualinvoke r1.<java.io.Reader: int read(char[])>(r0);

        $i4 = (int) -1;

        if $i4 == $i0 goto label2;

        virtualinvoke r2.<java.io.Writer: void write(char[],int,int)>(r0, 0, $i0);

        $l1 = (long) $i0;

        l2 = l2 + $l1;

        goto label1;

     label2:
        return l2;
    }

    public static void copy(java.io.Reader, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.io.OutputStreamWriter $r0;
        java.io.Reader r2;

        r2 := @parameter0: java.io.Reader;

        r1 := @parameter1: java.io.OutputStream;

        $r0 = new java.io.OutputStreamWriter;

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "UTF-8");

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.Reader,java.io.Writer)>(r2, $r0);

        virtualinvoke $r0.<java.io.OutputStreamWriter: void flush()>();

        return;
    }

    public static void copy(java.io.Reader, java.io.OutputStream, java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream r2;
        java.io.OutputStreamWriter $r1;
        java.lang.String r0;
        java.io.Reader r3;

        r3 := @parameter0: java.io.Reader;

        r2 := @parameter1: java.io.OutputStream;

        r0 := @parameter2: java.lang.String;

        if r0 != null goto label1;

        staticinvoke <org.apache.tika.io.IOUtils: void copy(java.io.Reader,java.io.OutputStream)>(r3, r2);

        goto label2;

     label1:
        $r1 = new java.io.OutputStreamWriter;

        specialinvoke $r1.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r2, r0);

        staticinvoke <org.apache.tika.io.IOUtils: int copy(java.io.Reader,java.io.Writer)>(r3, $r1);

        virtualinvoke $r1.<java.io.OutputStreamWriter: void flush()>();

     label2:
        return;
    }

    public static boolean contentEquals(java.io.InputStream, java.io.InputStream) throws java.io.IOException
    {
        java.io.BufferedInputStream $r4, $r5;
        int $i0, $i1, i2, $i4, $i6;
        boolean $z0, $z1, $z2;
        java.io.InputStream r2, r3;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.io.InputStream;

        $z0 = r2 instanceof java.io.BufferedInputStream;

        if $z0 != 0 goto label1;

        $r4 = new java.io.BufferedInputStream;

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r2);

        r2 = $r4;

     label1:
        $z1 = r3 instanceof java.io.BufferedInputStream;

        if $z1 != 0 goto label2;

        $r5 = new java.io.BufferedInputStream;

        specialinvoke $r5.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r3);

        r3 = $r5;

     label2:
        i2 = virtualinvoke r2.<java.io.InputStream: int read()>();

     label3:
        $i4 = (int) -1;

        if $i4 == i2 goto label5;

        $i1 = virtualinvoke r3.<java.io.InputStream: int read()>();

        if i2 == $i1 goto label4;

        return 0;

     label4:
        i2 = virtualinvoke r2.<java.io.InputStream: int read()>();

        goto label3;

     label5:
        $i0 = virtualinvoke r3.<java.io.InputStream: int read()>();

        $i6 = (int) -1;

        if $i0 != $i6 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    public static boolean contentEquals(java.io.Reader, java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r2, r3;
        int $i0, $i1, i2, $i4, $i6;
        java.io.BufferedReader $r4, $r5;
        boolean $z0, $z1, $z2;

        r2 := @parameter0: java.io.Reader;

        r3 := @parameter1: java.io.Reader;

        $z0 = r2 instanceof java.io.BufferedReader;

        if $z0 != 0 goto label1;

        $r4 = new java.io.BufferedReader;

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>(r2);

        r2 = $r4;

     label1:
        $z1 = r3 instanceof java.io.BufferedReader;

        if $z1 != 0 goto label2;

        $r5 = new java.io.BufferedReader;

        specialinvoke $r5.<java.io.BufferedReader: void <init>(java.io.Reader)>(r3);

        r3 = $r5;

     label2:
        i2 = virtualinvoke r2.<java.io.Reader: int read()>();

     label3:
        $i4 = (int) -1;

        if $i4 == i2 goto label5;

        $i1 = virtualinvoke r3.<java.io.Reader: int read()>();

        if i2 == $i1 goto label4;

        return 0;

     label4:
        i2 = virtualinvoke r2.<java.io.Reader: int read()>();

        goto label3;

     label5:
        $i0 = virtualinvoke r3.<java.io.Reader: int read()>();

        $i6 = (int) -1;

        if $i0 != $i6 goto label6;

        $z2 = 1;

        goto label7;

     label6:
        $z2 = 0;

     label7:
        return $z2;
    }

    public static void <clinit>()
    {
        <org.apache.tika.io.IOUtils: int DEFAULT_BUFFER_SIZE> = 4096;

        return;
    }
}
