public abstract class org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider extends java.lang.Object
{
    private java.util.List consumeMediaTypes;
    private java.util.List produceMediaTypes;
    private boolean enableBuffering;
    private boolean enableStreaming;
    private org.apache.cxf.Bus bus;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus $r1, r2;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        r2 := @parameter0: org.apache.cxf.Bus;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: org.apache.cxf.Bus bus>;

        if $r1 == null goto label1;

        r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: org.apache.cxf.Bus bus> = r2;

     label1:
        return;
    }

    public org.apache.cxf.Bus getBus()
    {
        org.apache.cxf.Bus $r1, $r2;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: org.apache.cxf.Bus bus>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: org.apache.cxf.Bus bus>;

        goto label2;

     label1:
        $r2 = staticinvoke <org.apache.cxf.BusFactory: org.apache.cxf.Bus getThreadDefaultBus()>();

     label2:
        return $r2;
    }

    public void setConsumeMediaTypes(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: java.util.List consumeMediaTypes> = r1;

        return;
    }

    public java.util.List getConsumeMediaTypes()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: java.util.List consumeMediaTypes>;

        return $r1;
    }

    public void setProduceMediaTypes(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        r1 := @parameter0: java.util.List;

        r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: java.util.List produceMediaTypes> = r1;

        return;
    }

    public java.util.List getProduceMediaTypes()
    {
        java.util.List $r1;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: java.util.List produceMediaTypes>;

        return $r1;
    }

    public void setEnableBuffering(boolean)
    {
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean enableBuffering> = z0;

        return;
    }

    public boolean getEnableBuffering()
    {
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean enableBuffering>;

        return $z0;
    }

    public void setEnableStreaming(boolean)
    {
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean enableStreaming> = z0;

        return;
    }

    public boolean getEnableStreaming()
    {
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        $z0 = r0.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean enableStreaming>;

        return $z0;
    }

    public void init(java.util.List)
    {
        java.util.List r1;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        r1 := @parameter0: java.util.List;

        return;
    }

    protected boolean isPayloadEmpty(javax.ws.rs.core.HttpHeaders)
    {
        javax.ws.rs.core.MultivaluedMap $r2;
        javax.ws.rs.core.HttpHeaders r0;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r1;
        boolean $z0;

        r1 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        r0 := @parameter0: javax.ws.rs.core.HttpHeaders;

        if r0 == null goto label1;

        $r2 = interfaceinvoke r0.<javax.ws.rs.core.HttpHeaders: javax.ws.rs.core.MultivaluedMap getRequestHeaders()>();

        $z0 = virtualinvoke r1.<org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider: boolean isPayloadEmpty(javax.ws.rs.core.MultivaluedMap)>($r2);

        return $z0;

     label1:
        return 0;
    }

    protected boolean isPayloadEmpty(javax.ws.rs.core.MultivaluedMap)
    {
        long $l0;
        java.lang.NumberFormatException $r4;
        org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider r5;
        javax.ws.rs.core.MultivaluedMap r0;
        byte $b1;
        java.lang.Long $r3;
        int $i2;
        java.lang.Object $r1;
        java.lang.String r2;
        boolean $z0;

        r5 := @this: org.apache.cxf.jaxrs.provider.AbstractConfigurableProvider;

        r0 := @parameter0: javax.ws.rs.core.MultivaluedMap;

        if r0 == null goto label5;

        $r1 = interfaceinvoke r0.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("Content-Length");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label5;

     label1:
        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String)>(r2);

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 > 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;

     label4:
        $r4 := @caughtexception;

     label5:
        return 0;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
    }
}
