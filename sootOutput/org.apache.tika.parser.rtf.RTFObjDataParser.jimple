class org.apache.tika.parser.rtf.RTFObjDataParser extends java.lang.Object
{
    private static final int[] INT_LE_POWS;
    private static final java.lang.String WIN_ASCII;

    void <init>()
    {
        org.apache.tika.parser.rtf.RTFObjDataParser r0;

        r0 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected byte[] parse(byte[], org.apache.tika.metadata.Metadata, java.util.concurrent.atomic.AtomicInteger) throws java.io.IOException
    {
        byte[] r1, $r16, $r17, $r22;
        org.apache.tika.metadata.Metadata r3;
        org.apache.tika.metadata.Property $r4, $r18, $r19, $r20;
        java.io.ByteArrayInputStream $r0, $r14;
        byte $b2;
        java.util.concurrent.atomic.AtomicInteger r15;
        java.util.Locale $r12, $r23;
        org.apache.tika.parser.rtf.RTFObjDataParser r2;
        boolean $z0, $z1, $z2;
        long $l0, $l1, $l6;
        int $i3, $i4, $i5;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r24;
        java.io.IOException $r21;

        r2 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r1 := @parameter0: byte[];

        r3 := @parameter1: org.apache.tika.metadata.Metadata;

        r15 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        $r0 = new java.io.ByteArrayInputStream;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        $l0 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>($r0);

        $r4 = <org.apache.tika.metadata.RTFMetadata: org.apache.tika.metadata.Property EMB_APP_VERSION>;

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r4, $r5);

        $l1 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>($r0);

        $b2 = $l1 cmp 2L;

        if $b2 == 0 goto label01;

        return null;

     label01:
        $r6 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String readLengthPrefixedAnsiString(java.io.InputStream)>($r0);

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $r8 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String readLengthPrefixedAnsiString(java.io.InputStream)>($r0);

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $r10 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String readLengthPrefixedAnsiString(java.io.InputStream)>($r0);

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String trim()>();

        if $r7 == null goto label02;

        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i5 <= 0 goto label02;

        $r20 = <org.apache.tika.metadata.RTFMetadata: org.apache.tika.metadata.Property EMB_CLASS>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r20, $r7);

     label02:
        if $r9 == null goto label03;

        $i4 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i4 <= 0 goto label03;

        $r19 = <org.apache.tika.metadata.RTFMetadata: org.apache.tika.metadata.Property EMB_TOPIC>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r19, $r9);

     label03:
        if $r11 == null goto label04;

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i3 <= 0 goto label04;

        $r18 = <org.apache.tika.metadata.RTFMetadata: org.apache.tika.metadata.Property EMB_ITEM>;

        virtualinvoke r3.<org.apache.tika.metadata.Metadata: void add(org.apache.tika.metadata.Property,java.lang.String)>($r18, $r11);

     label04:
        $l6 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>($r0);

        $r22 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] readBytes(java.io.InputStream,long)>($r0, $l6);

        $r23 = <java.util.Locale: java.util.Locale ROOT>;

        $r24 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r23);

        $z2 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("package");

        if $z2 == 0 goto label05;

        $r17 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] handlePackage(byte[],org.apache.tika.metadata.Metadata)>($r22, r3);

        return $r17;

     label05:
        $r12 = <java.util.Locale: java.util.Locale ROOT>;

        $r13 = virtualinvoke $r7.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r12);

        $z0 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>("pbrush");

        if $z0 == 0 goto label06;

        return $r22;

     label06:
        $r14 = new java.io.ByteArrayInputStream;

        specialinvoke $r14.<java.io.ByteArrayInputStream: void <init>(byte[])>($r22);

        $z1 = staticinvoke <org.apache.poi.poifs.filesystem.NPOIFSFileSystem: boolean hasPOIFSHeader(java.io.InputStream)>($r14);

        if $z1 == 0 goto label10;

     label07:
        $r16 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] handleEmbeddedPOIFS(java.io.InputStream,org.apache.tika.metadata.Metadata,java.util.concurrent.atomic.AtomicInteger)>($r14, r3, r15);

     label08:
        return $r16;

     label09:
        $r21 := @caughtexception;

     label10:
        return $r22;

        catch java.io.IOException from label07 to label08 with label09;
    }

    private byte[] handleEmbeddedPOIFS(java.io.InputStream, org.apache.tika.metadata.Metadata, java.util.concurrent.atomic.AtomicInteger) throws java.io.IOException
    {
        byte[] $r30, r34;
        org.apache.poi.poifs.filesystem.Entry $r18, $r21, $r29;
        org.apache.tika.metadata.Metadata r7;
        java.util.concurrent.atomic.AtomicInteger r10;
        org.apache.tika.parser.rtf.RTFObjDataParser r32;
        org.apache.poi.poifs.filesystem.DocumentEntry $r23, r35;
        boolean $z0;
        java.io.FileNotFoundException $r28;
        org.apache.poi.poifs.filesystem.DirectoryNode $r2;
        java.lang.StringBuilder $r8, $r9, $r11, $r12, $r14;
        org.apache.poi.poifs.filesystem.Ole10Native $r20;
        java.lang.Throwable $r26, $r27;
        java.io.ByteArrayOutputStream $r6, $r25;
        org.apache.poi.poifs.filesystem.Ole10NativeException $r31;
        org.apache.tika.mime.MediaType $r16;
        org.apache.poi.poifs.filesystem.NPOIFSFileSystem $r0, r33;
        int $i0, $i1;
        org.apache.tika.io.TikaInputStream $r24;
        java.lang.String $r13, $r15, $r17;
        org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType $r3, $r4, $r5;
        org.apache.poi.poifs.filesystem.DocumentInputStream $r19, $r22, r36;
        java.io.InputStream r1;

        r32 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r1 := @parameter0: java.io.InputStream;

        r7 := @parameter1: org.apache.tika.metadata.Metadata;

        r10 := @parameter2: java.util.concurrent.atomic.AtomicInteger;

        r33 = null;

        r34 = null;

     label01:
        $r0 = new org.apache.poi.poifs.filesystem.NPOIFSFileSystem;

        specialinvoke $r0.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void <init>(java.io.InputStream)>(r1);

        r33 = $r0;

        $r2 = virtualinvoke $r0.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: org.apache.poi.poifs.filesystem.DirectoryNode getRoot()>();

        if $r2 != null goto label04;

     label02:
        if $r0 == null goto label03;

        virtualinvoke $r0.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void close()>();

     label03:
        return null;

     label04:
        $z0 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryNode: boolean hasEntry(java.lang.String)>("Package");

        if $z0 == 0 goto label05;

        $r21 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("Package");

        $r22 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        $r23 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r21;

        specialinvoke $r22.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>($r23);

        $r24 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream)>($r22);

        $r25 = new java.io.ByteArrayOutputStream;

        specialinvoke $r25.<java.io.ByteArrayOutputStream: void <init>()>();

        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>($r24, $r25);

        r34 = virtualinvoke $r25.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        goto label21;

     label05:
        $r3 = staticinvoke <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType detectType(org.apache.poi.poifs.filesystem.DirectoryEntry)>($r2);

        $r4 = <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType OLE10_NATIVE>;

        if $r3 != $r4 goto label09;

     label06:
        $r20 = staticinvoke <org.apache.poi.poifs.filesystem.Ole10Native: org.apache.poi.poifs.filesystem.Ole10Native createFromEmbeddedOleObject(org.apache.poi.poifs.filesystem.DirectoryNode)>($r2);

        r34 = virtualinvoke $r20.<org.apache.poi.poifs.filesystem.Ole10Native: byte[] getDataBuffer()>();

     label07:
        goto label21;

     label08:
        $r31 := @caughtexception;

        goto label21;

     label09:
        $r5 = <org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType COMP_OBJ>;

        if $r3 != $r5 goto label20;

     label10:
        $r18 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("CONTENTS");

        r35 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r18;

     label11:
        goto label13;

     label12:
        $r28 := @caughtexception;

        $r29 = virtualinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryNode: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>("Contents");

        r35 = (org.apache.poi.poifs.filesystem.DocumentEntry) $r29;

     label13:
        r36 = null;

     label14:
        $r19 = new org.apache.poi.poifs.filesystem.DocumentInputStream;

        specialinvoke $r19.<org.apache.poi.poifs.filesystem.DocumentInputStream: void <init>(org.apache.poi.poifs.filesystem.DocumentEntry)>(r35);

        r36 = $r19;

        $i1 = interfaceinvoke r35.<org.apache.poi.poifs.filesystem.DocumentEntry: int getSize()>();

        $r30 = newarray (byte)[$i1];

        r34 = $r30;

        virtualinvoke $r19.<org.apache.poi.poifs.filesystem.DocumentInputStream: void readFully(byte[])>($r30);

     label15:
        if $r19 == null goto label19;

        virtualinvoke $r19.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

        goto label19;

     label16:
        $r27 := @caughtexception;

     label17:
        if r36 == null goto label18;

        virtualinvoke r36.<org.apache.poi.poifs.filesystem.DocumentInputStream: void close()>();

     label18:
        throw $r27;

     label19:
        goto label21;

     label20:
        $r6 = new java.io.ByteArrayOutputStream;

        specialinvoke $r6.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r1.<java.io.InputStream: void reset()>();

        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>(r1, $r6);

        r34 = virtualinvoke $r6.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("file_");

        $i0 = virtualinvoke r10.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r13 = virtualinvoke $r3.<org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: java.lang.String getExtension()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r15);

        $r16 = virtualinvoke $r3.<org.apache.tika.parser.microsoft.OfficeParser$POIFSDocumentType: org.apache.tika.mime.MediaType getType()>();

        $r17 = virtualinvoke $r16.<org.apache.tika.mime.MediaType: java.lang.String toString()>();

        virtualinvoke r7.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("Content-Type", $r17);

     label21:
        if $r0 == null goto label25;

        virtualinvoke $r0.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void close()>();

        goto label25;

     label22:
        $r26 := @caughtexception;

     label23:
        if r33 == null goto label24;

        virtualinvoke r33.<org.apache.poi.poifs.filesystem.NPOIFSFileSystem: void close()>();

     label24:
        throw $r26;

     label25:
        return r34;

        catch org.apache.poi.poifs.filesystem.Ole10NativeException from label06 to label07 with label08;
        catch java.io.FileNotFoundException from label10 to label11 with label12;
        catch java.lang.Throwable from label14 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
        catch java.lang.Throwable from label01 to label02 with label22;
        catch java.lang.Throwable from label04 to label21 with label22;
        catch java.lang.Throwable from label22 to label23 with label22;
    }

    private byte[] handlePackage(byte[], org.apache.tika.metadata.Metadata) throws java.io.IOException
    {
        byte[] r1, $r5;
        long $l1, $l2, $l3;
        org.apache.tika.metadata.Metadata r7;
        byte $b4;
        java.io.ByteArrayInputStream $r15;
        int $i0, $i5, $i6, $i7, $i8, i9, i11, $i12, $i14, $i16;
        org.apache.tika.parser.rtf.RTFObjDataParser r2;
        java.lang.String $r3, $r4, $r8, r10, r11, $r12, $r13, $r14;
        char $c10;
        java.io.IOException $r9;
        java.lang.StringBuilder $r16;

        r2 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r1 := @parameter0: byte[];

        r7 := @parameter1: org.apache.tika.metadata.Metadata;

        $r15 = new java.io.ByteArrayInputStream;

        specialinvoke $r15.<java.io.ByteArrayInputStream: void <init>(byte[])>(r1);

        specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: int readUShort(java.io.InputStream)>($r15);

        $r3 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String readAnsiString(java.io.InputStream)>($r15);

        specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String readAnsiString(java.io.InputStream)>($r15);

        specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: int readUShort(java.io.InputStream)>($r15);

        $i0 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: int readUShort(java.io.InputStream)>($r15);

        if $i0 == 3 goto label01;

        return null;

     label01:
        specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>($r15);

        $r4 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String readAnsiString(java.io.InputStream)>($r15);

        $l1 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>($r15);

        $r5 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] initByteArray(long)>($l1);

        virtualinvoke $r15.<java.io.ByteArrayInputStream: int read(byte[])>($r5);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

     label02:
        $l2 = specialinvoke r2.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>($r15);

        i11 = 0;

     label03:
        $l3 = (long) i11;

        $b4 = $l3 cmp $l2;

        $i12 = (int) $b4;

        if $i12 >= 0 goto label06;

        $i6 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read()>();

        $i7 = virtualinvoke $r15.<java.io.ByteArrayInputStream: int read()>();

        $i8 = 256 * $i7;

        i9 = $i6 + $i8;

        $i14 = (int) -1;

        if $i7 == $i14 goto label04;

        $i16 = (int) -1;

        if $i6 != $i16 goto label05;

     label04:
        virtualinvoke $r16.<java.lang.StringBuilder: void setLength(int)>(0);

        goto label06;

     label05:
        $c10 = (char) i9;

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c10);

        i11 = i11 + 1;

        goto label03;

     label06:
        goto label08;

     label07:
        $r9 := @caughtexception;

        virtualinvoke $r16.<java.lang.StringBuilder: void setLength(int)>(0);

     label08:
        $i5 = virtualinvoke $r16.<java.lang.StringBuilder: int length()>();

        if $i5 <= 0 goto label09;

        $r8 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        r10 = $r8;

        r11 = $r8;

        goto label14;

     label09:
        if $r3 != null goto label10;

        $r12 = "";

        goto label11;

     label10:
        $r12 = $r3;

     label11:
        r10 = $r12;

        if $r4 != null goto label12;

        $r13 = "";

        goto label13;

     label12:
        $r13 = $r4;

     label13:
        r11 = $r13;

     label14:
        $r14 = staticinvoke <org.apache.tika.io.FilenameUtils: java.lang.String getName(java.lang.String)>(r10);

        virtualinvoke r7.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("resourceName", $r14);

        virtualinvoke r7.<org.apache.tika.metadata.Metadata: void set(java.lang.String,java.lang.String)>("embeddedRelationshipId", r11);

        return $r5;

        catch java.io.IOException from label02 to label06 with label07;
    }

    private int readUShort(java.io.InputStream) throws java.io.IOException
    {
        java.io.IOException $r3;
        int $i0, $i1, i2, $i3, $i5, $i7;
        org.apache.tika.parser.rtf.RTFObjDataParser r2;
        java.io.InputStream r0;

        r2 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r0 := @parameter0: java.io.InputStream;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke r0.<java.io.InputStream: int read()>();

        i2 = $i1 * 256;

        $i5 = (int) -1;

        if $i0 == $i5 goto label1;

        $i7 = (int) -1;

        if i2 != $i7 goto label2;

     label1:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Hit end of stream before reading little endian unsigned short.");

        throw $r3;

     label2:
        $i3 = i2 + $i0;

        return $i3;
    }

    private long readUInt(java.io.InputStream) throws java.io.IOException
    {
        long $l2, $l3, $l4, l5;
        java.io.IOException $r4;
        int[] $r1;
        int $i0, $i1, i6, $i8;
        org.apache.tika.parser.rtf.RTFObjDataParser r3;
        java.io.InputStream r0;

        r3 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r0 := @parameter0: java.io.InputStream;

        l5 = 0L;

        i6 = 0;

     label1:
        if i6 >= 4 goto label3;

        $i0 = virtualinvoke r0.<java.io.InputStream: int read()>();

        $i8 = (int) -1;

        if $i0 != $i8 goto label2;

        $r4 = new java.io.IOException;

        specialinvoke $r4.<java.io.IOException: void <init>(java.lang.String)>("Hit end of stream before finishing little endian unsigned int.");

        throw $r4;

     label2:
        $l3 = (long) $i0;

        $r1 = <org.apache.tika.parser.rtf.RTFObjDataParser: int[] INT_LE_POWS>;

        $i1 = $r1[i6];

        $l2 = (long) $i1;

        $l4 = $l3 * $l2;

        l5 = l5 + $l4;

        i6 = i6 + 1;

        goto label1;

     label3:
        return l5;
    }

    private java.lang.String readAnsiString(java.io.InputStream) throws java.io.IOException
    {
        char $c0;
        java.io.IOException $r6;
        int i1, $i3;
        org.apache.tika.parser.rtf.RTFObjDataParser r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r2;
        java.io.InputStream r1;

        r4 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r1 := @parameter0: java.io.InputStream;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

     label1:
        if i1 <= 0 goto label2;

        $c0 = (char) i1;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        i1 = virtualinvoke r1.<java.io.InputStream: int read()>();

        goto label1;

     label2:
        $i3 = (int) -1;

        if i1 != $i3 goto label3;

        $r6 = new java.io.IOException;

        specialinvoke $r6.<java.io.IOException: void <init>(java.lang.String)>("Hit end of stream before end of AnsiString");

        throw $r6;

     label3:
        $r2 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private java.lang.String readLengthPrefixedAnsiString(java.io.InputStream) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.tika.parser.rtf.RTFObjDataParser r0;
        long $l0;
        java.io.IOException $r5;
        java.lang.String $r3;
        java.io.UnsupportedEncodingException $r4;
        java.io.InputStream r1;

        r0 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r1 := @parameter0: java.io.InputStream;

        $l0 = specialinvoke r0.<org.apache.tika.parser.rtf.RTFObjDataParser: long readUInt(java.io.InputStream)>(r1);

        $r2 = specialinvoke r0.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] readBytes(java.io.InputStream,long)>(r1, $l0);

     label1:
        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],java.lang.String)>($r2, "WINDOWS-1252");

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>("Unsupported encoding");

        throw $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private byte[] readBytes(java.io.InputStream, long) throws java.io.IOException
    {
        byte[] $r1;
        long l0, $l2;
        java.io.IOException $r3;
        byte $b3;
        int $i1;
        org.apache.tika.parser.rtf.RTFObjDataParser r0;
        java.io.InputStream r2;

        r0 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        r2 := @parameter0: java.io.InputStream;

        l0 := @parameter1: long;

        $r1 = specialinvoke r0.<org.apache.tika.parser.rtf.RTFObjDataParser: byte[] initByteArray(long)>(l0);

        $i1 = virtualinvoke r2.<java.io.InputStream: int read(byte[])>($r1);

        $l2 = (long) $i1;

        $b3 = $l2 cmp l0;

        if $b3 == 0 goto label1;

        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Hit end of stream before reading all bytes");

        throw $r3;

     label1:
        return $r1;
    }

    private byte[] initByteArray(long) throws java.io.IOException
    {
        byte[] $r5;
        long l0, $l3;
        java.io.IOException $r8;
        byte $b1, $b4;
        int $i2, $i5, $i6, $i7;
        org.apache.tika.parser.rtf.RTFObjDataParser r6;
        java.lang.StringBuilder $r2, $r3, $r7;
        java.lang.String $r4;

        r6 := @this: org.apache.tika.parser.rtf.RTFObjDataParser;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 < 0 goto label1;

        $i2 = staticinvoke <org.apache.tika.parser.rtf.RTFParser: int getMaxBytesForEmbeddedObject()>();

        $l3 = (long) $i2;

        $b4 = l0 cmp $l3;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label2;

     label1:
        $r8 = new java.io.IOException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Requested length for reading bytes is out of bounds: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r4);

        throw $r8;

     label2:
        $i5 = (int) l0;

        $r5 = newarray (byte)[$i5];

        return $r5;
    }

    static void <clinit>()
    {
        int[] $r0;

        <org.apache.tika.parser.rtf.RTFObjDataParser: java.lang.String WIN_ASCII> = "WINDOWS-1252";

        $r0 = newarray (int)[4];

        $r0[0] = 1;

        $r0[1] = 256;

        $r0[2] = 65536;

        $r0[3] = 16777216;

        <org.apache.tika.parser.rtf.RTFObjDataParser: int[] INT_LE_POWS> = $r0;

        return;
    }
}
