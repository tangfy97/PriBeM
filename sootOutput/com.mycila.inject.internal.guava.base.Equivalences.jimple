public final class com.mycila.inject.internal.guava.base.Equivalences extends java.lang.Object
{

    private void <init>()
    {
        com.mycila.inject.internal.guava.base.Equivalences r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Equivalences;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static com.mycila.inject.internal.guava.base.Equivalence equals()
    {
        com.mycila.inject.internal.guava.base.Equivalences$Equals $r0;

        $r0 = <com.mycila.inject.internal.guava.base.Equivalences$Equals: com.mycila.inject.internal.guava.base.Equivalences$Equals INSTANCE>;

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Equivalence identity()
    {
        com.mycila.inject.internal.guava.base.Equivalences$Identity $r0;

        $r0 = <com.mycila.inject.internal.guava.base.Equivalences$Identity: com.mycila.inject.internal.guava.base.Equivalences$Identity INSTANCE>;

        return $r0;
    }

    public static com.mycila.inject.internal.guava.base.Equivalence pairwise(com.mycila.inject.internal.guava.base.Equivalence)
    {
        com.mycila.inject.internal.guava.base.Equivalence r1;
        com.mycila.inject.internal.guava.base.PairwiseEquivalence $r0;

        r1 := @parameter0: com.mycila.inject.internal.guava.base.Equivalence;

        $r0 = new com.mycila.inject.internal.guava.base.PairwiseEquivalence;

        specialinvoke $r0.<com.mycila.inject.internal.guava.base.PairwiseEquivalence: void <init>(com.mycila.inject.internal.guava.base.Equivalence)>(r1);

        return $r0;
    }
}
