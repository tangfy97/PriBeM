public abstract class org.apache.velocity.runtime.resource.loader.ResourceLoader extends java.lang.Object
{
    protected boolean isCachingOn;
    protected long modificationCheckInterval;
    protected java.lang.String className;
    protected org.apache.velocity.runtime.RuntimeServices rsvc;
    protected org.apache.velocity.runtime.log.Log log;
    static java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCacheImpl;

    public void <init>()
    {
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean isCachingOn> = 0;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long modificationCheckInterval> = 2L;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.String className> = null;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.RuntimeServices rsvc> = null;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log> = null;

        return;
    }

    public void commonInit(org.apache.velocity.runtime.RuntimeServices, org.apache.commons.collections.ExtendedProperties)
    {
        long $l0;
        org.apache.velocity.runtime.RuntimeServices r1, $r2;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;
        java.lang.StringBuffer $r13, $r14, $r16, $r21, $r22, $r24;
        java.lang.String $r6, $r7, $r8, $r15, $r17, $r23, $r25;
        org.apache.velocity.exception.VelocityException $r11, $r19, $r27;
        boolean $z0;
        org.apache.commons.collections.ExtendedProperties r4;
        java.lang.Exception $r9, $r12, $r20;
        org.apache.velocity.runtime.log.Log $r3, $r10, $r18, $r26;
        java.lang.Class $r5, $r28;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r4 := @parameter1: org.apache.commons.collections.ExtendedProperties;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r3 = interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeServices: org.apache.velocity.runtime.log.Log getLog()>();

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log> = $r3;

     label01:
        $z0 = virtualinvoke r4.<org.apache.commons.collections.ExtendedProperties: boolean getBoolean(java.lang.String,boolean)>("cache", 0);

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean isCachingOn> = $z0;

     label02:
        goto label04;

     label03:
        $r20 := @caughtexception;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean isCachingOn> = 0;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception parsing cache setting: ");

        $r23 = virtualinvoke r4.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("cache");

        $r24 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        $r26 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r26.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r25, $r20);

        $r27 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r27.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r25, $r20);

        throw $r27;

     label04:
        $l0 = virtualinvoke r4.<org.apache.commons.collections.ExtendedProperties: long getLong(java.lang.String,long)>("modificationCheckInterval", 0L);

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long modificationCheckInterval> = $l0;

     label05:
        goto label07;

     label06:
        $r12 := @caughtexception;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long modificationCheckInterval> = 0L;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Exception parsing modificationCheckInterval setting: ");

        $r15 = virtualinvoke r4.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("modificationCheckInterval");

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        $r18 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r18.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r17, $r12);

        $r19 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r19.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r12);

        throw $r19;

     label07:
        $r5 = <org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCacheImpl>;

        if $r5 != null goto label08;

        $r28 = staticinvoke <org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.Class class$(java.lang.String)>("org.apache.velocity.runtime.resource.ResourceCacheImpl");

        <org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCacheImpl> = $r28;

        goto label09;

     label08:
        $r28 = <org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.Class class$org$apache$velocity$runtime$resource$ResourceCacheImpl>;

     label09:
        $r6 = virtualinvoke $r28.<java.lang.Class: java.lang.String getName()>();

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.String className> = $r6;

     label10:
        $r7 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.String className>;

        $r8 = virtualinvoke r4.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String,java.lang.String)>("class", $r7);

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.String className> = $r8;

     label11:
        goto label13;

     label12:
        $r9 := @caughtexception;

        $r10 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r10.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("Exception retrieving resource cache class name", $r9);

        $r11 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r11.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>("Exception retrieving resource cache class name", $r9);

        throw $r11;

     label13:
        return;

        catch java.lang.Exception from label01 to label02 with label03;
        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public abstract void init(org.apache.commons.collections.ExtendedProperties);

    public abstract java.io.InputStream getResourceStream(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException;

    public abstract boolean isSourceModified(org.apache.velocity.runtime.resource.Resource);

    public abstract long getLastModified(org.apache.velocity.runtime.resource.Resource);

    public java.lang.String getClassName()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.lang.String className>;

        return $r1;
    }

    public void setCachingOn(boolean)
    {
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;
        boolean z0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        z0 := @parameter0: boolean;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean isCachingOn> = z0;

        return;
    }

    public boolean isCachingOn()
    {
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        $z0 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: boolean isCachingOn>;

        return $z0;
    }

    public void setModificationCheckInterval(long)
    {
        long l0;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        l0 := @parameter0: long;

        r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long modificationCheckInterval> = l0;

        return;
    }

    public long getModificationCheckInterval()
    {
        long $l0;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        $l0 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: long modificationCheckInterval>;

        return $l0;
    }

    public boolean resourceExists(java.lang.String)
    {
        org.apache.velocity.exception.VelocityException $r14, $r26, $r38;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.Exception $r3, $r15, $r27;
        java.lang.Throwable $r39;
        org.apache.velocity.runtime.resource.loader.ResourceLoader r0;
        java.lang.StringBuffer $r5, $r6, $r7, $r8, $r11, $r17, $r18, $r19, $r20, $r23, $r29, $r30, $r31, $r32, $r35, $r42, $r44, $r45, $r46, $r49, $r50, $r52;
        java.lang.String r1, $r10, $r12, $r22, $r24, $r34, $r36, $r48, $r51, $r53;
        org.apache.velocity.runtime.log.Log $r4, $r13, $r16, $r25, $r28, $r37, $r41, $r43;
        java.lang.Class $r9, $r21, $r33, $r47;
        org.apache.velocity.exception.ResourceNotFoundException $r40;
        java.io.InputStream $r2, r54;

        r0 := @this: org.apache.velocity.runtime.resource.loader.ResourceLoader;

        r1 := @parameter0: java.lang.String;

        r54 = null;

     label01:
        $r2 = virtualinvoke r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: java.io.InputStream getResourceStream(java.lang.String)>(r1);

        r54 = $r2;

     label02:
        goto label12;

     label03:
        goto label09;

     label04:
        $r40 := @caughtexception;

        $r41 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z3 = virtualinvoke $r41.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z3 == 0 goto label05;

        $r43 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not load resource \'");

        $r45 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from ResourceLoader ");

        $r47 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r48 = virtualinvoke $r47.<java.lang.Class: java.lang.String getName()>();

        $r49 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r51 = virtualinvoke $r40.<org.apache.velocity.exception.ResourceNotFoundException: java.lang.String getMessage()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r43.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r53);

     label05:
        goto label16;

     label06:
        goto label09;

     label07:
        $r39 := @caughtexception;

        goto label20;

     label08:
        throw $r39;

     label09:
        if r54 == null goto label10;

        $z4 = 1;

        goto label11;

     label10:
        $z4 = 0;

     label11:
        return $z4;

     label12:
        if $r2 == null goto label13;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label13:
        goto label15;

     label14:
        $r27 := @caughtexception;

        $r28 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z2 = virtualinvoke $r28.<org.apache.velocity.runtime.log.Log: boolean isErrorEnabled()>();

        if $z2 == 0 goto label15;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("While closing InputStream for resource \'");

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from ResourceLoader ");

        $r33 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r34 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r37.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r36, $r27);

        $r38 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r38.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r36, $r27);

        throw $r38;

     label15:
        goto label03;

     label16:
        if null == null goto label17;

        virtualinvoke r54.<java.io.InputStream: void close()>();

     label17:
        goto label19;

     label18:
        $r15 := @caughtexception;

        $r16 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z1 = virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: boolean isErrorEnabled()>();

        if $z1 == 0 goto label19;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("While closing InputStream for resource \'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from ResourceLoader ");

        $r21 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r21.<java.lang.Class: java.lang.String getName()>();

        $r23 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r25.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r24, $r15);

        $r26 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r26.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r15);

        throw $r26;

     label19:
        goto label06;

     label20:
        if r54 == null goto label21;

        virtualinvoke r54.<java.io.InputStream: void close()>();

     label21:
        goto label23;

     label22:
        $r3 := @caughtexception;

        $r4 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z0 = virtualinvoke $r4.<org.apache.velocity.runtime.log.Log: boolean isErrorEnabled()>();

        if $z0 == 0 goto label23;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("While closing InputStream for resource \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' from ResourceLoader ");

        $r9 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r13.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r12, $r3);

        $r14 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r14.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r12, $r3);

        throw $r14;

     label23:
        goto label08;

        catch org.apache.velocity.exception.ResourceNotFoundException from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label03 with label07;
        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label16 to label17 with label18;
        catch java.lang.Exception from label20 to label21 with label22;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
