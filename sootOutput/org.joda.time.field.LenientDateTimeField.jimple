public class org.joda.time.field.LenientDateTimeField extends org.joda.time.field.DelegatedDateTimeField
{
    private static final long serialVersionUID;
    private final org.joda.time.Chronology iBase;

    public static org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField, org.joda.time.Chronology)
    {
        org.joda.time.Chronology r1;
        org.joda.time.field.StrictDateTimeField $r2;
        org.joda.time.DateTimeField r3;
        boolean $z0, $z1;
        org.joda.time.field.LenientDateTimeField $r0;

        r3 := @parameter0: org.joda.time.DateTimeField;

        r1 := @parameter1: org.joda.time.Chronology;

        if r3 != null goto label1;

        return null;

     label1:
        $z0 = r3 instanceof org.joda.time.field.StrictDateTimeField;

        if $z0 == 0 goto label2;

        $r2 = (org.joda.time.field.StrictDateTimeField) r3;

        r3 = virtualinvoke $r2.<org.joda.time.field.StrictDateTimeField: org.joda.time.DateTimeField getWrappedField()>();

     label2:
        $z1 = virtualinvoke r3.<org.joda.time.DateTimeField: boolean isLenient()>();

        if $z1 == 0 goto label3;

        return r3;

     label3:
        $r0 = new org.joda.time.field.LenientDateTimeField;

        specialinvoke $r0.<org.joda.time.field.LenientDateTimeField: void <init>(org.joda.time.DateTimeField,org.joda.time.Chronology)>(r3, r1);

        return $r0;
    }

    protected void <init>(org.joda.time.DateTimeField, org.joda.time.Chronology)
    {
        org.joda.time.Chronology r2;
        org.joda.time.DateTimeField r1;
        org.joda.time.field.LenientDateTimeField r0;

        r0 := @this: org.joda.time.field.LenientDateTimeField;

        r1 := @parameter0: org.joda.time.DateTimeField;

        r2 := @parameter1: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.field.DelegatedDateTimeField: void <init>(org.joda.time.DateTimeField)>(r1);

        r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase> = r2;

        return;
    }

    public final boolean isLenient()
    {
        org.joda.time.field.LenientDateTimeField r0;

        r0 := @this: org.joda.time.field.LenientDateTimeField;

        return 1;
    }

    public long set(long, int)
    {
        org.joda.time.DateTimeZone $r2, $r8;
        long l0, $l1, $l3, $l5, $l6, $l7, $l8;
        int i2, $i4;
        org.joda.time.DateTimeFieldType $r3;
        org.joda.time.DateTimeField $r6;
        org.joda.time.Chronology $r1, $r4, $r5, $r7;
        org.joda.time.field.LenientDateTimeField r0;

        r0 := @this: org.joda.time.field.LenientDateTimeField;

        l0 := @parameter0: long;

        i2 := @parameter1: int;

        $r1 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase>;

        $r2 = virtualinvoke $r1.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>();

        $l1 = virtualinvoke $r2.<org.joda.time.DateTimeZone: long convertUTCToLocal(long)>(l0);

        $l3 = (long) i2;

        $i4 = virtualinvoke r0.<org.joda.time.field.LenientDateTimeField: int get(long)>(l0);

        $l5 = (long) $i4;

        $l6 = staticinvoke <org.joda.time.field.FieldUtils: long safeSubtract(long,long)>($l3, $l5);

        $r3 = virtualinvoke r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.DateTimeFieldType getType()>();

        $r4 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase>;

        $r5 = virtualinvoke $r4.<org.joda.time.Chronology: org.joda.time.Chronology withUTC()>();

        $r6 = virtualinvoke $r3.<org.joda.time.DateTimeFieldType: org.joda.time.DateTimeField getField(org.joda.time.Chronology)>($r5);

        $l7 = virtualinvoke $r6.<org.joda.time.DateTimeField: long add(long,long)>($l1, $l6);

        $r7 = r0.<org.joda.time.field.LenientDateTimeField: org.joda.time.Chronology iBase>;

        $r8 = virtualinvoke $r7.<org.joda.time.Chronology: org.joda.time.DateTimeZone getZone()>();

        $l8 = virtualinvoke $r8.<org.joda.time.DateTimeZone: long convertLocalToUTC(long,boolean)>($l7, 0);

        return $l8;
    }

    public static void <clinit>()
    {
        <org.joda.time.field.LenientDateTimeField: long serialVersionUID> = 8714085824173290599L;

        return;
    }
}
