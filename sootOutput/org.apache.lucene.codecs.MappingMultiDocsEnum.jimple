public final class org.apache.lucene.codecs.MappingMultiDocsEnum extends org.apache.lucene.index.DocsEnum
{
    private org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs;
    int numSubs;
    int upto;
    org.apache.lucene.index.MergeState$DocMap currentMap;
    org.apache.lucene.index.DocsEnum current;
    int currentBase;
    int doc;
    private org.apache.lucene.index.MergeState mergeState;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        int $i1;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        specialinvoke r0.<org.apache.lucene.index.DocsEnum: void <init>()>();

        $i1 = (int) -1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int doc> = $i1;

        return;
    }

    org.apache.lucene.codecs.MappingMultiDocsEnum reset(org.apache.lucene.index.MultiDocsEnum)
    {
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r2;
        int $i0, $i2;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;
        org.apache.lucene.index.MultiDocsEnum r1;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        r1 := @parameter0: org.apache.lucene.index.MultiDocsEnum;

        $i0 = virtualinvoke r1.<org.apache.lucene.index.MultiDocsEnum: int getNumSubs()>();

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int numSubs> = $i0;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.MultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] getSubs()>();

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs> = $r2;

        $i2 = (int) -1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto> = $i2;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.DocsEnum current> = null;

        return r0;
    }

    public void setMergeState(org.apache.lucene.index.MergeState)
    {
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;
        org.apache.lucene.index.MergeState r1;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        r1 := @parameter0: org.apache.lucene.index.MergeState;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState mergeState> = r1;

        return;
    }

    public int getNumSubs()
    {
        int $i0;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        $i0 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int numSubs>;

        return $i0;
    }

    public org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] getSubs()
    {
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r1;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        return $r1;
    }

    public int freq() throws java.io.IOException
    {
        int $i0;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;
        org.apache.lucene.index.DocsEnum $r1;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.DocsEnum: int freq()>();

        return $i0;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        $i0 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int doc>;

        return $i0;
    }

    public int advance(int)
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.MappingMultiDocsEnum r1;

        r1 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.index.MergeState$DocMap $r1, $r12, $r13, $r25;
        org.apache.lucene.index.MergeState $r8, $r10;
        int[] $r9;
        boolean $z0;
        org.apache.lucene.index.MergeState$DocMap[] $r11;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice $r3, $r6, $r15, $r29;
        java.lang.StringBuilder $r19, $r20, $r21, $r23, $r24, $r26, $r27, $r31, $r35;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;
        java.lang.AssertionError $r36;
        org.apache.lucene.index.ReaderSlice $r4, $r16, $r30;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] $r2, $r5, $r14, $r22, $r28;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, $i19, $i21;
        java.lang.String $r32;
        org.apache.lucene.index.DocsEnum $r7, $r33, $r34;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

     label1:
        $r33 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        if $r33 != null goto label3;

        $i5 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto>;

        $i3 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int numSubs>;

        $i4 = $i3 - 1;

        if $i5 != $i4 goto label2;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int doc> = 2147483647;

        return 2147483647;

     label2:
        $i6 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto> = $i7;

        $r2 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i8 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto>;

        $r3 = $r2[$i8];

        $r4 = $r3.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        i18 = $r4.<org.apache.lucene.index.ReaderSlice: int readerIndex>;

        $r5 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i9 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto>;

        $r6 = $r5[$i9];

        $r7 = $r6.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum>;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.DocsEnum current> = $r7;

        $r8 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState mergeState>;

        $r9 = $r8.<org.apache.lucene.index.MergeState: int[] docBase>;

        $i10 = $r9[i18];

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int currentBase> = $i10;

        $r10 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState mergeState>;

        $r11 = $r10.<org.apache.lucene.index.MergeState: org.apache.lucene.index.MergeState$DocMap[] docMaps>;

        $r12 = $r11[i18];

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState$DocMap currentMap> = $r12;

        $z0 = <org.apache.lucene.codecs.MappingMultiDocsEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r13 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState$DocMap currentMap>;

        $i11 = virtualinvoke $r13.<org.apache.lucene.index.MergeState$DocMap: int maxDoc()>();

        $r14 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i12 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto>;

        $r15 = $r14[$i12];

        $r16 = $r15.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        $i13 = $r16.<org.apache.lucene.index.ReaderSlice: int length>;

        if $i11 == $i13 goto label3;

        $r36 = new java.lang.AssertionError;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("readerIndex=");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" subs.len=");

        $r22 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i14 = lengthof $r22;

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" len1=");

        $r25 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState$DocMap currentMap>;

        $i15 = virtualinvoke $r25.<org.apache.lucene.index.MergeState$DocMap: int maxDoc()>();

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" vs ");

        $r28 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        $i16 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int upto>;

        $r29 = $r28[$i16];

        $r30 = $r29.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.ReaderSlice slice>;

        $i17 = $r30.<org.apache.lucene.index.ReaderSlice: int length>;

        $r31 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.AssertionError: void <init>(java.lang.Object)>($r32);

        throw $r36;

     label3:
        $r34 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.DocsEnum current>;

        $i19 = virtualinvoke $r34.<org.apache.lucene.index.DocsEnum: int nextDoc()>();

        if $i19 == 2147483647 goto label5;

        $r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MergeState$DocMap currentMap>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.index.MergeState$DocMap: int get(int)>($i19);

        $i21 = (int) -1;

        if $i0 != $i21 goto label4;

        goto label1;

     label4:
        $i1 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int currentBase>;

        $i2 = $i1 + $i0;

        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: int doc> = $i2;

        return $i2;

     label5:
        r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.DocsEnum current> = null;

        goto label1;
    }

    public long cost()
    {
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice r2;
        org.apache.lucene.codecs.MappingMultiDocsEnum r0;
        long $l1, l2;
        org.apache.lucene.index.DocsEnum $r3;
        org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] r1;
        int i0, i3;

        r0 := @this: org.apache.lucene.codecs.MappingMultiDocsEnum;

        l2 = 0L;

        r1 = r0.<org.apache.lucene.codecs.MappingMultiDocsEnum: org.apache.lucene.index.MultiDocsEnum$EnumWithSlice[] subs>;

        i0 = lengthof r1;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r2 = r1[i3];

        $r3 = r2.<org.apache.lucene.index.MultiDocsEnum$EnumWithSlice: org.apache.lucene.index.DocsEnum docsEnum>;

        $l1 = virtualinvoke $r3.<org.apache.lucene.index.DocsEnum: long cost()>();

        l2 = l2 + $l1;

        i3 = i3 + 1;

        goto label1;

     label2:
        return l2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/MappingMultiDocsEnum;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.MappingMultiDocsEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
