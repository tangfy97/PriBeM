public abstract class org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent extends org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent
{
    private final org.apache.commons.cli.Options options;
    private final org.apache.commons.cli.CommandLineParser parser;
    private final org.apache.commons.cli.HelpFormatter helpFormatter;

    public void <init>(com.google.inject.Injector)
    {
        com.google.inject.Key $r3, $r15;
        java.lang.Boolean $r17;
        java.lang.String $r5;
        org.waveprotocol.wave.model.id.TokenGenerator $r7;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder $r9;
        com.google.inject.Injector r1;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r0;
        com.google.inject.name.Named $r2, $r14;
        java.lang.Object $r4, $r6, $r8, $r10, $r12, $r16;
        org.waveprotocol.box.server.persistence.AccountStore $r11;
        org.waveprotocol.box.server.robots.register.RobotRegistrar $r13;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        r1 := @parameter0: com.google.inject.Injector;

        $r2 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("wave_server_domain");

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(class "Ljava/lang/String;", $r2);

        $r4 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r3);

        $r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/wave/model/id/TokenGenerator;");

        $r7 = (org.waveprotocol.wave.model.id.TokenGenerator) $r6;

        $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/agent/AbstractBaseRobotAgent$ServerFrontendAddressHolder;");

        $r9 = (org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder) $r8;

        $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r11 = (org.waveprotocol.box.server.persistence.AccountStore) $r10;

        $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/register/RobotRegistrarImpl;");

        $r13 = (org.waveprotocol.box.server.robots.register.RobotRegistrar) $r12;

        $r14 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("enable_ssl");

        $r15 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(class "Ljava/lang/Boolean;", $r14);

        $r16 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r15);

        $r17 = (java.lang.Boolean) $r16;

        specialinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: void <init>(java.lang.String,org.waveprotocol.wave.model.id.TokenGenerator,org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder,org.waveprotocol.box.server.persistence.AccountStore,org.waveprotocol.box.server.robots.register.RobotRegistrar,java.lang.Boolean)>($r5, $r7, $r9, $r11, $r13, $r17);

        return;
    }

    void <init>(java.lang.String, org.waveprotocol.wave.model.id.TokenGenerator, org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder, org.waveprotocol.box.server.persistence.AccountStore, org.waveprotocol.box.server.robots.register.RobotRegistrar, java.lang.Boolean)
    {
        org.apache.commons.cli.Options $r9;
        org.waveprotocol.wave.model.id.TokenGenerator r2;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder r3;
        org.apache.commons.cli.HelpFormatter $r8;
        java.lang.Boolean r6;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r0;
        java.lang.String r1;
        org.waveprotocol.box.server.persistence.AccountStore r4;
        org.apache.commons.cli.PosixParser $r7;
        org.waveprotocol.box.server.robots.register.RobotRegistrar r5;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.id.TokenGenerator;

        r3 := @parameter2: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder;

        r4 := @parameter3: org.waveprotocol.box.server.persistence.AccountStore;

        r5 := @parameter4: org.waveprotocol.box.server.robots.register.RobotRegistrar;

        r6 := @parameter5: java.lang.Boolean;

        specialinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: void <init>(java.lang.String,org.waveprotocol.wave.model.id.TokenGenerator,org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder,org.waveprotocol.box.server.persistence.AccountStore,org.waveprotocol.box.server.robots.register.RobotRegistrar,java.lang.Boolean)>(r1, r2, r3, r4, r5, r6);

        $r7 = new org.apache.commons.cli.PosixParser;

        specialinvoke $r7.<org.apache.commons.cli.PosixParser: void <init>()>();

        r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.CommandLineParser parser> = $r7;

        $r8 = new org.apache.commons.cli.HelpFormatter;

        specialinvoke $r8.<org.apache.commons.cli.HelpFormatter: void <init>()>();

        r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.HelpFormatter helpFormatter> = $r8;

        $r9 = virtualinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.Options initOptions()>();

        r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.Options options> = $r9;

        return;
    }

    public void onWaveletSelfAdded(com.google.wave.api.event.WaveletSelfAddedEvent)
    {
        com.google.wave.api.Wavelet $r1;
        com.google.wave.api.Blip $r3;
        java.lang.String $r2, $r9, $r13, $r16;
        com.google.wave.api.event.WaveletSelfAddedEvent r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r14, $r15;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r8;

        r8 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        r0 := @parameter0: com.google.wave.api.event.WaveletSelfAddedEvent;

        $r1 = virtualinvoke r0.<com.google.wave.api.event.WaveletSelfAddedEvent: com.google.wave.api.Wavelet getWavelet()>();

        $r2 = virtualinvoke $r1.<com.google.wave.api.Wavelet: java.lang.String getRobotAddress()>();

        $r3 = virtualinvoke r0.<com.google.wave.api.event.WaveletSelfAddedEvent: com.google.wave.api.Blip getBlip()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": I am listening.\n");

        $r9 = virtualinvoke r8.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getShortDescription()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\nFor help type ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r13 = virtualinvoke r8.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getCommandName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -help\" on a new line and hit \"Enter\".");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: void appendLine(com.google.wave.api.Blip,java.lang.String)>($r3, $r16);

        return;
    }

    public void onDocumentChanged(com.google.wave.api.event.DocumentChangedEvent)
    {
        java.lang.String[] $r6;
        com.google.wave.api.Blip $r1;
        org.apache.commons.cli.Option[] $r7;
        int $i0, $i1, $i2;
        org.apache.commons.cli.CommandLine r11;
        java.lang.String $r2, $r4, $r5, $r8, $r10;
        boolean $z0;
        com.google.wave.api.event.DocumentChangedEvent r0;
        java.lang.IllegalArgumentException $r9;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r3;

        r3 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        r0 := @parameter0: com.google.wave.api.event.DocumentChangedEvent;

        $r1 = virtualinvoke r0.<com.google.wave.api.event.DocumentChangedEvent: com.google.wave.api.Blip getBlip()>();

        $r2 = virtualinvoke r0.<com.google.wave.api.event.DocumentChangedEvent: java.lang.String getModifiedBy()>();

        r11 = null;

     label1:
        $r4 = virtualinvoke $r1.<com.google.wave.api.Blip: java.lang.String getContent()>();

        r11 = virtualinvoke r3.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.CommandLine preprocessCommand(java.lang.String)>($r4);

     label2:
        goto label4;

     label3:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: void appendLine(com.google.wave.api.Blip,java.lang.String)>($r1, $r10);

     label4:
        if r11 == null goto label7;

        $z0 = virtualinvoke r11.<org.apache.commons.cli.CommandLine: boolean hasOption(java.lang.String)>("help");

        if $z0 != 0 goto label5;

        $r6 = virtualinvoke r11.<org.apache.commons.cli.CommandLine: java.lang.String[] getArgs()>();

        $i0 = lengthof $r6;

        $r7 = virtualinvoke r11.<org.apache.commons.cli.CommandLine: org.apache.commons.cli.Option[] getOptions()>();

        $i1 = lengthof $r7;

        $i2 = $i0 - $i1;

        if $i2 > 1 goto label6;

     label5:
        $r5 = virtualinvoke r3.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getFullDescription()>();

        staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: void appendLine(com.google.wave.api.Blip,java.lang.String)>($r1, $r5);

        goto label7;

     label6:
        $r8 = virtualinvoke r3.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String maybeExecuteCommand(org.apache.commons.cli.CommandLine,java.lang.String)>(r11, $r2);

        staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: void appendLine(com.google.wave.api.Blip,java.lang.String)>($r1, $r8);

     label7:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
    }

    protected org.apache.commons.cli.CommandLine preprocessCommand(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Integer $r10, $r11, $r12, $r16, $r17;
        org.apache.commons.cli.Option[] $r8;
        boolean $z0;
        org.apache.commons.cli.ParseException $r19;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r2;
        java.lang.Object[] $r9, $r15;
        java.lang.String[] $r3, $r5;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        org.apache.commons.cli.CommandLine $r4, r21;
        java.lang.String r0, $r1, $r6, $r7, $r13, $r18, r22;
        java.lang.IllegalArgumentException $r14, $r20;

        r2 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        r0 := @parameter0: java.lang.String;

        r21 = null;

        $r1 = staticinvoke <org.waveprotocol.box.server.robots.agent.RobotAgentUtil: java.lang.String lastEnteredLineOf(java.lang.String)>(r0);

        if $r1 == null goto label9;

     label1:
        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        $r4 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.CommandLine parse(java.lang.String[])>($r3);

        r21 = $r4;

     label2:
        goto label4;

     label3:
        $r19 := @caughtexception;

        $r20 = new java.lang.IllegalArgumentException;

        specialinvoke $r20.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>($r19);

        throw $r20;

     label4:
        $r5 = virtualinvoke $r4.<org.apache.commons.cli.CommandLine: java.lang.String[] getArgs()>();

        $r6 = $r5[0];

        $r7 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getCommandName()>();

        $z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z0 != 0 goto label5;

        return null;

     label5:
        $i0 = lengthof $r5;

        $r8 = virtualinvoke $r4.<org.apache.commons.cli.CommandLine: org.apache.commons.cli.Option[] getOptions()>();

        $i1 = lengthof $r8;

        $i2 = $i0 - $i1;

        i3 = $i2 - 1;

        if i3 <= 0 goto label9;

        $i4 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMinNumOfArguments()>();

        if i3 < $i4 goto label6;

        $i10 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMaxNumOfArguments()>();

        if i3 <= $i10 goto label9;

     label6:
        $i5 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMinNumOfArguments()>();

        $i6 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMaxNumOfArguments()>();

        if $i5 != $i6 goto label7;

        $r15 = newarray (java.lang.Object)[3];

        $i9 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMinNumOfArguments()>();

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i9);

        $r15[0] = $r16;

        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r15[1] = $r17;

        $r18 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getUsage()>();

        $r15[2] = $r18;

        r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid number of arguments. Expected: %d , actual: %d %s", $r15);

        goto label8;

     label7:
        $r9 = newarray (java.lang.Object)[4];

        $i7 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMinNumOfArguments()>();

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i7);

        $r9[0] = $r10;

        $i8 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: int getMaxNumOfArguments()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i8);

        $r9[1] = $r11;

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i3);

        $r9[2] = $r12;

        $r13 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getUsage()>();

        $r9[3] = $r13;

        r22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid number of arguments. Expected between %d and %d, actual: %d. %s", $r9);

     label8:
        $r14 = new java.lang.IllegalArgumentException;

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(r22);

        throw $r14;

     label9:
        return r21;

        catch org.apache.commons.cli.ParseException from label1 to label2 with label3;
    }

    protected java.lang.String getRobotProfilePageUrl()
    {
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        return null;
    }

    public java.lang.String getUsage()
    {
        org.apache.commons.cli.Options $r15;
        org.apache.commons.cli.HelpFormatter $r3, $r5, $r13, $r14;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r9, $r12, $r16;
        java.io.PrintWriter $r1;
        java.io.StringWriter $r0;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r2;
        java.lang.StringBuilder $r4, $r7, $r8, $r10, $r11;

        r2 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        $r5 = r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.HelpFormatter helpFormatter>;

        $r3 = r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.HelpFormatter helpFormatter>;

        $i0 = $r3.<org.apache.commons.cli.HelpFormatter: int defaultWidth>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getCommandName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r9 = virtualinvoke r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: java.lang.String getCmdLineSyntax()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \n");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.Options options>;

        $r13 = r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.HelpFormatter helpFormatter>;

        $i2 = $r13.<org.apache.commons.cli.HelpFormatter: int defaultLeftPad>;

        $r14 = r2.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.HelpFormatter helpFormatter>;

        $i1 = $r14.<org.apache.commons.cli.HelpFormatter: int defaultDescPad>;

        virtualinvoke $r5.<org.apache.commons.cli.HelpFormatter: void printHelp(java.io.PrintWriter,int,java.lang.String,java.lang.String,org.apache.commons.cli.Options,int,int,java.lang.String,boolean)>($r1, $i0, $r12, null, $r15, $i2, $i1, "", 0);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        $r16 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r16;
    }

    protected org.apache.commons.cli.Options initOptions()
    {
        org.apache.commons.cli.Options $r0;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r2;
        org.apache.commons.cli.Option $r1;

        r2 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        $r0 = new org.apache.commons.cli.Options;

        specialinvoke $r0.<org.apache.commons.cli.Options: void <init>()>();

        staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.OptionBuilder withDescription(java.lang.String)>("Displays help for the command.");

        $r1 = staticinvoke <org.apache.commons.cli.OptionBuilder: org.apache.commons.cli.Option create(java.lang.String)>("help");

        virtualinvoke $r0.<org.apache.commons.cli.Options: org.apache.commons.cli.Options addOption(org.apache.commons.cli.Option)>($r1);

        return $r0;
    }

    protected transient org.apache.commons.cli.CommandLine parse(java.lang.String[]) throws org.apache.commons.cli.ParseException
    {
        org.apache.commons.cli.CommandLineParser $r1;
        org.apache.commons.cli.Options $r2;
        org.apache.commons.cli.CommandLine $r4;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r0;
        java.lang.String[] r3;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        r3 := @parameter0: java.lang.String[];

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.CommandLineParser getParser()>();

        $r2 = virtualinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.Options getOptions()>();

        $r4 = interfaceinvoke $r1.<org.apache.commons.cli.CommandLineParser: org.apache.commons.cli.CommandLine parse(org.apache.commons.cli.Options,java.lang.String[])>($r2, r3);

        return $r4;
    }

    protected org.apache.commons.cli.CommandLineParser getParser()
    {
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r0;
        org.apache.commons.cli.CommandLineParser $r1;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        $r1 = r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.CommandLineParser parser>;

        return $r1;
    }

    protected org.apache.commons.cli.Options getOptions()
    {
        org.apache.commons.cli.Options $r1;
        org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent;

        $r1 = r0.<org.waveprotocol.box.server.robots.agent.AbstractCliRobotAgent: org.apache.commons.cli.Options options>;

        return $r1;
    }

    protected abstract java.lang.String maybeExecuteCommand(org.apache.commons.cli.CommandLine, java.lang.String);

    public abstract java.lang.String getShortDescription();

    public abstract java.lang.String getFullDescription();

    public abstract java.lang.String getCommandName();

    public abstract java.lang.String getCmdLineSyntax();

    public abstract java.lang.String getExample();

    public abstract int getMinNumOfArguments();

    public abstract int getMaxNumOfArguments();
}
