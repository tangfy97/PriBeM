class com.mycila.inject.internal.cglib.proxy.NoOpGenerator extends java.lang.Object implements com.mycila.inject.internal.cglib.proxy.CallbackGenerator
{
    public static final com.mycila.inject.internal.cglib.proxy.NoOpGenerator INSTANCE;

    void <init>()
    {
        com.mycila.inject.internal.cglib.proxy.NoOpGenerator r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.NoOpGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void generate(com.mycila.inject.internal.cglib.core.ClassEmitter, com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context, java.util.List)
    {
        java.util.Iterator $r1;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r5;
        com.mycila.inject.internal.cglib.proxy.NoOpGenerator r7;
        com.mycila.inject.internal.cglib.core.MethodInfo r3;
        com.mycila.inject.internal.cglib.core.ClassEmitter r4;
        java.util.List r0;
        com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context r6;
        int $i0, $i1, $i2;
        java.lang.Object $r2;
        boolean $z0, $z1, $z2, $z3;

        r7 := @this: com.mycila.inject.internal.cglib.proxy.NoOpGenerator;

        r4 := @parameter0: com.mycila.inject.internal.cglib.core.ClassEmitter;

        r6 := @parameter1: com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context;

        r0 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.mycila.inject.internal.cglib.core.MethodInfo) $r2;

        $i0 = virtualinvoke r3.<com.mycila.inject.internal.cglib.core.MethodInfo: int getModifiers()>();

        $z1 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: boolean isBridge(int)>($i0);

        if $z1 != 0 goto label2;

        $i1 = interfaceinvoke r6.<com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context: int getOriginalModifiers(com.mycila.inject.internal.cglib.core.MethodInfo)>(r3);

        $z2 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: boolean isProtected(int)>($i1);

        if $z2 == 0 goto label3;

        $i2 = virtualinvoke r3.<com.mycila.inject.internal.cglib.core.MethodInfo: int getModifiers()>();

        $z3 = staticinvoke <com.mycila.inject.internal.cglib.core.TypeUtils: boolean isPublic(int)>($i2);

        if $z3 == 0 goto label3;

     label2:
        $r5 = staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: com.mycila.inject.internal.cglib.core.CodeEmitter begin_method(com.mycila.inject.internal.cglib.core.ClassEmitter,com.mycila.inject.internal.cglib.core.MethodInfo)>(r4, r3);

        virtualinvoke $r5.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_this()>();

        virtualinvoke $r5.<com.mycila.inject.internal.cglib.core.CodeEmitter: void load_args()>();

        interfaceinvoke r6.<com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context: void emitInvoke(com.mycila.inject.internal.cglib.core.CodeEmitter,com.mycila.inject.internal.cglib.core.MethodInfo)>($r5, r3);

        virtualinvoke $r5.<com.mycila.inject.internal.cglib.core.CodeEmitter: void return_value()>();

        virtualinvoke $r5.<com.mycila.inject.internal.cglib.core.CodeEmitter: void end_method()>();

     label3:
        goto label1;

     label4:
        return;
    }

    public void generateStatic(com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context, java.util.List)
    {
        java.util.List r3;
        com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context r2;
        com.mycila.inject.internal.cglib.core.CodeEmitter r1;
        com.mycila.inject.internal.cglib.proxy.NoOpGenerator r0;

        r0 := @this: com.mycila.inject.internal.cglib.proxy.NoOpGenerator;

        r1 := @parameter0: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r2 := @parameter1: com.mycila.inject.internal.cglib.proxy.CallbackGenerator$Context;

        r3 := @parameter2: java.util.List;

        return;
    }

    static void <clinit>()
    {
        com.mycila.inject.internal.cglib.proxy.NoOpGenerator $r0;

        $r0 = new com.mycila.inject.internal.cglib.proxy.NoOpGenerator;

        specialinvoke $r0.<com.mycila.inject.internal.cglib.proxy.NoOpGenerator: void <init>()>();

        <com.mycila.inject.internal.cglib.proxy.NoOpGenerator: com.mycila.inject.internal.cglib.proxy.NoOpGenerator INSTANCE> = $r0;

        return;
    }
}
