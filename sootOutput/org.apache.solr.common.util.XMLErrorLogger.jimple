public final class org.apache.solr.common.util.XMLErrorLogger extends java.lang.Object implements org.xml.sax.ErrorHandler, javax.xml.transform.ErrorListener, javax.xml.stream.XMLReporter
{
    private final org.slf4j.Logger log;

    public void <init>(org.slf4j.Logger)
    {
        org.slf4j.Logger r1;
        org.apache.solr.common.util.XMLErrorLogger r0;

        r0 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r1 := @parameter0: org.slf4j.Logger;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.solr.common.util.XMLErrorLogger: org.slf4j.Logger log> = r1;

        return;
    }

    public void warning(org.xml.sax.SAXParseException)
    {
        org.apache.solr.common.util.XMLErrorLogger r0;
        int $i0, $i1;
        java.lang.String $r5, $r12, $r14;
        org.slf4j.Logger $r2;
        org.xml.sax.SAXParseException r4;
        java.lang.StringBuilder $r1, $r3, $r6, $r7, $r8, $r9, $r10, $r11, $r13;

        r0 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r4 := @parameter0: org.xml.sax.SAXParseException;

        $r2 = r0.<org.apache.solr.common.util.XMLErrorLogger: org.slf4j.Logger log>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XML parse warning in \"");

        $r5 = virtualinvoke r4.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", line ");

        $i0 = virtualinvoke r4.<org.xml.sax.SAXParseException: int getLineNumber()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $i1 = virtualinvoke r4.<org.xml.sax.SAXParseException: int getColumnNumber()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r12 = virtualinvoke r4.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>($r14);

        return;
    }

    public void error(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXParseException r0;
        org.apache.solr.common.util.XMLErrorLogger r1;

        r1 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        throw r0;
    }

    public void fatalError(org.xml.sax.SAXParseException) throws org.xml.sax.SAXException
    {
        org.xml.sax.SAXParseException r0;
        org.apache.solr.common.util.XMLErrorLogger r1;

        r1 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r0 := @parameter0: org.xml.sax.SAXParseException;

        throw r0;
    }

    public void warning(javax.xml.transform.TransformerException)
    {
        org.slf4j.Logger $r2;
        javax.xml.transform.TransformerException r1;
        java.lang.String $r3;
        org.apache.solr.common.util.XMLErrorLogger r0;

        r0 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r1 := @parameter0: javax.xml.transform.TransformerException;

        $r2 = r0.<org.apache.solr.common.util.XMLErrorLogger: org.slf4j.Logger log>;

        $r3 = virtualinvoke r1.<javax.xml.transform.TransformerException: java.lang.String getMessageAndLocation()>();

        interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String)>($r3);

        return;
    }

    public void error(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException r0;
        org.apache.solr.common.util.XMLErrorLogger r1;

        r1 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r0 := @parameter0: javax.xml.transform.TransformerException;

        throw r0;
    }

    public void fatalError(javax.xml.transform.TransformerException) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.TransformerException r0;
        org.apache.solr.common.util.XMLErrorLogger r1;

        r1 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r0 := @parameter0: javax.xml.transform.TransformerException;

        throw r0;
    }

    public void report(java.lang.String, java.lang.String, java.lang.Object, javax.xml.stream.Location)
    {
        org.apache.solr.common.util.XMLErrorLogger r4;
        int $i0, $i1;
        java.lang.String r1, r7, $r9, $r11;
        org.slf4j.Logger $r5;
        javax.xml.stream.Location r3;
        java.lang.StringBuilder $r0, $r2, $r6, $r8, $r10, $r12, $r13, $r14, $r15;
        java.lang.Object r16;

        r4 := @this: org.apache.solr.common.util.XMLErrorLogger;

        r7 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r16 := @parameter2: java.lang.Object;

        r3 := @parameter3: javax.xml.stream.Location;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("XML parser reported ");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        if r3 == null goto label1;

        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in \"");

        $r11 = interfaceinvoke r3.<javax.xml.stream.Location: java.lang.String getSystemId()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\", line ");

        $i0 = interfaceinvoke r3.<javax.xml.stream.Location: int getLineNumber()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column ");

        $i1 = interfaceinvoke r3.<javax.xml.stream.Location: int getColumnNumber()>();

        virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label1:
        $r5 = r4.<org.apache.solr.common.util.XMLErrorLogger: org.slf4j.Logger log>;

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void warn(java.lang.String)>($r9);

        return;
    }
}
