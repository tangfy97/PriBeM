public class ucar.ma2.StructureDataW extends ucar.ma2.StructureData
{
    protected java.util.Map memberData;

    public void <init>(ucar.ma2.StructureMembers)
    {
        java.util.HashMap $r2;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.StructureMembers r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers;

        specialinvoke r0.<ucar.ma2.StructureData: void <init>(ucar.ma2.StructureMembers)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<ucar.ma2.StructureDataW: java.util.Map memberData> = $r2;

        return;
    }

    public void setMemberData(ucar.ma2.StructureMembers$Member, ucar.ma2.Array)
    {
        java.util.Map $r3;
        ucar.ma2.StructureDataW r1;
        java.lang.IllegalArgumentException $r4;
        ucar.ma2.Array r0;
        ucar.ma2.StructureMembers$Member r2;

        r1 := @this: ucar.ma2.StructureDataW;

        r2 := @parameter0: ucar.ma2.StructureMembers$Member;

        r0 := @parameter1: ucar.ma2.Array;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("data cant be null");

        throw $r4;

     label1:
        $r3 = r1.<ucar.ma2.StructureDataW: java.util.Map memberData>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

        return;
    }

    public void setMemberData(java.lang.String, ucar.ma2.Array)
    {
        ucar.ma2.StructureDataW r0;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.Array r4;
        ucar.ma2.StructureMembers$Member $r3;
        ucar.ma2.StructureMembers $r2;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String r1, $r9;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: ucar.ma2.Array;

        $r2 = r0.<ucar.ma2.StructureDataW: ucar.ma2.StructureMembers members>;

        $r3 = virtualinvoke $r2.<ucar.ma2.StructureMembers: ucar.ma2.StructureMembers$Member findMember(java.lang.String)>(r1);

        if $r3 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal member name =");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        virtualinvoke r0.<ucar.ma2.StructureDataW: void setMemberData(ucar.ma2.StructureMembers$Member,ucar.ma2.Array)>($r3, r4);

        return;
    }

    public ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r1;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.Array $r4;
        ucar.ma2.StructureMembers$Member r0;

        r1 := @this: ucar.ma2.StructureDataW;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("member is null");

        throw $r5;

     label1:
        $r2 = r1.<ucar.ma2.StructureDataW: java.util.Map memberData>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r4 = (ucar.ma2.Array) $r3;

        return $r4;
    }

    public float convertScalarFloat(ucar.ma2.StructureMembers$Member)
    {
        float $f0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $f0 = virtualinvoke r0.<ucar.ma2.StructureDataW: float getScalarFloat(ucar.ma2.StructureMembers$Member)>(r1);

        return $f0;
    }

    public double convertScalarDouble(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureDataW r0;
        ucar.ma2.StructureMembers$Member r1;
        double $d0;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $d0 = virtualinvoke r0.<ucar.ma2.StructureDataW: double getScalarDouble(ucar.ma2.StructureMembers$Member)>(r1);

        return $d0;
    }

    public int convertScalarInt(ucar.ma2.StructureMembers$Member)
    {
        int $i0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $i0 = virtualinvoke r0.<ucar.ma2.StructureDataW: int getScalarInt(ucar.ma2.StructureMembers$Member)>(r1);

        return $i0;
    }

    public long convertScalarLong(ucar.ma2.StructureMembers$Member)
    {
        long $l0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $l0 = virtualinvoke r0.<ucar.ma2.StructureDataW: long getScalarLong(ucar.ma2.StructureMembers$Member)>(r1);

        return $l0;
    }

    public double getScalarDouble(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;
        double $d0;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $d0 = virtualinvoke $r2.<ucar.ma2.Array: double getDouble(ucar.ma2.Index)>($r3);

        return $d0;
    }

    public double[] getJavaArrayDouble(ucar.ma2.StructureMembers$Member)
    {
        double[] $r4, $r5;
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (double[]) $r3;

        $r5 = (double[]) $r4;

        return $r5;
    }

    public float getScalarFloat(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        float $f0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $f0 = virtualinvoke $r2.<ucar.ma2.Array: float getFloat(ucar.ma2.Index)>($r3);

        return $f0;
    }

    public float[] getJavaArrayFloat(ucar.ma2.StructureMembers$Member)
    {
        java.lang.Object $r3;
        float[] $r4, $r5;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (float[]) $r3;

        $r5 = (float[]) $r4;

        return $r5;
    }

    public byte getScalarByte(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        byte $b0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $b0 = virtualinvoke $r2.<ucar.ma2.Array: byte getByte(ucar.ma2.Index)>($r3);

        return $b0;
    }

    public byte[] getJavaArrayByte(ucar.ma2.StructureMembers$Member)
    {
        byte[] $r4, $r5;
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (byte[]) $r3;

        $r5 = (byte[]) $r4;

        return $r5;
    }

    public int getScalarInt(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        int $i0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $i0 = virtualinvoke $r2.<ucar.ma2.Array: int getInt(ucar.ma2.Index)>($r3);

        return $i0;
    }

    public int[] getJavaArrayInt(ucar.ma2.StructureMembers$Member)
    {
        int[] $r4, $r5;
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (int[]) $r3;

        $r5 = (int[]) $r4;

        return $r5;
    }

    public short getScalarShort(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        short $s0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $s0 = virtualinvoke $r2.<ucar.ma2.Array: short getShort(ucar.ma2.Index)>($r3);

        return $s0;
    }

    public short[] getJavaArrayShort(ucar.ma2.StructureMembers$Member)
    {
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r0;
        short[] $r4, $r5;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (short[]) $r3;

        $r5 = (short[]) $r4;

        return $r5;
    }

    public long getScalarLong(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        long $l0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $l0 = virtualinvoke $r2.<ucar.ma2.Array: long getLong(ucar.ma2.Index)>($r3);

        return $l0;
    }

    public long[] getJavaArrayLong(ucar.ma2.StructureMembers$Member)
    {
        long[] $r4, $r5;
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (long[]) $r3;

        $r5 = (long[]) $r4;

        return $r5;
    }

    public char getScalarChar(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.Index0D $r3;
        char $c0;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = <ucar.ma2.Index: ucar.ma2.Index0D scalarIndexImmutable>;

        $c0 = virtualinvoke $r2.<ucar.ma2.Array: char getChar(ucar.ma2.Index)>($r3);

        return $c0;
    }

    public char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)
    {
        char[] $r4, $r5;
        java.lang.Object $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = virtualinvoke $r2.<ucar.ma2.Array: java.lang.Object getStorage()>();

        $r4 = (char[]) $r3;

        $r5 = (char[]) $r4;

        return $r5;
    }

    public java.lang.String getScalarString(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.DataType $r1, $r2;
        char $c1;
        ucar.ma2.StructureDataW r3;
        ucar.ma2.Array $r6, r9;
        ucar.ma2.StructureMembers$Member r0;
        int $i0, i2;
        char[] $r4;
        java.lang.Object $r7;
        java.lang.String $r5, $r8;

        r3 := @this: ucar.ma2.StructureDataW;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r1 != $r2 goto label2;

        $r6 = virtualinvoke r3.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r0);

        r9 = $r6;

        if $r6 != null goto label1;

        r9 = virtualinvoke r3.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r0);

     label1:
        $r7 = virtualinvoke r9.<ucar.ma2.Array: java.lang.Object getObject(int)>(0);

        $r8 = (java.lang.String) $r7;

        return $r8;

     label2:
        $r4 = virtualinvoke r3.<ucar.ma2.StructureDataW: char[] getJavaArrayChar(ucar.ma2.StructureMembers$Member)>(r0);

        i2 = 0;

     label3:
        $i0 = lengthof $r4;

        if i2 >= $i0 goto label5;

        $c1 = $r4[i2];

        if 0 != $c1 goto label4;

        goto label5;

     label4:
        i2 = i2 + 1;

        goto label3;

     label5:
        $r5 = new java.lang.String;

        specialinvoke $r5.<java.lang.String: void <init>(char[],int,int)>($r4, 0, i2);

        return $r5;
    }

    public java.lang.String[] getJavaArrayString(ucar.ma2.StructureMembers$Member)
    {
        java.lang.String[] r18, r20;
        ucar.ma2.StructureDataW r11;
        ucar.ma2.StructureMembers$Member r0;
        ucar.ma2.ArrayChar r19;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r10, $r14, $r17;
        ucar.ma2.ArrayChar$StringIterator $r13;
        boolean $z0;
        ucar.ma2.DataType $r1, $r2, $r3, $r4, $r8;
        java.lang.IllegalArgumentException $r5;
        ucar.ma2.Array $r12, $r15;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Object $r16;

        r11 := @this: ucar.ma2.StructureDataW;

        r0 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r1 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r2 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r1 != $r2 goto label3;

        $r15 = virtualinvoke r11.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r0);

        $i2 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: int getSize()>();

        r18 = newarray (java.lang.String)[$i2];

        i4 = 0;

     label1:
        $i3 = lengthof r18;

        if i4 >= $i3 goto label2;

        $r16 = virtualinvoke $r15.<ucar.ma2.Array: java.lang.Object getObject(int)>(i4);

        $r17 = (java.lang.String) $r16;

        r18[i4] = $r17;

        i4 = i4 + 1;

        goto label1;

     label2:
        return r18;

     label3:
        $r3 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r3 != $r4 goto label6;

        $r12 = virtualinvoke r11.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r0);

        r19 = (ucar.ma2.ArrayChar) $r12;

        $r13 = virtualinvoke r19.<ucar.ma2.ArrayChar: ucar.ma2.ArrayChar$StringIterator getStringIterator()>();

        $i0 = virtualinvoke $r13.<ucar.ma2.ArrayChar$StringIterator: int getNumElems()>();

        r20 = newarray (java.lang.String)[$i0];

        i5 = 0;

     label4:
        $z0 = virtualinvoke $r13.<ucar.ma2.ArrayChar$StringIterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $i1 = i5;

        i5 = i5 + 1;

        $r14 = virtualinvoke $r13.<ucar.ma2.ArrayChar$StringIterator: java.lang.String next()>();

        r20[$i1] = $r14;

        goto label4;

     label5:
        return r20;

     label6:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("getJavaArrayString: not String DataType :");

        $r8 = virtualinvoke r0.<ucar.ma2.StructureMembers$Member: ucar.ma2.DataType getDataType()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    public ucar.ma2.StructureData getScalarStructure(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.StructureData $r4;
        ucar.ma2.ArrayStructure r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        r3 = (ucar.ma2.ArrayStructure) $r2;

        $r4 = virtualinvoke r3.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(0);

        return $r4;
    }

    public ucar.ma2.ArrayStructure getArrayStructure(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.ArrayStructure $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = (ucar.ma2.ArrayStructure) $r2;

        return $r3;
    }

    public ucar.ma2.ArraySequence getArraySequence(ucar.ma2.StructureMembers$Member)
    {
        ucar.ma2.ArraySequence $r3;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array $r2;
        ucar.ma2.StructureMembers$Member r1;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: ucar.ma2.StructureMembers$Member;

        $r2 = virtualinvoke r0.<ucar.ma2.StructureDataW: ucar.ma2.Array getArray(ucar.ma2.StructureMembers$Member)>(r1);

        $r3 = (ucar.ma2.ArraySequence) $r2;

        return $r3;
    }

    public void showInternal(java.util.Formatter, java.lang.String)
    {
        java.lang.Object[] $r11;
        java.util.Iterator $r5;
        java.util.Set $r4;
        ucar.ma2.StructureDataW r0;
        ucar.ma2.Array r10;
        ucar.ma2.StructureMembers$Member r7;
        java.util.Formatter r1;
        java.util.Map $r3, $r8;
        java.lang.Object $r6, $r9;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: ucar.ma2.StructureDataW;

        r1 := @parameter0: java.util.Formatter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<ucar.ma2.StructureData: void showInternal(java.util.Formatter,java.lang.String)>(r1, r2);

        $r3 = r0.<ucar.ma2.StructureDataW: java.util.Map memberData>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set keySet()>();

        $r5 = interfaceinvoke $r4.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.ma2.StructureMembers$Member) $r6;

        $r8 = r0.<ucar.ma2.StructureDataW: java.util.Map memberData>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r7);

        r10 = (ucar.ma2.Array) $r9;

        $r11 = newarray (java.lang.Object)[3];

        $r11[0] = r2;

        $r11[1] = r7;

        $r11[2] = r10;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s %s = %s%n", $r11);

        goto label1;

     label2:
        return;
    }
}
