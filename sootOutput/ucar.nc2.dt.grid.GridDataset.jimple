public class ucar.nc2.dt.grid.GridDataset extends java.lang.Object implements ucar.nc2.dt.GridDataset, ucar.nc2.ft.FeatureDataset
{
    private ucar.nc2.dataset.NetcdfDataset ds;
    private java.util.ArrayList grids;
    private java.util.Map gridsetHash;
    private ucar.unidata.geoloc.LatLonRect llbbMax;
    private ucar.nc2.units.DateRange dateRangeMax;
    protected ucar.nc2.util.cache.FileCache fileCache;
    static final boolean $assertionsDisabled;

    public static ucar.nc2.dt.grid.GridDataset open(java.lang.String) throws java.io.IOException
    {
        java.util.Set $r1;
        java.lang.String r0;
        ucar.nc2.dt.grid.GridDataset $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: java.util.Set getDefaultEnhanceMode()>();

        $r2 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String,java.util.Set)>(r0, $r1);

        return $r2;
    }

    public static ucar.nc2.dt.grid.GridDataset open(java.lang.String, java.util.Set) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset $r4;
        int $i1;
        java.util.Set r1;
        java.lang.String r0;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Set;

        $i1 = (int) -1;

        $r2 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(ucar.nc2.util.cache.FileFactory,java.lang.String,java.util.Set,int,ucar.nc2.util.CancelTask,java.lang.Object)>(null, r0, r1, $i1, null, null);

        $r4 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r4.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return $r4;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset,java.util.Formatter)>(r1, null);

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset, java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r11;
        java.util.Iterator $r7;
        ucar.nc2.dt.grid.GridDataset r0;
        java.util.Set $r4;
        java.util.HashMap $r2;
        java.util.ArrayList $r1;
        java.util.Formatter r5;
        java.util.List $r6;
        ucar.nc2.dataset.VariableEnhanced r10;
        java.lang.Object $r8;
        ucar.nc2.Variable r9;
        ucar.nc2.dataset.NetcdfDataset r3;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r3 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r5 := @parameter1: java.util.Formatter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.dt.grid.GridDataset: java.util.ArrayList grids> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.dt.grid.GridDataset: java.util.Map gridsetHash> = $r2;

        r0.<ucar.nc2.dt.grid.GridDataset: ucar.unidata.geoloc.LatLonRect llbbMax> = null;

        r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax> = null;

        r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds> = r3;

        $r4 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: java.util.Set getDefaultEnhanceMode()>();

        virtualinvoke r3.<ucar.nc2.dataset.NetcdfDataset: void enhance(java.util.Set)>($r4);

        if r5 == null goto label1;

        $r11 = newarray (java.lang.Object)[0];

        virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("GridDataset look for GeoGrids\n", $r11);

     label1:
        $r6 = virtualinvoke r3.<ucar.nc2.dataset.NetcdfDataset: java.util.List getVariables()>();

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (ucar.nc2.Variable) $r8;

        r10 = (ucar.nc2.dataset.VariableEnhanced) r9;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void constructCoordinateSystems(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced,java.util.Formatter)>(r3, r10, r5);

        goto label2;

     label3:
        return;
    }

    private void constructCoordinateSystems(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced, java.util.Formatter)
    {
        ucar.nc2.dt.grid.GridCoordSys $r7, r15;
        java.util.Formatter r4;
        ucar.nc2.Variable r14;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.dataset.VariableDS $r5;
        java.util.Iterator $r2, $r9;
        ucar.nc2.dt.grid.GridDataset r3;
        java.util.List $r1, $r8;
        ucar.nc2.dataset.StructureDS r13;
        ucar.nc2.dataset.VariableEnhanced r0, $r12;
        java.lang.Object $r6, $r10;
        ucar.nc2.dataset.CoordinateSystem r16;
        ucar.nc2.dataset.NetcdfDataset r11;

        r3 := @this: ucar.nc2.dt.grid.GridDataset;

        r11 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        r4 := @parameter2: java.util.Formatter;

        $z0 = r0 instanceof ucar.nc2.dataset.StructureDS;

        if $z0 == 0 goto label3;

        r13 = (ucar.nc2.dataset.StructureDS) r0;

        $r8 = virtualinvoke r13.<ucar.nc2.dataset.StructureDS: java.util.List getVariables()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r14 = (ucar.nc2.Variable) $r10;

        $r12 = (ucar.nc2.dataset.VariableEnhanced) r14;

        specialinvoke r3.<ucar.nc2.dt.grid.GridDataset: void constructCoordinateSystems(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dataset.VariableEnhanced,java.util.Formatter)>(r11, $r12, r4);

        goto label1;

     label2:
        goto label7;

     label3:
        r15 = null;

        $r1 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.util.List getCoordinateSystems()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.nc2.dataset.CoordinateSystem) $r6;

        $r7 = staticinvoke <ucar.nc2.dt.grid.GridCoordSys: ucar.nc2.dt.grid.GridCoordSys makeGridCoordSys(java.util.Formatter,ucar.nc2.dataset.CoordinateSystem,ucar.nc2.dataset.VariableEnhanced)>(r4, r16, r0);

        if $r7 == null goto label5;

        r15 = $r7;

        $z2 = virtualinvoke $r7.<ucar.nc2.dt.grid.GridCoordSys: boolean isProductSet()>();

        if $z2 == 0 goto label5;

        goto label6;

     label5:
        goto label4;

     label6:
        if r15 == null goto label7;

        $r5 = (ucar.nc2.dataset.VariableDS) r0;

        specialinvoke r3.<ucar.nc2.dt.grid.GridDataset: void addGeoGrid(ucar.nc2.dataset.VariableDS,ucar.nc2.dt.grid.GridCoordSys,java.util.Formatter)>($r5, r15, r4);

     label7:
        return;
    }

    private void makeRanges()
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.unidata.geoloc.LatLonRect $r6, $r7, $r8;
        java.util.List $r1;
        ucar.nc2.units.DateRange $r9, $r10, $r11;
        ucar.nc2.dt.GridDataset$Gridset r4;
        ucar.nc2.dt.GridCoordSystem $r5;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = virtualinvoke r0.<ucar.nc2.dt.grid.GridDataset: java.util.List getGridsets()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.GridDataset$Gridset) $r3;

        $r5 = interfaceinvoke r4.<ucar.nc2.dt.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        $r6 = interfaceinvoke $r5.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.LatLonRect getLatLonBoundingBox()>();

        $r7 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.unidata.geoloc.LatLonRect llbbMax>;

        if $r7 != null goto label2;

        r0.<ucar.nc2.dt.grid.GridDataset: ucar.unidata.geoloc.LatLonRect llbbMax> = $r6;

        goto label3;

     label2:
        $r8 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.unidata.geoloc.LatLonRect llbbMax>;

        virtualinvoke $r8.<ucar.unidata.geoloc.LatLonRect: void extend(ucar.unidata.geoloc.LatLonRect)>($r6);

     label3:
        $r9 = interfaceinvoke $r5.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.units.DateRange getDateRange()>();

        if $r9 == null goto label5;

        $r10 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        if $r10 != null goto label4;

        r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax> = $r9;

        goto label5;

     label4:
        $r11 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        virtualinvoke $r11.<ucar.nc2.units.DateRange: void extend(ucar.nc2.units.DateRange)>($r9);

     label5:
        goto label1;

     label6:
        return;
    }

    public java.lang.String getTitle()
    {
        ucar.nc2.dt.grid.GridDataset r0;
        java.lang.String $r2, $r3;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", null);

        if $r2 != null goto label1;

        $r3 = virtualinvoke r0.<ucar.nc2.dt.grid.GridDataset: java.lang.String getName()>();

        goto label2;

     label1:
        $r3 = $r2;

     label2:
        return $r3;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dt.grid.GridDataset r0;
        java.lang.String $r2, r4, $r5;
        ucar.nc2.dataset.NetcdfDataset $r1, $r3;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "description", null);

        r4 = $r2;

        if $r2 != null goto label1;

        $r3 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        r4 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "history", null);

     label1:
        if r4 != null goto label2;

        $r5 = virtualinvoke r0.<ucar.nc2.dt.grid.GridDataset: java.lang.String getName()>();

        goto label3;

     label2:
        $r5 = r4;

     label3:
        return $r5;
    }

    public java.lang.String getLocation()
    {
        java.lang.String $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        return $r2;
    }

    public java.lang.String getLocationURI()
    {
        java.lang.String $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        return $r2;
    }

    public java.util.Date getStartDate()
    {
        ucar.nc2.units.DateRange $r1, $r2, $r3;
        ucar.nc2.dt.grid.GridDataset r0;
        java.util.Date $r5;
        ucar.nc2.units.DateType $r4;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        if $r1 != null goto label1;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void makeRanges()>();

     label1:
        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        if $r2 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r3 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getStart()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateType: java.util.Date getDate()>();

     label3:
        return $r5;
    }

    public java.util.Date getEndDate()
    {
        ucar.nc2.units.DateRange $r1, $r2, $r3;
        ucar.nc2.dt.grid.GridDataset r0;
        java.util.Date $r5;
        ucar.nc2.units.DateType $r4;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        if $r1 != null goto label1;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void makeRanges()>();

     label1:
        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        if $r2 != null goto label2;

        $r5 = null;

        goto label3;

     label2:
        $r3 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateRange: ucar.nc2.units.DateType getEnd()>();

        $r5 = virtualinvoke $r4.<ucar.nc2.units.DateType: java.util.Date getDate()>();

     label3:
        return $r5;
    }

    public ucar.unidata.geoloc.LatLonRect getBoundingBox()
    {
        ucar.unidata.geoloc.LatLonRect $r1, $r2;
        ucar.nc2.dt.grid.GridDataset r0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.unidata.geoloc.LatLonRect llbbMax>;

        if $r1 != null goto label1;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void makeRanges()>();

     label1:
        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.unidata.geoloc.LatLonRect llbbMax>;

        return $r2;
    }

    public void calcBounds() throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset r0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        return;
    }

    public java.util.List getGlobalAttributes()
    {
        java.util.List $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.util.List getGlobalAttributes()>();

        return $r2;
    }

    public ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)
    {
        ucar.nc2.Attribute $r3;
        ucar.nc2.dt.grid.GridDataset r0;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute findGlobalAttributeIgnoreCase(java.lang.String)>(r1);

        return $r3;
    }

    public java.util.List getDataVariables()
    {
        ucar.nc2.dt.GridDatatype r6;
        ucar.nc2.dataset.VariableDS $r7, $r8;
        java.util.Iterator $r4;
        ucar.nc2.dt.grid.GridDataset r1;
        java.util.ArrayList $r0, $r2;
        java.util.List $r3;
        int $i0;
        java.lang.Object $r5;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.grid.GridDataset;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.dt.grid.GridDataset: java.util.ArrayList grids>;

        $i0 = virtualinvoke $r2.<java.util.ArrayList: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r3 = virtualinvoke r1.<ucar.nc2.dt.grid.GridDataset: java.util.List getGrids()>();

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.dt.GridDatatype) $r5;

        $r7 = interfaceinvoke r6.<ucar.nc2.dt.GridDatatype: ucar.nc2.dataset.VariableDS getVariable()>();

        if $r7 == null goto label2;

        $r8 = interfaceinvoke r6.<ucar.nc2.dt.GridDatatype: ucar.nc2.dataset.VariableDS getVariable()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public ucar.nc2.VariableSimpleIF getDataVariable(java.lang.String)
    {
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.Variable $r3;
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findTopVariable(java.lang.String)>(r1);

        return $r3;
    }

    public ucar.nc2.NetcdfFile getNetcdfFile()
    {
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        return $r1;
    }

    private void addGeoGrid(ucar.nc2.dataset.VariableDS, ucar.nc2.dt.grid.GridCoordSys, java.util.Formatter)
    {
        java.lang.Object[] $r11;
        ucar.nc2.dt.grid.GridDataset$Gridset $r5, $r7, r13;
        ucar.nc2.dt.grid.GridCoordSys r1, $r15;
        java.util.Formatter r10;
        java.util.ArrayList $r16;
        ucar.nc2.dt.grid.GeoGrid $r14;
        java.util.Map $r2, $r8;
        java.lang.String $r3, $r9, $r12;
        ucar.nc2.dataset.VariableDS r6;
        ucar.nc2.dt.grid.GridDataset r0;
        java.lang.Object $r4;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r6 := @parameter0: ucar.nc2.dataset.VariableDS;

        r1 := @parameter1: ucar.nc2.dt.grid.GridCoordSys;

        r10 := @parameter2: java.util.Formatter;

        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: java.util.Map gridsetHash>;

        $r3 = virtualinvoke r1.<ucar.nc2.dt.grid.GridCoordSys: java.lang.String getName()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (ucar.nc2.dt.grid.GridDataset$Gridset) $r4;

        r13 = $r5;

        if null != $r5 goto label2;

        $r7 = new ucar.nc2.dt.grid.GridDataset$Gridset;

        specialinvoke $r7.<ucar.nc2.dt.grid.GridDataset$Gridset: void <init>(ucar.nc2.dt.grid.GridDataset,ucar.nc2.dt.grid.GridCoordSys,ucar.nc2.dt.grid.GridDataset$1)>(r0, r1, null);

        r13 = $r7;

        $r8 = r0.<ucar.nc2.dt.grid.GridDataset: java.util.Map gridsetHash>;

        $r9 = virtualinvoke r1.<ucar.nc2.dt.grid.GridCoordSys: java.lang.String getName()>();

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r7);

        if r10 == null goto label1;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = virtualinvoke r1.<ucar.nc2.dt.grid.GridCoordSys: java.lang.String getName()>();

        $r11[0] = $r12;

        virtualinvoke r10.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" -make new GridCoordSys= %s\n", $r11);

     label1:
        virtualinvoke r1.<ucar.nc2.dt.grid.GridCoordSys: void makeVerticalTransform(ucar.nc2.dt.grid.GridDataset,java.util.Formatter)>(r0, r10);

     label2:
        $r14 = new ucar.nc2.dt.grid.GeoGrid;

        $r15 = staticinvoke <ucar.nc2.dt.grid.GridDataset$Gridset: ucar.nc2.dt.grid.GridCoordSys access$100(ucar.nc2.dt.grid.GridDataset$Gridset)>(r13);

        specialinvoke $r14.<ucar.nc2.dt.grid.GeoGrid: void <init>(ucar.nc2.dt.grid.GridDataset,ucar.nc2.dataset.VariableDS,ucar.nc2.dt.grid.GridCoordSys)>(r0, r6, $r15);

        $r16 = r0.<ucar.nc2.dt.grid.GridDataset: java.util.ArrayList grids>;

        virtualinvoke $r16.<java.util.ArrayList: boolean add(java.lang.Object)>($r14);

        staticinvoke <ucar.nc2.dt.grid.GridDataset$Gridset: void access$200(ucar.nc2.dt.grid.GridDataset$Gridset,ucar.nc2.dt.grid.GeoGrid)>(r13, $r14);

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        return $r2;
    }

    public ucar.nc2.dataset.NetcdfDataset getNetcdfDataset()
    {
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        return $r1;
    }

    public java.util.List getGrids()
    {
        ucar.nc2.dt.grid.GridDataset r1;
        java.util.ArrayList $r0, $r2;

        r1 := @this: ucar.nc2.dt.grid.GridDataset;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.dt.grid.GridDataset: java.util.ArrayList grids>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        return $r0;
    }

    public ucar.nc2.dt.GridDatatype findGridDatatype(java.lang.String)
    {
        java.lang.String r1;
        ucar.nc2.dt.grid.GeoGrid $r2;
        ucar.nc2.dt.grid.GridDataset r0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GeoGrid findGridByName(java.lang.String)>(r1);

        return $r2;
    }

    public java.util.List getGridsets()
    {
        ucar.nc2.dt.grid.GridDataset r1;
        java.util.Map $r2;
        java.util.Collection $r3;
        java.util.ArrayList $r0;

        r1 := @this: ucar.nc2.dt.grid.GridDataset;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<ucar.nc2.dt.grid.GridDataset: java.util.Map gridsetHash>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r0;
    }

    public ucar.nc2.dt.grid.GeoGrid findGridByName(java.lang.String)
    {
        java.util.Iterator $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        java.util.ArrayList $r1;
        ucar.nc2.dt.grid.GeoGrid r4;
        java.lang.Object $r3;
        java.lang.String r5, $r6;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: java.util.ArrayList grids>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.grid.GeoGrid) $r3;

        $r6 = virtualinvoke r4.<ucar.nc2.dt.grid.GeoGrid: java.lang.String getName()>();

        $z1 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public java.lang.String getDetailInfo()
    {
        java.lang.String $r2;
        ucar.nc2.dt.grid.GridDataset r1;
        java.util.Formatter $r0;

        r1 := @this: ucar.nc2.dt.grid.GridDataset;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        virtualinvoke r1.<ucar.nc2.dt.grid.GridDataset: void getDetailInfo(java.util.Formatter)>($r0);

        $r2 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r2;
    }

    public void getDetailInfo(java.util.Formatter)
    {
        java.lang.Throwable $r9;
        java.lang.Object[] $r2, $r6, $r12, $r15, $r16, $r19;
        java.util.Formatter r1;
        java.lang.String $r5, $r7, $r18;
        ucar.nc2.dataset.NetcdfDatasetInfo $r3, r14;
        ucar.nc2.dt.grid.GridDataset r0;
        java.io.IOException $r8, $r10, $r11, $r13;
        ucar.nc2.dataset.NetcdfDataset $r4, $r17;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r1 := @parameter0: java.util.Formatter;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void getInfo(java.util.Formatter)>(r1);

        $r2 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n\n----------------------------------------------------\n", $r2);

        r14 = null;

     label01:
        $r3 = new ucar.nc2.dataset.NetcdfDatasetInfo;

        $r4 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r5 = virtualinvoke $r4.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        specialinvoke $r3.<ucar.nc2.dataset.NetcdfDatasetInfo: void <init>(java.lang.String)>($r5);

        r14 = $r3;

        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDatasetInfo: java.lang.String getParseInfo()>();

        $r6[0] = $r7;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r6);

     label02:
        if $r3 == null goto label17;

     label03:
        virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDatasetInfo: void close()>();

     label04:
        goto label17;

     label05:
        $r13 := @caughtexception;

        goto label17;

     label06:
        $r11 := @caughtexception;

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("NetcdfDatasetInfo failed", $r12);

     label07:
        if r14 == null goto label17;

     label08:
        virtualinvoke r14.<ucar.nc2.dataset.NetcdfDatasetInfo: void close()>();

     label09:
        goto label17;

     label10:
        $r10 := @caughtexception;

        goto label17;

     label11:
        $r9 := @caughtexception;

     label12:
        if r14 == null goto label16;

     label13:
        virtualinvoke r14.<ucar.nc2.dataset.NetcdfDatasetInfo: void close()>();

     label14:
        goto label16;

     label15:
        $r8 := @caughtexception;

     label16:
        throw $r9;

     label17:
        $r15 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n\n----------------------------------------------------\n", $r15);

        $r16 = newarray (java.lang.Object)[1];

        $r17 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r18 = virtualinvoke $r17.<ucar.nc2.dataset.NetcdfDataset: java.lang.String toString()>();

        $r16[0] = $r18;

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s", $r16);

        $r19 = newarray (java.lang.Object)[0];

        virtualinvoke r1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n\n----------------------------------------------------\n", $r19);

        return;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label01 to label02 with label06;
        catch java.io.IOException from label08 to label09 with label10;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label06 to label07 with label11;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    private void getInfo(java.util.Formatter)
    {
        ucar.nc2.dt.GridDatatype r22;
        ucar.nc2.dt.grid.GridDataset$Gridset r28;
        ucar.unidata.geoloc.ProjectionImpl $r19, $r25;
        java.lang.Integer $r16;
        java.util.Formatter r4;
        ucar.nc2.dataset.CoordinateAxis r33;
        ucar.nc2.constants.AxisType $r11;
        java.util.Map $r1;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.dt.grid.GridDataset r0;
        java.util.Collection $r2;
        java.util.List $r8, $r31;
        ucar.nc2.dt.GridCoordSystem $r14;
        java.lang.Object[] $r5, $r6, $r12, $r15, $r17, $r20, $r23, $r26, $r29, $r30;
        ucar.unidata.geoloc.ProjectionRect $r27;
        int i0;
        java.lang.String $r24;
        java.util.Iterator $r3, $r9, $r32;
        ucar.unidata.geoloc.LatLonRect $r18;
        java.lang.Object $r10, $r13, $r21;
        ucar.nc2.dataset.NetcdfDataset $r7;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r4 := @parameter0: java.util.Formatter;

        i0 = 0;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: java.util.Map gridsetHash>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r13 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r28 = (ucar.nc2.dt.grid.GridDataset$Gridset) $r13;

        $r14 = virtualinvoke r28.<ucar.nc2.dt.grid.GridDataset$Gridset: ucar.nc2.dt.GridCoordSystem getGeoCoordSystem()>();

        $r15 = newarray (java.lang.Object)[2];

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r15[0] = $r16;

        $r15[1] = $r14;

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%nGridset %d  coordSys=%s", $r15);

        $r17 = newarray (java.lang.Object)[1];

        $r18 = interfaceinvoke $r14.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.LatLonRect getLatLonBoundingBox()>();

        $r17[0] = $r18;

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" LLbb=%s ", $r17);

        $r19 = interfaceinvoke $r14.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        if $r19 == null goto label2;

        $r25 = interfaceinvoke $r14.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionImpl getProjection()>();

        $z1 = virtualinvoke $r25.<ucar.unidata.geoloc.ProjectionImpl: boolean isLatLon()>();

        if $z1 != 0 goto label2;

        $r26 = newarray (java.lang.Object)[1];

        $r27 = interfaceinvoke $r14.<ucar.nc2.dt.GridCoordSystem: ucar.unidata.geoloc.ProjectionRect getBoundingBox()>();

        $r26[0] = $r27;

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" bb= %s", $r26);

     label2:
        $r29 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r29);

        $r30 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Name__________________________Unit__________________________hasMissing_Description%n", $r30);

        $r31 = virtualinvoke r28.<ucar.nc2.dt.grid.GridDataset$Gridset: java.util.List getGrids()>();

        $r32 = interfaceinvoke $r31.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r32.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r21 = interfaceinvoke $r32.<java.util.Iterator: java.lang.Object next()>();

        r22 = (ucar.nc2.dt.GridDatatype) $r21;

        $r23 = newarray (java.lang.Object)[1];

        $r24 = interfaceinvoke r22.<ucar.nc2.dt.GridDatatype: java.lang.String getInfo()>();

        $r23[0] = $r24;

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s%n", $r23);

        goto label3;

     label4:
        i0 = i0 + 1;

        $r20 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r20);

        goto label1;

     label5:
        $r5 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\nGeoReferencing Coordinate Axes\n", $r5);

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("Name__________________________Units_______________Type______Description\n", $r6);

        $r7 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: java.util.List getCoordinateAxes()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label6:
        $z3 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label8;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r33 = (ucar.nc2.dataset.CoordinateAxis) $r10;

        $r11 = virtualinvoke r33.<ucar.nc2.dataset.CoordinateAxis: ucar.nc2.constants.AxisType getAxisType()>();

        if $r11 != null goto label7;

        goto label6;

     label7:
        virtualinvoke r33.<ucar.nc2.dataset.CoordinateAxis: void getInfo(java.util.Formatter)>(r4);

        $r12 = newarray (java.lang.Object)[0];

        virtualinvoke r4.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("\n", $r12);

        goto label6;

     label8:
        return;
    }

    public ucar.nc2.constants.FeatureType getFeatureType()
    {
        ucar.nc2.constants.FeatureType $r0;
        ucar.nc2.dt.grid.GridDataset r1;

        r1 := @this: ucar.nc2.dt.grid.GridDataset;

        $r0 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType GRID>;

        return $r0;
    }

    public ucar.nc2.units.DateRange getDateRange()
    {
        ucar.nc2.units.DateRange $r1, $r2;
        ucar.nc2.dt.grid.GridDataset r0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        if $r1 != null goto label1;

        specialinvoke r0.<ucar.nc2.dt.grid.GridDataset: void makeRanges()>();

     label1:
        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.units.DateRange dateRangeMax>;

        return $r2;
    }

    public java.lang.String getImplementationName()
    {
        java.lang.String $r2;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getConventionUsed()>();

        return $r2;
    }

    public synchronized void close() throws java.io.IOException
    {
        java.lang.Throwable $r5;
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.util.cache.FileCache $r1, $r4;
        ucar.nc2.dataset.NetcdfDataset $r2, $r3;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.util.cache.FileCache fileCache>;

        if $r1 == null goto label1;

        $r4 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.util.cache.FileCache fileCache>;

        virtualinvoke $r4.<ucar.nc2.util.cache.FileCache: void release(ucar.nc2.util.cache.FileCacheable)>(r0);

        goto label5;

     label1:
        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        if $r2 == null goto label2;

        $r3 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: void close()>();

     label2:
        r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds> = null;

        goto label5;

     label3:
        $r5 := @caughtexception;

     label4:
        r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds> = null;

        throw $r5;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean sync() throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1, $r2;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        $r1 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dataset.NetcdfDataset ds>;

        $z0 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: boolean sync()>();

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setFileCache(ucar.nc2.util.cache.FileCache)
    {
        ucar.nc2.dt.grid.GridDataset r0;
        ucar.nc2.util.cache.FileCache r1;

        r0 := @this: ucar.nc2.dt.grid.GridDataset;

        r1 := @parameter0: ucar.nc2.util.cache.FileCache;

        r0.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.util.cache.FileCache fileCache> = r1;

        return;
    }

    public static ucar.nc2.dt.grid.GridDataset factory(java.lang.String) throws java.io.IOException
    {
        java.lang.String r0;
        ucar.nc2.dt.grid.GridDataset $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>(r0);

        return $r1;
    }

    private static ucar.nc2.dt.grid.GridDataset openGridDataset(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.dt.grid.GridDataset $r3;
        java.lang.String r0;
        ucar.nc2.NetcdfFile $r1;
        ucar.nc2.dataset.NetcdfDataset $r2, r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.NetcdfFile acquireFile(java.lang.String,ucar.nc2.util.CancelTask)>(r0, null);

        if $r1 != null goto label1;

        return null;

     label1:
        $z0 = $r1 instanceof ucar.nc2.dataset.NetcdfDataset;

        if $z0 == 0 goto label2;

        r4 = (ucar.nc2.dataset.NetcdfDataset) $r1;

        virtualinvoke r4.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.CoordSysBuilderIF enhance()>();

        goto label3;

     label2:
        $r2 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: void <init>(ucar.nc2.NetcdfFile,boolean)>($r1, 1);

        r4 = $r2;

     label3:
        $r3 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r3.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r4);

        return $r3;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r4;
        ucar.nc2.dt.grid.GridDataset $r1, $r3;
        java.lang.String[] r0;
        java.lang.AssertionError $r6;
        java.lang.Exception $r7;
        ucar.nc2.dt.grid.GeoGrid $r2;
        int $i0;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r8 = r0[0];

        goto label2;

     label1:
        $r8 = "R:/testdata/grid/netcdf/cf/mississippi.nc";

     label2:
        $r1 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset openGridDataset(java.lang.String)>($r8);

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GeoGrid findGridByName(java.lang.String)>("latent");

        $z0 = <ucar.nc2.dt.grid.GridDataset: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if $r2 != null goto label3;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label3:
        virtualinvoke $r2.<ucar.nc2.dt.grid.GeoGrid: void writeFile(java.lang.String)>("C:/data/writeGrid.nc");

        $r3 = staticinvoke <ucar.nc2.dt.grid.GridDataset: ucar.nc2.dt.grid.GridDataset open(java.lang.String)>("C:/data/writeGrid.nc");

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r5 = virtualinvoke $r3.<ucar.nc2.dt.grid.GridDataset: java.lang.String getDetailInfo()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label6:
        return;

        catch java.lang.Exception from label2 to label4 with label5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lucar/nc2/dt/grid/GridDataset;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <ucar.nc2.dt.grid.GridDataset: boolean $assertionsDisabled> = $z1;

        return;
    }
}
