class org.apache.solr.common.cloud.ZkStateReader$4 extends java.lang.Object implements org.apache.zookeeper.Watcher
{
    final org.apache.solr.common.cloud.ZkStateReader this$0;

    void <init>(org.apache.solr.common.cloud.ZkStateReader)
    {
        org.apache.solr.common.cloud.ZkStateReader r1;
        org.apache.solr.common.cloud.ZkStateReader$4 r0;

        r0 := @this: org.apache.solr.common.cloud.ZkStateReader$4;

        r1 := @parameter0: org.apache.solr.common.cloud.ZkStateReader;

        r0.<org.apache.solr.common.cloud.ZkStateReader$4: org.apache.solr.common.cloud.ZkStateReader this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void process(org.apache.zookeeper.WatchedEvent)
    {
        java.lang.Throwable $r25;
        byte[] $r10;
        org.apache.zookeeper.data.Stat $r7;
        org.apache.zookeeper.KeeperException$Code $r17, $r18, $r20, $r21;
        java.lang.Thread $r14;
        boolean $z0;
        org.apache.solr.common.cloud.ZkStateReader $r4, $r8, $r12;
        org.slf4j.Logger $r6, $r15, $r19, $r22;
        org.apache.solr.common.cloud.Aliases $r11;
        org.apache.zookeeper.KeeperException $r16;
        org.apache.solr.common.cloud.ZooKeeperException $r23;
        org.apache.zookeeper.WatchedEvent r0;
        org.apache.solr.common.SolrException$ErrorCode $r24;
        org.apache.solr.common.cloud.ZkStateReader$4 r3;
        java.lang.InterruptedException $r13;
        org.apache.zookeeper.Watcher$Event$EventType $r1, $r2;
        java.lang.Object $r5;
        org.apache.solr.common.cloud.SolrZkClient $r9;

        r3 := @this: org.apache.solr.common.cloud.ZkStateReader$4;

        r0 := @parameter0: org.apache.zookeeper.WatchedEvent;

        $r1 = <org.apache.zookeeper.Watcher$Event$EventType: org.apache.zookeeper.Watcher$Event$EventType None>;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.Watcher$Event$EventType getType()>();

        $z0 = virtualinvoke $r1.<org.apache.zookeeper.Watcher$Event$EventType: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label01;

        return;

     label01:
        $r4 = r3.<org.apache.solr.common.cloud.ZkStateReader$4: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r5 = virtualinvoke $r4.<org.apache.solr.common.cloud.ZkStateReader: java.lang.Object getUpdateLock()>();

        entermonitor $r5;

     label02:
        $r6 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r6.<org.slf4j.Logger: void info(java.lang.String)>("Updating aliases... ");

        $r7 = new org.apache.zookeeper.data.Stat;

        specialinvoke $r7.<org.apache.zookeeper.data.Stat: void <init>()>();

        $r8 = r3.<org.apache.solr.common.cloud.ZkStateReader$4: org.apache.solr.common.cloud.ZkStateReader this$0>;

        $r9 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.SolrZkClient access$300(org.apache.solr.common.cloud.ZkStateReader)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.solr.common.cloud.SolrZkClient: byte[] getData(java.lang.String,org.apache.zookeeper.Watcher,org.apache.zookeeper.data.Stat,boolean)>("/aliases.json", r3, $r7, 1);

        $r11 = staticinvoke <org.apache.solr.common.cloud.ClusterState: org.apache.solr.common.cloud.Aliases load(byte[])>($r10);

        $r12 = r3.<org.apache.solr.common.cloud.ZkStateReader$4: org.apache.solr.common.cloud.ZkStateReader this$0>;

        staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.apache.solr.common.cloud.Aliases access$402(org.apache.solr.common.cloud.ZkStateReader,org.apache.solr.common.cloud.Aliases)>($r12, $r11);

        exitmonitor $r5;

     label03:
        goto label06;

     label04:
        $r25 := @caughtexception;

        exitmonitor $r5;

     label05:
        throw $r25;

     label06:
        goto label11;

     label07:
        $r16 := @caughtexception;

        $r17 = virtualinvoke $r16.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $r18 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code SESSIONEXPIRED>;

        if $r17 == $r18 goto label08;

        $r20 = virtualinvoke $r16.<org.apache.zookeeper.KeeperException: org.apache.zookeeper.KeeperException$Code code()>();

        $r21 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code CONNECTIONLOSS>;

        if $r20 != $r21 goto label09;

     label08:
        $r19 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>("ZooKeeper watch triggered, but Solr cannot talk to ZK");

        return;

     label09:
        $r22 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("", $r16);

        $r23 = new org.apache.solr.common.cloud.ZooKeeperException;

        $r24 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode SERVER_ERROR>;

        specialinvoke $r23.<org.apache.solr.common.cloud.ZooKeeperException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String,java.lang.Throwable)>($r24, "", $r16);

        throw $r23;

     label10:
        $r13 := @caughtexception;

        $r14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r14.<java.lang.Thread: void interrupt()>();

        $r15 = staticinvoke <org.apache.solr.common.cloud.ZkStateReader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r15.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("", $r13);

        return;

     label11:
        return;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch org.apache.zookeeper.KeeperException from label01 to label06 with label07;
        catch java.lang.InterruptedException from label01 to label06 with label10;
    }
}
