public class org.codehaus.groovy.reflection.stdclasses.NumberCachedClass extends org.codehaus.groovy.reflection.CachedClass
{
    static java.lang.Class class$java$lang$Number;
    static java.lang.Class class$java$lang$Byte;
    static java.lang.Class class$java$math$BigInteger;

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.groovy.reflection.stdclasses.NumberCachedClass r0;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.NumberCachedClass;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.groovy.reflection.CachedClass: void <init>(java.lang.Class)>(r1);

        return;
    }

    public java.lang.Object coerceArgument(java.lang.Object)
    {
        org.codehaus.groovy.reflection.stdclasses.NumberCachedClass r1;
        java.lang.Object r0, $r2;
        boolean $z0;

        r1 := @this: org.codehaus.groovy.reflection.stdclasses.NumberCachedClass;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        $r2 = specialinvoke r1.<org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Object coerceNumber(java.lang.Object)>(r0);

        return $r2;

     label1:
        return r0;
    }

    public boolean isAssignableFrom(java.lang.Class)
    {
        org.codehaus.groovy.reflection.stdclasses.NumberCachedClass r8;
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9;
        boolean $z0, $z1;

        r8 := @this: org.codehaus.groovy.reflection.stdclasses.NumberCachedClass;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label3;

        $r1 = <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$lang$Number>;

        if $r1 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Number");

        <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$lang$Number> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$lang$Number>;

     label2:
        $z0 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 != 0 goto label3;

        $r2 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 == $r2 goto label3;

        $r3 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 == $r3 goto label3;

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 == $r4 goto label3;

        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 == $r5 goto label3;

        $r6 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 == $r6 goto label3;

        $r7 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 != $r7 goto label4;

     label3:
        $z1 = 1;

        goto label5;

     label4:
        $z1 = 0;

     label5:
        return $z1;
    }

    private java.lang.Object coerceNumber(java.lang.Object)
    {
        byte $b0;
        org.codehaus.groovy.reflection.stdclasses.NumberCachedClass r0;
        java.lang.Class $r1, $r2, $r3, $r10, $r11;
        java.math.BigInteger $r4;
        java.lang.Object r9;
        java.lang.String $r6;
        java.lang.Number $r5, $r8;
        java.lang.Byte $r7;

        r0 := @this: org.codehaus.groovy.reflection.stdclasses.NumberCachedClass;

        r9 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class getTheClass()>();

        $r2 = <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$lang$Byte>;

        if $r2 != null goto label1;

        $r10 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$(java.lang.String)>("java.lang.Byte");

        <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$lang$Byte> = $r10;

        goto label2;

     label1:
        $r10 = <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$lang$Byte>;

     label2:
        if $r1 != $r10 goto label3;

        $r7 = new java.lang.Byte;

        $r8 = (java.lang.Number) r9;

        $b0 = virtualinvoke $r8.<java.lang.Number: byte byteValue()>();

        specialinvoke $r7.<java.lang.Byte: void <init>(byte)>($b0);

        r9 = $r7;

        goto label6;

     label3:
        $r3 = <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$math$BigInteger>;

        if $r3 != null goto label4;

        $r11 = staticinvoke <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$(java.lang.String)>("java.math.BigInteger");

        <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$math$BigInteger> = $r11;

        goto label5;

     label4:
        $r11 = <org.codehaus.groovy.reflection.stdclasses.NumberCachedClass: java.lang.Class class$java$math$BigInteger>;

     label5:
        if $r1 != $r11 goto label6;

        $r4 = new java.math.BigInteger;

        $r5 = (java.lang.Number) r9;

        $r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r5);

        specialinvoke $r4.<java.math.BigInteger: void <init>(java.lang.String)>($r6);

        r9 = $r4;

     label6:
        return r9;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
