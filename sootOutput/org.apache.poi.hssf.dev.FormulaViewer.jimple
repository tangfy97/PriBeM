public class org.apache.poi.hssf.dev.FormulaViewer extends java.lang.Object
{
    private java.lang.String file;
    private boolean list;

    public void <init>()
    {
        org.apache.poi.hssf.dev.FormulaViewer r0;

        r0 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hssf.dev.FormulaViewer: boolean list> = 0;

        return;
    }

    public void run() throws java.lang.Exception
    {
        org.apache.poi.hssf.dev.FormulaViewer r1;
        org.apache.poi.hssf.record.Record r6;
        java.io.File $r9;
        java.util.List $r4;
        short $s1;
        int $i0, i2, $i3;
        java.lang.Object $r5;
        java.lang.String $r2;
        org.apache.poi.hssf.record.FormulaRecord $r7, $r8;
        java.io.InputStream $r3;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        $r9 = new java.io.File;

        $r2 = r1.<org.apache.poi.hssf.dev.FormulaViewer: java.lang.String file>;

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r2);

        $r3 = staticinvoke <org.apache.poi.hssf.dev.BiffViewer: java.io.InputStream getPOIFSInputStream(java.io.File)>($r9);

        $r4 = staticinvoke <org.apache.poi.hssf.record.RecordFactory: java.util.List createRecords(java.io.InputStream)>($r3);

        i2 = 0;

     label1:
        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if i2 >= $i0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = (org.apache.poi.hssf.record.Record) $r5;

        $s1 = virtualinvoke r6.<org.apache.poi.hssf.record.Record: short getSid()>();

        $i3 = (int) $s1;

        if $i3 != 6 goto label3;

        $z0 = r1.<org.apache.poi.hssf.dev.FormulaViewer: boolean list>;

        if $z0 == 0 goto label2;

        $r8 = (org.apache.poi.hssf.record.FormulaRecord) r6;

        specialinvoke r1.<org.apache.poi.hssf.dev.FormulaViewer: void listFormula(org.apache.poi.hssf.record.FormulaRecord)>($r8);

        goto label3;

     label2:
        $r7 = (org.apache.poi.hssf.record.FormulaRecord) r6;

        virtualinvoke r1.<org.apache.poi.hssf.dev.FormulaViewer: void parseFormulaRecord(org.apache.poi.hssf.record.FormulaRecord)>($r7);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return;
    }

    private void listFormula(org.apache.poi.hssf.record.FormulaRecord)
    {
        org.apache.poi.ss.formula.ptg.Ptg r8, r10;
        byte $b2, $b4;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1;
        java.lang.StringBuffer $r11;
        int i0, $i1, $i3, $i5, $i7, $i8, $i9;
        java.lang.String $r4, $r6, r9;
        boolean $z0, $z1;
        java.io.PrintStream $r5;
        org.apache.poi.hssf.dev.FormulaViewer r7;
        org.apache.poi.ss.formula.ptg.OperationPtg $r3;
        org.apache.poi.hssf.record.FormulaRecord r0;

        r7 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        r0 := @parameter0: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression()>();

        i0 = lengthof $r1;

        $i1 = i0 - 1;

        r8 = $r1[$i1];

        $z0 = r8 instanceof org.apache.poi.ss.formula.ptg.FuncPtg;

        if $z0 == 0 goto label01;

        $i5 = i0 - 1;

        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i5);

        goto label02;

     label01:
        $i7 = (int) -1;

        r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i7);

     label02:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $z1 = r8 instanceof org.apache.poi.ss.formula.ptg.ExpPtg;

        if $z1 == 0 goto label03;

        return;

     label03:
        $r3 = (org.apache.poi.ss.formula.ptg.OperationPtg) r8;

        $r4 = virtualinvoke $r3.<org.apache.poi.ss.formula.ptg.OperationPtg: java.lang.String toFormulaString()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("~");

        $b2 = virtualinvoke r8.<org.apache.poi.ss.formula.ptg.Ptg: byte getPtgClass()>();

        $i8 = (int) $b2;

        lookupswitch($i8)
        {
            case 0: goto label04;
            case 32: goto label05;
            case 64: goto label06;
            default: goto label07;
        };

     label04:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("REF");

        goto label07;

     label05:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VALUE");

        goto label07;

     label06:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ARRAY");

     label07:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("~");

        if i0 <= 1 goto label12;

        $i3 = i0 - 2;

        r10 = $r1[$i3];

        $b4 = virtualinvoke r10.<org.apache.poi.ss.formula.ptg.Ptg: byte getPtgClass()>();

        $i9 = (int) $b4;

        lookupswitch($i9)
        {
            case 0: goto label08;
            case 32: goto label09;
            case 64: goto label10;
            default: goto label11;
        };

     label08:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("REF");

        goto label11;

     label09:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VALUE");

        goto label11;

     label10:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ARRAY");

     label11:
        goto label13;

     label12:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("VALUE");

     label13:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("~");

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r6 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r6);

        return;
    }

    public void parseFormulaRecord(org.apache.poi.hssf.record.FormulaRecord)
    {
        java.lang.StringBuilder $r3, $r5, $r9, $r10, $r14, $r15, $r19, $r20, $r24, $r26, $r30, $r31, $r35, $r38, $r42, $r44, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53;
        short $s1, $s2, $s4;
        org.apache.poi.ss.formula.ptg.Ptg[] $r25;
        int $i0, $i3, $i5, $i6, $i7;
        java.lang.String $r6, $r11, $r16, $r21, $r27, $r32, $r37, $r39, $r43, $r45;
        double $d0;
        java.io.PrintStream $r0, $r2, $r8, $r13, $r18, $r23, $r29, $r34, $r41;
        org.apache.poi.hssf.dev.FormulaViewer r36;
        org.apache.poi.hssf.record.FormulaRecord r4;

        r36 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        r4 := @parameter0: org.apache.poi.hssf.record.FormulaRecord;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("==============================");

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("row = ");

        $i0 = virtualinvoke r4.<org.apache.poi.hssf.record.FormulaRecord: int getRow()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void print(java.lang.String)>($r6);

        $r8 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", col = ");

        $s1 = virtualinvoke r4.<org.apache.poi.hssf.record.FormulaRecord: short getColumn()>();

        $i5 = (int) $s1;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r11);

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("value = ");

        $d0 = virtualinvoke r4.<org.apache.poi.hssf.record.FormulaRecord: double getValue()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xf = ");

        $s2 = virtualinvoke r4.<org.apache.poi.hssf.record.FormulaRecord: short getXFIndex()>();

        $i6 = (int) $s2;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void print(java.lang.String)>($r21);

        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", number of ptgs = ");

        $r25 = virtualinvoke r4.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression()>();

        $i3 = lengthof $r25;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void print(java.lang.String)>($r27);

        $r29 = <java.lang.System: java.io.PrintStream out>;

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", options = ");

        $s4 = virtualinvoke r4.<org.apache.poi.hssf.record.FormulaRecord: short getOptions()>();

        $i7 = (int) $s4;

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r32);

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RPN List = ");

        $r37 = specialinvoke r36.<org.apache.poi.hssf.dev.FormulaViewer: java.lang.String formulaString(org.apache.poi.hssf.record.FormulaRecord)>(r4);

        $r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r39);

        $r41 = <java.lang.System: java.io.PrintStream out>;

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Formula text = ");

        $r43 = staticinvoke <org.apache.poi.hssf.dev.FormulaViewer: java.lang.String composeFormula(org.apache.poi.hssf.record.FormulaRecord)>(r4);

        $r44 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r45);

        return;
    }

    private java.lang.String formulaString(org.apache.poi.hssf.record.FormulaRecord)
    {
        org.apache.poi.ss.formula.ptg.Ptg r4;
        org.apache.poi.hssf.dev.FormulaViewer r6;
        byte $b1;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;
        java.lang.StringBuffer $r7;
        int $i0, i2, $i3;
        java.lang.String $r3, $r5;
        org.apache.poi.hssf.record.FormulaRecord r1;

        r6 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        r1 := @parameter0: org.apache.poi.hssf.record.FormulaRecord;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression()>();

        i2 = 0;

     label1:
        $i0 = lengthof $r2;

        if i2 >= $i0 goto label6;

        r4 = $r2[i2];

        $r5 = virtualinvoke r4.<org.apache.poi.ss.formula.ptg.Ptg: java.lang.String toFormulaString()>();

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $b1 = virtualinvoke r4.<org.apache.poi.ss.formula.ptg.Ptg: byte getPtgClass()>();

        $i3 = (int) $b1;

        lookupswitch($i3)
        {
            case 0: goto label2;
            case 32: goto label3;
            case 64: goto label4;
            default: goto label5;
        };

     label2:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(R)");

        goto label5;

     label3:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(V)");

        goto label5;

     label4:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(A)");

     label5:
        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i2 = i2 + 1;

        goto label1;

     label6:
        $r3 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    private static java.lang.String composeFormula(org.apache.poi.hssf.record.FormulaRecord)
    {
        java.lang.String $r2;
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1;

        r0 := @parameter0: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression()>();

        $r2 = staticinvoke <org.apache.poi.hssf.model.HSSFFormulaParser: java.lang.String toFormulaString(org.apache.poi.hssf.usermodel.HSSFWorkbook,org.apache.poi.ss.formula.ptg.Ptg[])>(null, $r1);

        return $r2;
    }

    public void setFile(java.lang.String)
    {
        org.apache.poi.hssf.dev.FormulaViewer r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.poi.hssf.dev.FormulaViewer: java.lang.String file> = r1;

        return;
    }

    public void setList(boolean)
    {
        org.apache.poi.hssf.dev.FormulaViewer r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.dev.FormulaViewer;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hssf.dev.FormulaViewer: boolean list> = z0;

        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r1, $r2, $r4, $r6;
        boolean $z0, $z1;
        java.io.PrintStream $r8, $r10, $r11, $r12;
        org.apache.poi.hssf.dev.FormulaViewer $r3, $r5;
        java.lang.Exception $r7, $r9;

        r0 := @parameter0: java.lang.String[];

        if r0 == null goto label1;

        $i0 = lengthof r0;

        if $i0 > 2 goto label1;

        $r1 = r0[0];

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("--help");

        if $z0 == 0 goto label2;

     label1:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("FormulaViewer .8 proof that the devil lies in the details (or just in BIFF8 files in general)");

        $r12 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>("usage: Give me a big fat file name");

        goto label9;

     label2:
        $r2 = r0[0];

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("--listFunctions");

        if $z1 == 0 goto label6;

     label3:
        $r5 = new org.apache.poi.hssf.dev.FormulaViewer;

        specialinvoke $r5.<org.apache.poi.hssf.dev.FormulaViewer: void <init>()>();

        $r6 = r0[1];

        virtualinvoke $r5.<org.apache.poi.hssf.dev.FormulaViewer: void setFile(java.lang.String)>($r6);

        virtualinvoke $r5.<org.apache.poi.hssf.dev.FormulaViewer: void setList(boolean)>(1);

        virtualinvoke $r5.<org.apache.poi.hssf.dev.FormulaViewer: void run()>();

     label4:
        goto label9;

     label5:
        $r9 := @caughtexception;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Whoops!");

        virtualinvoke $r9.<java.lang.Exception: void printStackTrace()>();

        goto label9;

     label6:
        $r3 = new org.apache.poi.hssf.dev.FormulaViewer;

        specialinvoke $r3.<org.apache.poi.hssf.dev.FormulaViewer: void <init>()>();

        $r4 = r0[0];

        virtualinvoke $r3.<org.apache.poi.hssf.dev.FormulaViewer: void setFile(java.lang.String)>($r4);

        virtualinvoke $r3.<org.apache.poi.hssf.dev.FormulaViewer: void run()>();

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

        $r8 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>("Whoops!");

        virtualinvoke $r7.<java.lang.Exception: void printStackTrace()>();

     label9:
        return;

        catch java.lang.Exception from label3 to label4 with label5;
        catch java.lang.Exception from label6 to label7 with label8;
    }
}
