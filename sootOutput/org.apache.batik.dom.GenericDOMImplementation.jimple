public class org.apache.batik.dom.GenericDOMImplementation extends org.apache.batik.dom.AbstractDOMImplementation
{
    protected static final org.w3c.dom.DOMImplementation DOM_IMPLEMENTATION;

    public void <init>()
    {
        org.apache.batik.dom.GenericDOMImplementation r0;

        r0 := @this: org.apache.batik.dom.GenericDOMImplementation;

        specialinvoke r0.<org.apache.batik.dom.AbstractDOMImplementation: void <init>()>();

        return;
    }

    public static org.w3c.dom.DOMImplementation getDOMImplementation()
    {
        org.w3c.dom.DOMImplementation $r0;

        $r0 = <org.apache.batik.dom.GenericDOMImplementation: org.w3c.dom.DOMImplementation DOM_IMPLEMENTATION>;

        return $r0;
    }

    public org.w3c.dom.DocumentType createDocumentType(java.lang.String, java.lang.String, java.lang.String)
    {
        org.w3c.dom.DOMException $r0;
        org.apache.batik.dom.GenericDOMImplementation r1;
        java.lang.String r2, r3, r4;

        r1 := @this: org.apache.batik.dom.GenericDOMImplementation;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r0 = new org.w3c.dom.DOMException;

        specialinvoke $r0.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(9, "Doctype not supported");

        throw $r0;
    }

    public org.w3c.dom.Document createDocument(java.lang.String, java.lang.String, org.w3c.dom.DocumentType) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.Element $r5;
        org.apache.batik.dom.GenericDOMImplementation r2;
        java.lang.String r3, r4;
        org.apache.batik.dom.GenericDocument $r0;
        org.w3c.dom.DocumentType r1;

        r2 := @this: org.apache.batik.dom.GenericDOMImplementation;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r1 := @parameter2: org.w3c.dom.DocumentType;

        $r0 = new org.apache.batik.dom.GenericDocument;

        specialinvoke $r0.<org.apache.batik.dom.GenericDocument: void <init>(org.w3c.dom.DocumentType,org.w3c.dom.DOMImplementation)>(r1, r2);

        $r5 = interfaceinvoke $r0.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>(r3, r4);

        interfaceinvoke $r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r5);

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.batik.dom.GenericDOMImplementation $r0;

        $r0 = new org.apache.batik.dom.GenericDOMImplementation;

        specialinvoke $r0.<org.apache.batik.dom.GenericDOMImplementation: void <init>()>();

        <org.apache.batik.dom.GenericDOMImplementation: org.w3c.dom.DOMImplementation DOM_IMPLEMENTATION> = $r0;

        return;
    }
}
