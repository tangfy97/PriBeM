public class ucar.nc2.dt.fmrc.FmrcImpl extends java.lang.Object implements ucar.nc2.dt.fmrc.ForecastModelRunCollection
{
    private static org.slf4j.Logger logger;
    private static final java.lang.String BEST;
    private static final java.lang.String RUN;
    private static final java.lang.String FORECAST;
    private static final java.lang.String OFFSET;
    private ucar.nc2.dataset.NetcdfDataset ncd_2dtime;
    private ucar.nc2.dt.GridDataset gds;
    private java.util.Date baseDate;
    private java.lang.String runtimeDimName;
    private java.util.List gridsets;
    private java.util.Map gridHash;
    private java.util.Set coordSet;
    private java.util.List runtimes;
    private java.util.List forecasts;
    private java.util.List offsets;

    public void <init>(java.lang.String) throws java.io.IOException
    {
        java.lang.String r1;
        ucar.nc2.dataset.NetcdfDataset $r2;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: ucar.nc2.dataset.NetcdfDataset acquireDataset(java.lang.String,ucar.nc2.util.CancelTask)>(r1, null);

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>($r2);

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dataset.NetcdfDataset r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: void init(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return;
    }

    public boolean sync() throws java.io.IOException
    {
        org.slf4j.Logger $r2, $r5;
        java.lang.StringBuilder $r4, $r6, $r9;
        java.lang.String $r8, $r10;
        ucar.nc2.dataset.NetcdfDataset $r1, $r3, $r7;
        ucar.nc2.dt.fmrc.FmrcImpl r0;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: boolean sync()>();

        if $z0 == 0 goto label2;

        $r2 = <ucar.nc2.dt.fmrc.FmrcImpl: org.slf4j.Logger logger>;

        $z1 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r5 = <ucar.nc2.dt.fmrc.FmrcImpl: org.slf4j.Logger logger>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ncd_2dtime changed, reinit Fmrc ");

        $r7 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r8 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

     label1:
        $r3 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: void init(ucar.nc2.dataset.NetcdfDataset)>($r3);

     label2:
        return $z0;
    }

    public ucar.nc2.dt.GridDataset getGridDataset()
    {
        ucar.nc2.dt.GridDataset $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dt.GridDataset gds>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        ucar.nc2.dt.GridDataset $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dt.GridDataset gds>;

        interfaceinvoke $r1.<ucar.nc2.dt.GridDataset: void close()>();

        return;
    }

    private void init(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r57;
        ucar.nc2.dataset.CoordinateAxis $r39;
        java.util.Map $r51;
        ucar.nc2.dt.grid.GridDataset $r4;
        java.util.Set $r47, $r54;
        ucar.nc2.dt.GridCoordSystem $r31, $r38;
        java.lang.Object[] $r17, $r21;
        java.lang.Double $r35;
        java.util.ArrayList $r12;
        java.lang.String $r46, $r48, $r52, $r55;
        ucar.nc2.dt.GridDataset $r5;
        ucar.nc2.Dimension $r45;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.util.Date r34, $r43, r61;
        boolean $z0, $z1, $z2;
        ucar.nc2.dataset.CoordinateAxis1DTime $r32, $r40, $r41;
        java.util.Collection $r13;
        java.util.List $r6, $r9, $r14, $r18, $r19, $r22, $r23, $r24, $r28, $r29, $r44, $r50, $r59;
        java.util.Date[] $r16, $r33, $r42;
        java.util.HashMap $r2, $r7;
        java.util.HashSet $r3, $r10, $r11;
        int $i0, $i1, $i2, $i3, i4, i5, i6;
        ucar.nc2.dt.fmrc.FmrcImpl$Gridset $r53, r58, r60, r62;
        double $d0;
        java.util.Iterator $r8, $r15, $r25;
        java.lang.Double[] $r20;
        java.lang.IllegalArgumentException $r36, $r56;
        java.lang.Object $r26, $r27, $r30, $r37, $r49;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime> = r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Map gridHash> = $r2;

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>()>();

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Set coordSet> = $r3;

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes> = null;

        $r4 = new ucar.nc2.dt.grid.GridDataset;

        specialinvoke $r4.<ucar.nc2.dt.grid.GridDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dt.GridDataset gds> = $r4;

        $r5 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dt.GridDataset gds>;

        $r6 = interfaceinvoke $r5.<ucar.nc2.dt.GridDataset: java.util.List getGrids()>();

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        $r56 = new java.lang.IllegalArgumentException;

        specialinvoke $r56.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no grids");

        throw $r56;

     label01:
        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        $r8 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label06;

        $r37 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r57 = (ucar.nc2.dt.GridDatatype) $r37;

        $r38 = interfaceinvoke r57.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r39 = interfaceinvoke $r38.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getTimeAxis()>();

        if $r39 == null goto label04;

        $r49 = virtualinvoke $r7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r39);

        r58 = (ucar.nc2.dt.fmrc.FmrcImpl$Gridset) $r49;

        if r58 != null goto label03;

        $r53 = new ucar.nc2.dt.fmrc.FmrcImpl$Gridset;

        specialinvoke $r53.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: void <init>(ucar.nc2.dt.fmrc.FmrcImpl,ucar.nc2.dataset.CoordinateAxis,ucar.nc2.dt.GridCoordSystem)>(r0, $r39, $r38);

        r58 = $r53;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r39, $r53);

        $r54 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Set coordSet>;

        $r55 = virtualinvoke $r39.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        interfaceinvoke $r54.<java.util.Set: boolean add(java.lang.Object)>($r55);

     label03:
        $r50 = r58.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: java.util.List gridList>;

        interfaceinvoke $r50.<java.util.List: boolean add(java.lang.Object)>(r57);

        $r51 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Map gridHash>;

        $r52 = interfaceinvoke r57.<ucar.nc2.dt.GridDatatype: java.lang.String getName()>();

        interfaceinvoke $r51.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r52, r58);

     label04:
        $r59 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        if $r59 != null goto label05;

        $r40 = interfaceinvoke $r38.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getRunTimeAxis()>();

        if $r40 == null goto label05;

        $r41 = interfaceinvoke $r38.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getRunTimeAxis()>();

        $r42 = virtualinvoke $r41.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        $r43 = $r42[0];

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Date baseDate> = $r43;

        $r44 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r42);

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes> = $r44;

        $r45 = virtualinvoke $r41.<ucar.nc2.dataset.CoordinateAxis1DTime: ucar.nc2.Dimension getDimension(int)>(0);

        $r46 = virtualinvoke $r45.<ucar.nc2.Dimension: java.lang.String getName()>();

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String runtimeDimName> = $r46;

        $r47 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Set coordSet>;

        $r48 = virtualinvoke $r41.<ucar.nc2.dataset.CoordinateAxis1DTime: java.lang.String getName()>();

        interfaceinvoke $r47.<java.util.Set: boolean add(java.lang.Object)>($r48);

     label05:
        goto label02;

     label06:
        $r9 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        if $r9 != null goto label07;

        $r36 = new java.lang.IllegalArgumentException;

        specialinvoke $r36.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("no runtime dimension");

        throw $r36;

     label07:
        $r10 = new java.util.HashSet;

        specialinvoke $r10.<java.util.HashSet: void <init>()>();

        $r11 = new java.util.HashSet;

        specialinvoke $r11.<java.util.HashSet: void <init>()>();

        $r12 = new java.util.ArrayList;

        $r13 = virtualinvoke $r7.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r12.<java.util.ArrayList: void <init>(java.util.Collection)>($r13);

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List gridsets> = $r12;

        $r14 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List gridsets>;

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label13;

        $r27 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r60 = (ucar.nc2.dt.fmrc.FmrcImpl$Gridset) $r27;

        i5 = 0;

     label09:
        $r28 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        $i3 = interfaceinvoke $r28.<java.util.List: int size()>();

        if i5 >= $i3 goto label12;

        $r29 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        $r30 = interfaceinvoke $r29.<java.util.List: java.lang.Object get(int)>(i5);

        r61 = (java.util.Date) $r30;

        $r31 = r60.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: ucar.nc2.dt.GridCoordSystem gcs>;

        $r32 = interfaceinvoke $r31.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1DTime getTimeAxisForRun(int)>(i5);

        $r33 = virtualinvoke $r32.<ucar.nc2.dataset.CoordinateAxis1DTime: java.util.Date[] getTimeDates()>();

        i4 = lengthof $r33;

        i6 = 0;

     label10:
        if i6 >= i4 goto label11;

        r34 = $r33[i6];

        virtualinvoke $r10.<java.util.HashSet: boolean add(java.lang.Object)>(r34);

        $d0 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: double getOffsetHour(java.util.Date,java.util.Date)>(r61, r34);

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        virtualinvoke $r11.<java.util.HashSet: boolean add(java.lang.Object)>($r35);

        i6 = i6 + 1;

        goto label10;

     label11:
        i5 = i5 + 1;

        goto label09;

     label12:
        goto label08;

     label13:
        $i1 = virtualinvoke $r10.<java.util.HashSet: int size()>();

        $r16 = newarray (java.util.Date)[$i1];

        $r17 = virtualinvoke $r10.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r16);

        $r18 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r17);

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List forecasts> = $r18;

        $r19 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List forecasts>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r19);

        $i2 = virtualinvoke $r11.<java.util.HashSet: int size()>();

        $r20 = newarray (java.lang.Double)[$i2];

        $r21 = virtualinvoke $r11.<java.util.HashSet: java.lang.Object[] toArray(java.lang.Object[])>($r20);

        $r22 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r21);

        r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List offsets> = $r22;

        $r23 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List offsets>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r23);

        $r24 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List gridsets>;

        $r25 = interfaceinvoke $r24.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z2 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label15;

        $r26 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r62 = (ucar.nc2.dt.fmrc.FmrcImpl$Gridset) $r26;

        virtualinvoke r62.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: void generateInventory()>();

        goto label14;

     label15:
        return;
    }

    private double getOffsetHour(java.util.Date, java.util.Date)
    {
        java.util.Date r0, r1;
        long $l0, $l1, $l2;
        ucar.nc2.dt.fmrc.FmrcImpl r2;
        double d0, $d1, $d2, $d3;

        r2 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r1 := @parameter0: java.util.Date;

        r0 := @parameter1: java.util.Date;

        $l0 = virtualinvoke r0.<java.util.Date: long getTime()>();

        $l1 = virtualinvoke r1.<java.util.Date: long getTime()>();

        $l2 = $l0 - $l1;

        d0 = (double) $l2;

        $d1 = d0 / 1000.0;

        $d2 = $d1 / 60.0;

        $d3 = $d2 / 60.0;

        return $d3;
    }

    public java.util.List getRunDates()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        return $r1;
    }

    public ucar.nc2.dataset.NetcdfDataset getRunTimeDataset(java.util.Date) throws java.io.IOException
    {
        java.util.Date r0;
        java.util.List $r2;
        ucar.nc2.Attribute $r7;
        ucar.nc2.dt.fmrc.FmrcImpl$RuntimeInvGetter $r5;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset $r6;
        ucar.nc2.dt.fmrc.FmrcImpl r1;
        boolean $z0;
        ucar.nc2.units.DateFormatter $r3;

        r1 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r0);

        $r5 = new ucar.nc2.dt.fmrc.FmrcImpl$RuntimeInvGetter;

        specialinvoke $r5.<ucar.nc2.dt.fmrc.FmrcImpl$RuntimeInvGetter: void <init>(ucar.nc2.dt.fmrc.FmrcImpl,java.util.Date)>(r1, r0);

        $r6 = specialinvoke r1.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset createDataset(ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter,java.lang.String,java.lang.String)>($r5, "run", $r4);

        $r7 = new ucar.nc2.Attribute;

        specialinvoke $r7.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateModelRunDate", $r4);

        virtualinvoke $r6.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Attribute addAttribute(ucar.nc2.Group,ucar.nc2.Attribute)>(null, $r7);

        virtualinvoke $r6.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return $r6;
    }

    public java.util.List getForecastDates()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List forecasts>;

        return $r1;
    }

    public ucar.nc2.dataset.NetcdfDataset getForecastTimeDataset(java.util.Date) throws java.io.IOException
    {
        ucar.nc2.dt.fmrc.FmrcImpl$ForecastInvGetter $r5;
        java.util.Date r0;
        java.util.List $r2;
        java.lang.String $r4;
        ucar.nc2.dataset.NetcdfDataset $r6;
        ucar.nc2.dt.fmrc.FmrcImpl r1;
        boolean $z0;
        ucar.nc2.units.DateFormatter $r3;

        r1 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r0 := @parameter0: java.util.Date;

        if r0 != null goto label1;

        return null;

     label1:
        $r2 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List forecasts>;

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        return null;

     label2:
        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r4 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>(r0);

        $r5 = new ucar.nc2.dt.fmrc.FmrcImpl$ForecastInvGetter;

        specialinvoke $r5.<ucar.nc2.dt.fmrc.FmrcImpl$ForecastInvGetter: void <init>(ucar.nc2.dt.fmrc.FmrcImpl,java.util.Date)>(r1, r0);

        $r6 = specialinvoke r1.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset createDataset(ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter,java.lang.String,java.lang.String)>($r5, "forecast", $r4);

        return $r6;
    }

    public java.util.List getForecastOffsets()
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List offsets>;

        return $r1;
    }

    public ucar.nc2.dataset.NetcdfDataset getForecastOffsetDataset(double) throws java.io.IOException
    {
        java.lang.Double $r1;
        java.util.List $r2;
        java.lang.String $r4;
        ucar.nc2.dt.fmrc.FmrcImpl$OffsetInvGetter $r3;
        ucar.nc2.dataset.NetcdfDataset $r5;
        ucar.nc2.dt.fmrc.FmrcImpl r0;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        d0 := @parameter0: double;

        $r2 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List offsets>;

        $r1 = new java.lang.Double;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0);

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = new ucar.nc2.dt.fmrc.FmrcImpl$OffsetInvGetter;

        specialinvoke $r3.<ucar.nc2.dt.fmrc.FmrcImpl$OffsetInvGetter: void <init>(ucar.nc2.dt.fmrc.FmrcImpl,double)>(r0, d0);

        $r4 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(d0);

        $r5 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset createDataset(ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter,java.lang.String,java.lang.String)>($r3, "offset", $r4);

        return $r5;
    }

    public ucar.nc2.dataset.NetcdfDataset getBestTimeSeries() throws java.io.IOException
    {
        ucar.nc2.dt.fmrc.FmrcImpl$1 $r1;
        ucar.nc2.dataset.NetcdfDataset $r2;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = new ucar.nc2.dt.fmrc.FmrcImpl$1;

        specialinvoke $r1.<ucar.nc2.dt.fmrc.FmrcImpl$1: void <init>(ucar.nc2.dt.fmrc.FmrcImpl)>(r0);

        $r2 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset createDataset(ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter,java.lang.String,java.lang.String)>($r1, "best", null);

        return $r2;
    }

    public ucar.nc2.dataset.NetcdfDataset getFmrcDataset()
    {
        ucar.nc2.dataset.NetcdfDataset $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        return $r1;
    }

    private java.lang.String makeLocation(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r4, r7, $r10, $r13, $r20;
        java.lang.StringBuilder $r1, $r5, $r6, $r8, $r9, $r11, $r14, $r15, $r16, $r17, $r18, $r19;
        ucar.nc2.dataset.NetcdfDataset $r3, $r12;
        ucar.nc2.dt.fmrc.FmrcImpl r2;

        r2 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r7 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = r2.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r13 = virtualinvoke $r12.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ncd");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r20;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = r2.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r4 = virtualinvoke $r3.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".ncd");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    private ucar.nc2.dataset.NetcdfDataset createDataset(ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter, java.lang.String, java.lang.String) throws java.io.IOException
    {
        ucar.nc2.dt.GridDatatype r48;
        java.util.Map $r34;
        java.util.EnumSet $r32;
        java.util.Set $r37;
        ucar.nc2.Group $r6, $r7, $r40;
        ucar.nc2.Attribute $r20, $r22, $r41, $r55, $r56, $r57, $r61, r70;
        ucar.nc2.dt.GridCoordSystem $r58;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r18, $r65, $r66, $r67, $r68;
        java.lang.String r2, r3, $r4, $r11, $r17, $r19, $r24, $r35, $r38, $r50, $r54, $r59, $r60, $r64, $r71;
        ucar.nc2.dataset.NetcdfDataset$Enhance $r31;
        ucar.nc2.Dimension $r63, r72;
        ucar.nc2.dataset.NetcdfDataset $r0, $r5, $r10, $r16, $r49;
        java.util.Date $r23;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        ucar.nc2.dataset.VariableDS $r39, $r52;
        java.util.List $r8, $r25, $r27, $r29, $r44, $r45, $r53;
        ucar.nc2.units.DateFormatter $r21;
        ucar.nc2.dt.fmrc.FmrcImpl$Gridset r73;
        ucar.nc2.Variable $r51, r74;
        java.util.Iterator $r9, $r26, $r28, $r30, $r46;
        ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter r43;
        java.lang.Object $r33, $r36, $r42, $r47, $r62, $r69;
        ucar.nc2.dt.fmrc.FmrcImpl r1;

        r1 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r43 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new ucar.nc2.dataset.NetcdfDataset;

        specialinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void <init>()>();

        $r4 = specialinvoke r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String makeLocation(java.lang.String,java.lang.String)>(r2, r3);

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void setLocation(java.lang.String)>($r4);

        $r5 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r7 = virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r8 = virtualinvoke $r6.<ucar.nc2.Group: java.util.List getAttributes()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label02;

        $r69 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r70 = (ucar.nc2.Attribute) $r69;

        virtualinvoke $r7.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>(r70);

        goto label01;

     label02:
        $r10 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r11 = virtualinvoke $r10.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "history", null);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Synthetic dataset from TDS fmrc (");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") aggregation, original data from ");

        $r16 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r17 = virtualinvoke $r16.<ucar.nc2.dataset.NetcdfDataset: java.lang.String getLocation()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        if $r11 == null goto label03;

        $r65 = new java.lang.StringBuilder;

        specialinvoke $r65.<java.lang.StringBuilder: void <init>()>();

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r71 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label03:
        $r71 = $r19;

     label04:
        $r20 = new ucar.nc2.Attribute;

        specialinvoke $r20.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("history", $r71);

        virtualinvoke $r7.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r20);

        $r21 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r21.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r22 = new ucar.nc2.Attribute;

        $r23 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Date baseDate>;

        $r24 = virtualinvoke $r21.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r23);

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateModelBaseDate", $r24);

        virtualinvoke $r7.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r22);

        $r25 = virtualinvoke $r6.<ucar.nc2.Group: java.util.List getDimensions()>();

        $r26 = interfaceinvoke $r25.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r26.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label06;

        $r62 = interfaceinvoke $r26.<java.util.Iterator: java.lang.Object next()>();

        r72 = (ucar.nc2.Dimension) $r62;

        $r63 = new ucar.nc2.Dimension;

        $r64 = virtualinvoke r72.<ucar.nc2.Dimension: java.lang.String getName()>();

        specialinvoke $r63.<ucar.nc2.Dimension: void <init>(java.lang.String,ucar.nc2.Dimension)>($r64, r72);

        virtualinvoke $r7.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>($r63);

        goto label05;

     label06:
        $r27 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List gridsets>;

        $r28 = interfaceinvoke $r27.<java.util.List: java.util.Iterator iterator()>();

     label07:
        $z5 = interfaceinvoke $r28.<java.util.Iterator: boolean hasNext()>();

        if $z5 == 0 goto label11;

        $r42 = interfaceinvoke $r28.<java.util.Iterator: java.lang.Object next()>();

        r73 = (ucar.nc2.dt.fmrc.FmrcImpl$Gridset) $r42;

        $r44 = interfaceinvoke r43.<ucar.nc2.dt.fmrc.FmrcImpl$InventoryGetter: java.util.List get(ucar.nc2.dt.fmrc.FmrcImpl$Gridset)>(r73);

        if $r44 != null goto label08;

        goto label07;

     label08:
        specialinvoke r1.<ucar.nc2.dt.fmrc.FmrcImpl: void addTime3Coordinates(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.dt.fmrc.FmrcImpl$Gridset,java.util.List,java.lang.String)>($r0, r73, $r44, r2);

        $r45 = r73.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: java.util.List gridList>;

        $r46 = interfaceinvoke $r45.<java.util.List: java.util.Iterator iterator()>();

     label09:
        $z3 = interfaceinvoke $r46.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label10;

        $r47 = interfaceinvoke $r46.<java.util.Iterator: java.lang.Object next()>();

        r48 = (ucar.nc2.dt.GridDatatype) $r47;

        $r49 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        $r50 = interfaceinvoke r48.<ucar.nc2.dt.GridDatatype: java.lang.String getNameEscaped()>();

        $r51 = virtualinvoke $r49.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>($r50);

        $r52 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r52.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.Group,ucar.nc2.Variable,boolean)>($r7, $r51, 0);

        virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: void clearCoordinateSystems()>();

        $r53 = virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: java.util.List getDimensions()>();

        $r54 = virtualinvoke r73.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: java.lang.String makeDimensions(java.util.List)>($r53);

        virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: void setDimensions(java.lang.String)>($r54);

        $r55 = virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateAxes");

        virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: boolean remove(ucar.nc2.Attribute)>($r55);

        $r56 = virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttribute(java.lang.String)>("coordinates");

        virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: boolean remove(ucar.nc2.Attribute)>($r56);

        $r57 = virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttribute(java.lang.String)>("_CoordinateAxes");

        virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: boolean remove(ucar.nc2.Attribute)>($r57);

        $r58 = interfaceinvoke r48.<ucar.nc2.dt.GridDatatype: ucar.nc2.dt.GridCoordSystem getCoordinateSystem()>();

        $r59 = r73.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: java.lang.String timeDimName>;

        $r60 = specialinvoke r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String makeCoordinatesAttribute(ucar.nc2.dt.GridCoordSystem,java.lang.String)>($r58, $r59);

        $r61 = new ucar.nc2.Attribute;

        specialinvoke $r61.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("coordinates", $r60);

        virtualinvoke $r52.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r61);

        virtualinvoke $r7.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r52);

        goto label09;

     label10:
        goto label07;

     label11:
        $r29 = virtualinvoke $r6.<ucar.nc2.Group: java.util.List getVariables()>();

        $r30 = interfaceinvoke $r29.<java.util.List: java.util.Iterator iterator()>();

     label12:
        $z1 = interfaceinvoke $r30.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label14;

        $r33 = interfaceinvoke $r30.<java.util.Iterator: java.lang.Object next()>();

        r74 = (ucar.nc2.Variable) $r33;

        $r34 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Map gridHash>;

        $r35 = virtualinvoke r74.<ucar.nc2.Variable: java.lang.String getName()>();

        $r36 = interfaceinvoke $r34.<java.util.Map: java.lang.Object get(java.lang.Object)>($r35);

        if null != $r36 goto label13;

        $r37 = r1.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Set coordSet>;

        $r38 = virtualinvoke r74.<ucar.nc2.Variable: java.lang.String getName()>();

        $z2 = interfaceinvoke $r37.<java.util.Set: boolean contains(java.lang.Object)>($r38);

        if $z2 != 0 goto label13;

        $r39 = new ucar.nc2.dataset.VariableDS;

        $r40 = virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        specialinvoke $r39.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.Group,ucar.nc2.Variable,boolean)>($r40, r74, 0);

        virtualinvoke $r39.<ucar.nc2.dataset.VariableDS: void clearCoordinateSystems()>();

        $r41 = virtualinvoke $r39.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute findAttribute(java.lang.String)>("coordinates");

        virtualinvoke $r39.<ucar.nc2.dataset.VariableDS: boolean remove(ucar.nc2.Attribute)>($r41);

        virtualinvoke $r7.<ucar.nc2.Group: void addVariable(ucar.nc2.Variable)>($r39);

     label13:
        goto label12;

     label14:
        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        $r31 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance CoordSystems>;

        $r32 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum)>($r31);

        virtualinvoke $r0.<ucar.nc2.dataset.NetcdfDataset: void enhance(java.util.Set)>($r32);

        return $r0;
    }

    private java.lang.String makeCoordinatesAttribute(ucar.nc2.dt.GridCoordSystem, java.lang.String)
    {
        java.lang.Object[] $r5, $r8, $r11, $r14;
        java.util.Formatter $r0;
        ucar.nc2.dataset.CoordinateAxis $r2, $r3, $r12, $r15;
        ucar.nc2.dataset.CoordinateAxis1D $r4, $r9;
        java.lang.String r6, $r7, $r10, $r13, $r16;
        ucar.nc2.dt.GridCoordSystem r1;
        ucar.nc2.dt.fmrc.FmrcImpl r17;

        r17 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r1 := @parameter0: ucar.nc2.dt.GridCoordSystem;

        r6 := @parameter1: java.lang.String;

        $r0 = new java.util.Formatter;

        specialinvoke $r0.<java.util.Formatter: void <init>()>();

        $r2 = interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        if $r2 == null goto label1;

        $r14 = newarray (java.lang.Object)[1];

        $r15 = interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getXHorizAxis()>();

        $r16 = virtualinvoke $r15.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $r14[0] = $r16;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r14);

     label1:
        $r3 = interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        if $r3 == null goto label2;

        $r11 = newarray (java.lang.Object)[1];

        $r12 = interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis getYHorizAxis()>();

        $r13 = virtualinvoke $r12.<ucar.nc2.dataset.CoordinateAxis: java.lang.String getName()>();

        $r11[0] = $r13;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r11);

     label2:
        $r4 = interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        if $r4 == null goto label3;

        $r8 = newarray (java.lang.Object)[1];

        $r9 = interfaceinvoke r1.<ucar.nc2.dt.GridCoordSystem: ucar.nc2.dataset.CoordinateAxis1D getVerticalAxis()>();

        $r10 = virtualinvoke $r9.<ucar.nc2.dataset.CoordinateAxis1D: java.lang.String getName()>();

        $r8[0] = $r10;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r8);

     label3:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r6;

        virtualinvoke $r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%s ", $r5);

        $r7 = virtualinvoke $r0.<java.util.Formatter: java.lang.String toString()>();

        return $r7;
    }

    private void addTime3Coordinates(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dt.fmrc.FmrcImpl$Gridset, java.util.List, java.lang.String)
    {
        ucar.nc2.constants.AxisType $r26, $r43;
        ucar.nc2.Group $r6, $r34, $r45, $r52, $r61;
        ucar.ma2.ArrayDouble$D1 $r9, $r46;
        ucar.nc2.Attribute $r23, $r24, $r25, $r40, $r41, $r42, $r58, $r59, $r60;
        java.lang.StringBuilder $r10, $r11, $r12, $r15, $r17, $r21, $r29, $r30, $r31, $r35, $r36, $r37, $r47, $r48, $r49, $r53, $r54, $r55;
        java.lang.String r1, r4, $r13, $r20, $r22, $r27, $r32, $r38, $r44, $r50, $r56, $r66, $r71, $r72;
        ucar.nc2.Dimension $r7, $r8;
        ucar.nc2.dataset.NetcdfDataset r5;
        java.util.Date $r19, $r65, $r68, $r70;
        boolean $z0;
        ucar.nc2.dataset.VariableDS $r14, $r33, $r51;
        ucar.ma2.DataType $r16, $r39, $r57;
        ucar.ma2.ArrayObject$D1 $r28;
        java.util.List r2;
        ucar.nc2.units.DateFormatter $r0;
        ucar.nc2.dt.fmrc.FmrcImpl$Inventory r63, r69, r73;
        int $i0, i1, i2, i3;
        ucar.nc2.dt.fmrc.FmrcImpl$Gridset r3;
        double $d0, $d1;
        java.lang.Object $r62, $r64, $r67;
        ucar.nc2.dt.fmrc.FmrcImpl r18;

        r18 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r5 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.dt.fmrc.FmrcImpl$Gridset;

        r2 := @parameter2: java.util.List;

        r1 := @parameter3: java.lang.String;

        $r0 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r0.<ucar.nc2.units.DateFormatter: void <init>()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("forecast");

        $i0 = interfaceinvoke r2.<java.util.List: int size()>();

        r4 = r3.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: java.lang.String timeDimName>;

        $r6 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r7 = virtualinvoke $r6.<ucar.nc2.Group: ucar.nc2.Dimension findDimension(java.lang.String)>(r4);

        virtualinvoke $r6.<ucar.nc2.Group: boolean remove(ucar.nc2.Dimension)>($r7);

        $r8 = new ucar.nc2.Dimension;

        specialinvoke $r8.<ucar.nc2.Dimension: void <init>(java.lang.String,int)>(r4, $i0);

        virtualinvoke $r6.<ucar.nc2.Group: void addDimension(ucar.nc2.Dimension)>($r8);

        $r9 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r9.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        i1 = 0;

     label01:
        if i1 >= $i0 goto label04;

        $r67 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i1);

        r69 = (ucar.nc2.dt.fmrc.FmrcImpl$Inventory) $r67;

        $r68 = r18.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Date baseDate>;

        if $z0 == 0 goto label02;

        $r70 = r69.<ucar.nc2.dt.fmrc.FmrcImpl$Inventory: java.util.Date runTime>;

        goto label03;

     label02:
        $r70 = r69.<ucar.nc2.dt.fmrc.FmrcImpl$Inventory: java.util.Date forecastTime>;

     label03:
        $d1 = specialinvoke r18.<ucar.nc2.dt.fmrc.FmrcImpl: double getOffsetHour(java.util.Date,java.util.Date)>($r68, $r70);

        virtualinvoke $r9.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i1, $d1);

        i1 = i1 + 1;

        goto label01;

     label04:
        if $z0 == 0 goto label05;

        $r71 = "run";

        goto label06;

     label05:
        $r71 = "forecast";

     label06:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" time coordinate");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = new ucar.nc2.dataset.VariableDS;

        $r16 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hours since ");

        $r19 = r18.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.Date baseDate>;

        $r20 = virtualinvoke $r0.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r19);

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r5, $r6, null, r4, $r16, r4, $r22, $r13);

        virtualinvoke $r14.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r9, 1);

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r13);

        virtualinvoke $r14.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        $r24 = new ucar.nc2.Attribute;

        if $z0 == 0 goto label07;

        $r72 = "forecast_reference_time";

        goto label08;

     label07:
        $r72 = "time";

     label08:
        specialinvoke $r24.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", $r72);

        virtualinvoke $r14.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r24);

        $r25 = new ucar.nc2.Attribute;

        $r26 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r27 = virtualinvoke $r26.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r25.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r27);

        virtualinvoke $r14.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r25);

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r6, $r14);

        $r28 = new ucar.ma2.ArrayObject$D1;

        specialinvoke $r28.<ucar.ma2.ArrayObject$D1: void <init>(java.lang.Class,int)>(class "Ljava/lang/String;", $i0);

        i2 = 0;

     label09:
        if i2 >= $i0 goto label10;

        $r64 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i2);

        r73 = (ucar.nc2.dt.fmrc.FmrcImpl$Inventory) $r64;

        $r65 = r73.<ucar.nc2.dt.fmrc.FmrcImpl$Inventory: java.util.Date runTime>;

        $r66 = virtualinvoke $r0.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r65);

        virtualinvoke $r28.<ucar.ma2.ArrayObject$D1: void set(int,java.lang.Object)>(i2, $r66);

        i2 = i2 + 1;

        goto label09;

     label10:
        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("model run dates for coordinate = ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        $r33 = new ucar.nc2.dataset.VariableDS;

        $r34 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_run");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        specialinvoke $r33.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r5, $r34, null, $r38, $r39, r4, null, $r32);

        virtualinvoke $r33.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r28, 1);

        $r40 = new ucar.nc2.Attribute;

        specialinvoke $r40.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r32);

        virtualinvoke $r33.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r40);

        $r41 = new ucar.nc2.Attribute;

        specialinvoke $r41.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "forecast_reference_time");

        virtualinvoke $r33.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r41);

        $r42 = new ucar.nc2.Attribute;

        $r43 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType RunTime>;

        $r44 = virtualinvoke $r43.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r42.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r44);

        virtualinvoke $r33.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r42);

        $r45 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r45, $r33);

        $r46 = new ucar.ma2.ArrayDouble$D1;

        specialinvoke $r46.<ucar.ma2.ArrayDouble$D1: void <init>(int)>($i0);

        i3 = 0;

     label11:
        if i3 >= $i0 goto label12;

        $r62 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(i3);

        r63 = (ucar.nc2.dt.fmrc.FmrcImpl$Inventory) $r62;

        $d0 = r63.<ucar.nc2.dt.fmrc.FmrcImpl$Inventory: double hourOffset>;

        virtualinvoke $r46.<ucar.ma2.ArrayDouble$D1: void set(int,double)>(i3, $d0);

        i3 = i3 + 1;

        goto label11;

     label12:
        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("hour offset from start of run for coordinate = ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        $r51 = new ucar.nc2.dataset.VariableDS;

        $r52 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_offset");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        $r57 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        specialinvoke $r51.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String,ucar.ma2.DataType,java.lang.String,java.lang.String,java.lang.String)>(r5, $r52, null, $r56, $r57, r4, null, $r50);

        virtualinvoke $r51.<ucar.nc2.dataset.VariableDS: void setCachedData(ucar.ma2.Array,boolean)>($r46, 1);

        $r58 = new ucar.nc2.Attribute;

        specialinvoke $r58.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r50);

        virtualinvoke $r51.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r58);

        $r59 = new ucar.nc2.Attribute;

        specialinvoke $r59.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "hour");

        virtualinvoke $r51.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r59);

        $r60 = new ucar.nc2.Attribute;

        specialinvoke $r60.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "forecast_period");

        virtualinvoke $r51.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r60);

        $r61 = virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        virtualinvoke r5.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>($r61, $r51);

        return;
    }

    public void dump(java.util.Formatter) throws java.io.IOException
    {
        java.lang.Object[] $r6;
        java.util.Iterator $r2;
        java.util.Formatter r5;
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl$Gridset r4;
        java.lang.Object $r3;
        ucar.nc2.dt.fmrc.FmrcImpl r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dt.fmrc.FmrcImpl;

        r5 := @parameter0: java.util.Formatter;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List gridsets>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (ucar.nc2.dt.fmrc.FmrcImpl$Gridset) $r3;

        $r6 = newarray (java.lang.Object)[0];

        virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("===========================%n", $r6);

        virtualinvoke r4.<ucar.nc2.dt.fmrc.FmrcImpl$Gridset: void dump(java.util.Formatter)>(r5);

        goto label1;

     label2:
        return;
    }

    static void test(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.io.PrintStream $r3, $r12, $r14;
        java.io.PrintWriter $r11;
        ucar.ma2.Array $r10;
        java.util.Formatter $r13;
        java.lang.StringBuilder $r2, $r4, $r5;
        ucar.nc2.Variable $r9;
        java.lang.String r1, $r6, r8;
        ucar.nc2.dataset.NetcdfDataset $r7;
        ucar.nc2.dt.fmrc.FmrcImpl $r0;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r0 = new ucar.nc2.dt.fmrc.FmrcImpl;

        specialinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: void <init>(java.lang.String)>(r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fmrc for dataset= ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset getFmrcDataset()>();

        $r9 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r11 = new java.io.PrintWriter;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r12);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r10, "2D time", $r11, null);

        $r13 = new java.util.Formatter;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r13.<java.util.Formatter: void <init>(java.io.PrintStream)>($r14);

        virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: void dump(java.util.Formatter)>($r13);

        return;
    }

    static void testSync(java.lang.String, java.lang.String) throws java.io.IOException, java.lang.InterruptedException
    {
        java.util.Formatter $r13, $r19;
        ucar.nc2.Variable $r9;
        java.lang.String r1, $r6, r8;
        boolean $z0;
        java.io.PrintStream $r3, $r12, $r14, $r15, $r18, $r20;
        java.io.PrintWriter $r11, $r17;
        ucar.ma2.Array $r10, $r16;
        java.lang.StringBuilder $r2, $r4, $r5;
        ucar.nc2.dataset.NetcdfDataset $r7;
        ucar.nc2.dt.fmrc.FmrcImpl $r0;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        $r0 = new ucar.nc2.dt.fmrc.FmrcImpl;

        specialinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: void <init>(java.lang.String)>(r1);

        $r3 = <java.lang.System: java.io.PrintStream out>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fmrc for dataset= ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r3.<java.io.PrintStream: void println(java.lang.String)>($r6);

        $r7 = virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset getFmrcDataset()>();

        $r9 = virtualinvoke $r7.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r11 = new java.io.PrintWriter;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r11.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r12);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r10, "2D time", $r11, null);

        $r13 = new java.util.Formatter;

        $r14 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r13.<java.util.Formatter: void <init>(java.io.PrintStream)>($r14);

        virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: void dump(java.util.Formatter)>($r13);

        $z0 = virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: boolean sync()>();

        if $z0 == 0 goto label1;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("========== Sync =================");

        $r16 = virtualinvoke $r9.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r17 = new java.io.PrintWriter;

        $r18 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r17.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r18);

        staticinvoke <ucar.nc2.NCdumpW: void printArray(ucar.ma2.Array,java.lang.String,java.io.PrintWriter,ucar.nc2.util.CancelTask)>($r16, "2D time", $r17, null);

        $r19 = new java.util.Formatter;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        specialinvoke $r19.<java.util.Formatter: void <init>(java.io.PrintStream)>($r20);

        virtualinvoke $r0.<ucar.nc2.dt.fmrc.FmrcImpl: void dump(java.util.Formatter)>($r19);

     label1:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.dt.fmrc.FmrcImpl: void test(java.lang.String,java.lang.String)>("D:/test/signell/test.ncml", "ocean_time");

        return;
    }

    static java.lang.String access$000(ucar.nc2.dt.fmrc.FmrcImpl)
    {
        java.lang.String $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String runtimeDimName>;

        return $r1;
    }

    static java.util.List access$100(ucar.nc2.dt.fmrc.FmrcImpl)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List runtimes>;

        return $r1;
    }

    static double access$200(ucar.nc2.dt.fmrc.FmrcImpl, java.util.Date, java.util.Date)
    {
        java.util.Date r1, r2;
        ucar.nc2.dt.fmrc.FmrcImpl r0;
        double $d0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl;

        r1 := @parameter1: java.util.Date;

        r2 := @parameter2: java.util.Date;

        $d0 = specialinvoke r0.<ucar.nc2.dt.fmrc.FmrcImpl: double getOffsetHour(java.util.Date,java.util.Date)>(r1, r2);

        return $d0;
    }

    static java.util.List access$300(ucar.nc2.dt.fmrc.FmrcImpl)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List forecasts>;

        return $r1;
    }

    static java.util.List access$400(ucar.nc2.dt.fmrc.FmrcImpl)
    {
        java.util.List $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: java.util.List offsets>;

        return $r1;
    }

    static ucar.nc2.dataset.NetcdfDataset access$500(ucar.nc2.dt.fmrc.FmrcImpl)
    {
        ucar.nc2.dataset.NetcdfDataset $r1;
        ucar.nc2.dt.fmrc.FmrcImpl r0;

        r0 := @parameter0: ucar.nc2.dt.fmrc.FmrcImpl;

        $r1 = r0.<ucar.nc2.dt.fmrc.FmrcImpl: ucar.nc2.dataset.NetcdfDataset ncd_2dtime>;

        return $r1;
    }

    static org.slf4j.Logger access$600()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.dt.fmrc.FmrcImpl: org.slf4j.Logger logger>;

        return $r0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String OFFSET> = "offset";

        <ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String FORECAST> = "forecast";

        <ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String RUN> = "run";

        <ucar.nc2.dt.fmrc.FmrcImpl: java.lang.String BEST> = "best";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/fmrc/FmrcImpl;");

        <ucar.nc2.dt.fmrc.FmrcImpl: org.slf4j.Logger logger> = $r0;

        return;
    }
}
