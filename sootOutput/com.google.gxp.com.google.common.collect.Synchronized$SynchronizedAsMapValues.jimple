class com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues extends com.google.gxp.com.google.common.collect.Synchronized$SynchronizedCollection
{
    private static final long serialVersionUID;

    void <init>(java.util.Collection, java.lang.Object)
    {
        java.lang.Object r2;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;
        java.util.Collection r1;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedCollection: void <init>(java.util.Collection,java.lang.Object)>(r1, r2);

        return;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r1;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues$1 $r2;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        $r1 = specialinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedCollection: java.util.Iterator iterator()>();

        $r2 = new com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues$1;

        specialinvoke $r2.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues$1: void <init>(com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues,java.util.Iterator)>(r0, $r1);

        return $r2;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r3;
        java.util.Collection $r2;
        java.lang.Object $r1;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $r3 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] toArrayImpl(java.util.Collection)>($r2);

        exitmonitor $r1;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Throwable $r5;
        java.lang.Object[] r3, $r4;
        java.util.Collection $r2;
        java.lang.Object $r1;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r3 := @parameter0: java.lang.Object[];

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $r4 = staticinvoke <com.google.gxp.com.google.common.collect.ObjectArrays: java.lang.Object[] toArrayImpl(java.util.Collection,java.lang.Object[])>($r2, r3);

        exitmonitor $r1;

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean contains(java.lang.Object)
    {
        java.lang.Throwable $r5;
        java.util.Iterator $r3;
        java.util.Collection $r2;
        java.lang.Object $r1, r4;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r4 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Iterators: boolean contains(java.util.Iterator,java.lang.Object)>($r3, r4);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean containsAll(java.util.Collection)
    {
        java.lang.Throwable $r4;
        java.util.Collection $r2, r3;
        java.lang.Object $r1;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r3 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Collections2: boolean containsAll(java.util.Collection,java.util.Collection)>($r2, r3);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean remove(java.lang.Object)
    {
        java.lang.Throwable $r4;
        java.util.Collection $r2;
        java.lang.Object $r1, r3;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r3 := @parameter0: java.lang.Object;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Iterables: boolean remove(java.lang.Iterable,java.lang.Object)>($r2, r3);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean removeAll(java.util.Collection)
    {
        java.lang.Throwable $r5;
        java.util.Iterator $r3;
        java.util.Collection $r2, r4;
        java.lang.Object $r1;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r4 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Iterators: boolean removeAll(java.util.Iterator,java.util.Collection)>($r3, r4);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean retainAll(java.util.Collection)
    {
        java.lang.Throwable $r5;
        java.util.Iterator $r3;
        java.util.Collection $r2, r4;
        java.lang.Object $r1;
        com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues r0;
        boolean $z0;

        r0 := @this: com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues;

        r4 := @parameter0: java.util.Collection;

        $r1 = r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.lang.Object mutex>;

        entermonitor $r1;

     label1:
        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: java.util.Collection delegate()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

        $z0 = staticinvoke <com.google.gxp.com.google.common.collect.Iterators: boolean retainAll(java.util.Iterator,java.util.Collection)>($r3, r4);

        exitmonitor $r1;

     label2:
        return $z0;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static void <clinit>()
    {
        <com.google.gxp.com.google.common.collect.Synchronized$SynchronizedAsMapValues: long serialVersionUID> = 0L;

        return;
    }
}
