public class org.apache.xml.dtm.DTMException extends java.lang.RuntimeException
{
    javax.xml.transform.SourceLocator locator;
    java.lang.Throwable containedException;

    public javax.xml.transform.SourceLocator getLocator()
    {
        javax.xml.transform.SourceLocator $r1;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        return $r1;
    }

    public void setLocator(javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r1;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: javax.xml.transform.SourceLocator;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = r1;

        return;
    }

    public java.lang.Throwable getException()
    {
        java.lang.Throwable $r1;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

        return $r1;
    }

    public java.lang.Throwable getCause()
    {
        java.lang.Throwable $r1, $r2;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

        if $r1 != r0 goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

     label2:
        return $r2;
    }

    public synchronized java.lang.Throwable initCause(java.lang.Throwable)
    {
        java.lang.Throwable $r1, r2;
        java.lang.IllegalStateException $r5;
        java.lang.String $r4, $r6;
        java.lang.IllegalArgumentException $r3;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r2 := @parameter0: java.lang.Throwable;

        $r1 = r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException>;

        if $r1 != null goto label1;

        if r2 == null goto label1;

        $r5 = new java.lang.IllegalStateException;

        $r6 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_OVERWRITE_CAUSE", null);

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        if r2 != r0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <org.apache.xml.res.XMLMessages: java.lang.String createXMLMessage(java.lang.String,java.lang.Object[])>("ER_SELF_CAUSATION_NOT_PERMITTED", null);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r2;

        return r0;
    }

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = null;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.Throwable)
    {
        java.lang.Throwable r1;
        java.lang.String $r2;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.Throwable;

        $r2 = virtualinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r2);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r1;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        int $i0;
        java.lang.String r1, $r3;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        if r1 == null goto label1;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getMessage()>();

        goto label3;

     label2:
        $r3 = r1;

     label3:
        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r3);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r2;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = null;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator)
    {
        javax.xml.transform.SourceLocator r2;
        java.lang.String r1;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: javax.xml.transform.SourceLocator;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = null;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = r2;

        return;
    }

    public void <init>(java.lang.String, javax.xml.transform.SourceLocator, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        javax.xml.transform.SourceLocator r3;
        java.lang.String r1;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: javax.xml.transform.SourceLocator;

        r2 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable containedException> = r2;

        r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator> = r3;

        return;
    }

    public java.lang.String getMessageAndLocation()
    {
        javax.xml.transform.SourceLocator $r3, $r4, $r6, $r7;
        java.lang.StringBuffer $r0;
        int $i0, $i1;
        java.lang.String $r2, $r5, $r8;
        org.apache.xml.dtm.DTMException r1;

        r1 := @this: org.apache.xml.dtm.DTMException;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Throwable: java.lang.String getMessage()>();

        if null == $r2 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label1:
        $r3 = r1.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        if null == $r3 goto label4;

        $r4 = r1.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        $r5 = interfaceinvoke $r4.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r6 = r1.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        $i0 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r7 = r1.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        $i1 = interfaceinvoke $r7.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == $r5 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label2:
        if 0 == $i0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

     label3:
        if 0 == $i1 goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label4:
        $r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }

    public java.lang.String getLocationAsString()
    {
        javax.xml.transform.SourceLocator $r1, $r3, $r5, $r6;
        java.lang.StringBuffer $r2;
        int $i0, $i1;
        java.lang.String $r4, $r7;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        if null == $r1 goto label4;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        $r4 = interfaceinvoke $r3.<javax.xml.transform.SourceLocator: java.lang.String getSystemId()>();

        $r5 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        $i0 = interfaceinvoke $r5.<javax.xml.transform.SourceLocator: int getLineNumber()>();

        $r6 = r0.<org.apache.xml.dtm.DTMException: javax.xml.transform.SourceLocator locator>;

        $i1 = interfaceinvoke $r6.<javax.xml.transform.SourceLocator: int getColumnNumber()>();

        if null == $r4 goto label1;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; SystemID: ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label1:
        if 0 == $i0 goto label2;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Line#: ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

     label2:
        if 0 == $i1 goto label3;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; Column#: ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

     label3:
        $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;

     label4:
        return null;
    }

    public void printStackTrace()
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream $r2;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        $r1 = new java.io.PrintWriter;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r2, 1);

        virtualinvoke r0.<org.apache.xml.dtm.DTMException: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintStream)
    {
        java.io.PrintWriter $r1;
        java.io.PrintStream r2;
        org.apache.xml.dtm.DTMException r0;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r2 := @parameter0: java.io.PrintStream;

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r2);

        virtualinvoke r0.<org.apache.xml.dtm.DTMException: void printStackTrace(java.io.PrintWriter)>($r1);

        return;
    }

    public void printStackTrace(java.io.PrintWriter)
    {
        java.lang.Throwable $r12, $r13, r15, r16;
        java.lang.NoSuchMethodException $r9;
        int i0;
        java.lang.String $r1, $r6;
        org.apache.xml.dtm.DTMException r0, $r5;
        java.lang.reflect.Method $r3;
        boolean $z0;
        java.io.PrintWriter $r7, r14;
        java.io.PrintStream $r8;
        java.lang.IllegalAccessException $r10;
        java.lang.reflect.InvocationTargetException $r11;
        java.lang.Class $r2;
        java.lang.Object $r4;

        r0 := @this: org.apache.xml.dtm.DTMException;

        r14 := @parameter0: java.io.PrintWriter;

        if r14 != null goto label01;

        $r7 = new java.io.PrintWriter;

        $r8 = <java.lang.System: java.io.PrintStream err>;

        specialinvoke $r7.<java.io.PrintWriter: void <init>(java.io.OutputStream,boolean)>($r8, 1);

        r14 = $r7;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xml.dtm.DTMException: java.lang.String getLocationAsString()>();

        if null == $r1 goto label02;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>($r1);

     label02:
        specialinvoke r0.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r14);

     label03:
        goto label05;

     label04:
        $r13 := @caughtexception;

     label05:
        r15 = virtualinvoke r0.<org.apache.xml.dtm.DTMException: java.lang.Throwable getException()>();

        i0 = 0;

        goto label19;

     label06:
        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("---------");

     label07:
        $z0 = r15 instanceof org.apache.xml.dtm.DTMException;

        if $z0 == 0 goto label08;

        $r5 = (org.apache.xml.dtm.DTMException) r15;

        $r6 = virtualinvoke $r5.<org.apache.xml.dtm.DTMException: java.lang.String getLocationAsString()>();

        if null == $r6 goto label08;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>($r6);

     label08:
        virtualinvoke r15.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>(r14);

     label09:
        goto label11;

     label10:
        $r12 := @caughtexception;

        virtualinvoke r14.<java.io.PrintWriter: void println(java.lang.String)>("Could not print stack trace...");

     label11:
        $r2 = virtualinvoke r15.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getException", null);

        if null == $r3 goto label13;

        r16 = r15;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r15, null);

        r15 = (java.lang.Throwable) $r4;

        if r16 != r15 goto label12;

        goto label20;

     label12:
        goto label14;

     label13:
        r15 = null;

     label14:
        goto label18;

     label15:
        $r11 := @caughtexception;

        r15 = null;

        goto label18;

     label16:
        $r10 := @caughtexception;

        r15 = null;

        goto label18;

     label17:
        $r9 := @caughtexception;

        r15 = null;

     label18:
        i0 = i0 + 1;

     label19:
        if i0 >= 10 goto label20;

        if null != r15 goto label06;

     label20:
        return;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label07 to label09 with label10;
        catch java.lang.reflect.InvocationTargetException from label11 to label14 with label15;
        catch java.lang.IllegalAccessException from label11 to label14 with label16;
        catch java.lang.NoSuchMethodException from label11 to label14 with label17;
    }
}
