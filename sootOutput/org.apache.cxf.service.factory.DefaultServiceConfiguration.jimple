public class org.apache.cxf.service.factory.DefaultServiceConfiguration extends org.apache.cxf.service.factory.AbstractServiceConfiguration
{

    public void <init>()
    {
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        specialinvoke r0.<org.apache.cxf.service.factory.AbstractServiceConfiguration: void <init>()>();

        return;
    }

    public javax.xml.namespace.QName getOperationName(org.apache.cxf.service.model.InterfaceInfo, java.lang.reflect.Method)
    {
        int i0;
        java.lang.String $r4, $r6, $r13;
        java.lang.reflect.Method r5;
        boolean $z0;
        org.apache.cxf.service.model.InterfaceInfo r2;
        org.apache.cxf.service.model.OperationInfo $r8, $r14, $r15;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r1;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.StringBuilder $r10, $r11, $r12;
        javax.xml.namespace.QName $r3, $r7, $r9;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r2 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r5 := @parameter1: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $z0 = virtualinvoke $r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isFromWsdl()>();

        $r3 = virtualinvoke r2.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName getName()>();

        $r4 = virtualinvoke $r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = virtualinvoke r5.<java.lang.reflect.Method: java.lang.String getName()>();

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r6);

        if $z0 == 0 goto label1;

        $r15 = virtualinvoke r2.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)>($r7);

        if $r15 == null goto label1;

        return $r7;

     label1:
        $r8 = virtualinvoke r2.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)>($r7);

        if $r8 != null goto label2;

        return $r7;

     label2:
        i0 = 1;

     label3:
        $r9 = new javax.xml.namespace.QName;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r4, $r13);

        $r14 = virtualinvoke r2.<org.apache.cxf.service.model.InterfaceInfo: org.apache.cxf.service.model.OperationInfo getOperation(javax.xml.namespace.QName)>($r9);

        if $r14 != null goto label4;

        return $r9;

     label4:
        i0 = i0 + 1;

        goto label3;
    }

    public javax.xml.namespace.QName getFaultName(org.apache.cxf.service.model.InterfaceInfo, org.apache.cxf.service.model.OperationInfo, java.lang.Class, java.lang.Class)
    {
        org.apache.cxf.service.model.InterfaceInfo r3;
        org.apache.cxf.service.model.OperationInfo r7;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r6;
        java.lang.Class r0, r8;
        java.lang.String $r1, $r5;
        javax.xml.namespace.QName $r2, $r4;

        r6 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r3 := @parameter0: org.apache.cxf.service.model.InterfaceInfo;

        r7 := @parameter1: org.apache.cxf.service.model.OperationInfo;

        r8 := @parameter2: java.lang.Class;

        r0 := @parameter3: java.lang.Class;

        $r1 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: java.lang.String makeServiceNameFromClassName(java.lang.Class)>(r0);

        $r2 = new javax.xml.namespace.QName;

        $r4 = virtualinvoke r3.<org.apache.cxf.service.model.InterfaceInfo: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r5, $r1);

        return $r2;
    }

    public javax.xml.namespace.QName getInPartName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        int i0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        javax.xml.namespace.QName $r3;
        java.lang.reflect.Method r2;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r2 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r1, r2, i0);

        return $r3;
    }

    public javax.xml.namespace.QName getOutPartName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        int i0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        javax.xml.namespace.QName $r3;
        java.lang.reflect.Method r2;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r2 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int)>(r1, r2, i0);

        return $r3;
    }

    public javax.xml.namespace.QName getInParameterName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        int i0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r4;
        javax.xml.namespace.QName $r0, $r2;
        java.lang.String $r3, $r6;
        java.lang.reflect.Method r5;

        r4 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r5 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = specialinvoke r4.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)>(r1, r5, i0, "arg");

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r6);

        return $r0;
    }

    public javax.xml.namespace.QName getInputMessageName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r6;
        javax.xml.namespace.QName $r0, $r2, $r4;
        java.lang.String $r3, $r5;
        java.lang.reflect.Method r7;

        r6 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r7 := @parameter1: java.lang.reflect.Method;

        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r5 = virtualinvoke $r4.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r5);

        return $r0;
    }

    public javax.xml.namespace.QName getOutParameterName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        int i0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r4;
        javax.xml.namespace.QName $r0, $r2;
        java.lang.String $r3, $r6;
        java.lang.reflect.Method r5;

        r4 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r5 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r6 = specialinvoke r4.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo,java.lang.reflect.Method,int,java.lang.String)>(r1, r5, i0, "return");

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r6);

        return $r0;
    }

    private java.lang.String getDefaultLocalName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method, int, java.lang.String)
    {
        org.apache.cxf.service.model.MessageInfo $r4;
        org.apache.cxf.service.model.OperationInfo r3;
        java.lang.Class[] $r9;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r1;
        java.lang.Exception $r10;
        java.util.List $r5;
        int i0, $i1;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Class $r2;
        java.lang.String r6, $r7, $r8;
        org.apache.cxf.service.factory.ServiceConstructionException $r11;
        java.lang.reflect.Method r12;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r3 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r12 := @parameter1: java.lang.reflect.Method;

        i0 := @parameter2: int;

        r6 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        if $r2 == null goto label4;

     label1:
        $r8 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.String getName()>();

        $r9 = virtualinvoke r12.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r12 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>($r8, $r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new org.apache.cxf.service.factory.ServiceConstructionException;

        specialinvoke $r11.<org.apache.cxf.service.factory.ServiceConstructionException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label4:
        $r4 = virtualinvoke r3.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        $r5 = virtualinvoke $r4.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r7 = staticinvoke <org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.String createName(java.lang.reflect.Method,int,int,boolean,java.lang.String)>(r12, i0, $i1, 0, r6);

        return $r7;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String createName(java.lang.reflect.Method, int, int, boolean, java.lang.String)
    {
        java.lang.String[] $r6;
        int i0, i1, $i3;
        java.lang.String r0, $r3, $r10, r11, $r12;
        java.lang.reflect.Method r2;
        boolean z0;
        java.lang.StringBuilder $r4, $r5, $r8, $r9, $r13, $r14;

        r2 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0 := @parameter4: java.lang.String;

        $i3 = (int) -1;

        if i0 == $i3 goto label3;

        $r6 = staticinvoke <org.apache.cxf.common.util.ParamReader: java.lang.String[] getParameterNamesFromDebugInfo(java.lang.reflect.Method)>(r2);

        if $r6 == null goto label1;

        $r10 = $r6[i0];

        if $r10 == null goto label1;

        r11 = $r6[i0];

        z0 = 0;

        goto label2;

     label1:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        goto label4;

     label3:
        r11 = r0;

     label4:
        if z0 == 0 goto label5;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $r4 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r12 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label6;

     label5:
        $r12 = r11;

     label6:
        return $r12;
    }

    public javax.xml.namespace.QName getOutputMessageName(org.apache.cxf.service.model.OperationInfo, java.lang.reflect.Method)
    {
        org.apache.cxf.service.model.OperationInfo r1;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r10;
        java.lang.StringBuilder $r4, $r7, $r8;
        javax.xml.namespace.QName $r0, $r2, $r5;
        java.lang.String $r3, $r6, $r9;
        java.lang.reflect.Method r11;

        r10 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: org.apache.cxf.service.model.OperationInfo;

        r11 := @parameter1: java.lang.reflect.Method;

        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r3 = virtualinvoke $r2.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<org.apache.cxf.service.model.OperationInfo: javax.xml.namespace.QName getName()>();

        $r6 = virtualinvoke $r5.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Response");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r9);

        return $r0;
    }

    public javax.xml.namespace.QName getInterfaceName()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r2;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r1;
        java.lang.StringBuilder $r4, $r6, $r7;
        javax.xml.namespace.QName $r0;
        java.lang.String $r3, $r5, $r8;

        r1 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getServiceNamespace()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.String getServiceName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PortType");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r8);

        return $r0;
    }

    public javax.xml.namespace.QName getEndpointName()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r2;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r1;
        java.lang.StringBuilder $r4, $r6, $r7;
        javax.xml.namespace.QName $r0;
        java.lang.String $r3, $r5, $r8;

        r1 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        $r0 = new javax.xml.namespace.QName;

        $r2 = virtualinvoke r1.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r3 = virtualinvoke $r2.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.String getServiceNamespace()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r1.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.String getServiceName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Port");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r3, $r8);

        return $r0;
    }

    public java.lang.String getServiceName()
    {
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Class $r2;
        java.lang.String $r3;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r1;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>();

        return $r3;
    }

    public java.lang.String getServiceNamespace()
    {
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r2, $r3, $r5;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Class $r4, $r6;
        java.lang.String $r1, $r7, r8;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        $r1 = specialinvoke r0.<org.apache.cxf.service.factory.AbstractServiceConfiguration: java.lang.String getServiceNamespace()>();

        r8 = $r1;

        if $r1 != null goto label1;

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r4 = virtualinvoke $r3.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r6 = virtualinvoke $r5.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.lang.Class getServiceClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        r8 = staticinvoke <org.apache.cxf.helpers.ServiceUtils: java.lang.String makeNamespaceFromClassName(java.lang.String,java.lang.String)>($r7, "http");

     label1:
        return r8;
    }

    public java.lang.Boolean hasOutMessage(java.lang.reflect.Method)
    {
        java.lang.Boolean $r0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r1;
        java.lang.reflect.Method r2;

        r1 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r2 := @parameter0: java.lang.reflect.Method;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r0;
    }

    public java.lang.Boolean isAsync(java.lang.reflect.Method)
    {
        java.lang.Boolean $r0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r1;
        java.lang.reflect.Method r2;

        r1 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r2 := @parameter0: java.lang.reflect.Method;

        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r0;
    }

    public java.lang.Boolean isHeader(java.lang.reflect.Method, int)
    {
        int i0;
        java.lang.Boolean $r0;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r1;
        java.lang.reflect.Method r2;

        r1 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r2 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r0;
    }

    public java.lang.Boolean isInParam(java.lang.reflect.Method, int)
    {
        java.lang.Class[] $r2;
        int i0;
        java.lang.Boolean $r0, $r5, $r6;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r7;
        java.lang.Class r3, $r4;
        java.lang.reflect.Method r1;
        boolean $z0;

        r7 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        if i0 < 0 goto label2;

        $r2 = virtualinvoke r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r3 = $r2[i0];

        $r4 = class "Lorg/apache/cxf/message/Exchange;";

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r3);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r6;

     label1:
        $r5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        return $r5;

     label2:
        $r0 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        return $r0;
    }

    public java.lang.Boolean isOperation(java.lang.reflect.Method)
    {
        int $i0;
        java.lang.Boolean $r9, $r18, $r19, $r20;
        java.lang.String $r5, $r12, $r13;
        java.lang.reflect.Method r3, r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.Iterator $r8;
        java.lang.Class[] $r14, $r15;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r1, $r6;
        java.util.List $r2, $r7;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Class $r4, $r16, $r17;
        java.lang.Object $r10;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r3 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r2 = virtualinvoke $r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List getIgnoredClasses()>();

        $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean contains(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r19 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r19;

     label1:
        $r6 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: java.util.List getIgnoredMethods()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r10 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.lang.reflect.Method) $r10;

        $r12 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.String getName()>();

        $r13 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.String getName()>();

        $z5 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r13);

        if $z5 == 0 goto label3;

        $r14 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $r15 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $z6 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>($r14, $r15);

        if $z6 == 0 goto label3;

        $r16 = virtualinvoke r11.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        $r17 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        if $r16 != $r17 goto label3;

        $r18 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r18;

     label3:
        goto label2;

     label4:
        $i0 = virtualinvoke r3.<java.lang.reflect.Method: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i0);

        if $z2 == 0 goto label5;

        $z3 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0);

        if $z3 != 0 goto label5;

        $z4 = virtualinvoke r3.<java.lang.reflect.Method: boolean isSynthetic()>();

        if $z4 != 0 goto label5;

        $r9 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r9;

     label5:
        $r20 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r20;
    }

    public java.lang.Boolean isOutParam(java.lang.reflect.Method, int)
    {
        java.lang.Class[] $r1;
        java.lang.reflect.Type r4;
        int i0;
        java.lang.reflect.Type[] $r3;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r5;
        java.lang.Boolean $r6, $r7;
        java.lang.Class r2;
        java.lang.reflect.Method r0;

        r5 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r0 := @parameter0: java.lang.reflect.Method;

        i0 := @parameter1: int;

        if i0 >= 0 goto label1;

        $r7 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r7;

     label1:
        $r1 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        r2 = $r1[i0];

        $r3 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();

        r4 = $r3[i0];

        $r6 = virtualinvoke r5.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.Boolean isHolder(java.lang.Class,java.lang.reflect.Type)>(r2, r4);

        return $r6;
    }

    public java.lang.Boolean isWrapped(java.lang.reflect.Method)
    {
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Boolean $r2;
        org.apache.cxf.service.factory.ReflectionServiceFactoryBean $r1;
        java.lang.reflect.Method r3;
        boolean $z0;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r3 := @parameter0: java.lang.reflect.Method;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: org.apache.cxf.service.factory.ReflectionServiceFactoryBean getServiceFactory()>();

        $z0 = virtualinvoke $r1.<org.apache.cxf.service.factory.ReflectionServiceFactoryBean: boolean isWrapped()>();

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        return $r2;
    }

    public java.lang.Boolean isHolder(java.lang.Class, java.lang.reflect.Type)
    {
        int i0, $i1, $i2, i3;
        java.lang.Boolean $r2, $r4, $r8;
        java.lang.String $r1, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        java.lang.reflect.Field r5;
        java.lang.reflect.Field[] $r3;
        java.lang.reflect.Type r10;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r9;
        java.lang.Class r0;

        r9 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r0 := @parameter0: java.lang.Class;

        r10 := @parameter1: java.lang.reflect.Type;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.String getSimpleName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("Holder");

        if $z0 == 0 goto label5;

        $r3 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        i0 = lengthof $r3;

        i3 = 0;

     label1:
        if i3 >= i0 goto label4;

        r5 = $r3[i3];

        $i1 = virtualinvoke r5.<java.lang.reflect.Field: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        if $z1 == 0 goto label2;

        goto label3;

     label2:
        $i2 = virtualinvoke r5.<java.lang.reflect.Field: int getModifiers()>();

        $z2 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>($i2);

        if $z2 == 0 goto label3;

        $r6 = "value";

        $r7 = virtualinvoke r5.<java.lang.reflect.Field: java.lang.String getName()>();

        $z3 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z3 == 0 goto label3;

        $r8 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r8;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r4 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r4;

     label5:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r2;
    }

    public java.lang.Class getHolderType(java.lang.Class, java.lang.reflect.Type)
    {
        java.lang.reflect.Field $r4;
        java.lang.reflect.Field[] $r3;
        java.lang.reflect.ParameterizedType r6;
        java.lang.reflect.Type r1;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Boolean $r2;
        java.lang.Class $r5, r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r7 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.reflect.Type;

        $r2 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.Boolean isHolder(java.lang.Class,java.lang.reflect.Type)>(r7, r1);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label2;

        $z1 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label1;

        r6 = (java.lang.reflect.ParameterizedType) r1;

        staticinvoke <org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.Class getHolderClass(java.lang.reflect.ParameterizedType)>(r6);

        goto label2;

     label1:
        $r3 = virtualinvoke r7.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();

        $r4 = $r3[0];

        $r5 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Class getType()>();

        return $r5;

     label2:
        return null;
    }

    private static java.lang.Class getHolderClass(java.lang.reflect.ParameterizedType)
    {
        java.lang.reflect.GenericArrayType $r3;
        java.lang.reflect.ParameterizedType r0, $r2;
        java.lang.reflect.Type $r4, r6;
        java.lang.reflect.Type[] $r1;
        java.lang.Object $r5;
        java.lang.Class r7, r8;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.reflect.ParameterizedType;

        $r1 = interfaceinvoke r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        r6 = $r1[0];

        $z0 = r6 instanceof java.lang.reflect.GenericArrayType;

        if $z0 == 0 goto label1;

        $r3 = (java.lang.reflect.GenericArrayType) r6;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        r7 = (java.lang.Class) $r4;

        $r5 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r7, 0);

        r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        goto label3;

     label1:
        $z1 = r6 instanceof java.lang.reflect.ParameterizedType;

        if $z1 == 0 goto label2;

        $r2 = (java.lang.reflect.ParameterizedType) r6;

        r6 = interfaceinvoke $r2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

     label2:
        r8 = (java.lang.Class) r6;

     label3:
        return r8;
    }

    public java.lang.Boolean isWrapperPartNillable(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.lang.Boolean $r2;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r3;
        java.lang.Object $r1;
        org.apache.cxf.service.model.MessagePartInfo r0;

        r3 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r0 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("nillable");

        $r2 = (java.lang.Boolean) $r1;

        return $r2;
    }

    public java.lang.Long getWrapperPartMaxOccurs(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.lang.Long $r8, $r10, $r11;
        java.lang.String r2, $r9;
        org.apache.cxf.service.model.MessagePartInfo r0;
        boolean $z0, $z1, $z2;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r12;
        java.lang.Object $r1;
        java.lang.Class $r3, $r4, $r5, $r6, $r7;

        r12 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r0 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("maxOccurs");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label2;

        $r9 = "unbounded";

        $z2 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z2 == 0 goto label1;

        $r11 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(9223372036854775807L);

        return $r11;

     label1:
        $r10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>(r2, 10);

        return $r10;

     label2:
        $r3 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        if $r3 == null goto label3;

        $r4 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isArray()>();

        if $z0 == 0 goto label3;

        $r5 = <java.lang.Byte: java.lang.Class TYPE>;

        $r6 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Class getComponentType()>();

        $z1 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>($r7);

        if $z1 != 0 goto label3;

        $r8 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(9223372036854775807L);

        return $r8;

     label3:
        return null;
    }

    public java.lang.Long getWrapperPartMinOccurs(org.apache.cxf.service.model.MessagePartInfo)
    {
        java.lang.Long $r5, $r6;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r7;
        java.lang.Object $r1;
        java.lang.Class $r3, $r4;
        java.lang.String r2;
        org.apache.cxf.service.model.MessagePartInfo r0;
        boolean $z0;

        r7 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r0 := @parameter0: org.apache.cxf.service.model.MessagePartInfo;

        $r1 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Object getProperty(java.lang.String)>("minOccurs");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label1;

        $r6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(java.lang.String,int)>(r2, 10);

        return $r6;

     label1:
        $r3 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<org.apache.cxf.service.model.MessagePartInfo: java.lang.Class getTypeClass()>();

        $z0 = virtualinvoke $r4.<java.lang.Class: boolean isPrimitive()>();

        if $z0 != 0 goto label2;

        $r5 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(0L);

        return $r5;

     label2:
        return null;
    }

    public volatile java.lang.reflect.Type getHolderType(java.lang.Class, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r2;
        org.apache.cxf.service.factory.DefaultServiceConfiguration r0;
        java.lang.Class r1, $r3;

        r0 := @this: org.apache.cxf.service.factory.DefaultServiceConfiguration;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.reflect.Type;

        $r3 = virtualinvoke r0.<org.apache.cxf.service.factory.DefaultServiceConfiguration: java.lang.Class getHolderType(java.lang.Class,java.lang.reflect.Type)>(r1, r2);

        return $r3;
    }
}
