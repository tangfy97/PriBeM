public class org.apache.jena.riot.out.NodeToLabel extends org.apache.jena.riot.system.MapWithScope
{
    private static final org.apache.jena.riot.out.NodeToLabel _internal;

    public static org.apache.jena.riot.out.NodeToLabel createScopeByDocument()
    {
        org.apache.jena.riot.out.NodeToLabel $r0;
        org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel $r2;
        org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy $r1;

        $r0 = new org.apache.jena.riot.out.NodeToLabel;

        $r1 = new org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy;

        specialinvoke $r1.<org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        $r2 = new org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel;

        specialinvoke $r2.<org.apache.jena.riot.out.NodeToLabel$AllocatorIncLabel: void <init>()>();

        specialinvoke $r0.<org.apache.jena.riot.out.NodeToLabel: void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy,org.apache.jena.riot.system.MapWithScope$Allocator)>($r1, $r2);

        return $r0;
    }

    public static org.apache.jena.riot.out.NodeToLabel createBNodeByLabelEncoded()
    {
        org.apache.jena.riot.out.NodeToLabel $r0;
        org.apache.jena.riot.out.NodeToLabel$AllocatorInternalSafe $r2;
        org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy $r1;

        $r0 = new org.apache.jena.riot.out.NodeToLabel;

        $r1 = new org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy;

        specialinvoke $r1.<org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        $r2 = new org.apache.jena.riot.out.NodeToLabel$AllocatorInternalSafe;

        specialinvoke $r2.<org.apache.jena.riot.out.NodeToLabel$AllocatorInternalSafe: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        specialinvoke $r0.<org.apache.jena.riot.out.NodeToLabel: void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy,org.apache.jena.riot.system.MapWithScope$Allocator)>($r1, $r2);

        return $r0;
    }

    public static org.apache.jena.riot.out.NodeToLabel createBNodeByLabelAsGiven()
    {
        org.apache.jena.riot.out.NodeToLabel $r0;
        org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw $r2;
        org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy $r1;

        $r0 = new org.apache.jena.riot.out.NodeToLabel;

        $r1 = new org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy;

        specialinvoke $r1.<org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        $r2 = new org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw;

        specialinvoke $r2.<org.apache.jena.riot.out.NodeToLabel$AllocatorInternalRaw: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        specialinvoke $r0.<org.apache.jena.riot.out.NodeToLabel: void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy,org.apache.jena.riot.system.MapWithScope$Allocator)>($r1, $r2);

        return $r0;
    }

    public static org.apache.jena.riot.out.NodeToLabel createBNodeByIRI()
    {
        org.apache.jena.riot.out.NodeToLabel $r0;
        org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI $r2;
        org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy $r1;

        $r0 = new org.apache.jena.riot.out.NodeToLabel;

        $r1 = new org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy;

        specialinvoke $r1.<org.apache.jena.riot.out.NodeToLabel$SingleScopePolicy: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        $r2 = new org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI;

        specialinvoke $r2.<org.apache.jena.riot.out.NodeToLabel$AllocatorBNodeAsIRI: void <init>(org.apache.jena.riot.out.NodeToLabel$1)>(null);

        specialinvoke $r0.<org.apache.jena.riot.out.NodeToLabel: void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy,org.apache.jena.riot.system.MapWithScope$Allocator)>($r1, $r2);

        return $r0;
    }

    public static org.apache.jena.riot.out.NodeToLabel labelByInternal()
    {
        org.apache.jena.riot.out.NodeToLabel $r0;

        $r0 = <org.apache.jena.riot.out.NodeToLabel: org.apache.jena.riot.out.NodeToLabel _internal>;

        return $r0;
    }

    private void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy, org.apache.jena.riot.system.MapWithScope$Allocator)
    {
        org.apache.jena.riot.system.MapWithScope$ScopePolicy r1;
        org.apache.jena.riot.out.NodeToLabel r0;
        org.apache.jena.riot.system.MapWithScope$Allocator r2;

        r0 := @this: org.apache.jena.riot.out.NodeToLabel;

        r1 := @parameter0: org.apache.jena.riot.system.MapWithScope$ScopePolicy;

        r2 := @parameter1: org.apache.jena.riot.system.MapWithScope$Allocator;

        specialinvoke r0.<org.apache.jena.riot.system.MapWithScope: void <init>(org.apache.jena.riot.system.MapWithScope$ScopePolicy,org.apache.jena.riot.system.MapWithScope$Allocator)>(r1, r2);

        return;
    }

    static void <clinit>()
    {
        org.apache.jena.riot.out.NodeToLabel $r0;

        $r0 = staticinvoke <org.apache.jena.riot.out.NodeToLabel: org.apache.jena.riot.out.NodeToLabel createBNodeByLabelEncoded()>();

        <org.apache.jena.riot.out.NodeToLabel: org.apache.jena.riot.out.NodeToLabel _internal> = $r0;

        return;
    }
}
