public class org.apache.poi.dev.RecordGenerator extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.dev.RecordGenerator r0;

        r0 := @this: org.apache.poi.dev.RecordGenerator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r5, $r6;
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4;

        r0 := @parameter0: java.lang.String[];

        staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.poi.generator.FieldIterator");

        $i0 = lengthof r0;

        if $i0 == 4 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("Usage:");

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("  java org.apache.poi.hssf.util.RecordGenerator RECORD_DEFINTIONS RECORD_STYLES DEST_SRC_PATH TEST_SRC_PATH");

        goto label2;

     label1:
        $r4 = r0[0];

        $r3 = r0[1];

        $r2 = r0[2];

        $r1 = r0[3];

        staticinvoke <org.apache.poi.dev.RecordGenerator: void generateRecords(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r3, $r2, $r1);

     label2:
        return;
    }

    private static void generateRecords(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws java.lang.Exception
    {
        org.w3c.dom.Document $r8;
        java.lang.StringBuilder $r25, $r27, $r28, $r29, $r32, $r33, $r34, $r35, $r36, $r37, $r41, $r43, $r44, $r46, $r47, $r49, $r51, $r52, $r53, $r54, $r56, $r58, $r59, $r60, $r63, $r64, $r65, $r66, $r67, $r68, $r71, $r73, $r74, $r76, $r77, $r78, $r80, $r81, $r85, $r87, $r88;
        javax.xml.parsers.DocumentBuilderFactory $r6;
        java.lang.String r1, $r5, $r13, $r17, $r20, $r23, $r24, r26, $r30, $r38, r42, $r45, $r48, $r55, r57, $r61, $r69, $r75, $r79, $r82, $r89, $r90;
        java.io.File $r0, r4, $r31, $r39, $r40, $r62, $r70, $r83, $r84;
        javax.xml.parsers.DocumentBuilder $r7;
        boolean $z0, $z1, $z2, $z3;
        org.w3c.dom.Node $r11, $r12, $r15, $r16, $r19, $r22;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r18, $r21;
        java.io.PrintStream $r50, $r72, $r86;
        org.w3c.dom.NodeList $r10, $r14;
        org.w3c.dom.Element $r9;
        java.io.File[] $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r42 := @parameter1: java.lang.String;

        r26 := @parameter2: java.lang.String;

        r57 := @parameter3: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        i1 = 0;

     label1:
        $r2 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label5;

        $r3 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        r4 = $r3[i1];

        $z0 = virtualinvoke r4.<java.io.File: boolean isFile()>();

        if $z0 == 0 goto label4;

        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r5.<java.lang.String: boolean endsWith(java.lang.String)>("_record.xml");

        if $z1 != 0 goto label2;

        $r90 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z3 = virtualinvoke $r90.<java.lang.String: boolean endsWith(java.lang.String)>("_type.xml");

        if $z3 == 0 goto label4;

     label2:
        $r6 = staticinvoke <org.apache.poi.util.XMLHelper: javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()>();

        $r7 = virtualinvoke $r6.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.File)>(r4);

        $r9 = interfaceinvoke $r8.<org.w3c.dom.Document: org.w3c.dom.Element getDocumentElement()>();

        $r10 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("extends");

        $r11 = interfaceinvoke $r10.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r12 = interfaceinvoke $r11.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        $r13 = interfaceinvoke $r12.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r14 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagName(java.lang.String)>("suffix");

        $r15 = interfaceinvoke $r14.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        $r16 = interfaceinvoke $r15.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        $r17 = interfaceinvoke $r16.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r18 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r19 = interfaceinvoke $r18.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("name");

        $r20 = interfaceinvoke $r19.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r21 = interfaceinvoke $r9.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r22 = interfaceinvoke $r21.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>("package");

        $r23 = interfaceinvoke $r22.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(char,char)>(46, 47);

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r31 = new java.io.File;

        specialinvoke $r31.<java.io.File: void <init>(java.lang.String)>($r30);

        virtualinvoke $r31.<java.io.File: boolean mkdirs()>();

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".java");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = new java.io.File;

        specialinvoke $r39.<java.io.File: void <init>(java.lang.String)>($r38);

        $r40 = new java.io.File;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r45 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".xsl");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<java.io.File: void <init>(java.lang.String)>($r48);

        staticinvoke <org.apache.poi.dev.RecordGenerator: void transform(java.io.File,java.io.File,java.io.File)>(r4, $r39, $r40);

        $r50 = <java.lang.System: java.io.PrintStream out>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generated ");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r50.<java.io.PrintStream: void println(java.lang.String)>($r55);

        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.String toString()>();

        $r62 = new java.io.File;

        specialinvoke $r62.<java.io.File: void <init>(java.lang.String)>($r61);

        virtualinvoke $r62.<java.io.File: boolean mkdirs()>();

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/Test");

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".java");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        $r70 = new java.io.File;

        specialinvoke $r70.<java.io.File: void <init>(java.lang.String)>($r69);

        $z2 = virtualinvoke $r70.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label3;

        $r76 = new java.lang.StringBuilder;

        specialinvoke $r76.<java.lang.StringBuilder: void <init>()>();

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r42);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r79 = virtualinvoke $r13.<java.lang.String: java.lang.String toLowerCase()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_test.xsl");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        $r83 = new java.io.File;

        specialinvoke $r83.<java.io.File: void <init>(java.lang.String)>($r69);

        $r84 = new java.io.File;

        specialinvoke $r84.<java.io.File: void <init>(java.lang.String)>($r82);

        staticinvoke <org.apache.poi.dev.RecordGenerator: void transform(java.io.File,java.io.File,java.io.File)>(r4, $r83, $r84);

        $r86 = <java.lang.System: java.io.PrintStream out>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Generated test: ");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r86.<java.io.PrintStream: void println(java.lang.String)>($r89);

        goto label4;

     label3:
        $r72 = <java.lang.System: java.io.PrintStream out>;

        $r71 = new java.lang.StringBuilder;

        specialinvoke $r71.<java.lang.StringBuilder: void <init>()>();

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Skipped test generation: ");

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r72.<java.io.PrintStream: void println(java.lang.String)>($r75);

     label4:
        i1 = i1 + 1;

        goto label1;

     label5:
        return;
    }

    private static void transform(java.io.File, java.io.File, java.io.File) throws java.io.FileNotFoundException, javax.xml.transform.TransformerException
    {
        javax.xml.transform.Transformer $r4;
        javax.xml.transform.TransformerException $r10;
        javax.xml.transform.stream.StreamSource $r2, $r8;
        javax.xml.transform.stream.StreamResult $r6;
        java.lang.String $r15;
        java.io.PrintStream $r12;
        java.util.Properties $r5;
        java.io.File r1, r7, r9;
        java.lang.StringBuilder $r11, $r13, $r14;
        java.io.FileReader $r0;
        javax.xml.transform.TransformerFactory $r3;

        r9 := @parameter0: java.io.File;

        r7 := @parameter1: java.io.File;

        r1 := @parameter2: java.io.File;

        $r0 = new java.io.FileReader;

        specialinvoke $r0.<java.io.FileReader: void <init>(java.io.File)>(r1);

        $r2 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r2.<javax.xml.transform.stream.StreamSource: void <init>(java.io.Reader)>($r0);

        $r3 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

     label1:
        $r4 = virtualinvoke $r3.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer(javax.xml.transform.Source)>($r2);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r12 = <java.lang.System: java.io.PrintStream err>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error compiling XSL style sheet ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r15);

        throw $r10;

     label4:
        $r5 = new java.util.Properties;

        specialinvoke $r5.<java.util.Properties: void <init>()>();

        virtualinvoke $r5.<java.util.Properties: java.lang.Object setProperty(java.lang.String,java.lang.String)>("method", "text");

        virtualinvoke $r4.<javax.xml.transform.Transformer: void setOutputProperties(java.util.Properties)>($r5);

        $r6 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r6.<javax.xml.transform.stream.StreamResult: void <init>(java.io.File)>(r7);

        $r8 = new javax.xml.transform.stream.StreamSource;

        specialinvoke $r8.<javax.xml.transform.stream.StreamSource: void <init>(java.io.File)>(r9);

        virtualinvoke $r4.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r8, $r6);

        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }
}
