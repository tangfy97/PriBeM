public class org.springframework.aop.target.ThreadLocalTargetSource extends org.springframework.aop.target.AbstractPrototypeBasedTargetSource implements org.springframework.aop.target.ThreadLocalTargetSourceStats, org.springframework.beans.factory.DisposableBean
{
    private final java.lang.ThreadLocal targetInThread;
    private final java.util.Set targetSet;
    private int invocationCount;
    private int hitCount;

    public void <init>()
    {
        java.util.Set $r8;
        org.springframework.core.NamedThreadLocal $r1;
        java.util.HashSet $r7;
        org.springframework.aop.target.ThreadLocalTargetSource r0;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6;

        r0 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        specialinvoke r0.<org.springframework.aop.target.AbstractPrototypeBasedTargetSource: void <init>()>();

        $r1 = new org.springframework.core.NamedThreadLocal;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Thread-local instance of bean \'");

        $r3 = virtualinvoke r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.String getTargetBeanName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.springframework.core.NamedThreadLocal: void <init>(java.lang.String)>($r6);

        r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.ThreadLocal targetInThread> = $r1;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        $r8 = staticinvoke <java.util.Collections: java.util.Set synchronizedSet(java.util.Set)>($r7);

        r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.util.Set targetSet> = $r8;

        return;
    }

    public java.lang.Object getTarget() throws org.springframework.beans.BeansException
    {
        org.springframework.aop.target.ThreadLocalTargetSource r0;
        java.lang.Thread $r13;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r9, $r14, $r17;
        boolean $z0;
        java.lang.ThreadLocal $r1, $r5;
        java.util.Set $r6;
        java.lang.Object $r2, $r4, r18;
        org.apache.commons.logging.Log $r3, $r8;
        java.lang.StringBuilder $r7, $r10, $r11, $r12, $r15, $r16;

        r0 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        $i0 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: int invocationCount>;

        $i1 = $i0 + 1;

        r0.<org.springframework.aop.target.ThreadLocalTargetSource: int invocationCount> = $i1;

        $r1 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.ThreadLocal targetInThread>;

        $r2 = virtualinvoke $r1.<java.lang.ThreadLocal: java.lang.Object get()>();

        r18 = $r2;

        if $r2 != null goto label2;

        $r3 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r8 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: org.apache.commons.logging.Log logger>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("No target for prototype \'");

        $r9 = virtualinvoke r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.String getTargetBeanName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' bound to thread: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("creating one and binding it to thread \'");

        $r13 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r14 = virtualinvoke $r13.<java.lang.Thread: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r17);

     label1:
        $r4 = virtualinvoke r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.Object newPrototypeInstance()>();

        r18 = $r4;

        $r5 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.ThreadLocal targetInThread>;

        virtualinvoke $r5.<java.lang.ThreadLocal: void set(java.lang.Object)>($r4);

        $r6 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.util.Set targetSet>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r4);

        goto label3;

     label2:
        $i2 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: int hitCount>;

        $i3 = $i2 + 1;

        r0.<org.springframework.aop.target.ThreadLocalTargetSource: int hitCount> = $i3;

     label3:
        return r18;
    }

    public void destroy()
    {
        java.lang.Throwable $r8;
        java.lang.ThreadLocal $r7;
        java.util.Iterator $r4;
        java.util.Set $r2, $r3, $r6;
        org.springframework.aop.target.ThreadLocalTargetSource r0;
        org.apache.commons.logging.Log $r1;
        java.lang.Object $r5;
        boolean $z0;

        r0 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        $r1 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r1.<org.apache.commons.logging.Log: void debug(java.lang.Object)>("Destroying ThreadLocalTargetSource bindings");

        $r2 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.util.Set targetSet>;

        entermonitor $r2;

     label1:
        $r3 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.util.Set targetSet>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label3;

     label2:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<org.springframework.aop.target.ThreadLocalTargetSource: void destroyPrototypeInstance(java.lang.Object)>($r5);

     label3:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $r6 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.util.Set targetSet>;

        interfaceinvoke $r6.<java.util.Set: void clear()>();

        exitmonitor $r2;

     label4:
        goto label7;

     label5:
        $r8 := @caughtexception;

        exitmonitor $r2;

     label6:
        throw $r8;

     label7:
        $r7 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.lang.ThreadLocal targetInThread>;

        virtualinvoke $r7.<java.lang.ThreadLocal: void remove()>();

        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getInvocationCount()
    {
        int $i0;
        org.springframework.aop.target.ThreadLocalTargetSource r0;

        r0 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        $i0 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: int invocationCount>;

        return $i0;
    }

    public int getHitCount()
    {
        int $i0;
        org.springframework.aop.target.ThreadLocalTargetSource r0;

        r0 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        $i0 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: int hitCount>;

        return $i0;
    }

    public int getObjectCount()
    {
        int $i0;
        java.util.Set $r1;
        org.springframework.aop.target.ThreadLocalTargetSource r0;

        r0 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        $r1 = r0.<org.springframework.aop.target.ThreadLocalTargetSource: java.util.Set targetSet>;

        $i0 = interfaceinvoke $r1.<java.util.Set: int size()>();

        return $i0;
    }

    public org.springframework.aop.IntroductionAdvisor getStatsMixin()
    {
        org.springframework.aop.support.DelegatingIntroductionInterceptor $r0;
        org.springframework.aop.support.DefaultIntroductionAdvisor $r2;
        org.springframework.aop.target.ThreadLocalTargetSource r1;

        r1 := @this: org.springframework.aop.target.ThreadLocalTargetSource;

        $r0 = new org.springframework.aop.support.DelegatingIntroductionInterceptor;

        specialinvoke $r0.<org.springframework.aop.support.DelegatingIntroductionInterceptor: void <init>(java.lang.Object)>(r1);

        $r2 = new org.springframework.aop.support.DefaultIntroductionAdvisor;

        specialinvoke $r2.<org.springframework.aop.support.DefaultIntroductionAdvisor: void <init>(org.springframework.aop.DynamicIntroductionAdvice,java.lang.Class)>($r0, class "Lorg/springframework/aop/target/ThreadLocalTargetSourceStats;");

        return $r2;
    }
}
