public final class org.apache.xerces.impl.io.UTF16Reader extends java.io.Reader
{
    public static final int DEFAULT_BUFFER_SIZE;
    protected final java.io.InputStream fInputStream;
    protected final byte[] fBuffer;
    protected final boolean fIsBigEndian;
    private final org.apache.xerces.util.MessageFormatter fFormatter;
    private final java.util.Locale fLocale;

    public void <init>(java.io.InputStream, boolean)
    {
        org.apache.xerces.impl.msg.XMLMessageFormatter $r2;
        java.util.Locale $r3;
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r2 = new org.apache.xerces.impl.msg.XMLMessageFormatter;

        specialinvoke $r2.<org.apache.xerces.impl.msg.XMLMessageFormatter: void <init>()>();

        $r3 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void <init>(java.io.InputStream,int,boolean,org.apache.xerces.util.MessageFormatter,java.util.Locale)>(r1, 4096, z0, $r2, $r3);

        return;
    }

    public void <init>(java.io.InputStream, boolean, org.apache.xerces.util.MessageFormatter, java.util.Locale)
    {
        org.apache.xerces.util.MessageFormatter r2;
        java.util.Locale r3;
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        r2 := @parameter2: org.apache.xerces.util.MessageFormatter;

        r3 := @parameter3: java.util.Locale;

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void <init>(java.io.InputStream,int,boolean,org.apache.xerces.util.MessageFormatter,java.util.Locale)>(r1, 4096, z0, r2, r3);

        return;
    }

    public void <init>(java.io.InputStream, int, boolean, org.apache.xerces.util.MessageFormatter, java.util.Locale)
    {
        org.apache.xerces.util.MessageFormatter r2;
        byte[] $r4;
        java.util.Locale r3;
        int i0;
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r1 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        r2 := @parameter3: org.apache.xerces.util.MessageFormatter;

        r3 := @parameter4: java.util.Locale;

        $r4 = newarray (byte)[i0];

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void <init>(java.io.InputStream,byte[],boolean,org.apache.xerces.util.MessageFormatter,java.util.Locale)>(r1, $r4, z0, r2, r3);

        return;
    }

    public void <init>(java.io.InputStream, byte[], boolean, org.apache.xerces.util.MessageFormatter, java.util.Locale)
    {
        byte[] r2;
        org.apache.xerces.util.MessageFormatter r3;
        java.util.Locale r4;
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        z0 := @parameter2: boolean;

        r3 := @parameter3: org.apache.xerces.util.MessageFormatter;

        r4 := @parameter4: java.util.Locale;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream> = r1;

        r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer> = r2;

        r0.<org.apache.xerces.impl.io.UTF16Reader: boolean fIsBigEndian> = z0;

        r0.<org.apache.xerces.impl.io.UTF16Reader: org.apache.xerces.util.MessageFormatter fFormatter> = r3;

        r0.<org.apache.xerces.impl.io.UTF16Reader: java.util.Locale fLocale> = r4;

        return;
    }

    public int read() throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7, $i9, $i11;
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        $r1 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int read()>();

        $i7 = (int) -1;

        if $i0 != $i7 goto label1;

        $i9 = (int) -1;

        return $i9;

     label1:
        $r2 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        $i1 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $i11 = (int) -1;

        if $i1 != $i11 goto label2;

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void expectedTwoBytes()>();

     label2:
        $z0 = r0.<org.apache.xerces.impl.io.UTF16Reader: boolean fIsBigEndian>;

        if $z0 == 0 goto label3;

        $i4 = $i0 << 8;

        $i5 = $i4 | $i1;

        return $i5;

     label3:
        $i2 = $i1 << 8;

        $i3 = $i2 | $i0;

        return $i3;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        byte[] $r1, $r2, $r6, $r7;
        byte $b6;
        int i0, $i1, $i2, $i3, i4, $i5, i7, i8, $i9, $i11, $i13, $i15;
        org.apache.xerces.impl.io.UTF16Reader r0;
        boolean $z0;
        char[] r4;
        java.io.InputStream $r3, $r5;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r4 := @parameter0: char[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i7 = i0 << 1;

        $r1 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        $i1 = lengthof $r1;

        if i7 <= $i1 goto label1;

        $r7 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        i7 = lengthof $r7;

     label1:
        $r3 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        $r2 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        $i2 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>($r2, 0, i7);

        i8 = $i2;

        $i11 = (int) -1;

        if $i2 != $i11 goto label2;

        $i13 = (int) -1;

        return $i13;

     label2:
        $i3 = $i2 & 1;

        if $i3 == 0 goto label4;

        $r5 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        $i5 = virtualinvoke $r5.<java.io.InputStream: int read()>();

        $i15 = (int) -1;

        if $i5 != $i15 goto label3;

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void expectedTwoBytes()>();

     label3:
        $r6 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        i8 = $i2 + 1;

        $b6 = (byte) $i5;

        $r6[$i2] = $b6;

     label4:
        $i9 = i8 >> 1;

        $z0 = r0.<org.apache.xerces.impl.io.UTF16Reader: boolean fIsBigEndian>;

        if $z0 == 0 goto label5;

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void processBE(char[],int,int)>(r4, i4, $i9);

        goto label6;

     label5:
        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void processLE(char[],int,int)>(r4, i4, $i9);

     label6:
        return $i9;
    }

    public long skip(long) throws java.io.IOException
    {
        long l0, $l1, $l2, $l3, l6, $l7;
        byte $b4;
        int $i5, $i9;
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream $r1, $r2;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        $l1 = l0 << 1;

        $l2 = virtualinvoke $r1.<java.io.InputStream: long skip(long)>($l1);

        l6 = $l2;

        $l3 = $l2 & 1L;

        $b4 = $l3 cmp 0L;

        if $b4 == 0 goto label2;

        $r2 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        $i5 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        $i9 = (int) -1;

        if $i5 != $i9 goto label1;

        specialinvoke r0.<org.apache.xerces.impl.io.UTF16Reader: void expectedTwoBytes()>();

     label1:
        l6 = $l2 + 1L;

     label2:
        $l7 = l6 >> 1;

        return $l7;
    }

    public boolean ready() throws java.io.IOException
    {
        org.apache.xerces.impl.io.UTF16Reader r0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        return 0;
    }

    public boolean markSupported()
    {
        org.apache.xerces.impl.io.UTF16Reader r0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        return 0;
    }

    public void mark(int) throws java.io.IOException
    {
        org.apache.xerces.util.MessageFormatter $r4;
        java.lang.Object[] $r2;
        java.util.Locale $r3;
        int i0;
        org.apache.xerces.impl.io.UTF16Reader r1;
        java.io.IOException $r0;
        java.lang.String $r5;

        r1 := @this: org.apache.xerces.impl.io.UTF16Reader;

        i0 := @parameter0: int;

        $r0 = new java.io.IOException;

        $r4 = r1.<org.apache.xerces.impl.io.UTF16Reader: org.apache.xerces.util.MessageFormatter fFormatter>;

        $r3 = r1.<org.apache.xerces.impl.io.UTF16Reader: java.util.Locale fLocale>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "mark()";

        $r2[1] = "UTF-16";

        $r5 = interfaceinvoke $r4.<org.apache.xerces.util.MessageFormatter: java.lang.String formatMessage(java.util.Locale,java.lang.String,java.lang.Object[])>($r3, "OperationNotSupported", $r2);

        specialinvoke $r0.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.xerces.impl.io.UTF16Reader r0;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.xerces.impl.io.UTF16Reader r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        $r1 = r0.<org.apache.xerces.impl.io.UTF16Reader: java.io.InputStream fInputStream>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    private void processBE(char[], int, int)
    {
        byte[] $r1, $r2;
        short s2, s4, $s13, $s14;
        byte $b1, $b3;
        int i0, $i5, $i6, $i7, i9, i10, i11, i12, $i15, $i16;
        org.apache.xerces.impl.io.UTF16Reader r0;
        char $c8;
        char[] r3;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r3 := @parameter0: char[];

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        i10 = 0;

        i11 = 0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        i12 = i10 + 1;

        $b1 = $r1[i10];

        $s13 = (short) $b1;

        s2 = $s13 & 255;

        $r2 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        i10 = i12 + 1;

        $b3 = $r2[i12];

        $s14 = (short) $b3;

        s4 = $s14 & 255;

        $i5 = i9;

        i9 = i9 + 1;

        $i15 = (int) s2;

        $i6 = $i15 << 8;

        $i16 = (int) s4;

        $i7 = $i6 | $i16;

        $c8 = (char) $i7;

        r3[$i5] = $c8;

        i11 = i11 + 1;

     label2:
        if i11 < i0 goto label1;

        return;
    }

    private void processLE(char[], int, int)
    {
        byte[] $r1, $r2;
        short s2, s4, $s13, $s14;
        byte $b1, $b3;
        int i0, $i5, $i6, $i7, i9, i10, i11, i12, $i15, $i16;
        org.apache.xerces.impl.io.UTF16Reader r0;
        char $c8;
        char[] r3;

        r0 := @this: org.apache.xerces.impl.io.UTF16Reader;

        r3 := @parameter0: char[];

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        i10 = 0;

        i11 = 0;

        goto label2;

     label1:
        $r1 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        i12 = i10 + 1;

        $b1 = $r1[i10];

        $s13 = (short) $b1;

        s2 = $s13 & 255;

        $r2 = r0.<org.apache.xerces.impl.io.UTF16Reader: byte[] fBuffer>;

        i10 = i12 + 1;

        $b3 = $r2[i12];

        $s14 = (short) $b3;

        s4 = $s14 & 255;

        $i5 = i9;

        i9 = i9 + 1;

        $i15 = (int) s4;

        $i6 = $i15 << 8;

        $i16 = (int) s2;

        $i7 = $i6 | $i16;

        $c8 = (char) $i7;

        r3[$i5] = $c8;

        i11 = i11 + 1;

     label2:
        if i11 < i0 goto label1;

        return;
    }

    private void expectedTwoBytes() throws org.apache.xerces.impl.io.MalformedByteSequenceException
    {
        org.apache.xerces.util.MessageFormatter $r4;
        java.lang.Object[] $r2;
        java.util.Locale $r3;
        org.apache.xerces.impl.io.UTF16Reader r1;
        org.apache.xerces.impl.io.MalformedByteSequenceException $r0;

        r1 := @this: org.apache.xerces.impl.io.UTF16Reader;

        $r0 = new org.apache.xerces.impl.io.MalformedByteSequenceException;

        $r4 = r1.<org.apache.xerces.impl.io.UTF16Reader: org.apache.xerces.util.MessageFormatter fFormatter>;

        $r3 = r1.<org.apache.xerces.impl.io.UTF16Reader: java.util.Locale fLocale>;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "2";

        $r2[1] = "2";

        specialinvoke $r0.<org.apache.xerces.impl.io.MalformedByteSequenceException: void <init>(org.apache.xerces.util.MessageFormatter,java.util.Locale,java.lang.String,java.lang.String,java.lang.Object[])>($r4, $r3, "http://www.w3.org/TR/1998/REC-xml-19980210", "ExpectedByte", $r2);

        throw $r0;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.impl.io.UTF16Reader: int DEFAULT_BUFFER_SIZE> = 4096;

        return;
    }
}
