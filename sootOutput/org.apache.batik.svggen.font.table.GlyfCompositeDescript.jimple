public class org.apache.batik.svggen.font.table.GlyfCompositeDescript extends org.apache.batik.svggen.font.table.GlyfDescript
{
    private java.util.List components;
    protected boolean beingResolved;
    protected boolean resolved;

    public void <init>(org.apache.batik.svggen.font.table.GlyfTable, java.io.ByteArrayInputStream)
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        java.util.ArrayList $r6;
        java.util.List $r5;
        short $s0, $s1, $s2, $s3, $s9;
        java.io.ByteArrayInputStream r2;
        int $i4, $i5, $i6, $i7;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r7;
        org.apache.batik.svggen.font.table.GlyfTable r1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        r1 := @parameter0: org.apache.batik.svggen.font.table.GlyfTable;

        r2 := @parameter1: java.io.ByteArrayInputStream;

        $s9 = (short) -1;

        specialinvoke r0.<org.apache.batik.svggen.font.table.GlyfDescript: void <init>(org.apache.batik.svggen.font.table.GlyfTable,short,java.io.ByteArrayInputStream)>(r1, $s9, r2);

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components> = $r6;

        r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean beingResolved> = 0;

        r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean resolved> = 0;

     label1:
        $r7 = new org.apache.batik.svggen.font.table.GlyfCompositeComp;

        specialinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: void <init>(java.io.ByteArrayInputStream)>(r2);

        $r5 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r7);

        $s0 = virtualinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: short getFlags()>();

        $s1 = $s0 & 32;

        if $s1 != 0 goto label1;

        $s2 = virtualinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: short getFlags()>();

        $s3 = $s2 & 256;

        if $s3 == 0 goto label2;

        $i4 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i5 = $i4 << 8;

        $i6 = virtualinvoke r2.<java.io.ByteArrayInputStream: int read()>();

        $i7 = $i5 | $i6;

        virtualinvoke r0.<org.apache.batik.svggen.font.table.Program: void readInstructions(java.io.ByteArrayInputStream,int)>(r2, $i7);

     label2:
        return;
    }

    public void resolve()
    {
        org.apache.batik.svggen.font.table.GlyfDescript $r6;
        int $i0, $i1, $i2, i3, i4;
        boolean $z0, $z1, $z2;
        java.io.PrintStream $r7;
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        java.util.Iterator $r2;
        java.util.List $r1;
        org.apache.batik.svggen.font.table.GlyfCompositeComp r4;
        java.lang.Object $r3;
        org.apache.batik.svggen.font.table.GlyfTable $r5;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        $z0 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean resolved>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean beingResolved>;

        if $z1 == 0 goto label2;

        $r7 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("Circular reference in GlyfCompositeDesc");

        return;

     label2:
        r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean beingResolved> = 1;

        i3 = 0;

        i4 = 0;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        goto label4;

     label3:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.batik.svggen.font.table.GlyfCompositeComp) $r3;

        virtualinvoke r4.<org.apache.batik.svggen.font.table.GlyfCompositeComp: void setFirstIndex(int)>(i3);

        virtualinvoke r4.<org.apache.batik.svggen.font.table.GlyfCompositeComp: void setFirstContour(int)>(i4);

        $r5 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i0 = virtualinvoke r4.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r6 = virtualinvoke $r5.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i0);

        if $r6 == null goto label4;

        virtualinvoke $r6.<org.apache.batik.svggen.font.table.GlyfDescript: void resolve()>();

        $i1 = virtualinvoke $r6.<org.apache.batik.svggen.font.table.GlyfDescript: int getPointCount()>();

        i3 = i3 + $i1;

        $i2 = virtualinvoke $r6.<org.apache.batik.svggen.font.table.GlyfDescript: int getContourCount()>();

        i4 = i4 + $i2;

     label4:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean resolved> = 1;

        r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean beingResolved> = 0;

        return;
    }

    public int getEndPtOfContours(int)
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfDescript $r3;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r1;
        org.apache.batik.svggen.font.table.GlyfTable $r2;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: org.apache.batik.svggen.font.table.GlyfCompositeComp getCompositeCompEndPt(int)>(i0);

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i1 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i1);

        $i2 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstContour()>();

        $i3 = i0 - $i2;

        $i4 = interfaceinvoke $r3.<org.apache.batik.svggen.font.table.GlyphDescription: int getEndPtOfContours(int)>($i3);

        $i5 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        $i6 = $i4 + $i5;

        return $i6;

     label1:
        return 0;
    }

    public byte getFlags(int)
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfDescript $r3;
        byte $b4;
        int i0, $i1, $i2, $i3;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r1;
        org.apache.batik.svggen.font.table.GlyfTable $r2;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: org.apache.batik.svggen.font.table.GlyfCompositeComp getCompositeComp(int)>(i0);

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i1 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i1);

        $i2 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        $i3 = i0 - $i2;

        $b4 = interfaceinvoke $r3.<org.apache.batik.svggen.font.table.GlyphDescription: byte getFlags(int)>($i3);

        return $b4;

     label1:
        return 0;
    }

    public short getXCoordinate(int)
    {
        org.apache.batik.svggen.font.table.GlyfDescript $r3;
        short $s4, $s5, s9, s10;
        int i0, $i1, $i2, i3, $i6, $i7, $i8, $i11, $i12, $i13;
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r1;
        org.apache.batik.svggen.font.table.GlyfTable $r2;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: org.apache.batik.svggen.font.table.GlyfCompositeComp getCompositeComp(int)>(i0);

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i1 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i1);

        $i2 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        i3 = i0 - $i2;

        $s4 = interfaceinvoke $r3.<org.apache.batik.svggen.font.table.GlyphDescription: short getXCoordinate(int)>(i3);

        $s5 = interfaceinvoke $r3.<org.apache.batik.svggen.font.table.GlyphDescription: short getYCoordinate(int)>(i3);

        $i11 = (int) $s4;

        $i12 = (int) $s5;

        $i6 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int scaleX(int,int)>($i11, $i12);

        s9 = (short) $i6;

        $i7 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getXTranslate()>();

        $i13 = (int) s9;

        $i8 = $i13 + $i7;

        s10 = (short) $i8;

        return s10;

     label1:
        return 0;
    }

    public short getYCoordinate(int)
    {
        org.apache.batik.svggen.font.table.GlyfDescript $r3;
        short $s4, $s5, s9, s10;
        int i0, $i1, $i2, i3, $i6, $i7, $i8, $i11, $i12, $i13;
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r1;
        org.apache.batik.svggen.font.table.GlyfTable $r2;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: org.apache.batik.svggen.font.table.GlyfCompositeComp getCompositeComp(int)>(i0);

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i1 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i1);

        $i2 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        i3 = i0 - $i2;

        $s4 = interfaceinvoke $r3.<org.apache.batik.svggen.font.table.GlyphDescription: short getXCoordinate(int)>(i3);

        $s5 = interfaceinvoke $r3.<org.apache.batik.svggen.font.table.GlyphDescription: short getYCoordinate(int)>(i3);

        $i11 = (int) $s4;

        $i12 = (int) $s5;

        $i6 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int scaleY(int,int)>($i11, $i12);

        s9 = (short) $i6;

        $i7 = virtualinvoke $r1.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getYTranslate()>();

        $i13 = (int) s9;

        $i8 = $i13 + $i7;

        s10 = (short) $i8;

        return s10;

     label1:
        return 0;
    }

    public boolean isComposite()
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        return 1;
    }

    public int getPointCount()
    {
        java.io.PrintStream $r6;
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfDescript $r5;
        java.util.List $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r7;
        java.lang.Object $r3;
        org.apache.batik.svggen.font.table.GlyfTable $r4;
        boolean $z0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        $z0 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean resolved>;

        if $z0 != 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("getPointCount called on unresolved GlyfCompositeDescript");

     label1:
        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (org.apache.batik.svggen.font.table.GlyfCompositeComp) $r3;

        $i2 = virtualinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i3 = virtualinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i3);

        $i4 = virtualinvoke $r5.<org.apache.batik.svggen.font.table.GlyfDescript: int getPointCount()>();

        $i5 = $i2 + $i4;

        return $i5;
    }

    public int getContourCount()
    {
        java.io.PrintStream $r6;
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfDescript $r5;
        java.util.List $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r7;
        java.lang.Object $r3;
        org.apache.batik.svggen.font.table.GlyfTable $r4;
        boolean $z0;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        $z0 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: boolean resolved>;

        if $z0 != 0 goto label1;

        $r6 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("getContourCount called on unresolved GlyfCompositeDescript");

     label1:
        $r2 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $r7 = (org.apache.batik.svggen.font.table.GlyfCompositeComp) $r3;

        $i2 = virtualinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstContour()>();

        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i3 = virtualinvoke $r7.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i3);

        $i4 = virtualinvoke $r5.<org.apache.batik.svggen.font.table.GlyfDescript: int getContourCount()>();

        $i5 = $i2 + $i4;

        return $i5;
    }

    public int getComponentIndex(int)
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        java.util.List $r1;
        int i0, $i1;
        org.apache.batik.svggen.font.table.GlyfCompositeComp $r3;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.apache.batik.svggen.font.table.GlyfCompositeComp) $r2;

        $i1 = virtualinvoke $r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        return $i1;
    }

    public int getComponentCount()
    {
        int $i0;
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        java.util.List $r1;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    protected org.apache.batik.svggen.font.table.GlyfCompositeComp getCompositeComp(int)
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfDescript $r5;
        java.util.List $r1, $r6;
        org.apache.batik.svggen.font.table.GlyfCompositeComp r3;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        java.lang.Object $r2;
        org.apache.batik.svggen.font.table.GlyfTable $r4;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i2 := @parameter0: int;

        i6 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i6);

        r3 = (org.apache.batik.svggen.font.table.GlyfCompositeComp) $r2;

        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i0 = virtualinvoke r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i0);

        $i1 = virtualinvoke r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        if $i1 > i2 goto label2;

        $i3 = virtualinvoke r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstIndex()>();

        $i4 = interfaceinvoke $r5.<org.apache.batik.svggen.font.table.GlyphDescription: int getPointCount()>();

        $i5 = $i3 + $i4;

        if i2 >= $i5 goto label2;

        return r3;

     label2:
        i6 = i6 + 1;

     label3:
        $r6 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $i7 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i6 < $i7 goto label1;

        return null;
    }

    protected org.apache.batik.svggen.font.table.GlyfCompositeComp getCompositeCompEndPt(int)
    {
        org.apache.batik.svggen.font.table.GlyfCompositeDescript r0;
        org.apache.batik.svggen.font.table.GlyfDescript $r5;
        java.util.List $r1, $r6;
        org.apache.batik.svggen.font.table.GlyfCompositeComp r3;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, $i7;
        java.lang.Object $r2;
        org.apache.batik.svggen.font.table.GlyfTable $r4;

        r0 := @this: org.apache.batik.svggen.font.table.GlyfCompositeDescript;

        i2 := @parameter0: int;

        i6 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i6);

        r3 = (org.apache.batik.svggen.font.table.GlyfCompositeComp) $r2;

        $r4 = r0.<org.apache.batik.svggen.font.table.GlyfDescript: org.apache.batik.svggen.font.table.GlyfTable parentTable>;

        $i0 = virtualinvoke r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getGlyphIndex()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.font.table.GlyfTable: org.apache.batik.svggen.font.table.GlyfDescript getDescription(int)>($i0);

        $i1 = virtualinvoke r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstContour()>();

        if $i1 > i2 goto label2;

        $i3 = virtualinvoke r3.<org.apache.batik.svggen.font.table.GlyfCompositeComp: int getFirstContour()>();

        $i4 = interfaceinvoke $r5.<org.apache.batik.svggen.font.table.GlyphDescription: int getContourCount()>();

        $i5 = $i3 + $i4;

        if i2 >= $i5 goto label2;

        return r3;

     label2:
        i6 = i6 + 1;

     label3:
        $r6 = r0.<org.apache.batik.svggen.font.table.GlyfCompositeDescript: java.util.List components>;

        $i7 = interfaceinvoke $r6.<java.util.List: int size()>();

        if i6 < $i7 goto label1;

        return null;
    }
}
