public final class org.apache.poi.hssf.record.FormulaRecord extends org.apache.poi.hssf.record.CellRecord
{
    public static final short sid;
    private static int FIXED_SIZE;
    private static final org.apache.poi.util.BitField alwaysCalc;
    private static final org.apache.poi.util.BitField calcOnLoad;
    private static final org.apache.poi.util.BitField sharedFormula;
    private double field_4_value;
    private short field_5_options;
    private int field_6_zero;
    private org.apache.poi.ss.formula.Formula field_8_parsed_expr;
    private org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue;

    public void <init>()
    {
        org.apache.poi.ss.formula.Formula $r2;
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r1;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        specialinvoke r0.<org.apache.poi.hssf.record.CellRecord: void <init>()>();

        $r1 = <org.apache.poi.ss.formula.ptg.Ptg: org.apache.poi.ss.formula.ptg.Ptg[] EMPTY_PTG_ARRAY>;

        $r2 = staticinvoke <org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula create(org.apache.poi.ss.formula.ptg.Ptg[])>($r1);

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr> = $r2;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.ss.formula.Formula $r4;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r2, $r3;
        long $l0;
        short $s1, $s3;
        org.apache.poi.hssf.record.RecordInputStream r1;
        int $i2, $i4, $i5;
        org.apache.poi.hssf.record.FormulaRecord r0;
        double $d0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.CellRecord: void <init>(org.apache.poi.hssf.record.RecordInputStream)>(r1);

        $l0 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: long readLong()>();

        $s1 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options> = $s1;

        $r2 = staticinvoke <org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue create(long)>($l0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = $r2;

        $r3 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        if $r3 != null goto label1;

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>($l0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value> = $d0;

     label1:
        $i2 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int readInt()>();

        r0.<org.apache.poi.hssf.record.FormulaRecord: int field_6_zero> = $i2;

        $s3 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: short readShort()>();

        $i4 = interfaceinvoke r1.<org.apache.poi.util.LittleEndianInput: int available()>();

        $i5 = (int) $s3;

        $r4 = staticinvoke <org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula read(int,org.apache.poi.util.LittleEndianInput,int)>($i5, r1, $i4);

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr> = $r4;

        return;
    }

    public void setValue(double)
    {
        org.apache.poi.hssf.record.FormulaRecord r0;
        double d0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        d0 := @parameter0: double;

        r0.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value> = d0;

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = null;

        return;
    }

    public void setCachedResultTypeEmptyString()
    {
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = staticinvoke <org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue createCachedEmptyValue()>();

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = $r1;

        return;
    }

    public void setCachedResultTypeString()
    {
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = staticinvoke <org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue createForString()>();

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = $r1;

        return;
    }

    public void setCachedResultErrorCode(int)
    {
        int i0;
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue createCachedErrorCode(int)>(i0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = $r1;

        return;
    }

    public void setCachedResultBoolean(boolean)
    {
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue createCachedBoolean(boolean)>(z0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = $r1;

        return;
    }

    public boolean hasCachedResultString()
    {
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1, $r2;
        int $i0;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        $i0 = virtualinvoke $r2.<org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: int getTypeCode()>();

        if $i0 != 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public int getCachedResultType()
    {
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1, $r2;
        int $i0;
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        $i0 = virtualinvoke $r2.<org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: int getValueType()>();

        return $i0;
    }

    public boolean getCachedBooleanValue()
    {
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        $z0 = virtualinvoke $r1.<org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: boolean getBooleanValue()>();

        return $z0;
    }

    public int getCachedErrorValue()
    {
        int $i0;
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: int getErrorValue()>();

        return $i0;
    }

    public void setOptions(short)
    {
        short s0;
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options> = s0;

        return;
    }

    public double getValue()
    {
        org.apache.poi.hssf.record.FormulaRecord r0;
        double $d0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $d0 = r0.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value>;

        return $d0;
    }

    public short getOptions()
    {
        short $s0;
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        return $s0;
    }

    public boolean isSharedFormula()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField sharedFormula>;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setSharedFormula(boolean)
    {
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField sharedFormula>;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortBoolean(short,boolean)>($s0, z0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options> = $s1;

        return;
    }

    public boolean isAlwaysCalc()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField alwaysCalc>;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setAlwaysCalc(boolean)
    {
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField alwaysCalc>;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortBoolean(short,boolean)>($s0, z0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options> = $s1;

        return;
    }

    public boolean isCalcOnLoad()
    {
        short $s0;
        org.apache.poi.util.BitField $r1;
        int $i1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField calcOnLoad>;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $i1 = (int) $s0;

        $z0 = virtualinvoke $r1.<org.apache.poi.util.BitField: boolean isSet(int)>($i1);

        return $z0;
    }

    public void setCalcOnLoad(boolean)
    {
        short $s0, $s1;
        org.apache.poi.util.BitField $r1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean z0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        z0 := @parameter0: boolean;

        $r1 = <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField calcOnLoad>;

        $s0 = r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $s1 = virtualinvoke $r1.<org.apache.poi.util.BitField: short setShortBoolean(short,boolean)>($s0, z0);

        r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options> = $s1;

        return;
    }

    public org.apache.poi.ss.formula.ptg.Ptg[] getParsedExpression()
    {
        org.apache.poi.ss.formula.Formula $r1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr>;

        $r2 = virtualinvoke $r1.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.ptg.Ptg[] getTokens()>();

        return $r2;
    }

    public org.apache.poi.ss.formula.Formula getFormula()
    {
        org.apache.poi.ss.formula.Formula $r1;
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr>;

        return $r1;
    }

    public void setParsedExpression(org.apache.poi.ss.formula.ptg.Ptg[])
    {
        org.apache.poi.ss.formula.Formula $r2;
        org.apache.poi.hssf.record.FormulaRecord r0;
        org.apache.poi.ss.formula.ptg.Ptg[] r1;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        r1 := @parameter0: org.apache.poi.ss.formula.ptg.Ptg[];

        $r2 = staticinvoke <org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula create(org.apache.poi.ss.formula.ptg.Ptg[])>(r1);

        r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr> = $r2;

        return;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        return 6;
    }

    protected int getValueDataSize()
    {
        org.apache.poi.ss.formula.Formula $r1;
        int $i0, $i1, $i2;
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $i0 = <org.apache.poi.hssf.record.FormulaRecord: int FIXED_SIZE>;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr>;

        $i1 = virtualinvoke $r1.<org.apache.poi.ss.formula.Formula: int getEncodedSize()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    protected void serializeValue(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.Formula $r4;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r1, $r3;
        short $s0;
        org.apache.poi.util.LittleEndianOutput r2;
        int $i1, $i2;
        org.apache.poi.hssf.record.FormulaRecord r0;
        double $d0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        r2 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $r1 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        if $r1 != null goto label1;

        $d0 = r0.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value>;

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void writeDouble(double)>($d0);

        goto label2;

     label1:
        $r3 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        virtualinvoke $r3.<org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: void serialize(org.apache.poi.util.LittleEndianOutput)>(r2);

     label2:
        $s0 = virtualinvoke r0.<org.apache.poi.hssf.record.FormulaRecord: short getOptions()>();

        $i2 = (int) $s0;

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i2);

        $i1 = r0.<org.apache.poi.hssf.record.FormulaRecord: int field_6_zero>;

        interfaceinvoke r2.<org.apache.poi.util.LittleEndianOutput: void writeInt(int)>($i1);

        $r4 = r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr>;

        virtualinvoke $r4.<org.apache.poi.ss.formula.Formula: void serialize(org.apache.poi.util.LittleEndianOutput)>(r2);

        return;
    }

    protected java.lang.String getRecordName()
    {
        org.apache.poi.hssf.record.FormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.FormulaRecord;

        return "FORMULA";
    }

    protected void appendValueText(java.lang.StringBuilder)
    {
        boolean $z0, $z1, $z2;
        java.lang.StringBuilder r0, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r20, $r21, $r23, $r25;
        org.apache.poi.ss.formula.ptg.Ptg $r24;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r2, $r3;
        short $s0;
        org.apache.poi.ss.formula.ptg.Ptg[] $r19;
        int $i1, i3, $i4, $i5;
        java.lang.String $r4, $r22;
        double $d0;
        org.apache.poi.ss.formula.Formula $r18;
        char $c2;
        char[] $r7, $r16;
        org.apache.poi.hssf.record.FormulaRecord r1;

        r1 := @this: org.apache.poi.hssf.record.FormulaRecord;

        r0 := @parameter0: java.lang.StringBuilder;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  .value\t = ");

        $r2 = r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        if $r2 != null goto label1;

        $d0 = r1.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value>;

        $r25 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label2;

     label1:
        $r3 = r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue: java.lang.String formatDebugString()>();

        $r5 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label2:
        $r6 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  .options   = ");

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.FormulaRecord: short getOptions()>();

        $i5 = (int) $s0;

        $r7 = staticinvoke <org.apache.poi.util.HexDump: char[] shortToHex(int)>($i5);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r7);

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r9 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .alwaysCalc= ");

        $z0 = virtualinvoke r1.<org.apache.poi.hssf.record.FormulaRecord: boolean isAlwaysCalc()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r11 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .calcOnLoad= ");

        $z1 = virtualinvoke r1.<org.apache.poi.hssf.record.FormulaRecord: boolean isCalcOnLoad()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r13 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    .shared    = ");

        $z2 = virtualinvoke r1.<org.apache.poi.hssf.record.FormulaRecord: boolean isSharedFormula()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  .zero      = ");

        $i1 = r1.<org.apache.poi.hssf.record.FormulaRecord: int field_6_zero>;

        $r16 = staticinvoke <org.apache.poi.util.HexDump: char[] intToHex(int)>($i1);

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r16);

        virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r18 = r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr>;

        $r19 = virtualinvoke $r18.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.ptg.Ptg[] getTokens()>();

        i3 = 0;

     label3:
        $i4 = lengthof $r19;

        if i3 >= $i4 goto label5;

        if i3 <= 0 goto label4;

        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

     label4:
        $r20 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    Ptg[");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]=");

        $r24 = $r19[i3];

        $r22 = virtualinvoke $r24.<org.apache.poi.ss.formula.ptg.Ptg: java.lang.String toString()>();

        $r23 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $c2 = virtualinvoke $r24.<org.apache.poi.ss.formula.ptg.Ptg: char getRVAType()>();

        virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        i3 = i3 + 1;

        goto label3;

     label5:
        return;
    }

    public java.lang.Object clone()
    {
        short $s0;
        org.apache.poi.ss.formula.Formula $r2;
        org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue $r3;
        int $i1;
        org.apache.poi.hssf.record.FormulaRecord $r0, r1;
        double $d0;

        r1 := @this: org.apache.poi.hssf.record.FormulaRecord;

        $r0 = new org.apache.poi.hssf.record.FormulaRecord;

        specialinvoke $r0.<org.apache.poi.hssf.record.FormulaRecord: void <init>()>();

        virtualinvoke r1.<org.apache.poi.hssf.record.FormulaRecord: void copyBaseFields(org.apache.poi.hssf.record.CellRecord)>($r0);

        $d0 = r1.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value>;

        $r0.<org.apache.poi.hssf.record.FormulaRecord: double field_4_value> = $d0;

        $s0 = r1.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options>;

        $r0.<org.apache.poi.hssf.record.FormulaRecord: short field_5_options> = $s0;

        $i1 = r1.<org.apache.poi.hssf.record.FormulaRecord: int field_6_zero>;

        $r0.<org.apache.poi.hssf.record.FormulaRecord: int field_6_zero> = $i1;

        $r2 = r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr>;

        $r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula field_8_parsed_expr> = $r2;

        $r3 = r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue>;

        $r0.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.hssf.record.FormulaRecord$SpecialCachedValue specialCachedValue> = $r3;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.poi.util.BitField $r0, $r1, $r2;

        <org.apache.poi.hssf.record.FormulaRecord: short sid> = 6;

        <org.apache.poi.hssf.record.FormulaRecord: int FIXED_SIZE> = 14;

        $r0 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(1);

        <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField alwaysCalc> = $r0;

        $r1 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(2);

        <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField calcOnLoad> = $r1;

        $r2 = staticinvoke <org.apache.poi.util.BitFieldFactory: org.apache.poi.util.BitField getInstance(int)>(8);

        <org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.util.BitField sharedFormula> = $r2;

        return;
    }
}
