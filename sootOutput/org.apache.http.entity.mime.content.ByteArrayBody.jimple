public class org.apache.http.entity.mime.content.ByteArrayBody extends org.apache.http.entity.mime.content.AbstractContentBody
{
    private final byte[] data;
    private final java.lang.String filename;

    public void <init>(byte[], java.lang.String, java.lang.String)
    {
        byte[] r2;
        org.apache.http.entity.mime.content.ByteArrayBody r0;
        java.lang.String r1, r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        r2 := @parameter0: byte[];

        r1 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.http.entity.mime.content.AbstractContentBody: void <init>(java.lang.String)>(r1);

        if r2 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("byte[] may not be null");

        throw $r4;

     label1:
        r0.<org.apache.http.entity.mime.content.ByteArrayBody: byte[] data> = r2;

        r0.<org.apache.http.entity.mime.content.ByteArrayBody: java.lang.String filename> = r3;

        return;
    }

    public void <init>(byte[], java.lang.String)
    {
        org.apache.http.entity.mime.content.ByteArrayBody r0;
        byte[] r1;
        java.lang.String r2;

        r0 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.http.entity.mime.content.ByteArrayBody: void <init>(byte[],java.lang.String,java.lang.String)>(r1, "application/octet-stream", r2);

        return;
    }

    public java.lang.String getFilename()
    {
        org.apache.http.entity.mime.content.ByteArrayBody r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        $r1 = r0.<org.apache.http.entity.mime.content.ByteArrayBody: java.lang.String filename>;

        return $r1;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        org.apache.http.entity.mime.content.ByteArrayBody r1;
        byte[] $r2;

        r1 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.http.entity.mime.content.ByteArrayBody: byte[] data>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    public java.lang.String getCharset()
    {
        org.apache.http.entity.mime.content.ByteArrayBody r0;

        r0 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        return null;
    }

    public java.lang.String getTransferEncoding()
    {
        org.apache.http.entity.mime.content.ByteArrayBody r0;

        r0 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        return "binary";
    }

    public long getContentLength()
    {
        byte[] $r1;
        org.apache.http.entity.mime.content.ByteArrayBody r0;
        int $i0;
        long $l1;

        r0 := @this: org.apache.http.entity.mime.content.ByteArrayBody;

        $r1 = r0.<org.apache.http.entity.mime.content.ByteArrayBody: byte[] data>;

        $i0 = lengthof $r1;

        $l1 = (long) $i0;

        return $l1;
    }
}
