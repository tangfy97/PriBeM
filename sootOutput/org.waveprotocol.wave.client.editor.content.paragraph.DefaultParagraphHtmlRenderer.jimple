public class org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer extends java.lang.Object implements org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHtmlRenderer
{
    private static final java.lang.String NUMBERED_CLASSNAME;
    private static final java.lang.String[] BULLET_CLASSNAMES;
    public static final double MAX_HEADING_SIZE_EM;
    public static final double MIN_HEADING_SIZE_EM;
    public static final java.lang.String PARAGRAPH_IMPL_TAGNAME;
    public static final java.lang.String LIST_IMPL_TAGNAME;
    private final java.lang.String implTagName;
    static final boolean $assertionsDisabled;

    private static java.lang.String bulletClassName(int)
    {
        int i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r1;

        i0 := @parameter0: int;

        $r0 = <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String[] BULLET_CLASSNAMES>;

        $i1 = i0 % 3;

        $r1 = $r0[$i1];

        return $r1;
    }

    public void <init>()
    {
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: void <init>(java.lang.String)>("div");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String implTagName> = r1;

        return;
    }

    public com.google.gwt.dom.client.Element createDomImpl(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r1;
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r0;
        java.lang.AssertionError $r6;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r3;
        com.google.gwt.dom.client.Element $r2, $r4;
        com.google.gwt.dom.client.Node $r5;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: com.google.gwt.dom.client.Element createNodelet(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)>(r1);

        $z0 = <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r5 = virtualinvoke $r2.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Node getFirstChild()>();

        if $r5 == null goto label1;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("was not given an empty nodelet");

        throw $r6;

     label1:
        $r3 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE>;

        virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: void onEmpty(com.google.gwt.dom.client.Element)>($r2);

        $r4 = interfaceinvoke r1.<org.waveprotocol.wave.client.editor.content.Renderer$Renderable: com.google.gwt.dom.client.Element setAutoAppendContainer(com.google.gwt.dom.client.Element)>($r2);

        return $r4;
    }

    public void updateRendering(org.waveprotocol.wave.client.editor.content.HasImplNodelets, java.lang.String, java.lang.String, int, org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Alignment, org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Direction)
    {
        com.google.gwt.dom.client.Style$Unit $r12, $r13, $r16;
        com.google.gwt.dom.client.Style $r28;
        byte $b7;
        int[] $r6;
        boolean $z0, $z1, $z3, $z4;
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r21;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour $r3, $r4, $r8;
        org.waveprotocol.wave.client.editor.content.HasImplNodelets r0;
        com.google.gwt.dom.client.Element $r1, $r22, r25;
        java.lang.String[] $r27;
        int $i0, $i1, $i2, i3, $i4, i5, $i6;
        org.waveprotocol.wave.client.editor.content.ContentElement $r23;
        java.lang.String r2, $r5, $r7, $r14, $r15, r17, $r18, r19, $r20;
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Direction r10, $r11;
        com.google.gwt.dom.client.Style$FontWeight r26;
        double $d0, $d1, $d2, $d3, $d4, d5, d6, d7;
        org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper $r24;
        org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Alignment r9;

        r21 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.HasImplNodelets;

        r2 := @parameter1: java.lang.String;

        r17 := @parameter2: java.lang.String;

        i3 := @parameter3: int;

        r9 := @parameter4: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Alignment;

        r10 := @parameter5: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Direction;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.client.editor.content.HasImplNodelets: com.google.gwt.dom.client.Element getImplNodelet()>();

        r25 = $r1;

        $r3 = staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour of(java.lang.String)>(r2);

        $r4 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour LIST>;

        if $r3 != $r4 goto label01;

        $z4 = 1;

        $z3 = 1;

        goto label02;

     label01:
        $z4 = 0;

        $z3 = 0;

     label02:
        $r5 = virtualinvoke $r1.<com.google.gwt.dom.client.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("li");

        if $z0 == $z3 goto label03;

        $r22 = specialinvoke r21.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: com.google.gwt.dom.client.Element createNodeletInner(boolean)>($z4);

        staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: void replaceElement(com.google.gwt.dom.client.Element,com.google.gwt.dom.client.Element)>($r1, $r22);

        interfaceinvoke r0.<org.waveprotocol.wave.client.editor.content.HasImplNodelets: void setBothNodelets(com.google.gwt.dom.client.Element)>($r22);

        $r24 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper INSTANCE>;

        $r23 = (org.waveprotocol.wave.client.editor.content.ContentElement) r0;

        virtualinvoke $r24.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphHelper: void onRepair(org.waveprotocol.wave.client.editor.content.ContentElement)>($r23);

        r25 = $r22;

     label03:
        d5 = -1.0;

        r26 = null;

        virtualinvoke r25.<com.google.gwt.dom.client.Element: void removeClassName(java.lang.String)>("numbered");

        $r6 = <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer$1: int[] $SwitchMap$org$waveprotocol$wave$client$editor$content$paragraph$ParagraphBehaviour>;

        $i0 = virtualinvoke $r3.<org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour: int ordinal()>();

        $i1 = $r6[$i0];

        lookupswitch($i1)
        {
            case 1: goto label04;
            case 2: goto label05;
            default: goto label06;
        };

     label04:
        $r20 = "decimal";

        $z1 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>(r17);

        if $z1 == 0 goto label06;

        virtualinvoke r25.<com.google.gwt.dom.client.Element: void addClassName(java.lang.String)>("numbered");

        goto label06;

     label05:
        r26 = <com.google.gwt.dom.client.Style$FontWeight: com.google.gwt.dom.client.Style$FontWeight BOLD>;

        $r7 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r7);

        d6 = (double) $i2;

        $d0 = d6 - 1.0;

        $d1 = $d0 / 3.0;

        d7 = 1.0 - $d1;

        $d2 = d7 * 0.75;

        d5 = 1.0 + $d2;

     label06:
        $r27 = <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String[] BULLET_CLASSNAMES>;

        $i4 = lengthof $r27;

        i5 = 0;

     label07:
        if i5 >= $i4 goto label08;

        r19 = $r27[i5];

        virtualinvoke r25.<com.google.gwt.dom.client.Element: void removeClassName(java.lang.String)>(r19);

        i5 = i5 + 1;

        goto label07;

     label08:
        $r8 = <org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour: org.waveprotocol.wave.client.editor.content.paragraph.ParagraphBehaviour LIST>;

        if $r3 != $r8 goto label10;

        if r17 != null goto label09;

        $r18 = staticinvoke <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String bulletClassName(int)>(i3);

        virtualinvoke r25.<com.google.gwt.dom.client.Element: void addClassName(java.lang.String)>($r18);

     label09:
        i3 = i3 + 1;

     label10:
        $i6 = i3 * 22;

        $r28 = virtualinvoke r25.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Style getStyle()>();

        $b7 = d5 cmpl -1.0;

        if $b7 == 0 goto label11;

        $r16 = <com.google.gwt.dom.client.Style$Unit: com.google.gwt.dom.client.Style$Unit EM>;

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void setFontSize(double,com.google.gwt.dom.client.Style$Unit)>(d5, $r16);

        goto label12;

     label11:
        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearFontSize()>();

     label12:
        if r26 == null goto label13;

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void setFontWeight(com.google.gwt.dom.client.Style$FontWeight)>(r26);

        goto label14;

     label13:
        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearFontWeight()>();

     label14:
        if r9 == null goto label15;

        $r15 = virtualinvoke r9.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Alignment: java.lang.String cssValue()>();

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void setProperty(java.lang.String,java.lang.String)>("textAlign", $r15);

        goto label16;

     label15:
        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearProperty(java.lang.String)>("textAlign");

     label16:
        if r10 == null goto label17;

        $r14 = virtualinvoke r10.<org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Direction: java.lang.String cssValue()>();

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void setProperty(java.lang.String,java.lang.String)>("direction", $r14);

        goto label18;

     label17:
        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearProperty(java.lang.String)>("direction");

     label18:
        if $i6 != 0 goto label19;

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearMarginLeft()>();

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearMarginRight()>();

        goto label21;

     label19:
        $r11 = <org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Direction: org.waveprotocol.wave.client.editor.content.paragraph.Paragraph$Direction RTL>;

        if r10 != $r11 goto label20;

        $d4 = (double) $i6;

        $r13 = <com.google.gwt.dom.client.Style$Unit: com.google.gwt.dom.client.Style$Unit PX>;

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void setMarginRight(double,com.google.gwt.dom.client.Style$Unit)>($d4, $r13);

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearMarginLeft()>();

        goto label21;

     label20:
        $d3 = (double) $i6;

        $r12 = <com.google.gwt.dom.client.Style$Unit: com.google.gwt.dom.client.Style$Unit PX>;

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void setMarginLeft(double,com.google.gwt.dom.client.Style$Unit)>($d3, $r12);

        virtualinvoke $r28.<com.google.gwt.dom.client.Style: void clearMarginRight()>();

     label21:
        return;
    }

    public void updateListValue(org.waveprotocol.wave.client.editor.content.HasImplNodelets, int)
    {
        org.waveprotocol.wave.client.editor.content.HasImplNodelets r0;
        com.google.gwt.dom.client.Element $r1;
        int i0;
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r3;
        java.lang.String $r2;

        r3 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.HasImplNodelets;

        i0 := @parameter1: int;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.client.editor.content.HasImplNodelets: com.google.gwt.dom.client.Element getImplNodelet()>();

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0);

        virtualinvoke $r1.<com.google.gwt.dom.client.Element: void setAttribute(java.lang.String,java.lang.String)>("value", $r2);

        return;
    }

    protected com.google.gwt.dom.client.Element createNodelet(org.waveprotocol.wave.client.editor.content.Renderer$Renderable)
    {
        com.google.gwt.dom.client.Element $r1;
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r0;
        org.waveprotocol.wave.client.editor.content.Renderer$Renderable r2;

        r0 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        r2 := @parameter0: org.waveprotocol.wave.client.editor.content.Renderer$Renderable;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: com.google.gwt.dom.client.Element createNodeletInner(boolean)>(0);

        return $r1;
    }

    private com.google.gwt.dom.client.Element createNodeletInner(boolean)
    {
        com.google.gwt.dom.client.Element $r2;
        org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer r1;
        java.lang.String $r3;
        com.google.gwt.dom.client.Document $r0;
        boolean z0;

        r1 := @this: org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer;

        z0 := @parameter0: boolean;

        $r0 = staticinvoke <com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Document get()>();

        if z0 == 0 goto label1;

        $r3 = "li";

        goto label2;

     label1:
        $r3 = r1.<org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String implTagName>;

     label2:
        $r2 = virtualinvoke $r0.<com.google.gwt.dom.client.Document: com.google.gwt.dom.client.Element createElement(java.lang.String)>($r3);

        return $r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String[] $r1;
        boolean $z0, $z1;

        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String LIST_IMPL_TAGNAME> = "li";

        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String PARAGRAPH_IMPL_TAGNAME> = "div";

        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: double MIN_HEADING_SIZE_EM> = 1.0;

        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: double MAX_HEADING_SIZE_EM> = 1.75;

        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String NUMBERED_CLASSNAME> = "numbered";

        $r0 = class "Lorg/waveprotocol/wave/client/editor/content/paragraph/DefaultParagraphHtmlRenderer;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: boolean $assertionsDisabled> = $z1;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = "bullet-type-0";

        $r1[1] = "bullet-type-1";

        $r1[2] = "bullet-type-2";

        <org.waveprotocol.wave.client.editor.content.paragraph.DefaultParagraphHtmlRenderer: java.lang.String[] BULLET_CLASSNAMES> = $r1;

        return;
    }
}
