public class org.apache.poi.ss.formula.functions.IPMT extends org.apache.poi.ss.formula.functions.NumericFunction
{

    public void <init>()
    {
        org.apache.poi.ss.formula.functions.IPMT r0;

        r0 := @this: org.apache.poi.ss.formula.functions.IPMT;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.NumericFunction: void <init>()>();

        return;
    }

    public double eval(org.apache.poi.ss.formula.eval.ValueEval[], int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r10;
        org.apache.poi.ss.formula.eval.ValueEval[] r0;
        org.apache.poi.ss.formula.functions.IPMT r11;
        int $i0, i1, i2, $i3, $i4;
        org.apache.poi.ss.formula.eval.EvaluationException $r9;
        double $d0, $d1, $d2;
        org.apache.poi.ss.formula.eval.ValueEval $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r11 := @this: org.apache.poi.ss.formula.functions.IPMT;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        $i0 = lengthof r0;

        if $i0 == 4 goto label1;

        $r9 = new org.apache.poi.ss.formula.eval.EvaluationException;

        $r10 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval VALUE_INVALID>;

        specialinvoke $r9.<org.apache.poi.ss.formula.eval.EvaluationException: void <init>(org.apache.poi.ss.formula.eval.ErrorEval)>($r10);

        throw $r9;

     label1:
        $r1 = r0[0];

        $r2 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r1, i1, i2);

        $r3 = r0[1];

        $r4 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r3, i1, i2);

        $r5 = r0[2];

        $r6 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r5, i1, i2);

        $r7 = r0[3];

        $r8 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>($r7, i1, i2);

        $d0 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: double coerceValueToDouble(org.apache.poi.ss.formula.eval.ValueEval)>($r2);

        $i3 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: int coerceValueToInt(org.apache.poi.ss.formula.eval.ValueEval)>($r4);

        $i4 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: int coerceValueToInt(org.apache.poi.ss.formula.eval.ValueEval)>($r6);

        $d1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: double coerceValueToDouble(org.apache.poi.ss.formula.eval.ValueEval)>($r8);

        $d2 = staticinvoke <org.apache.poi.ss.formula.functions.Finance: double ipmt(double,int,int,double)>($d0, $i3, $i4, $d1);

        staticinvoke <org.apache.poi.ss.formula.functions.IPMT: void checkValue(double)>($d2);

        return $d2;
    }
}
