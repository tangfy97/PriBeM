public class org.apache.geronimo.osgi.locator.ProviderLocator extends java.lang.Object
{
    private static org.osgi.framework.BundleContext context;
    private static java.lang.Object registryTracker;

    private void <init>()
    {
        org.apache.geronimo.osgi.locator.ProviderLocator r0;

        r0 := @this: org.apache.geronimo.osgi.locator.ProviderLocator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void init(org.osgi.framework.BundleContext)
    {
        java.lang.Throwable $r4;
        org.osgi.util.tracker.ServiceTracker $r0, $r3;
        java.lang.Object $r2;
        org.osgi.framework.BundleContext r1;

        r1 := @parameter0: org.osgi.framework.BundleContext;

     label1:
        $r0 = new org.osgi.util.tracker.ServiceTracker;

        specialinvoke $r0.<org.osgi.util.tracker.ServiceTracker: void <init>(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTrackerCustomizer)>(r1, "org.apache.geronimo.osgi.registry.api.ProviderRegistry", null);

        <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker> = $r0;

        $r2 = <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker>;

        $r3 = (org.osgi.util.tracker.ServiceTracker) $r2;

        virtualinvoke $r3.<org.osgi.util.tracker.ServiceTracker: void open()>();

        <org.apache.geronimo.osgi.locator.ProviderLocator: org.osgi.framework.BundleContext context> = r1;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker> = null;

     label4:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
    }

    public static void destroy()
    {
        org.osgi.util.tracker.ServiceTracker $r2;
        java.lang.Object $r0, $r1;

        $r0 = <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker>;

        if $r0 == null goto label1;

        $r1 = <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker>;

        $r2 = (org.osgi.util.tracker.ServiceTracker) $r1;

        virtualinvoke $r2.<org.osgi.util.tracker.ServiceTracker: void close()>();

        <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker> = null;

     label1:
        return;
    }

    public static java.lang.Class locate(java.lang.String)
    {
        org.apache.geronimo.osgi.registry.api.ProviderRegistry $r2;
        java.lang.Object $r0;
        java.lang.Class $r3;
        java.lang.String r1;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object getRegistry()>();

        if $r0 != null goto label1;

        return null;

     label1:
        $r2 = (org.apache.geronimo.osgi.registry.api.ProviderRegistry) $r0;

        $r3 = interfaceinvoke $r2.<org.apache.geronimo.osgi.registry.api.ProviderRegistry: java.lang.Class locate(java.lang.String)>(r1);

        return $r3;
    }

    public static java.util.List locateAll(java.lang.String)
    {
        java.util.List $r3;
        org.apache.geronimo.osgi.registry.api.ProviderRegistry $r2;
        java.lang.Object $r0;
        java.lang.String r1;
        java.util.ArrayList $r4;

        r1 := @parameter0: java.lang.String;

        $r0 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object getRegistry()>();

        if $r0 != null goto label1;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        return $r4;

     label1:
        $r2 = (org.apache.geronimo.osgi.registry.api.ProviderRegistry) $r0;

        $r3 = interfaceinvoke $r2.<org.apache.geronimo.osgi.registry.api.ProviderRegistry: java.util.List locateAll(java.lang.String)>(r1);

        return $r3;
    }

    public static java.lang.Class loadClass(java.lang.String) throws java.lang.ClassNotFoundException
    {
        java.lang.Thread $r1;
        java.lang.Class $r3;
        java.lang.String r0;
        java.lang.ClassLoader $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r2 = virtualinvoke $r1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r3 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r0, null, $r2);

        return $r3;
    }

    public static java.lang.Class loadClass(java.lang.String, java.lang.Class) throws java.lang.ClassNotFoundException
    {
        java.lang.Thread $r2;
        java.lang.Class r1, $r4;
        java.lang.String r0;
        java.lang.ClassLoader $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r3 = virtualinvoke $r2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r4 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r0, r1, $r3);

        return $r4;
    }

    public static java.lang.Class loadClass(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        java.lang.Class $r1, r2, $r3, $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.String r0;
        java.lang.ClassLoader r6;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r6 := @parameter2: java.lang.ClassLoader;

        $r1 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class locate(java.lang.String)>(r0);

        if $r1 == null goto label1;

        return $r1;

     label1:
        if r6 == null goto label5;

     label2:
        $r4 = virtualinvoke r6.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r0);

     label3:
        return $r4;

     label4:
        $r5 := @caughtexception;

     label5:
        if r2 == null goto label6;

        r6 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label6:
        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r0, 1, r6);

        return $r3;

        catch java.lang.ClassNotFoundException from label2 to label3 with label4;
    }

    public static java.lang.Object getService(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.Exception
    {
        org.apache.geronimo.osgi.registry.api.ProviderRegistry $r6;
        java.lang.Object $r0, $r5, $r7;
        java.lang.Class r2, $r4;
        java.lang.String r1;
        java.lang.ClassLoader r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.ClassLoader;

        $r0 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object getRegistry()>();

        if $r0 == null goto label1;

        $r6 = (org.apache.geronimo.osgi.registry.api.ProviderRegistry) $r0;

        $r7 = interfaceinvoke $r6.<org.apache.geronimo.osgi.registry.api.ProviderRegistry: java.lang.Object getService(java.lang.String)>(r1);

        if $r7 == null goto label1;

        return $r7;

     label1:
        $r4 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class locateServiceClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r1, r2, r3);

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        return $r5;

     label2:
        return null;
    }

    public static java.lang.Class getServiceClass(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        org.apache.geronimo.osgi.registry.api.ProviderRegistry $r5;
        java.lang.Object $r0;
        java.lang.Class r2, $r4, $r6;
        java.lang.String r1;
        java.lang.ClassLoader r3;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.ClassLoader;

        $r0 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object getRegistry()>();

        if $r0 == null goto label1;

        $r5 = (org.apache.geronimo.osgi.registry.api.ProviderRegistry) $r0;

        $r6 = interfaceinvoke $r5.<org.apache.geronimo.osgi.registry.api.ProviderRegistry: java.lang.Class getServiceClass(java.lang.String)>(r1);

        if $r6 == null goto label1;

        return $r6;

     label1:
        $r4 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class locateServiceClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r1, r2, r3);

        return $r4;
    }

    public static java.util.List getServices(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.Exception
    {
        java.util.Iterator $r5;
        java.util.Collection $r11;
        java.util.ArrayList $r0;
        java.util.List $r10;
        org.apache.geronimo.osgi.registry.api.ProviderRegistry $r9;
        java.lang.Object $r1, $r6, $r8;
        java.lang.Class r3, r7;
        java.lang.String r2;
        java.lang.ClassLoader r4;
        boolean $z0;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.ClassLoader;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object getRegistry()>();

        if $r1 == null goto label1;

        $r9 = (org.apache.geronimo.osgi.registry.api.ProviderRegistry) $r1;

        $r10 = interfaceinvoke $r9.<org.apache.geronimo.osgi.registry.api.ProviderRegistry: java.util.List getServices(java.lang.String)>(r2);

        if $r10 == null goto label1;

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r10);

     label1:
        $r11 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.util.Collection locateServiceClasses(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r2, r3, r4);

        if $r11 == null goto label3;

        $r5 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Class) $r6;

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.Object newInstance()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

        goto label2;

     label3:
        return $r0;
    }

    public static java.util.List getServiceClasses(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.Exception
    {
        java.util.Collection $r8;
        java.util.ArrayList $r5;
        java.util.List $r7;
        org.apache.geronimo.osgi.registry.api.ProviderRegistry $r6;
        java.lang.Object $r1;
        java.lang.Class r3;
        java.lang.String r2;
        java.lang.ClassLoader r4;
        java.util.LinkedHashSet $r0;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.ClassLoader;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r1 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object getRegistry()>();

        if $r1 == null goto label1;

        $r6 = (org.apache.geronimo.osgi.registry.api.ProviderRegistry) $r1;

        $r7 = interfaceinvoke $r6.<org.apache.geronimo.osgi.registry.api.ProviderRegistry: java.util.List getServiceClasses(java.lang.String)>(r2);

        if $r7 == null goto label1;

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r7);

     label1:
        $r8 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.util.Collection locateServiceClasses(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r2, r3, r4);

        if $r8 == null goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

     label2:
        $r5 = new java.util.ArrayList;

        specialinvoke $r5.<java.util.ArrayList: void <init>(java.util.Collection)>($r0);

        return $r5;
    }

    private static java.lang.String locateServiceClassName(java.lang.String, java.lang.Class, java.lang.ClassLoader)
    {
        java.lang.Class r3;
        java.lang.String r0, $r2, $r5;
        java.lang.ClassLoader r1, $r4;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.ClassLoader;

        $r2 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.String locateServiceClassName(java.lang.String,java.lang.ClassLoader)>(r0, r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        if r3 == null goto label2;

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r5 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.String locateServiceClassName(java.lang.String,java.lang.ClassLoader)>(r0, $r4);

        if $r5 == null goto label2;

        return $r5;

     label2:
        return null;
    }

    private static java.lang.String locateServiceClassName(java.lang.String, java.lang.ClassLoader)
    {
        java.util.Enumeration $r6;
        java.net.URL $r8;
        java.io.IOException $r12;
        java.util.List $r9;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object $r7, $r10;
        java.lang.ClassLoader r0;
        java.lang.String r3, $r5, $r11;
        boolean $z0, $z1;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.ClassLoader;

        if r0 == null goto label7;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r5);

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = (java.net.URL) $r7;

        $r9 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.util.List parseServiceDefinition(java.net.URL)>($r8);

        $z1 = interfaceinvoke $r9.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label4;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r10;

     label3:
        return $r11;

     label4:
        goto label2;

     label5:
        goto label7;

     label6:
        $r12 := @caughtexception;

     label7:
        return null;

        catch java.io.IOException from label1 to label3 with label6;
        catch java.io.IOException from label4 to label5 with label6;
    }

    private static java.lang.Class locateServiceClass(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        java.lang.Class r1, $r4;
        java.lang.String r0, $r3;
        java.lang.ClassLoader r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.ClassLoader;

        $r3 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.String locateServiceClassName(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r0, r1, r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>($r3, r1, r2);

        return $r4;
    }

    private static java.util.Collection locateServiceClassNames(java.lang.String, java.lang.Class, java.lang.ClassLoader)
    {
        java.lang.Class r3;
        java.lang.String r1;
        java.lang.ClassLoader r2, $r4;
        java.util.LinkedHashSet $r0;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.ClassLoader;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: void locateServiceClassNames(java.lang.String,java.lang.ClassLoader,java.util.Set)>(r1, r2, $r0);

        if r3 == null goto label1;

        $r4 = virtualinvoke r3.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: void locateServiceClassNames(java.lang.String,java.lang.ClassLoader,java.util.Set)>(r1, $r4, $r0);

     label1:
        return $r0;
    }

    static void locateServiceClassNames(java.lang.String, java.lang.ClassLoader, java.util.Set)
    {
        java.util.Enumeration $r6;
        java.net.URL $r8;
        java.util.Set r10;
        java.io.IOException $r11;
        java.util.List $r9;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.Object $r7;
        java.lang.ClassLoader r0;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.ClassLoader;

        r10 := @parameter2: java.util.Set;

        if r0 == null goto label5;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("META-INF/services/");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>($r5);

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r8 = (java.net.URL) $r7;

        $r9 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.util.List parseServiceDefinition(java.net.URL)>($r8);

        interfaceinvoke r10.<java.util.Set: boolean addAll(java.util.Collection)>($r9);

        goto label2;

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

     label5:
        return;

        catch java.io.IOException from label1 to label3 with label4;
    }

    private static java.util.Collection locateServiceClasses(java.lang.String, java.lang.Class, java.lang.ClassLoader) throws java.lang.ClassNotFoundException
    {
        java.util.Iterator $r5;
        java.util.Collection $r3;
        java.lang.Class r1, $r8;
        java.lang.Object $r6;
        java.lang.String r0, r7;
        java.lang.ClassLoader r2;
        java.util.LinkedHashSet $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.ClassLoader;

        $r3 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.util.Collection locateServiceClassNames(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r0, r1, r2);

        $r4 = new java.util.LinkedHashSet;

        specialinvoke $r4.<java.util.LinkedHashSet: void <init>()>();

        $r5 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r8 = staticinvoke <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Class loadClass(java.lang.String,java.lang.Class,java.lang.ClassLoader)>(r7, r1, r2);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r8);

        goto label1;

     label2:
        return $r4;
    }

    private static java.util.List parseServiceDefinition(java.net.URL)
    {
        java.net.URL r0;
        java.io.IOException $r7;
        java.io.InputStreamReader $r10;
        java.util.ArrayList $r9;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String $r1, $r6, r8;
        java.io.BufferedReader $r11;
        boolean $z0;
        java.io.InputStream $r5;

        r0 := @parameter0: java.net.URL;

        $r1 = virtualinvoke r0.<java.net.URL: java.lang.String toString()>();

        $r9 = new java.util.ArrayList;

        specialinvoke $r9.<java.util.ArrayList: void <init>()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z0 == 0 goto label1;

        return $r9;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>("/");

        $i1 = $i0 + 1;

        virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i1);

     label2:
        $r11 = new java.io.BufferedReader;

        $r10 = new java.io.InputStreamReader;

        $r5 = virtualinvoke r0.<java.net.URL: java.io.InputStream openStream()>();

        specialinvoke $r10.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r5, "UTF-8");

        specialinvoke $r11.<java.io.BufferedReader: void <init>(java.io.Reader)>($r10);

        r8 = virtualinvoke $r11.<java.io.BufferedReader: java.lang.String readLine()>();

     label3:
        if r8 == null goto label6;

        $i2 = virtualinvoke r8.<java.lang.String: int indexOf(int)>(35);

        $i5 = (int) -1;

        if $i2 == $i5 goto label4;

        r8 = virtualinvoke r8.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

     label4:
        $r6 = virtualinvoke r8.<java.lang.String: java.lang.String trim()>();

        $i3 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i3 <= 0 goto label5;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r6);

     label5:
        r8 = virtualinvoke $r11.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label3;

     label6:
        virtualinvoke $r11.<java.io.BufferedReader: void close()>();

     label7:
        goto label9;

     label8:
        $r7 := @caughtexception;

     label9:
        return $r9;

        catch java.io.IOException from label2 to label7 with label8;
    }

    public static java.lang.String lookupByJREPropertyFile(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r14;
        java.lang.String $r0, $r4, r6, $r8, r11, $r12;
        boolean $z0, $z1;
        java.util.Properties $r9;
        java.io.FileInputStream $r10, r16;
        java.io.File $r1;
        java.lang.Exception $r13, $r15;
        java.lang.StringBuilder $r2, $r3, $r5, $r7;

        r6 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");

        $r1 = new java.io.File;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        $r4 = <java.io.File: java.lang.String separator>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>($r8);

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label13;

        $z1 = virtualinvoke $r1.<java.io.File: boolean canRead()>();

        if $z1 == 0 goto label13;

        $r9 = new java.util.Properties;

        specialinvoke $r9.<java.util.Properties: void <init>()>();

        r16 = null;

     label01:
        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>($r1);

        r16 = $r10;

        virtualinvoke $r9.<java.util.Properties: void load(java.io.InputStream)>($r10);

        $r12 = virtualinvoke $r9.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r11);

     label02:
        if $r10 == null goto label06;

     label03:
        virtualinvoke $r10.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r15 := @caughtexception;

     label06:
        return $r12;

     label07:
        $r14 := @caughtexception;

     label08:
        if r16 == null goto label12;

     label09:
        virtualinvoke r16.<java.io.InputStream: void close()>();

     label10:
        goto label12;

     label11:
        $r13 := @caughtexception;

     label12:
        throw $r14;

     label13:
        return null;

        catch java.lang.Exception from label03 to label04 with label05;
        catch java.lang.Throwable from label01 to label02 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private static java.lang.Object getRegistry()
    {
        org.osgi.util.tracker.ServiceTracker $r2;
        java.lang.Object $r0, $r1, $r3;

        $r0 = <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker>;

        if $r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.geronimo.osgi.locator.ProviderLocator: java.lang.Object registryTracker>;

        $r2 = (org.osgi.util.tracker.ServiceTracker) $r1;

        $r3 = virtualinvoke $r2.<org.osgi.util.tracker.ServiceTracker: java.lang.Object getService()>();

        return $r3;
    }
}
