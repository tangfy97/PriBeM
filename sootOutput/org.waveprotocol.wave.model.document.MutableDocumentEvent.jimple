public class org.waveprotocol.wave.model.document.MutableDocumentEvent extends java.lang.Object
{
    private final org.waveprotocol.wave.model.document.Document document;
    private final org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle events;

    public void <init>(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle)
    {
        org.waveprotocol.wave.model.document.MutableDocumentEvent r0;
        org.waveprotocol.wave.model.document.Document r1;
        org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle r2;

        r0 := @this: org.waveprotocol.wave.model.document.MutableDocumentEvent;

        r1 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r2 := @parameter1: org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.MutableDocumentEvent: org.waveprotocol.wave.model.document.Document document> = r1;

        r0.<org.waveprotocol.wave.model.document.MutableDocumentEvent: org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle events> = r2;

        return;
    }

    public org.waveprotocol.wave.model.document.Document getDocument()
    {
        org.waveprotocol.wave.model.document.MutableDocumentEvent r0;
        org.waveprotocol.wave.model.document.Document $r1;

        r0 := @this: org.waveprotocol.wave.model.document.MutableDocumentEvent;

        $r1 = r0.<org.waveprotocol.wave.model.document.MutableDocumentEvent: org.waveprotocol.wave.model.document.Document document>;

        return $r1;
    }

    public org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle getEvents()
    {
        org.waveprotocol.wave.model.document.MutableDocumentEvent r0;
        org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle $r1;

        r0 := @this: org.waveprotocol.wave.model.document.MutableDocumentEvent;

        $r1 = r0.<org.waveprotocol.wave.model.document.MutableDocumentEvent: org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle events>;

        return $r1;
    }
}
