public abstract class org.tukaani.xz.SeekableInputStream extends java.io.InputStream
{

    public void <init>()
    {
        org.tukaani.xz.SeekableInputStream r0;

        r0 := @this: org.tukaani.xz.SeekableInputStream;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        return;
    }

    public long skip(long) throws java.io.IOException
    {
        org.tukaani.xz.SeekableInputStream r0;
        long $l1, $l2, $l4, $l6, l7;
        byte $b0, $b3, $b5;
        int $i8, $i9, $i10;

        r0 := @this: org.tukaani.xz.SeekableInputStream;

        l7 := @parameter0: long;

        $b0 = l7 cmp 0L;

        $i8 = (int) $b0;

        if $i8 > 0 goto label1;

        return 0L;

     label1:
        $l1 = virtualinvoke r0.<org.tukaani.xz.SeekableInputStream: long length()>();

        $l2 = virtualinvoke r0.<org.tukaani.xz.SeekableInputStream: long position()>();

        $b3 = $l2 cmp $l1;

        $i9 = (int) $b3;

        if $i9 < 0 goto label2;

        return 0L;

     label2:
        $l4 = $l1 - $l2;

        $b5 = $l4 cmp l7;

        $i10 = (int) $b5;

        if $i10 >= 0 goto label3;

        l7 = $l1 - $l2;

     label3:
        $l6 = $l2 + l7;

        virtualinvoke r0.<org.tukaani.xz.SeekableInputStream: void seek(long)>($l6);

        return l7;
    }

    public abstract long length() throws java.io.IOException;

    public abstract long position() throws java.io.IOException;

    public abstract void seek(long) throws java.io.IOException;
}
