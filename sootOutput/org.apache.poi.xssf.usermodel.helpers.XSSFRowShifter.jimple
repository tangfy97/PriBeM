public final class org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter extends java.lang.Object
{
    private static org.apache.poi.util.POILogger logger;
    private final org.apache.poi.xssf.usermodel.XSSFSheet sheet;

    public void <init>(org.apache.poi.xssf.usermodel.XSSFSheet)
    {
        org.apache.poi.xssf.usermodel.XSSFSheet r1;
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet> = r1;

        return;
    }

    public java.util.List shiftMerged(int, int, int)
    {
        java.util.ArrayList $r0;
        int $i0, $i1, i2, $i3, i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, i14;
        boolean $z0, z1, $z2, $z3, $z4, $z5;
        org.apache.poi.ss.util.CellRangeAddress $r7, r9;
        java.util.Iterator $r3;
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r1;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2, $r5, $r6, $r8;
        java.lang.Object $r4;

        r1 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        i2 := @parameter0: int;

        i4 := @parameter1: int;

        i8 := @parameter2: int;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        i14 = 0;

     label01:
        $r2 = r1.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $i0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFSheet: int getNumMergedRegions()>();

        if i14 >= $i0 goto label10;

        $r6 = r1.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $r7 = virtualinvoke $r6.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.ss.util.CellRangeAddress getMergedRegion(int)>(i14);

        $i1 = virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        if $i1 >= i2 goto label02;

        $i13 = virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        if $i13 < i2 goto label03;

     label02:
        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        z1 = $z4;

        $i3 = virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        if $i3 <= i4 goto label05;

        $i12 = virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        if $i12 > i4 goto label06;

     label05:
        $z5 = 1;

        goto label07;

     label06:
        $z5 = 0;

     label07:
        if z1 == 0 goto label09;

        if $z5 != 0 goto label08;

        goto label09;

     label08:
        $i5 = i2 - 1;

        $z2 = staticinvoke <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: boolean containsCell(org.apache.poi.ss.util.CellRangeAddress,int,int)>($r7, $i5, 0);

        if $z2 != 0 goto label09;

        $i6 = i4 + 1;

        $z3 = staticinvoke <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: boolean containsCell(org.apache.poi.ss.util.CellRangeAddress,int,int)>($r7, $i6, 0);

        if $z3 != 0 goto label09;

        $i7 = virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i9 = $i7 + i8;

        virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: void setFirstRow(int)>($i9);

        $i10 = virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        $i11 = $i10 + i8;

        virtualinvoke $r7.<org.apache.poi.ss.util.CellRangeAddress: void setLastRow(int)>($i11);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r7);

        $r8 = r1.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        virtualinvoke $r8.<org.apache.poi.xssf.usermodel.XSSFSheet: void removeMergedRegion(int)>(i14);

        i14 = i14 - 1;

     label09:
        i14 = i14 + 1;

        goto label01;

     label10:
        $r3 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.poi.ss.util.CellRangeAddress) $r4;

        $r5 = r1.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFSheet: int addMergedRegion(org.apache.poi.ss.util.CellRangeAddress)>(r9);

        goto label11;

     label12:
        return $r0;
    }

    private static boolean containsCell(org.apache.poi.ss.util.CellRangeAddress, int, int)
    {
        org.apache.poi.ss.util.CellRangeAddress r0;
        int $i0, i1, $i2, $i3, i4, $i5;

        r0 := @parameter0: org.apache.poi.ss.util.CellRangeAddress;

        i1 := @parameter1: int;

        i4 := @parameter2: int;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        if $i0 > i1 goto label1;

        $i2 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        if $i2 < i1 goto label1;

        $i3 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        if $i3 > i4 goto label1;

        $i5 = virtualinvoke r0.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        if $i5 < i4 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void updateNamedRanges(org.apache.poi.ss.formula.FormulaShifter)
    {
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r0;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        org.apache.poi.xssf.usermodel.XSSFName $r4;
        org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook $r3;
        org.apache.poi.ss.formula.ptg.Ptg[] $r6;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        int $i0, $i1, i2;
        org.apache.poi.ss.formula.FormulaShifter r7;
        java.lang.String $r5, $r8;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        r7 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        $r1 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook: org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook create(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r2);

        i2 = 0;

     label1:
        $i0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: int getNumberOfNames()>();

        if i2 >= $i0 goto label3;

        $r4 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: org.apache.poi.xssf.usermodel.XSSFName getNameAt(int)>(i2);

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFName: java.lang.String getRefersToFormula()>();

        $i1 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFName: int getSheetIndex()>();

        $r6 = staticinvoke <org.apache.poi.ss.formula.FormulaParser: org.apache.poi.ss.formula.ptg.Ptg[] parse(java.lang.String,org.apache.poi.ss.formula.FormulaParsingWorkbook,int,int)>($r5, $r3, 4, $i1);

        $z0 = virtualinvoke r7.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r6, $i1);

        if $z0 == 0 goto label2;

        $r8 = staticinvoke <org.apache.poi.ss.formula.FormulaRenderer: java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook,org.apache.poi.ss.formula.ptg.Ptg[])>($r3, $r6);

        virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFName: void setRefersToFormula(java.lang.String)>($r8);

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void updateFormulas(org.apache.poi.ss.formula.FormulaShifter)
    {
        java.util.Iterator $r5;
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r0;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r4;
        org.apache.poi.xssf.usermodel.XSSFSheet $r2, $r3, r7, $r8;
        org.apache.poi.ss.formula.FormulaShifter r1;
        java.lang.Object $r6;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        r1 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        $r2 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: void updateSheetFormulas(org.apache.poi.xssf.usermodel.XSSFSheet,org.apache.poi.ss.formula.FormulaShifter)>($r2, r1);

        $r3 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $r4 = virtualinvoke $r3.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.xssf.usermodel.XSSFWorkbook: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.poi.xssf.usermodel.XSSFSheet) $r6;

        $r8 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        if $r8 != r7 goto label2;

        goto label1;

     label2:
        specialinvoke r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: void updateSheetFormulas(org.apache.poi.xssf.usermodel.XSSFSheet,org.apache.poi.ss.formula.FormulaShifter)>(r7, r1);

        goto label1;

     label3:
        return;
    }

    private void updateSheetFormulas(org.apache.poi.xssf.usermodel.XSSFSheet, org.apache.poi.ss.formula.FormulaShifter)
    {
        java.util.Iterator $r1;
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r5;
        org.apache.poi.xssf.usermodel.XSSFRow r4;
        org.apache.poi.xssf.usermodel.XSSFSheet r0;
        org.apache.poi.ss.usermodel.Row r3;
        java.lang.Object $r2;
        org.apache.poi.ss.formula.FormulaShifter r6;
        boolean $z0;

        r5 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        r0 := @parameter0: org.apache.poi.xssf.usermodel.XSSFSheet;

        r6 := @parameter1: org.apache.poi.ss.formula.FormulaShifter;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFSheet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.ss.usermodel.Row) $r2;

        r4 = (org.apache.poi.xssf.usermodel.XSSFRow) r3;

        specialinvoke r5.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: void updateRowFormulas(org.apache.poi.xssf.usermodel.XSSFRow,org.apache.poi.ss.formula.FormulaShifter)>(r4, r6);

        goto label1;

     label2:
        return;
    }

    private void updateRowFormulas(org.apache.poi.xssf.usermodel.XSSFRow, org.apache.poi.ss.formula.FormulaShifter)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell $r5;
        long $l1;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        org.apache.poi.ss.usermodel.Cell r3;
        int $i0, i2;
        org.apache.poi.ss.formula.FormulaShifter r9;
        java.lang.String $r7, $r8, $r10, $r11;
        boolean $z0, $z1, $z2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum $r12, $r13;
        java.util.Iterator $r1;
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r16;
        org.apache.poi.xssf.usermodel.XSSFSheet $r14;
        java.lang.Object $r2;
        org.apache.poi.xssf.usermodel.XSSFCell r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula $r6, $r15;

        r16 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        r0 := @parameter0: org.apache.poi.xssf.usermodel.XSSFRow;

        r9 := @parameter1: org.apache.poi.ss.formula.FormulaShifter;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.poi.ss.usermodel.Cell) $r2;

        r4 = (org.apache.poi.xssf.usermodel.XSSFCell) r3;

        $r5 = virtualinvoke r4.<org.apache.poi.xssf.usermodel.XSSFCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell getCTCell()>();

        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: boolean isSetF()>();

        if $z1 == 0 goto label3;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCell: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getF()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: java.lang.String getStringValue()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $r11 = staticinvoke <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: java.lang.String shiftFormula(org.apache.poi.xssf.usermodel.XSSFRow,java.lang.String,org.apache.poi.ss.formula.FormulaShifter)>(r0, $r7, r9);

        if $r11 == null goto label2;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setStringValue(java.lang.String)>($r11);

        $r12 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum getT()>();

        $r13 = <org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType: org.openxmlformats.schemas.spreadsheetml.x2006.main.STCellFormulaType$Enum SHARED>;

        if $r12 != $r13 goto label2;

        $l1 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: long getSi()>();

        i2 = (int) $l1;

        $r14 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r15 = virtualinvoke $r14.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula getSharedFormula(int)>(i2);

        interfaceinvoke $r15.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setStringValue(java.lang.String)>($r11);

     label2:
        $z2 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: boolean isSetRef()>();

        if $z2 == 0 goto label3;

        $r8 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: java.lang.String getRef()>();

        $r10 = staticinvoke <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: java.lang.String shiftFormula(org.apache.poi.xssf.usermodel.XSSFRow,java.lang.String,org.apache.poi.ss.formula.FormulaShifter)>(r0, $r8, r9);

        if $r10 == null goto label3;

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCellFormula: void setRef(java.lang.String)>($r10);

     label3:
        goto label1;

     label4:
        return;
    }

    private static java.lang.String shiftFormula(org.apache.poi.xssf.usermodel.XSSFRow, java.lang.String, org.apache.poi.ss.formula.FormulaShifter)
    {
        org.apache.poi.ss.formula.FormulaParseException $r7;
        org.apache.poi.util.POILogger $r8;
        java.lang.Integer $r9;
        org.apache.poi.xssf.usermodel.XSSFRow r0;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook $r3;
        org.apache.poi.ss.formula.ptg.Ptg[] $r5;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1;
        int $i0, $i1;
        org.apache.poi.ss.formula.FormulaShifter r6;
        java.lang.String r4, r10;
        boolean $z0;

        r0 := @parameter0: org.apache.poi.xssf.usermodel.XSSFRow;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: org.apache.poi.ss.formula.FormulaShifter;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: org.apache.poi.xssf.usermodel.XSSFSheet getSheet()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $i0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: int getSheetIndex(org.apache.poi.ss.usermodel.Sheet)>($r1);

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook: org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook create(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r2);

     label1:
        $r5 = staticinvoke <org.apache.poi.ss.formula.FormulaParser: org.apache.poi.ss.formula.ptg.Ptg[] parse(java.lang.String,org.apache.poi.ss.formula.FormulaParsingWorkbook,int,int)>(r4, $r3, 0, $i0);

        r10 = null;

        $z0 = virtualinvoke r6.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r5, $i0);

        if $z0 == 0 goto label2;

        r10 = staticinvoke <org.apache.poi.ss.formula.FormulaRenderer: java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook,org.apache.poi.ss.formula.ptg.Ptg[])>($r3, $r5);

     label2:
        return r10;

     label3:
        $r7 := @caughtexception;

        $r8 = <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.util.POILogger logger>;

        $i1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRow: int getRowNum()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i1);

        virtualinvoke $r8.<org.apache.poi.util.POILogger: void log(int,java.lang.Object,java.lang.Object,java.lang.Throwable)>(5, "Error shifting formula on row ", $r9, $r7);

        return r4;

        catch org.apache.poi.ss.formula.FormulaParseException from label1 to label2 with label3;
    }

    public void updateConditionalFormatting(org.apache.poi.ss.formula.FormulaShifter)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting r9;
        org.apache.poi.xssf.usermodel.XSSFWorkbook $r2;
        boolean $z0, $z1, $z2, z3, $z4;
        org.apache.poi.ss.util.CellRangeAddress $r28, $r33, r34, r35;
        java.util.List $r7, $r11, $r14, $r17;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet $r6;
        java.lang.String[] $r31;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule r36;
        java.util.ArrayList $r10, $r13, $r23;
        org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook $r4;
        org.apache.poi.ss.formula.ptg.Ptg[] $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9;
        org.apache.poi.ss.formula.FormulaShifter r21;
        java.lang.String r19, $r22, $r26, $r30, $r32;
        java.util.Iterator $r12, $r15, $r24;
        org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter r0;
        org.apache.poi.xssf.usermodel.XSSFSheet $r1, $r3, $r5;
        java.lang.Object $r8, $r16, $r18, $r25, $r27, $r29;

        r0 := @this: org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter;

        r21 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        $r1 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $r2 = virtualinvoke $r1.<org.apache.poi.xssf.usermodel.XSSFSheet: org.apache.poi.xssf.usermodel.XSSFWorkbook getWorkbook()>();

        $r3 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $i0 = virtualinvoke $r2.<org.apache.poi.xssf.usermodel.XSSFWorkbook: int getSheetIndex(org.apache.poi.ss.usermodel.Sheet)>($r3);

        $r4 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook: org.apache.poi.xssf.usermodel.XSSFEvaluationWorkbook create(org.apache.poi.xssf.usermodel.XSSFWorkbook)>($r2);

        $r5 = r0.<org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.xssf.usermodel.XSSFSheet sheet>;

        $r6 = virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFSheet: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet getCTWorksheet()>();

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTWorksheet: java.util.List getConditionalFormattingList()>();

        i6 = 0;

     label01:
        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i6 >= $i1 goto label19;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>(i6);

        r9 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting) $r8;

        $r10 = new java.util.ArrayList;

        specialinvoke $r10.<java.util.ArrayList: void <init>()>();

        $r11 = interfaceinvoke r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: java.util.List getSqref()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r29 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        $r30 = virtualinvoke $r29.<java.lang.Object: java.lang.String toString()>();

        $r31 = virtualinvoke $r30.<java.lang.String: java.lang.String[] split(java.lang.String)>(" ");

        i7 = 0;

     label03:
        $i5 = lengthof $r31;

        if i7 >= $i5 goto label04;

        $r32 = $r31[i7];

        $r33 = staticinvoke <org.apache.poi.ss.util.CellRangeAddress: org.apache.poi.ss.util.CellRangeAddress valueOf(java.lang.String)>($r32);

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r33);

        i7 = i7 + 1;

        goto label03;

     label04:
        goto label02;

     label05:
        z3 = 0;

        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        i8 = 0;

     label06:
        $i2 = virtualinvoke $r10.<java.util.ArrayList: int size()>();

        if i8 >= $i2 goto label09;

        $r27 = virtualinvoke $r10.<java.util.ArrayList: java.lang.Object get(int)>(i8);

        r34 = (org.apache.poi.ss.util.CellRangeAddress) $r27;

        $r28 = staticinvoke <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.ss.util.CellRangeAddress shiftRange(org.apache.poi.ss.formula.FormulaShifter,org.apache.poi.ss.util.CellRangeAddress,int)>(r21, r34, $i0);

        if $r28 != null goto label07;

        z3 = 1;

        goto label08;

     label07:
        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r28);

        if $r28 == r34 goto label08;

        z3 = 1;

     label08:
        i8 = i8 + 1;

        goto label06;

     label09:
        if z3 == 0 goto label13;

        $i4 = interfaceinvoke $r13.<java.util.List: int size()>();

        if $i4 != 0 goto label10;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(i6);

        goto label18;

     label10:
        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        $r24 = interfaceinvoke $r13.<java.util.List: java.util.Iterator iterator()>();

     label11:
        $z2 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r35 = (org.apache.poi.ss.util.CellRangeAddress) $r25;

        $r26 = virtualinvoke r35.<org.apache.poi.ss.util.CellRangeAddress: java.lang.String formatAsString()>();

        interfaceinvoke $r23.<java.util.List: boolean add(java.lang.Object)>($r26);

        goto label11;

     label12:
        interfaceinvoke r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: void setSqref(java.util.List)>($r23);

     label13:
        $r14 = interfaceinvoke r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTConditionalFormatting: java.util.List getCfRuleList()>();

        $r15 = interfaceinvoke $r14.<java.util.List: java.util.Iterator iterator()>();

     label14:
        $z4 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label18;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r36 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule) $r16;

        $r17 = interfaceinvoke r36.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTCfRule: java.util.List getFormulaList()>();

        i9 = 0;

     label15:
        $i3 = interfaceinvoke $r17.<java.util.List: int size()>();

        if i9 >= $i3 goto label17;

        $r18 = interfaceinvoke $r17.<java.util.List: java.lang.Object get(int)>(i9);

        r19 = (java.lang.String) $r18;

        $r20 = staticinvoke <org.apache.poi.ss.formula.FormulaParser: org.apache.poi.ss.formula.ptg.Ptg[] parse(java.lang.String,org.apache.poi.ss.formula.FormulaParsingWorkbook,int,int)>(r19, $r4, 0, $i0);

        $z1 = virtualinvoke r21.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r20, $i0);

        if $z1 == 0 goto label16;

        $r22 = staticinvoke <org.apache.poi.ss.formula.FormulaRenderer: java.lang.String toFormulaString(org.apache.poi.ss.formula.FormulaRenderingWorkbook,org.apache.poi.ss.formula.ptg.Ptg[])>($r4, $r20);

        interfaceinvoke $r17.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i9, $r22);

     label16:
        i9 = i9 + 1;

        goto label15;

     label17:
        goto label14;

     label18:
        i6 = i6 + 1;

        goto label01;

     label19:
        return;
    }

    private static org.apache.poi.ss.util.CellRangeAddress shiftRange(org.apache.poi.ss.formula.FormulaShifter, org.apache.poi.ss.util.CellRangeAddress, int)
    {
        org.apache.poi.ss.formula.ptg.Ptg r4;
        java.lang.IllegalStateException $r5;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8;
        org.apache.poi.ss.formula.FormulaShifter r3;
        java.lang.String $r9, $r12;
        boolean $z0, $z1, $z2;
        org.apache.poi.ss.util.CellRangeAddress r1, $r14;
        org.apache.poi.ss.formula.ptg.AreaPtg $r0, r13;
        java.lang.StringBuilder $r6, $r7, $r10, $r11;
        java.lang.Class $r8;

        r3 := @parameter0: org.apache.poi.ss.formula.FormulaShifter;

        r1 := @parameter1: org.apache.poi.ss.util.CellRangeAddress;

        i4 := @parameter2: int;

        $r0 = new org.apache.poi.ss.formula.ptg.AreaPtg;

        $i0 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

        $i1 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        $i2 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $i3 = virtualinvoke r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        specialinvoke $r0.<org.apache.poi.ss.formula.ptg.AreaPtg: void <init>(int,int,int,int,boolean,boolean,boolean,boolean)>($i0, $i1, $i2, $i3, 0, 0, 0, 0);

        $r2 = newarray (org.apache.poi.ss.formula.ptg.Ptg)[1];

        $r2[0] = $r0;

        $z0 = virtualinvoke r3.<org.apache.poi.ss.formula.FormulaShifter: boolean adjustFormula(org.apache.poi.ss.formula.ptg.Ptg[],int)>($r2, i4);

        if $z0 != 0 goto label1;

        return r1;

     label1:
        r4 = $r2[0];

        $z1 = r4 instanceof org.apache.poi.ss.formula.ptg.AreaPtg;

        if $z1 == 0 goto label2;

        r13 = (org.apache.poi.ss.formula.ptg.AreaPtg) r4;

        $r14 = new org.apache.poi.ss.util.CellRangeAddress;

        $i5 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getFirstRow()>();

        $i6 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getLastRow()>();

        $i7 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getFirstColumn()>();

        $i8 = virtualinvoke r13.<org.apache.poi.ss.formula.ptg.AreaPtg: int getLastColumn()>();

        specialinvoke $r14.<org.apache.poi.ss.util.CellRangeAddress: void <init>(int,int,int,int)>($i5, $i6, $i7, $i8);

        return $r14;

     label2:
        $z2 = r4 instanceof org.apache.poi.ss.formula.ptg.AreaErrPtg;

        if $z2 == 0 goto label3;

        return null;

     label3:
        $r5 = new java.lang.IllegalStateException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected shifted ptg class (");

        $r8 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12);

        throw $r5;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/xssf/usermodel/helpers/XSSFRowShifter;");

        <org.apache.poi.xssf.usermodel.helpers.XSSFRowShifter: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
