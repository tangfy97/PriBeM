public class org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser extends org.apache.lucene.queryparser.flexible.standard.StandardQueryParser
{

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.precedence.processors.PrecedenceQueryNodeProcessorPipeline $r1;
        org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void <init>()>();

        $r1 = new org.apache.lucene.queryparser.flexible.precedence.processors.PrecedenceQueryNodeProcessorPipeline;

        $r2 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()>();

        specialinvoke $r1.<org.apache.lucene.queryparser.flexible.precedence.processors.PrecedenceQueryNodeProcessorPipeline: void <init>(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r2);

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser: void setQueryNodeProcessor(org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)>($r1);

        return;
    }

    public void <init>(org.apache.lucene.analysis.Analyzer)
    {
        org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser r0;
        org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler $r3;
        org.apache.lucene.analysis.Analyzer r1;
        org.apache.lucene.queryparser.flexible.precedence.processors.PrecedenceQueryNodeProcessorPipeline $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser;

        r1 := @parameter0: org.apache.lucene.analysis.Analyzer;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.standard.StandardQueryParser: void <init>(org.apache.lucene.analysis.Analyzer)>(r1);

        $r2 = new org.apache.lucene.queryparser.flexible.precedence.processors.PrecedenceQueryNodeProcessorPipeline;

        $r3 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser: org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler getQueryConfigHandler()>();

        specialinvoke $r2.<org.apache.lucene.queryparser.flexible.precedence.processors.PrecedenceQueryNodeProcessorPipeline: void <init>(org.apache.lucene.queryparser.flexible.core.config.QueryConfigHandler)>($r3);

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.precedence.PrecedenceQueryParser: void setQueryNodeProcessor(org.apache.lucene.queryparser.flexible.core.processors.QueryNodeProcessor)>($r2);

        return;
    }
}
