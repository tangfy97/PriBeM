public class org.eclipse.jetty.util.ajax.JSONEnumConvertor extends java.lang.Object implements org.eclipse.jetty.util.ajax.JSON$Convertor
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private boolean _fromJSON;
    private java.lang.reflect.Method _valueOf;

    public void <init>()
    {
        org.eclipse.jetty.util.ajax.JSONEnumConvertor r0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONEnumConvertor;

        specialinvoke r0.<org.eclipse.jetty.util.ajax.JSONEnumConvertor: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        org.eclipse.jetty.util.ajax.JSONEnumConvertor r0;
        java.lang.Class[] $r3;
        java.lang.RuntimeException $r6;
        java.lang.Exception $r5;
        java.lang.Class $r1, $r2;
        java.lang.reflect.Method $r4;
        boolean z0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONEnumConvertor;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r1, "java.lang.Enum");

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Ljava/lang/Class;";

        $r3[1] = class "Ljava/lang/String;";

        $r4 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("valueOf", $r3);

        r0.<org.eclipse.jetty.util.ajax.JSONEnumConvertor: java.lang.reflect.Method _valueOf> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("!Enums", $r5);

        throw $r6;

     label4:
        r0.<org.eclipse.jetty.util.ajax.JSONEnumConvertor: boolean _fromJSON> = z0;

        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.Object fromJSON(java.util.Map)
    {
        org.eclipse.jetty.util.ajax.JSONEnumConvertor r0;
        java.lang.UnsupportedOperationException $r10;
        java.lang.Object[] $r6;
        java.lang.Exception $r11;
        java.util.Map r2;
        java.lang.Class $r1, $r5;
        java.lang.Object $r3, $r8, $r9;
        java.lang.String $r4;
        org.eclipse.jetty.util.log.Logger $r12;
        java.lang.reflect.Method $r7;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONEnumConvertor;

        r2 := @parameter0: java.util.Map;

        $z0 = r0.<org.eclipse.jetty.util.ajax.JSONEnumConvertor: boolean _fromJSON>;

        if $z0 != 0 goto label1;

        $r10 = new java.lang.UnsupportedOperationException;

        specialinvoke $r10.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r10;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("class");

        $r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <org.eclipse.jetty.util.Loader: java.lang.Class loadClass(java.lang.Class,java.lang.String)>($r1, $r4);

        $r7 = r0.<org.eclipse.jetty.util.ajax.JSONEnumConvertor: java.lang.reflect.Method _valueOf>;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = $r5;

        $r8 = interfaceinvoke r2.<java.util.Map: java.lang.Object get(java.lang.Object)>("value");

        $r6[1] = $r8;

        $r9 = virtualinvoke $r7.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r6);

     label2:
        return $r9;

     label3:
        $r11 := @caughtexception;

        $r12 = <org.eclipse.jetty.util.ajax.JSONEnumConvertor: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r11);

        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public void toJSON(java.lang.Object, org.eclipse.jetty.util.ajax.JSON$Output)
    {
        org.eclipse.jetty.util.ajax.JSONEnumConvertor r0;
        org.eclipse.jetty.util.ajax.JSON$Output r1;
        java.lang.Object r2;
        java.lang.Class $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSONEnumConvertor;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.eclipse.jetty.util.ajax.JSON$Output;

        $z0 = r0.<org.eclipse.jetty.util.ajax.JSONEnumConvertor: boolean _fromJSON>;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        interfaceinvoke r1.<org.eclipse.jetty.util.ajax.JSON$Output: void addClass(java.lang.Class)>($r4);

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.eclipse.jetty.util.ajax.JSON$Output: void add(java.lang.String,java.lang.Object)>("value", $r5);

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        interfaceinvoke r1.<org.eclipse.jetty.util.ajax.JSON$Output: void add(java.lang.Object)>($r3);

     label2:
        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/util/ajax/JSONEnumConvertor;");

        <org.eclipse.jetty.util.ajax.JSONEnumConvertor: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
