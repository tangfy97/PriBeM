public final class org.apache.poi.hssf.record.common.FtrHeader extends java.lang.Object
{
    private short recordType;
    private short grbitFrt;
    private byte[] reserved;

    public void <init>()
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hssf.record.common.FtrHeader: byte[] reserved> = $r1;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        byte[] $r2, $r3;
        short $s0, $s1;
        org.apache.poi.hssf.record.RecordInputStream r1;
        org.apache.poi.hssf.record.common.FtrHeader r0;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r0.<org.apache.poi.hssf.record.common.FtrHeader: short recordType> = $s0;

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        r0.<org.apache.poi.hssf.record.common.FtrHeader: short grbitFrt> = $s1;

        $r2 = newarray (byte)[8];

        r0.<org.apache.poi.hssf.record.common.FtrHeader: byte[] reserved> = $r2;

        $r3 = r0.<org.apache.poi.hssf.record.common.FtrHeader: byte[] reserved>;

        virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int read(byte[],int,int)>($r3, 0, 8);

        return;
    }

    public java.lang.String toString()
    {
        short $s0, $s1;
        java.lang.StringBuffer $r11;
        int $i2, $i3;
        org.apache.poi.hssf.record.common.FtrHeader r3;
        java.lang.StringBuilder $r2, $r4, $r7, $r8, $r12, $r13;
        java.lang.String $r5, $r9, $r10;

        r3 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [FUTURE HEADER]\n");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   Type ");

        $s0 = r3.<org.apache.poi.hssf.record.common.FtrHeader: short recordType>;

        $i2 = (int) $s0;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("   Flags ");

        $s1 = r3.<org.apache.poi.hssf.record.common.FtrHeader: short grbitFrt>;

        $i3 = (int) $s1;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" [/FUTURE HEADER]\n");

        $r10 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }

    public void serialize(org.apache.poi.util.LittleEndianOutput)
    {
        byte[] $r2;
        short $s0, $s1;
        org.apache.poi.util.LittleEndianOutput r0;
        int $i2, $i3;
        org.apache.poi.hssf.record.common.FtrHeader r1;

        r1 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $s0 = r1.<org.apache.poi.hssf.record.common.FtrHeader: short recordType>;

        $i2 = (int) $s0;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i2);

        $s1 = r1.<org.apache.poi.hssf.record.common.FtrHeader: short grbitFrt>;

        $i3 = (int) $s1;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i3);

        $r2 = r1.<org.apache.poi.hssf.record.common.FtrHeader: byte[] reserved>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void write(byte[])>($r2);

        return;
    }

    public static int getDataSize()
    {
        return 12;
    }

    public short getRecordType()
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        short $s0;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        $s0 = r0.<org.apache.poi.hssf.record.common.FtrHeader: short recordType>;

        return $s0;
    }

    public void setRecordType(short)
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        short s0;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.common.FtrHeader: short recordType> = s0;

        return;
    }

    public short getGrbitFrt()
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        short $s0;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        $s0 = r0.<org.apache.poi.hssf.record.common.FtrHeader: short grbitFrt>;

        return $s0;
    }

    public void setGrbitFrt(short)
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        short s0;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        s0 := @parameter0: short;

        r0.<org.apache.poi.hssf.record.common.FtrHeader: short grbitFrt> = s0;

        return;
    }

    public byte[] getReserved()
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        byte[] $r1;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        $r1 = r0.<org.apache.poi.hssf.record.common.FtrHeader: byte[] reserved>;

        return $r1;
    }

    public void setReserved(byte[])
    {
        org.apache.poi.hssf.record.common.FtrHeader r0;
        byte[] r1;

        r0 := @this: org.apache.poi.hssf.record.common.FtrHeader;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.hssf.record.common.FtrHeader: byte[] reserved> = r1;

        return;
    }
}
