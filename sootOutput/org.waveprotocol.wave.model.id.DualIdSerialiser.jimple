public class org.waveprotocol.wave.model.id.DualIdSerialiser extends java.lang.Object implements org.waveprotocol.wave.model.id.IdSerialiser
{
    public static final org.waveprotocol.wave.model.id.DualIdSerialiser MODERN;
    public static final org.waveprotocol.wave.model.id.DualIdSerialiser LEGACY;
    private final boolean toModern;

    private void <init>(boolean)
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser r0;
        boolean z0;

        r0 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        z0 := @parameter0: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.id.DualIdSerialiser: boolean toModern> = z0;

        return;
    }

    public java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser r0;
        org.waveprotocol.wave.model.id.WaveId r1;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r2;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveId;

        $z0 = r0.<org.waveprotocol.wave.model.id.DualIdSerialiser: boolean toModern>;

        if $z0 == 0 goto label1;

        $r3 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>(r1);

        goto label2;

     label1:
        $r2 = <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE>;

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: java.lang.String serialiseWaveId(org.waveprotocol.wave.model.id.WaveId)>(r1);

     label2:
        return $r4;
    }

    public java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser r0;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r2;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        $z0 = r0.<org.waveprotocol.wave.model.id.DualIdSerialiser: boolean toModern>;

        if $z0 == 0 goto label1;

        $r3 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>(r1);

        goto label2;

     label1:
        $r2 = <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE>;

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: java.lang.String serialiseWaveletId(org.waveprotocol.wave.model.id.WaveletId)>(r1);

     label2:
        return $r4;
    }

    public java.lang.String serialiseWaveletName(org.waveprotocol.wave.model.id.WaveletName)
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser r0;
        org.waveprotocol.wave.model.id.WaveletName r1;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r2;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        r1 := @parameter0: org.waveprotocol.wave.model.id.WaveletName;

        $z0 = r0.<org.waveprotocol.wave.model.id.DualIdSerialiser: boolean toModern>;

        if $z0 == 0 goto label1;

        $r3 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.id.ModernIdSerialiser: java.lang.String serialiseWaveletName(org.waveprotocol.wave.model.id.WaveletName)>(r1);

        goto label2;

     label1:
        $r2 = <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE>;

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: java.lang.String serialiseWaveletName(org.waveprotocol.wave.model.id.WaveletName)>(r1);

     label2:
        return $r4;
    }

    public org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String) throws org.waveprotocol.wave.model.id.InvalidIdException
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser r6;
        org.waveprotocol.wave.model.id.WaveId $r2, $r5;
        org.waveprotocol.wave.model.id.InvalidIdException $r3;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r4;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r1;
        java.lang.String r0;

        r6 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.WaveId deserialiseWaveId(java.lang.String)>(r0);

        return $r5;

        catch org.waveprotocol.wave.model.id.InvalidIdException from label1 to label2 with label3;
    }

    public org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String) throws org.waveprotocol.wave.model.id.InvalidIdException
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser r6;
        org.waveprotocol.wave.model.id.InvalidIdException $r3;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r4;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r1;
        org.waveprotocol.wave.model.id.WaveletId $r2, $r5;
        java.lang.String r0;

        r6 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.WaveletId deserialiseWaveletId(java.lang.String)>(r0);

        return $r5;

        catch org.waveprotocol.wave.model.id.InvalidIdException from label1 to label2 with label3;
    }

    public org.waveprotocol.wave.model.id.WaveletName deserialiseWaveletName(java.lang.String)
    {
        org.waveprotocol.wave.model.id.WaveletName $r2, $r5;
        org.waveprotocol.wave.model.id.DualIdSerialiser r6;
        org.waveprotocol.wave.model.id.InvalidIdException $r3;
        org.waveprotocol.wave.model.id.LegacyIdSerialiser $r4;
        org.waveprotocol.wave.model.id.ModernIdSerialiser $r1;
        java.lang.String r0;

        r6 := @this: org.waveprotocol.wave.model.id.DualIdSerialiser;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = <org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.ModernIdSerialiser INSTANCE>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.id.ModernIdSerialiser: org.waveprotocol.wave.model.id.WaveletName deserialiseWaveletName(java.lang.String)>(r0);

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = <org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.LegacyIdSerialiser INSTANCE>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.id.LegacyIdSerialiser: org.waveprotocol.wave.model.id.WaveletName deserialiseWaveletName(java.lang.String)>(r0);

        return $r5;

        catch org.waveprotocol.wave.model.id.InvalidIdException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.id.DualIdSerialiser $r0, $r1;

        $r0 = new org.waveprotocol.wave.model.id.DualIdSerialiser;

        specialinvoke $r0.<org.waveprotocol.wave.model.id.DualIdSerialiser: void <init>(boolean)>(1);

        <org.waveprotocol.wave.model.id.DualIdSerialiser: org.waveprotocol.wave.model.id.DualIdSerialiser MODERN> = $r0;

        $r1 = new org.waveprotocol.wave.model.id.DualIdSerialiser;

        specialinvoke $r1.<org.waveprotocol.wave.model.id.DualIdSerialiser: void <init>(boolean)>(0);

        <org.waveprotocol.wave.model.id.DualIdSerialiser: org.waveprotocol.wave.model.id.DualIdSerialiser LEGACY> = $r1;

        return;
    }
}
