public class org.jdesktop.swingx.JXList extends javax.swing.JList
{
    private static final java.util.logging.Logger LOG;
    public static final java.lang.String uiClassID;
    public static final java.lang.String EXECUTE_BUTTON_ACTIONCOMMAND;
    protected org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter;
    private javax.swing.event.ChangeListener highlighterChangeListener;
    protected org.jdesktop.swingx.decorator.ComponentAdapter dataAdapter;
    private org.jdesktop.swingx.rollover.RolloverProducer rolloverProducer;
    private org.jdesktop.swingx.rollover.ListRolloverController linkController;
    private org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer;
    private org.jdesktop.swingx.search.Searchable searchable;
    private java.util.Comparator comparator;
    private boolean autoCreateRowSorter;
    private javax.swing.RowSorter rowSorter;
    private boolean sortable;
    private boolean sortsOnUpdates;
    private org.jdesktop.swingx.sort.StringValueRegistry stringValueRegistry;
    private javax.swing.SortOrder[] sortOrderCycle;

    public void <init>()
    {
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        specialinvoke r0.<org.jdesktop.swingx.JXList: void <init>(boolean)>(0);

        return;
    }

    public void <init>(javax.swing.ListModel)
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.ListModel r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: javax.swing.ListModel;

        specialinvoke r0.<org.jdesktop.swingx.JXList: void <init>(javax.swing.ListModel,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.Object[])
    {
        org.jdesktop.swingx.JXList r0;
        java.lang.Object[] r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<org.jdesktop.swingx.JXList: void <init>(java.lang.Object[],boolean)>(r1, 0);

        return;
    }

    public void <init>(java.util.Vector)
    {
        org.jdesktop.swingx.JXList r0;
        java.util.Vector r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: java.util.Vector;

        specialinvoke r0.<org.jdesktop.swingx.JXList: void <init>(java.util.Vector,boolean)>(r1, 0);

        return;
    }

    public void <init>(boolean)
    {
        org.jdesktop.swingx.JXList r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        z0 := @parameter0: boolean;

        specialinvoke r0.<javax.swing.JList: void <init>()>();

        specialinvoke r0.<org.jdesktop.swingx.JXList: void init(boolean)>(z0);

        return;
    }

    public void <init>(javax.swing.ListModel, boolean)
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.ListModel r1;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: javax.swing.ListModel;

        z0 := @parameter1: boolean;

        specialinvoke r0.<javax.swing.JList: void <init>(javax.swing.ListModel)>(r1);

        specialinvoke r0.<org.jdesktop.swingx.JXList: void init(boolean)>(z0);

        return;
    }

    public void <init>(java.lang.Object[], boolean)
    {
        java.lang.Object[] r1;
        org.jdesktop.swingx.JXList r0;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: java.lang.Object[];

        z0 := @parameter1: boolean;

        specialinvoke r0.<javax.swing.JList: void <init>(java.lang.Object[])>(r1);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listData must not be null");

        throw $r2;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.JXList: void init(boolean)>(z0);

        return;
    }

    public void <init>(java.util.Vector, boolean)
    {
        java.util.Vector r1;
        org.jdesktop.swingx.JXList r0;
        java.lang.IllegalArgumentException $r2;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: java.util.Vector;

        z0 := @parameter1: boolean;

        specialinvoke r0.<javax.swing.JList: void <init>(java.util.Vector)>(r1);

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("listData must not be null");

        throw $r2;

     label1:
        specialinvoke r0.<org.jdesktop.swingx.JXList: void init(boolean)>(z0);

        return;
    }

    private void init(boolean)
    {
        javax.swing.KeyStroke $r5;
        javax.swing.Action $r2;
        javax.swing.SortOrder[] $r1;
        org.jdesktop.swingx.search.SearchFactory $r4;
        org.jdesktop.swingx.JXList r0;
        javax.swing.InputMap $r6;
        javax.swing.ActionMap $r3;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <org.jdesktop.swingx.sort.DefaultSortController: javax.swing.SortOrder[] getDefaultSortOrderCycle()>();

        r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] sortOrderCycle> = $r1;

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void setSortable(boolean)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void setSortsOnUpdates(boolean)>(1);

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void setAutoCreateRowSorter(boolean)>(z0);

        $r2 = specialinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.Action createFindAction()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.ActionMap getActionMap()>();

        virtualinvoke $r3.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("find", $r2);

        $r4 = staticinvoke <org.jdesktop.swingx.search.SearchFactory: org.jdesktop.swingx.search.SearchFactory getInstance()>();

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.search.SearchFactory: javax.swing.KeyStroke getSearchAccelerator()>();

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.InputMap getInputMap(int)>(1);

        virtualinvoke $r6.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r5, "find");

        return;
    }

    private javax.swing.Action createFindAction()
    {
        org.jdesktop.swingx.JXList$1 $r0;
        org.jdesktop.swingx.JXList r1;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.JXList$1;

        specialinvoke $r0.<org.jdesktop.swingx.JXList$1: void <init>(org.jdesktop.swingx.JXList,java.lang.String)>(r1, "find");

        return $r0;
    }

    protected void doFind()
    {
        org.jdesktop.swingx.JXList r1;
        org.jdesktop.swingx.search.Searchable $r2;
        org.jdesktop.swingx.search.SearchFactory $r0;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = staticinvoke <org.jdesktop.swingx.search.SearchFactory: org.jdesktop.swingx.search.SearchFactory getInstance()>();

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.search.Searchable getSearchable()>();

        virtualinvoke $r0.<org.jdesktop.swingx.search.SearchFactory: void showFindInput(javax.swing.JComponent,org.jdesktop.swingx.search.Searchable)>(r1, $r2);

        return;
    }

    public org.jdesktop.swingx.search.Searchable getSearchable()
    {
        org.jdesktop.swingx.search.Searchable $r1, $r2;
        org.jdesktop.swingx.search.ListSearchable $r3;
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.search.Searchable searchable>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.search.ListSearchable;

        specialinvoke $r3.<org.jdesktop.swingx.search.ListSearchable: void <init>(org.jdesktop.swingx.JXList)>(r0);

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.search.Searchable searchable> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.search.Searchable searchable>;

        return $r2;
    }

    public void setSearchable(org.jdesktop.swingx.search.Searchable)
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.search.Searchable r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: org.jdesktop.swingx.search.Searchable;

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.search.Searchable searchable> = r1;

        return;
    }

    public int getNextMatch(java.lang.String, int, javax.swing.text.Position$Bias)
    {
        org.jdesktop.swingx.search.Searchable $r7;
        javax.swing.text.Position$Bias r8, $r9;
        org.jdesktop.swingx.JXList r6;
        int i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r3;
        java.lang.String r2, $r4;
        java.util.regex.Pattern $r5;
        boolean $z0;

        r6 := @this: org.jdesktop.swingx.JXList;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r8 := @parameter2: javax.swing.text.Position$Bias;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("^");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r4, 2);

        $r7 = virtualinvoke r6.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.search.Searchable getSearchable()>();

        $r9 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Backward>;

        if r8 != $r9 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $i1 = interfaceinvoke $r7.<org.jdesktop.swingx.search.Searchable: int search(java.util.regex.Pattern,int,boolean)>($r5, i0, $z0);

        return $i1;
    }

    public void setRolloverEnabled(boolean)
    {
        org.jdesktop.swingx.rollover.ListRolloverController $r2, $r5;
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.rollover.RolloverProducer $r1, $r3, $r4;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXList;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean isRolloverEnabled()>();

        if z1 != $z0 goto label1;

        return;

     label1:
        if z1 == 0 goto label2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.RolloverProducer createRolloverProducer()>();

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.RolloverProducer rolloverProducer> = $r3;

        $r4 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.RolloverProducer rolloverProducer>;

        virtualinvoke $r4.<org.jdesktop.swingx.rollover.RolloverProducer: void install(javax.swing.JComponent)>(r0);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.ListRolloverController getLinkController()>();

        virtualinvoke $r5.<org.jdesktop.swingx.rollover.ListRolloverController: void install(javax.swing.JComponent)>(r0);

        goto label3;

     label2:
        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.RolloverProducer rolloverProducer>;

        virtualinvoke $r1.<org.jdesktop.swingx.rollover.RolloverProducer: void release(javax.swing.JComponent)>(r0);

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.RolloverProducer rolloverProducer> = null;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.ListRolloverController getLinkController()>();

        virtualinvoke $r2.<org.jdesktop.swingx.rollover.ListRolloverController: void release()>();

     label3:
        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean isRolloverEnabled()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,boolean,boolean)>("rolloverEnabled", $z0, $z2);

        return;
    }

    public boolean isRolloverEnabled()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.rollover.RolloverProducer $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.RolloverProducer rolloverProducer>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    protected org.jdesktop.swingx.rollover.ListRolloverController getLinkController()
    {
        org.jdesktop.swingx.rollover.ListRolloverController $r1, $r2, $r3;
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.ListRolloverController linkController>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.ListRolloverController createLinkController()>();

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.ListRolloverController linkController> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.rollover.ListRolloverController linkController>;

        return $r2;
    }

    protected org.jdesktop.swingx.rollover.ListRolloverController createLinkController()
    {
        org.jdesktop.swingx.JXList r1;
        org.jdesktop.swingx.rollover.ListRolloverController $r0;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.rollover.ListRolloverController;

        specialinvoke $r0.<org.jdesktop.swingx.rollover.ListRolloverController: void <init>()>();

        return $r0;
    }

    protected org.jdesktop.swingx.rollover.RolloverProducer createRolloverProducer()
    {
        org.jdesktop.swingx.rollover.ListRolloverProducer $r0;
        org.jdesktop.swingx.JXList r1;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.rollover.ListRolloverProducer;

        specialinvoke $r0.<org.jdesktop.swingx.rollover.ListRolloverProducer: void <init>()>();

        return $r0;
    }

    public boolean getAutoCreateRowSorter()
    {
        org.jdesktop.swingx.JXList r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = r0.<org.jdesktop.swingx.JXList: boolean autoCreateRowSorter>;

        return $z0;
    }

    public void setAutoCreateRowSorter(boolean)
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.RowSorter $r1;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.JXList;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getAutoCreateRowSorter()>();

        if $z0 != z1 goto label1;

        return;

     label1:
        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getAutoCreateRowSorter()>();

        r0.<org.jdesktop.swingx.JXList: boolean autoCreateRowSorter> = z1;

        if z1 == 0 goto label2;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter createDefaultRowSorter()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void setRowSorter(javax.swing.RowSorter)>($r1);

     label2:
        $z3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getAutoCreateRowSorter()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,boolean,boolean)>("autoCreateRowSorter", $z2, $z3);

        return;
    }

    protected javax.swing.RowSorter createDefaultRowSorter()
    {
        org.jdesktop.swingx.JXList r1;
        org.jdesktop.swingx.sort.ListSortController $r0;
        javax.swing.ListModel $r2;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.sort.ListSortController;

        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXList: javax.swing.ListModel getModel()>();

        specialinvoke $r0.<org.jdesktop.swingx.sort.ListSortController: void <init>(javax.swing.ListModel)>($r2);

        return $r0;
    }

    public javax.swing.RowSorter getRowSorter()
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.RowSorter $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter rowSorter>;

        return $r1;
    }

    public void setRowSorter(javax.swing.RowSorter)
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.RowSorter $r1, r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        r2 := @parameter0: javax.swing.RowSorter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter rowSorter> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void configureSorterProperties()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("rowSorter", $r1, r2);

        return;
    }

    protected void configureSorterProperties()
    {
        org.jdesktop.swingx.sort.StringValueRegistry $r8;
        javax.swing.SortOrder[] $r6;
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1, $r2, $r3, $r5, $r7;
        java.util.Comparator $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getControlsSorterProperties()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $z1 = r0.<org.jdesktop.swingx.JXList: boolean sortable>;

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void setSortable(boolean)>($z1);

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $z2 = r0.<org.jdesktop.swingx.JXList: boolean sortsOnUpdates>;

        interfaceinvoke $r2.<org.jdesktop.swingx.sort.SortController: void setSortsOnUpdates(boolean)>($z2);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $r4 = r0.<org.jdesktop.swingx.JXList: java.util.Comparator comparator>;

        interfaceinvoke $r3.<org.jdesktop.swingx.sort.SortController: void setComparator(int,java.util.Comparator)>(0, $r4);

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] getSortOrderCycle()>();

        interfaceinvoke $r5.<org.jdesktop.swingx.sort.SortController: void setSortOrderCycle(javax.swing.SortOrder[])>($r6);

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $r8 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry getStringValueRegistry()>();

        interfaceinvoke $r7.<org.jdesktop.swingx.sort.SortController: void setStringValueProvider(org.jdesktop.swingx.sort.StringValueProvider)>($r8);

        return;
    }

    public void setSortable(boolean)
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.JXList;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean isSortable()>();

        r0.<org.jdesktop.swingx.JXList: boolean sortable> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getControlsSorterProperties()>();

        if $z2 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void setSortable(boolean)>(z1);

     label1:
        $z3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean isSortable()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,boolean,boolean)>("sortable", $z0, $z3);

        return;
    }

    public boolean isSortable()
    {
        org.jdesktop.swingx.JXList r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = r0.<org.jdesktop.swingx.JXList: boolean sortable>;

        return $z0;
    }

    public void setSortsOnUpdates(boolean)
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        boolean $z0, z1, $z2, $z3;

        r0 := @this: org.jdesktop.swingx.JXList;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getSortsOnUpdates()>();

        r0.<org.jdesktop.swingx.JXList: boolean sortsOnUpdates> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getControlsSorterProperties()>();

        if $z2 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void setSortsOnUpdates(boolean)>(z1);

     label1:
        $z3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getSortsOnUpdates()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,boolean,boolean)>("sortsOnUpdates", $z0, $z3);

        return;
    }

    public boolean getSortsOnUpdates()
    {
        org.jdesktop.swingx.JXList r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = r0.<org.jdesktop.swingx.JXList: boolean sortsOnUpdates>;

        return $z0;
    }

    public transient void setSortOrderCycle(javax.swing.SortOrder[])
    {
        java.lang.Object[] $r3;
        javax.swing.SortOrder[] $r1, r2, $r4, $r5;
        org.jdesktop.swingx.JXList r0;
        int $i0;
        org.jdesktop.swingx.sort.SortController $r6;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r2 := @parameter0: javax.swing.SortOrder[];

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] getSortOrderCycle()>();

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getControlsSorterProperties()>();

        if $z0 == 0 goto label1;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r6.<org.jdesktop.swingx.sort.SortController: void setSortOrderCycle(javax.swing.SortOrder[])>(r2);

     label1:
        $i0 = lengthof r2;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(r2, $i0);

        $r4 = (javax.swing.SortOrder[]) $r3;

        r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] sortOrderCycle> = $r4;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] getSortOrderCycle()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("sortOrderCycle", $r1, $r5);

        return;
    }

    public javax.swing.SortOrder[] getSortOrderCycle()
    {
        java.lang.Object[] $r3;
        org.jdesktop.swingx.JXList r0;
        int $i0;
        javax.swing.SortOrder[] $r1, $r2, $r4;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r2 = r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] sortOrderCycle>;

        $r1 = r0.<org.jdesktop.swingx.JXList: javax.swing.SortOrder[] sortOrderCycle>;

        $i0 = lengthof $r1;

        $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0);

        $r4 = (javax.swing.SortOrder[]) $r3;

        return $r4;
    }

    public java.util.Comparator getComparator()
    {
        org.jdesktop.swingx.JXList r0;
        java.util.Comparator $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: java.util.Comparator comparator>;

        return $r1;
    }

    public void setComparator(java.util.Comparator)
    {
        org.jdesktop.swingx.JXList r0;
        java.util.Comparator $r1, r2, $r3;

        r0 := @this: org.jdesktop.swingx.JXList;

        r2 := @parameter0: java.util.Comparator;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.util.Comparator getComparator()>();

        r0.<org.jdesktop.swingx.JXList: java.util.Comparator comparator> = r2;

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void updateSortAfterComparatorChange()>();

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.util.Comparator getComparator()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("comparator", $r1, $r3);

        return;
    }

    protected void updateSortAfterComparatorChange()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        java.util.Comparator $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getControlsSorterProperties()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.util.Comparator getComparator()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void setComparator(int,java.util.Comparator)>(0, $r2);

     label1:
        return;
    }

    public void setRowFilter(javax.swing.RowFilter)
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        javax.swing.RowFilter r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r2 := @parameter0: javax.swing.RowFilter;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void setRowFilter(javax.swing.RowFilter)>(r2);

     label1:
        return;
    }

    public javax.swing.RowFilter getRowFilter()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        javax.swing.RowFilter $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $r2 = interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: javax.swing.RowFilter getRowFilter()>();

        goto label2;

     label1:
        $r2 = null;

     label2:
        return $r2;
    }

    public void resetSortOrder()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void resetSortOrders()>();

     label1:
        return;
    }

    public void toggleSortOrder()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void toggleSortOrder(int)>(0);

     label1:
        return;
    }

    public void setSortOrder(javax.swing.SortOrder)
    {
        javax.swing.SortOrder r2;
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r2 := @parameter0: javax.swing.SortOrder;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        interfaceinvoke $r1.<org.jdesktop.swingx.sort.SortController: void setSortOrder(int,javax.swing.SortOrder)>(0, r2);

     label1:
        return;
    }

    public javax.swing.SortOrder getSortOrder()
    {
        javax.swing.SortOrder $r1, $r3;
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.SortController $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.SortController getSortController()>();

        $r3 = interfaceinvoke $r2.<org.jdesktop.swingx.sort.SortController: javax.swing.SortOrder getSortOrder(int)>(0);

        return $r3;

     label1:
        $r1 = <javax.swing.SortOrder: javax.swing.SortOrder UNSORTED>;

        return $r1;
    }

    protected org.jdesktop.swingx.sort.SortController getSortController()
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.RowSorter $r1;
        org.jdesktop.swingx.sort.SortController $r2;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        $r2 = (org.jdesktop.swingx.sort.SortController) $r1;

        return $r2;

     label1:
        return null;
    }

    protected boolean hasSortController()
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.RowSorter $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        $z0 = $r1 instanceof org.jdesktop.swingx.sort.SortController;

        return $z0;
    }

    protected boolean getControlsSorterProperties()
    {
        org.jdesktop.swingx.JXList r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean hasSortController()>();

        if $z0 == 0 goto label1;

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getAutoCreateRowSorter()>();

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.Object getElementAt(int)
    {
        org.jdesktop.swingx.JXList r0;
        int i0, $i1;
        java.lang.Object $r2;
        javax.swing.ListModel $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.ListModel getModel()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: int convertIndexToModel(int)>(i0);

        $r2 = interfaceinvoke $r1.<javax.swing.ListModel: java.lang.Object getElementAt(int)>($i1);

        return $r2;
    }

    public java.lang.Object getSelectedValue()
    {
        org.jdesktop.swingx.JXList r0;
        int $i0, $i2;
        java.lang.Object $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: int getSelectedIndex()>();

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r1 = null;

        goto label2;

     label1:
        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.lang.Object getElementAt(int)>($i0);

     label2:
        return $r1;
    }

    public void setSelectedValue(java.lang.Object, boolean)
    {
        org.jdesktop.swingx.JXList r1;
        int $i0, i1, $i3, $i5;
        java.lang.Object r0, $r2, $r3;
        boolean $z0, $z1, z2;

        r1 := @this: org.jdesktop.swingx.JXList;

        r0 := @parameter0: java.lang.Object;

        z2 := @parameter1: boolean;

        if r0 != null goto label1;

        $i3 = (int) -1;

        virtualinvoke r1.<org.jdesktop.swingx.JXList: void setSelectedIndex(int)>($i3);

        goto label6;

     label1:
        $r2 = virtualinvoke r1.<org.jdesktop.swingx.JXList: java.lang.Object getSelectedValue()>();

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label6;

        i1 = 0;

        $i0 = virtualinvoke r1.<org.jdesktop.swingx.JXList: int getElementCount()>();

     label2:
        if i1 >= $i0 goto label5;

        $r3 = virtualinvoke r1.<org.jdesktop.swingx.JXList: java.lang.Object getElementAt(int)>(i1);

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label4;

        virtualinvoke r1.<org.jdesktop.swingx.JXList: void setSelectedIndex(int)>(i1);

        if z2 == 0 goto label3;

        virtualinvoke r1.<org.jdesktop.swingx.JXList: void ensureIndexIsVisible(int)>(i1);

     label3:
        virtualinvoke r1.<org.jdesktop.swingx.JXList: void repaint()>();

        return;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $i5 = (int) -1;

        virtualinvoke r1.<org.jdesktop.swingx.JXList: void setSelectedIndex(int)>($i5);

     label6:
        virtualinvoke r1.<org.jdesktop.swingx.JXList: void repaint()>();

        return;
    }

    public java.lang.Object[] getSelectedValues()
    {
        java.lang.Object[] r2;
        int[] $r1;
        org.jdesktop.swingx.JXList r0;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r3;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: int[] getSelectedIndices()>();

        $i0 = lengthof $r1;

        r2 = newarray (java.lang.Object)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof $r1;

        if i3 >= $i1 goto label2;

        $i2 = $r1[i3];

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.lang.Object getElementAt(int)>($i2);

        r2[i3] = $r3;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r2;
    }

    public int getElementCount()
    {
        org.jdesktop.swingx.JXList r0;
        int $i0;
        javax.swing.RowSorter $r1, $r3;
        javax.swing.ListModel $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        if $r1 == null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        $i0 = virtualinvoke $r3.<javax.swing.RowSorter: int getViewRowCount()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.ListModel getModel()>();

        $i0 = interfaceinvoke $r2.<javax.swing.ListModel: int getSize()>();

     label2:
        return $i0;
    }

    public int convertIndexToModel(int)
    {
        org.jdesktop.swingx.JXList r0;
        int i0, $i1;
        javax.swing.RowSorter $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        $i1 = virtualinvoke $r2.<javax.swing.RowSorter: int convertRowIndexToModel(int)>(i0);

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public int convertIndexToView(int)
    {
        org.jdesktop.swingx.JXList r0;
        int i0, $i1;
        javax.swing.RowSorter $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter getRowSorter()>();

        $i1 = virtualinvoke $r2.<javax.swing.RowSorter: int convertRowIndexToView(int)>(i0);

        goto label2;

     label1:
        $i1 = i0;

     label2:
        return $i1;
    }

    public javax.swing.ListModel getWrappedModel()
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.ListModel $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.ListModel getModel()>();

        return $r1;
    }

    public void setModel(javax.swing.ListModel)
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.RowSorter $r2;
        javax.swing.ListModel r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r1 := @parameter0: javax.swing.ListModel;

        specialinvoke r0.<javax.swing.JList: void setModel(javax.swing.ListModel)>(r1);

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXList: boolean getAutoCreateRowSorter()>();

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.RowSorter createDefaultRowSorter()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void setRowSorter(javax.swing.RowSorter)>($r2);

     label1:
        return;
    }

    protected org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.decorator.ComponentAdapter $r1, $r2;
        org.jdesktop.swingx.JXList$ListAdapter $r3;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.ComponentAdapter dataAdapter>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.JXList$ListAdapter;

        specialinvoke $r3.<org.jdesktop.swingx.JXList$ListAdapter: void <init>(org.jdesktop.swingx.JXList)>(r0);

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.ComponentAdapter dataAdapter> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.ComponentAdapter dataAdapter>;

        return $r2;
    }

    protected org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter(int)
    {
        org.jdesktop.swingx.JXList r0;
        int i0;
        org.jdesktop.swingx.decorator.ComponentAdapter $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.ComponentAdapter getComponentAdapter()>();

        $r1.<org.jdesktop.swingx.decorator.ComponentAdapter: int column> = 0;

        $r1.<org.jdesktop.swingx.decorator.ComponentAdapter: int row> = i0;

        return $r1;
    }

    public transient void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])
    {
        org.jdesktop.swingx.decorator.CompoundHighlighter $r2;
        org.jdesktop.swingx.decorator.Highlighter[] $r1, r3, $r4;
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r3 := @parameter0: org.jdesktop.swingx.decorator.Highlighter[];

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()>();

        virtualinvoke $r2.<org.jdesktop.swingx.decorator.CompoundHighlighter: void setHighlighters(org.jdesktop.swingx.decorator.Highlighter[])>(r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("highlighters", $r1, $r4);

        return;
    }

    public org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.decorator.CompoundHighlighter $r1;
        org.jdesktop.swingx.decorator.Highlighter[] $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.decorator.CompoundHighlighter: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        return $r2;
    }

    public void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.decorator.Highlighter r3;
        org.jdesktop.swingx.decorator.CompoundHighlighter $r2;
        org.jdesktop.swingx.decorator.Highlighter[] $r1, $r4;
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r3 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()>();

        virtualinvoke $r2.<org.jdesktop.swingx.decorator.CompoundHighlighter: void addHighlighter(org.jdesktop.swingx.decorator.Highlighter)>(r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("highlighters", $r1, $r4);

        return;
    }

    public void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)
    {
        org.jdesktop.swingx.decorator.Highlighter r3;
        org.jdesktop.swingx.decorator.CompoundHighlighter $r2;
        org.jdesktop.swingx.decorator.Highlighter[] $r1, $r4;
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        r3 := @parameter0: org.jdesktop.swingx.decorator.Highlighter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()>();

        virtualinvoke $r2.<org.jdesktop.swingx.decorator.CompoundHighlighter: void removeHighlighter(org.jdesktop.swingx.decorator.Highlighter)>(r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.Highlighter[] getHighlighters()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("highlighters", $r1, $r4);

        return;
    }

    protected org.jdesktop.swingx.decorator.CompoundHighlighter getCompoundHighlighter()
    {
        org.jdesktop.swingx.decorator.CompoundHighlighter $r1, $r2, $r3, $r5;
        org.jdesktop.swingx.decorator.Highlighter[] $r4;
        org.jdesktop.swingx.JXList r0;
        javax.swing.event.ChangeListener $r6;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.decorator.CompoundHighlighter;

        $r4 = newarray (org.jdesktop.swingx.decorator.Highlighter)[0];

        specialinvoke $r3.<org.jdesktop.swingx.decorator.CompoundHighlighter: void <init>(org.jdesktop.swingx.decorator.Highlighter[])>($r4);

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter> = $r3;

        $r5 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter>;

        $r6 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.event.ChangeListener getHighlighterChangeListener()>();

        virtualinvoke $r5.<org.jdesktop.swingx.decorator.CompoundHighlighter: void addChangeListener(javax.swing.event.ChangeListener)>($r6);

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter>;

        return $r2;
    }

    protected javax.swing.event.ChangeListener getHighlighterChangeListener()
    {
        org.jdesktop.swingx.JXList r0;
        javax.swing.event.ChangeListener $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: javax.swing.event.ChangeListener highlighterChangeListener>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.event.ChangeListener createHighlighterChangeListener()>();

        r0.<org.jdesktop.swingx.JXList: javax.swing.event.ChangeListener highlighterChangeListener> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: javax.swing.event.ChangeListener highlighterChangeListener>;

        return $r2;
    }

    protected javax.swing.event.ChangeListener createHighlighterChangeListener()
    {
        org.jdesktop.swingx.JXList r1;
        org.jdesktop.swingx.JXList$2 $r0;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.JXList$2;

        specialinvoke $r0.<org.jdesktop.swingx.JXList$2: void <init>(org.jdesktop.swingx.JXList)>(r1);

        return $r0;
    }

    protected org.jdesktop.swingx.sort.StringValueRegistry getStringValueRegistry()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.sort.StringValueRegistry $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry stringValueRegistry>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry createDefaultStringValueRegistry()>();

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry stringValueRegistry> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry stringValueRegistry>;

        return $r2;
    }

    protected org.jdesktop.swingx.sort.StringValueRegistry createDefaultStringValueRegistry()
    {
        org.jdesktop.swingx.JXList r1;
        org.jdesktop.swingx.sort.StringValueRegistry $r0;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.sort.StringValueRegistry;

        specialinvoke $r0.<org.jdesktop.swingx.sort.StringValueRegistry: void <init>()>();

        return $r0;
    }

    public java.lang.String getStringAt(int)
    {
        org.jdesktop.swingx.renderer.StringValue $r2;
        org.jdesktop.swingx.JXList r0;
        int i0, $i1;
        org.jdesktop.swingx.sort.StringValueRegistry $r1;
        java.lang.Object $r3;
        java.lang.String $r4;

        r0 := @this: org.jdesktop.swingx.JXList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry getStringValueRegistry()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: int convertIndexToModel(int)>(i0);

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.sort.StringValueRegistry: org.jdesktop.swingx.renderer.StringValue getStringValue(int,int)>($i1, 0);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.lang.Object getElementAt(int)>(i0);

        $r4 = interfaceinvoke $r2.<org.jdesktop.swingx.renderer.StringValue: java.lang.String getString(java.lang.Object)>($r3);

        return $r4;
    }

    private org.jdesktop.swingx.JXList$DelegatingRenderer getDelegatingRenderer()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.JXList$DelegatingRenderer $r1, $r2, $r3;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.JXList$DelegatingRenderer;

        specialinvoke $r3.<org.jdesktop.swingx.JXList$DelegatingRenderer: void <init>(org.jdesktop.swingx.JXList)>(r0);

        r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        return $r2;
    }

    protected javax.swing.ListCellRenderer createDefaultCellRenderer()
    {
        org.jdesktop.swingx.JXList r1;
        org.jdesktop.swingx.renderer.DefaultListRenderer $r0;

        r1 := @this: org.jdesktop.swingx.JXList;

        $r0 = new org.jdesktop.swingx.renderer.DefaultListRenderer;

        specialinvoke $r0.<org.jdesktop.swingx.renderer.DefaultListRenderer: void <init>()>();

        return $r0;
    }

    public javax.swing.ListCellRenderer getCellRenderer()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.JXList$DelegatingRenderer $r1;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer getDelegatingRenderer()>();

        return $r1;
    }

    public javax.swing.ListCellRenderer getWrappedCellRenderer()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.JXList$DelegatingRenderer $r1;
        javax.swing.ListCellRenderer $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer getDelegatingRenderer()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.JXList$DelegatingRenderer: javax.swing.ListCellRenderer getDelegateRenderer()>();

        return $r2;
    }

    public void setCellRenderer(javax.swing.ListCellRenderer)
    {
        org.jdesktop.swingx.JXList$DelegatingRenderer $r1, $r2, $r5, $r6;
        org.jdesktop.swingx.sort.StringValueRegistry $r4;
        javax.swing.ListCellRenderer r3;
        org.jdesktop.swingx.renderer.StringValue $r7;
        org.jdesktop.swingx.JXList r0;
        boolean z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXList;

        r3 := @parameter0: javax.swing.ListCellRenderer;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        if $r1 == null goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        z0 = $z2;

        $r2 = specialinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer getDelegatingRenderer()>();

        virtualinvoke $r2.<org.jdesktop.swingx.JXList$DelegatingRenderer: void setDelegateRenderer(javax.swing.ListCellRenderer)>(r3);

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.sort.StringValueRegistry getStringValueRegistry()>();

        $z1 = r3 instanceof org.jdesktop.swingx.renderer.StringValue;

        if $z1 == 0 goto label3;

        $r7 = (org.jdesktop.swingx.renderer.StringValue) r3;

        goto label4;

     label3:
        $r7 = null;

     label4:
        virtualinvoke $r4.<org.jdesktop.swingx.sort.StringValueRegistry: void setStringValue(org.jdesktop.swingx.renderer.StringValue,int)>($r7, 0);

        $r5 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        specialinvoke r0.<javax.swing.JList: void setCellRenderer(javax.swing.ListCellRenderer)>($r5);

        if z0 == 0 goto label5;

        $r6 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("cellRenderer", null, $r6);

     label5:
        return;
    }

    public void invalidateCellSizeCache()
    {
        javax.swing.plaf.ListUI $r1, $r2;
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.plaf.basic.core.BasicXListUI $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.plaf.ListUI getUI()>();

        $z0 = $r1 instanceof org.jdesktop.swingx.plaf.basic.core.BasicXListUI;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.plaf.ListUI getUI()>();

        $r3 = (org.jdesktop.swingx.plaf.basic.core.BasicXListUI) $r2;

        virtualinvoke $r3.<org.jdesktop.swingx.plaf.basic.core.BasicXListUI: void invalidateCellSizeCache()>();

     label1:
        return;
    }

    public void updateUI()
    {
        javax.swing.plaf.ComponentUI $r3;
        javax.swing.plaf.ListUI $r4;
        org.jdesktop.swingx.JXList r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXList: java.lang.String getUIClassID()>();

        $r2 = specialinvoke r0.<javax.swing.JList: java.lang.String getUIClassID()>();

        if $r1 != $r2 goto label1;

        specialinvoke r0.<javax.swing.JList: void updateUI()>();

        goto label2;

     label1:
        $r3 = staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: javax.swing.plaf.ComponentUI getUI(javax.swing.JComponent,java.lang.Class)>(r0, class "Ljavax/swing/plaf/ListUI;");

        $r4 = (javax.swing.plaf.ListUI) $r3;

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void setUI(javax.swing.plaf.ListUI)>($r4);

     label2:
        specialinvoke r0.<org.jdesktop.swingx.JXList: void updateRendererUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXList: void updateHighlighterUI()>();

        return;
    }

    public java.lang.String getUIClassID()
    {
        org.jdesktop.swingx.JXList r0;

        r0 := @this: org.jdesktop.swingx.JXList;

        return "XListUI";
    }

    private void updateRendererUI()
    {
        javax.swing.ListCellRenderer $r2;
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.JXList$DelegatingRenderer $r1, $r4;
        java.awt.Component $r3;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        if $r1 == null goto label1;

        $r4 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.JXList$DelegatingRenderer delegatingRenderer>;

        virtualinvoke $r4.<org.jdesktop.swingx.JXList$DelegatingRenderer: void updateUI()>();

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXList: javax.swing.ListCellRenderer getCellRenderer()>();

        $z0 = $r2 instanceof java.awt.Component;

        if $z0 == 0 goto label2;

        $r3 = (java.awt.Component) $r2;

        staticinvoke <javax.swing.SwingUtilities: void updateComponentTreeUI(java.awt.Component)>($r3);

     label2:
        return;
    }

    protected void updateHighlighterUI()
    {
        org.jdesktop.swingx.JXList r0;
        org.jdesktop.swingx.decorator.CompoundHighlighter $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXList;

        $r1 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter>;

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXList: org.jdesktop.swingx.decorator.CompoundHighlighter compoundHighlighter>;

        virtualinvoke $r2.<org.jdesktop.swingx.decorator.CompoundHighlighter: void updateUI()>();

        return;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.plaf.XListAddon $r3;
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.jdesktop.swingx.JXList: java.lang.String EXECUTE_BUTTON_ACTIONCOMMAND> = "executeButtonAction";

        <org.jdesktop.swingx.JXList: java.lang.String uiClassID> = "XListUI";

        $r0 = class "Lorg/jdesktop/swingx/JXList;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.jdesktop.swingx.JXList: java.util.logging.Logger LOG> = $r2;

        $r3 = new org.jdesktop.swingx.plaf.XListAddon;

        specialinvoke $r3.<org.jdesktop.swingx.plaf.XListAddon: void <init>()>();

        staticinvoke <org.jdesktop.swingx.plaf.LookAndFeelAddons: void contribute(org.jdesktop.swingx.plaf.ComponentAddon)>($r3);

        return;
    }
}
