class org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler extends java.lang.Object implements org.waveprotocol.wave.model.document.DocHandler
{
    public final org.waveprotocol.wave.model.document.ObservableDocument doc;
    private final org.waveprotocol.wave.model.conversation.ConversationBlip blip;
    private final java.util.Map capabilities;
    private final com.google.wave.api.impl.EventMessageBundle messages;
    private org.waveprotocol.wave.model.wave.ParticipantId deltaAuthor;
    private java.lang.Long deltaTimestamp;
    private boolean documentChangedEventGenerated;
    final org.waveprotocol.box.server.robots.passive.EventGenerator this$0;

    public void <init>(org.waveprotocol.box.server.robots.passive.EventGenerator, org.waveprotocol.wave.model.document.ObservableDocument, org.waveprotocol.wave.model.conversation.ConversationBlip, java.util.Map, com.google.wave.api.impl.EventMessageBundle, org.waveprotocol.wave.model.wave.ParticipantId, java.lang.Long)
    {
        com.google.wave.api.impl.EventMessageBundle r5;
        org.waveprotocol.box.server.robots.passive.EventGenerator r1;
        long $l0;
        org.waveprotocol.wave.model.wave.ParticipantId r6;
        org.waveprotocol.wave.model.conversation.ConversationBlip r3;
        java.lang.Long r7;
        java.util.Map r4;
        org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler r0;
        org.waveprotocol.wave.model.document.ObservableDocument r2;

        r0 := @this: org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler;

        r1 := @parameter0: org.waveprotocol.box.server.robots.passive.EventGenerator;

        r2 := @parameter1: org.waveprotocol.wave.model.document.ObservableDocument;

        r3 := @parameter2: org.waveprotocol.wave.model.conversation.ConversationBlip;

        r4 := @parameter3: java.util.Map;

        r5 := @parameter4: com.google.wave.api.impl.EventMessageBundle;

        r6 := @parameter5: org.waveprotocol.wave.model.wave.ParticipantId;

        r7 := @parameter6: java.lang.Long;

        r0.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.box.server.robots.passive.EventGenerator this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.document.ObservableDocument doc> = r2;

        r0.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.conversation.ConversationBlip blip> = r3;

        r0.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.util.Map capabilities> = r4;

        r0.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: com.google.wave.api.impl.EventMessageBundle messages> = r5;

        $l0 = virtualinvoke r7.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: void setAuthorAndTimeStamp(org.waveprotocol.wave.model.wave.ParticipantId,long)>(r6, $l0);

        return;
    }

    public void onDocumentEvents(org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle)
    {
        com.google.wave.api.impl.EventMessageBundle $r20, $r35;
        org.waveprotocol.wave.model.wave.ParticipantId $r11, $r24;
        com.google.wave.api.event.EventType $r8, $r21;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent r4;
        java.lang.Long $r14, $r27;
        java.util.Map $r9, $r18, $r22, $r33;
        boolean $z0, $z1, $z2, $z3;
        com.google.wave.api.event.DocumentChangedEvent $r10;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$AnnotationChanged r36;
        org.waveprotocol.box.server.robots.passive.EventGenerator $r17, $r32;
        com.google.wave.api.event.AnnotatedTextChangedEvent $r23;
        org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type $r5, $r6;
        org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler r7;
        java.lang.Iterable $r1;
        org.waveprotocol.wave.model.conversation.ConversationBlip $r13, $r16, $r26, $r31;
        java.lang.String $r12, $r15, $r19, $r25, $r28, $r29, $r30, $r34;
        org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle r0;
        java.util.Iterator $r2;
        java.lang.Object $r3;

        r7 := @this: org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler;

        r0 := @parameter0: org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.indexed.DocumentHandler$EventBundle: java.lang.Iterable getEventComponents()>();

        $r2 = interfaceinvoke $r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.waveprotocol.wave.model.document.indexed.DocumentEvent) $r3;

        $r5 = virtualinvoke r4.<org.waveprotocol.wave.model.document.indexed.DocumentEvent: org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type getType()>();

        $r6 = <org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type: org.waveprotocol.wave.model.document.indexed.DocumentEvent$Type ANNOTATION_CHANGED>;

        if $r5 != $r6 goto label2;

        $r22 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.util.Map capabilities>;

        $r21 = <com.google.wave.api.event.EventType: com.google.wave.api.event.EventType ANNOTATED_TEXT_CHANGED>;

        $z3 = interfaceinvoke $r22.<java.util.Map: boolean containsKey(java.lang.Object)>($r21);

        if $z3 == 0 goto label3;

        r36 = (org.waveprotocol.wave.model.document.indexed.DocumentEvent$AnnotationChanged) r4;

        $r23 = new com.google.wave.api.event.AnnotatedTextChangedEvent;

        $r24 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.wave.ParticipantId deltaAuthor>;

        $r25 = virtualinvoke $r24.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r27 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.lang.Long deltaTimestamp>;

        $r26 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.conversation.ConversationBlip blip>;

        $r28 = interfaceinvoke $r26.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.String getId()>();

        $r30 = r36.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AnnotationChanged: java.lang.String key>;

        $r29 = r36.<org.waveprotocol.wave.model.document.indexed.DocumentEvent$AnnotationChanged: java.lang.String newValue>;

        specialinvoke $r23.<com.google.wave.api.event.AnnotatedTextChangedEvent: void <init>(com.google.wave.api.Wavelet,com.google.wave.api.impl.EventMessageBundle,java.lang.String,java.lang.Long,java.lang.String,java.lang.String,java.lang.String)>(null, null, $r25, $r27, $r28, $r30, $r29);

        $r32 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.box.server.robots.passive.EventGenerator this$0>;

        $r33 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.util.Map capabilities>;

        $r31 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.conversation.ConversationBlip blip>;

        $r34 = interfaceinvoke $r31.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.String getId()>();

        $r35 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: com.google.wave.api.impl.EventMessageBundle messages>;

        staticinvoke <org.waveprotocol.box.server.robots.passive.EventGenerator: void access$100(org.waveprotocol.box.server.robots.passive.EventGenerator,com.google.wave.api.event.Event,java.util.Map,java.lang.String,com.google.wave.api.impl.EventMessageBundle)>($r32, $r23, $r33, $r34, $r35);

        goto label3;

     label2:
        $r9 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.util.Map capabilities>;

        $r8 = <com.google.wave.api.event.EventType: com.google.wave.api.event.EventType DOCUMENT_CHANGED>;

        $z1 = interfaceinvoke $r9.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z1 == 0 goto label3;

        $z2 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: boolean documentChangedEventGenerated>;

        if $z2 != 0 goto label3;

        $r10 = new com.google.wave.api.event.DocumentChangedEvent;

        $r11 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.wave.ParticipantId deltaAuthor>;

        $r12 = virtualinvoke $r11.<org.waveprotocol.wave.model.wave.ParticipantId: java.lang.String getAddress()>();

        $r14 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.lang.Long deltaTimestamp>;

        $r13 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.conversation.ConversationBlip blip>;

        $r15 = interfaceinvoke $r13.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.String getId()>();

        specialinvoke $r10.<com.google.wave.api.event.DocumentChangedEvent: void <init>(com.google.wave.api.Wavelet,com.google.wave.api.impl.EventMessageBundle,java.lang.String,java.lang.Long,java.lang.String)>(null, null, $r12, $r14, $r15);

        $r17 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.box.server.robots.passive.EventGenerator this$0>;

        $r18 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.util.Map capabilities>;

        $r16 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.conversation.ConversationBlip blip>;

        $r19 = interfaceinvoke $r16.<org.waveprotocol.wave.model.conversation.ConversationBlip: java.lang.String getId()>();

        $r20 = r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: com.google.wave.api.impl.EventMessageBundle messages>;

        staticinvoke <org.waveprotocol.box.server.robots.passive.EventGenerator: void access$100(org.waveprotocol.box.server.robots.passive.EventGenerator,com.google.wave.api.event.Event,java.util.Map,java.lang.String,com.google.wave.api.impl.EventMessageBundle)>($r17, $r10, $r18, $r19, $r20);

        r7.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: boolean documentChangedEventGenerated> = 1;

     label3:
        goto label1;

     label4:
        return;
    }

    public void setAuthorAndTimeStamp(org.waveprotocol.wave.model.wave.ParticipantId, long)
    {
        java.lang.Long $r1, $r3;
        long l0;
        org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler r2;
        org.waveprotocol.wave.model.wave.ParticipantId r0;

        r2 := @this: org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        l0 := @parameter1: long;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Author should not be null");

        $r1 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>($r1, "Timestamp should not be null");

        r2.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: org.waveprotocol.wave.model.wave.ParticipantId deltaAuthor> = r0;

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0);

        r2.<org.waveprotocol.box.server.robots.passive.EventGenerator$EventGeneratingDocumentHandler: java.lang.Long deltaTimestamp> = $r3;

        return;
    }
}
