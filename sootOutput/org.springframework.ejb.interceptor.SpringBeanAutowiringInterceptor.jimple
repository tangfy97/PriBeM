public class org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor extends java.lang.Object
{
    private final java.util.Map beanFactoryReferences;

    public void <init>()
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        java.util.WeakHashMap $r1;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: java.util.Map beanFactoryReferences> = $r1;

        return;
    }

    public void autowireBean(javax.interceptor.InvocationContext)
    {
        javax.ejb.EJBException $r6;
        java.lang.Throwable $r7;
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        javax.interceptor.InvocationContext r1;
        java.lang.Object $r2;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r3;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: javax.interceptor.InvocationContext;

        $r2 = interfaceinvoke r1.<javax.interceptor.InvocationContext: java.lang.Object getTarget()>();

        virtualinvoke r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: void doAutowireBean(java.lang.Object)>($r2);

     label1:
        interfaceinvoke r1.<javax.interceptor.InvocationContext: java.lang.Object proceed()>();

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r3 := @caughtexception;

        $r6 = new javax.ejb.EJBException;

        specialinvoke $r6.<javax.ejb.EJBException: void <init>(java.lang.Exception)>($r3);

        $r7 = (java.lang.Throwable) $r6;

        throw $r7;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected void doAutowireBean(java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r1;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor $r0;
        org.springframework.beans.factory.BeanFactory $r3;
        java.lang.Object r2;

        r1 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        specialinvoke $r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: void <init>()>();

        virtualinvoke r1.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: void configureBeanPostProcessor(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor,java.lang.Object)>($r0, r2);

        $r3 = virtualinvoke r1.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: org.springframework.beans.factory.BeanFactory getBeanFactory(java.lang.Object)>(r2);

        virtualinvoke $r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: void setBeanFactory(org.springframework.beans.factory.BeanFactory)>($r3);

        virtualinvoke $r0.<org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor: void processInjection(java.lang.Object)>(r2);

        return;
    }

    protected void configureBeanPostProcessor(org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor, java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        java.lang.Object r2;
        org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor r1;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: org.springframework.beans.factory.'annotation'.AutowiredAnnotationBeanPostProcessor;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    protected org.springframework.beans.factory.BeanFactory getBeanFactory(java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        org.springframework.beans.factory.BeanFactory $r3, r5;
        java.lang.Object r1;
        org.springframework.beans.factory.access.BeanFactoryReference $r2;
        org.springframework.context.ApplicationContext $r4;
        boolean $z0;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: org.springframework.beans.factory.access.BeanFactoryReference getBeanFactoryReference(java.lang.Object)>(r1);

        $r3 = interfaceinvoke $r2.<org.springframework.beans.factory.access.BeanFactoryReference: org.springframework.beans.factory.BeanFactory getFactory()>();

        r5 = $r3;

        $z0 = $r3 instanceof org.springframework.context.ApplicationContext;

        if $z0 == 0 goto label1;

        $r4 = (org.springframework.context.ApplicationContext) $r3;

        r5 = interfaceinvoke $r4.<org.springframework.context.ApplicationContext: org.springframework.beans.factory.config.AutowireCapableBeanFactory getAutowireCapableBeanFactory()>();

     label1:
        return r5;
    }

    protected org.springframework.beans.factory.access.BeanFactoryReference getBeanFactoryReference(java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        java.util.Map $r5;
        java.lang.Object r1;
        java.lang.String $r2;
        org.springframework.beans.factory.access.BeanFactoryReference $r4;
        org.springframework.beans.factory.access.BeanFactoryLocator $r3;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: java.lang.String getBeanFactoryLocatorKey(java.lang.Object)>(r1);

        $r3 = virtualinvoke r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: org.springframework.beans.factory.access.BeanFactoryLocator getBeanFactoryLocator(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r3.<org.springframework.beans.factory.access.BeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryReference useBeanFactory(java.lang.String)>($r2);

        $r5 = r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: java.util.Map beanFactoryReferences>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        return $r4;
    }

    protected org.springframework.beans.factory.access.BeanFactoryLocator getBeanFactoryLocator(java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r1;
        java.lang.Object r2;
        org.springframework.beans.factory.access.BeanFactoryLocator $r0;

        r1 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r2 := @parameter0: java.lang.Object;

        $r0 = staticinvoke <org.springframework.context.access.ContextSingletonBeanFactoryLocator: org.springframework.beans.factory.access.BeanFactoryLocator getInstance()>();

        return $r0;
    }

    protected java.lang.String getBeanFactoryLocatorKey(java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        java.lang.Object r1;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public void releaseBean(javax.interceptor.InvocationContext)
    {
        javax.ejb.EJBException $r6;
        java.lang.Throwable $r7;
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        javax.interceptor.InvocationContext r1;
        java.lang.Object $r2;
        java.lang.RuntimeException $r5;
        java.lang.Exception $r3;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: javax.interceptor.InvocationContext;

        $r2 = interfaceinvoke r1.<javax.interceptor.InvocationContext: java.lang.Object getTarget()>();

        virtualinvoke r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: void doReleaseBean(java.lang.Object)>($r2);

     label1:
        interfaceinvoke r1.<javax.interceptor.InvocationContext: java.lang.Object proceed()>();

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r3 := @caughtexception;

        $r6 = new javax.ejb.EJBException;

        specialinvoke $r6.<javax.ejb.EJBException: void <init>(java.lang.Exception)>($r3);

        $r7 = (java.lang.Throwable) $r6;

        throw $r7;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    protected void doReleaseBean(java.lang.Object)
    {
        org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor r0;
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        org.springframework.beans.factory.access.BeanFactoryReference r4;

        r0 := @this: org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.springframework.ejb.interceptor.SpringBeanAutowiringInterceptor: java.util.Map beanFactoryReferences>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.springframework.beans.factory.access.BeanFactoryReference) $r3;

        if r4 == null goto label1;

        interfaceinvoke r4.<org.springframework.beans.factory.access.BeanFactoryReference: void release()>();

     label1:
        return;
    }
}
