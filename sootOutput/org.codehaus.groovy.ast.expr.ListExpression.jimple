public class org.codehaus.groovy.ast.expr.ListExpression extends org.codehaus.groovy.ast.expr.Expression
{
    private java.util.List expressions;
    private boolean wrapped;

    public void <init>()
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        java.util.ArrayList $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        specialinvoke r0.<org.codehaus.groovy.ast.expr.ListExpression: void <init>(java.util.List)>($r1);

        return;
    }

    public void <init>(java.util.List)
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        java.util.List r1;
        org.codehaus.groovy.ast.ClassNode $r2;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.ast.expr.Expression: void <init>()>();

        r0.<org.codehaus.groovy.ast.expr.ListExpression: boolean wrapped> = 0;

        r0.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List expressions> = r1;

        $r2 = <org.codehaus.groovy.ast.ClassHelper: org.codehaus.groovy.ast.ClassNode LIST_TYPE>;

        virtualinvoke r0.<org.codehaus.groovy.ast.expr.ListExpression: void setType(org.codehaus.groovy.ast.ClassNode)>($r2);

        return;
    }

    public void addExpression(org.codehaus.groovy.ast.expr.Expression)
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        java.util.List $r2;
        org.codehaus.groovy.ast.expr.Expression r1;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        r1 := @parameter0: org.codehaus.groovy.ast.expr.Expression;

        $r2 = r0.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List expressions>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.util.List getExpressions()
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        java.util.List $r1;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        $r1 = r0.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List expressions>;

        return $r1;
    }

    public void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)
    {
        org.codehaus.groovy.ast.expr.ListExpression r1;
        org.codehaus.groovy.ast.GroovyCodeVisitor r0;

        r1 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        r0 := @parameter0: org.codehaus.groovy.ast.GroovyCodeVisitor;

        interfaceinvoke r0.<org.codehaus.groovy.ast.GroovyCodeVisitor: void visitListExpression(org.codehaus.groovy.ast.expr.ListExpression)>(r1);

        return;
    }

    public org.codehaus.groovy.ast.expr.Expression transformExpression(org.codehaus.groovy.ast.expr.ExpressionTransformer)
    {
        org.codehaus.groovy.ast.expr.ListExpression $r0, r1;
        java.util.List $r2, $r4;
        org.codehaus.groovy.ast.expr.ExpressionTransformer r3;

        r1 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        r3 := @parameter0: org.codehaus.groovy.ast.expr.ExpressionTransformer;

        $r0 = new org.codehaus.groovy.ast.expr.ListExpression;

        $r2 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List getExpressions()>();

        $r4 = virtualinvoke r1.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List transformExpressions(java.util.List,org.codehaus.groovy.ast.expr.ExpressionTransformer)>($r2, r3);

        specialinvoke $r0.<org.codehaus.groovy.ast.expr.ListExpression: void <init>(java.util.List)>($r4);

        virtualinvoke $r0.<org.codehaus.groovy.ast.expr.Expression: void setSourcePosition(org.codehaus.groovy.ast.ASTNode)>(r1);

        return $r0;
    }

    public org.codehaus.groovy.ast.expr.Expression getExpression(int)
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        java.util.List $r1;
        int i0;
        java.lang.Object $r2;
        org.codehaus.groovy.ast.expr.Expression $r3;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List expressions>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(i0);

        $r3 = (org.codehaus.groovy.ast.expr.Expression) $r2;

        return $r3;
    }

    public void setWrapped(boolean)
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.expr.ListExpression: boolean wrapped> = z0;

        return;
    }

    public boolean isWrapped()
    {
        org.codehaus.groovy.ast.expr.ListExpression r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        $z0 = r0.<org.codehaus.groovy.ast.expr.ListExpression: boolean wrapped>;

        return $z0;
    }

    public java.lang.String getText()
    {
        org.codehaus.groovy.ast.expr.ListExpression r1;
        java.util.Iterator $r3;
        java.util.List $r2;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5;
        java.lang.String $r4, $r7;
        org.codehaus.groovy.ast.expr.Expression $r6;
        boolean $z0, z1;

        r1 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("[");

        z1 = 1;

        $r2 = r1.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List expressions>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        if z1 == 0 goto label2;

        z1 = 0;

        goto label3;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label3:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (org.codehaus.groovy.ast.expr.Expression) $r5;

        $r7 = virtualinvoke $r6.<org.codehaus.groovy.ast.expr.Expression: java.lang.String getText()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label1;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public java.lang.String toString()
    {
        org.codehaus.groovy.ast.expr.ListExpression r1;
        java.util.List $r4;
        java.lang.StringBuffer $r0, $r3, $r5;
        java.lang.String $r2, $r6;

        r1 := @this: org.codehaus.groovy.ast.expr.ListExpression;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = r1.<org.codehaus.groovy.ast.expr.ListExpression: java.util.List expressions>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }
}
