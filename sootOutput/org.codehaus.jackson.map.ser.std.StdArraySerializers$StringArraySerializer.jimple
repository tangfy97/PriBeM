public final class org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer extends org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase implements org.codehaus.jackson.map.ResolvableSerializer
{
    protected org.codehaus.jackson.map.JsonSerializer _elementSerializer;

    public void <init>(org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r0;
        org.codehaus.jackson.map.BeanProperty r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase: void <init>(java.lang.Class,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>(class "[Ljava/lang/String;", null, r1);

        return;
    }

    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    {
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r0;
        org.codehaus.jackson.map.TypeSerializer r1;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r1 := @parameter0: org.codehaus.jackson.map.TypeSerializer;

        return r0;
    }

    public void serializeContents(java.lang.String[], org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.SerializerProvider r6;
        java.lang.String[] r0;
        org.codehaus.jackson.map.JsonSerializer $r2, $r7;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r1;
        org.codehaus.jackson.JsonGenerator r4;
        int i0, i1;
        java.lang.String r3, $r5;

        r1 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r0 := @parameter0: java.lang.String[];

        r4 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r6 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        i0 = lengthof r0;

        if i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: org.codehaus.jackson.map.JsonSerializer _elementSerializer>;

        if $r2 == null goto label2;

        $r7 = r1.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: org.codehaus.jackson.map.JsonSerializer _elementSerializer>;

        specialinvoke r1.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: void serializeContentsSlow(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.JsonSerializer)>(r0, r4, r6, $r7);

        return;

     label2:
        i1 = 0;

     label3:
        if i1 >= i0 goto label6;

        r3 = r0[i1];

        if r3 != null goto label4;

        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void writeNull()>();

        goto label5;

     label4:
        $r5 = r0[i1];

        virtualinvoke r4.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r5);

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        return;
    }

    private void serializeContentsSlow(java.lang.String[], org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.JsonSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.SerializerProvider r4;
        java.lang.String[] r0;
        org.codehaus.jackson.map.JsonSerializer r2;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r6;
        org.codehaus.jackson.JsonGenerator r3;
        int i0, i1;
        java.lang.String r1, $r5;

        r6 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r0 := @parameter0: java.lang.String[];

        r3 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r4 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        r2 := @parameter3: org.codehaus.jackson.map.JsonSerializer;

        i1 = 0;

        i0 = lengthof r0;

     label1:
        if i1 >= i0 goto label4;

        r1 = r0[i1];

        if r1 != null goto label2;

        virtualinvoke r4.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>(r3);

        goto label3;

     label2:
        $r5 = r0[i1];

        virtualinvoke r2.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r5, r3, r4);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public void resolve(org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        java.lang.'annotation'.Annotation $r5;
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.Class $r4;
        org.codehaus.jackson.map.JsonSerializer $r3;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r1;
        org.codehaus.jackson.map.BeanProperty $r2;

        r1 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r0 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        $r2 = r1.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: org.codehaus.jackson.map.BeanProperty _property>;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>(class "Ljava/lang/String;", $r2);

        if $r3 == null goto label1;

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lorg/codehaus/jackson/map/annotate/JacksonStdImpl;");

        if $r5 != null goto label1;

        r1.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: org.codehaus.jackson.map.JsonSerializer _elementSerializer> = $r3;

     label1:
        return;
    }

    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r4;
        org.codehaus.jackson.map.SerializerProvider r3;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r0;
        org.codehaus.jackson.node.ObjectNode $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r3 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        r4 := @parameter1: java.lang.reflect.Type;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("array", 1);

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String)>("string");

        virtualinvoke $r1.<org.codehaus.jackson.node.ObjectNode: org.codehaus.jackson.JsonNode put(java.lang.String,org.codehaus.jackson.JsonNode)>("items", $r2);

        return $r1;
    }

    public volatile void serializeContents(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.JsonGenerator r2;
        org.codehaus.jackson.map.SerializerProvider r3;
        java.lang.Object r1;
        java.lang.String[] $r4;
        org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer r0;

        r0 := @this: org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.lang.String[]) r1;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer: void serializeContents(java.lang.String[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, r2, r3);

        return;
    }
}
