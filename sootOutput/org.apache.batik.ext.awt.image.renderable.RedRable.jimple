public class org.apache.batik.ext.awt.image.renderable.RedRable extends org.apache.batik.ext.awt.image.renderable.AbstractRable
{
    org.apache.batik.ext.awt.image.rendered.CachableRed src;

    public void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed)
    {
        org.apache.batik.ext.awt.image.rendered.CachableRed r1;
        org.apache.batik.ext.awt.image.renderable.RedRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        r1 := @parameter0: org.apache.batik.ext.awt.image.rendered.CachableRed;

        specialinvoke r0.<org.apache.batik.ext.awt.image.renderable.AbstractRable: void <init>(org.apache.batik.ext.awt.image.renderable.Filter)>(null);

        r0.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed src> = r1;

        return;
    }

    public org.apache.batik.ext.awt.image.rendered.CachableRed getSource()
    {
        org.apache.batik.ext.awt.image.rendered.CachableRed $r1;
        org.apache.batik.ext.awt.image.renderable.RedRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed src>;

        return $r1;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.batik.ext.awt.image.rendered.CachableRed $r2;
        org.apache.batik.ext.awt.image.renderable.RedRable r0;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed src>;

        $r3 = interfaceinvoke $r2.<java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String[] getPropertyNames()
    {
        java.lang.String[] $r2;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r1;
        org.apache.batik.ext.awt.image.renderable.RedRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        $r1 = r0.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed src>;

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>();

        return $r2;
    }

    public java.awt.geom.Rectangle2D getBounds2D()
    {
        java.awt.Rectangle $r2;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r1;
        org.apache.batik.ext.awt.image.renderable.RedRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed getSource()>();

        $r2 = interfaceinvoke $r1.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        return $r2;
    }

    public java.awt.image.RenderedImage createDefaultRendering()
    {
        org.apache.batik.ext.awt.image.rendered.CachableRed $r1;
        org.apache.batik.ext.awt.image.renderable.RedRable r0;

        r0 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        $r1 = virtualinvoke r0.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed getSource()>();

        return $r1;
    }

    public java.awt.image.RenderedImage createRendering(java.awt.image.renderable.RenderContext)
    {
        java.awt.geom.Rectangle2D $r4;
        java.awt.RenderingHints $r1, r10, $r13;
        byte $b0, $b1, $b2, $b3, $b10, $b11, $b12, $b13;
        boolean $z0, $z1;
        java.awt.Shape $r2;
        org.apache.batik.ext.awt.image.rendered.AffineRed $r15;
        org.apache.batik.ext.awt.image.renderable.RedRable r3;
        java.awt.geom.AffineTransform $r5;
        java.awt.image.renderable.RenderContext r0;
        org.apache.batik.ext.awt.image.rendered.TranslateRed $r14;
        org.apache.batik.ext.awt.image.rendered.CachableRed $r6;
        java.awt.Rectangle $r7, r11;
        int $i4, i5, $i6, i7, $i8, $i9, $i14, $i15, $i16, $i17;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, d14, $d15, $d16, $d17, $d18, d19;

        r3 := @this: org.apache.batik.ext.awt.image.renderable.RedRable;

        r0 := @parameter0: java.awt.image.renderable.RenderContext;

        $r1 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.RenderingHints getRenderingHints()>();

        r10 = $r1;

        if $r1 != null goto label1;

        $r13 = new java.awt.RenderingHints;

        specialinvoke $r13.<java.awt.RenderingHints: void <init>(java.util.Map)>(null);

        r10 = $r13;

     label1:
        $r2 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.Shape getAreaOfInterest()>();

        if $r2 == null goto label2;

        r11 = interfaceinvoke $r2.<java.awt.Shape: java.awt.Rectangle getBounds()>();

        goto label3;

     label2:
        $r4 = virtualinvoke r3.<org.apache.batik.ext.awt.image.renderable.RedRable: java.awt.geom.Rectangle2D getBounds2D()>();

        r11 = virtualinvoke $r4.<java.awt.geom.RectangularShape: java.awt.Rectangle getBounds()>();

     label3:
        $r5 = virtualinvoke r0.<java.awt.image.renderable.RenderContext: java.awt.geom.AffineTransform getTransform()>();

        $r6 = virtualinvoke r3.<org.apache.batik.ext.awt.image.renderable.RedRable: org.apache.batik.ext.awt.image.rendered.CachableRed getSource()>();

        $r7 = interfaceinvoke $r6.<org.apache.batik.ext.awt.image.rendered.CachableRed: java.awt.Rectangle getBounds()>();

        $z0 = virtualinvoke r11.<java.awt.Rectangle: boolean intersects(java.awt.Rectangle)>($r7);

        if $z0 != 0 goto label4;

        return null;

     label4:
        $z1 = virtualinvoke $r5.<java.awt.geom.AffineTransform: boolean isIdentity()>();

        if $z1 == 0 goto label5;

        return $r6;

     label5:
        $d0 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getScaleX()>();

        $b0 = $d0 cmpl 1.0;

        if $b0 != 0 goto label6;

        $d1 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getScaleY()>();

        $b1 = $d1 cmpl 1.0;

        if $b1 != 0 goto label6;

        $d2 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getShearX()>();

        $b2 = $d2 cmpl 0.0;

        if $b2 != 0 goto label6;

        $d3 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getShearY()>();

        $b3 = $d3 cmpl 0.0;

        if $b3 != 0 goto label6;

        $i4 = interfaceinvoke $r6.<java.awt.image.RenderedImage: int getMinX()>();

        $d4 = (double) $i4;

        $d5 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d6 = $d4 + $d5;

        i5 = (int) $d6;

        $i6 = interfaceinvoke $r6.<java.awt.image.RenderedImage: int getMinY()>();

        $d7 = (double) $i6;

        $d8 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d9 = $d7 + $d8;

        i7 = (int) $d9;

        $d10 = (double) i5;

        $i8 = interfaceinvoke $r6.<java.awt.image.RenderedImage: int getMinX()>();

        $d11 = (double) $i8;

        $d12 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getTranslateX()>();

        $d13 = $d11 + $d12;

        d14 = $d10 - $d13;

        $d15 = (double) i7;

        $i9 = interfaceinvoke $r6.<java.awt.image.RenderedImage: int getMinY()>();

        $d16 = (double) $i9;

        $d17 = virtualinvoke $r5.<java.awt.geom.AffineTransform: double getTranslateY()>();

        $d18 = $d16 + $d17;

        d19 = $d15 - $d18;

        $b10 = d14 cmpl -1.0E-4;

        $i14 = (int) $b10;

        if $i14 <= 0 goto label6;

        $b11 = d14 cmpg 1.0E-4;

        $i15 = (int) $b11;

        if $i15 >= 0 goto label6;

        $b12 = d19 cmpl -1.0E-4;

        $i16 = (int) $b12;

        if $i16 <= 0 goto label6;

        $b13 = d19 cmpg 1.0E-4;

        $i17 = (int) $b13;

        if $i17 >= 0 goto label6;

        $r14 = new org.apache.batik.ext.awt.image.rendered.TranslateRed;

        specialinvoke $r14.<org.apache.batik.ext.awt.image.rendered.TranslateRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,int,int)>($r6, i5, i7);

        return $r14;

     label6:
        $r15 = new org.apache.batik.ext.awt.image.rendered.AffineRed;

        specialinvoke $r15.<org.apache.batik.ext.awt.image.rendered.AffineRed: void <init>(org.apache.batik.ext.awt.image.rendered.CachableRed,java.awt.geom.AffineTransform,java.awt.RenderingHints)>($r6, $r5, r10);

        return $r15;
    }
}
