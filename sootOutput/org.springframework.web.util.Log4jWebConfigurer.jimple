public abstract class org.springframework.web.util.Log4jWebConfigurer extends java.lang.Object
{
    public static final java.lang.String CONFIG_LOCATION_PARAM;
    public static final java.lang.String REFRESH_INTERVAL_PARAM;
    public static final java.lang.String EXPOSE_WEB_APP_ROOT_PARAM;

    public void <init>()
    {
        org.springframework.web.util.Log4jWebConfigurer r0;

        r0 := @this: org.springframework.web.util.Log4jWebConfigurer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void initLogging(javax.servlet.ServletContext)
    {
        long $l0;
        java.lang.String $r1, $r5, $r6, $r7, $r11, $r13, $r17, $r19, r20;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r14;
        java.lang.IllegalArgumentException $r9, $r15;
        java.io.FileNotFoundException $r8;
        javax.servlet.ServletContext r0;
        java.lang.StringBuilder $r2, $r3, $r4, $r10, $r12, $r16, $r18;

        r0 := @parameter0: javax.servlet.ServletContext;

        $z0 = staticinvoke <org.springframework.web.util.Log4jWebConfigurer: boolean exposeWebAppRoot(javax.servlet.ServletContext)>(r0);

        if $z0 == 0 goto label01;

        staticinvoke <org.springframework.web.util.WebUtils: void setWebAppRootSystemProperty(javax.servlet.ServletContext)>(r0);

     label01:
        $r1 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>("log4jConfigLocation");

        r20 = $r1;

        if $r1 == null goto label10;

     label02:
        $z1 = staticinvoke <org.springframework.util.ResourceUtils: boolean isUrl(java.lang.String)>($r1);

        if $z1 != 0 goto label03;

        $r7 = staticinvoke <org.springframework.util.SystemPropertyUtils: java.lang.String resolvePlaceholders(java.lang.String)>($r1);

        r20 = staticinvoke <org.springframework.web.util.WebUtils: java.lang.String getRealPath(javax.servlet.ServletContext,java.lang.String)>(r0, $r7);

     label03:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Initializing log4j from [");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<javax.servlet.ServletContext: void log(java.lang.String)>($r5);

        $r6 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>("log4jRefreshInterval");

        if $r6 == null goto label07;

     label04:
        $l0 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r6);

        staticinvoke <org.springframework.util.Log4jConfigurer: void initLogging(java.lang.String,long)>(r20, $l0);

     label05:
        goto label10;

     label06:
        $r14 := @caughtexception;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid \'log4jRefreshInterval\' parameter: ");

        $r17 = virtualinvoke $r14.<java.lang.NumberFormatException: java.lang.String getMessage()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label07:
        staticinvoke <org.springframework.util.Log4jConfigurer: void initLogging(java.lang.String)>(r20);

     label08:
        goto label10;

     label09:
        $r8 := @caughtexception;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Invalid \'log4jConfigLocation\' parameter: ");

        $r11 = virtualinvoke $r8.<java.io.FileNotFoundException: java.lang.String getMessage()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label10:
        return;

        catch java.lang.NumberFormatException from label04 to label05 with label06;
        catch java.io.FileNotFoundException from label02 to label08 with label09;
    }

    public static void shutdownLogging(javax.servlet.ServletContext)
    {
        java.lang.Throwable $r1;
        javax.servlet.ServletContext r0;
        boolean $z0, $z1;

        r0 := @parameter0: javax.servlet.ServletContext;

        interfaceinvoke r0.<javax.servlet.ServletContext: void log(java.lang.String)>("Shutting down log4j");

     label1:
        staticinvoke <org.springframework.util.Log4jConfigurer: void shutdownLogging()>();

        goto label4;

     label2:
        $r1 := @caughtexception;

        $z1 = staticinvoke <org.springframework.web.util.Log4jWebConfigurer: boolean exposeWebAppRoot(javax.servlet.ServletContext)>(r0);

        if $z1 == 0 goto label3;

        staticinvoke <org.springframework.web.util.WebUtils: void removeWebAppRootSystemProperty(javax.servlet.ServletContext)>(r0);

     label3:
        throw $r1;

     label4:
        $z0 = staticinvoke <org.springframework.web.util.Log4jWebConfigurer: boolean exposeWebAppRoot(javax.servlet.ServletContext)>(r0);

        if $z0 == 0 goto label5;

        staticinvoke <org.springframework.web.util.WebUtils: void removeWebAppRootSystemProperty(javax.servlet.ServletContext)>(r0);

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    private static boolean exposeWebAppRoot(javax.servlet.ServletContext)
    {
        java.lang.Boolean $r2;
        javax.servlet.ServletContext r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @parameter0: javax.servlet.ServletContext;

        $r1 = interfaceinvoke r0.<javax.servlet.ServletContext: java.lang.String getInitParameter(java.lang.String)>("log4jExposeWebAppRoot");

        if $r1 == null goto label1;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static void <clinit>()
    {
        <org.springframework.web.util.Log4jWebConfigurer: java.lang.String EXPOSE_WEB_APP_ROOT_PARAM> = "log4jExposeWebAppRoot";

        <org.springframework.web.util.Log4jWebConfigurer: java.lang.String REFRESH_INTERVAL_PARAM> = "log4jRefreshInterval";

        <org.springframework.web.util.Log4jWebConfigurer: java.lang.String CONFIG_LOCATION_PARAM> = "log4jConfigLocation";

        return;
    }
}
