class org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher extends java.lang.Object implements java.awt.KeyEventDispatcher
{
    private org.jdesktop.swingx.JXLoginPane$CapsOnTest cot;
    private boolean tested;
    private int retry;
    final org.jdesktop.swingx.JXLoginPane this$0;

    public void <init>(org.jdesktop.swingx.JXLoginPane, org.jdesktop.swingx.JXLoginPane$CapsOnTest)
    {
        org.jdesktop.swingx.JXLoginPane r1;
        org.jdesktop.swingx.JXLoginPane$CapsOnTest r2;
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0;

        r0 := @this: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        r1 := @parameter0: org.jdesktop.swingx.JXLoginPane;

        r2 := @parameter1: org.jdesktop.swingx.JXLoginPane$CapsOnTest;

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: boolean tested> = 0;

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: int retry> = 0;

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane$CapsOnTest cot> = r2;

        return;
    }

    public boolean dispatchKeyEvent(java.awt.event.KeyEvent)
    {
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0;
        char $c4;
        java.awt.event.KeyEvent r1;
        org.jdesktop.swingx.JXLoginPane $r2, $r3, $r4;
        int $i0, $i1, $i2, $i3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        r1 := @parameter0: java.awt.event.KeyEvent;

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: boolean tested> = 1;

        $i0 = virtualinvoke r1.<java.awt.event.KeyEvent: int getID()>();

        if $i0 == 401 goto label1;

        return 1;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane this$0>;

        $z0 = staticinvoke <org.jdesktop.swingx.JXLoginPane: boolean access$1600(org.jdesktop.swingx.JXLoginPane)>($r2);

        if $z0 == 0 goto label4;

        $i2 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i2 <= 64 goto label4;

        $i3 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i3 >= 91 goto label4;

        $r3 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane this$0>;

        $z1 = virtualinvoke r1.<java.awt.event.KeyEvent: boolean isShiftDown()>();

        if $z1 != 0 goto label2;

        $c4 = virtualinvoke r1.<java.awt.event.KeyEvent: char getKeyChar()>();

        $z2 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>($c4);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        staticinvoke <org.jdesktop.swingx.JXLoginPane: void access$100(org.jdesktop.swingx.JXLoginPane,boolean)>($r3, $z3);

     label4:
        $r4 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane this$0>;

        $z4 = staticinvoke <org.jdesktop.swingx.JXLoginPane: boolean access$1600(org.jdesktop.swingx.JXLoginPane)>($r4);

        if $z4 == 0 goto label5;

        $i1 = virtualinvoke r1.<java.awt.event.KeyEvent: int getKeyCode()>();

        if $i1 != 8 goto label5;

        virtualinvoke r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: void uninstall()>();

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: int retry> = 0;

     label5:
        return 1;
    }

    void uninstall()
    {
        java.awt.KeyboardFocusManager $r2;
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0, $r4;
        org.jdesktop.swingx.JXLoginPane $r1;
        org.jdesktop.swingx.JXLoginPane$CapsOnTest $r3, $r5;

        r0 := @this: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        $r1 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane this$0>;

        staticinvoke <org.jdesktop.swingx.JXLoginPane: boolean access$1602(org.jdesktop.swingx.JXLoginPane,boolean)>($r1, 0);

        $r2 = staticinvoke <java.awt.KeyboardFocusManager: java.awt.KeyboardFocusManager getCurrentKeyboardFocusManager()>();

        virtualinvoke $r2.<java.awt.KeyboardFocusManager: void removeKeyEventDispatcher(java.awt.KeyEventDispatcher)>(r0);

        $r3 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane$CapsOnTest cot>;

        $r4 = $r3.<org.jdesktop.swingx.JXLoginPane$CapsOnTest: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher ked>;

        if $r4 != r0 goto label1;

        $r5 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane$CapsOnTest cot>;

        $r5.<org.jdesktop.swingx.JXLoginPane$CapsOnTest: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher ked> = null;

     label1:
        return;
    }

    void cleanOnBogusFocus()
    {
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher$1 $r0;
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r1;

        r1 := @this: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        $r0 = new org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher$1;

        specialinvoke $r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher$1: void <init>(org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher)>(r1);

        staticinvoke <javax.swing.SwingUtilities: void invokeLater(java.lang.Runnable)>($r0);

        return;
    }

    static boolean access$1700(org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher)
    {
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0;
        boolean $z0;

        r0 := @parameter0: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        $z0 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: boolean tested>;

        return $z0;
    }

    static int access$1800(org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher)
    {
        int $i0;
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0;

        r0 := @parameter0: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        $i0 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: int retry>;

        return $i0;
    }

    static org.jdesktop.swingx.JXLoginPane$CapsOnTest access$2000(org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher)
    {
        org.jdesktop.swingx.JXLoginPane$CapsOnTest $r1;
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0;

        r0 := @parameter0: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        $r1 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: org.jdesktop.swingx.JXLoginPane$CapsOnTest cot>;

        return $r1;
    }

    static int access$1808(org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher)
    {
        int $i0, $i1;
        org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher r0;

        r0 := @parameter0: org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher;

        $i0 = r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: int retry>;

        $i1 = $i0 + 1;

        r0.<org.jdesktop.swingx.JXLoginPane$RemovableKeyEventDispatcher: int retry> = $i1;

        return $i0;
    }
}
