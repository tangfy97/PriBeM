public abstract class org.codehaus.groovy.ant.CompileTaskSupport extends org.apache.tools.ant.taskdefs.MatchingTask
{
    protected final org.codehaus.groovy.ant.LoggingHelper log;
    protected org.apache.tools.ant.types.Path src;
    protected java.io.File destdir;
    protected org.apache.tools.ant.types.Path classpath;
    protected org.codehaus.groovy.control.CompilerConfiguration config;
    protected boolean failOnError;
    static final boolean $assertionsDisabled;
    static java.lang.Class class$org$codehaus$groovy$ant$CompileTaskSupport;

    public void <init>()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        org.apache.tools.ant.Task $r5;
        org.codehaus.groovy.ant.LoggingHelper $r3;
        org.codehaus.groovy.control.CompilerConfiguration $r4;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        specialinvoke r0.<org.apache.tools.ant.taskdefs.MatchingTask: void <init>()>();

        $r3 = new org.codehaus.groovy.ant.LoggingHelper;

        $r5 = (org.apache.tools.ant.Task) r0;

        specialinvoke $r3.<org.codehaus.groovy.ant.LoggingHelper: void <init>(org.apache.tools.ant.Task)>($r5);

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.codehaus.groovy.ant.LoggingHelper log> = $r3;

        $r4 = new org.codehaus.groovy.control.CompilerConfiguration;

        specialinvoke $r4.<org.codehaus.groovy.control.CompilerConfiguration: void <init>()>();

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.codehaus.groovy.control.CompilerConfiguration config> = $r4;

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: boolean failOnError> = 1;

        return;
    }

    public void setFailonerror(boolean)
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: boolean failOnError> = z0;

        return;
    }

    public boolean getFailonerror()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $z0 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: boolean failOnError>;

        return $z0;
    }

    public org.apache.tools.ant.types.Path createSrc()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        org.apache.tools.ant.Project $r5;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setSrcdir(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        java.lang.AssertionError $r4;
        boolean $z0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $z0 = <org.codehaus.groovy.ant.CompileTaskSupport: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label2;

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src> = r2;

        goto label3;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label3:
        return;
    }

    public org.apache.tools.ant.types.Path getSrcdir()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src>;

        return $r1;
    }

    public void setDestdir(java.io.File)
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        java.lang.AssertionError $r2;
        java.io.File r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        r1 := @parameter0: java.io.File;

        $z0 = <org.codehaus.groovy.ant.CompileTaskSupport: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.codehaus.groovy.ant.CompileTaskSupport: java.io.File destdir> = r1;

        return;
    }

    public void setClasspath(org.apache.tools.ant.types.Path)
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        java.lang.AssertionError $r4;
        boolean $z0;
        org.apache.tools.ant.types.Path $r1, r2, $r3;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        r2 := @parameter0: org.apache.tools.ant.types.Path;

        $z0 = <org.codehaus.groovy.ant.CompileTaskSupport: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label1:
        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label2;

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath> = r2;

        goto label3;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath>;

        virtualinvoke $r3.<org.apache.tools.ant.types.Path: void append(org.apache.tools.ant.types.Path)>(r2);

     label3:
        return;
    }

    public org.apache.tools.ant.types.Path getClasspath()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        org.apache.tools.ant.types.Path $r1;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath>;

        return $r1;
    }

    public org.apache.tools.ant.types.Path createClasspath()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        org.apache.tools.ant.Project $r5;
        org.apache.tools.ant.types.Path $r1, $r2, $r3, $r4;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath>;

        if $r1 != null goto label1;

        $r4 = new org.apache.tools.ant.types.Path;

        $r5 = virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.Project getProject()>();

        specialinvoke $r4.<org.apache.tools.ant.types.Path: void <init>(org.apache.tools.ant.Project)>($r5);

        r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath> = $r4;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path classpath>;

        $r3 = virtualinvoke $r2.<org.apache.tools.ant.types.Path: org.apache.tools.ant.types.Path createPath()>();

        return $r3;
    }

    public void setClasspathRef(org.apache.tools.ant.types.Reference)
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        java.lang.AssertionError $r3;
        boolean $z0;
        org.apache.tools.ant.types.Path $r1;
        org.apache.tools.ant.types.Reference r2;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        r2 := @parameter0: org.apache.tools.ant.types.Reference;

        $z0 = <org.codehaus.groovy.ant.CompileTaskSupport: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r1 = virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path createClasspath()>();

        virtualinvoke $r1.<org.apache.tools.ant.types.Path: void setRefid(org.apache.tools.ant.types.Reference)>(r2);

        return;
    }

    public org.codehaus.groovy.control.CompilerConfiguration createConfiguration()
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        org.codehaus.groovy.control.CompilerConfiguration $r1;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.codehaus.groovy.control.CompilerConfiguration config>;

        return $r1;
    }

    protected void validate() throws org.apache.tools.ant.BuildException
    {
        java.lang.Throwable $r19, $r20, $r21;
        org.apache.tools.ant.Location $r10, $r12, $r14;
        org.apache.tools.ant.types.Path $r1;
        java.lang.StringBuffer $r6, $r8, $r17;
        java.lang.String $r9;
        boolean $z0;
        org.apache.tools.ant.BuildException $r15, $r16, $r18;
        java.io.File $r2, $r3, $r7;
        org.codehaus.groovy.ant.CompileTaskSupport r0;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r1 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path src>;

        if $r1 != null goto label1;

        $r15 = new org.apache.tools.ant.BuildException;

        $r14 = virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r15.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Missing attribute: srcdir (or one or more nested <src> elements).", $r14);

        $r19 = (java.lang.Throwable) $r15;

        throw $r19;

     label1:
        $r2 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: java.io.File destdir>;

        if $r2 != null goto label2;

        $r16 = new org.apache.tools.ant.BuildException;

        $r12 = virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r16.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>("Missing attribute: destdir", $r12);

        $r20 = (java.lang.Throwable) $r16;

        throw $r20;

     label2:
        $r3 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: java.io.File destdir>;

        $z0 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label3;

        $r18 = new org.apache.tools.ant.BuildException;

        $r17 = new java.lang.StringBuffer;

        specialinvoke $r17.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Destination directory does not exist: ");

        $r7 = r0.<org.codehaus.groovy.ant.CompileTaskSupport: java.io.File destdir>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r18.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,org.apache.tools.ant.Location)>($r9, $r10);

        $r21 = (java.lang.Throwable) $r18;

        throw $r21;

     label3:
        return;
    }

    protected groovy.lang.GroovyClassLoader createClassLoader()
    {
        java.lang.String[] $r5;
        org.codehaus.groovy.control.CompilerConfiguration $r3;
        org.apache.tools.ant.types.Path $r4;
        org.codehaus.groovy.ant.CompileTaskSupport r2;
        int $i0, i1;
        java.lang.ClassLoader $r0;
        java.lang.String r6;
        groovy.lang.GroovyClassLoader $r1;

        r2 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        $r0 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        $r1 = new groovy.lang.GroovyClassLoader;

        $r3 = r2.<org.codehaus.groovy.ant.CompileTaskSupport: org.codehaus.groovy.control.CompilerConfiguration config>;

        specialinvoke $r1.<groovy.lang.GroovyClassLoader: void <init>(java.lang.ClassLoader,org.codehaus.groovy.control.CompilerConfiguration)>($r0, $r3);

        $r4 = virtualinvoke r2.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.types.Path getClasspath()>();

        if $r4 == null goto label2;

        $r5 = virtualinvoke $r4.<org.apache.tools.ant.types.Path: java.lang.String[] list()>();

        i1 = 0;

     label1:
        $i0 = lengthof $r5;

        if i1 >= $i0 goto label2;

        r6 = $r5[i1];

        virtualinvoke $r1.<groovy.lang.GroovyClassLoader: void addClasspath(java.lang.String)>(r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        return $r1;
    }

    protected void handleException(java.lang.Exception) throws org.apache.tools.ant.BuildException
    {
        java.io.PrintWriter $r13;
        java.lang.Throwable $r15;
        java.io.StringWriter $r11;
        org.apache.tools.ant.Location $r8;
        org.apache.tools.ant.BuildException $r14;
        java.lang.AssertionError $r10;
        java.lang.Exception r2;
        org.codehaus.groovy.ant.CompileTaskSupport r5;
        org.codehaus.groovy.ant.LoggingHelper $r6;
        java.lang.String $r4;
        boolean $z0, $z1;
        org.codehaus.groovy.tools.ErrorReporter $r12;

        r5 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        r2 := @parameter0: java.lang.Exception;

        $z0 = <org.codehaus.groovy.ant.CompileTaskSupport: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r2 != null goto label1;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label1:
        $r11 = new java.io.StringWriter;

        specialinvoke $r11.<java.io.StringWriter: void <init>()>();

        $r12 = new org.codehaus.groovy.tools.ErrorReporter;

        specialinvoke $r12.<org.codehaus.groovy.tools.ErrorReporter: void <init>(java.lang.Throwable,boolean)>(r2, 0);

        $r13 = new java.io.PrintWriter;

        specialinvoke $r13.<java.io.PrintWriter: void <init>(java.io.Writer)>($r11);

        virtualinvoke $r12.<org.codehaus.groovy.tools.ErrorReporter: void write(java.io.PrintWriter)>($r13);

        $r4 = virtualinvoke $r11.<java.io.StringWriter: java.lang.String toString()>();

        $z1 = r5.<org.codehaus.groovy.ant.CompileTaskSupport: boolean failOnError>;

        if $z1 == 0 goto label2;

        $r14 = new org.apache.tools.ant.BuildException;

        $r8 = virtualinvoke r5.<org.codehaus.groovy.ant.CompileTaskSupport: org.apache.tools.ant.Location getLocation()>();

        specialinvoke $r14.<org.apache.tools.ant.BuildException: void <init>(java.lang.String,java.lang.Throwable,org.apache.tools.ant.Location)>($r4, r2, $r8);

        $r15 = (java.lang.Throwable) $r14;

        throw $r15;

     label2:
        $r6 = r5.<org.codehaus.groovy.ant.CompileTaskSupport: org.codehaus.groovy.ant.LoggingHelper log>;

        virtualinvoke $r6.<org.codehaus.groovy.ant.LoggingHelper: void error(java.lang.String)>($r4);

        return;
    }

    public void execute() throws org.apache.tools.ant.BuildException
    {
        org.codehaus.groovy.ant.CompileTaskSupport r0;
        java.lang.Exception $r1;

        r0 := @this: org.codehaus.groovy.ant.CompileTaskSupport;

        virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: void validate()>();

     label1:
        virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: void compile()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        virtualinvoke r0.<org.codehaus.groovy.ant.CompileTaskSupport: void handleException(java.lang.Exception)>($r1);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected abstract void compile() throws java.lang.Exception;

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.codehaus.groovy.ant.CompileTaskSupport: java.lang.Class class$org$codehaus$groovy$ant$CompileTaskSupport>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.codehaus.groovy.ant.CompileTaskSupport: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.ant.CompileTaskSupport");

        <org.codehaus.groovy.ant.CompileTaskSupport: java.lang.Class class$org$codehaus$groovy$ant$CompileTaskSupport> = $r1;

        goto label2;

     label1:
        $r1 = <org.codehaus.groovy.ant.CompileTaskSupport: java.lang.Class class$org$codehaus$groovy$ant$CompileTaskSupport>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.codehaus.groovy.ant.CompileTaskSupport: boolean $assertionsDisabled> = $z1;

        return;
    }
}
