public final class org.apache.cxf.helpers.DOMUtils extends java.lang.Object
{
    private static final java.util.Map DOCUMENT_BUILDERS;
    private static final java.lang.String XMLNAMESPACE;

    private void <init>()
    {
        org.apache.cxf.helpers.DOMUtils r0;

        r0 := @this: org.apache.cxf.helpers.DOMUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static javax.xml.parsers.DocumentBuilder getDocumentBuilder() throws javax.xml.parsers.ParserConfigurationException
    {
        java.lang.Thread $r0;
        java.util.Map $r2, $r6;
        javax.xml.parsers.DocumentBuilder $r5, $r8, r11;
        java.lang.Object $r3;
        java.lang.Class $r9;
        java.lang.ClassLoader $r1, r10;
        javax.xml.parsers.DocumentBuilderFactory $r4, $r7;

        $r0 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r1 = virtualinvoke $r0.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        r10 = $r1;

        if $r1 != null goto label1;

        $r9 = class "Lorg/apache/cxf/helpers/DOMUtils;";

        r10 = virtualinvoke $r9.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label1:
        if r10 != null goto label2;

        $r7 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r8 = virtualinvoke $r7.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        return $r8;

     label2:
        $r2 = <org.apache.cxf.helpers.DOMUtils: java.util.Map DOCUMENT_BUILDERS>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r10);

        r11 = (javax.xml.parsers.DocumentBuilder) $r3;

        if r11 != null goto label3;

        $r4 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r4.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r5 = virtualinvoke $r4.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        r11 = $r5;

        $r6 = <org.apache.cxf.helpers.DOMUtils: java.util.Map DOCUMENT_BUILDERS>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r10, $r5);

     label3:
        return r11;
    }

    public static org.w3c.dom.Document newDocument()
    {
        org.w3c.dom.Document $r0;

        $r0 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Document createDocument()>();

        return $r0;
    }

    public static org.w3c.dom.Document createDocument()
    {
        javax.xml.parsers.ParserConfigurationException $r2;
        org.w3c.dom.Document $r1;
        javax.xml.parsers.DocumentBuilder $r0;
        java.lang.RuntimeException $r3;

     label1:
        $r0 = staticinvoke <org.apache.cxf.helpers.DOMUtils: javax.xml.parsers.DocumentBuilder getDocumentBuilder()>();

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
    }

    public static java.lang.String getAttributeValueEmptyNull(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.String r1, $r3;
        org.w3c.dom.Attr $r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r2.<org.w3c.dom.Attr: java.lang.String getValue()>();

        return $r3;
    }

    public static java.lang.String getAllContent(org.w3c.dom.Node)
    {
        java.lang.StringBuilder $r0;
        java.lang.String $r2;
        org.w3c.dom.Node r1;

        r1 := @parameter0: org.w3c.dom.Node;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void getAllContent(org.w3c.dom.Node,java.lang.StringBuilder)>(r1, $r0);

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    private static void getAllContent(org.w3c.dom.Node, java.lang.StringBuilder)
    {
        org.w3c.dom.Text $r2;
        org.w3c.dom.Node r0, r4;
        java.lang.StringBuilder r1;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.w3c.dom.Node;

        r1 := @parameter1: java.lang.StringBuilder;

        r4 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r4 == null goto label4;

        $z0 = r4 instanceof org.w3c.dom.Text;

        if $z0 == 0 goto label2;

        $z1 = r4 instanceof org.w3c.dom.Comment;

        if $z1 != 0 goto label2;

        $r2 = (org.w3c.dom.Text) r4;

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Text: java.lang.String getData()>();

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label3;

     label2:
        staticinvoke <org.apache.cxf.helpers.DOMUtils: void getAllContent(org.w3c.dom.Node,java.lang.StringBuilder)>(r4, r1);

     label3:
        r4 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label4:
        return;
    }

    public static java.lang.String getContent(org.w3c.dom.Node)
    {
        java.lang.String $r1, r2;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getRawContent(org.w3c.dom.Node)>(r0);

        r2 = $r1;

        if $r1 == null goto label1;

        r2 = virtualinvoke $r1.<java.lang.String: java.lang.String trim()>();

     label1:
        return r2;
    }

    public static java.lang.String getRawContent(org.w3c.dom.Node)
    {
        org.w3c.dom.Text $r3, $r5, $r6;
        short $s0;
        org.w3c.dom.Node r0, r10;
        int $i1;
        java.lang.StringBuilder r8, $r11;
        java.lang.String $r1, $r4, $r7, r9;

        r0 := @parameter0: org.w3c.dom.Node;

        if r0 != null goto label1;

        return null;

     label1:
        r8 = null;

        r9 = null;

        r10 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label2:
        if r10 == null goto label6;

        $s0 = interfaceinvoke r10.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        if $i1 != 3 goto label5;

        if r8 == null goto label3;

        $r6 = (org.w3c.dom.Text) r10;

        $r7 = interfaceinvoke $r6.<org.w3c.dom.Text: java.lang.String getNodeValue()>();

        virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        goto label5;

     label3:
        if r9 != null goto label4;

        $r5 = (org.w3c.dom.Text) r10;

        r9 = interfaceinvoke $r5.<org.w3c.dom.Text: java.lang.String getNodeValue()>();

        goto label5;

     label4:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>(java.lang.String)>(r9);

        $r3 = (org.w3c.dom.Text) r10;

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Text: java.lang.String getNodeValue()>();

        r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        r9 = null;

     label5:
        r10 = interfaceinvoke r10.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label2;

     label6:
        if r8 == null goto label7;

        $r1 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label7:
        return r9;
    }

    public static org.w3c.dom.Node getChild(org.w3c.dom.Node, java.lang.String)
    {
        short $s0;
        org.w3c.dom.Node r0, $r1, r4;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r1 != null goto label2;

        return null;

     label2:
        r4 = $r1;

     label3:
        if r4 == null goto label7;

        $s0 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 == 1 goto label4;

        goto label6;

     label4:
        if r2 == null goto label5;

        $r3 = interfaceinvoke r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        return r4;

     label5:
        if r2 != null goto label6;

        return r4;

     label6:
        r4 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label3;

     label7:
        return null;
    }

    public static boolean hasAttribute(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label3;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 0;
    }

    public static java.lang.String getAttribute(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.Node r0, $r3;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String r2, $r4;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node getNamedItem(java.lang.String)>(r2);

        if $r3 != null goto label2;

        return null;

     label2:
        $r4 = interfaceinvoke $r3.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r4;
    }

    public static java.lang.String getAttribute(org.w3c.dom.Element, javax.xml.namespace.QName)
    {
        org.w3c.dom.Attr r6;
        org.w3c.dom.Element r2;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r3, $r4, $r5, $r7;
        boolean $z0;

        r2 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $z0 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        r6 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNode(java.lang.String)>($r5);

        goto label2;

     label1:
        $r3 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r4 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        r6 = interfaceinvoke r2.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>($r3, $r4);

     label2:
        if r6 != null goto label3;

        $r7 = null;

        goto label4;

     label3:
        $r7 = interfaceinvoke r6.<org.w3c.dom.Attr: java.lang.String getValue()>();

     label4:
        return $r7;
    }

    public static void setAttribute(org.w3c.dom.Node, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Document $r2;
        org.w3c.dom.Node r0;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String r3, r5;
        org.w3c.dom.Attr $r4;

        r0 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        $r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = interfaceinvoke $r2.<org.w3c.dom.Document: org.w3c.dom.Attr createAttributeNS(java.lang.String,java.lang.String)>(null, r3);

        interfaceinvoke $r4.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>(r5);

        interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node setNamedItem(org.w3c.dom.Node)>($r4);

        return;
    }

    public static void removeAttribute(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String r2;
        org.w3c.dom.Node r0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.NamedNodeMap getAttributes()>();

        interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node removeNamedItem(java.lang.String)>(r2);

        return;
    }

    public static void setText(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.Text $r4;
        org.w3c.dom.Document $r3;
        org.w3c.dom.Node r0, $r1;
        java.lang.String r2;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Node getChild(org.w3c.dom.Node,int)>(r0, 3);

        if $r1 != null goto label1;

        $r3 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

        $r4 = interfaceinvoke $r3.<org.w3c.dom.Document: org.w3c.dom.Text createTextNode(java.lang.String)>(r2);

        interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r4);

        return;

     label1:
        interfaceinvoke $r1.<org.w3c.dom.Node: void setNodeValue(java.lang.String)>(r2);

        return;
    }

    public static org.w3c.dom.Element findChildWithAtt(org.w3c.dom.Node, java.lang.String, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r11;
        org.w3c.dom.Node r0, $r1, $r6, $r9;
        java.lang.String r2, r3, r4, $r5, $r7, $r8, $r10;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r2 := @parameter3: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Node getChild(org.w3c.dom.Node,int)>(r0, 1);

        r11 = (org.w3c.dom.Element) $r1;

        if r2 != null goto label3;

     label1:
        if r11 == null goto label5;

        if r3 == null goto label2;

        $r10 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r10);

        if $z2 == 0 goto label5;

     label2:
        $r8 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getAttribute(org.w3c.dom.Node,java.lang.String)>(r11, r4);

        if $r8 == null goto label5;

        $r9 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Node getNext(org.w3c.dom.Node,java.lang.String,int)>(r11, r3, 1);

        r11 = (org.w3c.dom.Element) $r9;

        goto label1;

     label3:
        if r11 == null goto label5;

        if r3 == null goto label4;

        $r7 = interfaceinvoke r11.<org.w3c.dom.Element: java.lang.String getNodeName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label5;

     label4:
        $r5 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getAttribute(org.w3c.dom.Node,java.lang.String)>(r11, r4);

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label5;

        $r6 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Node getNext(org.w3c.dom.Node,java.lang.String,int)>(r11, r3, 1);

        r11 = (org.w3c.dom.Element) $r6;

        goto label3;

     label5:
        return r11;
    }

    public static java.lang.String getChildContent(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.Node r0, $r1, r5;
        java.lang.String r2, $r3, $r4;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

        if $r1 != null goto label1;

        return null;

     label1:
        r5 = $r1;

     label2:
        if r5 == null goto label4;

        $r3 = interfaceinvoke r5.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label3;

        $r4 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getRawContent(org.w3c.dom.Node)>(r5);

        return $r4;

     label3:
        r5 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label2;

     label4:
        return null;
    }

    public static javax.xml.namespace.QName getElementQName(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r1;
        javax.xml.namespace.QName $r0;
        java.lang.String $r2, $r3;

        r1 := @parameter0: org.w3c.dom.Element;

        $r0 = new javax.xml.namespace.QName;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r3 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r2, $r3);

        return $r0;
    }

    public static javax.xml.namespace.QName createQName(java.lang.String, org.w3c.dom.Node)
    {
        java.lang.RuntimeException $r14;
        org.w3c.dom.Node r3;
        int $i0, $i1, $i3;
        java.lang.StringBuilder $r7, $r8, $r13;
        java.lang.String r0, $r1, $r2, $r4, $r9;
        javax.xml.namespace.QName $r12, $r15;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: org.w3c.dom.Node;

        if r0 != null goto label1;

        return null;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(":");

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r12 = new javax.xml.namespace.QName;

        specialinvoke $r12.<javax.xml.namespace.QName: void <init>(java.lang.String)>(r0);

        return $r12;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r4 = interfaceinvoke r3.<org.w3c.dom.Node: java.lang.String lookupNamespaceURI(java.lang.String)>($r1);

        if $r4 == null goto label3;

        if $r2 != null goto label4;

     label3:
        $r14 = new java.lang.RuntimeException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid QName in mapping: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r9);

        throw $r14;

     label4:
        $r15 = new javax.xml.namespace.QName;

        specialinvoke $r15.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r4, $r2, $r1);

        return $r15;
    }

    public static javax.xml.namespace.QName convertStringToQName(java.lang.String)
    {
        java.lang.String r0;
        javax.xml.namespace.QName $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String,java.lang.String)>(r0, "");

        return $r1;
    }

    public static javax.xml.namespace.QName convertStringToQName(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String r0, $r1, $r2, r4;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(123);

        if $i0 == 0 goto label1;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String)>(r0);

        return $r5;

     label1:
        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(125);

        $i2 = $i0 + 1;

        if $i1 <= $i2 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        if $i1 < $i4 goto label3;

     label2:
        return null;

     label3:
        $i5 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i5, $i1);

        $i6 = $i1 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i6);

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r1, $r2, r4);

        return $r3;
    }

    public static java.util.Set convertStringsToQNames(java.util.List)
    {
        java.util.Iterator $r2;
        java.util.Set r6;
        java.util.List r0;
        int $i0;
        java.lang.Object $r3;
        java.lang.String r4;
        javax.xml.namespace.QName $r5;
        java.util.LinkedHashSet $r1;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r6 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();

        if r0 == null goto label2;

        $r1 = new java.util.LinkedHashSet;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>(int)>($i0);

        r6 = $r1;

        $r2 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = staticinvoke <org.apache.cxf.helpers.DOMUtils: javax.xml.namespace.QName convertStringToQName(java.lang.String)>(r4);

        interfaceinvoke $r1.<java.util.Set: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        return r6;
    }

    public static org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Element $r1;
        org.w3c.dom.Node r0, r2;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r2 == null goto label2;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if 1 == $s0 goto label2;

        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        if r2 != null goto label3;

        return null;

     label3:
        $r1 = (org.w3c.dom.Element) r2;

        return $r1;
    }

    public static org.w3c.dom.Element getNextElement(org.w3c.dom.Element)
    {
        short $s0;
        org.w3c.dom.Element r0, $r1;
        org.w3c.dom.Node r2;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getNextSibling()>();

     label1:
        if r2 == null goto label3;

        $s0 = interfaceinvoke r2.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label2;

        $r1 = (org.w3c.dom.Element) r2;

        return $r1;

     label2:
        r2 = interfaceinvoke r2.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label3:
        return null;
    }

    public static org.w3c.dom.Element getFirstChildWithName(org.w3c.dom.Element, javax.xml.namespace.QName)
    {
        org.w3c.dom.Element r3, $r4;
        javax.xml.namespace.QName r0;
        java.lang.String $r1, $r2;

        r3 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r2 = virtualinvoke r0.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r4 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstChildWithName(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r3, $r1, $r2);

        return $r4;
    }

    public static org.w3c.dom.Element getFirstChildWithName(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0, r1;
        org.w3c.dom.Node r6;
        java.lang.String $r2, r3, r4, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r6 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r6 == null goto label5;

        $z0 = r6 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label4;

        r1 = (org.w3c.dom.Element) r6;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        if $r2 != null goto label2;

        $r7 = "";

        goto label3;

     label2:
        $r7 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

     label3:
        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label4;

        return r1;

     label4:
        r6 = interfaceinvoke r6.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label5:
        return null;
    }

    public static java.util.List getChildrenWithName(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        java.util.ArrayList $r0;
        org.w3c.dom.Element r1, r2;
        org.w3c.dom.Node r7;
        java.lang.String $r3, r4, r5, $r6, $r8;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r7 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r7 == null goto label5;

        $z0 = r7 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label4;

        r2 = (org.w3c.dom.Element) r7;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        if $r3 != null goto label2;

        $r8 = "";

        goto label3;

     label2:
        $r8 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

     label3:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z2 = virtualinvoke r5.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        r7 = interfaceinvoke r7.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label5:
        return $r0;
    }

    public static java.util.List getChildrenWithNamespace(org.w3c.dom.Element, java.lang.String)
    {
        java.util.ArrayList $r0;
        org.w3c.dom.Element r1, r2;
        org.w3c.dom.Node r5;
        java.lang.String $r3, r4, $r6;
        boolean $z0, $z1;

        r1 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r5 = interfaceinvoke r1.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r5 == null goto label5;

        $z0 = r5 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label4;

        r2 = (org.w3c.dom.Element) r5;

        $r3 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        if $r3 != null goto label2;

        $r6 = "";

        goto label3;

     label2:
        $r6 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

     label3:
        $z1 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label4;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        r5 = interfaceinvoke r5.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label5:
        return $r0;
    }

    public static org.w3c.dom.Node getChild(org.w3c.dom.Node, int)
    {
        short $s1;
        org.w3c.dom.Node r0, r1;
        int i0, $i2;

        r0 := @parameter0: org.w3c.dom.Node;

        i0 := @parameter1: int;

        r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getFirstChild()>();

     label1:
        if r1 == null goto label2;

        $s1 = interfaceinvoke r1.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s1;

        if i0 == $i2 goto label2;

        r1 = interfaceinvoke r1.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label1;

     label2:
        if r1 != null goto label3;

        return null;

     label3:
        return r1;
    }

    public static org.w3c.dom.Node getNext(org.w3c.dom.Node)
    {
        short $s0;
        org.w3c.dom.Node r0, $r2;
        int $i1;
        java.lang.String $r1;

        r0 := @parameter0: org.w3c.dom.Node;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $s0 = interfaceinvoke r0.<org.w3c.dom.Node: short getNodeType()>();

        $i1 = (int) $s0;

        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Node getNext(org.w3c.dom.Node,java.lang.String,int)>(r0, $r1, $i1);

        return $r2;
    }

    public static org.w3c.dom.Node getNext(org.w3c.dom.Node, java.lang.String, int)
    {
        short $s1;
        org.w3c.dom.Node r0, $r1, r4;
        int i0, $i2;
        java.lang.String r2, $r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Node;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        if $r1 != null goto label1;

        return null;

     label1:
        r4 = $r1;

     label2:
        if r4 == null goto label6;

        if i0 < 0 goto label3;

        $s1 = interfaceinvoke r4.<org.w3c.dom.Node: short getNodeType()>();

        $i2 = (int) $s1;

        if $i2 == i0 goto label3;

        goto label5;

     label3:
        if r2 != null goto label4;

        return r4;

     label4:
        $r3 = interfaceinvoke r4.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label5;

        return r4;

     label5:
        r4 = interfaceinvoke r4.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label2;

     label6:
        return null;
    }

    public static org.w3c.dom.Document readXml(java.io.InputStream) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.parsers.ParserConfigurationException
    {
        org.w3c.dom.Document $r4;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        org.apache.cxf.helpers.DOMUtils$NullResolver $r2;
        java.io.InputStream r3;

        r3 := @parameter0: java.io.InputStream;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)>(1);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = new org.apache.cxf.helpers.DOMUtils$NullResolver;

        specialinvoke $r2.<org.apache.cxf.helpers.DOMUtils$NullResolver: void <init>()>();

        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r2);

        $r4 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(java.io.InputStream)>(r3);

        return $r4;
    }

    public static org.w3c.dom.Document readXml(java.io.Reader) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.parsers.ParserConfigurationException
    {
        org.xml.sax.InputSource $r3;
        org.w3c.dom.Document $r5;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.io.Reader r4;
        org.apache.cxf.helpers.DOMUtils$NullResolver $r2;

        r4 := @parameter0: java.io.Reader;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)>(1);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = new org.apache.cxf.helpers.DOMUtils$NullResolver;

        specialinvoke $r2.<org.apache.cxf.helpers.DOMUtils$NullResolver: void <init>()>();

        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r2);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r4);

        $r5 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r3);

        return $r5;
    }

    public static org.w3c.dom.Document readXml(javax.xml.transform.stream.StreamSource) throws org.xml.sax.SAXException, java.io.IOException, javax.xml.parsers.ParserConfigurationException
    {
        org.xml.sax.InputSource $r3;
        javax.xml.transform.stream.StreamSource r4;
        java.io.Reader $r7;
        org.apache.cxf.helpers.DOMUtils$NullResolver $r2;
        org.w3c.dom.Document $r8;
        javax.xml.parsers.DocumentBuilder $r1;
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.String $r5;
        java.io.InputStream $r6;

        r4 := @parameter0: javax.xml.transform.stream.StreamSource;

        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setValidating(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringComments(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setIgnoringElementContentWhitespace(boolean)>(1);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);

        $r1 = virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r2 = new org.apache.cxf.helpers.DOMUtils$NullResolver;

        specialinvoke $r2.<org.apache.cxf.helpers.DOMUtils$NullResolver: void <init>()>();

        virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: void setEntityResolver(org.xml.sax.EntityResolver)>($r2);

        $r3 = new org.xml.sax.InputSource;

        specialinvoke $r3.<org.xml.sax.InputSource: void <init>()>();

        $r5 = virtualinvoke r4.<javax.xml.transform.stream.StreamSource: java.lang.String getSystemId()>();

        virtualinvoke $r3.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r5);

        $r6 = virtualinvoke r4.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        virtualinvoke $r3.<org.xml.sax.InputSource: void setByteStream(java.io.InputStream)>($r6);

        $r7 = virtualinvoke r4.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

        virtualinvoke $r3.<org.xml.sax.InputSource: void setCharacterStream(java.io.Reader)>($r7);

        $r8 = virtualinvoke $r1.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>($r3);

        return $r8;
    }

    public static void writeXml(org.w3c.dom.Node, java.io.OutputStream) throws javax.xml.transform.TransformerException
    {
        java.io.OutputStream r5;
        javax.xml.transform.Transformer $r1;
        javax.xml.transform.dom.DOMSource $r2;
        org.w3c.dom.Node r3;
        javax.xml.transform.stream.StreamResult $r4;
        javax.xml.transform.TransformerFactory $r0;

        r3 := @parameter0: org.w3c.dom.Node;

        r5 := @parameter1: java.io.OutputStream;

        $r0 = staticinvoke <javax.xml.transform.TransformerFactory: javax.xml.transform.TransformerFactory newInstance()>();

        $r1 = virtualinvoke $r0.<javax.xml.transform.TransformerFactory: javax.xml.transform.Transformer newTransformer()>();

        virtualinvoke $r1.<javax.xml.transform.Transformer: void setOutputProperty(java.lang.String,java.lang.String)>("indent", "yes");

        $r2 = new javax.xml.transform.dom.DOMSource;

        specialinvoke $r2.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>(r3);

        $r4 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r4.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r5);

        virtualinvoke $r1.<javax.xml.transform.Transformer: void transform(javax.xml.transform.Source,javax.xml.transform.Result)>($r2, $r4);

        return;
    }

    public static java.lang.String getPrefixRecursive(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0, $r5;
        org.w3c.dom.Node $r3, $r4;
        java.lang.String r1, $r2, r6;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        r6 = $r2;

        if $r2 != null goto label1;

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $z0 = $r3 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $r5 = (org.w3c.dom.Element) $r4;

        r6 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getPrefixRecursive(org.w3c.dom.Element,java.lang.String)>($r5, r1);

     label1:
        return r6;
    }

    public static java.lang.String getPrefix(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r3, r4, $r5, $r6, $r7;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label4;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        if $r3 == null goto label3;

        $r6 = "xmlns";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 == 0 goto label3;

     label2:
        $r7 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        return $r7;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return null;
    }

    public static void getPrefixesRecursive(org.w3c.dom.Element, java.lang.String, java.util.List)
    {
        java.util.List r2;
        org.w3c.dom.Element r0, $r4;
        org.w3c.dom.Node $r3;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.util.List;

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void getPrefixes(org.w3c.dom.Element,java.lang.String,java.util.List)>(r0, r1, r2);

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $z0 = $r3 instanceof org.w3c.dom.Element;

        if $z0 == 0 goto label1;

        $r4 = (org.w3c.dom.Element) $r3;

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void getPrefixesRecursive(org.w3c.dom.Element,java.lang.String,java.util.List)>($r4, r1, r2);

     label1:
        return;
    }

    public static void getPrefixes(org.w3c.dom.Element, java.lang.String, java.util.List)
    {
        java.util.List r7;
        org.w3c.dom.Element r0;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r3, r4, $r5, $r6, $r8;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.lang.String;

        r7 := @parameter2: java.util.List;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label4;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r3 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeName()>();

        $r5 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        $z0 = virtualinvoke r4.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label3;

        if $r3 == null goto label3;

        $r6 = "xmlns";

        $z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke $r3.<java.lang.String: boolean startsWith(java.lang.String)>("xmlns:");

        if $z2 == 0 goto label3;

     label2:
        $r8 = interfaceinvoke $r2.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>($r8);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }

    public static java.lang.String createNamespace(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r0;
        int i0;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String r1, $r2, r6;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r6 = "ns1";

        i0 = 1;

     label1:
        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getPrefix(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        if $r2 == null goto label2;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ns");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        staticinvoke <org.apache.cxf.helpers.DOMUtils: void addNamespacePrefix(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r0, r1, r6);

        return r6;
    }

    public static java.lang.String getNamespace(org.w3c.dom.Node, java.lang.String)
    {
        org.w3c.dom.Node $r2, $r5, r12;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.w3c.dom.Element r0;

        r12 := @parameter0: org.w3c.dom.Node;

        r3 := @parameter1: java.lang.String;

     label1:
        $z0 = r12 instanceof org.w3c.dom.Element;

        if $z0 != 0 goto label2;

        r12 = interfaceinvoke r12.<org.w3c.dom.Node: org.w3c.dom.Node getParentNode()>();

        goto label1;

     label2:
        r0 = (org.w3c.dom.Element) r12;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label3:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label6;

        $r5 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        $r6 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $r7 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getPrefix()>();

        $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

        $r10 = "xmlns";

        $z6 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z6 == 0 goto label4;

        $r11 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r11;

     label4:
        $z3 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r3);

        if $z3 == 0 goto label5;

        $r8 = "xmlns";

        $z4 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label5;

        $z5 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r7);

        if $z5 == 0 goto label5;

        $r9 = interfaceinvoke $r5.<org.w3c.dom.Node: java.lang.String getNodeValue()>();

        return $r9;

     label5:
        i1 = i1 + 1;

        goto label3;

     label6:
        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getParentNode()>();

        $z1 = $r2 instanceof org.w3c.dom.Element;

        if $z1 == 0 goto label7;

        $r4 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)>($r2, r3);

        return $r4;

     label7:
        return null;
    }

    public static java.util.List findAllElementsByTagNameNS(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r1;
        java.lang.String r2, r3;
        java.util.LinkedList $r0;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void findAllElementsByTagNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String,java.util.List)>(r1, r2, r3, $r0);

        return $r0;
    }

    private static void findAllElementsByTagNameNS(org.w3c.dom.Element, java.lang.String, java.lang.String, java.util.List)
    {
        java.util.List r4;
        org.w3c.dom.Element r0, r7;
        java.lang.String $r1, r2, r3, $r5, $r6;
        boolean $z0, $z1;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.util.List;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        if $r1 == null goto label1;

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z1 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r6);

        if $z1 == 0 goto label1;

        interfaceinvoke r4.<java.util.List: boolean add(java.lang.Object)>(r0);

     label1:
        r7 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

     label2:
        if r7 == null goto label3;

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void findAllElementsByTagNameNS(org.w3c.dom.Element,java.lang.String,java.lang.String,java.util.List)>(r7, r2, r3, r4);

        r7 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r7);

        goto label2;

     label3:
        return;
    }

    public static java.util.List findAllElementsByTagName(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r1;
        java.lang.String r2;
        java.util.LinkedList $r0;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        $r0 = new java.util.LinkedList;

        specialinvoke $r0.<java.util.LinkedList: void <init>()>();

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void findAllElementsByTagName(org.w3c.dom.Element,java.lang.String,java.util.List)>(r1, r2, $r0);

        return $r0;
    }

    private static void findAllElementsByTagName(org.w3c.dom.Element, java.lang.String, java.util.List)
    {
        java.util.List r3;
        org.w3c.dom.Element r1, r4;
        java.lang.String r0, $r2;
        boolean $z0;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.String;

        r3 := @parameter2: java.util.List;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getTagName()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        interfaceinvoke r3.<java.util.List: boolean add(java.lang.Object)>(r1);

     label1:
        r4 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r1);

     label2:
        if r4 == null goto label3;

        staticinvoke <org.apache.cxf.helpers.DOMUtils: void findAllElementsByTagName(org.w3c.dom.Element,java.lang.String,java.util.List)>(r4, r0, r3);

        r4 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r4);

        goto label2;

     label3:
        return;
    }

    public static boolean hasElementWithName(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0, r6;
        java.lang.String $r1, r2, r3, $r4, $r5;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        if $r1 == null goto label1;

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z2 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>($r5);

        if $z2 == 0 goto label1;

        return 1;

     label1:
        r6 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

     label2:
        if r6 == null goto label4;

        $z0 = staticinvoke <org.apache.cxf.helpers.DOMUtils: boolean hasElementWithName(org.w3c.dom.Element,java.lang.String,java.lang.String)>(r6, r2, r3);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        r6 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r6);

        goto label2;

     label4:
        return 0;
    }

    public static boolean hasElementInNS(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r1, r3;
        java.lang.String r0, $r2;
        boolean $z0, $z1;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        r3 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r1);

     label2:
        if r3 == null goto label4;

        $z1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: boolean hasElementInNS(org.w3c.dom.Element,java.lang.String)>(r3, r0);

        if $z1 == 0 goto label3;

        return 1;

     label3:
        r3 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r3);

        goto label2;

     label4:
        return 0;
    }

    public static java.lang.String setNamespace(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String r1, $r2, r5, $r7;

        r0 := @parameter0: org.w3c.dom.Element;

        r1 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getPrefixRecursive(org.w3c.dom.Element,java.lang.String)>(r0, r1);

        if $r2 == null goto label1;

        return $r2;

     label1:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r7, r1);

        return r5;
    }

    public static void addNamespacePrefix(org.w3c.dom.Element, java.lang.String, java.lang.String)
    {
        org.w3c.dom.Element r0;
        java.lang.StringBuilder $r1, $r2, $r4;
        java.lang.String r3, $r5, r6;

        r0 := @parameter0: org.w3c.dom.Element;

        r6 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("xmlns:");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/2000/xmlns/", $r5, r6);

        return;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;
        java.util.Map $r1;

        <org.apache.cxf.helpers.DOMUtils: java.lang.String XMLNAMESPACE> = "xmlns";

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        $r1 = staticinvoke <java.util.Collections: java.util.Map synchronizedMap(java.util.Map)>($r0);

        <org.apache.cxf.helpers.DOMUtils: java.util.Map DOCUMENT_BUILDERS> = $r1;

        return;
    }
}
