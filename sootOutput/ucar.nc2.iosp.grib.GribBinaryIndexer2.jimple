public class ucar.nc2.iosp.grib.GribBinaryIndexer2 extends java.lang.Object
{
    private static boolean removeGBX;
    private java.util.List dirs;

    public void <init>()
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r0;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: java.util.List dirs> = $r1;

        return;
    }

    private boolean readConf(java.lang.String) throws java.io.IOException
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r4;
        java.io.FileInputStream $r0;
        java.io.InputStreamReader $r3;
        java.util.List $r5;
        java.lang.String r1, $r6;
        java.io.BufferedReader $r2;
        boolean $z0;

        r4 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.FileInputStream;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>(r1);

        $r2 = new java.io.BufferedReader;

        $r3 = new java.io.InputStreamReader;

        specialinvoke $r3.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r0);

        specialinvoke $r2.<java.io.BufferedReader: void <init>(java.io.Reader)>($r3);

     label1:
        $r6 = virtualinvoke $r2.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r6 != null goto label2;

        goto label4;

     label2:
        $z0 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label3;

        goto label1;

     label3:
        $r5 = r4.<ucar.nc2.iosp.grib.GribBinaryIndexer2: java.util.List dirs>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r6);

        goto label1;

     label4:
        virtualinvoke $r0.<java.io.InputStream: void close()>();

        return 1;
    }

    private void clearLocks()
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r0;
        java.lang.String r4, $r9, $r14, $r20;
        boolean $z0, $z1;
        java.io.PrintStream $r11, $r16;
        java.util.Iterator $r2;
        java.io.File $r5;
        java.util.List $r1;
        java.lang.Object $r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r10, $r12, $r13, $r15, $r17, $r18, $r19;

        r0 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        $r1 = r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: java.util.List dirs>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        $r5 = new java.io.File;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/IndexLock");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r9);

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label2;

        virtualinvoke $r5.<java.io.File: boolean delete()>();

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cleared lock ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/IndexLock");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20);

        goto label3;

     label2:
        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In directory ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label3:
        goto label1;

     label4:
        return;
    }

    private void indexer() throws java.io.IOException
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r8;
        java.util.Date $r4, $r15;
        boolean $z0, $z1, $z2;
        java.util.List $r9;
        java.lang.StringBuilder $r0, $r2, $r6, $r11, $r13, $r17, $r23, $r24, $r25, $r27, $r29, $r30, $r31, $r33, $r35, $r36, $r37;
        java.util.Calendar $r3, $r14;
        java.lang.String $r5, $r7, $r16, $r18, r20, $r26, $r32, $r38;
        java.io.PrintStream $r1, $r12, $r28, $r34;
        java.util.Iterator $r10;
        java.io.File $r21, $r22;
        java.lang.Object $r19;

        r8 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Start ");

        $r3 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r4 = virtualinvoke $r3.<java.util.Calendar: java.util.Date getTime()>();

        $r5 = virtualinvoke $r4.<java.util.Date: java.lang.String toString()>();

        $r6 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r7);

        $r9 = r8.<ucar.nc2.iosp.grib.GribBinaryIndexer2: java.util.List dirs>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r19 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r20 = (java.lang.String) $r19;

        $r21 = new java.io.File;

        specialinvoke $r21.<java.io.File: void <init>(java.lang.String)>(r20);

        $z0 = virtualinvoke $r21.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label2;

        $r34 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dir ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exists");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>($r38);

        goto label1;

     label2:
        $r22 = new java.io.File;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/IndexLock");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.io.File: void <init>(java.lang.String)>($r26);

        $z1 = virtualinvoke $r22.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label3;

        $r28 = <java.lang.System: java.io.PrintStream out>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exiting ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" another Indexer working here");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r28.<java.io.PrintStream: void println(java.lang.String)>($r32);

        goto label1;

     label3:
        virtualinvoke $r22.<java.io.File: boolean createNewFile()>();

        specialinvoke r8.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void checkDirs(java.io.File)>($r21);

        virtualinvoke $r22.<java.io.File: boolean delete()>();

        goto label1;

     label4:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("End ");

        $r14 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r15 = virtualinvoke $r14.<java.util.Calendar: java.util.Date getTime()>();

        $r16 = virtualinvoke $r15.<java.util.Date: java.lang.String toString()>();

        $r17 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

        return;
    }

    private void checkDirs(java.io.File) throws java.io.IOException
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r13;
        java.lang.String[] $r10;
        int i0, $i1, i2;
        java.lang.String $r4, $r7, $r9, r11;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.io.PrintStream $r2;
        java.io.File r0, $r12;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r8;

        r13 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label6;

        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("In directory ");

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getParent()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r7 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = virtualinvoke r0.<java.io.File: java.lang.String[] list()>();

        i0 = lengthof $r10;

        i2 = 0;

     label1:
        if i2 >= i0 goto label6;

        r11 = $r10[i2];

        $z1 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("IndexLock");

        if $z1 == 0 goto label2;

        goto label5;

     label2:
        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.io.File,java.lang.String)>(r0, r11);

        $z2 = virtualinvoke $r12.<java.io.File: boolean isDirectory()>();

        if $z2 == 0 goto label3;

        specialinvoke r13.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void checkDirs(java.io.File)>($r12);

        goto label5;

     label3:
        $z3 = virtualinvoke r11.<java.lang.String: boolean endsWith(java.lang.String)>("gbx");

        if $z3 != 0 goto label5;

        $z4 = virtualinvoke r11.<java.lang.String: boolean endsWith(java.lang.String)>("xml");

        if $z4 != 0 goto label5;

        $z5 = virtualinvoke r11.<java.lang.String: boolean endsWith(java.lang.String)>("gbx2");

        if $z5 != 0 goto label5;

        $z6 = virtualinvoke r11.<java.lang.String: boolean endsWith(java.lang.String)>("tmp");

        if $z6 != 0 goto label5;

        $i1 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        goto label5;

     label4:
        specialinvoke r13.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void checkIndex(java.io.File,java.io.File)>(r0, $r12);

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return;
    }

    private void checkIndex(java.io.File, java.io.File) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r46;
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r19;
        byte $b4, $b6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.StringBuilder $r6, $r7, $r15, $r17, $r22, $r24, $r25, $r29, $r30, $r32, $r36, $r37, $r39, $r41, $r43, $r44, $r45, $r47;
        java.lang.String[] r0;
        long $l1, $l2, $l3, $l5;
        int $i0, $i7;
        java.lang.String $r5, $r8, $r9, $r10, $r12, $r16, $r18, $r23, $r26, $r28, $r31, $r33, $r35, $r38, $r40;
        java.io.PrintStream $r14, $r21;
        java.io.File r2, r4, $r42;

        r19 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        r2 := @parameter0: java.io.File;

        r4 := @parameter1: java.io.File;

        r0 = newarray (java.lang.String)[2];

        $r42 = new java.io.File;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gbx2");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, $r8);

        $z0 = <ucar.nc2.iosp.grib.GribBinaryIndexer2: boolean removeGBX>;

        if $z0 == 0 goto label1;

        $z3 = virtualinvoke $r42.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label1;

        virtualinvoke $r42.<java.io.File: boolean delete()>();

     label1:
        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke r4.<java.io.File: java.lang.String getParent()>();

        $r29 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r31 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        r0[0] = $r33;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke r4.<java.io.File: java.lang.String getParent()>();

        $r36 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r38 = virtualinvoke $r42.<java.io.File: java.lang.String getName()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        r0[1] = $r40;

        $z4 = virtualinvoke $r42.<java.io.File: boolean exists()>();

        if $z4 == 0 goto label3;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $l3 = $l1 - $l2;

        $b4 = $l3 cmp 10800000L;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label2;

        return;

     label2:
        $l5 = virtualinvoke $r42.<java.io.File: long length()>();

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label3;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR ");

        $r23 = r0[1];

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has length zero");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r26);

        return;

     label3:
        $r9 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean endsWith(java.lang.String)>("grib1");

        if $z1 == 0 goto label4;

        specialinvoke r19.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void grib1check(java.io.File,java.io.File,java.lang.String[])>(r4, $r42, r0);

        goto label9;

     label4:
        $r10 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $z2 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("grib2");

        if $z2 == 0 goto label5;

        specialinvoke r19.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void grib2check(java.io.File,java.io.File,java.lang.String[])>(r4, $r42, r0);

        goto label9;

     label5:
        $r46 = new ucar.unidata.io.RandomAccessFile;

        $r12 = r0[0];

        specialinvoke $r46.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r12, "r");

        $i0 = staticinvoke <ucar.grib.GribChecker: int getEdition(ucar.unidata.io.RandomAccessFile)>($r46);

        if $i0 != 2 goto label6;

        specialinvoke r19.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void grib2check(java.io.File,java.io.File,java.lang.String[])>(r4, $r42, r0);

        goto label8;

     label6:
        if $i0 != 1 goto label7;

        specialinvoke r19.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void grib1check(java.io.File,java.io.File,java.lang.String[])>(r4, $r42, r0);

        goto label8;

     label7:
        $r14 = <java.lang.System: java.io.PrintStream out>;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a Grib File ");

        $r16 = r0[0];

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label8:
        virtualinvoke $r46.<ucar.unidata.io.RandomAccessFile: void close()>();

     label9:
        return;
    }

    private void grib1check(java.io.File, java.io.File, java.lang.String[])
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r38;
        java.util.Date $r9, $r24;
        byte $b2;
        boolean $z0;
        java.lang.Exception $r31;
        java.lang.StringBuilder $r3, $r6, $r7, $r11, $r19, $r21, $r22, $r26, $r34, $r36, $r39, $r41, $r43;
        java.lang.String[] r14;
        long $l0, $l1;
        java.util.Calendar $r8, $r23;
        ucar.grib.grib1.Grib1WriteIndex $r40, $r42;
        int $i3;
        java.lang.String $r5, $r10, $r12, $r15, $r16, $r20, $r25, $r27, $r29, $r30, $r35, $r37;
        java.io.PrintStream $r2, $r18, $r33;
        java.io.File r0, r4;

        r38 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        r14 := @parameter2: java.lang.String[];

     label1:
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $l0 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke r0.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label3;

     label2:
        return;

     label3:
        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexExtending ");

        $r20 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r24 = virtualinvoke $r23.<java.util.Calendar: java.util.Date getTime()>();

        $r25 = virtualinvoke $r24.<java.util.Date: java.lang.String toString()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r40 = new ucar.grib.grib1.Grib1WriteIndex;

        specialinvoke $r40.<ucar.grib.grib1.Grib1WriteIndex: void <init>()>();

        $r30 = r14[0];

        $r29 = r14[1];

        virtualinvoke $r40.<ucar.grib.grib1.Grib1WriteIndex: ucar.grid.GridIndex extendGribIndex(java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>(r4, r0, $r30, $r29, 0);

        goto label5;

     label4:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Indexing ");

        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r9 = virtualinvoke $r8.<java.util.Calendar: java.util.Date getTime()>();

        $r10 = virtualinvoke $r9.<java.util.Date: java.lang.String toString()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r42 = new ucar.grib.grib1.Grib1WriteIndex;

        specialinvoke $r42.<ucar.grib.grib1.Grib1WriteIndex: void <init>()>();

        $r16 = r14[0];

        $r15 = r14[1];

        virtualinvoke $r42.<ucar.grib.grib1.Grib1WriteIndex: ucar.grid.GridIndex writeGribIndex(java.io.File,java.lang.String,java.lang.String,boolean)>(r4, $r16, $r15, 0);

     label5:
        goto label7;

     label6:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.lang.Exception: void printStackTrace()>();

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception doing index or inventory for ");

        $r35 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label5 with label6;
    }

    private void grib2check(java.io.File, java.io.File, java.lang.String[])
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 r38;
        java.util.Date $r9, $r24;
        byte $b2;
        boolean $z0;
        ucar.grib.grib2.Grib2WriteIndex $r40, $r42;
        java.lang.Exception $r31;
        java.lang.StringBuilder $r3, $r6, $r7, $r11, $r19, $r21, $r22, $r26, $r34, $r36, $r39, $r41, $r43;
        java.lang.String[] r14;
        long $l0, $l1;
        java.util.Calendar $r8, $r23;
        int $i3;
        java.lang.String $r5, $r10, $r12, $r15, $r16, $r20, $r25, $r27, $r29, $r30, $r35, $r37;
        java.io.PrintStream $r2, $r18, $r33;
        java.io.File r0, r4;

        r38 := @this: ucar.nc2.iosp.grib.GribBinaryIndexer2;

        r4 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        r14 := @parameter2: java.lang.String[];

     label1:
        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $l0 = virtualinvoke r4.<java.io.File: long lastModified()>();

        $l1 = virtualinvoke r0.<java.io.File: long lastModified()>();

        $b2 = $l0 cmp $l1;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label3;

     label2:
        return;

     label3:
        $r18 = <java.lang.System: java.io.PrintStream out>;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IndexExtending ");

        $r20 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r24 = virtualinvoke $r23.<java.util.Calendar: java.util.Date getTime()>();

        $r25 = virtualinvoke $r24.<java.util.Date: java.lang.String toString()>();

        $r26 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.io.PrintStream: void println(java.lang.String)>($r27);

        $r40 = new ucar.grib.grib2.Grib2WriteIndex;

        specialinvoke $r40.<ucar.grib.grib2.Grib2WriteIndex: void <init>()>();

        $r30 = r14[0];

        $r29 = r14[1];

        virtualinvoke $r40.<ucar.grib.grib2.Grib2WriteIndex: ucar.grid.GridIndex extendGribIndex(java.io.File,java.io.File,java.lang.String,java.lang.String,boolean)>(r4, r0, $r30, $r29, 0);

        goto label5;

     label4:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Indexing ");

        $r5 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance()>();

        $r9 = virtualinvoke $r8.<java.util.Calendar: java.util.Date getTime()>();

        $r10 = virtualinvoke $r9.<java.util.Date: java.lang.String toString()>();

        $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r12);

        $r42 = new ucar.grib.grib2.Grib2WriteIndex;

        specialinvoke $r42.<ucar.grib.grib2.Grib2WriteIndex: void <init>()>();

        $r16 = r14[0];

        $r15 = r14[1];

        virtualinvoke $r42.<ucar.grib.grib2.Grib2WriteIndex: ucar.grid.GridIndex writeGribIndex(java.io.File,java.lang.String,java.lang.String,boolean)>(r4, $r16, $r15, 0);

     label5:
        goto label7;

     label6:
        $r31 := @caughtexception;

        virtualinvoke $r31.<java.lang.Exception: void printStackTrace()>();

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Caught Exception doing index or inventory for ");

        $r35 = virtualinvoke r4.<java.io.File: java.lang.String getName()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r37);

     label7:
        return;

        catch java.lang.Exception from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label5 with label6;
    }

    public static boolean test() throws java.io.IOException
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 $r0;
        java.lang.String[] r1;
        java.io.File $r7, $r9;
        java.lang.StringBuilder $r2, $r4, $r5;
        java.lang.String $r3, $r6, $r8, $r10;

        $r0 = new ucar.nc2.iosp.grib.GribBinaryIndexer2;

        specialinvoke $r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void <init>()>();

        r1 = newarray (java.lang.String)[2];

        r1[0] = "C:/data/gefs/GFS_Global_1p0deg_Ensemble_20090303_0000.grib2";

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = r1[0];

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".gbx");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        r1[1] = $r6;

        $r7 = new java.io.File;

        $r8 = r1[0];

        specialinvoke $r7.<java.io.File: void <init>(java.lang.String)>($r8);

        $r9 = new java.io.File;

        $r10 = r1[1];

        specialinvoke $r9.<java.io.File: void <init>(java.lang.String)>($r10);

        specialinvoke $r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void grib2check(java.io.File,java.io.File,java.lang.String[])>($r7, $r9, r1);

        return 1;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.nc2.iosp.grib.GribBinaryIndexer2 $r0;
        java.lang.String[] r1;
        int i0, i1;
        java.lang.String r2, $r9;
        boolean $z0, $z1, $z2, z3;
        java.io.PrintStream $r5, $r10, $r11;
        java.io.File $r3;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;

        r1 := @parameter0: java.lang.String[];

        $r0 = new ucar.nc2.iosp.grib.GribBinaryIndexer2;

        specialinvoke $r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void <init>()>();

        z3 = 0;

        i0 = lengthof r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r2 = r1[i1];

        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("clear");

        if $z0 == 0 goto label2;

        z3 = 1;

        $r11 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>("Clearing Index locks");

        goto label5;

     label2:
        $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("remove");

        if $z1 == 0 goto label3;

        <ucar.nc2.iosp.grib.GribBinaryIndexer2: boolean removeGBX> = 1;

        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("Removing all indexes");

        goto label5;

     label3:
        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r2);

        $z2 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label4;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conf file ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doesn\'t exist: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;

     label4:
        specialinvoke $r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: boolean readConf(java.lang.String)>(r2);

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        if z3 == 0 goto label7;

        specialinvoke $r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void clearLocks()>();

        return;

     label7:
        specialinvoke $r0.<ucar.nc2.iosp.grib.GribBinaryIndexer2: void indexer()>();

        return;
    }

    static void <clinit>()
    {
        <ucar.nc2.iosp.grib.GribBinaryIndexer2: boolean removeGBX> = 0;

        return;
    }
}
