public class org.apache.batik.gvt.RootGraphicsNode extends org.apache.batik.gvt.CompositeGraphicsNode
{
    java.util.List treeGraphicsNodeChangeListeners;

    public void <init>()
    {
        org.apache.batik.gvt.RootGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.RootGraphicsNode;

        specialinvoke r0.<org.apache.batik.gvt.CompositeGraphicsNode: void <init>()>();

        r0.<org.apache.batik.gvt.RootGraphicsNode: java.util.List treeGraphicsNodeChangeListeners> = null;

        return;
    }

    public org.apache.batik.gvt.RootGraphicsNode getRoot()
    {
        org.apache.batik.gvt.RootGraphicsNode r0;

        r0 := @this: org.apache.batik.gvt.RootGraphicsNode;

        return r0;
    }

    public java.util.List getTreeGraphicsNodeChangeListeners()
    {
        org.apache.batik.gvt.RootGraphicsNode r0;
        java.util.List $r1, $r2;
        java.util.LinkedList $r3;

        r0 := @this: org.apache.batik.gvt.RootGraphicsNode;

        $r1 = r0.<org.apache.batik.gvt.RootGraphicsNode: java.util.List treeGraphicsNodeChangeListeners>;

        if $r1 != null goto label1;

        $r3 = new java.util.LinkedList;

        specialinvoke $r3.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.gvt.RootGraphicsNode: java.util.List treeGraphicsNodeChangeListeners> = $r3;

     label1:
        $r2 = r0.<org.apache.batik.gvt.RootGraphicsNode: java.util.List treeGraphicsNodeChangeListeners>;

        return $r2;
    }

    public void addTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)
    {
        org.apache.batik.gvt.RootGraphicsNode r0;
        java.util.List $r1;
        org.apache.batik.gvt.event.GraphicsNodeChangeListener r2;

        r0 := @this: org.apache.batik.gvt.RootGraphicsNode;

        r2 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeChangeListener;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.RootGraphicsNode: java.util.List getTreeGraphicsNodeChangeListeners()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void removeTreeGraphicsNodeChangeListener(org.apache.batik.gvt.event.GraphicsNodeChangeListener)
    {
        org.apache.batik.gvt.RootGraphicsNode r0;
        java.util.List $r1;
        org.apache.batik.gvt.event.GraphicsNodeChangeListener r2;

        r0 := @this: org.apache.batik.gvt.RootGraphicsNode;

        r2 := @parameter0: org.apache.batik.gvt.event.GraphicsNodeChangeListener;

        $r1 = virtualinvoke r0.<org.apache.batik.gvt.RootGraphicsNode: java.util.List getTreeGraphicsNodeChangeListeners()>();

        interfaceinvoke $r1.<java.util.List: boolean remove(java.lang.Object)>(r2);

        return;
    }
}
