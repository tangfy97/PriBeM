public class arq.cmdline.ModRemote extends java.lang.Object implements arq.cmdline.ArgModuleGeneral
{
    protected final arq.cmdline.ArgDecl serviceDecl;
    protected final arq.cmdline.ArgDecl postServiceDecl;
    private java.lang.String serviceURL;
    private boolean usePost;

    public void <init>()
    {
        arq.cmdline.ModRemote r0;
        arq.cmdline.ArgDecl $r1, $r3;
        java.lang.String[] $r2, $r4;

        r0 := @this: arq.cmdline.ModRemote;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new arq.cmdline.ArgDecl;

        $r2 = newarray (java.lang.String)[0];

        specialinvoke $r1.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(1, "service", $r2);

        r0.<arq.cmdline.ModRemote: arq.cmdline.ArgDecl serviceDecl> = $r1;

        $r3 = new arq.cmdline.ArgDecl;

        $r4 = newarray (java.lang.String)[1];

        $r4[0] = "POST";

        specialinvoke $r3.<arq.cmdline.ArgDecl: void <init>(boolean,java.lang.String,java.lang.String[])>(0, "post", $r4);

        r0.<arq.cmdline.ModRemote: arq.cmdline.ArgDecl postServiceDecl> = $r3;

        return;
    }

    public void checkCommandLine(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModRemote r0;

        r0 := @this: arq.cmdline.ModRemote;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        return;
    }

    public void processArgs(arq.cmdline.CmdArgModule)
    {
        arq.cmdline.CmdArgModule r1;
        arq.cmdline.ModRemote r0;
        arq.cmdline.ArgDecl $r2, $r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @this: arq.cmdline.ModRemote;

        r1 := @parameter0: arq.cmdline.CmdArgModule;

        $r2 = r0.<arq.cmdline.ModRemote: arq.cmdline.ArgDecl serviceDecl>;

        $r3 = virtualinvoke r1.<arq.cmdline.CmdArgModule: java.lang.String getValue(arq.cmdline.ArgDecl)>($r2);

        r0.<arq.cmdline.ModRemote: java.lang.String serviceURL> = $r3;

        $r4 = r0.<arq.cmdline.ModRemote: arq.cmdline.ArgDecl postServiceDecl>;

        $z0 = virtualinvoke r1.<arq.cmdline.CmdArgModule: boolean contains(arq.cmdline.ArgDecl)>($r4);

        r0.<arq.cmdline.ModRemote: boolean usePost> = $z0;

        return;
    }

    public void registerWith(arq.cmdline.CmdGeneral)
    {
        arq.cmdline.ModRemote r2;
        arq.cmdline.Usage $r1;
        arq.cmdline.CmdGeneral r0;
        arq.cmdline.ArgDecl $r3, $r4;

        r2 := @this: arq.cmdline.ModRemote;

        r0 := @parameter0: arq.cmdline.CmdGeneral;

        $r1 = virtualinvoke r0.<arq.cmdline.CmdGeneral: arq.cmdline.Usage getUsage()>();

        virtualinvoke $r1.<arq.cmdline.Usage: void startCategory(java.lang.String)>("Remote");

        $r3 = r2.<arq.cmdline.ModRemote: arq.cmdline.ArgDecl serviceDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r3, "--service=", "Service endpoint URL");

        $r4 = r2.<arq.cmdline.ModRemote: arq.cmdline.ArgDecl postServiceDecl>;

        virtualinvoke r0.<arq.cmdline.CmdGeneral: void add(arq.cmdline.ArgDecl,java.lang.String,java.lang.String)>($r4, "--post", "Force use of HTTP POST");

        return;
    }

    public java.lang.String getServiceURL()
    {
        arq.cmdline.ModRemote r0;
        java.lang.String $r1;

        r0 := @this: arq.cmdline.ModRemote;

        $r1 = r0.<arq.cmdline.ModRemote: java.lang.String serviceURL>;

        return $r1;
    }

    public boolean usePost()
    {
        arq.cmdline.ModRemote r0;
        boolean $z0;

        r0 := @this: arq.cmdline.ModRemote;

        $z0 = r0.<arq.cmdline.ModRemote: boolean usePost>;

        return $z0;
    }
}
