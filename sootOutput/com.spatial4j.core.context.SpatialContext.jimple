public class com.spatial4j.core.context.SpatialContext extends java.lang.Object
{
    public static final com.spatial4j.core.context.SpatialContext GEO;
    private final boolean geo;
    private final com.spatial4j.core.distance.DistanceCalculator calculator;
    private final com.spatial4j.core.shape.Rectangle worldBounds;
    private final com.spatial4j.core.io.ShapeReadWriter shapeReadWriter;
    static final boolean $assertionsDisabled;

    public void <init>(boolean, com.spatial4j.core.distance.DistanceCalculator, com.spatial4j.core.shape.Rectangle)
    {
        com.spatial4j.core.distance.DistanceCalculator r10;
        com.spatial4j.core.io.ShapeReadWriter $r2;
        java.lang.AssertionError $r19;
        com.spatial4j.core.shape.impl.RectangleImpl $r13, $r16, $r17, $r18, $r22;
        java.lang.String $r7;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6;
        com.spatial4j.core.distance.AbstractDistanceCalculator $r12;
        com.spatial4j.core.shape.Rectangle r11;
        com.spatial4j.core.context.SpatialContext r0;
        java.lang.IllegalArgumentException $r21;
        com.spatial4j.core.distance.CartesianDistCalc $r15;
        java.lang.StringBuilder $r5, $r6, $r20;
        com.spatial4j.core.distance.GeodesicSphereDistCalc$Haversine $r14;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        z0 := @parameter0: boolean;

        r10 := @parameter1: com.spatial4j.core.distance.DistanceCalculator;

        r11 := @parameter2: com.spatial4j.core.shape.Rectangle;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.spatial4j.core.context.SpatialContext: boolean geo> = z0;

        if r10 != null goto label3;

        $z5 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z5 == 0 goto label1;

        $r14 = new com.spatial4j.core.distance.GeodesicSphereDistCalc$Haversine;

        $r12 = $r14;

        specialinvoke $r14.<com.spatial4j.core.distance.GeodesicSphereDistCalc$Haversine: void <init>()>();

        goto label2;

     label1:
        $r15 = new com.spatial4j.core.distance.CartesianDistCalc;

        $r12 = $r15;

        specialinvoke $r15.<com.spatial4j.core.distance.CartesianDistCalc: void <init>()>();

     label2:
        r10 = $r12;

     label3:
        r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator calculator> = r10;

        if r11 != null goto label6;

        $z4 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z4 == 0 goto label4;

        $r16 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $r13 = $r16;

        specialinvoke $r16.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>(-180.0, 180.0, -90.0, 90.0, r0);

        goto label5;

     label4:
        $r17 = new com.spatial4j.core.shape.impl.RectangleImpl;

        $r13 = $r17;

        specialinvoke $r17.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>(-1.7976931348623157E308, 1.7976931348623157E308, -1.7976931348623157E308, 1.7976931348623157E308, r0);

     label5:
        r11 = $r13;

        goto label8;

     label6:
        $z1 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z1 == 0 goto label7;

        $z2 = <com.spatial4j.core.context.SpatialContext: boolean $assertionsDisabled>;

        if $z2 != 0 goto label7;

        $r18 = new com.spatial4j.core.shape.impl.RectangleImpl;

        specialinvoke $r18.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>(-180.0, 180.0, -90.0, 90.0, r0);

        $z3 = virtualinvoke r11.<java.lang.Object: boolean equals(java.lang.Object)>($r18);

        if $z3 != 0 goto label7;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label7:
        $z6 = interfaceinvoke r11.<com.spatial4j.core.shape.Rectangle: boolean getCrossesDateLine()>();

        if $z6 == 0 goto label8;

        $r21 = new java.lang.IllegalArgumentException;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("worldBounds shouldn\'t cross dateline: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r11);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r21;

     label8:
        $r22 = new com.spatial4j.core.shape.impl.RectangleImpl;

        specialinvoke $r22.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(com.spatial4j.core.shape.Rectangle,com.spatial4j.core.context.SpatialContext)>(r11, r0);

        r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle worldBounds> = $r22;

        $r2 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.io.ShapeReadWriter makeShapeReadWriter()>();

        r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.io.ShapeReadWriter shapeReadWriter> = $r2;

        return;
    }

    public void <init>(boolean)
    {
        com.spatial4j.core.context.SpatialContext r0;
        boolean z0;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        z0 := @parameter0: boolean;

        specialinvoke r0.<com.spatial4j.core.context.SpatialContext: void <init>(boolean,com.spatial4j.core.distance.DistanceCalculator,com.spatial4j.core.shape.Rectangle)>(z0, null, null);

        return;
    }

    protected com.spatial4j.core.io.ShapeReadWriter makeShapeReadWriter()
    {
        com.spatial4j.core.context.SpatialContext r1;
        com.spatial4j.core.io.ShapeReadWriter $r0;

        r1 := @this: com.spatial4j.core.context.SpatialContext;

        $r0 = new com.spatial4j.core.io.ShapeReadWriter;

        specialinvoke $r0.<com.spatial4j.core.io.ShapeReadWriter: void <init>(com.spatial4j.core.context.SpatialContext)>(r1);

        return $r0;
    }

    public com.spatial4j.core.distance.DistanceCalculator getDistCalc()
    {
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.distance.DistanceCalculator $r1;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        $r1 = r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator calculator>;

        return $r1;
    }

    public com.spatial4j.core.shape.Rectangle getWorldBounds()
    {
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.shape.Rectangle $r1;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        $r1 = r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle worldBounds>;

        return $r1;
    }

    public boolean isGeo()
    {
        com.spatial4j.core.context.SpatialContext r0;
        boolean $z0;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        $z0 = r0.<com.spatial4j.core.context.SpatialContext: boolean geo>;

        return $z0;
    }

    public void verifyX(double)
    {
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.String $r8;
        double d0, $d1, $d2;
        com.spatial4j.core.shape.Rectangle $r1;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.exception.InvalidShapeException $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle getWorldBounds()>();

        $d1 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $b0 = d0 cmpl $d1;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $d2 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $b1 = d0 cmpg $d2;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label2;

     label1:
        $r10 = new com.spatial4j.core.exception.InvalidShapeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad X value ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in boundary ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r8);

        throw $r10;

     label2:
        return;
    }

    public void verifyY(double)
    {
        byte $b0, $b1;
        int $i2, $i3;
        java.lang.String $r8;
        double d0, $d1, $d2;
        com.spatial4j.core.shape.Rectangle $r1;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.exception.InvalidShapeException $r10;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r9;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle getWorldBounds()>();

        $d1 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $b0 = d0 cmpl $d1;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $d2 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $b1 = d0 cmpg $d2;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label2;

     label1:
        $r10 = new com.spatial4j.core.exception.InvalidShapeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad Y value ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not in boundary ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r8);

        throw $r10;

     label2:
        return;
    }

    public com.spatial4j.core.shape.Point makePoint(double, double)
    {
        com.spatial4j.core.context.SpatialContext r0;
        double d0, d1;
        com.spatial4j.core.shape.impl.PointImpl $r1;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: void verifyX(double)>(d0);

        virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: void verifyY(double)>(d1);

        $r1 = new com.spatial4j.core.shape.impl.PointImpl;

        specialinvoke $r1.<com.spatial4j.core.shape.impl.PointImpl: void <init>(double,double,com.spatial4j.core.context.SpatialContext)>(d0, d1, r0);

        return $r1;
    }

    public com.spatial4j.core.shape.Rectangle makeRectangle(com.spatial4j.core.shape.Point, com.spatial4j.core.shape.Point)
    {
        com.spatial4j.core.shape.Rectangle $r3;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.shape.Point r1, r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        r1 := @parameter0: com.spatial4j.core.shape.Point;

        r2 := @parameter1: com.spatial4j.core.shape.Point;

        $d0 = interfaceinvoke r1.<com.spatial4j.core.shape.Point: double getX()>();

        $d1 = interfaceinvoke r2.<com.spatial4j.core.shape.Point: double getX()>();

        $d2 = interfaceinvoke r1.<com.spatial4j.core.shape.Point: double getY()>();

        $d3 = interfaceinvoke r2.<com.spatial4j.core.shape.Point: double getY()>();

        $r3 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle makeRectangle(double,double,double,double)>($d0, $d1, $d2, $d3);

        return $r3;
    }

    public com.spatial4j.core.shape.Rectangle makeRectangle(double, double, double, double)
    {
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9;
        boolean $z0;
        com.spatial4j.core.shape.Rectangle $r1;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.exception.InvalidShapeException $r36, $r38, $r40, $r42;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r13, $r14, $r15, $r16, $r17, $r18, $r22, $r23, $r24, $r25, $r29, $r30, $r31, $r32, $r35, $r37, $r39, $r41;
        com.spatial4j.core.shape.impl.RectangleImpl $r43;
        int $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String $r10, $r19, $r26, $r33;
        double d0, $d1, d2, $d3, $d4, $d5, d6, d7;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        d6 := @parameter0: double;

        d7 := @parameter1: double;

        d0 := @parameter2: double;

        d2 := @parameter3: double;

        $r1 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle getWorldBounds()>();

        $d1 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMinY()>();

        $b0 = d0 cmpl $d1;

        $i10 = (int) $b0;

        if $i10 < 0 goto label1;

        $d3 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMaxY()>();

        $b1 = d2 cmpg $d3;

        $i11 = (int) $b1;

        if $i11 <= 0 goto label2;

     label1:
        $r36 = new com.spatial4j.core.exception.InvalidShapeException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Y values [");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not in boundary ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r10);

        throw $r36;

     label2:
        $b2 = d0 cmpl d2;

        $i12 = (int) $b2;

        if $i12 <= 0 goto label3;

        $r38 = new com.spatial4j.core.exception.InvalidShapeException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxY must be >= minY: ");

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d2);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r38.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r33);

        throw $r38;

     label3:
        $z0 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z0 == 0 goto label5;

        virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: void verifyX(double)>(d6);

        virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: void verifyX(double)>(d7);

        $b6 = d6 cmpl 180.0;

        if $b6 != 0 goto label4;

        $b9 = d6 cmpl d7;

        if $b9 == 0 goto label4;

        d6 = -180.0;

        goto label8;

     label4:
        $b7 = d7 cmpl -180.0;

        if $b7 != 0 goto label8;

        $b8 = d6 cmpl d7;

        if $b8 == 0 goto label8;

        d7 = 180.0;

        goto label8;

     label5:
        $d4 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMinX()>();

        $b3 = d6 cmpl $d4;

        $i13 = (int) $b3;

        if $i13 < 0 goto label6;

        $d5 = interfaceinvoke $r1.<com.spatial4j.core.shape.Rectangle: double getMaxX()>();

        $b4 = d7 cmpg $d5;

        $i14 = (int) $b4;

        if $i14 <= 0 goto label7;

     label6:
        $r40 = new com.spatial4j.core.exception.InvalidShapeException;

        $r39 = new java.lang.StringBuilder;

        specialinvoke $r39.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("X values [");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d6);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d7);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] not in boundary ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r19);

        throw $r40;

     label7:
        $b5 = d6 cmpl d7;

        $i15 = (int) $b5;

        if $i15 <= 0 goto label8;

        $r42 = new com.spatial4j.core.exception.InvalidShapeException;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("maxX must be >= minX: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d6);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d7);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r26);

        throw $r42;

     label8:
        $r43 = new com.spatial4j.core.shape.impl.RectangleImpl;

        specialinvoke $r43.<com.spatial4j.core.shape.impl.RectangleImpl: void <init>(double,double,double,double,com.spatial4j.core.context.SpatialContext)>(d6, d7, d0, d2, r0);

        return $r43;
    }

    public com.spatial4j.core.shape.Circle makeCircle(double, double, double)
    {
        com.spatial4j.core.shape.Circle $r2;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.shape.Point $r1;
        double d0, d1, d2;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        d2 := @parameter2: double;

        $r1 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Point makePoint(double,double)>(d0, d1);

        $r2 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Circle makeCircle(com.spatial4j.core.shape.Point,double)>($r1, d2);

        return $r2;
    }

    public com.spatial4j.core.shape.Circle makeCircle(com.spatial4j.core.shape.Point, double)
    {
        byte $b0, $b1;
        com.spatial4j.core.shape.impl.GeoCircle $r18;
        com.spatial4j.core.shape.Point r2;
        int $i2, $i3;
        java.lang.String $r8, $r13;
        double d0;
        boolean $z0;
        com.spatial4j.core.shape.impl.CircleImpl $r19;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.exception.InvalidShapeException $r15, $r17;
        java.lang.StringBuilder $r6, $r7, $r11, $r12, $r14, $r16;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        r2 := @parameter0: com.spatial4j.core.shape.Point;

        d0 := @parameter1: double;

        $b0 = d0 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label1;

        $r15 = new com.spatial4j.core.exception.InvalidShapeException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distance must be >= 0; got ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r13);

        throw $r15;

     label1:
        $z0 = virtualinvoke r0.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z0 == 0 goto label3;

        $b1 = d0 cmpl 180.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label2;

        $r17 = new com.spatial4j.core.exception.InvalidShapeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("distance must be <= 180; got ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<com.spatial4j.core.exception.InvalidShapeException: void <init>(java.lang.String)>($r8);

        throw $r17;

     label2:
        $r18 = new com.spatial4j.core.shape.impl.GeoCircle;

        specialinvoke $r18.<com.spatial4j.core.shape.impl.GeoCircle: void <init>(com.spatial4j.core.shape.Point,double,com.spatial4j.core.context.SpatialContext)>(r2, d0, r0);

        return $r18;

     label3:
        $r19 = new com.spatial4j.core.shape.impl.CircleImpl;

        specialinvoke $r19.<com.spatial4j.core.shape.impl.CircleImpl: void <init>(com.spatial4j.core.shape.Point,double,com.spatial4j.core.context.SpatialContext)>(r2, d0, r0);

        return $r19;
    }

    public com.spatial4j.core.shape.Shape readShape(java.lang.String) throws com.spatial4j.core.exception.InvalidShapeException
    {
        com.spatial4j.core.shape.Shape $r3;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.io.ShapeReadWriter $r2;
        java.lang.String r1;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.io.ShapeReadWriter shapeReadWriter>;

        $r3 = virtualinvoke $r2.<com.spatial4j.core.io.ShapeReadWriter: com.spatial4j.core.shape.Shape readShape(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String toString(com.spatial4j.core.shape.Shape)
    {
        com.spatial4j.core.shape.Shape r1;
        com.spatial4j.core.context.SpatialContext r0;
        com.spatial4j.core.io.ShapeReadWriter $r2;
        java.lang.String $r3;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        r1 := @parameter0: com.spatial4j.core.shape.Shape;

        $r2 = r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.io.ShapeReadWriter shapeReadWriter>;

        $r3 = virtualinvoke $r2.<com.spatial4j.core.io.ShapeReadWriter: java.lang.String writeShape(com.spatial4j.core.shape.Shape)>(r1);

        return $r3;
    }

    public java.lang.String toString()
    {
        com.spatial4j.core.distance.DistanceCalculator $r10;
        java.lang.String $r4, $r16, $r20, $r23;
        boolean $z0, $z1;
        com.spatial4j.core.shape.Rectangle $r13;
        com.spatial4j.core.context.SpatialContext r0, $r1, $r18;
        java.lang.StringBuilder $r2, $r5, $r6, $r7, $r8, $r9, $r11, $r12, $r14, $r15, $r17, $r21, $r22;
        java.lang.Class $r3, $r19;

        r0 := @this: com.spatial4j.core.context.SpatialContext;

        $r1 = <com.spatial4j.core.context.SpatialContext: com.spatial4j.core.context.SpatialContext GEO>;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = <com.spatial4j.core.context.SpatialContext: com.spatial4j.core.context.SpatialContext GEO>;

        $r19 = virtualinvoke $r18.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        $r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".GEO");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r23;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getSimpleName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("geo=");

        $z1 = r0.<com.spatial4j.core.context.SpatialContext: boolean geo>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", calculator=");

        $r10 = r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator calculator>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", worldBounds=");

        $r13 = r0.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.shape.Rectangle worldBounds>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r16;
    }

    static void <clinit>()
    {
        com.spatial4j.core.context.SpatialContext $r1;
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/spatial4j/core/context/SpatialContext;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.spatial4j.core.context.SpatialContext: boolean $assertionsDisabled> = $z1;

        $r1 = new com.spatial4j.core.context.SpatialContext;

        specialinvoke $r1.<com.spatial4j.core.context.SpatialContext: void <init>(boolean)>(1);

        <com.spatial4j.core.context.SpatialContext: com.spatial4j.core.context.SpatialContext GEO> = $r1;

        return;
    }
}
