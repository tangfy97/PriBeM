public abstract class org.junit.runner.Request extends java.lang.Object
{

    public void <init>()
    {
        org.junit.runner.Request r0;

        r0 := @this: org.junit.runner.Request;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.junit.runner.Request method(java.lang.Class, java.lang.String)
    {
        org.junit.runner.Request $r3, $r4;
        java.lang.Class r0;
        org.junit.runner.Description $r2;
        java.lang.String r1;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.junit.runner.Description: org.junit.runner.Description createTestDescription(java.lang.Class,java.lang.String)>(r0, r1);

        $r3 = staticinvoke <org.junit.runner.Request: org.junit.runner.Request aClass(java.lang.Class)>(r0);

        $r4 = virtualinvoke $r3.<org.junit.runner.Request: org.junit.runner.Request filterWith(org.junit.runner.Description)>($r2);

        return $r4;
    }

    public static org.junit.runner.Request aClass(java.lang.Class)
    {
        org.junit.internal.requests.ClassRequest $r0;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.junit.internal.requests.ClassRequest;

        specialinvoke $r0.<org.junit.internal.requests.ClassRequest: void <init>(java.lang.Class)>(r1);

        return $r0;
    }

    public static org.junit.runner.Request classWithoutSuiteMethod(java.lang.Class)
    {
        org.junit.internal.requests.ClassRequest $r0;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        $r0 = new org.junit.internal.requests.ClassRequest;

        specialinvoke $r0.<org.junit.internal.requests.ClassRequest: void <init>(java.lang.Class,boolean)>(r1, 0);

        return $r0;
    }

    public static transient org.junit.runner.Request classes(org.junit.runner.Computer, java.lang.Class[])
    {
        org.junit.runner.Request $r4;
        org.junit.runner.Runner $r3;
        org.junit.runner.Computer r1;
        org.junit.internal.builders.AllDefaultPossibilitiesBuilder $r0;
        java.lang.Class[] r2;
        org.junit.runners.model.InitializationError $r5;
        java.lang.RuntimeException $r6;

        r1 := @parameter0: org.junit.runner.Computer;

        r2 := @parameter1: java.lang.Class[];

     label1:
        $r0 = new org.junit.internal.builders.AllDefaultPossibilitiesBuilder;

        specialinvoke $r0.<org.junit.internal.builders.AllDefaultPossibilitiesBuilder: void <init>(boolean)>(1);

        $r3 = virtualinvoke r1.<org.junit.runner.Computer: org.junit.runner.Runner getSuite(org.junit.runners.model.RunnerBuilder,java.lang.Class[])>($r0, r2);

        $r4 = staticinvoke <org.junit.runner.Request: org.junit.runner.Request runner(org.junit.runner.Runner)>($r3);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Bug in saff\'s brain: Suite constructor, called as above, should always complete");

        throw $r6;

        catch org.junit.runners.model.InitializationError from label1 to label2 with label3;
    }

    public static transient org.junit.runner.Request classes(java.lang.Class[])
    {
        java.lang.Class[] r1;
        org.junit.runner.Request $r2;
        org.junit.runner.Computer $r0;

        r1 := @parameter0: java.lang.Class[];

        $r0 = staticinvoke <org.junit.runner.JUnitCore: org.junit.runner.Computer defaultComputer()>();

        $r2 = staticinvoke <org.junit.runner.Request: org.junit.runner.Request classes(org.junit.runner.Computer,java.lang.Class[])>($r0, r1);

        return $r2;
    }

    public static org.junit.runner.Request errorReport(java.lang.Class, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.junit.internal.runners.ErrorReportingRunner $r0;
        org.junit.runner.Request $r3;
        java.lang.Class r1;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: java.lang.Throwable;

        $r0 = new org.junit.internal.runners.ErrorReportingRunner;

        specialinvoke $r0.<org.junit.internal.runners.ErrorReportingRunner: void <init>(java.lang.Class,java.lang.Throwable)>(r1, r2);

        $r3 = staticinvoke <org.junit.runner.Request: org.junit.runner.Request runner(org.junit.runner.Runner)>($r0);

        return $r3;
    }

    public static org.junit.runner.Request runner(org.junit.runner.Runner)
    {
        org.junit.runner.Request$1 $r0;
        org.junit.runner.Runner r1;

        r1 := @parameter0: org.junit.runner.Runner;

        $r0 = new org.junit.runner.Request$1;

        specialinvoke $r0.<org.junit.runner.Request$1: void <init>(org.junit.runner.Runner)>(r1);

        return $r0;
    }

    public abstract org.junit.runner.Runner getRunner();

    public org.junit.runner.Request filterWith(org.junit.runner.manipulation.Filter)
    {
        org.junit.runner.Request r1;
        org.junit.runner.manipulation.Filter r2;
        org.junit.internal.requests.FilterRequest $r0;

        r1 := @this: org.junit.runner.Request;

        r2 := @parameter0: org.junit.runner.manipulation.Filter;

        $r0 = new org.junit.internal.requests.FilterRequest;

        specialinvoke $r0.<org.junit.internal.requests.FilterRequest: void <init>(org.junit.runner.Request,org.junit.runner.manipulation.Filter)>(r1, r2);

        return $r0;
    }

    public org.junit.runner.Request filterWith(org.junit.runner.Description)
    {
        org.junit.runner.Request r0, $r3;
        org.junit.runner.manipulation.Filter $r2;
        org.junit.runner.Description r1;

        r0 := @this: org.junit.runner.Request;

        r1 := @parameter0: org.junit.runner.Description;

        $r2 = staticinvoke <org.junit.runner.manipulation.Filter: org.junit.runner.manipulation.Filter matchMethodDescription(org.junit.runner.Description)>(r1);

        $r3 = virtualinvoke r0.<org.junit.runner.Request: org.junit.runner.Request filterWith(org.junit.runner.manipulation.Filter)>($r2);

        return $r3;
    }

    public org.junit.runner.Request sortWith(java.util.Comparator)
    {
        org.junit.internal.requests.SortingRequest $r0;
        org.junit.runner.Request r1;
        java.util.Comparator r2;

        r1 := @this: org.junit.runner.Request;

        r2 := @parameter0: java.util.Comparator;

        $r0 = new org.junit.internal.requests.SortingRequest;

        specialinvoke $r0.<org.junit.internal.requests.SortingRequest: void <init>(org.junit.runner.Request,java.util.Comparator)>(r1, r2);

        return $r0;
    }
}
