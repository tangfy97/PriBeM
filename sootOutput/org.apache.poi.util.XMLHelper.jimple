public final class org.apache.poi.util.XMLHelper extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.util.XMLHelper r0;

        r0 := @this: org.apache.poi.util.XMLHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static javax.xml.parsers.DocumentBuilderFactory getDocumentBuilderFactory()
    {
        javax.xml.parsers.DocumentBuilderFactory $r0;
        java.lang.RuntimeException $r2;
        javax.xml.parsers.ParserConfigurationException $r1;

     label1:
        $r0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setXIncludeAware(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setExpandEntityReferences(boolean)>(0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-general-entities", 0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-parameter-entities", 0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/nonvalidating/load-external-dtd", 0);

        virtualinvoke $r0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/nonvalidating/load-dtd-grammar", 0);

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        $r2 = new java.lang.RuntimeException;

        specialinvoke $r2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Broken XML Setup", $r1);

        throw $r2;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
    }
}
