class nu.xom.UnicodeUtil$UnicodeString extends java.lang.Object
{
    private int[] data;
    private int size;

    void <init>(java.lang.String)
    {
        nu.xom.UnicodeUtil$UnicodeString r0;
        char $c1, $c2;
        int[] $r2, $r3;
        int $i0, i3, i4, i5, $i6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: nu.xom.UnicodeUtil$UnicodeString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<nu.xom.UnicodeUtil$UnicodeString: int size> = 0;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $r2 = newarray (int)[$i0];

        r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data> = $r2;

        i3 = 0;

        i4 = 0;

     label1:
        if i4 >= $i0 goto label3;

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c1;

        i5 = $i6;

        $z0 = staticinvoke <nu.xom.UnicodeUtil: boolean access$000(char)>($c1);

        if $z0 == 0 goto label2;

        i4 = i4 + 1;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        i5 = staticinvoke <nu.xom.UnicodeUtil: int combineSurrogatePair(char,char)>($c1, $c2);

     label2:
        $r3 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $r3[i3] = i5;

        i3 = i3 + 1;

        i4 = i4 + 1;

        goto label1;

     label3:
        r0.<nu.xom.UnicodeUtil$UnicodeString: int size> = i3;

        return;
    }

    void <init>(int)
    {
        int i0;
        int[] $r1;
        nu.xom.UnicodeUtil$UnicodeString r0;

        r0 := @this: nu.xom.UnicodeUtil$UnicodeString;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<nu.xom.UnicodeUtil$UnicodeString: int size> = 0;

        r0.<nu.xom.UnicodeUtil$UnicodeString: int size> = 0;

        $r1 = newarray (int)[i0];

        r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data> = $r1;

        return;
    }

    nu.xom.UnicodeUtil$UnicodeString decompose()
    {
        int[] $r2, $r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11, i12, $i14, $i16, $i18;
        java.lang.String $r7;
        nu.xom.UnicodeUtil$UnicodeString r1, $r8;

        r1 := @this: nu.xom.UnicodeUtil$UnicodeString;

        $r8 = new nu.xom.UnicodeUtil$UnicodeString;

        $i0 = r1.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        specialinvoke $r8.<nu.xom.UnicodeUtil$UnicodeString: void <init>(int)>($i0);

        i8 = 0;

     label1:
        $i1 = r1.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        if i8 >= $i1 goto label2;

        $r6 = r1.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        i9 = $r6[i8];

        $r7 = staticinvoke <nu.xom.UnicodeUtil: java.lang.String access$100(int)>(i9);

        virtualinvoke $r8.<nu.xom.UnicodeUtil$UnicodeString: void append(java.lang.String)>($r7);

        i8 = i8 + 1;

        goto label1;

     label2:
        i10 = 0;

     label3:
        $i2 = $r8.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        $i3 = $i2 - 1;

        if i10 >= $i3 goto label6;

        $r2 = $r8.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        i11 = $r2[i10];

        $r3 = $r8.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i4 = i10 + 1;

        i12 = $r3[$i4];

        $i5 = staticinvoke <nu.xom.UnicodeUtil: int access$200(int)>(i12);

        if $i5 != 0 goto label4;

        goto label5;

     label4:
        $i6 = staticinvoke <nu.xom.UnicodeUtil: int access$200(int)>(i11);

        if $i6 <= $i5 goto label5;

        $r4 = $r8.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $r4[i10] = i12;

        $r5 = $r8.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i7 = i10 + 1;

        $r5[$i7] = i11;

        $i14 = (int) -2;

        i10 = i10 + $i14;

        $i16 = (int) -2;

        if i10 != $i16 goto label5;

        $i18 = (int) -1;

        i10 = $i18;

     label5:
        i10 = i10 + 1;

        goto label3;

     label6:
        return $r8;
    }

    nu.xom.UnicodeUtil$UnicodeString compose()
    {
        int[] $r3, $r4, $r5, $r6;
        java.util.Map $r0;
        int $i0, i1, $i2, $i3, $i4, i5, i6, i7, i8, $i9, $i11, $i13, $i15, $i17, $i19;
        boolean $z0, $z1, $z2;
        nu.xom.UnicodeUtil$UnicodeString r2, $r7;

        r2 := @this: nu.xom.UnicodeUtil$UnicodeString;

        $r0 = staticinvoke <nu.xom.UnicodeUtil: java.util.Map access$300()>();

        if $r0 != null goto label1;

        staticinvoke <nu.xom.UnicodeUtil: void access$400()>();

     label1:
        $r7 = new nu.xom.UnicodeUtil$UnicodeString;

        $i0 = r2.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        specialinvoke $r7.<nu.xom.UnicodeUtil$UnicodeString: void <init>(int)>($i0);

        $i11 = (int) -1;

        i5 = $i11;

        $i13 = (int) -1;

        i6 = $i13;

        $i15 = (int) -1;

        i7 = $i15;

        i8 = 0;

     label2:
        $i9 = r2.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        if i8 >= $i9 goto label7;

        $r3 = r2.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        i1 = $r3[i8];

        $i17 = (int) -1;

        if i5 == $i17 goto label3;

        $z1 = specialinvoke r2.<nu.xom.UnicodeUtil$UnicodeString: boolean isBlocked(int,int)>(i6, i8);

        if $z1 == 0 goto label4;

     label3:
        virtualinvoke $r7.<nu.xom.UnicodeUtil$UnicodeString: void append(int)>(i1);

        $z0 = staticinvoke <nu.xom.UnicodeUtil: boolean access$500(int)>(i1);

        if $z0 == 0 goto label6;

        i5 = i1;

        i6 = i8;

        $i2 = $r7.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        i7 = $i2 - 1;

        goto label6;

     label4:
        $i3 = staticinvoke <nu.xom.UnicodeUtil: int access$600(int,int)>(i5, i1);

        $i19 = (int) -1;

        if $i3 != $i19 goto label5;

        virtualinvoke $r7.<nu.xom.UnicodeUtil$UnicodeString: void append(int)>(i1);

        $z2 = staticinvoke <nu.xom.UnicodeUtil: boolean access$500(int)>(i1);

        if $z2 == 0 goto label6;

        i5 = i1;

        i6 = i8;

        $i4 = $r7.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        i7 = $i4 - 1;

        goto label6;

     label5:
        i5 = $i3;

        $r4 = r2.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $r4[i6] = $i3;

        $r5 = r2.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $r5[i8] = 0;

        $r6 = $r7.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $r6[i7] = $i3;

     label6:
        i8 = i8 + 1;

        goto label2;

     label7:
        return $r7;
    }

    void append(java.lang.String)
    {
        nu.xom.UnicodeUtil$UnicodeString r1;
        char $c1, $c3;
        int $i0, $i2, $i4, i5, $i6;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: nu.xom.UnicodeUtil$UnicodeString;

        r0 := @parameter0: java.lang.String;

        i5 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i5 >= $i0 goto label4;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i5);

        $z0 = staticinvoke <nu.xom.UnicodeUtil: boolean access$000(char)>($c1);

        if $z0 == 0 goto label2;

        $i2 = i5 + 1;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = staticinvoke <nu.xom.UnicodeUtil: int combineSurrogatePair(char,char)>($c1, $c3);

        virtualinvoke r1.<nu.xom.UnicodeUtil$UnicodeString: void append(int)>($i4);

        i5 = i5 + 1;

        goto label3;

     label2:
        $i6 = (int) $c1;

        virtualinvoke r1.<nu.xom.UnicodeUtil$UnicodeString: void append(int)>($i6);

     label3:
        i5 = i5 + 1;

        goto label1;

     label4:
        return;
    }

    void append(int)
    {
        int[] $r1, $r2, r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9;
        nu.xom.UnicodeUtil$UnicodeString r0;

        r0 := @this: nu.xom.UnicodeUtil$UnicodeString;

        i6 := @parameter0: int;

        $i2 = r0.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        $r1 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i0 = lengthof $r1;

        $i1 = $i0 - 1;

        if $i2 >= $i1 goto label1;

        $r5 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i7 = r0.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        $r5[$i7] = i6;

        $i8 = r0.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        $i9 = $i8 + 1;

        r0.<nu.xom.UnicodeUtil$UnicodeString: int size> = $i9;

        goto label2;

     label1:
        $r2 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i3 = lengthof $r2;

        $i4 = $i3 + 10;

        r3 = newarray (int)[$i4];

        $r4 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i5 = r0.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r3, 0, $i5);

        r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data> = r3;

        virtualinvoke r0.<nu.xom.UnicodeUtil$UnicodeString: void append(int)>(i6);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        nu.xom.UnicodeUtil$UnicodeString r1;
        char $c2;
        int[] $r3;
        java.lang.StringBuffer $r5;
        int $i0, i1, i3, $i5;
        java.lang.String $r2, $r4;

        r1 := @this: nu.xom.UnicodeUtil$UnicodeString;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        i3 = 0;

     label1:
        $i0 = r1.<nu.xom.UnicodeUtil$UnicodeString: int size>;

        if i3 >= $i0 goto label4;

        $r3 = r1.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        i1 = $r3[i3];

        $i5 = (int) 65535;

        if i1 > $i5 goto label2;

        $c2 = (char) i1;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label3;

     label2:
        $r4 = staticinvoke <nu.xom.UnicodeUtil: java.lang.String access$700(int)>(i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private boolean isBlocked(int, int)
    {
        nu.xom.UnicodeUtil$UnicodeString r0;
        int[] $r1, $r2, $r3;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, i7;

        r0 := @this: nu.xom.UnicodeUtil$UnicodeString;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        $r1 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i1 = $r1[i0];

        $i2 = staticinvoke <nu.xom.UnicodeUtil: int access$200(int)>($i1);

        i7 = i3 + 1;

     label1:
        if i7 >= i0 goto label3;

        $r2 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i4 = $r2[i7];

        if $i4 == 0 goto label2;

        $r3 = r0.<nu.xom.UnicodeUtil$UnicodeString: int[] data>;

        $i5 = $r3[i7];

        $i6 = staticinvoke <nu.xom.UnicodeUtil: int access$200(int)>($i5);

        if $i2 != $i6 goto label2;

        return 1;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return 0;
    }
}
