class org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iterator;
    final org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1 this$1;

    void <init>(org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1)
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1 r0;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap $r3;
        java.util.List $r4;
        java.util.Iterator $r5;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1 r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1;

        r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1 this$1>;

        $r3 = $r2.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap: java.util.List access$000(org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap)>($r3);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1: java.util.Iterator iterator> = $r5;

        return;
    }

    public boolean hasNext()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute next()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1 r0;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute) $r2;

        return $r3;
    }

    public void remove()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1 r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Attempt to modify an immutable set.");

        throw $r0;
    }

    public volatile java.lang.Object next()
    {
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1 r0;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$1$1: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute next()>();

        return $r1;
    }
}
