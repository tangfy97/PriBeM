class org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2 extends java.lang.Object implements com.google.gwt.event.dom.client.ChangeHandler
{
    final com.google.gwt.user.client.ui.ListBox val$selector;
    final org.waveprotocol.wave.client.editor.harness.EditorHarness val$editorHarness;
    final org.waveprotocol.wave.client.editor.harness.SignalEventHarness val$eventHarness;
    final org.waveprotocol.wave.client.editor.harness.DefaultTestHarness this$0;

    void <init>(org.waveprotocol.wave.client.editor.harness.DefaultTestHarness, com.google.gwt.user.client.ui.ListBox, org.waveprotocol.wave.client.editor.harness.EditorHarness, org.waveprotocol.wave.client.editor.harness.SignalEventHarness)
    {
        org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2 r0;
        org.waveprotocol.wave.client.editor.harness.DefaultTestHarness r1;
        org.waveprotocol.wave.client.editor.harness.EditorHarness r3;
        com.google.gwt.user.client.ui.ListBox r2;
        org.waveprotocol.wave.client.editor.harness.SignalEventHarness r4;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.harness.DefaultTestHarness;

        r2 := @parameter1: com.google.gwt.user.client.ui.ListBox;

        r3 := @parameter2: org.waveprotocol.wave.client.editor.harness.EditorHarness;

        r4 := @parameter3: org.waveprotocol.wave.client.editor.harness.SignalEventHarness;

        r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.DefaultTestHarness this$0> = r1;

        r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: com.google.gwt.user.client.ui.ListBox val$selector> = r2;

        r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.EditorHarness val$editorHarness> = r3;

        r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.SignalEventHarness val$eventHarness> = r4;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onChange(com.google.gwt.event.dom.client.ChangeEvent)
    {
        com.google.gwt.user.client.Element $r3, $r7, $r11, $r15;
        com.google.gwt.event.dom.client.ChangeEvent r18;
        org.waveprotocol.wave.client.editor.harness.EditorHarness $r2, $r10;
        com.google.gwt.dom.client.Style $r4, $r8, $r12, $r16;
        com.google.gwt.dom.client.Style$Display $r5, $r9, $r13, $r17;
        boolean $z0;
        org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2 r0;
        org.waveprotocol.wave.client.editor.harness.SignalEventHarness $r6, $r14;
        com.google.gwt.user.client.ui.ListBox $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2;

        r18 := @parameter0: com.google.gwt.event.dom.client.ChangeEvent;

        $r1 = r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: com.google.gwt.user.client.ui.ListBox val$selector>;

        $z0 = virtualinvoke $r1.<com.google.gwt.user.client.ui.ListBox: boolean isItemSelected(int)>(0);

        if $z0 == 0 goto label1;

        $r10 = r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.EditorHarness val$editorHarness>;

        $r11 = virtualinvoke $r10.<org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.Element getElement()>();

        $r12 = virtualinvoke $r11.<com.google.gwt.user.client.Element: com.google.gwt.dom.client.Style getStyle()>();

        $r13 = <com.google.gwt.dom.client.Style$Display: com.google.gwt.dom.client.Style$Display BLOCK>;

        virtualinvoke $r12.<com.google.gwt.dom.client.Style: void setDisplay(com.google.gwt.dom.client.Style$Display)>($r13);

        $r14 = r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.SignalEventHarness val$eventHarness>;

        $r15 = virtualinvoke $r14.<org.waveprotocol.wave.client.editor.harness.SignalEventHarness: com.google.gwt.user.client.Element getElement()>();

        $r16 = virtualinvoke $r15.<com.google.gwt.user.client.Element: com.google.gwt.dom.client.Style getStyle()>();

        $r17 = <com.google.gwt.dom.client.Style$Display: com.google.gwt.dom.client.Style$Display NONE>;

        virtualinvoke $r16.<com.google.gwt.dom.client.Style: void setDisplay(com.google.gwt.dom.client.Style$Display)>($r17);

        goto label2;

     label1:
        $r2 = r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.EditorHarness val$editorHarness>;

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.harness.EditorHarness: com.google.gwt.user.client.Element getElement()>();

        $r4 = virtualinvoke $r3.<com.google.gwt.user.client.Element: com.google.gwt.dom.client.Style getStyle()>();

        $r5 = <com.google.gwt.dom.client.Style$Display: com.google.gwt.dom.client.Style$Display NONE>;

        virtualinvoke $r4.<com.google.gwt.dom.client.Style: void setDisplay(com.google.gwt.dom.client.Style$Display)>($r5);

        $r6 = r0.<org.waveprotocol.wave.client.editor.harness.DefaultTestHarness$2: org.waveprotocol.wave.client.editor.harness.SignalEventHarness val$eventHarness>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.client.editor.harness.SignalEventHarness: com.google.gwt.user.client.Element getElement()>();

        $r8 = virtualinvoke $r7.<com.google.gwt.user.client.Element: com.google.gwt.dom.client.Style getStyle()>();

        $r9 = <com.google.gwt.dom.client.Style$Display: com.google.gwt.dom.client.Style$Display BLOCK>;

        virtualinvoke $r8.<com.google.gwt.dom.client.Style: void setDisplay(com.google.gwt.dom.client.Style$Display)>($r9);

     label2:
        return;
    }
}
