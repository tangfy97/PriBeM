public class org.apache.tika.parser.NetworkParser extends org.apache.tika.parser.AbstractParser
{
    private final java.net.URI uri;
    private final java.util.Set supportedTypes;

    public void <init>(java.net.URI, java.util.Set)
    {
        org.apache.tika.parser.NetworkParser r0;
        java.util.Set r2;
        java.net.URI r1;

        r0 := @this: org.apache.tika.parser.NetworkParser;

        r1 := @parameter0: java.net.URI;

        r2 := @parameter1: java.util.Set;

        specialinvoke r0.<org.apache.tika.parser.AbstractParser: void <init>()>();

        r0.<org.apache.tika.parser.NetworkParser: java.net.URI uri> = r1;

        r0.<org.apache.tika.parser.NetworkParser: java.util.Set supportedTypes> = r2;

        return;
    }

    public void <init>(java.net.URI)
    {
        org.apache.tika.parser.NetworkParser r0;
        java.util.Set $r3;
        java.net.URI r1;
        org.apache.tika.mime.MediaType $r2;

        r0 := @this: org.apache.tika.parser.NetworkParser;

        r1 := @parameter0: java.net.URI;

        $r2 = <org.apache.tika.mime.MediaType: org.apache.tika.mime.MediaType OCTET_STREAM>;

        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        specialinvoke r0.<org.apache.tika.parser.NetworkParser: void <init>(java.net.URI,java.util.Set)>(r1, $r3);

        return;
    }

    public java.util.Set getSupportedTypes(org.apache.tika.parser.ParseContext)
    {
        org.apache.tika.parser.NetworkParser r0;
        java.util.Set $r1;
        org.apache.tika.parser.ParseContext r2;

        r0 := @this: org.apache.tika.parser.NetworkParser;

        r2 := @parameter0: org.apache.tika.parser.ParseContext;

        $r1 = r0.<org.apache.tika.parser.NetworkParser: java.util.Set supportedTypes>;

        return $r1;
    }

    public void parse(java.io.InputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        org.apache.tika.parser.NetworkParser r3;
        java.lang.Throwable $r7;
        org.apache.tika.io.TemporaryResources $r0;
        org.apache.tika.metadata.Metadata r5;
        org.apache.tika.parser.ParseContext r6;
        org.apache.tika.io.TikaInputStream $r2;
        org.xml.sax.ContentHandler r4;
        java.io.InputStream r1;

        r3 := @this: org.apache.tika.parser.NetworkParser;

        r1 := @parameter0: java.io.InputStream;

        r4 := @parameter1: org.xml.sax.ContentHandler;

        r5 := @parameter2: org.apache.tika.metadata.Metadata;

        r6 := @parameter3: org.apache.tika.parser.ParseContext;

        $r0 = new org.apache.tika.io.TemporaryResources;

        specialinvoke $r0.<org.apache.tika.io.TemporaryResources: void <init>()>();

     label1:
        $r2 = staticinvoke <org.apache.tika.io.TikaInputStream: org.apache.tika.io.TikaInputStream get(java.io.InputStream,org.apache.tika.io.TemporaryResources)>(r1, $r0);

        specialinvoke r3.<org.apache.tika.parser.NetworkParser: void parse(org.apache.tika.io.TikaInputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r2, r4, r5, r6);

     label2:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        virtualinvoke $r0.<org.apache.tika.io.TemporaryResources: void dispose()>();

        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void parse(org.apache.tika.io.TikaInputStream, org.xml.sax.ContentHandler, org.apache.tika.metadata.Metadata, org.apache.tika.parser.ParseContext) throws java.io.IOException, org.xml.sax.SAXException, org.apache.tika.exception.TikaException
    {
        java.lang.Throwable $r23, $r24;
        java.net.Socket $r15;
        org.apache.tika.parser.NetworkParser$ParsingTask $r8, $r19;
        java.net.URL $r5;
        org.apache.tika.metadata.Metadata r13;
        java.net.URLConnection $r6;
        int $i0;
        org.apache.tika.io.TikaInputStream r9;
        java.net.URI $r1, $r4, $r16, $r18;
        java.lang.String $r2, $r3, $r17;
        org.xml.sax.ContentHandler r12;
        boolean $z0;
        org.apache.tika.parser.NetworkParser r0;
        java.io.OutputStream $r10, $r21;
        org.apache.tika.parser.NetworkParser$1 $r20;
        org.apache.tika.io.CloseShieldInputStream $r11;
        org.apache.tika.parser.ParseContext r14;
        java.io.InputStream $r7, $r22;

        r0 := @this: org.apache.tika.parser.NetworkParser;

        r9 := @parameter0: org.apache.tika.io.TikaInputStream;

        r12 := @parameter1: org.xml.sax.ContentHandler;

        r13 := @parameter2: org.apache.tika.metadata.Metadata;

        r14 := @parameter3: org.apache.tika.parser.ParseContext;

        $r2 = "telnet";

        $r1 = r0.<org.apache.tika.parser.NetworkParser: java.net.URI uri>;

        $r3 = virtualinvoke $r1.<java.net.URI: java.lang.String getScheme()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label06;

        $r15 = new java.net.Socket;

        $r16 = r0.<org.apache.tika.parser.NetworkParser: java.net.URI uri>;

        $r17 = virtualinvoke $r16.<java.net.URI: java.lang.String getHost()>();

        $r18 = r0.<org.apache.tika.parser.NetworkParser: java.net.URI uri>;

        $i0 = virtualinvoke $r18.<java.net.URI: int getPort()>();

        specialinvoke $r15.<java.net.Socket: void <init>(java.lang.String,int)>($r17, $i0);

     label01:
        $r19 = new org.apache.tika.parser.NetworkParser$ParsingTask;

        $r20 = new org.apache.tika.parser.NetworkParser$1;

        $r21 = virtualinvoke $r15.<java.net.Socket: java.io.OutputStream getOutputStream()>();

        specialinvoke $r20.<org.apache.tika.parser.NetworkParser$1: void <init>(org.apache.tika.parser.NetworkParser,java.io.OutputStream,java.net.Socket)>(r0, $r21, $r15);

        specialinvoke $r19.<org.apache.tika.parser.NetworkParser$ParsingTask: void <init>(org.apache.tika.io.TikaInputStream,java.io.OutputStream)>(r9, $r20);

        $r22 = virtualinvoke $r15.<java.net.Socket: java.io.InputStream getInputStream()>();

        virtualinvoke $r19.<org.apache.tika.parser.NetworkParser$ParsingTask: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r22, r12, r13, r14);

     label02:
        virtualinvoke $r15.<java.net.Socket: void close()>();

        goto label05;

     label03:
        $r24 := @caughtexception;

     label04:
        virtualinvoke $r15.<java.net.Socket: void close()>();

        throw $r24;

     label05:
        goto label11;

     label06:
        $r4 = r0.<org.apache.tika.parser.NetworkParser: java.net.URI uri>;

        $r5 = virtualinvoke $r4.<java.net.URI: java.net.URL toURL()>();

        $r6 = virtualinvoke $r5.<java.net.URL: java.net.URLConnection openConnection()>();

        virtualinvoke $r6.<java.net.URLConnection: void setDoOutput(boolean)>(1);

        virtualinvoke $r6.<java.net.URLConnection: void connect()>();

        $r7 = virtualinvoke $r6.<java.net.URLConnection: java.io.InputStream getInputStream()>();

     label07:
        $r8 = new org.apache.tika.parser.NetworkParser$ParsingTask;

        $r10 = virtualinvoke $r6.<java.net.URLConnection: java.io.OutputStream getOutputStream()>();

        specialinvoke $r8.<org.apache.tika.parser.NetworkParser$ParsingTask: void <init>(org.apache.tika.io.TikaInputStream,java.io.OutputStream)>(r9, $r10);

        $r11 = new org.apache.tika.io.CloseShieldInputStream;

        specialinvoke $r11.<org.apache.tika.io.CloseShieldInputStream: void <init>(java.io.InputStream)>($r7);

        virtualinvoke $r8.<org.apache.tika.parser.NetworkParser$ParsingTask: void parse(java.io.InputStream,org.xml.sax.ContentHandler,org.apache.tika.metadata.Metadata,org.apache.tika.parser.ParseContext)>($r11, r12, r13, r14);

     label08:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        goto label11;

     label09:
        $r23 := @caughtexception;

     label10:
        virtualinvoke $r7.<java.io.InputStream: void close()>();

        throw $r23;

     label11:
        return;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }
}
