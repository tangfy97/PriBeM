public abstract class org.eclipse.jetty.websocket.WebSocketServlet extends javax.servlet.http.HttpServlet implements org.eclipse.jetty.websocket.WebSocketFactory$Acceptor
{
    private final org.eclipse.jetty.util.log.Logger LOG;
    private org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory;

    public void <init>()
    {
        java.lang.Class $r1;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.websocket.WebSocketServlet r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketServlet;

        specialinvoke r0.<javax.servlet.http.HttpServlet: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>($r1);

        r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.util.log.Logger LOG> = $r2;

        return;
    }

    public void init() throws javax.servlet.ServletException
    {
        org.eclipse.jetty.websocket.WebSocketFactory $r2, $r3, $r7, $r8, $r9;
        javax.servlet.ServletException $r11, $r12;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r4, $r5, $r6;
        org.eclipse.jetty.websocket.WebSocketServlet r0;
        java.lang.Exception $r10;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketServlet;

     label1:
        $r1 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketServlet: java.lang.String getInitParameter(java.lang.String)>("bufferSize");

        $r2 = new org.eclipse.jetty.websocket.WebSocketFactory;

        if $r1 != null goto label2;

        $i3 = 8192;

        goto label3;

     label2:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r1);

     label3:
        specialinvoke $r2.<org.eclipse.jetty.websocket.WebSocketFactory: void <init>(org.eclipse.jetty.websocket.WebSocketFactory$Acceptor,int)>(r0, $i3);

        r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory> = $r2;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory>;

        virtualinvoke $r3.<org.eclipse.jetty.websocket.WebSocketFactory: void start()>();

        $r4 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketServlet: java.lang.String getInitParameter(java.lang.String)>("maxIdleTime");

        if $r4 == null goto label4;

        $r9 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory>;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        virtualinvoke $r9.<org.eclipse.jetty.websocket.WebSocketFactory: void setMaxIdleTime(int)>($i2);

     label4:
        $r5 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketServlet: java.lang.String getInitParameter(java.lang.String)>("maxTextMessageSize");

        if $r5 == null goto label5;

        $r8 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory>;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        virtualinvoke $r8.<org.eclipse.jetty.websocket.WebSocketFactory: void setMaxTextMessageSize(int)>($i1);

     label5:
        $r6 = virtualinvoke r0.<org.eclipse.jetty.websocket.WebSocketServlet: java.lang.String getInitParameter(java.lang.String)>("maxBinaryMessageSize");

        if $r6 == null goto label6;

        $r7 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory>;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        virtualinvoke $r7.<org.eclipse.jetty.websocket.WebSocketFactory: void setMaxBinaryMessageSize(int)>($i0);

     label6:
        goto label9;

     label7:
        $r12 := @caughtexception;

        throw $r12;

     label8:
        $r10 := @caughtexception;

        $r11 = new javax.servlet.ServletException;

        specialinvoke $r11.<javax.servlet.ServletException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label9:
        return;

        catch javax.servlet.ServletException from label1 to label6 with label7;
        catch java.lang.Exception from label1 to label6 with label8;
    }

    protected void service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r1;
        org.eclipse.jetty.websocket.WebSocketFactory $r3;
        org.eclipse.jetty.websocket.WebSocketServlet r0;
        javax.servlet.http.HttpServletResponse r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory>;

        $z0 = virtualinvoke $r3.<org.eclipse.jetty.websocket.WebSocketFactory: boolean acceptWebSocket(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        if $z0 != 0 goto label1;

        $z1 = interfaceinvoke r2.<javax.servlet.http.HttpServletResponse: boolean isCommitted()>();

        if $z1 == 0 goto label2;

     label1:
        return;

     label2:
        specialinvoke r0.<javax.servlet.http.HttpServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r2);

        return;
    }

    public boolean checkOrigin(javax.servlet.http.HttpServletRequest, java.lang.String)
    {
        javax.servlet.http.HttpServletRequest r1;
        java.lang.String r2;
        org.eclipse.jetty.websocket.WebSocketServlet r0;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: java.lang.String;

        return 1;
    }

    public void destroy()
    {
        org.eclipse.jetty.websocket.WebSocketFactory $r1;
        org.eclipse.jetty.websocket.WebSocketServlet r0;
        org.eclipse.jetty.util.log.Logger $r3;
        java.lang.Exception $r2;

        r0 := @this: org.eclipse.jetty.websocket.WebSocketServlet;

     label1:
        $r1 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.websocket.WebSocketFactory _webSocketFactory>;

        virtualinvoke $r1.<org.eclipse.jetty.websocket.WebSocketFactory: void stop()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = r0.<org.eclipse.jetty.websocket.WebSocketServlet: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r2);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
