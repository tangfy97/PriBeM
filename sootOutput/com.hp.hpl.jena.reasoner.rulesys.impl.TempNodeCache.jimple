public class com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache extends java.lang.Object
{
    protected com.hp.hpl.jena.util.OneToManyMap ipMap;
    protected java.util.Map classMap;

    public void <init>(com.hp.hpl.jena.reasoner.InfGraph)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache r0;
        java.util.HashMap $r2;
        com.hp.hpl.jena.reasoner.InfGraph r3;
        com.hp.hpl.jena.util.OneToManyMap $r1;

        r0 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache;

        r3 := @parameter0: com.hp.hpl.jena.reasoner.InfGraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.hp.hpl.jena.util.OneToManyMap;

        specialinvoke $r1.<com.hp.hpl.jena.util.OneToManyMap: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache: com.hp.hpl.jena.util.OneToManyMap ipMap> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache: java.util.Map classMap> = $r2;

        return;
    }

    public synchronized com.hp.hpl.jena.graph.Node getTemp(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache$NodePair $r0;
        com.hp.hpl.jena.graph.Node r1, r2, $r6, r8, r11, r14;
        com.hp.hpl.jena.util.OneToManyMap $r4, $r7;
        java.util.Map $r9, $r12;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache r3;
        java.lang.Object $r10, $r13;

        r3 := @this: com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r8 := @parameter2: com.hp.hpl.jena.graph.Node;

        $r0 = new com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache$NodePair;

        specialinvoke $r0.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache$NodePair: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2);

        r14 = null;

        $r4 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache: com.hp.hpl.jena.util.OneToManyMap ipMap>;

        $r5 = virtualinvoke $r4.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>($r0);

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r10 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r11 = (com.hp.hpl.jena.graph.Node) $r10;

        if r8 == null goto label3;

        $r12 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache: java.util.Map classMap>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r11);

        if $r13 == null goto label2;

        $z1 = virtualinvoke $r13.<java.lang.Object: boolean equals(java.lang.Object)>(r8);

        if $z1 == 0 goto label2;

        r14 = r11;

        goto label5;

     label2:
        goto label4;

     label3:
        r14 = r11;

        goto label5;

     label4:
        goto label1;

     label5:
        if r14 != null goto label6;

        $r6 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createAnon()>();

        r14 = $r6;

        $r7 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache: com.hp.hpl.jena.util.OneToManyMap ipMap>;

        virtualinvoke $r7.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r0, $r6);

        if r8 == null goto label6;

        $r9 = r3.<com.hp.hpl.jena.reasoner.rulesys.impl.TempNodeCache: java.util.Map classMap>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, r8);

     label6:
        return r14;
    }
}
