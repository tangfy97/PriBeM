abstract class nu.xom.jaxen.expr.DefaultEqualityExpr extends nu.xom.jaxen.expr.DefaultTruthExpr implements nu.xom.jaxen.expr.EqualityExpr
{

    void <init>(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr)
    {
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultEqualityExpr r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualityExpr;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        specialinvoke r0.<nu.xom.jaxen.expr.DefaultTruthExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return;
    }

    public java.lang.String toString()
    {
        nu.xom.jaxen.expr.Expr $r3, $r6;
        nu.xom.jaxen.expr.DefaultEqualityExpr r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r2 := @this: nu.xom.jaxen.expr.DefaultEqualityExpr;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[(DefaultEqualityExpr): ");

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultEqualityExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r6 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultEqualityExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.Object evaluate(nu.xom.jaxen.Context) throws nu.xom.jaxen.JaxenException
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        nu.xom.jaxen.expr.Expr $r1, $r4;
        java.util.List $r9, $r10, $r12, $r13, $r15, $r17, $r20, $r21;
        nu.xom.jaxen.expr.DefaultEqualityExpr r0;
        java.lang.Boolean $r6, $r8, $r11, $r14, $r16, $r18, $r19, $r22, $r23, r24, $r25;
        nu.xom.jaxen.Navigator $r7;
        java.lang.Object $r3, $r5;
        nu.xom.jaxen.Context r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualityExpr;

        r2 := @parameter0: nu.xom.jaxen.Context;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: nu.xom.jaxen.expr.Expr getLHS()>();

        $r3 = interfaceinvoke $r1.<nu.xom.jaxen.expr.Expr: java.lang.Object evaluate(nu.xom.jaxen.Context)>(r2);

        $r4 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: nu.xom.jaxen.expr.Expr getRHS()>();

        $r5 = interfaceinvoke $r4.<nu.xom.jaxen.expr.Expr: java.lang.Object evaluate(nu.xom.jaxen.Context)>(r2);

        if $r3 == null goto label01;

        if $r5 != null goto label02;

     label01:
        $r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r6;

     label02:
        $r7 = virtualinvoke r2.<nu.xom.jaxen.Context: nu.xom.jaxen.Navigator getNavigator()>();

        $z0 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean bothAreSets(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z0 == 0 goto label03;

        $r21 = (java.util.List) $r3;

        $r20 = (java.util.List) $r5;

        $r22 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: java.lang.Boolean evaluateSetSet(java.util.List,java.util.List,nu.xom.jaxen.Navigator)>($r21, $r20, $r7);

        return $r22;

     label03:
        $z1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean isSet(java.lang.Object)>($r3);

        if $z1 == 0 goto label06;

        $z9 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean isBoolean(java.lang.Object)>($r5);

        if $z9 == 0 goto label06;

        $r17 = (java.util.List) $r3;

        $z10 = interfaceinvoke $r17.<java.util.List: boolean isEmpty()>();

        if $z10 == 0 goto label04;

        $r23 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label05;

     label04:
        $r23 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label05:
        $r19 = (java.lang.Boolean) $r5;

        $z11 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object,nu.xom.jaxen.Navigator)>($r23, $r19, $r7);

        $r18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z11);

        return $r18;

     label06:
        $z2 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean isBoolean(java.lang.Object)>($r3);

        if $z2 == 0 goto label09;

        $z6 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean isSet(java.lang.Object)>($r5);

        if $z6 == 0 goto label09;

        r24 = (java.lang.Boolean) $r3;

        $r15 = (java.util.List) $r5;

        $z7 = interfaceinvoke $r15.<java.util.List: boolean isEmpty()>();

        if $z7 == 0 goto label07;

        $r25 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        goto label08;

     label07:
        $r25 = <java.lang.Boolean: java.lang.Boolean TRUE>;

     label08:
        $z8 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object,nu.xom.jaxen.Navigator)>(r24, $r25, $r7);

        $r16 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z8);

        return $r16;

     label09:
        $z3 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean eitherIsSet(java.lang.Object,java.lang.Object)>($r3, $r5);

        if $z3 == 0 goto label11;

        $z5 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean isSet(java.lang.Object)>($r3);

        if $z5 == 0 goto label10;

        $r12 = (java.util.List) $r3;

        $r13 = staticinvoke <nu.xom.jaxen.expr.DefaultEqualityExpr: java.util.List convertToList(java.lang.Object)>($r5);

        $r14 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: java.lang.Boolean evaluateSetSet(java.util.List,java.util.List,nu.xom.jaxen.Navigator)>($r12, $r13, $r7);

        return $r14;

     label10:
        $r9 = staticinvoke <nu.xom.jaxen.expr.DefaultEqualityExpr: java.util.List convertToList(java.lang.Object)>($r3);

        $r10 = (java.util.List) $r5;

        $r11 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: java.lang.Boolean evaluateSetSet(java.util.List,java.util.List,nu.xom.jaxen.Navigator)>($r9, $r10, $r7);

        return $r11;

     label11:
        $z4 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object,nu.xom.jaxen.Navigator)>($r3, $r5, $r7);

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z4);

        return $r8;
    }

    private java.lang.Boolean evaluateSetSet(java.util.List, java.util.List, nu.xom.jaxen.Navigator)
    {
        nu.xom.jaxen.expr.DefaultEqualityExpr r0;
        java.lang.Boolean $r2, $r5, $r10;
        nu.xom.jaxen.Navigator r9;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Iterator $r4, $r7;
        java.util.List r1, r3;
        java.lang.Object $r6, $r8;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualityExpr;

        r1 := @parameter0: java.util.List;

        r3 := @parameter1: java.util.List;

        r9 := @parameter2: nu.xom.jaxen.Navigator;

        $z0 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean setIsEmpty(java.util.List)>(r1);

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean setIsEmpty(java.util.List)>(r3);

        if $z1 == 0 goto label2;

     label1:
        $r2 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r2;

     label2:
        $r4 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke r3.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $z4 = specialinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object,nu.xom.jaxen.Navigator)>($r6, $r8, r9);

        if $z4 == 0 goto label5;

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        return $r10;

     label5:
        goto label4;

     label6:
        goto label3;

     label7:
        $r5 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        return $r5;
    }

    private boolean evaluateObjectObject(java.lang.Object, java.lang.Object, nu.xom.jaxen.Navigator)
    {
        java.lang.Double $r6, $r7;
        nu.xom.jaxen.expr.DefaultEqualityExpr r0;
        java.lang.Boolean $r8, $r9;
        java.lang.Object r1, r2;
        java.lang.String $r4, $r5;
        nu.xom.jaxen.Navigator r3;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: nu.xom.jaxen.expr.DefaultEqualityExpr;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        r3 := @parameter2: nu.xom.jaxen.Navigator;

        $z0 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean eitherIsBoolean(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z0 == 0 goto label1;

        $r8 = staticinvoke <nu.xom.jaxen.function.BooleanFunction: java.lang.Boolean evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r1, r3);

        $r9 = staticinvoke <nu.xom.jaxen.function.BooleanFunction: java.lang.Boolean evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r2, r3);

        $z4 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object)>($r8, $r9);

        return $z4;

     label1:
        $z1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean eitherIsNumber(java.lang.Object,java.lang.Object)>(r1, r2);

        if $z1 == 0 goto label2;

        $r6 = staticinvoke <nu.xom.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r1, r3);

        $r7 = staticinvoke <nu.xom.jaxen.function.NumberFunction: java.lang.Double evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r2, r3);

        $z3 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object)>($r6, $r7);

        return $z3;

     label2:
        $r4 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r1, r3);

        $r5 = staticinvoke <nu.xom.jaxen.function.StringFunction: java.lang.String evaluate(java.lang.Object,nu.xom.jaxen.Navigator)>(r2, r3);

        $z2 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultEqualityExpr: boolean evaluateObjectObject(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $z2;
    }

    protected abstract boolean evaluateObjectObject(java.lang.Object, java.lang.Object);
}
