public final class org.apache.cxf.jaxrs.client.JAXRSClientFactory extends java.lang.Object
{

    private void <init>()
    {
        org.apache.cxf.jaxrs.client.JAXRSClientFactory r0;

        r0 := @this: org.apache.cxf.jaxrs.client.JAXRSClientFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class)
    {
        java.lang.Class r2;
        java.lang.Object $r3;
        java.lang.String r0;
        java.net.URI $r1;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Class;

        $r1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object create(java.net.URI,java.lang.Class)>($r1, r2);

        return $r3;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.lang.ClassLoader)
    {
        java.lang.Object[] $r4;
        java.lang.Class r1;
        java.lang.Object $r5;
        java.lang.String r0;
        java.lang.ClassLoader r3;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.ClassLoader;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, null);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setClassLoader(java.lang.ClassLoader)>(r3);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r4);

        return $r5;
    }

    public static java.lang.Object create(java.net.URI, java.lang.Class)
    {
        java.lang.Class r1;
        java.lang.Object $r2;
        java.net.URI r0;

        r0 := @parameter0: java.net.URI;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object create(java.net.URI,java.lang.Class,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.lang.Object create(java.net.URI, java.lang.Class, boolean)
    {
        java.lang.Object[] $r4;
        java.lang.Class r2;
        java.lang.Object $r5;
        java.net.URI r0;
        java.lang.String $r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;
        boolean z0;

        r0 := @parameter0: java.net.URI;

        r2 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r1 = virtualinvoke r0.<java.net.URI: java.lang.String toString()>();

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>($r1, r2, null);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setInheritHeaders(boolean)>(z0);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r2, $r4);

        return $r5;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.lang.String)
    {
        java.lang.Object[] $r4;
        java.lang.Class r1;
        java.lang.Object $r5;
        java.lang.String r0, r2;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, r2);

        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r4);

        return $r5;
    }

    public static transient java.lang.Object create(java.lang.String, java.lang.Class, java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r4;
        java.lang.Class r1;
        java.lang.Object $r5;
        java.lang.String r0, r2;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.Object[];

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, r2);

        $r5 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, r4);

        return $r5;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.util.List)
    {
        java.util.List r2;
        java.lang.Class r1;
        java.lang.Object $r3;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.util.List;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object create(java.lang.String,java.lang.Class,java.util.List,java.lang.String)>(r0, r1, r2, null);

        return $r3;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.util.List, boolean)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState $r6;
        java.lang.Object[] $r4;
        java.util.List r3;
        java.lang.Class r1;
        java.lang.Object $r5;
        java.lang.String r0;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.util.List;

        z0 := @parameter3: boolean;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, null);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r3);

        if z0 == 0 goto label1;

        $r6 = new org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        specialinvoke $r6.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: void <init>(java.lang.String)>(r0);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setInitialState(org.apache.cxf.jaxrs.client.ClientState)>($r6);

     label1:
        $r4 = newarray (java.lang.Object)[0];

        $r5 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r4);

        return $r5;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.util.List, java.lang.String)
    {
        java.util.List r4;
        java.lang.Object[] $r5;
        java.lang.Class r1;
        java.lang.Object $r6;
        java.lang.String r0, r2;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.util.List;

        r2 := @parameter3: java.lang.String;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, r2);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r4);

        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r5);

        return $r6;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.util.List, java.util.List, java.lang.String)
    {
        java.lang.Object[] $r6;
        java.util.List r4, r5;
        java.lang.Class r1;
        java.lang.Object $r7;
        java.lang.String r0, r2;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.util.List;

        r5 := @parameter3: java.util.List;

        r2 := @parameter4: java.lang.String;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, r2);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r4);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setFeatures(java.util.List)>(r5);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r6);

        return $r7;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r6;
        java.lang.Class r1;
        java.lang.Object $r7;
        java.lang.String r0, r2, r4, r5;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r2 := @parameter4: java.lang.String;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, r2);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setUsername(java.lang.String)>(r4);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setPassword(java.lang.String)>(r5);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r6);

        return $r7;
    }

    public static java.lang.Object create(java.lang.String, java.lang.Class, java.util.List, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.Object[] $r7;
        java.util.List r6;
        java.lang.Class r1;
        java.lang.Object $r8;
        java.lang.String r0, r2, r4, r5;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r6 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        r2 := @parameter5: java.lang.String;

        $r3 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>(r0, r1, r2);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setUsername(java.lang.String)>(r4);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setPassword(java.lang.String)>(r5);

        virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r6);

        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke $r3.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r1, $r7);

        return $r8;
    }

    public static java.lang.Object createFromModel(java.lang.String, java.lang.Class, java.lang.String, java.lang.String)
    {
        java.util.List $r3;
        java.lang.Class r1;
        java.lang.Object $r5;
        java.lang.String r0, r2, r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r5 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.lang.String,java.util.List,java.lang.String)>(r0, r1, r2, $r3, r4);

        return $r5;
    }

    public static java.lang.Object createFromModel(java.lang.String, java.lang.Class, java.lang.String, java.util.List, java.lang.String)
    {
        java.lang.Object[] $r6;
        java.util.List r3;
        java.lang.Class r5;
        java.lang.Object $r7;
        java.lang.String r0, r1, r4;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.lang.String;

        r3 := @parameter3: java.util.List;

        r1 := @parameter4: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r3);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setModelRef(java.lang.String)>(r4);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setServiceClass(java.lang.Class)>(r5);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r5, $r6);

        return $r7;
    }

    public static java.lang.Object createFromModel(java.lang.String, java.lang.Class, java.lang.String, java.util.List, boolean)
    {
        org.apache.cxf.jaxrs.client.ThreadLocalClientState $r7;
        java.lang.Object[] $r5;
        java.util.List r2;
        java.lang.Class r4;
        java.lang.Object $r6;
        java.lang.String r0, r3;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r1;
        boolean z0;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.Class;

        r3 := @parameter2: java.lang.String;

        r2 := @parameter3: java.util.List;

        z0 := @parameter4: boolean;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, null);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r2);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setModelRef(java.lang.String)>(r3);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setServiceClass(java.lang.Class)>(r4);

        if z0 == 0 goto label1;

        $r7 = new org.apache.cxf.jaxrs.client.ThreadLocalClientState;

        specialinvoke $r7.<org.apache.cxf.jaxrs.client.ThreadLocalClientState: void <init>(java.lang.String)>(r0);

        virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setInitialState(org.apache.cxf.jaxrs.client.ClientState)>($r7);

     label1:
        $r5 = newarray (java.lang.Object)[0];

        $r6 = virtualinvoke $r1.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r4, $r5);

        return $r6;
    }

    public static java.lang.Object createFromModel(java.lang.String, java.lang.Class, java.util.List, java.lang.String)
    {
        java.util.List r2, $r3;
        java.lang.Class r1;
        java.lang.Object $r5;
        java.lang.String r0, r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.util.List;

        r4 := @parameter3: java.lang.String;

        $r3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r5 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object createFromModel(java.lang.String,java.lang.Class,java.util.List,java.util.List,java.lang.String)>(r0, r1, r2, $r3, r4);

        return $r5;
    }

    public static java.lang.Object createFromModel(java.lang.String, java.lang.Class, java.util.List, java.util.List, java.lang.String)
    {
        java.lang.Object[] $r6;
        java.util.List r3, r4;
        java.lang.Class r5;
        java.lang.Object $r7;
        java.lang.String r0, r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Class;

        r4 := @parameter2: java.util.List;

        r3 := @parameter3: java.util.List;

        r1 := @parameter4: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setProviders(java.util.List)>(r3);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setModelBeans(java.util.List)>(r4);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setServiceClass(java.lang.Class)>(r5);

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r5, $r6);

        return $r7;
    }

    public static java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client, java.lang.Class)
    {
        org.apache.cxf.jaxrs.client.Client r0;
        java.lang.Class r1;
        java.lang.Object $r2;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.Client;

        r1 := @parameter1: java.lang.Class;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client,java.lang.Class,boolean)>(r0, r1, 0);

        return $r2;
    }

    public static java.lang.Object fromClient(org.apache.cxf.jaxrs.client.Client, java.lang.Class, boolean)
    {
        java.lang.Object[] $r8, $r9;
        org.apache.cxf.jaxrs.client.ClientState $r5, $r7;
        java.net.URI $r1, $r6;
        java.lang.String $r2;
        boolean z0;
        org.apache.cxf.jaxrs.client.Client r0, $r11, $r15;
        javax.ws.rs.core.MultivaluedMap $r12, $r14;
        java.lang.Class r3;
        java.lang.Object $r10, r13;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r4;

        r0 := @parameter0: org.apache.cxf.jaxrs.client.Client;

        r3 := @parameter1: java.lang.Class;

        z0 := @parameter2: boolean;

        $r1 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: java.net.URI getCurrentURI()>();

        $r2 = virtualinvoke $r1.<java.net.URI: java.lang.String toString()>();

        $r4 = staticinvoke <org.apache.cxf.jaxrs.client.JAXRSClientFactory: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.Class,java.lang.String)>($r2, r3, null);

        virtualinvoke $r4.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setInheritHeaders(boolean)>(z0);

        $r5 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.ClientState getClientState(org.apache.cxf.jaxrs.client.Client)>(r0);

        if $r5 != null goto label1;

        $r9 = newarray (java.lang.Object)[0];

        $r10 = virtualinvoke $r4.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r3, $r9);

        r13 = $r10;

        if z0 == 0 goto label4;

        $r11 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.Client client(java.lang.Object)>($r10);

        $r12 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        interfaceinvoke $r11.<org.apache.cxf.jaxrs.client.Client: org.apache.cxf.jaxrs.client.Client headers(javax.ws.rs.core.MultivaluedMap)>($r12);

        goto label4;

     label1:
        if z0 == 0 goto label2;

        $r14 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: javax.ws.rs.core.MultivaluedMap getHeaders()>();

        goto label3;

     label2:
        $r14 = null;

     label3:
        $r6 = interfaceinvoke r0.<org.apache.cxf.jaxrs.client.Client: java.net.URI getCurrentURI()>();

        $r7 = interfaceinvoke $r5.<org.apache.cxf.jaxrs.client.ClientState: org.apache.cxf.jaxrs.client.ClientState newState(java.net.URI,javax.ws.rs.core.MultivaluedMap,javax.ws.rs.core.MultivaluedMap)>($r6, $r14, null);

        virtualinvoke $r4.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setInitialState(org.apache.cxf.jaxrs.client.ClientState)>($r7);

        $r8 = newarray (java.lang.Object)[0];

        r13 = virtualinvoke $r4.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: java.lang.Object create(java.lang.Class,java.lang.Object[])>(r3, $r8);

     label4:
        $r15 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.Client client(java.lang.Object)>(r13);

        staticinvoke <org.apache.cxf.jaxrs.client.WebClient: void copyProperties(org.apache.cxf.jaxrs.client.Client,org.apache.cxf.jaxrs.client.Client)>($r15, r0);

        return r13;
    }

    static java.lang.Object createProxy(java.lang.Class, java.lang.ClassLoader, java.lang.reflect.InvocationHandler)
    {
        java.lang.Class[] $r2;
        java.lang.Class r0;
        java.lang.Object $r4, $r5;
        java.lang.ClassLoader r1, $r6;
        java.lang.reflect.InvocationHandler r3;

        r0 := @parameter0: java.lang.Class;

        r1 := @parameter1: java.lang.ClassLoader;

        r3 := @parameter2: java.lang.reflect.InvocationHandler;

        if r1 != null goto label1;

        $r6 = virtualinvoke r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label2;

     label1:
        $r6 = r1;

     label2:
        $r2 = newarray (java.lang.Class)[2];

        $r2[0] = class "Lorg/apache/cxf/jaxrs/client/Client;";

        $r2[1] = r0;

        $r4 = staticinvoke <org.apache.cxf.common.util.ProxyHelper: java.lang.Object getProxy(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>($r6, $r2, r3);

        $r5 = virtualinvoke r0.<java.lang.Class: java.lang.Object cast(java.lang.Object)>($r4);

        return $r5;
    }

    private static org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String, java.lang.Class, java.lang.String)
    {
        java.lang.Class r3;
        java.lang.String r0, r1;
        org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean $r2;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Class;

        r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.apache.cxf.jaxrs.client.WebClient: org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean getBean(java.lang.String,java.lang.String)>(r0, r1);

        virtualinvoke $r2.<org.apache.cxf.jaxrs.client.JAXRSClientFactoryBean: void setServiceClass(java.lang.Class)>(r3);

        return $r2;
    }
}
