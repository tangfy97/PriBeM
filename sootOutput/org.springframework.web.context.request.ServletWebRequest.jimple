public class org.springframework.web.context.request.ServletWebRequest extends org.springframework.web.context.request.ServletRequestAttributes implements org.springframework.web.context.request.NativeWebRequest
{
    private static final java.lang.String HEADER_ETAG;
    private static final java.lang.String HEADER_IF_MODIFIED_SINCE;
    private static final java.lang.String HEADER_IF_NONE_MATCH;
    private static final java.lang.String HEADER_LAST_MODIFIED;
    private static final java.lang.String METHOD_GET;
    private javax.servlet.http.HttpServletResponse response;
    private boolean notModified;

    public void <init>(javax.servlet.http.HttpServletRequest)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        specialinvoke r0.<org.springframework.web.context.request.ServletRequestAttributes: void <init>(javax.servlet.http.HttpServletRequest)>(r1);

        r0.<org.springframework.web.context.request.ServletWebRequest: boolean notModified> = 0;

        return;
    }

    public void <init>(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
    {
        javax.servlet.http.HttpServletResponse r2;
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest r1;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r2 := @parameter1: javax.servlet.http.HttpServletResponse;

        specialinvoke r0.<org.springframework.web.context.request.ServletWebRequest: void <init>(javax.servlet.http.HttpServletRequest)>(r1);

        r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response> = r2;

        return;
    }

    public final javax.servlet.http.HttpServletResponse getResponse()
    {
        javax.servlet.http.HttpServletResponse $r1;
        org.springframework.web.context.request.ServletWebRequest r0;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response>;

        return $r1;
    }

    public java.lang.Object getNativeRequest()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        return $r1;
    }

    public java.lang.Object getNativeResponse()
    {
        javax.servlet.http.HttpServletResponse $r1;
        org.springframework.web.context.request.ServletWebRequest r0;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse getResponse()>();

        return $r1;
    }

    public java.lang.Object getNativeRequest(java.lang.Class)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.Class r2;
        java.lang.Object $r3;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r3 = staticinvoke <org.springframework.web.util.WebUtils: java.lang.Object getNativeRequest(javax.servlet.ServletRequest,java.lang.Class)>($r1, r2);

        return $r3;
    }

    public java.lang.Object getNativeResponse(java.lang.Class)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletResponse $r1;
        java.lang.Class r2;
        java.lang.Object $r3;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.Class;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse getResponse()>();

        $r3 = staticinvoke <org.springframework.web.util.WebUtils: java.lang.Object getNativeResponse(javax.servlet.ServletResponse,java.lang.Class)>($r1, r2);

        return $r3;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r3 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String[] getHeaderValues(java.lang.String)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.util.Enumeration $r3;
        java.lang.String[] $r4, $r5;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r3 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaders(java.lang.String)>(r2);

        $r4 = staticinvoke <org.springframework.util.StringUtils: java.lang.String[] toStringArray(java.util.Enumeration)>($r3);

        $z0 = staticinvoke <org.springframework.util.ObjectUtils: boolean isEmpty(java.lang.Object[])>($r4);

        if $z0 != 0 goto label1;

        $r5 = $r4;

        goto label2;

     label1:
        $r5 = null;

     label2:
        return $r5;
    }

    public java.util.Iterator getHeaderNames()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.util.Iterator $r3;
        java.util.Enumeration $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>();

        $r3 = staticinvoke <org.springframework.util.CollectionUtils: java.util.Iterator toIterator(java.util.Enumeration)>($r2);

        return $r3;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String r2, $r3;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r3 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getParameter(java.lang.String)>(r2);

        return $r3;
    }

    public java.lang.String[] getParameterValues(java.lang.String)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String[] $r3;
        java.lang.String r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r3 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String[] getParameterValues(java.lang.String)>(r2);

        return $r3;
    }

    public java.util.Iterator getParameterNames()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.util.Iterator $r3;
        java.util.Enumeration $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getParameterNames()>();

        $r3 = staticinvoke <org.springframework.util.CollectionUtils: java.util.Iterator toIterator(java.util.Enumeration)>($r2);

        return $r3;
    }

    public java.util.Map getParameterMap()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.util.Map $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.util.Map getParameterMap()>();

        return $r2;
    }

    public java.util.Locale getLocale()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.util.Locale $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.util.Locale getLocale()>();

        return $r2;
    }

    public java.lang.String getContextPath()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getContextPath()>();

        return $r2;
    }

    public java.lang.String getRemoteUser()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>();

        return $r2;
    }

    public java.security.Principal getUserPrincipal()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.security.Principal $r2;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.security.Principal getUserPrincipal()>();

        return $r2;
    }

    public boolean isUserInRole(java.lang.String)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $z0 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: boolean isUserInRole(java.lang.String)>(r2);

        return $z0;
    }

    public boolean isSecure()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $z0 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: boolean isSecure()>();

        return $z0;
    }

    public boolean checkNotModified(long)
    {
        long l0, $l2, $l3, $l4;
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r2, $r6;
        byte $b1, $b5;
        int $i6, $i7;
        java.lang.String $r5, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        javax.servlet.http.HttpServletResponse $r1, $r3, $r4, $r8, $r9;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i6 = (int) $b1;

        if $i6 < 0 goto label5;

        $z0 = r0.<org.springframework.web.context.request.ServletWebRequest: boolean notModified>;

        if $z0 != 0 goto label5;

        $r1 = r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response>;

        if $r1 == null goto label1;

        $r9 = r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response>;

        $z3 = interfaceinvoke $r9.<javax.servlet.http.HttpServletResponse: boolean containsHeader(java.lang.String)>("Last-Modified");

        if $z3 != 0 goto label5;

     label1:
        $r2 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $l2 = interfaceinvoke $r2.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("If-Modified-Since");

        $l3 = l0 / 1000L;

        $l4 = $l3 * 1000L;

        $b5 = $l2 cmp $l4;

        $i7 = (int) $b5;

        if $i7 < 0 goto label2;

        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        r0.<org.springframework.web.context.request.ServletWebRequest: boolean notModified> = $z4;

        $r3 = r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response>;

        if $r3 == null goto label5;

        $z1 = r0.<org.springframework.web.context.request.ServletWebRequest: boolean notModified>;

        if $z1 == 0 goto label4;

        $r5 = "GET";

        $r6 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r7 = interfaceinvoke $r6.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z2 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z2 == 0 goto label4;

        $r8 = r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response>;

        interfaceinvoke $r8.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(304);

        goto label5;

     label4:
        $r4 = r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletResponse response>;

        interfaceinvoke $r4.<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>("Last-Modified", l0);

     label5:
        $z5 = r0.<org.springframework.web.context.request.ServletWebRequest: boolean notModified>;

        return $z5;
    }

    public boolean isNotModified()
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        $z0 = r0.<org.springframework.web.context.request.ServletWebRequest: boolean notModified>;

        return $z0;
    }

    public java.lang.String getDescription(boolean)
    {
        org.springframework.web.context.request.ServletWebRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        java.lang.String $r4, $r5, $r7, $r10, $r12;
        boolean z0, $z1, $z2;
        javax.servlet.http.HttpSession $r6;
        java.lang.StringBuilder $r2, $r3, $r8, $r9, $r11;

        r0 := @this: org.springframework.web.context.request.ServletWebRequest;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.ServletWebRequest: javax.servlet.http.HttpServletRequest getRequest()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("uri=");

        $r4 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        if z0 == 0 goto label3;

        $r5 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteAddr()>();

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r5);

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";client=");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

     label1:
        $r6 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: javax.servlet.http.HttpSession getSession(boolean)>(0);

        if $r6 == null goto label2;

        $r9 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";session=");

        $r10 = interfaceinvoke $r6.<javax.servlet.http.HttpSession: java.lang.String getId()>();

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

     label2:
        $r7 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRemoteUser()>();

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r7);

        if $z2 == 0 goto label3;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";user=");

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label3:
        $r12 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public java.lang.String toString()
    {
        org.springframework.web.context.request.ServletWebRequest r1;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r2, $r4;

        r1 := @this: org.springframework.web.context.request.ServletWebRequest;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ServletWebRequest: ");

        $r2 = virtualinvoke r1.<org.springframework.web.context.request.ServletWebRequest: java.lang.String getDescription(boolean)>(1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }

    public static void <clinit>()
    {
        <org.springframework.web.context.request.ServletWebRequest: java.lang.String METHOD_GET> = "GET";

        <org.springframework.web.context.request.ServletWebRequest: java.lang.String HEADER_LAST_MODIFIED> = "Last-Modified";

        <org.springframework.web.context.request.ServletWebRequest: java.lang.String HEADER_IF_NONE_MATCH> = "If-None-Match";

        <org.springframework.web.context.request.ServletWebRequest: java.lang.String HEADER_IF_MODIFIED_SINCE> = "If-Modified-Since";

        <org.springframework.web.context.request.ServletWebRequest: java.lang.String HEADER_ETAG> = "ETag";

        return;
    }
}
