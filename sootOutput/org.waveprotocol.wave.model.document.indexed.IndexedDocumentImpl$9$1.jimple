class org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1 extends java.lang.Object implements java.util.Iterator
{
    final java.util.Iterator val$iterator;
    final org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9 this$1;

    void <init>(org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9, java.util.Iterator)
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9 r1;
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1 r0;
        java.util.Iterator r2;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1;

        r1 := @parameter0: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9;

        r2 := @parameter1: java.util.Iterator;

        r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9 this$1> = r1;

        r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1: java.util.Iterator val$iterator> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public boolean hasNext()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1 r0;
        java.util.Iterator $r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1: java.util.Iterator val$iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public org.waveprotocol.wave.model.document.RangedAnnotation next()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1 r0;
        java.util.Iterator $r1;
        org.waveprotocol.wave.model.document.util.RangedAnnotationImpl $r7;
        org.waveprotocol.wave.model.document.RangedAnnotation r3;
        int $i0, $i1;
        java.lang.Object $r2, $r5;
        java.lang.String $r4, r6;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1: java.util.Iterator val$iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.waveprotocol.wave.model.document.RangedAnnotation) $r2;

        $r4 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.RangedAnnotation: java.lang.String key()>();

        $r5 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.RangedAnnotation: java.lang.Object value()>();

        r6 = (java.lang.String) $r5;

        $i0 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.RangedAnnotation: int start()>();

        $i1 = interfaceinvoke r3.<org.waveprotocol.wave.model.document.RangedAnnotation: int end()>();

        $r7 = new org.waveprotocol.wave.model.document.util.RangedAnnotationImpl;

        specialinvoke $r7.<org.waveprotocol.wave.model.document.util.RangedAnnotationImpl: void <init>(java.lang.String,java.lang.Object,int,int)>($r4, r6, $i0, $i1);

        return $r7;
    }

    public void remove()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1 r0;
        java.util.Iterator $r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1;

        $r1 = r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1: java.util.Iterator val$iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        return;
    }

    public volatile java.lang.Object next()
    {
        org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1 r0;
        org.waveprotocol.wave.model.document.RangedAnnotation $r1;

        r0 := @this: org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.indexed.IndexedDocumentImpl$9$1: org.waveprotocol.wave.model.document.RangedAnnotation next()>();

        return $r1;
    }
}
