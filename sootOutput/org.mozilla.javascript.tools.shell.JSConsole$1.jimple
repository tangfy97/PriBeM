class org.mozilla.javascript.tools.shell.JSConsole$1 extends javax.swing.filechooser.FileFilter
{
    private final org.mozilla.javascript.tools.shell.JSConsole this$0;

    void <init>(org.mozilla.javascript.tools.shell.JSConsole)
    {
        org.mozilla.javascript.tools.shell.JSConsole r1;
        org.mozilla.javascript.tools.shell.JSConsole$1 r0;

        r0 := @this: org.mozilla.javascript.tools.shell.JSConsole$1;

        r1 := @parameter0: org.mozilla.javascript.tools.shell.JSConsole;

        specialinvoke r0.<javax.swing.filechooser.FileFilter: void <init>()>();

        r0.<org.mozilla.javascript.tools.shell.JSConsole$1: org.mozilla.javascript.tools.shell.JSConsole this$0> = r1;

        return;
    }

    public boolean accept(java.io.File)
    {
        org.mozilla.javascript.tools.shell.JSConsole$1 r4;
        java.io.File r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r2, $r3;
        boolean $z0, $z1;

        r4 := @this: org.mozilla.javascript.tools.shell.JSConsole$1;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean isDirectory()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 <= 0 goto label2;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        if $i0 >= $i2 goto label2;

        $i3 = $i0 + 1;

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>($i3);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toLowerCase()>();

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("js");

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public java.lang.String getDescription()
    {
        org.mozilla.javascript.tools.shell.JSConsole$1 r0;

        r0 := @this: org.mozilla.javascript.tools.shell.JSConsole$1;

        return "JavaScript Files (*.js)";
    }
}
