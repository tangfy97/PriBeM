public class com.sun.syndication.io.WireFeedOutput extends java.lang.Object
{
    private static java.util.Map clMap;
    static java.lang.Class class$com$sun$syndication$io$WireFeedOutput;

    private static com.sun.syndication.io.impl.FeedGenerators getFeedGenerators()
    {
        java.lang.Throwable $r11;
        java.util.Map $r2, $r7;
        java.lang.Thread $r3, $r8;
        com.sun.syndication.io.impl.FeedGenerators $r6, $r10, r13;
        java.lang.Class $r0, r1, $r12;
        java.lang.Object $r5;
        java.lang.ClassLoader $r4, $r9;

        $r0 = <com.sun.syndication.io.WireFeedOutput: java.lang.Class class$com$sun$syndication$io$WireFeedOutput>;

        if $r0 != null goto label1;

        $r12 = staticinvoke <com.sun.syndication.io.WireFeedOutput: java.lang.Class class$(java.lang.String)>("com.sun.syndication.io.WireFeedOutput");

        <com.sun.syndication.io.WireFeedOutput: java.lang.Class class$com$sun$syndication$io$WireFeedOutput> = $r12;

        goto label2;

     label1:
        $r12 = <com.sun.syndication.io.WireFeedOutput: java.lang.Class class$com$sun$syndication$io$WireFeedOutput>;

     label2:
        r1 = $r12;

        entermonitor $r12;

     label3:
        $r2 = <com.sun.syndication.io.WireFeedOutput: java.util.Map clMap>;

        $r3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r4 = virtualinvoke $r3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r5 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r10 = (com.sun.syndication.io.impl.FeedGenerators) $r5;

        r13 = $r10;

        if $r10 != null goto label4;

        $r6 = new com.sun.syndication.io.impl.FeedGenerators;

        specialinvoke $r6.<com.sun.syndication.io.impl.FeedGenerators: void <init>()>();

        r13 = $r6;

        $r7 = <com.sun.syndication.io.WireFeedOutput: java.util.Map clMap>;

        $r8 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r9 = virtualinvoke $r8.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r6);

     label4:
        exitmonitor r1;

     label5:
        return r13;

     label6:
        $r11 := @caughtexception;

        exitmonitor r1;

     label7:
        throw $r11;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public static java.util.List getSupportedFeedTypes()
    {
        com.sun.syndication.io.impl.FeedGenerators $r0;
        java.util.List $r1;

        $r0 = staticinvoke <com.sun.syndication.io.WireFeedOutput: com.sun.syndication.io.impl.FeedGenerators getFeedGenerators()>();

        $r1 = virtualinvoke $r0.<com.sun.syndication.io.impl.FeedGenerators: java.util.List getSupportedFeedTypes()>();

        return $r1;
    }

    public void <init>()
    {
        com.sun.syndication.io.WireFeedOutput r0;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String outputString(com.sun.syndication.feed.WireFeed) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.feed.WireFeed r1;
        java.lang.String $r2;
        com.sun.syndication.io.WireFeedOutput r0;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        r1 := @parameter0: com.sun.syndication.feed.WireFeed;

        $r2 = virtualinvoke r0.<com.sun.syndication.io.WireFeedOutput: java.lang.String outputString(com.sun.syndication.feed.WireFeed,boolean)>(r1, 1);

        return $r2;
    }

    public java.lang.String outputString(com.sun.syndication.feed.WireFeed, boolean) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        org.jdom.output.Format r4, $r7;
        com.sun.syndication.feed.WireFeed r1;
        org.jdom.output.XMLOutputter $r5;
        org.jdom.Document $r2;
        com.sun.syndication.io.WireFeedOutput r0;
        java.lang.String $r3, $r6;
        boolean z0;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        r1 := @parameter0: com.sun.syndication.feed.WireFeed;

        z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<com.sun.syndication.io.WireFeedOutput: org.jdom.Document outputJDom(com.sun.syndication.feed.WireFeed)>(r1);

        $r3 = virtualinvoke r1.<com.sun.syndication.feed.WireFeed: java.lang.String getEncoding()>();

        if z0 == 0 goto label1;

        $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        goto label2;

     label1:
        $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getCompactFormat()>();

     label2:
        r4 = $r7;

        if $r3 == null goto label3;

        virtualinvoke $r7.<org.jdom.output.Format: org.jdom.output.Format setEncoding(java.lang.String)>($r3);

     label3:
        $r5 = new org.jdom.output.XMLOutputter;

        specialinvoke $r5.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>(r4);

        $r6 = virtualinvoke $r5.<org.jdom.output.XMLOutputter: java.lang.String outputString(org.jdom.Document)>($r2);

        return $r6;
    }

    public void output(com.sun.syndication.feed.WireFeed, java.io.File) throws java.lang.IllegalArgumentException, java.io.IOException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.feed.WireFeed r1;
        com.sun.syndication.io.WireFeedOutput r0;
        java.io.File r2;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        r1 := @parameter0: com.sun.syndication.feed.WireFeed;

        r2 := @parameter1: java.io.File;

        virtualinvoke r0.<com.sun.syndication.io.WireFeedOutput: void output(com.sun.syndication.feed.WireFeed,java.io.File,boolean)>(r1, r2, 1);

        return;
    }

    public void output(com.sun.syndication.feed.WireFeed, java.io.File, boolean) throws java.lang.IllegalArgumentException, java.io.IOException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.io.WireFeedOutput r2;
        java.io.FileWriter $r0;
        com.sun.syndication.feed.WireFeed r3;
        java.io.File r1;
        boolean z0;

        r2 := @this: com.sun.syndication.io.WireFeedOutput;

        r3 := @parameter0: com.sun.syndication.feed.WireFeed;

        r1 := @parameter1: java.io.File;

        z0 := @parameter2: boolean;

        $r0 = new java.io.FileWriter;

        specialinvoke $r0.<java.io.FileWriter: void <init>(java.io.File)>(r1);

        virtualinvoke r2.<com.sun.syndication.io.WireFeedOutput: void output(com.sun.syndication.feed.WireFeed,java.io.Writer,boolean)>(r3, $r0, z0);

        virtualinvoke $r0.<java.io.Writer: void close()>();

        return;
    }

    public void output(com.sun.syndication.feed.WireFeed, java.io.Writer) throws java.lang.IllegalArgumentException, java.io.IOException, com.sun.syndication.io.FeedException
    {
        java.io.Writer r2;
        com.sun.syndication.feed.WireFeed r1;
        com.sun.syndication.io.WireFeedOutput r0;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        r1 := @parameter0: com.sun.syndication.feed.WireFeed;

        r2 := @parameter1: java.io.Writer;

        virtualinvoke r0.<com.sun.syndication.io.WireFeedOutput: void output(com.sun.syndication.feed.WireFeed,java.io.Writer,boolean)>(r1, r2, 1);

        return;
    }

    public void output(com.sun.syndication.feed.WireFeed, java.io.Writer, boolean) throws java.lang.IllegalArgumentException, java.io.IOException, com.sun.syndication.io.FeedException
    {
        org.jdom.output.Format r4, $r7;
        com.sun.syndication.feed.WireFeed r1;
        org.jdom.output.XMLOutputter $r5;
        org.jdom.Document $r2;
        com.sun.syndication.io.WireFeedOutput r0;
        java.io.Writer r6;
        java.lang.String $r3;
        boolean z0;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        r1 := @parameter0: com.sun.syndication.feed.WireFeed;

        r6 := @parameter1: java.io.Writer;

        z0 := @parameter2: boolean;

        $r2 = virtualinvoke r0.<com.sun.syndication.io.WireFeedOutput: org.jdom.Document outputJDom(com.sun.syndication.feed.WireFeed)>(r1);

        $r3 = virtualinvoke r1.<com.sun.syndication.feed.WireFeed: java.lang.String getEncoding()>();

        if z0 == 0 goto label1;

        $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getPrettyFormat()>();

        goto label2;

     label1:
        $r7 = staticinvoke <org.jdom.output.Format: org.jdom.output.Format getCompactFormat()>();

     label2:
        r4 = $r7;

        if $r3 == null goto label3;

        virtualinvoke $r7.<org.jdom.output.Format: org.jdom.output.Format setEncoding(java.lang.String)>($r3);

     label3:
        $r5 = new org.jdom.output.XMLOutputter;

        specialinvoke $r5.<org.jdom.output.XMLOutputter: void <init>(org.jdom.output.Format)>(r4);

        virtualinvoke $r5.<org.jdom.output.XMLOutputter: void output(org.jdom.Document,java.io.Writer)>($r2, r6);

        return;
    }

    public org.w3c.dom.Document outputW3CDom(com.sun.syndication.feed.WireFeed) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.io.FeedException $r6;
        org.jdom.Document $r2;
        org.jdom.JDOMException $r5;
        com.sun.syndication.io.WireFeedOutput r0;
        org.w3c.dom.Document $r4;
        com.sun.syndication.feed.WireFeed r1;
        org.jdom.output.DOMOutputter $r3;

        r0 := @this: com.sun.syndication.io.WireFeedOutput;

        r1 := @parameter0: com.sun.syndication.feed.WireFeed;

        $r2 = virtualinvoke r0.<com.sun.syndication.io.WireFeedOutput: org.jdom.Document outputJDom(com.sun.syndication.feed.WireFeed)>(r1);

        $r3 = new org.jdom.output.DOMOutputter;

        specialinvoke $r3.<org.jdom.output.DOMOutputter: void <init>()>();

     label1:
        $r4 = virtualinvoke $r3.<org.jdom.output.DOMOutputter: org.w3c.dom.Document output(org.jdom.Document)>($r2);

     label2:
        return $r4;

     label3:
        $r5 := @caughtexception;

        $r6 = new com.sun.syndication.io.FeedException;

        specialinvoke $r6.<com.sun.syndication.io.FeedException: void <init>(java.lang.String,java.lang.Throwable)>("Could not create DOM", $r5);

        throw $r6;

        catch org.jdom.JDOMException from label1 to label2 with label3;
    }

    public org.jdom.Document outputJDom(com.sun.syndication.feed.WireFeed) throws java.lang.IllegalArgumentException, com.sun.syndication.io.FeedException
    {
        com.sun.syndication.feed.WireFeed r0;
        org.jdom.Document $r5;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r11, $r12, $r15, $r16, $r17, $r18;
        com.sun.syndication.io.impl.FeedGenerators $r2;
        java.lang.String $r1, $r4, $r13, $r19;
        boolean $z0;
        java.lang.IllegalArgumentException $r6, $r14;
        com.sun.syndication.io.WireFeedGenerator $r3;
        com.sun.syndication.io.WireFeedOutput r20;

        r20 := @this: com.sun.syndication.io.WireFeedOutput;

        r0 := @parameter0: com.sun.syndication.feed.WireFeed;

        $r1 = virtualinvoke r0.<com.sun.syndication.feed.WireFeed: java.lang.String getFeedType()>();

        $r2 = staticinvoke <com.sun.syndication.io.WireFeedOutput: com.sun.syndication.io.impl.FeedGenerators getFeedGenerators()>();

        $r3 = virtualinvoke $r2.<com.sun.syndication.io.impl.FeedGenerators: com.sun.syndication.io.WireFeedGenerator getGenerator(java.lang.String)>($r1);

        if $r3 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid feed type [");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);

        throw $r14;

     label1:
        $r4 = interfaceinvoke $r3.<com.sun.syndication.io.WireFeedGenerator: java.lang.String getType()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 != 0 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("WireFeedOutput type[");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] and WireFeed type [");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] don\'t match");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13);

        throw $r6;

     label2:
        $r5 = interfaceinvoke $r3.<com.sun.syndication.io.WireFeedGenerator: org.jdom.Document generate(com.sun.syndication.feed.WireFeed)>(r0);

        return $r5;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.WeakHashMap $r0;

        $r0 = new java.util.WeakHashMap;

        specialinvoke $r0.<java.util.WeakHashMap: void <init>()>();

        <com.sun.syndication.io.WireFeedOutput: java.util.Map clMap> = $r0;

        return;
    }
}
