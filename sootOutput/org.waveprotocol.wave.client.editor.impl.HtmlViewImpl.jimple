public class org.waveprotocol.wave.client.editor.impl.HtmlViewImpl extends java.lang.Object implements org.waveprotocol.wave.client.editor.impl.HtmlView, org.waveprotocol.wave.model.document.util.ElementStyleView
{
    public static final org.waveprotocol.wave.client.editor.impl.HtmlViewImpl INSTANCE;
    com.google.gwt.dom.client.Element documentElement;

    public void <init>(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: com.google.gwt.dom.client.Element;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Element documentElement> = r1;

        return;
    }

    public com.google.gwt.dom.client.Element asElement(com.google.gwt.dom.client.Node)
    {
        short $s0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;
        com.google.gwt.core.client.JavaScriptObject $r1;
        com.google.gwt.dom.client.Element $r3;
        com.google.gwt.dom.client.Node r0;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $s0 = virtualinvoke r0.<com.google.gwt.dom.client.Node: short getNodeType()>();

        if $s0 != 1 goto label1;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.core.client.JavaScriptObject cast()>();

        $r3 = (com.google.gwt.dom.client.Element) $r1;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public com.google.gwt.dom.client.Text asText(com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;
        com.google.gwt.core.client.JavaScriptObject $r1;
        com.google.gwt.dom.client.Node r0;
        boolean $z0;
        com.google.gwt.dom.client.Text $r3;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $z0 = staticinvoke <org.waveprotocol.wave.client.common.util.DomHelper: boolean isTextNode(com.google.gwt.dom.client.Node)>(r0);

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.core.client.JavaScriptObject cast()>();

        $r3 = (com.google.gwt.dom.client.Text) $r1;

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    public java.util.Map getAttributes(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r2;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;
        java.util.Map $r0;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r2 := @parameter0: com.google.gwt.dom.client.Element;

        $r0 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r0;
    }

    public java.lang.String getData(com.google.gwt.dom.client.Text)
    {
        java.lang.String $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;
        com.google.gwt.dom.client.Text r0;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Text;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Text: java.lang.String getData()>();

        return $r1;
    }

    public com.google.gwt.dom.client.Element getDocumentElement()
    {
        com.google.gwt.dom.client.Element $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        $r1 = r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Element documentElement>;

        return $r1;
    }

    public com.google.gwt.dom.client.Node getFirstChild(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0, $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getFirstChild()>();

        return $r1;
    }

    public com.google.gwt.dom.client.Node getLastChild(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0, $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getLastChild()>();

        return $r1;
    }

    public int getLength(com.google.gwt.dom.client.Text)
    {
        int $i0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;
        com.google.gwt.dom.client.Text r0;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Text;

        $i0 = virtualinvoke r0.<com.google.gwt.dom.client.Text: int getLength()>();

        return $i0;
    }

    public com.google.gwt.dom.client.Node getNextSibling(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0, $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getNextSibling()>();

        return $r1;
    }

    public short getNodeType(com.google.gwt.dom.client.Node)
    {
        short $s0;
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $s0 = virtualinvoke r0.<com.google.gwt.dom.client.Node: short getNodeType()>();

        return $s0;
    }

    public com.google.gwt.dom.client.Element getParentElement(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Element $r1;
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Element getParentElement()>();

        return $r1;
    }

    public com.google.gwt.dom.client.Node getPreviousSibling(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0, $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Node: com.google.gwt.dom.client.Node getPreviousSibling()>();

        return $r1;
    }

    public java.lang.String getTagName(com.google.gwt.dom.client.Element)
    {
        com.google.gwt.dom.client.Element r0;
        java.lang.String $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Element;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Element: java.lang.String getTagName()>();

        return $r1;
    }

    public java.lang.String getAttribute(com.google.gwt.dom.client.Element, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;
        com.google.gwt.dom.client.Element r1;
        java.lang.String r0, $r3;
        boolean $z0;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: com.google.gwt.dom.client.Element;

        r0 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("class");

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<com.google.gwt.dom.client.Element: java.lang.String getClassName()>();

        goto label2;

     label1:
        $r3 = virtualinvoke r1.<com.google.gwt.dom.client.Element: java.lang.String getAttribute(java.lang.String)>(r0);

     label2:
        return $r3;
    }

    public java.lang.String getStylePropertyValue(com.google.gwt.dom.client.Element, java.lang.String)
    {
        com.google.gwt.dom.client.Style $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r5;
        com.google.gwt.dom.client.Element r0;
        com.google.gwt.core.client.JavaScriptObject $r6;
        org.waveprotocol.wave.client.common.util.JsoView $r2;
        java.lang.String r3, $r4;

        r5 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Element;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<com.google.gwt.dom.client.Element: com.google.gwt.dom.client.Style getStyle()>();

        $r6 = (com.google.gwt.core.client.JavaScriptObject) $r1;

        $r2 = staticinvoke <org.waveprotocol.wave.client.common.util.JsoView: org.waveprotocol.wave.client.common.util.JsoView as(com.google.gwt.core.client.JavaScriptObject)>($r6);

        $r4 = virtualinvoke $r2.<org.waveprotocol.wave.client.common.util.JsoView: java.lang.String getString(java.lang.String)>(r3);

        return $r4;
    }

    public boolean isSameNode(com.google.gwt.dom.client.Node, com.google.gwt.dom.client.Node)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r2;
        com.google.gwt.dom.client.Node r0, r1;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        r1 := @parameter1: com.google.gwt.dom.client.Node;

        if r0 == r1 goto label1;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<com.google.gwt.dom.client.Node: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

     label1:
        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;
    }

    public void onBeforeFilter(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        org.waveprotocol.wave.model.document.util.Point r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        return;
    }

    public com.google.gwt.dom.client.Node getVisibleNode(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        return r0;
    }

    public com.google.gwt.dom.client.Node getVisibleNodeFirst(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        return r0;
    }

    public com.google.gwt.dom.client.Node getVisibleNodeLast(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        return r0;
    }

    public com.google.gwt.dom.client.Node getVisibleNodeNext(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        return r0;
    }

    public com.google.gwt.dom.client.Node getVisibleNodePrevious(com.google.gwt.dom.client.Node)
    {
        com.google.gwt.dom.client.Node r0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r1;

        r1 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r0 := @parameter0: com.google.gwt.dom.client.Node;

        return r0;
    }

    public volatile java.lang.Object getVisibleNodeLast(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getVisibleNodeLast(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNodeFirst(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getVisibleNodeFirst(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNodePrevious(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getVisibleNodePrevious(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNodeNext(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getVisibleNodeNext(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getVisibleNode(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getVisibleNode(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object asText(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2;
        com.google.gwt.dom.client.Text $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Text asText(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object asElement(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        com.google.gwt.dom.client.Element $r3;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Element asElement(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile int getLength(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        int $i0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Text $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Text) r1;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: int getLength(com.google.gwt.dom.client.Text)>($r2);

        return $i0;
    }

    public volatile java.lang.String getData(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        java.lang.String $r3;
        com.google.gwt.dom.client.Text $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Text) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: java.lang.String getData(com.google.gwt.dom.client.Text)>($r2);

        return $r3;
    }

    public volatile java.util.Map getAttributes(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.util.Map $r3;
        com.google.gwt.dom.client.Element $r2;
        java.lang.Object r1;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Element) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: java.util.Map getAttributes(com.google.gwt.dom.client.Element)>($r2);

        return $r3;
    }

    public volatile java.lang.String getAttribute(java.lang.Object, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        com.google.gwt.dom.client.Element $r3;
        java.lang.Object r1;
        java.lang.String r2, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = (com.google.gwt.dom.client.Element) r1;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: java.lang.String getAttribute(com.google.gwt.dom.client.Element,java.lang.String)>($r3, r2);

        return $r4;
    }

    public volatile java.lang.String getTagName(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        com.google.gwt.dom.client.Element $r2;
        java.lang.Object r1;
        java.lang.String $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Element) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: java.lang.String getTagName(com.google.gwt.dom.client.Element)>($r2);

        return $r3;
    }

    public volatile boolean isSameNode(java.lang.Object, java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1, r2;
        com.google.gwt.dom.client.Node $r3, $r4;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.google.gwt.dom.client.Node) r1;

        $r3 = (com.google.gwt.dom.client.Node) r2;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: boolean isSameNode(com.google.gwt.dom.client.Node,com.google.gwt.dom.client.Node)>($r4, $r3);

        return $z0;
    }

    public volatile java.lang.Object getNextSibling(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getNextSibling(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getPreviousSibling(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getPreviousSibling(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getLastChild(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getLastChild(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getFirstChild(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2, $r3;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Node getFirstChild(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile short getNodeType(java.lang.Object)
    {
        short $s0;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $s0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: short getNodeType(com.google.gwt.dom.client.Node)>($r2);

        return $s0;
    }

    public volatile java.lang.Object getParentElement(java.lang.Object)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        com.google.gwt.dom.client.Element $r3;
        java.lang.Object r1;
        com.google.gwt.dom.client.Node $r2;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gwt.dom.client.Node) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Element getParentElement(com.google.gwt.dom.client.Node)>($r2);

        return $r3;
    }

    public volatile java.lang.Object getDocumentElement()
    {
        com.google.gwt.dom.client.Element $r1;
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: com.google.gwt.dom.client.Element getDocumentElement()>();

        return $r1;
    }

    public volatile java.lang.String getStylePropertyValue(java.lang.Object, java.lang.String)
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl r0;
        com.google.gwt.dom.client.Element $r3;
        java.lang.Object r1;
        java.lang.String r2, $r4;

        r0 := @this: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = (com.google.gwt.dom.client.Element) r1;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: java.lang.String getStylePropertyValue(com.google.gwt.dom.client.Element,java.lang.String)>($r3, r2);

        return $r4;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.editor.impl.HtmlViewImpl $r0;

        $r0 = new org.waveprotocol.wave.client.editor.impl.HtmlViewImpl;

        specialinvoke $r0.<org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: void <init>(com.google.gwt.dom.client.Element)>(null);

        <org.waveprotocol.wave.client.editor.impl.HtmlViewImpl: org.waveprotocol.wave.client.editor.impl.HtmlViewImpl INSTANCE> = $r0;

        return;
    }
}
