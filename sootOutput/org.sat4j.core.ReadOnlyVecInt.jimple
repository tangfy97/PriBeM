public final class org.sat4j.core.ReadOnlyVecInt extends java.lang.Object implements org.sat4j.specs.IVecInt
{
    private static final long serialVersionUID;
    private final org.sat4j.specs.IVecInt vec;

    public void <init>(org.sat4j.specs.IVecInt)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec> = r1;

        return;
    }

    public void clear()
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean contains(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0;
        org.sat4j.specs.IVecInt $r1;
        boolean $z0;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $z0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: boolean contains(int)>(i0);

        return $z0;
    }

    public int containsAt(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0, $i1;
        org.sat4j.specs.IVecInt $r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int containsAt(int)>(i0);

        return $i1;
    }

    public int containsAt(int, int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0, i1, $i2;
        org.sat4j.specs.IVecInt $r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int containsAt(int,int)>(i0, i1);

        return $i2;
    }

    public void copyTo(org.sat4j.specs.IVecInt)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt r1, $r2;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        r1 := @parameter0: org.sat4j.specs.IVecInt;

        $r2 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void copyTo(org.sat4j.specs.IVecInt)>(r1);

        return;
    }

    public void copyTo(int[])
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt $r2;
        int[] r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        r1 := @parameter0: int[];

        $r2 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        interfaceinvoke $r2.<org.sat4j.specs.IVecInt: void copyTo(int[])>(r1);

        return;
    }

    public int delete(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void ensure(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int get(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0, $i1;
        org.sat4j.specs.IVecInt $r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int get(int)>(i0);

        return $i1;
    }

    public void growTo(int, int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;
        int i0, i1;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void insertFirst(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean isEmpty()
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt $r1;
        boolean $z0;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $z0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: boolean isEmpty()>();

        return $z0;
    }

    public org.sat4j.specs.IteratorInt iterator()
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt $r1;
        org.sat4j.specs.IteratorInt $r2;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $r2 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: org.sat4j.specs.IteratorInt iterator()>();

        return $r2;
    }

    public int last()
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt $r1;
        int $i0;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int last()>();

        return $i0;
    }

    public void moveTo(org.sat4j.specs.IVecInt)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        org.sat4j.specs.IVecInt r2;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void moveTo(int[])
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;
        int[] r2;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        r2 := @parameter0: int[];

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void moveTo(int, int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;
        int i0, i1;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void moveTo2(org.sat4j.specs.IVecInt)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        org.sat4j.specs.IVecInt r2;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        r2 := @parameter0: org.sat4j.specs.IVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.sat4j.specs.IVecInt pop()
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.sat4j.specs.IVecInt push(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void remove(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void set(int, int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;
        int i0, i1;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void shrink(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void shrinkTo(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int size()
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt $r1;
        int $i0;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i0 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int size()>();

        return $i0;
    }

    public void sort()
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void sortUnique()
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int unsafeGet(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0, $i1;
        org.sat4j.specs.IVecInt $r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int unsafeGet(int)>(i0);

        return $i1;
    }

    public void unsafePush(int)
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        int i0;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int[] toArray()
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int indexOf(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0, $i1;
        org.sat4j.specs.IVecInt $r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $i1 = interfaceinvoke $r1.<org.sat4j.specs.IVecInt: int indexOf(int)>(i0);

        return $i1;
    }

    public java.lang.String toString()
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        org.sat4j.specs.IVecInt $r1;
        java.lang.String $r2;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        $r1 = r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.specs.IVecInt vec>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void moveTo(int, int[])
    {
        org.sat4j.core.ReadOnlyVecInt r1;
        java.lang.UnsupportedOperationException $r0;
        int[] r2;
        int i0;

        r1 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        r2 := @parameter1: int[];

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.sat4j.core.VecInt[] subset(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        return null;
    }

    public volatile org.sat4j.specs.IVecInt[] subset(int)
    {
        org.sat4j.core.ReadOnlyVecInt r0;
        int i0;
        org.sat4j.core.VecInt[] $r1;

        r0 := @this: org.sat4j.core.ReadOnlyVecInt;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.sat4j.core.ReadOnlyVecInt: org.sat4j.core.VecInt[] subset(int)>(i0);

        return $r1;
    }

    public static void <clinit>()
    {
        <org.sat4j.core.ReadOnlyVecInt: long serialVersionUID> = 1L;

        return;
    }
}
