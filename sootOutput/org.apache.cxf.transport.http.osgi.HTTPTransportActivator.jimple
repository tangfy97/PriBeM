public class org.apache.cxf.transport.http.osgi.HTTPTransportActivator extends java.lang.Object implements org.osgi.framework.BundleActivator, org.osgi.service.cm.ManagedServiceFactory, org.apache.cxf.transport.http.HTTPConduitConfigurer
{
    public static final java.lang.String FACTORY_PID;
    private static final java.lang.String SECURE_HTTP_PREFIX;
    org.osgi.util.tracker.ServiceTracker configAdminTracker;
    org.osgi.framework.ServiceRegistration reg;
    org.osgi.framework.ServiceRegistration reg2;
    java.util.Map props;
    java.util.concurrent.CopyOnWriteArrayList sorted;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r1;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r1.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(4, 0.75F, 2);

        r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props> = $r1;

        $r2 = new java.util.concurrent.CopyOnWriteArrayList;

        specialinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();

        r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted> = $r2;

        return;
    }

    public void start(org.osgi.framework.BundleContext) throws java.lang.Exception
    {
        java.util.Properties $r0, $r6;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r1;
        org.osgi.framework.BundleContext r2;
        org.osgi.util.tracker.ServiceTracker $r10, $r13;
        java.lang.Class $r3, $r7, $r11;
        java.lang.String $r4, $r8, $r12;
        org.osgi.framework.ServiceRegistration $r5, $r9;

        r1 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r2 := @parameter0: org.osgi.framework.BundleContext;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        virtualinvoke $r0.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", "org.apache.cxf.http.conduits");

        $r3 = class "Lorg/osgi/service/cm/ManagedServiceFactory;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = interfaceinvoke r2.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String,java.lang.Object,java.util.Dictionary)>($r4, r1, $r0);

        r1.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.framework.ServiceRegistration reg2> = $r5;

        $r6 = new java.util.Properties;

        specialinvoke $r6.<java.util.Properties: void <init>()>();

        virtualinvoke $r6.<java.util.Properties: java.lang.Object put(java.lang.Object,java.lang.Object)>("service.pid", "org.apache.cxf.http.conduit-configurer");

        $r7 = class "Lorg/apache/cxf/transport/http/HTTPConduitConfigurer;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = interfaceinvoke r2.<org.osgi.framework.BundleContext: org.osgi.framework.ServiceRegistration registerService(java.lang.String,java.lang.Object,java.util.Dictionary)>($r8, r1, $r6);

        r1.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.framework.ServiceRegistration reg> = $r9;

        $r10 = new org.osgi.util.tracker.ServiceTracker;

        $r11 = class "Lorg/osgi/service/cm/ConfigurationAdmin;";

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        specialinvoke $r10.<org.osgi.util.tracker.ServiceTracker: void <init>(org.osgi.framework.BundleContext,java.lang.String,org.osgi.util.tracker.ServiceTrackerCustomizer)>(r2, $r12, null);

        r1.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.util.tracker.ServiceTracker configAdminTracker> = $r10;

        $r13 = r1.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.util.tracker.ServiceTracker configAdminTracker>;

        virtualinvoke $r13.<org.osgi.util.tracker.ServiceTracker: void open()>();

        return;
    }

    public void stop(org.osgi.framework.BundleContext) throws java.lang.Exception
    {
        org.osgi.util.tracker.ServiceTracker $r3;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;
        org.osgi.framework.BundleContext r4;
        org.osgi.framework.ServiceRegistration $r1, $r2;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r4 := @parameter0: org.osgi.framework.BundleContext;

        $r1 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.framework.ServiceRegistration reg>;

        interfaceinvoke $r1.<org.osgi.framework.ServiceRegistration: void unregister()>();

        $r2 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.framework.ServiceRegistration reg2>;

        interfaceinvoke $r2.<org.osgi.framework.ServiceRegistration: void unregister()>();

        $r3 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.osgi.util.tracker.ServiceTracker configAdminTracker>;

        virtualinvoke $r3.<org.osgi.util.tracker.ServiceTracker: void close()>();

        return;
    }

    public java.lang.String getName()
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        return "org.apache.cxf.http.conduits";
    }

    public void updated(java.lang.String, java.util.Dictionary) throws org.osgi.service.cm.ConfigurationException
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r10;
        java.lang.Integer $r14;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo $r9;
        java.util.regex.Matcher r7, $r16;
        java.util.Map $r11, $r12, $r13;
        int i0;
        java.lang.String r0, r3, r5, $r15;
        java.lang.Object $r2, $r4, $r8;
        java.util.regex.Pattern $r6;
        java.util.Dictionary r1;

        r10 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Dictionary;

        if r0 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("url");

        r3 = (java.lang.String) $r2;

        $r4 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("name");

        r5 = (java.lang.String) $r4;

        if r3 != null goto label2;

        $r16 = null;

        goto label3;

     label2:
        $r6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r3);

        $r16 = virtualinvoke $r6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

     label3:
        r7 = $r16;

        $r8 = virtualinvoke r1.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("order");

        $r15 = (java.lang.String) $r8;

        i0 = 50;

        if $r15 == null goto label4;

        $r14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>($r15);

        i0 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

     label4:
        $r9 = new org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo;

        specialinvoke $r9.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: void <init>(java.util.Dictionary,java.util.regex.Matcher,int)>(r1, r7, i0);

        $r11 = r10.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r9);

        if r3 == null goto label5;

        $r13 = r10.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, $r9);

     label5:
        if r5 == null goto label6;

        $r12 = r10.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r5, $r9);

     label6:
        specialinvoke r10.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void addToSortedInfos(org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo)>($r9);

        return;
    }

    private synchronized void addToSortedInfos(org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo)
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo r2, r6;
        int $i0, $i1, i2;
        java.lang.Object $r5;
        java.util.concurrent.CopyOnWriteArrayList $r1, $r3, $r4, $r7;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r2 := @parameter0: org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo;

        $r1 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted>;

        $i0 = virtualinvoke $r1.<java.util.concurrent.CopyOnWriteArrayList: int size()>();

        i2 = 0;

     label1:
        if i2 >= $i0 goto label3;

        $r4 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted>;

        $r5 = virtualinvoke $r4.<java.util.concurrent.CopyOnWriteArrayList: java.lang.Object get(int)>(i2);

        r6 = (org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo) $r5;

        $i1 = virtualinvoke r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: int compareTo(org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo)>(r6);

        if $i1 >= 0 goto label2;

        $r7 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted>;

        virtualinvoke $r7.<java.util.concurrent.CopyOnWriteArrayList: void add(int,java.lang.Object)>(i2, r2);

        return;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r3 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted>;

        virtualinvoke $r3.<java.util.concurrent.CopyOnWriteArrayList: boolean add(java.lang.Object)>(r2);

        return;
    }

    private synchronized void removeFromSortedInfos(org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo)
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo r1;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;
        java.util.concurrent.CopyOnWriteArrayList $r2;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r1 := @parameter0: org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo;

        $r2 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted>;

        virtualinvoke $r2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(r1);

        return;
    }

    public void deleted(java.lang.String)
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo r4;
        java.util.Map $r2, $r10, $r11;
        java.lang.Object $r3, $r6, $r8;
        java.lang.String r1, r7, r9;
        java.util.Dictionary $r5;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo) $r3;

        if r4 != null goto label1;

        return;

     label1:
        specialinvoke r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void removeFromSortedInfos(org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo)>(r4);

        $r5 = virtualinvoke r4.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: java.util.Dictionary getProps()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("url");

        r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r5.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>("name");

        r9 = (java.lang.String) $r8;

        if r7 == null goto label2;

        $r11 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r7);

     label2:
        if r9 == null goto label3;

        $r10 = r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r9);

     label3:
        return;
    }

    public void configure(java.lang.String, java.lang.String, org.apache.cxf.transport.http.HTTPConduit)
    {
        java.lang.Throwable $r15;
        org.apache.cxf.transport.http.HTTPConduit r4;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r2;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo r7, r16, r17;
        java.util.regex.Matcher $r8, $r9;
        java.util.Map $r11, $r13;
        java.lang.String r0, r1;
        boolean $z0, $z1;
        java.util.Iterator $r19;
        java.lang.Object $r6, $r12, $r14;
        java.util.Dictionary $r3, $r5, $r10;
        java.util.concurrent.CopyOnWriteArrayList $r18;

        r2 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.cxf.transport.http.HTTPConduit;

        r16 = null;

        r17 = null;

        if r0 == null goto label01;

        $r13 = r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        $r14 = interfaceinvoke $r13.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r16 = (org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo) $r14;

     label01:
        if r1 == null goto label02;

        $r11 = r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.Map props>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r17 = (org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo) $r12;

        if r17 != r16 goto label02;

        r17 = null;

     label02:
        $r18 = r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.util.concurrent.CopyOnWriteArrayList sorted>;

        $r19 = virtualinvoke $r18.<java.util.concurrent.CopyOnWriteArrayList: java.util.Iterator iterator()>();

     label03:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r6 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo) $r6;

        $r8 = virtualinvoke r7.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: java.util.regex.Matcher getMatcher()>();

        if $r8 == null goto label09;

        if r7 == r16 goto label09;

        if r7 == r17 goto label09;

        $r9 = virtualinvoke r7.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: java.util.regex.Matcher getMatcher()>();

        entermonitor $r9;

     label04:
        virtualinvoke $r9.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r9.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label05;

        $r10 = virtualinvoke r7.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: java.util.Dictionary getProps()>();

        specialinvoke r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)>($r10, r4, r1);

     label05:
        exitmonitor $r9;

     label06:
        goto label09;

     label07:
        $r15 := @caughtexception;

        exitmonitor $r9;

     label08:
        throw $r15;

     label09:
        goto label03;

     label10:
        if r17 == null goto label11;

        $r5 = virtualinvoke r17.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: java.util.Dictionary getProps()>();

        specialinvoke r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)>($r5, r4, r1);

     label11:
        if r16 == null goto label12;

        $r3 = virtualinvoke r16.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator$PidInfo: java.util.Dictionary getProps()>();

        specialinvoke r2.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void apply(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit,java.lang.String)>($r3, r4, r1);

     label12:
        return;

        catch java.lang.Throwable from label04 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    private void apply(java.util.Dictionary, org.apache.cxf.transport.http.HTTPConduit, java.lang.String)
    {
        org.apache.cxf.transport.http.HTTPConduit r2;
        java.lang.String r3;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r0;
        java.util.Dictionary r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r1 := @parameter0: java.util.Dictionary;

        r2 := @parameter1: org.apache.cxf.transport.http.HTTPConduit;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void applyClientPolicies(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)>(r1, r2);

        specialinvoke r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void applyAuthorization(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)>(r1, r2);

        specialinvoke r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void applyProxyAuthorization(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)>(r1, r2);

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("https");

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: void applyTlsClientParameters(java.util.Dictionary,org.apache.cxf.transport.http.HTTPConduit)>(r1, r2);

     label1:
        return;
    }

    private void applyTlsClientParameters(java.util.Dictionary, org.apache.cxf.transport.http.HTTPConduit)
    {
        java.util.Enumeration $r1;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r16;
        java.security.SecureRandom $r5;
        org.apache.cxf.configuration.security.FiltersType $r27, $r31, r64;
        org.apache.cxf.configuration.security.KeyManagersType r58;
        org.apache.cxf.configuration.security.DNConstraintsType $r44, $r46, $r47, $r49, r63;
        java.lang.Exception $r53;
        java.util.Dictionary r0;
        java.util.StringTokenizer $r21, $r26;
        java.lang.String $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18, $r19, $r20, $r23, $r24, $r25, $r28, $r30, $r32, $r33, $r34, $r35, $r37, $r38, $r40, $r41, $r45, $r48, $r52, r60, r61;
        java.lang.RuntimeException $r54, $r55;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r39, $r50, r62;
        org.apache.cxf.configuration.security.CombinatorType $r43;
        org.apache.cxf.configuration.security.TrustManagersType r59;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25;
        java.util.List $r22, r29, $r42, $r65;
        org.apache.cxf.transport.http.HTTPConduit r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.cxf.configuration.jsse.TLSClientParameters $r51, r56;
        org.apache.cxf.configuration.security.SecureRandomParameters $r36, r57;
        javax.net.ssl.TrustManager[] $r3;
        java.lang.Object $r6, $r7;
        javax.net.ssl.KeyManager[] $r4;

        r16 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r0 := @parameter0: java.util.Dictionary;

        r2 := @parameter1: org.apache.cxf.transport.http.HTTPConduit;

        $r1 = virtualinvoke r0.<java.util.Dictionary: java.util.Enumeration keys()>();

        r56 = virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: org.apache.cxf.configuration.jsse.TLSClientParameters getTlsClientParameters()>();

        r57 = null;

        r58 = null;

        r59 = null;

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label31;

        $r6 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r60 = (java.lang.String) $r6;

        $z1 = virtualinvoke r60.<java.lang.String: boolean startsWith(java.lang.String)>("tlsClientParameters.");

        if $z1 == 0 goto label30;

        if r56 != null goto label02;

        $r51 = new org.apache.cxf.configuration.jsse.TLSClientParameters;

        specialinvoke $r51.<org.apache.cxf.configuration.jsse.TLSClientParameters: void <init>()>();

        r56 = $r51;

        virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: void setTlsClientParameters(org.apache.cxf.configuration.jsse.TLSClientParameters)>($r51);

     label02:
        $r7 = virtualinvoke r0.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r60);

        $r52 = (java.lang.String) $r7;

        $r8 = "tlsClientParameters.";

        $i0 = virtualinvoke $r8.<java.lang.String: int length()>();

        $r9 = virtualinvoke r60.<java.lang.String: java.lang.String substring(int)>($i0);

        $r10 = "secureSocketProtocol";

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z2 == 0 goto label03;

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setSecureSocketProtocol(java.lang.String)>($r52);

        goto label30;

     label03:
        $r11 = "sslCacheTimeout";

        $z3 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label04;

        $i8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r52);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setSslCacheTimeout(int)>($i8);

        goto label30;

     label04:
        $r12 = "jsseProvider";

        $z4 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z4 == 0 goto label05;

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setJsseProvider(java.lang.String)>($r52);

        goto label30;

     label05:
        $r13 = "disableCNCheck";

        $z5 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z5 == 0 goto label06;

        $z24 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r52);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setDisableCNCheck(boolean)>($z24);

        goto label30;

     label06:
        $r14 = "useHttpsURLConnectionDefaultHostnameVerifier";

        $z6 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z6 == 0 goto label07;

        $z23 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r52);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setUseHttpsURLConnectionDefaultHostnameVerifier(boolean)>($z23);

        goto label30;

     label07:
        $r15 = "useHttpsURLConnectionDefaultSslSocketFactory";

        $z7 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z7 == 0 goto label08;

        $z22 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r52);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setUseHttpsURLConnectionDefaultSslSocketFactory(boolean)>($z22);

        goto label30;

     label08:
        $z8 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("certConstraints.");

        if $z8 == 0 goto label16;

        $r37 = "certConstraints.";

        $i5 = virtualinvoke $r37.<java.lang.String: int length()>();

        $r38 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i5);

        r61 = $r38;

        $r39 = virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType getCertConstraints()>();

        r62 = $r39;

        if $r39 != null goto label09;

        $r50 = new org.apache.cxf.configuration.security.CertificateConstraintsType;

        specialinvoke $r50.<org.apache.cxf.configuration.security.CertificateConstraintsType: void <init>()>();

        r62 = $r50;

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setCertConstraints(org.apache.cxf.configuration.security.CertificateConstraintsType)>($r50);

     label09:
        r63 = null;

        $z18 = virtualinvoke $r38.<java.lang.String: boolean startsWith(java.lang.String)>("SubjectDNConstraints.");

        if $z18 == 0 goto label11;

        $r47 = virtualinvoke r62.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getSubjectDNConstraints()>();

        r63 = $r47;

        if $r47 != null goto label10;

        $r49 = new org.apache.cxf.configuration.security.DNConstraintsType;

        specialinvoke $r49.<org.apache.cxf.configuration.security.DNConstraintsType: void <init>()>();

        r63 = $r49;

        virtualinvoke r62.<org.apache.cxf.configuration.security.CertificateConstraintsType: void setSubjectDNConstraints(org.apache.cxf.configuration.security.DNConstraintsType)>($r49);

     label10:
        $r48 = "SubjectDNConstraints.";

        $i7 = virtualinvoke $r48.<java.lang.String: int length()>();

        r61 = virtualinvoke $r38.<java.lang.String: java.lang.String substring(int)>($i7);

        goto label13;

     label11:
        $z19 = virtualinvoke $r38.<java.lang.String: boolean startsWith(java.lang.String)>("IssuerDNConstraints.");

        if $z19 == 0 goto label13;

        $r44 = virtualinvoke r62.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getIssuerDNConstraints()>();

        r63 = $r44;

        if $r44 != null goto label12;

        $r46 = new org.apache.cxf.configuration.security.DNConstraintsType;

        specialinvoke $r46.<org.apache.cxf.configuration.security.DNConstraintsType: void <init>()>();

        r63 = $r46;

        virtualinvoke r62.<org.apache.cxf.configuration.security.CertificateConstraintsType: void setIssuerDNConstraints(org.apache.cxf.configuration.security.DNConstraintsType)>($r46);

     label12:
        $r45 = "IssuerDNConstraints.";

        $i6 = virtualinvoke $r45.<java.lang.String: int length()>();

        r61 = virtualinvoke $r38.<java.lang.String: java.lang.String substring(int)>($i6);

     label13:
        if r63 == null goto label15;

        $r40 = "combinator";

        $z20 = virtualinvoke $r40.<java.lang.String: boolean equals(java.lang.Object)>(r61);

        if $z20 == 0 goto label14;

        $r43 = staticinvoke <org.apache.cxf.configuration.security.CombinatorType: org.apache.cxf.configuration.security.CombinatorType fromValue(java.lang.String)>($r52);

        virtualinvoke r63.<org.apache.cxf.configuration.security.DNConstraintsType: void setCombinator(org.apache.cxf.configuration.security.CombinatorType)>($r43);

        goto label15;

     label14:
        $r41 = "RegularExpression";

        $z21 = virtualinvoke $r41.<java.lang.String: boolean equals(java.lang.Object)>(r61);

        if $z21 == 0 goto label15;

        $r42 = virtualinvoke r63.<org.apache.cxf.configuration.security.DNConstraintsType: java.util.List getRegularExpression()>();

        interfaceinvoke $r42.<java.util.List: boolean add(java.lang.Object)>(r61);

     label15:
        goto label30;

     label16:
        $z9 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("secureRandomParameters.");

        if $z9 == 0 goto label19;

        $r32 = "secureRandomParameters.";

        $i4 = virtualinvoke $r32.<java.lang.String: int length()>();

        $r33 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i4);

        if r57 != null goto label17;

        $r36 = new org.apache.cxf.configuration.security.SecureRandomParameters;

        specialinvoke $r36.<org.apache.cxf.configuration.security.SecureRandomParameters: void <init>()>();

        r57 = $r36;

     label17:
        $r34 = "algorithm";

        $z16 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z16 == 0 goto label18;

        virtualinvoke r57.<org.apache.cxf.configuration.security.SecureRandomParameters: void setAlgorithm(java.lang.String)>($r52);

        goto label30;

     label18:
        $r35 = "provider";

        $z17 = virtualinvoke $r35.<java.lang.String: boolean equals(java.lang.Object)>($r33);

        if $z17 == 0 goto label30;

        virtualinvoke r57.<org.apache.cxf.configuration.security.SecureRandomParameters: void setProvider(java.lang.String)>($r52);

        goto label30;

     label19:
        $z10 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("cipherSuitesFilter.");

        if $z10 == 0 goto label25;

        $r24 = "cipherSuitesFilter.";

        $i3 = virtualinvoke $r24.<java.lang.String: int length()>();

        $r25 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i3);

        $r26 = new java.util.StringTokenizer;

        specialinvoke $r26.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r52, ",");

        $r27 = virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType getCipherSuitesFilter()>();

        r64 = $r27;

        if $r27 != null goto label20;

        $r31 = new org.apache.cxf.configuration.security.FiltersType;

        specialinvoke $r31.<org.apache.cxf.configuration.security.FiltersType: void <init>()>();

        r64 = $r31;

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setCipherSuitesFilter(org.apache.cxf.configuration.security.FiltersType)>($r31);

     label20:
        $r28 = "include";

        $z15 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>($r25);

        if $z15 == 0 goto label21;

        $r65 = virtualinvoke r64.<org.apache.cxf.configuration.security.FiltersType: java.util.List getInclude()>();

        goto label22;

     label21:
        $r65 = virtualinvoke r64.<org.apache.cxf.configuration.security.FiltersType: java.util.List getExclude()>();

     label22:
        r29 = $r65;

     label23:
        $z25 = virtualinvoke $r26.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z25 == 0 goto label24;

        $r30 = virtualinvoke $r26.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke r29.<java.util.List: boolean add(java.lang.Object)>($r30);

        goto label23;

     label24:
        goto label30;

     label25:
        $z11 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("cipherSuites");

        if $z11 == 0 goto label28;

        $r21 = new java.util.StringTokenizer;

        specialinvoke $r21.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r52, ",");

     label26:
        $z14 = virtualinvoke $r21.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z14 == 0 goto label27;

        $r22 = virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.util.List getCipherSuites()>();

        $r23 = virtualinvoke $r21.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label26;

     label27:
        goto label30;

     label28:
        $z12 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("trustManagers.");

        if $z12 == 0 goto label29;

        $r19 = "trustManagers.";

        $i2 = virtualinvoke $r19.<java.lang.String: int length()>();

        $r20 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i2);

        r59 = specialinvoke r16.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.apache.cxf.configuration.security.TrustManagersType getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType,java.lang.String,java.lang.String)>(r59, $r20, $r52);

        goto label30;

     label29:
        $z13 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("keyManagers.");

        if $z13 == 0 goto label30;

        $r17 = "keyManagers.";

        $i1 = virtualinvoke $r17.<java.lang.String: int length()>();

        $r18 = virtualinvoke $r9.<java.lang.String: java.lang.String substring(int)>($i1);

        r58 = specialinvoke r16.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.apache.cxf.configuration.security.KeyManagersType getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType,java.lang.String,java.lang.String)>(r58, $r18, $r52);

     label30:
        goto label01;

     label31:
        if r57 == null goto label32;

        $r5 = staticinvoke <org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils: java.security.SecureRandom getSecureRandom(org.apache.cxf.configuration.security.SecureRandomParameters)>(r57);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setSecureRandom(java.security.SecureRandom)>($r5);

     label32:
        if r58 == null goto label33;

        $r4 = staticinvoke <org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils: javax.net.ssl.KeyManager[] getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType)>(r58);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setKeyManagers(javax.net.ssl.KeyManager[])>($r4);

     label33:
        if r59 == null goto label34;

        $r3 = staticinvoke <org.apache.cxf.configuration.jsse.TLSParameterJaxBUtils: javax.net.ssl.TrustManager[] getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType)>(r59);

        virtualinvoke r56.<org.apache.cxf.configuration.jsse.TLSClientParameters: void setTrustManagers(javax.net.ssl.TrustManager[])>($r3);

     label34:
        goto label37;

     label35:
        $r55 := @caughtexception;

        throw $r55;

     label36:
        $r53 := @caughtexception;

        $r54 = new java.lang.RuntimeException;

        specialinvoke $r54.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r53);

        throw $r54;

     label37:
        return;

        catch java.lang.RuntimeException from label31 to label34 with label35;
        catch java.lang.Exception from label31 to label34 with label36;
    }

    private org.apache.cxf.configuration.security.KeyManagersType getKeyManagers(org.apache.cxf.configuration.security.KeyManagersType, java.lang.String, java.lang.String)
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r4;
        int $i0;
        java.lang.String r0, $r1, $r2, $r3, $r6, $r7, r8;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.configuration.security.KeyManagersType $r10, r11;
        org.apache.cxf.configuration.security.KeyStoreType $r5, $r9;

        r4 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r11 := @parameter0: org.apache.cxf.configuration.security.KeyManagersType;

        r0 := @parameter1: java.lang.String;

        r8 := @parameter2: java.lang.String;

        if r11 != null goto label1;

        $r10 = new org.apache.cxf.configuration.security.KeyManagersType;

        specialinvoke $r10.<org.apache.cxf.configuration.security.KeyManagersType: void <init>()>();

        r11 = $r10;

     label1:
        $r1 = "factoryAlgorithm";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setFactoryAlgorithm(java.lang.String)>(r8);

        goto label5;

     label2:
        $r2 = "provider";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setProvider(java.lang.String)>(r8);

        goto label5;

     label3:
        $r3 = "keyPassword";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setKeyPassword(java.lang.String)>(r8);

        goto label5;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("keyStore.");

        if $z3 == 0 goto label5;

        $r5 = virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: org.apache.cxf.configuration.security.KeyStoreType getKeyStore()>();

        $r6 = "keyStore.";

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r9 = specialinvoke r4.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.apache.cxf.configuration.security.KeyStoreType getKeyStore(org.apache.cxf.configuration.security.KeyStoreType,java.lang.String,java.lang.String)>($r5, $r7, r8);

        virtualinvoke r11.<org.apache.cxf.configuration.security.KeyManagersType: void setKeyStore(org.apache.cxf.configuration.security.KeyStoreType)>($r9);

     label5:
        return r11;
    }

    private org.apache.cxf.configuration.security.KeyStoreType getKeyStore(org.apache.cxf.configuration.security.KeyStoreType, java.lang.String, java.lang.String)
    {
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r9;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r6, r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.configuration.security.KeyStoreType $r8, r10;

        r9 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r10 := @parameter0: org.apache.cxf.configuration.security.KeyStoreType;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        if r10 != null goto label1;

        $r8 = new org.apache.cxf.configuration.security.KeyStoreType;

        specialinvoke $r8.<org.apache.cxf.configuration.security.KeyStoreType: void <init>()>();

        r10 = $r8;

     label1:
        $r1 = "type";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setType(java.lang.String)>(r7);

        goto label7;

     label2:
        $r2 = "password";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setPassword(java.lang.String)>(r7);

        goto label7;

     label3:
        $r3 = "provider";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setProvider(java.lang.String)>(r7);

        goto label7;

     label4:
        $r4 = "url";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label5;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setUrl(java.lang.String)>(r7);

        goto label7;

     label5:
        $r5 = "file";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label6;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setFile(java.lang.String)>(r7);

        goto label7;

     label6:
        $r6 = "resource";

        $z5 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z5 == 0 goto label7;

        virtualinvoke r10.<org.apache.cxf.configuration.security.KeyStoreType: void setResource(java.lang.String)>(r7);

     label7:
        return r10;
    }

    private org.apache.cxf.configuration.security.TrustManagersType getTrustManagers(org.apache.cxf.configuration.security.TrustManagersType, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.security.CertStoreType $r4, $r8;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r3;
        int $i0, $i1;
        org.apache.cxf.configuration.security.TrustManagersType $r13, r14;
        java.lang.String r0, $r1, $r2, $r5, $r6, r7, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.configuration.security.KeyStoreType $r9, $r12;

        r3 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r14 := @parameter0: org.apache.cxf.configuration.security.TrustManagersType;

        r0 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        if r14 != null goto label1;

        $r13 = new org.apache.cxf.configuration.security.TrustManagersType;

        specialinvoke $r13.<org.apache.cxf.configuration.security.TrustManagersType: void <init>()>();

        r14 = $r13;

     label1:
        $r1 = "provider";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setProvider(java.lang.String)>(r7);

        goto label5;

     label2:
        $r2 = "factoryAlgorithm";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setFactoryAlgorithm(java.lang.String)>(r7);

        goto label5;

     label3:
        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("keyStore.");

        if $z2 == 0 goto label4;

        $r9 = virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: org.apache.cxf.configuration.security.KeyStoreType getKeyStore()>();

        $r10 = "keyStore.";

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $r11 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $r12 = specialinvoke r3.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.apache.cxf.configuration.security.KeyStoreType getKeyStore(org.apache.cxf.configuration.security.KeyStoreType,java.lang.String,java.lang.String)>($r9, $r11, r7);

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setKeyStore(org.apache.cxf.configuration.security.KeyStoreType)>($r12);

        goto label5;

     label4:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("certStore");

        if $z3 == 0 goto label5;

        $r4 = virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: org.apache.cxf.configuration.security.CertStoreType getCertStore()>();

        $r5 = "certStore.";

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i0);

        $r8 = specialinvoke r3.<org.apache.cxf.transport.http.osgi.HTTPTransportActivator: org.apache.cxf.configuration.security.CertStoreType getCertStore(org.apache.cxf.configuration.security.CertStoreType,java.lang.String,java.lang.String)>($r4, $r6, r7);

        virtualinvoke r14.<org.apache.cxf.configuration.security.TrustManagersType: void setCertStore(org.apache.cxf.configuration.security.CertStoreType)>($r8);

     label5:
        return r14;
    }

    private org.apache.cxf.configuration.security.CertStoreType getCertStore(org.apache.cxf.configuration.security.CertStoreType, java.lang.String, java.lang.String)
    {
        org.apache.cxf.configuration.security.CertStoreType $r5, r7;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r6;
        java.lang.String r0, $r1, $r2, $r3, r4;
        boolean $z0, $z1, $z2;

        r6 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r7 := @parameter0: org.apache.cxf.configuration.security.CertStoreType;

        r0 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        if r7 != null goto label1;

        $r5 = new org.apache.cxf.configuration.security.CertStoreType;

        specialinvoke $r5.<org.apache.cxf.configuration.security.CertStoreType: void <init>()>();

        r7 = $r5;

     label1:
        $r1 = "file";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        virtualinvoke r7.<org.apache.cxf.configuration.security.CertStoreType: void setFile(java.lang.String)>(r4);

        goto label4;

     label2:
        $r2 = "url";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        virtualinvoke r7.<org.apache.cxf.configuration.security.CertStoreType: void setUrl(java.lang.String)>(r4);

        goto label4;

     label3:
        $r3 = "resource";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        virtualinvoke r7.<org.apache.cxf.configuration.security.CertStoreType: void setResource(java.lang.String)>(r4);

     label4:
        return r7;
    }

    private void applyProxyAuthorization(java.util.Dictionary, org.apache.cxf.transport.http.HTTPConduit)
    {
        java.util.Enumeration $r1;
        org.apache.cxf.transport.http.HTTPConduit r2;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r13;
        int $i0;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r12, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.configuration.security.ProxyAuthorizationPolicy $r11, r14;
        java.lang.Object $r3, $r4;
        java.util.Dictionary r0;

        r13 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r0 := @parameter0: java.util.Dictionary;

        r2 := @parameter1: org.apache.cxf.transport.http.HTTPConduit;

        $r1 = virtualinvoke r0.<java.util.Dictionary: java.util.Enumeration keys()>();

        r14 = virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: org.apache.cxf.configuration.security.ProxyAuthorizationPolicy getProxyAuthorization()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r15 = (java.lang.String) $r3;

        $z1 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("proxyAuthorization.");

        if $z1 == 0 goto label6;

        if r14 != null goto label2;

        $r11 = new org.apache.cxf.configuration.security.ProxyAuthorizationPolicy;

        specialinvoke $r11.<org.apache.cxf.configuration.security.ProxyAuthorizationPolicy: void <init>()>();

        r14 = $r11;

        virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: void setProxyAuthorization(org.apache.cxf.configuration.security.ProxyAuthorizationPolicy)>($r11);

     label2:
        $r4 = virtualinvoke r0.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r15);

        $r12 = (java.lang.String) $r4;

        $r5 = "proxyAuthorization.";

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = "UserName";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        virtualinvoke r14.<org.apache.cxf.configuration.security.ProxyAuthorizationPolicy: void setUserName(java.lang.String)>($r12);

        goto label6;

     label3:
        $r8 = "Password";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label4;

        virtualinvoke r14.<org.apache.cxf.configuration.security.ProxyAuthorizationPolicy: void setPassword(java.lang.String)>($r12);

        goto label6;

     label4:
        $r9 = "Authorization";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label5;

        virtualinvoke r14.<org.apache.cxf.configuration.security.ProxyAuthorizationPolicy: void setAuthorization(java.lang.String)>($r12);

        goto label6;

     label5:
        $r10 = "AuthorizationType";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label6;

        virtualinvoke r14.<org.apache.cxf.configuration.security.ProxyAuthorizationPolicy: void setAuthorizationType(java.lang.String)>($r12);

     label6:
        goto label1;

     label7:
        return;
    }

    private void applyAuthorization(java.util.Dictionary, org.apache.cxf.transport.http.HTTPConduit)
    {
        java.util.Enumeration $r1;
        org.apache.cxf.transport.http.HTTPConduit r2;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r13;
        int $i0;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r12, r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.cxf.configuration.security.AuthorizationPolicy $r11, r14;
        java.lang.Object $r3, $r4;
        java.util.Dictionary r0;

        r13 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r0 := @parameter0: java.util.Dictionary;

        r2 := @parameter1: org.apache.cxf.transport.http.HTTPConduit;

        $r1 = virtualinvoke r0.<java.util.Dictionary: java.util.Enumeration keys()>();

        r14 = virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: org.apache.cxf.configuration.security.AuthorizationPolicy getAuthorization()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label7;

        $r3 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r15 = (java.lang.String) $r3;

        $z1 = virtualinvoke r15.<java.lang.String: boolean startsWith(java.lang.String)>("authorization.");

        if $z1 == 0 goto label6;

        if r14 != null goto label2;

        $r11 = new org.apache.cxf.configuration.security.AuthorizationPolicy;

        specialinvoke $r11.<org.apache.cxf.configuration.security.AuthorizationPolicy: void <init>()>();

        r14 = $r11;

        virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: void setAuthorization(org.apache.cxf.configuration.security.AuthorizationPolicy)>($r11);

     label2:
        $r4 = virtualinvoke r0.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r15);

        $r12 = (java.lang.String) $r4;

        $r5 = "authorization.";

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r15.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = "UserName";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label3;

        virtualinvoke r14.<org.apache.cxf.configuration.security.AuthorizationPolicy: void setUserName(java.lang.String)>($r12);

        goto label6;

     label3:
        $r8 = "Password";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label4;

        virtualinvoke r14.<org.apache.cxf.configuration.security.AuthorizationPolicy: void setPassword(java.lang.String)>($r12);

        goto label6;

     label4:
        $r9 = "Authorization";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label5;

        virtualinvoke r14.<org.apache.cxf.configuration.security.AuthorizationPolicy: void setAuthorization(java.lang.String)>($r12);

        goto label6;

     label5:
        $r10 = "AuthorizationType";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label6;

        virtualinvoke r14.<org.apache.cxf.configuration.security.AuthorizationPolicy: void setAuthorizationType(java.lang.String)>($r12);

     label6:
        goto label1;

     label7:
        return;
    }

    private void applyClientPolicies(java.util.Dictionary, org.apache.cxf.transport.http.HTTPConduit)
    {
        java.util.Enumeration $r1;
        org.apache.cxf.transport.http.osgi.HTTPTransportActivator r36;
        java.util.Dictionary r0;
        long $l5, $l6, $l7;
        org.apache.cxf.transports.http.configuration.ConnectionType $r24;
        java.lang.String $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r35, r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        org.apache.cxf.transports.http.configuration.ProxyServerType $r22;
        org.apache.cxf.transport.http.HTTPConduit r2;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object $r3, $r4;
        org.apache.cxf.transports.http.configuration.HTTPClientPolicy $r34, r37;

        r36 := @this: org.apache.cxf.transport.http.osgi.HTTPTransportActivator;

        r0 := @parameter0: java.util.Dictionary;

        r2 := @parameter1: org.apache.cxf.transport.http.HTTPConduit;

        $r1 = virtualinvoke r0.<java.util.Dictionary: java.util.Enumeration keys()>();

        r37 = virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: org.apache.cxf.transports.http.configuration.HTTPClientPolicy getClient()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label18;

        $r3 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r38 = (java.lang.String) $r3;

        $z1 = virtualinvoke r38.<java.lang.String: boolean startsWith(java.lang.String)>("client.");

        if $z1 == 0 goto label17;

        if r37 != null goto label02;

        $r34 = new org.apache.cxf.transports.http.configuration.HTTPClientPolicy;

        specialinvoke $r34.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void <init>()>();

        r37 = $r34;

        virtualinvoke r2.<org.apache.cxf.transport.http.HTTPConduit: void setClient(org.apache.cxf.transports.http.configuration.HTTPClientPolicy)>($r34);

     label02:
        $r4 = virtualinvoke r0.<java.util.Dictionary: java.lang.Object get(java.lang.Object)>(r38);

        $r35 = (java.lang.String) $r4;

        $r5 = "client.";

        $i0 = virtualinvoke $r5.<java.lang.String: int length()>();

        $r6 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int)>($i0);

        $r7 = "ConnectionTimeout";

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label03;

        $r33 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $l7 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r33);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setConnectionTimeout(long)>($l7);

        goto label17;

     label03:
        $r8 = "ReceiveTimeout";

        $z3 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label04;

        $r32 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $l6 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r32);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setReceiveTimeout(long)>($l6);

        goto label17;

     label04:
        $r9 = "AsyncExecuteTimeout";

        $z4 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label05;

        $r31 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r31);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAsyncExecuteTimeout(long)>($l5);

        goto label17;

     label05:
        $r10 = "AsyncExecuteTimeoutRejection";

        $z5 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label06;

        $r30 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $z19 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r30);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAsyncExecuteTimeoutRejection(boolean)>($z19);

        goto label17;

     label06:
        $r11 = "AutoRedirect";

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z6 == 0 goto label07;

        $r29 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $z18 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r29);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAutoRedirect(boolean)>($z18);

        goto label17;

     label07:
        $r12 = "MaxRetransmits";

        $z7 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z7 == 0 goto label08;

        $r28 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r28);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setMaxRetransmits(int)>($i4);

        goto label17;

     label08:
        $r13 = "AllowChunking";

        $z8 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z8 == 0 goto label09;

        $r27 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $z17 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r27);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setAllowChunking(boolean)>($z17);

        goto label17;

     label09:
        $r14 = "ChunkingThreshold";

        $z9 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z9 == 0 goto label10;

        $r26 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setChunkingThreshold(int)>($i3);

        goto label17;

     label10:
        $r15 = "ChunkLength";

        $z10 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z10 == 0 goto label11;

        $r25 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r25);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setChunkLength(int)>($i2);

        goto label17;

     label11:
        $r16 = "Connection";

        $z11 = virtualinvoke $r16.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z11 == 0 goto label12;

        $r24 = staticinvoke <org.apache.cxf.transports.http.configuration.ConnectionType: org.apache.cxf.transports.http.configuration.ConnectionType valueOf(java.lang.String)>($r35);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setConnection(org.apache.cxf.transports.http.configuration.ConnectionType)>($r24);

        goto label17;

     label12:
        $r17 = "DecoupledEndpoint";

        $z12 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z12 == 0 goto label13;

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setDecoupledEndpoint(java.lang.String)>($r35);

        goto label17;

     label13:
        $r18 = "ProxyServer";

        $z13 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z13 == 0 goto label14;

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServer(java.lang.String)>($r35);

        goto label17;

     label14:
        $r19 = "ProxyServerPort";

        $z14 = virtualinvoke $r19.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z14 == 0 goto label15;

        $r23 = virtualinvoke $r35.<java.lang.String: java.lang.String trim()>();

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r23);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerPort(int)>($i1);

        goto label17;

     label15:
        $r20 = "ProxyServerType";

        $z15 = virtualinvoke $r20.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z15 == 0 goto label16;

        $r22 = staticinvoke <org.apache.cxf.transports.http.configuration.ProxyServerType: org.apache.cxf.transports.http.configuration.ProxyServerType fromValue(java.lang.String)>($r35);

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setProxyServerType(org.apache.cxf.transports.http.configuration.ProxyServerType)>($r22);

        goto label17;

     label16:
        $r21 = "NonProxyHosts";

        $z16 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z16 == 0 goto label17;

        virtualinvoke r37.<org.apache.cxf.transports.http.configuration.HTTPClientPolicy: void setNonProxyHosts(java.lang.String)>($r35);

     label17:
        goto label01;

     label18:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.lang.String SECURE_HTTP_PREFIX> = "https";

        <org.apache.cxf.transport.http.osgi.HTTPTransportActivator: java.lang.String FACTORY_PID> = "org.apache.cxf.http.conduits";

        return;
    }
}
