public class org.apache.batik.bridge.SVGFontElementBridge extends org.apache.batik.bridge.AbstractSVGBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFontElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFontElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFontElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFontElementBridge;

        return "font";
    }

    public org.apache.batik.bridge.SVGGVTFont createFont(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, float, org.apache.batik.gvt.font.GVTFontFace)
    {
        org.apache.batik.bridge.SVGFontElementBridge r29;
        boolean $z0;
        org.apache.batik.bridge.BridgeContext r25;
        float f0;
        org.apache.batik.gvt.font.GVTFontFace r24;
        java.lang.String[] r2, r3, r4, r5, r6;
        java.lang.StringBuffer $r12, $r14;
        org.w3c.dom.Node $r8, $r18, $r21, $r27;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.String $r9, $r10, $r11, $r13, $r15, $r31, $r32, $r33, $r34;
        org.apache.batik.bridge.SVGGVTFont $r23;
        org.w3c.dom.NodeList $r1, $r16, $r17, $r19;
        char $c2;
        org.w3c.dom.Element r0, r22, r26, r30, r35, r36;
        org.w3c.dom.Element[] r7, r20, $r28;

        r29 := @this: org.apache.batik.bridge.SVGFontElementBridge;

        r25 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r26 := @parameter2: org.w3c.dom.Element;

        f0 := @parameter3: float;

        r24 := @parameter4: org.apache.batik.gvt.font.GVTFontFace;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "glyph");

        $i0 = interfaceinvoke $r1.<org.w3c.dom.NodeList: int getLength()>();

        r2 = newarray (java.lang.String)[$i0];

        r3 = newarray (java.lang.String)[$i0];

        r4 = newarray (java.lang.String)[$i0];

        r5 = newarray (java.lang.String)[$i0];

        r6 = newarray (java.lang.String)[$i0];

        r7 = newarray (org.w3c.dom.Element)[$i0];

        i8 = 0;

        goto label3;

     label1:
        $r8 = interfaceinvoke $r1.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i8);

        r30 = (org.w3c.dom.Element) $r8;

        $r9 = interfaceinvoke r30.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "unicode");

        r2[i8] = $r9;

        $r10 = r2[i8];

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i1 <= 1 goto label2;

        $r11 = r2[i8];

        $c2 = virtualinvoke $r11.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.batik.gvt.text.ArabicTextHandler: boolean arabicChar(char)>($c2);

        if $z0 == 0 goto label2;

        $r12 = new java.lang.StringBuffer;

        $r13 = r2[i8];

        specialinvoke $r12.<java.lang.StringBuffer: void <init>(java.lang.String)>($r13);

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer reverse()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        r2[i8] = $r15;

     label2:
        $r31 = interfaceinvoke r30.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "glyph-name");

        r3[i8] = $r31;

        $r32 = interfaceinvoke r30.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "lang");

        r4[i8] = $r32;

        $r33 = interfaceinvoke r30.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "orientation");

        r5[i8] = $r33;

        $r34 = interfaceinvoke r30.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "arabic-form");

        r6[i8] = $r34;

        r7[i8] = r30;

        i8 = i8 + 1;

     label3:
        if i8 < $i0 goto label1;

        $r16 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "missing-glyph");

        r35 = null;

        $i3 = interfaceinvoke $r16.<org.w3c.dom.NodeList: int getLength()>();

        if $i3 <= 0 goto label4;

        $r27 = interfaceinvoke $r16.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(0);

        r35 = (org.w3c.dom.Element) $r27;

     label4:
        $r17 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "hkern");

        $i4 = interfaceinvoke $r17.<org.w3c.dom.NodeList: int getLength()>();

        $r28 = newarray (org.w3c.dom.Element)[$i4];

        i9 = 0;

        goto label6;

     label5:
        $r18 = interfaceinvoke $r17.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i9);

        r36 = (org.w3c.dom.Element) $r18;

        $r28[i9] = r36;

        i9 = i9 + 1;

     label6:
        $i5 = lengthof $r28;

        if i9 < $i5 goto label5;

        $r19 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NodeList getElementsByTagNameNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "vkern");

        $i6 = interfaceinvoke $r19.<org.w3c.dom.NodeList: int getLength()>();

        r20 = newarray (org.w3c.dom.Element)[$i6];

        i10 = 0;

        goto label8;

     label7:
        $r21 = interfaceinvoke $r19.<org.w3c.dom.NodeList: org.w3c.dom.Node item(int)>(i10);

        r22 = (org.w3c.dom.Element) $r21;

        r20[i10] = r22;

        i10 = i10 + 1;

     label8:
        $i7 = lengthof r20;

        if i10 < $i7 goto label7;

        $r23 = new org.apache.batik.bridge.SVGGVTFont;

        specialinvoke $r23.<org.apache.batik.bridge.SVGGVTFont: void <init>(float,org.apache.batik.gvt.font.GVTFontFace,java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],java.lang.String[],org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element[],org.w3c.dom.Element,org.w3c.dom.Element[],org.w3c.dom.Element[],org.w3c.dom.Element)>(f0, r24, r2, r3, r4, r5, r6, r25, r7, r35, $r28, r20, r26);

        return $r23;
    }
}
