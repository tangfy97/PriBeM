final class org.codehaus.jettison.mapped.Configuration$1 extends org.codehaus.jettison.mapped.Configuration$ConverterFactory
{
    final java.lang.Class val$tc;

    void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.codehaus.jettison.mapped.Configuration$1 r0;

        r0 := @this: org.codehaus.jettison.mapped.Configuration$1;

        r1 := @parameter0: java.lang.Class;

        r0.<org.codehaus.jettison.mapped.Configuration$1: java.lang.Class val$tc> = r1;

        specialinvoke r0.<org.codehaus.jettison.mapped.Configuration$ConverterFactory: void <init>(org.codehaus.jettison.mapped.Configuration$1)>(null);

        return;
    }

    public org.codehaus.jettison.mapped.TypeConverter newDefaultConverterInstance()
    {
        org.codehaus.jettison.mapped.Configuration$1 r0;
        org.codehaus.jettison.mapped.TypeConverter $r3;
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.Exception $r4;
        java.lang.ExceptionInInitializerError $r5;

        r0 := @this: org.codehaus.jettison.mapped.Configuration$1;

     label1:
        $r1 = r0.<org.codehaus.jettison.mapped.Configuration$1: java.lang.Class val$tc>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (org.codehaus.jettison.mapped.TypeConverter) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.lang.ExceptionInInitializerError;

        specialinvoke $r5.<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
