public class org.apache.tika.parser.chm.accessor.ChmItsfHeader extends java.lang.Object implements org.apache.tika.parser.chm.accessor.ChmAccessor
{
    private static final long serialVersionUID;
    private byte[] signature;
    private int version;
    private int header_len;
    private int unknown_000c;
    private long last_modified;
    private long lang_id;
    private byte[] dir_uuid;
    private byte[] stream_uuid;
    private long unknown_offset;
    private long unknown_len;
    private long dir_offset;
    private long dir_len;
    private long data_offset;
    private int dataRemained;
    private int currentPlace;

    public void <init>()
    {
        byte[] $r1, $r2, $r4;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        java.lang.String $r3;
        java.lang.AssertionError $r6;
        java.io.UnsupportedEncodingException $r5;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (byte)[16];

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] dir_uuid> = $r1;

        $r2 = newarray (byte)[16];

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] stream_uuid> = $r2;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int currentPlace> = 0;

     label1:
        $r3 = "ITSF";

        $r4 = virtualinvoke $r3.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] signature> = $r4;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>(java.lang.Object)>("UTF-8 not supported.");

        throw $r6;

     label4:
        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        byte[] $r4, $r29, $r34;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r8, $r9, $r10, $r12, $r13, $r14, $r16, $r17, $r18, $r20, $r21, $r22, $r24, $r25, $r26, $r28, $r30, $r31, $r33, $r35, $r36, $r38, $r39, $r40, $r42, $r43, $r44, $r46, $r47, $r48, $r50, $r51, $r52, $r54, $r55, $r56;
        long $l3, $l4, $l5, $l6, $l7, $l8, $l9;
        java.lang.AssertionError $r60;
        java.lang.String $r2, $r7, $r11, $r15, $r19, $r23, $r27, $r32, $r37, $r41, $r45, $r49, $r53, $r57, $r58;
        java.io.UnsupportedEncodingException $r59;
        int $i0, $i1, $i2;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r3;

        r3 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = new java.lang.String;

        $r4 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] getSignature()>();

        specialinvoke $r2.<java.lang.String: void <init>(byte[],java.lang.String)>($r4, "UTF-8");

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label2:
        goto label4;

     label3:
        $r59 := @caughtexception;

        $r60 = new java.lang.AssertionError;

        specialinvoke $r60.<java.lang.AssertionError: void <init>(java.lang.Object)>("UTF-8 not supported.");

        throw $r60;

     label4:
        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getVersion()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $i1 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getHeaderLen()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $i2 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getUnknown_000c()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $l3 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getLastModified()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $l4 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getLangId()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] getDir_uuid()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] getStream_uuid()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $l5 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getUnknownOffset()>();

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r41);

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $l6 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getUnknownLen()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r46 = new java.lang.StringBuilder;

        specialinvoke $r46.<java.lang.StringBuilder: void <init>()>();

        $l7 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $l8 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirLen()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $l9 = virtualinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDataOffset()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r58 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r58;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public byte[] getSignature()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        byte[] $r1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $r1 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] signature>;

        return $r1;
    }

    protected void setSignature(byte[])
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        byte[] r1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r1 := @parameter0: byte[];

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] signature> = r1;

        return;
    }

    public int getVersion()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int version>;

        return $i0;
    }

    protected void setVersion(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int version> = i0;

        return;
    }

    public int getHeaderLen()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int header_len>;

        return $i0;
    }

    protected void setHeaderLen(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int header_len> = i0;

        return;
    }

    public int getUnknown_000c()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int unknown_000c>;

        return $i0;
    }

    protected void setUnknown_000c(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int unknown_000c> = i0;

        return;
    }

    public long getLastModified()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long last_modified>;

        return $l0;
    }

    protected void setLastModified(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long last_modified> = l0;

        return;
    }

    public long getLangId()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long lang_id>;

        return $l0;
    }

    protected void setLangId(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long lang_id> = l0;

        return;
    }

    public byte[] getDir_uuid()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        byte[] $r1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $r1 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] dir_uuid>;

        return $r1;
    }

    protected void setDir_uuid(byte[])
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        byte[] r1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r1 := @parameter0: byte[];

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] dir_uuid> = r1;

        return;
    }

    public byte[] getStream_uuid()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        byte[] $r1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $r1 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] stream_uuid>;

        return $r1;
    }

    protected void setStream_uuid(byte[])
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        byte[] r1;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r1 := @parameter0: byte[];

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] stream_uuid> = r1;

        return;
    }

    public long getUnknownOffset()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unknown_offset>;

        return $l0;
    }

    protected void setUnknownOffset(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unknown_offset> = l0;

        return;
    }

    public long getUnknownLen()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unknown_len>;

        return $l0;
    }

    protected void setUnknownLen(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unknown_len> = l0;

        return;
    }

    public long getDirOffset()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long dir_offset>;

        return $l0;
    }

    protected void setDirOffset(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long dir_offset> = l0;

        return;
    }

    public long getDirLen()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long dir_len>;

        return $l0;
    }

    protected void setDirLen(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long dir_len> = l0;

        return;
    }

    public long getDataOffset()
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long $l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $l0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long data_offset>;

        return $l0;
    }

    protected void setDataOffset(long)
    {
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;
        long l0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        l0 := @parameter0: long;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long data_offset> = l0;

        return;
    }

    private void unmarshalCharArray(byte[], org.apache.tika.parser.chm.accessor.ChmItsfHeader, int) throws org.apache.tika.exception.TikaException
    {
        byte[] r0, $r2;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1, r3;
        int i0, $i1, $i2, $i3, $i4;

        r3 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0 := @parameter0: byte[];

        r1 := @parameter1: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        i0 := @parameter2: int;

        staticinvoke <org.apache.tika.parser.chm.assertion.ChmAssert: void assertChmAccessorParameters(byte[],org.apache.tika.parser.chm.accessor.ChmAccessor,int)>(r0, r1, i0);

        $r2 = r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] signature>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 0, $r2, 0, i0);

        $i1 = specialinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i2 = $i1 + i0;

        specialinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setCurrentPlace(int)>($i2);

        $i3 = specialinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        $i4 = $i3 - i0;

        specialinvoke r3.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataRemained(int)>($i4);

        return;
    }

    private byte[] unmarshalUuid(byte[], byte[], int)
    {
        byte[] r0, r2;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1;
        int $i0, i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0 := @parameter0: byte[];

        r2 := @parameter1: byte[];

        i1 := @parameter2: int;

        $i0 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, $i0, r2, 0, i1);

        $i2 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i3 = $i2 + i1;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setCurrentPlace(int)>($i3);

        $i4 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        $i5 = $i4 - i1;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataRemained(int)>($i5);

        return r2;
    }

    private long unmarshalUint64(byte[], long) throws org.apache.tika.exception.TikaException
    {
        byte[] r0, r3;
        long $l1, l9;
        byte $b6;
        org.apache.tika.exception.TikaException $r5;
        int $i0, $i2, $i3, $i4, $i5, $i7, $i8, i10, i11, $i13, $i15;
        java.math.BigInteger $r6;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1;

        r1 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r3 := @parameter0: byte[];

        l9 := @parameter1: long;

        r0 = newarray (byte)[8];

        $i0 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        if 8 <= $i0 goto label1;

        $r5 = new org.apache.tika.exception.TikaException;

        specialinvoke $r5.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("8 > this.getDataRemained()");

        throw $r5;

     label1:
        i10 = 8;

        i11 = 7;

     label2:
        if i10 <= 0 goto label3;

        $i4 = i11;

        $i13 = (int) -1;

        i11 = i11 + $i13;

        $i5 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $b6 = r3[$i5];

        r0[$i4] = $b6;

        $i7 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i8 = $i7 + 1;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setCurrentPlace(int)>($i8);

        $i15 = (int) -1;

        i10 = i10 + $i15;

        goto label2;

     label3:
        $r6 = new java.math.BigInteger;

        specialinvoke $r6.<java.math.BigInteger: void <init>(byte[])>(r0);

        $l1 = virtualinvoke $r6.<java.math.BigInteger: long longValue()>();

        $i2 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        $i3 = $i2 - 8;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataRemained(int)>($i3);

        return $l1;
    }

    private int unmarshalInt32(byte[], int) throws org.apache.tika.exception.TikaException
    {
        byte[] r0;
        byte $b2, $b5, $b10, $b15;
        org.apache.tika.exception.TikaException $r3;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, i21, i22, $i23, $i24, $i25, $i26;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1;

        r1 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0 := @parameter0: byte[];

        i21 := @parameter1: int;

        staticinvoke <org.apache.tika.parser.chm.assertion.ChmAssert: void assertByteArrayNotNull(byte[])>(r0);

        $i0 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        if 4 <= $i0 goto label1;

        $r3 = new org.apache.tika.exception.TikaException;

        specialinvoke $r3.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("4 > dataLenght");

        throw $r3;

     label1:
        $i1 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $b2 = r0[$i1];

        $i3 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i4 = $i3 + 1;

        $b5 = r0[$i4];

        $i23 = (int) $b5;

        $i6 = $i23 << 8;

        $i24 = (int) $b2;

        $i7 = $i24 | $i6;

        $i8 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i9 = $i8 + 2;

        $b10 = r0[$i9];

        $i25 = (int) $b10;

        $i11 = $i25 << 16;

        $i12 = $i7 | $i11;

        $i13 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i14 = $i13 + 3;

        $b15 = r0[$i14];

        $i26 = (int) $b15;

        $i16 = $i26 << 24;

        i22 = $i12 | $i16;

        $i17 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i18 = $i17 + 4;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setCurrentPlace(int)>($i18);

        $i19 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        $i20 = $i19 - 4;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataRemained(int)>($i20);

        return i22;
    }

    private long unmarshalUInt32(byte[], long) throws org.apache.tika.exception.TikaException
    {
        byte[] r0;
        long l22, l23;
        byte $b2, $b5, $b10, $b15;
        org.apache.tika.exception.TikaException $r3;
        int $i0, $i1, $i3, $i4, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i24, $i25, $i26, $i27;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r1;

        r1 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0 := @parameter0: byte[];

        l22 := @parameter1: long;

        staticinvoke <org.apache.tika.parser.chm.assertion.ChmAssert: void assertByteArrayNotNull(byte[])>(r0);

        $i0 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        if 4 <= $i0 goto label1;

        $r3 = new org.apache.tika.exception.TikaException;

        specialinvoke $r3.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("4 > dataLenght");

        throw $r3;

     label1:
        $i1 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $b2 = r0[$i1];

        $i3 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i4 = $i3 + 1;

        $b5 = r0[$i4];

        $i24 = (int) $b5;

        $i6 = $i24 << 8;

        $i25 = (int) $b2;

        $i7 = $i25 | $i6;

        $i8 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i9 = $i8 + 2;

        $b10 = r0[$i9];

        $i26 = (int) $b10;

        $i11 = $i26 << 16;

        $i12 = $i7 | $i11;

        $i13 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i14 = $i13 + 3;

        $b15 = r0[$i14];

        $i27 = (int) $b15;

        $i16 = $i27 << 24;

        $i17 = $i12 | $i16;

        l23 = (long) $i17;

        $i18 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        $i19 = $i18 - 4;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataRemained(int)>($i19);

        $i20 = specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getCurrentPlace()>();

        $i21 = $i20 + 4;

        specialinvoke r1.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setCurrentPlace(int)>($i21);

        return l23;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] r0;

        r0 := @parameter0: java.lang.String[];

        return;
    }

    private void setDataRemained(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int dataRemained> = i0;

        return;
    }

    private int getDataRemained()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int dataRemained>;

        return $i0;
    }

    private void setCurrentPlace(int)
    {
        int i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        i0 := @parameter0: int;

        r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int currentPlace> = i0;

        return;
    }

    private int getCurrentPlace()
    {
        int $i0;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $i0 = r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int currentPlace>;

        return $i0;
    }

    public void parse(byte[], org.apache.tika.parser.chm.accessor.ChmItsfHeader) throws org.apache.tika.exception.TikaException
    {
        byte[] r0, $r3, $r4, $r5, $r6, $r8;
        org.apache.tika.parser.chm.exception.ChmParsingException $r9;
        boolean $z0;
        java.io.UnsupportedEncodingException $r14;
        long $l9, $l10, $l11, $l12, $l13, $l14, $l15, $l16, $l17, $l18, $l19, $l20, $l25, $l26, $l27, $l29, $l30, $l31;
        java.lang.AssertionError $r15;
        org.apache.tika.exception.TikaException $r1, $r10, $r11, $r12, $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i21, $i22, $i23, $i24, $i28, $i32;
        java.lang.String $r7;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r2, r16;

        r16 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r0 := @parameter0: byte[];

        r2 := @parameter1: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        $i0 = lengthof r0;

        if $i0 < 88 goto label01;

        $i1 = lengthof r0;

        if $i1 <= 96 goto label02;

     label01:
        $r1 = new org.apache.tika.exception.TikaException;

        specialinvoke $r1.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("we only know how to deal with the 0x58 and 0x60 byte structures");

        throw $r1;

     label02:
        $i2 = lengthof r0;

        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataRemained(int)>($i2);

        specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void unmarshalCharArray(byte[],org.apache.tika.parser.chm.accessor.ChmItsfHeader,int)>(r0, r2, 4);

        $i3 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getVersion()>();

        $i4 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int unmarshalInt32(byte[],int)>(r0, $i3);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setVersion(int)>($i4);

        $i5 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getHeaderLen()>();

        $i6 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int unmarshalInt32(byte[],int)>(r0, $i5);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setHeaderLen(int)>($i6);

        $i7 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getUnknown_000c()>();

        $i8 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int unmarshalInt32(byte[],int)>(r0, $i7);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setUnknown_000c(int)>($i8);

        $l9 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getLastModified()>();

        $l10 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unmarshalUInt32(byte[],long)>(r0, $l9);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setLastModified(long)>($l10);

        $l11 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getLangId()>();

        $l12 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unmarshalUInt32(byte[],long)>(r0, $l11);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setLangId(long)>($l12);

        $r3 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] getDir_uuid()>();

        $r4 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] unmarshalUuid(byte[],byte[],int)>(r0, $r3, 16);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDir_uuid(byte[])>($r4);

        $r5 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] getStream_uuid()>();

        $r6 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] unmarshalUuid(byte[],byte[],int)>(r0, $r5, 16);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setStream_uuid(byte[])>($r6);

        $l13 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getUnknownOffset()>();

        $l14 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unmarshalUint64(byte[],long)>(r0, $l13);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setUnknownOffset(long)>($l14);

        $l15 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getUnknownLen()>();

        $l16 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unmarshalUint64(byte[],long)>(r0, $l15);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setUnknownLen(long)>($l16);

        $l17 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $l18 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unmarshalUint64(byte[],long)>(r0, $l17);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDirOffset(long)>($l18);

        $l19 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirLen()>();

        $l20 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long unmarshalUint64(byte[],long)>(r0, $l19);

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDirLen(long)>($l20);

     label03:
        $r7 = new java.lang.String;

        $r8 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: byte[] getSignature()>();

        specialinvoke $r7.<java.lang.String: void <init>(byte[],java.lang.String)>($r8, "UTF-8");

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("ITSF");

        if $z0 != 0 goto label04;

        $r13 = new org.apache.tika.exception.TikaException;

        specialinvoke $r13.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("seems not valid file");

        throw $r13;

     label04:
        goto label06;

     label05:
        $r14 := @caughtexception;

        $r15 = new java.lang.AssertionError;

        specialinvoke $r15.<java.lang.AssertionError: void <init>(java.lang.Object)>("UTF-8 not supported.");

        throw $r15;

     label06:
        $i21 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getVersion()>();

        if $i21 != 2 goto label07;

        $i32 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getHeaderLen()>();

        if $i32 >= 88 goto label09;

        $r12 = new org.apache.tika.exception.TikaException;

        specialinvoke $r12.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("something wrong with header");

        throw $r12;

     label07:
        $i22 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getVersion()>();

        if $i22 != 3 goto label08;

        $i23 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getHeaderLen()>();

        if $i23 >= 96 goto label09;

        $r11 = new org.apache.tika.exception.TikaException;

        specialinvoke $r11.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("unknown v3 header lenght");

        throw $r11;

     label08:
        $r9 = new org.apache.tika.parser.chm.exception.ChmParsingException;

        specialinvoke $r9.<org.apache.tika.parser.chm.exception.ChmParsingException: void <init>(java.lang.String)>("unsupported chm format");

        throw $r9;

     label09:
        $i24 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getVersion()>();

        if $i24 != 3 goto label11;

        $i28 = specialinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: int getDataRemained()>();

        if $i28 < 0 goto label10;

        $l29 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $l30 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirLen()>();

        $l31 = $l29 + $l30;

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataOffset(long)>($l31);

        goto label12;

     label10:
        $r10 = new org.apache.tika.exception.TikaException;

        specialinvoke $r10.<org.apache.tika.exception.TikaException: void <init>(java.lang.String)>("cannot set data offset, no data remained");

        throw $r10;

     label11:
        $l25 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirOffset()>();

        $l26 = virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: long getDirLen()>();

        $l27 = $l25 + $l26;

        virtualinvoke r2.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void setDataOffset(long)>($l27);

     label12:
        return;

        catch java.io.UnsupportedEncodingException from label03 to label04 with label05;
    }

    public volatile void parse(byte[], java.lang.Object) throws org.apache.tika.exception.TikaException
    {
        byte[] r1;
        org.apache.tika.parser.chm.accessor.ChmItsfHeader r0, $r3;
        java.lang.Object r2;

        r0 := @this: org.apache.tika.parser.chm.accessor.ChmItsfHeader;

        r1 := @parameter0: byte[];

        r2 := @parameter1: java.lang.Object;

        $r3 = (org.apache.tika.parser.chm.accessor.ChmItsfHeader) r2;

        virtualinvoke r0.<org.apache.tika.parser.chm.accessor.ChmItsfHeader: void parse(byte[],org.apache.tika.parser.chm.accessor.ChmItsfHeader)>(r1, $r3);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.tika.parser.chm.accessor.ChmItsfHeader: long serialVersionUID> = 2215291838533213826L;

        return;
    }
}
