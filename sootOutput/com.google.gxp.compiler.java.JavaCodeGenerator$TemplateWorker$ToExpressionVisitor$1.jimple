final class com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 extends java.lang.Object implements com.google.gxp.compiler.schema.ContentFamilyVisitor
{
    final com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1;

    void <init>(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor r1;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r1 := @parameter0: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor;

        r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String visitCss(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor $r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker $r3;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.String $r4;
        com.google.gxp.compiler.base.StringConstant r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r2 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1>;

        $r3 = $r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker this$0>;

        $r4 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String access$4700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.base.Expression)>($r3, r2);

        return $r4;
    }

    public java.lang.String visitJavaScript(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor $r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker $r3;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.String $r4;
        com.google.gxp.compiler.base.StringConstant r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r2 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1>;

        $r3 = $r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker this$0>;

        $r4 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String access$4700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.base.Expression)>($r3, r2);

        return $r4;
    }

    public java.lang.String visitMarkup(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor $r1;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker $r3;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.String $r4;
        com.google.gxp.compiler.base.StringConstant r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r2 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r1 = r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor this$1>;

        $r3 = $r1.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker this$0>;

        $r4 = staticinvoke <com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker: java.lang.String access$4700(com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker,com.google.gxp.compiler.base.Expression)>($r3, r2);

        return $r4;
    }

    public java.lang.String visitPlaintext(com.google.gxp.compiler.base.StringConstant)
    {
        com.google.gxp.com.google.common.base.CharEscaper $r0;
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r9;
        com.google.gxp.compiler.base.StringConstant r1;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;
        java.lang.String $r2, $r3, $r8;

        r9 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r1 := @parameter0: com.google.gxp.compiler.base.StringConstant;

        $r0 = staticinvoke <com.google.gxp.com.google.common.base.CharEscapers: com.google.gxp.com.google.common.base.CharEscaper javaStringEscaper()>();

        $r2 = virtualinvoke r1.<com.google.gxp.compiler.base.StringConstant: java.lang.String evaluate()>();

        $r3 = virtualinvoke $r0.<com.google.gxp.com.google.common.base.CharEscaper: java.lang.String escape(java.lang.String)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public volatile java.lang.Object visitPlaintext(java.lang.Object)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.Object r1;
        java.lang.String $r3;
        com.google.gxp.compiler.base.StringConstant $r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.StringConstant) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: java.lang.String visitPlaintext(com.google.gxp.compiler.base.StringConstant)>($r2);

        return $r3;
    }

    public volatile java.lang.Object visitMarkup(java.lang.Object)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.Object r1;
        java.lang.String $r3;
        com.google.gxp.compiler.base.StringConstant $r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.StringConstant) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: java.lang.String visitMarkup(com.google.gxp.compiler.base.StringConstant)>($r2);

        return $r3;
    }

    public volatile java.lang.Object visitJavaScript(java.lang.Object)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.Object r1;
        java.lang.String $r3;
        com.google.gxp.compiler.base.StringConstant $r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.StringConstant) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: java.lang.String visitJavaScript(com.google.gxp.compiler.base.StringConstant)>($r2);

        return $r3;
    }

    public volatile java.lang.Object visitCss(java.lang.Object)
    {
        com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1 r0;
        java.lang.Object r1;
        java.lang.String $r3;
        com.google.gxp.compiler.base.StringConstant $r2;

        r0 := @this: com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.google.gxp.compiler.base.StringConstant) r1;

        $r3 = virtualinvoke r0.<com.google.gxp.compiler.java.JavaCodeGenerator$TemplateWorker$ToExpressionVisitor$1: java.lang.String visitCss(com.google.gxp.compiler.base.StringConstant)>($r2);

        return $r3;
    }
}
