public class org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    final org.apache.cxf.interceptor.MessageSenderInterceptor this$0;

    public void <init>(org.apache.cxf.interceptor.MessageSenderInterceptor)
    {
        org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor r0;
        org.apache.cxf.interceptor.MessageSenderInterceptor r1;

        r0 := @this: org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor;

        r1 := @parameter0: org.apache.cxf.interceptor.MessageSenderInterceptor;

        r0.<org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor: org.apache.cxf.interceptor.MessageSenderInterceptor this$0> = r1;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>("prepare-send-ending");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        java.lang.Object[] $r8;
        org.apache.cxf.transport.Conduit $r3;
        org.apache.cxf.interceptor.MessageSenderInterceptor $r2;
        org.apache.cxf.message.Message r1;
        java.io.IOException $r4;
        org.apache.cxf.common.i18n.Message $r6;
        org.apache.cxf.interceptor.Fault $r5;
        java.util.ResourceBundle $r7;
        org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

     label1:
        $r2 = r0.<org.apache.cxf.interceptor.MessageSenderInterceptor$MessageSenderEndingInterceptor: org.apache.cxf.interceptor.MessageSenderInterceptor this$0>;

        $r3 = staticinvoke <org.apache.cxf.interceptor.MessageSenderInterceptor: org.apache.cxf.transport.Conduit access$000(org.apache.cxf.interceptor.MessageSenderInterceptor,org.apache.cxf.message.Message)>($r2, r1);

        interfaceinvoke $r3.<org.apache.cxf.transport.Conduit: void close(org.apache.cxf.message.Message)>(r1);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.apache.cxf.interceptor.Fault;

        $r6 = new org.apache.cxf.common.i18n.Message;

        $r7 = staticinvoke <org.apache.cxf.interceptor.MessageSenderInterceptor: java.util.ResourceBundle access$100()>();

        $r8 = newarray (java.lang.Object)[0];

        specialinvoke $r6.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("COULD_NOT_SEND", $r7, $r8);

        specialinvoke $r5.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r6, $r4);

        throw $r5;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
