public class org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5 extends org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt4
{
    final org.jdesktop.swingx.JXTreeTable this$0;

    public void <init>(org.jdesktop.swingx.JXTreeTable)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5 r0;
        org.jdesktop.swingx.JXTreeTable r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt4: void <init>(org.jdesktop.swingx.JXTreeTable)>(r1);

        return;
    }

    protected int getTreeHandleWidth()
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5 r0;
        javax.swing.plaf.basic.BasicTreeUI r7;
        org.jdesktop.swingx.JXTreeTable $r1, $r4;
        javax.swing.plaf.TreeUI $r3, $r6;
        int $i0, $i1, $i2, $i4;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r2, $r5;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5;

        $r1 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r2 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r1);

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: javax.swing.plaf.TreeUI getUI()>();

        $z0 = $r3 instanceof javax.swing.plaf.basic.BasicTreeUI;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r5 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r4);

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: javax.swing.plaf.TreeUI getUI()>();

        r7 = (javax.swing.plaf.basic.BasicTreeUI) $r6;

        $i0 = virtualinvoke r7.<javax.swing.plaf.basic.BasicTreeUI: int getLeftChildIndent()>();

        $i1 = virtualinvoke r7.<javax.swing.plaf.basic.BasicTreeUI: int getRightChildIndent()>();

        $i2 = $i0 + $i1;

        return $i2;

     label1:
        $i4 = (int) -1;

        return $i4;
    }

    protected java.awt.event.MouseEvent getEventForTreeRenderer(java.awt.event.MouseEvent)
    {
        java.awt.Point $r1;
        boolean $z0, $z1, $z2, $z3;
        org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5 r2;
        javax.swing.tree.TreePath $r7;
        java.awt.Rectangle $r14, $r17;
        org.jdesktop.swingx.treetable.TreeTableModel $r10, $r12;
        long $l18;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i19, $i20, $i21, $i22, $i23, $i24;
        java.awt.event.MouseEvent r0, $r23;
        org.jdesktop.swingx.JXTreeTable $r3, $r4, $r5, $r6, $r9, $r11, $r13, $r15, $r18, $r21, $r24;
        java.awt.ComponentOrientation $r20;
        java.lang.Object $r8;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r16, $r19, $r22, $r25;

        r2 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5;

        r0 := @parameter0: java.awt.event.MouseEvent;

        $r1 = virtualinvoke r0.<java.awt.event.MouseEvent: java.awt.Point getPoint()>();

        $r3 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $i0 = virtualinvoke $r3.<org.jdesktop.swingx.JXTreeTable: int columnAtPoint(java.awt.Point)>($r1);

        if $i0 < 0 goto label4;

        $r4 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $z0 = virtualinvoke $r4.<org.jdesktop.swingx.JXTreeTable: boolean isHierarchical(int)>($i0);

        if $z0 == 0 goto label4;

        $r5 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $i1 = virtualinvoke $r5.<org.jdesktop.swingx.JXTreeTable: int rowAtPoint(java.awt.Point)>($r1);

        if $i1 < 0 goto label4;

        $r6 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r7 = virtualinvoke $r6.<org.jdesktop.swingx.JXTreeTable: javax.swing.tree.TreePath getPathForRow(int)>($i1);

        $r8 = virtualinvoke $r7.<javax.swing.tree.TreePath: java.lang.Object getLastPathComponent()>();

        $r9 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r10 = virtualinvoke $r9.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        $z1 = interfaceinvoke $r10.<org.jdesktop.swingx.treetable.TreeTableModel: boolean isLeaf(java.lang.Object)>($r8);

        if $z1 != 0 goto label4;

        $r11 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r12 = virtualinvoke $r11.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        $i2 = interfaceinvoke $r12.<org.jdesktop.swingx.treetable.TreeTableModel: int getChildCount(java.lang.Object)>($r8);

        if $i2 > 0 goto label1;

        $r21 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r22 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r21);

        $z3 = virtualinvoke $r22.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: boolean hasBeenExpanded(javax.swing.tree.TreePath)>($r7);

        if $z3 != 0 goto label4;

     label1:
        $r13 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r14 = virtualinvoke $r13.<org.jdesktop.swingx.JXTreeTable: java.awt.Rectangle getCellRect(int,int,boolean)>($i1, $i0, 0);

        $i3 = virtualinvoke r0.<java.awt.event.MouseEvent: int getX()>();

        $i4 = $r14.<java.awt.Rectangle: int x>;

        $i16 = $i3 - $i4;

        $r15 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r16 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r15);

        $r17 = virtualinvoke $r16.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: java.awt.Rectangle getRowBounds(int)>($i1);

        $i5 = virtualinvoke r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: int getTreeHandleWidth()>();

        $r18 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r19 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r18);

        $r20 = virtualinvoke $r19.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: java.awt.ComponentOrientation getComponentOrientation()>();

        $z2 = virtualinvoke $r20.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z2 == 0 goto label2;

        $i13 = $r17.<java.awt.Rectangle: int x>;

        if $i16 >= $i13 goto label4;

        if $i5 < 0 goto label3;

        $i14 = $r17.<java.awt.Rectangle: int x>;

        $i15 = $i14 - $i5;

        if $i16 <= $i15 goto label4;

        goto label3;

     label2:
        $i7 = $r17.<java.awt.Rectangle: int x>;

        $i6 = $r17.<java.awt.Rectangle: int width>;

        $i8 = $i7 + $i6;

        if $i16 <= $i8 goto label4;

        if $i5 < 0 goto label3;

        $i10 = $r17.<java.awt.Rectangle: int x>;

        $i9 = $r17.<java.awt.Rectangle: int width>;

        $i11 = $i10 + $i9;

        $i12 = $i11 + $i5;

        if $i16 >= $i12 goto label4;

     label3:
        $r23 = new java.awt.event.MouseEvent;

        $r24 = r2.<org.jdesktop.swingx.JXTreeTable$TreeTableHackerExt5: org.jdesktop.swingx.JXTreeTable this$0>;

        $r25 = staticinvoke <org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer access$100(org.jdesktop.swingx.JXTreeTable)>($r24);

        $i17 = virtualinvoke r0.<java.awt.event.MouseEvent: int getID()>();

        $l18 = virtualinvoke r0.<java.awt.event.MouseEvent: long getWhen()>();

        $i19 = virtualinvoke r0.<java.awt.event.MouseEvent: int getModifiers()>();

        $i20 = virtualinvoke r0.<java.awt.event.MouseEvent: int getY()>();

        $i21 = virtualinvoke r0.<java.awt.event.MouseEvent: int getXOnScreen()>();

        $i22 = virtualinvoke r0.<java.awt.event.MouseEvent: int getYOnScreen()>();

        $i23 = virtualinvoke r0.<java.awt.event.MouseEvent: int getClickCount()>();

        $i24 = virtualinvoke r0.<java.awt.event.MouseEvent: int getButton()>();

        specialinvoke $r23.<java.awt.event.MouseEvent: void <init>(java.awt.Component,int,long,int,int,int,int,int,int,boolean,int)>($r25, $i17, $l18, $i19, $i16, $i20, $i21, $i22, $i23, 0, $i24);

        return $r23;

     label4:
        return null;
    }
}
