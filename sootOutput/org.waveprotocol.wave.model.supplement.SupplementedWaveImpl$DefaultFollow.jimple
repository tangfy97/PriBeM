public interface  org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow extends java.lang.Object
{
    public static final org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow WHEN_PARTICIPANT;
    public static final org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow ALWAYS;

    public abstract boolean isFollowed(org.waveprotocol.wave.model.supplement.SupplementWaveView);

    static void <clinit>()
    {
        org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow$2 $r1;
        org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow$1 $r0;

        $r0 = new org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow$1;

        specialinvoke $r0.<org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow$1: void <init>()>();

        <org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow: org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow WHEN_PARTICIPANT> = $r0;

        $r1 = new org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow$2;

        specialinvoke $r1.<org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow$2: void <init>()>();

        <org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow: org.waveprotocol.wave.model.supplement.SupplementedWaveImpl$DefaultFollow ALWAYS> = $r1;

        return;
    }
}
