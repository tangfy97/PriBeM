public class org.gagravarr.vorbis.VorbisInfo extends org.gagravarr.ogg.HighLevelOggStreamPacket implements org.gagravarr.vorbis.VorbisPacket
{
    private int version;
    private int channels;
    private long rate;
    private int bitrateUpper;
    private int bitrateNominal;
    private int bitrateLower;
    private int blocksizes;

    public void <init>()
    {
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        specialinvoke r0.<org.gagravarr.ogg.HighLevelOggStreamPacket: void <init>()>();

        r0.<org.gagravarr.vorbis.VorbisInfo: int version> = 0;

        return;
    }

    public void <init>(org.gagravarr.ogg.OggPacket)
    {
        byte[] $r2;
        long $l0, $l4, $l5, $l7, $l9;
        byte $b3, $b11, b13;
        org.gagravarr.ogg.OggPacket r1;
        int $i1, $i2, $i6, $i8, $i10, $i12, $i14, $i15;
        java.lang.String $r9;
        java.lang.IllegalArgumentException $r11, $r12;
        org.gagravarr.vorbis.VorbisInfo r0;
        java.lang.StringBuilder $r6, $r7, $r8, $r10;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        r1 := @parameter0: org.gagravarr.ogg.OggPacket;

        specialinvoke r0.<org.gagravarr.ogg.HighLevelOggStreamPacket: void <init>(org.gagravarr.ogg.OggPacket)>(r1);

        $r2 = virtualinvoke r0.<org.gagravarr.vorbis.VorbisInfo: byte[] getData()>();

        $l0 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>($r2, 7);

        $i1 = (int) $l0;

        r0.<org.gagravarr.vorbis.VorbisInfo: int version> = $i1;

        $i2 = r0.<org.gagravarr.vorbis.VorbisInfo: int version>;

        if $i2 == 0 goto label1;

        $r11 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported vorbis version ");

        $i14 = r0.<org.gagravarr.vorbis.VorbisInfo: int version>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" detected");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r11;

     label1:
        $b3 = $r2[11];

        $i15 = (int) $b3;

        r0.<org.gagravarr.vorbis.VorbisInfo: int channels> = $i15;

        $l4 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>($r2, 12);

        r0.<org.gagravarr.vorbis.VorbisInfo: long rate> = $l4;

        $l5 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>($r2, 16);

        $i6 = (int) $l5;

        r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateUpper> = $i6;

        $l7 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>($r2, 20);

        $i8 = (int) $l7;

        r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateNominal> = $i8;

        $l9 = staticinvoke <org.gagravarr.ogg.IOUtils: long getInt4(byte[],int)>($r2, 24);

        $i10 = (int) $l9;

        r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateLower> = $i10;

        $b11 = $r2[28];

        $i12 = staticinvoke <org.gagravarr.ogg.IOUtils: int toInt(byte)>($b11);

        r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes> = $i12;

        b13 = $r2[29];

        if b13 != 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Framing bit not set, invalid");

        throw $r12;

     label2:
        return;
    }

    public int getHeaderSize()
    {
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        return 7;
    }

    public void populateMetadataHeader(byte[], int)
    {
        int i0;
        byte[] r0;
        org.gagravarr.vorbis.VorbisInfo r1;

        r1 := @this: org.gagravarr.vorbis.VorbisInfo;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        staticinvoke <org.gagravarr.vorbis.VorbisPacketFactory: void populateMetadataHeader(byte[],int,int)>(r0, 1, i0);

        return;
    }

    public org.gagravarr.ogg.OggPacket write()
    {
        byte[] r0;
        long $l2, $l5, $l7, $l9, $l11;
        byte $b4, $b13;
        org.gagravarr.ogg.OggPacket $r2;
        int $i0, $i1, $i3, $i6, $i8, $i10, $i12;
        org.gagravarr.vorbis.VorbisInfo r1;

        r1 := @this: org.gagravarr.vorbis.VorbisInfo;

        r0 = newarray (byte)[30];

        $i0 = lengthof r0;

        virtualinvoke r1.<org.gagravarr.vorbis.VorbisInfo: void populateMetadataHeader(byte[],int)>(r0, $i0);

        $i1 = r1.<org.gagravarr.vorbis.VorbisInfo: int version>;

        $l2 = (long) $i1;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r0, 7, $l2);

        $i3 = r1.<org.gagravarr.vorbis.VorbisInfo: int channels>;

        $b4 = staticinvoke <org.gagravarr.ogg.IOUtils: byte fromInt(int)>($i3);

        r0[11] = $b4;

        $l5 = r1.<org.gagravarr.vorbis.VorbisInfo: long rate>;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r0, 12, $l5);

        $i6 = r1.<org.gagravarr.vorbis.VorbisInfo: int bitrateUpper>;

        $l7 = (long) $i6;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r0, 16, $l7);

        $i8 = r1.<org.gagravarr.vorbis.VorbisInfo: int bitrateNominal>;

        $l9 = (long) $i8;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r0, 20, $l9);

        $i10 = r1.<org.gagravarr.vorbis.VorbisInfo: int bitrateLower>;

        $l11 = (long) $i10;

        staticinvoke <org.gagravarr.ogg.IOUtils: void putInt4(byte[],int,long)>(r0, 24, $l11);

        $i12 = r1.<org.gagravarr.vorbis.VorbisInfo: int blocksizes>;

        $b13 = staticinvoke <org.gagravarr.ogg.IOUtils: byte fromInt(int)>($i12);

        r0[28] = $b13;

        r0[29] = 1;

        virtualinvoke r1.<org.gagravarr.vorbis.VorbisInfo: void setData(byte[])>(r0);

        $r2 = specialinvoke r1.<org.gagravarr.ogg.HighLevelOggStreamPacket: org.gagravarr.ogg.OggPacket write()>();

        return $r2;
    }

    public int getVersion()
    {
        int $i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int version>;

        return $i0;
    }

    public int getChannels()
    {
        int $i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int channels>;

        return $i0;
    }

    public void setChannels(int)
    {
        int i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.vorbis.VorbisInfo: int channels> = i0;

        return;
    }

    public long getRate()
    {
        org.gagravarr.vorbis.VorbisInfo r0;
        long $l0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $l0 = r0.<org.gagravarr.vorbis.VorbisInfo: long rate>;

        return $l0;
    }

    public void setRate(long)
    {
        org.gagravarr.vorbis.VorbisInfo r0;
        long l0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        l0 := @parameter0: long;

        r0.<org.gagravarr.vorbis.VorbisInfo: long rate> = l0;

        return;
    }

    public int getBitrateUpper()
    {
        int $i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateUpper>;

        return $i0;
    }

    public void setBitrateUpper(int)
    {
        int i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateUpper> = i0;

        return;
    }

    public int getBitrateNominal()
    {
        int $i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateNominal>;

        return $i0;
    }

    public void setBitrateNominal(int)
    {
        int i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateNominal> = i0;

        return;
    }

    public int getBitrateLower()
    {
        int $i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateLower>;

        return $i0;
    }

    public void setBitrateLower(int)
    {
        int i0;
        org.gagravarr.vorbis.VorbisInfo r0;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        i0 := @parameter0: int;

        r0.<org.gagravarr.vorbis.VorbisInfo: int bitrateLower> = i0;

        return;
    }

    public int getBlocksize0()
    {
        org.gagravarr.vorbis.VorbisInfo r0;
        int $i0, i1, $i2;
        double $d0, $d1;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes>;

        i1 = $i0 & 15;

        $d0 = (double) i1;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $i2 = (int) $d1;

        return $i2;
    }

    public void setBlocksize0(int)
    {
        org.gagravarr.vorbis.VorbisInfo r0;
        int i0, i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d3 = $d1 / $d2;

        i1 = (int) $d3;

        $i2 = r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes>;

        $i3 = $i2 & 240;

        $i4 = $i3 + i1;

        r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes> = $i4;

        return;
    }

    public int getBlocksize1()
    {
        org.gagravarr.vorbis.VorbisInfo r0;
        int $i0, $i1, i2, $i3;
        double $d0, $d1;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        $i0 = r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes>;

        $i1 = $i0 & 240;

        i2 = $i1 >> 4;

        $d0 = (double) i2;

        $d1 = staticinvoke <java.lang.Math: double pow(double,double)>(2.0, $d0);

        $i3 = (int) $d1;

        return $i3;
    }

    public void setBlocksize1(int)
    {
        org.gagravarr.vorbis.VorbisInfo r0;
        int i0, i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.gagravarr.vorbis.VorbisInfo;

        i0 := @parameter0: int;

        $d0 = (double) i0;

        $d1 = staticinvoke <java.lang.Math: double log(double)>($d0);

        $d2 = staticinvoke <java.lang.Math: double log(double)>(2.0);

        $d3 = $d1 / $d2;

        i1 = (int) $d3;

        $i2 = r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes>;

        $i4 = $i2 & 15;

        $i3 = i1 << 4;

        $i5 = $i4 + $i3;

        r0.<org.gagravarr.vorbis.VorbisInfo: int blocksizes> = $i5;

        return;
    }
}
