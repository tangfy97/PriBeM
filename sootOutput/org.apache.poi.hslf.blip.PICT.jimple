public final class org.apache.poi.hslf.blip.PICT extends org.apache.poi.hslf.blip.Metafile
{

    public void <init>()
    {
        org.apache.poi.hslf.blip.PICT r0;

        r0 := @this: org.apache.poi.hslf.blip.PICT;

        specialinvoke r0.<org.apache.poi.hslf.blip.Metafile: void <init>()>();

        return;
    }

    public byte[] getData()
    {
        byte[] $r1, $r3, r7, r8;
        java.io.ByteArrayOutputStream $r2;
        org.apache.poi.hslf.blip.PICT r0;
        java.io.IOException $r4, $r6;
        org.apache.poi.hslf.exceptions.HSLFException $r5;

        r0 := @this: org.apache.poi.hslf.blip.PICT;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.blip.PICT: byte[] getRawData()>();

     label1:
        r7 = newarray (byte)[512];

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r7);

     label2:
        r8 = specialinvoke r0.<org.apache.poi.hslf.blip.PICT: byte[] read(byte[],int)>($r1, 16);

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

        r8 = specialinvoke r0.<org.apache.poi.hslf.blip.PICT: byte[] read(byte[],int)>($r1, 32);

     label5:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>(r8);

        $r3 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label6:
        return $r3;

     label7:
        $r4 := @caughtexception;

        $r5 = new org.apache.poi.hslf.exceptions.HSLFException;

        specialinvoke $r5.<org.apache.poi.hslf.exceptions.HSLFException: void <init>(java.lang.Throwable)>($r4);

        throw $r5;

        catch java.io.IOException from label2 to label3 with label4;
        catch java.io.IOException from label1 to label6 with label7;
    }

    private byte[] read(byte[], int) throws java.io.IOException
    {
        byte[] r2, r5, $r6;
        java.io.ByteArrayOutputStream $r0;
        org.apache.poi.hslf.blip.PICT r7;
        java.util.zip.InflaterInputStream $r4;
        long $l3;
        java.io.ByteArrayInputStream $r1;
        org.apache.poi.hslf.blip.Metafile$Header $r3;
        int i0, $i1, $i2, $i4;

        r7 := @this: org.apache.poi.hslf.blip.PICT;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new java.io.ByteArrayInputStream;

        specialinvoke $r1.<java.io.ByteArrayInputStream: void <init>(byte[])>(r2);

        $r3 = new org.apache.poi.hslf.blip.Metafile$Header;

        specialinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: void <init>()>();

        virtualinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: void read(byte[],int)>(r2, i0);

        $i1 = virtualinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: int getSize()>();

        $i2 = i0 + $i1;

        $l3 = (long) $i2;

        virtualinvoke $r1.<java.io.ByteArrayInputStream: long skip(long)>($l3);

        $r4 = new java.util.zip.InflaterInputStream;

        specialinvoke $r4.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r1);

        r5 = newarray (byte)[4096];

     label1:
        $i4 = virtualinvoke $r4.<java.util.zip.InflaterInputStream: int read(byte[])>(r5);

        if $i4 < 0 goto label2;

        virtualinvoke $r0.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r5, 0, $i4);

        goto label1;

     label2:
        virtualinvoke $r4.<java.util.zip.InflaterInputStream: void close()>();

        $r6 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r6;
    }

    public void setData(byte[]) throws java.io.IOException
    {
        byte[] r1, $r2, $r8, $r10, $r11;
        java.awt.Rectangle $r4, $r6, $r7;
        java.io.ByteArrayOutputStream $r9;
        org.apache.poi.hslf.blip.PICT r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.apache.poi.hslf.blip.Metafile$Header $r3;
        java.awt.Dimension $r5;

        r0 := @this: org.apache.poi.hslf.blip.PICT;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = $i0 - 512;

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.blip.PICT: byte[] compress(byte[],int,int)>(r1, 512, $i1);

        $r3 = new org.apache.poi.hslf.blip.Metafile$Header;

        specialinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: void <init>()>();

        $i2 = lengthof r1;

        $i3 = $i2 - 512;

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: int wmfsize> = $i3;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, 200, 200);

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds> = $r4;

        $r5 = new java.awt.Dimension;

        $r6 = $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i4 = $r6.<java.awt.Rectangle: int width>;

        $i7 = $i4 * 12700;

        $r7 = $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i5 = $r7.<java.awt.Rectangle: int height>;

        $i6 = $i5 * 12700;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>($i7, $i6);

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Dimension size> = $r5;

        $i8 = lengthof $r2;

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: int zipsize> = $i8;

        $r8 = staticinvoke <org.apache.poi.hslf.blip.PICT: byte[] getChecksum(byte[])>(r1);

        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[])>($r8);

        $r10 = newarray (byte)[16];

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[])>($r10);

        virtualinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: void write(java.io.OutputStream)>($r9);

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

        $r11 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r0.<org.apache.poi.hslf.blip.PICT: void setRawData(byte[])>($r11);

        return;
    }

    public int getType()
    {
        org.apache.poi.hslf.blip.PICT r0;

        r0 := @this: org.apache.poi.hslf.blip.PICT;

        return 4;
    }

    public int getSignature()
    {
        org.apache.poi.hslf.blip.PICT r0;

        r0 := @this: org.apache.poi.hslf.blip.PICT;

        return 21552;
    }
}
