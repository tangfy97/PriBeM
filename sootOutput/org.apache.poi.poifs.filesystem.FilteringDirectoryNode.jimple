public class org.apache.poi.poifs.filesystem.FilteringDirectoryNode extends java.lang.Object implements org.apache.poi.poifs.filesystem.DirectoryEntry
{
    private java.util.Set excludes;
    private java.util.Map childExcludes;
    private org.apache.poi.poifs.filesystem.DirectoryEntry directory;

    public void <init>(org.apache.poi.poifs.filesystem.DirectoryEntry, java.util.Collection)
    {
        java.util.HashMap $r18;
        java.util.ArrayList $r19;
        java.util.HashSet $r17;
        java.util.Map $r10, $r11, $r15;
        int $i0, $i1, $i3;
        java.lang.String r7, $r8, $r9;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        org.apache.poi.poifs.filesystem.DirectoryEntry r1;
        java.util.Collection r4;
        java.util.Set $r16;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.util.List $r13;
        java.lang.Object $r6, $r12;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: org.apache.poi.poifs.filesystem.DirectoryEntry;

        r4 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory> = r1;

        $r17 = new java.util.HashSet;

        specialinvoke $r17.<java.util.HashSet: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes> = $r17;

        $r18 = new java.util.HashMap;

        specialinvoke $r18.<java.util.HashMap: void <init>()>();

        r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Map childExcludes> = $r18;

        $r5 = interfaceinvoke r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $i0 = virtualinvoke r7.<java.lang.String: int indexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r16 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes>;

        interfaceinvoke $r16.<java.util.Set: boolean add(java.lang.Object)>(r7);

        goto label4;

     label2:
        $r8 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r9 = virtualinvoke r7.<java.lang.String: java.lang.String substring(int)>($i1);

        $r10 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Map childExcludes>;

        $z1 = interfaceinvoke $r10.<java.util.Map: boolean containsKey(java.lang.Object)>($r8);

        if $z1 != 0 goto label3;

        $r15 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Map childExcludes>;

        $r19 = new java.util.ArrayList;

        specialinvoke $r19.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r19);

     label3:
        $r11 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Map childExcludes>;

        $r12 = interfaceinvoke $r11.<java.util.Map: java.lang.Object get(java.lang.Object)>($r8);

        $r13 = (java.util.List) $r12;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r9);

     label4:
        goto label1;

     label5:
        return;
    }

    public org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryEntry $r2, $r3;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r3 = interfaceinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DirectoryEntry createDirectory(java.lang.String)>(r1);

        return $r3;
    }

    public org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.DirectoryEntry $r3;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.lang.String r1;
        org.apache.poi.poifs.filesystem.DocumentEntry $r4;
        java.io.InputStream r2;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.InputStream;

        $r3 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r4 = interfaceinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,java.io.InputStream)>(r1, r2);

        return $r4;
    }

    public org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String, int, org.apache.poi.poifs.filesystem.POIFSWriterListener) throws java.io.IOException
    {
        org.apache.poi.poifs.filesystem.POIFSWriterListener r2;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r3;
        int i0;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.lang.String r1;
        org.apache.poi.poifs.filesystem.DocumentEntry $r4;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.poifs.filesystem.POIFSWriterListener;

        $r3 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r4 = interfaceinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DocumentEntry createDocument(java.lang.String,int,org.apache.poi.poifs.filesystem.POIFSWriterListener)>(r1, i0, r2);

        return $r4;
    }

    public java.util.Iterator getEntries()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r1;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode$FilteringIterator $r0;

        r1 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r0 = new org.apache.poi.poifs.filesystem.FilteringDirectoryNode$FilteringIterator;

        specialinvoke $r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode$FilteringIterator: void <init>(org.apache.poi.poifs.filesystem.FilteringDirectoryNode,org.apache.poi.poifs.filesystem.FilteringDirectoryNode$1)>(r1, null);

        return $r0;
    }

    public java.util.Iterator iterator()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.util.Iterator $r1;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Iterator getEntries()>();

        return $r1;
    }

    public int getEntryCount()
    {
        java.util.Iterator $r3;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r1, $r6;
        java.util.Set $r2;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        int i0, $i2;
        java.lang.Object $r4;
        java.lang.String r5;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        i0 = interfaceinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryEntry: int getEntryCount()>();

        $r2 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes>;

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.lang.String) $r4;

        $r6 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $z1 = interfaceinvoke $r6.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean hasEntry(java.lang.String)>(r5);

        if $z1 == 0 goto label2;

        $i2 = (int) -1;

        i0 = i0 + $i2;

     label2:
        goto label1;

     label3:
        return i0;
    }

    public java.util.Set getEntryNames()
    {
        java.util.Iterator $r4;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r2;
        java.util.Set $r3, $r7;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r1;
        java.util.HashSet $r0;
        java.lang.Object $r5;
        java.lang.String r6;
        boolean $z0, $z1;

        r1 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = r1.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r3 = interfaceinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.util.Set getEntryNames()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = r1.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes>;

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z1 != 0 goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $i0 = virtualinvoke r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: int getEntryCount()>();

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean hasEntry(java.lang.String)
    {
        org.apache.poi.poifs.filesystem.DirectoryEntry $r3;
        java.util.Set $r2;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.lang.String r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $z1 = interfaceinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean hasEntry(java.lang.String)>(r1);

        return $z1;
    }

    public org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String) throws java.io.FileNotFoundException
    {
        org.apache.poi.poifs.filesystem.Entry $r4, $r5;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r3;
        java.util.Set $r2;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.io.FileNotFoundException $r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        $r6 = new java.io.FileNotFoundException;

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>(r1);

        throw $r6;

     label1:
        $r3 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r4 = interfaceinvoke $r3.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.Entry getEntry(java.lang.String)>(r1);

        $r5 = specialinvoke r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.Entry wrapEntry(org.apache.poi.poifs.filesystem.Entry)>($r4);

        return $r5;
    }

    private org.apache.poi.poifs.filesystem.Entry wrapEntry(org.apache.poi.poifs.filesystem.Entry)
    {
        org.apache.poi.poifs.filesystem.Entry r0;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r6;
        java.util.Collection $r8;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r2, $r4;
        java.util.Map $r3, $r5;
        java.lang.Object $r7;
        java.lang.String $r1;
        boolean $z0, $z1;

        r2 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.Entry;

        $r1 = interfaceinvoke r0.<org.apache.poi.poifs.filesystem.Entry: java.lang.String getName()>();

        $r3 = r2.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Map childExcludes>;

        $z0 = interfaceinvoke $r3.<java.util.Map: boolean containsKey(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $z1 = r0 instanceof org.apache.poi.poifs.filesystem.DirectoryEntry;

        if $z1 == 0 goto label1;

        $r4 = new org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r6 = (org.apache.poi.poifs.filesystem.DirectoryEntry) r0;

        $r5 = r2.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Map childExcludes>;

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        $r8 = (java.util.Collection) $r7;

        specialinvoke $r4.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: void <init>(org.apache.poi.poifs.filesystem.DirectoryEntry,java.util.Collection)>($r6, $r8);

        return $r4;

     label1:
        return r0;
    }

    public org.apache.poi.hpsf.ClassID getStorageClsid()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        org.apache.poi.hpsf.ClassID $r2;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r1;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.hpsf.ClassID getStorageClsid()>();

        return $r2;
    }

    public void setStorageClsid(org.apache.poi.hpsf.ClassID)
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        org.apache.poi.hpsf.ClassID r1;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r2;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: org.apache.poi.hpsf.ClassID;

        $r2 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        interfaceinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: void setStorageClsid(org.apache.poi.hpsf.ClassID)>(r1);

        return;
    }

    public boolean delete()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $z0 = interfaceinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean delete()>();

        return $z0;
    }

    public boolean renameTo(java.lang.String)
    {
        org.apache.poi.poifs.filesystem.DirectoryEntry $r2;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $z0 = interfaceinvoke $r2.<org.apache.poi.poifs.filesystem.DirectoryEntry: boolean renameTo(java.lang.String)>(r1);

        return $z0;
    }

    public java.lang.String getName()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        java.lang.String $r2;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r1;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryEntry: java.lang.String getName()>();

        return $r2;
    }

    public org.apache.poi.poifs.filesystem.DirectoryEntry getParent()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r1, $r2;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        $r2 = interfaceinvoke $r1.<org.apache.poi.poifs.filesystem.DirectoryEntry: org.apache.poi.poifs.filesystem.DirectoryEntry getParent()>();

        return $r2;
    }

    public boolean isDirectoryEntry()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        return 1;
    }

    public boolean isDocumentEntry()
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;

        r0 := @this: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        return 0;
    }

    static org.apache.poi.poifs.filesystem.DirectoryEntry access$100(org.apache.poi.poifs.filesystem.FilteringDirectoryNode)
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        org.apache.poi.poifs.filesystem.DirectoryEntry $r1;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.DirectoryEntry directory>;

        return $r1;
    }

    static java.util.Set access$200(org.apache.poi.poifs.filesystem.FilteringDirectoryNode)
    {
        java.util.Set $r1;
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        $r1 = r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: java.util.Set excludes>;

        return $r1;
    }

    static org.apache.poi.poifs.filesystem.Entry access$300(org.apache.poi.poifs.filesystem.FilteringDirectoryNode, org.apache.poi.poifs.filesystem.Entry)
    {
        org.apache.poi.poifs.filesystem.FilteringDirectoryNode r0;
        org.apache.poi.poifs.filesystem.Entry r1, $r2;

        r0 := @parameter0: org.apache.poi.poifs.filesystem.FilteringDirectoryNode;

        r1 := @parameter1: org.apache.poi.poifs.filesystem.Entry;

        $r2 = specialinvoke r0.<org.apache.poi.poifs.filesystem.FilteringDirectoryNode: org.apache.poi.poifs.filesystem.Entry wrapEntry(org.apache.poi.poifs.filesystem.Entry)>(r1);

        return $r2;
    }
}
