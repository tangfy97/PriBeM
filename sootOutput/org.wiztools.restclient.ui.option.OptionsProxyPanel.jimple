public class org.wiztools.restclient.ui.option.OptionsProxyPanel extends javax.swing.JPanel implements org.wiztools.restclient.ui.option.IOptionsPanel
{
    private static final java.util.logging.Logger LOG;
    private javax.swing.JCheckBox jcb_enable;
    private javax.swing.JCheckBox jcb_auth_enable;
    private final int jtf_size;
    private javax.swing.JTextField jtf_host;
    private javax.swing.JTextField jtf_port;
    private javax.swing.JTextField jtf_username;
    private javax.swing.JPasswordField jpf_password;

    public void <init>()
    {
        javax.swing.border.Border $r7;
        java.awt.BorderLayout $r8, $r19;
        javax.swing.JPasswordField $r6, $r32;
        javax.swing.JCheckBox $r1, $r2, $r11, $r13, $r14, $r16, $r17;
        javax.swing.JPanel $r9, $r18, $r20, $r26;
        javax.swing.JTextField $r3, $r4, $r5, $r28, $r29, $r30, $r31;
        java.awt.GridLayout $r21, $r27;
        java.awt.FlowLayout $r10;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;
        org.wiztools.restclient.ui.option.OptionsProxyPanel$1 $r12;
        org.wiztools.restclient.ui.option.OptionsProxyPanel$2 $r15;
        javax.swing.JLabel $r22, $r23, $r24, $r25;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: int jtf_size> = 25;

        $r1 = new javax.swing.JCheckBox;

        specialinvoke $r1.<javax.swing.JCheckBox: void <init>(java.lang.String)>("Enable");

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable> = $r1;

        $r2 = new javax.swing.JCheckBox;

        specialinvoke $r2.<javax.swing.JCheckBox: void <init>(java.lang.String)>("Authentication");

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable> = $r2;

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: int jtf_size> = 25;

        $r3 = new javax.swing.JTextField;

        specialinvoke $r3.<javax.swing.JTextField: void <init>(int)>(25);

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_host> = $r3;

        $r4 = new javax.swing.JTextField;

        specialinvoke $r4.<javax.swing.JTextField: void <init>(int)>(25);

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port> = $r4;

        $r5 = new javax.swing.JTextField;

        specialinvoke $r5.<javax.swing.JTextField: void <init>(int)>(25);

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_username> = $r5;

        $r6 = new javax.swing.JPasswordField;

        specialinvoke $r6.<javax.swing.JPasswordField: void <init>(int)>(25);

        r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password> = $r6;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void toggleEnable(boolean)>(0);

        $r7 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(5, 5, 5, 5);

        virtualinvoke r0.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r7);

        $r8 = new java.awt.BorderLayout;

        specialinvoke $r8.<java.awt.BorderLayout: void <init>(int,int)>(5, 5);

        virtualinvoke r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r8);

        $r9 = new javax.swing.JPanel;

        specialinvoke $r9.<javax.swing.JPanel: void <init>()>();

        $r10 = new java.awt.FlowLayout;

        specialinvoke $r10.<java.awt.FlowLayout: void <init>(int)>(0);

        virtualinvoke $r9.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r10);

        $r11 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        virtualinvoke $r11.<javax.swing.JCheckBox: void setMnemonic(char)>(101);

        $r13 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        $r12 = new org.wiztools.restclient.ui.option.OptionsProxyPanel$1;

        specialinvoke $r12.<org.wiztools.restclient.ui.option.OptionsProxyPanel$1: void <init>(org.wiztools.restclient.ui.option.OptionsProxyPanel)>(r0);

        virtualinvoke $r13.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r12);

        $r14 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        virtualinvoke $r9.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r14);

        $r16 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        $r15 = new org.wiztools.restclient.ui.option.OptionsProxyPanel$2;

        specialinvoke $r15.<org.wiztools.restclient.ui.option.OptionsProxyPanel$2: void <init>(org.wiztools.restclient.ui.option.OptionsProxyPanel)>(r0);

        virtualinvoke $r16.<javax.swing.JCheckBox: void addActionListener(java.awt.event.ActionListener)>($r15);

        $r17 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        virtualinvoke $r9.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r17);

        virtualinvoke r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r9, "North");

        $r18 = new javax.swing.JPanel;

        specialinvoke $r18.<javax.swing.JPanel: void <init>()>();

        $r19 = new java.awt.BorderLayout;

        specialinvoke $r19.<java.awt.BorderLayout: void <init>(int,int)>(5, 5);

        virtualinvoke $r18.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r19);

        $r20 = new javax.swing.JPanel;

        specialinvoke $r20.<javax.swing.JPanel: void <init>()>();

        $r21 = new java.awt.GridLayout;

        specialinvoke $r21.<java.awt.GridLayout: void <init>(int,int,int,int)>(4, 1, 5, 5);

        virtualinvoke $r20.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r21);

        $r22 = new javax.swing.JLabel;

        specialinvoke $r22.<javax.swing.JLabel: void <init>(java.lang.String)>("Host: ");

        virtualinvoke $r20.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r22);

        $r23 = new javax.swing.JLabel;

        specialinvoke $r23.<javax.swing.JLabel: void <init>(java.lang.String)>("Port: ");

        virtualinvoke $r20.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r23);

        $r24 = new javax.swing.JLabel;

        specialinvoke $r24.<javax.swing.JLabel: void <init>(java.lang.String)>("Username: ");

        virtualinvoke $r20.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r24);

        $r25 = new javax.swing.JLabel;

        specialinvoke $r25.<javax.swing.JLabel: void <init>(java.lang.String)>("Password: ");

        virtualinvoke $r20.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r25);

        virtualinvoke $r18.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r20, "West");

        $r26 = new javax.swing.JPanel;

        specialinvoke $r26.<javax.swing.JPanel: void <init>()>();

        $r27 = new java.awt.GridLayout;

        specialinvoke $r27.<java.awt.GridLayout: void <init>(int,int,int,int)>(4, 1, 5, 5);

        virtualinvoke $r26.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r27);

        $r28 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_host>;

        virtualinvoke $r26.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r28);

        $r29 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port>;

        virtualinvoke $r29.<javax.swing.JTextField: void setText(java.lang.String)>("8080");

        $r30 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port>;

        virtualinvoke $r26.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r30);

        $r31 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_username>;

        virtualinvoke $r26.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r31);

        $r32 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password>;

        virtualinvoke $r26.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r32);

        virtualinvoke $r18.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r26, "Center");

        virtualinvoke r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r18, "Center");

        return;
    }

    private void toggleEnable(boolean)
    {
        javax.swing.JTextField $r1, $r2;
        javax.swing.JCheckBox $r3, $r4;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;
        boolean z0, $z1;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_host>;

        virtualinvoke $r1.<javax.swing.JTextField: void setEnabled(boolean)>(z0);

        $r2 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port>;

        virtualinvoke $r2.<javax.swing.JTextField: void setEnabled(boolean)>(z0);

        $r3 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        virtualinvoke $r3.<javax.swing.JCheckBox: void setEnabled(boolean)>(z0);

        if z0 != 0 goto label1;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void toggleAuthEnable(boolean)>(0);

        goto label2;

     label1:
        if z0 == 0 goto label2;

        $r4 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        $z1 = virtualinvoke $r4.<javax.swing.JCheckBox: boolean isSelected()>();

        if $z1 == 0 goto label2;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void toggleAuthEnable(boolean)>(1);

     label2:
        return;
    }

    private void toggleAuthEnable(boolean)
    {
        javax.swing.JTextField $r1;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;
        javax.swing.JPasswordField $r2;
        boolean z0;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_username>;

        virtualinvoke $r1.<javax.swing.JTextField: void setEnabled(boolean)>(z0);

        $r2 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password>;

        virtualinvoke $r2.<javax.swing.JPasswordField: void setEnabled(boolean)>(z0);

        return;
    }

    public java.util.List validateInput()
    {
        javax.swing.JTextField $r3, $r5, $r12;
        java.util.ArrayList $r0;
        int $i0, $i1;
        java.lang.String $r4, $r6, $r9, $r13;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.lang.NumberFormatException $r10;
        java.lang.IllegalArgumentException $r7, $r8;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r1;
        javax.swing.JPasswordField $r14;
        javax.swing.JCheckBox $r2, $r11;
        char[] $r15;

        r1 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        $z0 = virtualinvoke $r2.<javax.swing.JCheckBox: boolean isSelected()>();

        if $z0 == 0 goto label10;

        $r3 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_host>;

        $r4 = virtualinvoke $r3.<javax.swing.JTextField: java.lang.String getText()>();

     label01:
        $r5 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port>;

        $r6 = virtualinvoke $r5.<javax.swing.JTextField: java.lang.String getText()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        if 0 >= $i0 goto label02;

        if $i0 < 65536 goto label03;

     label02:
        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Proxy Port not in valid range.");

        throw $r7;

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("Proxy Port is not integer.");

        goto label06;

     label05:
        $r8 := @caughtexception;

        $r9 = virtualinvoke $r8.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r9);

     label06:
        $r11 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        $z2 = virtualinvoke $r11.<javax.swing.JCheckBox: boolean isSelected()>();

        $r12 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_username>;

        $r13 = virtualinvoke $r12.<javax.swing.JTextField: java.lang.String getText()>();

        $r14 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password>;

        $r15 = virtualinvoke $r14.<javax.swing.JPasswordField: char[] getPassword()>();

        $z3 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>($r4);

        if $z3 == 0 goto label07;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("Proxy Host is empty.");

     label07:
        if $z2 == 0 goto label10;

        $z1 = staticinvoke <org.wiztools.commons.StringUtil: boolean isEmpty(java.lang.String)>($r13);

        if $z1 == 0 goto label08;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("Proxy Username is empty.");

     label08:
        if $r15 == null goto label09;

        $i1 = lengthof $r15;

        if $i1 != 0 goto label10;

     label09:
        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>("Proxy Password is empty.");

     label10:
        $z4 = interfaceinvoke $r0.<java.util.List: boolean isEmpty()>();

        if $z4 == 0 goto label11;

        return null;

     label11:
        return $r0;

        catch java.lang.NumberFormatException from label01 to label03 with label04;
        catch java.lang.IllegalArgumentException from label01 to label03 with label05;
    }

    public boolean saveOptions()
    {
        javax.swing.JTextField $r2, $r4, $r8;
        int $i0;
        java.lang.String $r3, $r5, $r9;
        boolean $z0, $z1;
        java.lang.NumberFormatException $r14;
        java.lang.IllegalArgumentException $r6, $r13;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;
        javax.swing.JPasswordField $r10;
        org.wiztools.restclient.ProxyConfig $r12;
        javax.swing.JCheckBox $r1, $r7;
        char[] $r11;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        $z0 = virtualinvoke $r1.<javax.swing.JCheckBox: boolean isSelected()>();

        $r2 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_host>;

        $r3 = virtualinvoke $r2.<javax.swing.JTextField: java.lang.String getText()>();

     label1:
        $r4 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port>;

        $r5 = virtualinvoke $r4.<javax.swing.JTextField: java.lang.String getText()>();

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        if 0 >= $i0 goto label2;

        if $i0 < 65536 goto label3;

     label2:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Port not in valid range.");

        throw $r6;

     label3:
        goto label6;

     label4:
        $r14 := @caughtexception;

        return 0;

     label5:
        $r13 := @caughtexception;

        return 0;

     label6:
        $r7 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        $z1 = virtualinvoke $r7.<javax.swing.JCheckBox: boolean isSelected()>();

        $r8 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_username>;

        $r9 = virtualinvoke $r8.<javax.swing.JTextField: java.lang.String getText()>();

        $r10 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password>;

        $r11 = virtualinvoke $r10.<javax.swing.JPasswordField: char[] getPassword()>();

        $r12 = staticinvoke <org.wiztools.restclient.ProxyConfig: org.wiztools.restclient.ProxyConfig getInstance()>();

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void acquire()>();

        if $z0 == 0 goto label7;

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setEnabled(boolean)>(1);

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setHost(java.lang.String)>($r3);

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setPort(int)>($i0);

        if $z1 == 0 goto label8;

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setAuthEnabled(boolean)>(1);

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setUsername(java.lang.String)>($r9);

        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setPassword(char[])>($r11);

        goto label8;

     label7:
        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void setEnabled(boolean)>(0);

     label8:
        virtualinvoke $r12.<org.wiztools.restclient.ProxyConfig: void release()>();

        return 1;

        catch java.lang.NumberFormatException from label1 to label3 with label4;
        catch java.lang.IllegalArgumentException from label1 to label3 with label5;
    }

    private void setUIFromCache()
    {
        javax.swing.JTextField $r3, $r6, $r11;
        int $i0;
        java.lang.String $r4, $r9, $r12, $r14;
        boolean $z0, $z1, $z2;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r1;
        javax.swing.JPasswordField $r15, $r17;
        org.wiztools.restclient.ProxyConfig $r0;
        javax.swing.JCheckBox $r2, $r10;
        char[] $r13, $r16;
        java.lang.StringBuilder $r5, $r7, $r8;

        r1 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r0 = staticinvoke <org.wiztools.restclient.ProxyConfig: org.wiztools.restclient.ProxyConfig getInstance()>();

        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void acquire()>();

        $r2 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        $z0 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: boolean isEnabled()>();

        virtualinvoke $r2.<javax.swing.JCheckBox: void setSelected(boolean)>($z0);

        $r3 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_host>;

        $r4 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: java.lang.String getHost()>();

        virtualinvoke $r3.<javax.swing.JTextField: void setText(java.lang.String)>($r4);

        $r6 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_port>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("");

        $i0 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: int getPort()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r6.<javax.swing.JTextField: void setText(java.lang.String)>($r9);

        $r10 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        $z1 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: boolean isAuthEnabled()>();

        virtualinvoke $r10.<javax.swing.JCheckBox: void setSelected(boolean)>($z1);

        $r11 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JTextField jtf_username>;

        $r12 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: java.lang.String getUsername()>();

        virtualinvoke $r11.<javax.swing.JTextField: void setText(java.lang.String)>($r12);

        $r13 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: char[] getPassword()>();

        if $r13 != null goto label1;

        $r17 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password>;

        virtualinvoke $r17.<javax.swing.JPasswordField: void setText(java.lang.String)>("");

        goto label2;

     label1:
        $r15 = r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JPasswordField jpf_password>;

        $r14 = new java.lang.String;

        $r16 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: char[] getPassword()>();

        specialinvoke $r14.<java.lang.String: void <init>(char[])>($r16);

        virtualinvoke $r15.<javax.swing.JPasswordField: void setText(java.lang.String)>($r14);

     label2:
        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void release()>();

        $z2 = virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: boolean isEnabled()>();

        specialinvoke r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void toggleEnable(boolean)>($z2);

        return;
    }

    public boolean revertOptions()
    {
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void setUIFromCache()>();

        return 1;
    }

    public void initOptions()
    {
        org.wiztools.restclient.ProxyConfig $r0;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r1;

        r1 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r0 = staticinvoke <org.wiztools.restclient.ProxyConfig: org.wiztools.restclient.ProxyConfig getInstance()>();

        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void acquire()>();

        specialinvoke r1.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void setUIFromCache()>();

        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void release()>();

        return;
    }

    public void shutdownOptions()
    {
        org.wiztools.restclient.ProxyConfig $r0;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r1;

        r1 := @this: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r0 = staticinvoke <org.wiztools.restclient.ProxyConfig: org.wiztools.restclient.ProxyConfig getInstance()>();

        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void acquire()>();

        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void write()>();

        virtualinvoke $r0.<org.wiztools.restclient.ProxyConfig: void release()>();

        return;
    }

    static javax.swing.JCheckBox access$000(org.wiztools.restclient.ui.option.OptionsProxyPanel)
    {
        javax.swing.JCheckBox $r1;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_enable>;

        return $r1;
    }

    static void access$100(org.wiztools.restclient.ui.option.OptionsProxyPanel, boolean)
    {
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;
        boolean z0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void toggleEnable(boolean)>(z0);

        return;
    }

    static javax.swing.JCheckBox access$200(org.wiztools.restclient.ui.option.OptionsProxyPanel)
    {
        javax.swing.JCheckBox $r1;
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: javax.swing.JCheckBox jcb_auth_enable>;

        return $r1;
    }

    static void access$300(org.wiztools.restclient.ui.option.OptionsProxyPanel, boolean)
    {
        org.wiztools.restclient.ui.option.OptionsProxyPanel r0;
        boolean z0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsProxyPanel;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.wiztools.restclient.ui.option.OptionsProxyPanel: void toggleAuthEnable(boolean)>(z0);

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        $r0 = class "Lorg/wiztools/restclient/ui/option/OptionsProxyPanel;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.wiztools.restclient.ui.option.OptionsProxyPanel: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
