public abstract class org.apache.batik.dom.svg.AbstractSVGPointList extends org.apache.batik.dom.svg.AbstractSVGList implements org.w3c.dom.svg.SVGPointList
{
    public static final java.lang.String SVG_POINT_LIST_SEPARATOR;

    public void <init>()
    {
        org.apache.batik.dom.svg.AbstractSVGPointList r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        specialinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: void <init>()>();

        return;
    }

    protected java.lang.String getItemSeparator()
    {
        org.apache.batik.dom.svg.AbstractSVGPointList r0;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        return " ";
    }

    protected abstract org.w3c.dom.svg.SVGException createSVGException(short, java.lang.String, java.lang.Object[]);

    public org.w3c.dom.svg.SVGPoint initialize(org.w3c.dom.svg.SVGPoint) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGItem $r2;
        org.apache.batik.dom.svg.AbstractSVGPointList r0;
        org.w3c.dom.svg.SVGPoint r1, $r3;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r1 := @parameter0: org.w3c.dom.svg.SVGPoint;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem initializeImpl(java.lang.Object)>(r1);

        $r3 = (org.w3c.dom.svg.SVGPoint) $r2;

        return $r3;
    }

    public org.w3c.dom.svg.SVGPoint getItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGItem $r1;
        int i0;
        org.apache.batik.dom.svg.AbstractSVGPointList r0;
        org.w3c.dom.svg.SVGPoint $r2;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem getItemImpl(int)>(i0);

        $r2 = (org.w3c.dom.svg.SVGPoint) $r1;

        return $r2;
    }

    public org.w3c.dom.svg.SVGPoint insertItemBefore(org.w3c.dom.svg.SVGPoint, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGItem $r2;
        int i0;
        org.apache.batik.dom.svg.AbstractSVGPointList r0;
        org.w3c.dom.svg.SVGPoint r1, $r3;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r1 := @parameter0: org.w3c.dom.svg.SVGPoint;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem insertItemBeforeImpl(java.lang.Object,int)>(r1, i0);

        $r3 = (org.w3c.dom.svg.SVGPoint) $r2;

        return $r3;
    }

    public org.w3c.dom.svg.SVGPoint replaceItem(org.w3c.dom.svg.SVGPoint, int) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGItem $r2;
        int i0;
        org.apache.batik.dom.svg.AbstractSVGPointList r0;
        org.w3c.dom.svg.SVGPoint r1, $r3;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r1 := @parameter0: org.w3c.dom.svg.SVGPoint;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem replaceItemImpl(java.lang.Object,int)>(r1, i0);

        $r3 = (org.w3c.dom.svg.SVGPoint) $r2;

        return $r3;
    }

    public org.w3c.dom.svg.SVGPoint removeItem(int) throws org.w3c.dom.DOMException
    {
        org.apache.batik.dom.svg.SVGItem $r1;
        int i0;
        org.apache.batik.dom.svg.AbstractSVGPointList r0;
        org.w3c.dom.svg.SVGPoint $r2;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem removeItemImpl(int)>(i0);

        $r2 = (org.w3c.dom.svg.SVGPoint) $r1;

        return $r2;
    }

    public org.w3c.dom.svg.SVGPoint appendItem(org.w3c.dom.svg.SVGPoint) throws org.w3c.dom.DOMException, org.w3c.dom.svg.SVGException
    {
        org.apache.batik.dom.svg.SVGItem $r2;
        org.apache.batik.dom.svg.AbstractSVGPointList r0;
        org.w3c.dom.svg.SVGPoint r1, $r3;

        r0 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r1 := @parameter0: org.w3c.dom.svg.SVGPoint;

        $r2 = virtualinvoke r0.<org.apache.batik.dom.svg.AbstractSVGList: org.apache.batik.dom.svg.SVGItem appendItemImpl(java.lang.Object)>(r1);

        $r3 = (org.w3c.dom.svg.SVGPoint) $r2;

        return $r3;
    }

    protected org.apache.batik.dom.svg.SVGItem createSVGItem(java.lang.Object)
    {
        float $f0, $f1;
        java.lang.Object r0;
        org.apache.batik.dom.svg.AbstractSVGPointList r3;
        org.w3c.dom.svg.SVGPoint r1;
        org.apache.batik.dom.svg.AbstractSVGPointList$SVGPointItem $r2;

        r3 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.w3c.dom.svg.SVGPoint) r0;

        $r2 = new org.apache.batik.dom.svg.AbstractSVGPointList$SVGPointItem;

        $f0 = interfaceinvoke r1.<org.w3c.dom.svg.SVGPoint: float getX()>();

        $f1 = interfaceinvoke r1.<org.w3c.dom.svg.SVGPoint: float getY()>();

        specialinvoke $r2.<org.apache.batik.dom.svg.AbstractSVGPointList$SVGPointItem: void <init>(org.apache.batik.dom.svg.AbstractSVGPointList,float,float)>(r3, $f0, $f1);

        return $r2;
    }

    protected void doParse(java.lang.String, org.apache.batik.dom.svg.ListHandler) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.PointsParser $r0;
        org.apache.batik.dom.svg.ListHandler r3;
        org.apache.batik.dom.svg.AbstractSVGPointList$PointsListBuilder $r1;
        org.apache.batik.dom.svg.AbstractSVGPointList r2;
        java.lang.String r4;

        r2 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r4 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.batik.dom.svg.ListHandler;

        $r0 = new org.apache.batik.parser.PointsParser;

        specialinvoke $r0.<org.apache.batik.parser.PointsParser: void <init>()>();

        $r1 = new org.apache.batik.dom.svg.AbstractSVGPointList$PointsListBuilder;

        specialinvoke $r1.<org.apache.batik.dom.svg.AbstractSVGPointList$PointsListBuilder: void <init>(org.apache.batik.dom.svg.AbstractSVGPointList,org.apache.batik.dom.svg.ListHandler)>(r2, r3);

        virtualinvoke $r0.<org.apache.batik.parser.PointsParser: void setPointsHandler(org.apache.batik.parser.PointsHandler)>($r1);

        virtualinvoke $r0.<org.apache.batik.parser.AbstractParser: void parse(java.lang.String)>(r4);

        return;
    }

    protected void checkItemType(java.lang.Object) throws org.w3c.dom.svg.SVGException
    {
        java.lang.Object r0;
        org.apache.batik.dom.svg.AbstractSVGPointList r1;
        boolean $z0;

        r1 := @this: org.apache.batik.dom.svg.AbstractSVGPointList;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.w3c.dom.svg.SVGPoint;

        if $z0 != 0 goto label1;

        virtualinvoke r1.<org.apache.batik.dom.svg.AbstractSVGPointList: org.w3c.dom.svg.SVGException createSVGException(short,java.lang.String,java.lang.Object[])>(0, "expected.point", null);

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.svg.AbstractSVGPointList: java.lang.String SVG_POINT_LIST_SEPARATOR> = " ";

        return;
    }
}
