public class org.apache.http.impl.auth.NTLMEngineImpl$CipherGen extends java.lang.Object
{
    protected final java.lang.String target;
    protected final java.lang.String user;
    protected final java.lang.String password;
    protected final byte[] challenge;
    protected final byte[] targetInformation;
    protected byte[] clientChallenge;
    protected byte[] secondaryKey;
    protected byte[] timestamp;
    protected byte[] lmHash;
    protected byte[] lmResponse;
    protected byte[] ntlmHash;
    protected byte[] ntlmResponse;
    protected byte[] ntlmv2Hash;
    protected byte[] lmv2Response;
    protected byte[] ntlmv2Blob;
    protected byte[] ntlmv2Response;
    protected byte[] ntlm2SessionResponse;
    protected byte[] lm2SessionResponse;
    protected byte[] lmUserSessionKey;
    protected byte[] ntlmUserSessionKey;
    protected byte[] ntlmv2UserSessionKey;
    protected byte[] ntlm2SessionResponseUserSessionKey;
    protected byte[] lanManagerSessionKey;

    public void <init>(java.lang.String, java.lang.String, java.lang.String, byte[], byte[], byte[], byte[], byte[])
    {
        byte[] r4, r5, r6, r7, r8;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: byte[];

        r5 := @parameter4: byte[];

        r6 := @parameter5: byte[];

        r7 := @parameter6: byte[];

        r8 := @parameter7: byte[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmHash> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmResponse> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmHash> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmResponse> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Hash> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmv2Response> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Blob> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Response> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponse> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmUserSessionKey> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmUserSessionKey> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2UserSessionKey> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponseUserSessionKey> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lanManagerSessionKey> = null;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String target> = r1;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String user> = r2;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String password> = r3;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge> = r4;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] targetInformation> = r5;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] clientChallenge> = r6;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] secondaryKey> = r7;

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] timestamp> = r8;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, byte[], byte[])
    {
        byte[] r4, r5;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;
        java.lang.String r1, r2, r3;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: byte[];

        r5 := @parameter4: byte[];

        specialinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: void <init>(java.lang.String,java.lang.String,java.lang.String,byte[],byte[],byte[],byte[],byte[])>(r1, r2, r3, r4, r5, null, null, null);

        return;
    }

    public byte[] getClientChallenge() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] clientChallenge>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$000()>();

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] clientChallenge> = $r3;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] clientChallenge>;

        return $r2;
    }

    public byte[] getSecondaryKey() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] secondaryKey>;

        if $r1 != null goto label1;

        $r3 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$100()>();

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] secondaryKey> = $r3;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] secondaryKey>;

        return $r2;
    }

    public byte[] getLMHash() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r4;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;
        java.lang.String $r3;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmHash>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String password>;

        $r4 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$200(java.lang.String)>($r3);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmHash> = $r4;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmHash>;

        return $r2;
    }

    public byte[] getLMResponse() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmResponse>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLMHash()>();

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r5 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$300(byte[],byte[])>($r3, $r4);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmResponse> = $r5;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmResponse>;

        return $r2;
    }

    public byte[] getNTLMHash() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r4;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;
        java.lang.String $r3;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmHash>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String password>;

        $r4 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$400(java.lang.String)>($r3);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmHash> = $r4;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmHash>;

        return $r2;
    }

    public byte[] getNTLMResponse() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmResponse>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMHash()>();

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r5 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$300(byte[],byte[])>($r3, $r4);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmResponse> = $r5;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmResponse>;

        return $r2;
    }

    public byte[] getNTLMv2Hash() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r6;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;
        java.lang.String $r3, $r4, $r5;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Hash>;

        if $r1 != null goto label1;

        $r5 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String target>;

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String user>;

        $r3 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: java.lang.String password>;

        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$500(java.lang.String,java.lang.String,java.lang.String)>($r5, $r4, $r3);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Hash> = $r6;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Hash>;

        return $r2;
    }

    public byte[] getTimestamp()
    {
        byte[] $r1, $r2, $r3, $r4;
        long $l0, l3, l4;
        byte $b2;
        int $i1, i5;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] timestamp>;

        if $r1 != null goto label2;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l3 = $l0 + 11644473600000L;

        l4 = l3 * 10000L;

        $r3 = newarray (byte)[8];

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] timestamp> = $r3;

        i5 = 0;

     label1:
        if i5 >= 8 goto label2;

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] timestamp>;

        $i1 = (int) l4;

        $b2 = (byte) $i1;

        $r4[i5] = $b2;

        l4 = l4 >>> 8;

        i5 = i5 + 1;

        goto label1;

     label2:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] timestamp>;

        return $r2;
    }

    public byte[] getNTLMv2Blob() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Blob>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getClientChallenge()>();

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] targetInformation>;

        $r5 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getTimestamp()>();

        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$600(byte[],byte[],byte[])>($r3, $r4, $r5);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Blob> = $r6;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Blob>;

        return $r2;
    }

    public byte[] getNTLMv2Response() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Response>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMv2Hash()>();

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r5 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMv2Blob()>();

        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$700(byte[],byte[],byte[])>($r3, $r4, $r5);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Response> = $r6;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2Response>;

        return $r2;
    }

    public byte[] getLMv2Response() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmv2Response>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMv2Hash()>();

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r5 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getClientChallenge()>();

        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] access$700(byte[],byte[],byte[])>($r3, $r4, $r5);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmv2Response> = $r6;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmv2Response>;

        return $r2;
    }

    public byte[] getNTLM2SessionResponse() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponse>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMHash()>();

        $r4 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r5 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getClientChallenge()>();

        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] ntlm2SessionResponse(byte[],byte[],byte[])>($r3, $r4, $r5);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponse> = $r6;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponse>;

        return $r2;
    }

    public byte[] getLM2SessionResponse() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        int $i0, $i1, $i2;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getClientChallenge()>();

        $r4 = newarray (byte)[24];

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse> = $r4;

        $r5 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse>;

        $i0 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r5, 0, $i0);

        $r7 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse>;

        $i2 = lengthof $r3;

        $r6 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse>;

        $i1 = lengthof $r6;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r7, $i2, $i1, 0);

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lm2SessionResponse>;

        return $r2;
    }

    public byte[] getLMUserSessionKey() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmUserSessionKey>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLMHash()>();

        $r4 = newarray (byte)[16];

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmUserSessionKey> = $r4;

        $r5 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmUserSessionKey>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r5, 0, 8);

        $r6 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmUserSessionKey>;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>($r6, 8, 16, 0);

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lmUserSessionKey>;

        return $r2;
    }

    public byte[] getNTLMUserSessionKey() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r5;
        org.apache.http.impl.auth.NTLMEngineImpl$MD4 $r4;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmUserSessionKey>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMHash()>();

        $r4 = new org.apache.http.impl.auth.NTLMEngineImpl$MD4;

        specialinvoke $r4.<org.apache.http.impl.auth.NTLMEngineImpl$MD4: void <init>()>();

        virtualinvoke $r4.<org.apache.http.impl.auth.NTLMEngineImpl$MD4: void update(byte[])>($r3);

        $r5 = virtualinvoke $r4.<org.apache.http.impl.auth.NTLMEngineImpl$MD4: byte[] getOutput()>();

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmUserSessionKey> = $r5;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmUserSessionKey>;

        return $r2;
    }

    public byte[] getNTLMv2UserSessionKey() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, r6, $r7, $r8, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2UserSessionKey>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMv2Hash()>();

        $r4 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMv2Blob()>();

        $i1 = lengthof $r4;

        $r5 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $i0 = lengthof $r5;

        $i2 = $i1 + $i0;

        r6 = newarray (byte)[$i2];

        $r8 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r7 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $i3 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r6, 0, $i3);

        $r9 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $i5 = lengthof $r9;

        $i4 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r6, $i5, $i4);

        $r10 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] hmacMD5(byte[],byte[])>(r6, $r3);

        $r11 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] hmacMD5(byte[],byte[])>($r10, $r3);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2UserSessionKey> = $r11;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlmv2UserSessionKey>;

        return $r2;
    }

    public byte[] getNTLM2SessionResponseUserSessionKey() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, $r5, r6, $r7, $r8, $r9, $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponseUserSessionKey>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getNTLMUserSessionKey()>();

        $r4 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLM2SessionResponse()>();

        $r5 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $i1 = lengthof $r5;

        $i0 = lengthof $r4;

        $i2 = $i1 + $i0;

        r6 = newarray (byte)[$i2];

        $r8 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $r7 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $i3 = lengthof $r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, r6, 0, $i3);

        $r9 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] challenge>;

        $i5 = lengthof $r9;

        $i4 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r6, $i5, $i4);

        $r10 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: byte[] hmacMD5(byte[],byte[])>(r6, $r3);

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponseUserSessionKey> = $r10;

     label1:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] ntlm2SessionResponseUserSessionKey>;

        return $r2;
    }

    public byte[] getLanManagerSessionKey() throws org.apache.http.impl.auth.NTLMEngineException
    {
        byte[] $r1, $r2, $r3, $r4, r7, $r9, $r11, $r12, $r13, $r14, r18;
        org.apache.http.impl.auth.NTLMEngineException $r16;
        javax.crypto.Cipher $r8, $r10;
        int $i0, $i1, $i2, $i3, $i4;
        org.apache.http.impl.auth.NTLMEngineImpl$CipherGen r0;
        java.lang.String $r17;
        java.lang.Exception $r15;
        java.security.Key $r5, $r6;

        r0 := @this: org.apache.http.impl.auth.NTLMEngineImpl$CipherGen;

        $r1 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lanManagerSessionKey>;

        if $r1 != null goto label4;

        $r3 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLMHash()>();

        $r4 = virtualinvoke r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] getLMResponse()>();

     label1:
        r18 = newarray (byte)[14];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r18, 0, 8);

        $i0 = lengthof r18;

        staticinvoke <java.util.Arrays: void fill(byte[],int,int,byte)>(r18, 8, $i0, -67);

        $r5 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key access$800(byte[],int)>(r18, 0);

        $r6 = staticinvoke <org.apache.http.impl.auth.NTLMEngineImpl: java.security.Key access$800(byte[],int)>(r18, 7);

        r7 = newarray (byte)[8];

        $i1 = lengthof r7;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r7, 0, $i1);

        $r8 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/ECB/NoPadding");

        virtualinvoke $r8.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r5);

        $r9 = virtualinvoke $r8.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7);

        $r10 = staticinvoke <javax.crypto.Cipher: javax.crypto.Cipher getInstance(java.lang.String)>("DES/ECB/NoPadding");

        virtualinvoke $r10.<javax.crypto.Cipher: void init(int,java.security.Key)>(1, $r6);

        $r11 = virtualinvoke $r10.<javax.crypto.Cipher: byte[] doFinal(byte[])>(r7);

        $r12 = newarray (byte)[16];

        r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lanManagerSessionKey> = $r12;

        $r13 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lanManagerSessionKey>;

        $i2 = lengthof $r9;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r13, 0, $i2);

        $r14 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lanManagerSessionKey>;

        $i4 = lengthof $r9;

        $i3 = lengthof $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r14, $i4, $i3);

     label2:
        goto label4;

     label3:
        $r15 := @caughtexception;

        $r16 = new org.apache.http.impl.auth.NTLMEngineException;

        $r17 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r16.<org.apache.http.impl.auth.NTLMEngineException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r15);

        throw $r16;

     label4:
        $r2 = r0.<org.apache.http.impl.auth.NTLMEngineImpl$CipherGen: byte[] lanManagerSessionKey>;

        return $r2;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
