final class minalloy.minalloyviz.MinMagicUtil extends java.lang.Object
{

    private void <init>()
    {
        minalloy.minalloyviz.MinMagicUtil r0;

        r0 := @this: minalloy.minalloyviz.MinMagicUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void trimLabelBeforeLastSlash(minalloy.minalloyviz.MinVizState, minalloy.minalloyviz.MinAlloyElement)
    {
        minalloy.minalloyviz.MinVizState r0;
        minalloy.minalloyviz.MinVizState$MString $r2, $r3;
        java.lang.String $r4, $r5;
        minalloy.minalloyviz.MinAlloyElement r1;

        r0 := @parameter0: minalloy.minalloyviz.MinVizState;

        r1 := @parameter1: minalloy.minalloyviz.MinAlloyElement;

        $r3 = r0.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinVizState$MString label>;

        $r2 = r0.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinVizState$MString label>;

        $r4 = virtualinvoke $r2.<minalloy.minalloyviz.MinVizState$MString: java.lang.String get(minalloy.minalloyviz.MinAlloyElement)>(r1);

        $r5 = staticinvoke <minalloy.minalloyviz.MinMagicUtil: java.lang.String trimBeforeLastSlash(java.lang.String)>($r4);

        virtualinvoke $r3.<minalloy.minalloyviz.MinVizState$MString: void put(minalloy.minalloyviz.MinAlloyElement,java.lang.String)>(r1, $r5);

        return;
    }

    static java.lang.String trimBeforeLastSlash(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        if $i0 < 0 goto label1;

        $i1 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        return $r1;

     label1:
        return r0;
    }

    static boolean isActuallyVisible(minalloy.minalloyviz.MinVizState, minalloy.minalloyviz.MinAlloyType)
    {
        java.lang.Boolean r4, r8, $r11;
        boolean $z0, $z1, $z2;
        minalloy.minalloyviz.MinAlloyType r0, r12;
        minalloy.minalloyviz.MinAlloyModel $r5;
        minalloy.minalloyviz.MinVizState$MMap $r2, $r6, $r9;
        minalloy.minalloyviz.MinVizState r1;
        java.lang.Object $r3, $r7, $r10;

        r1 := @parameter0: minalloy.minalloyviz.MinVizState;

        r0 := @parameter1: minalloy.minalloyviz.MinAlloyType;

        $z0 = r0.<minalloy.minalloyviz.MinAlloyType: boolean isAbstract>;

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r2 = r1.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinVizState$MMap nodeVisible>;

        $r3 = virtualinvoke $r2.<minalloy.minalloyviz.MinVizState$MMap: java.lang.Object get(minalloy.minalloyviz.MinAlloyElement)>(r0);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label2;

        $z2 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z2;

     label2:
        $r5 = virtualinvoke r1.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinAlloyModel getCurrentModel()>();

        r12 = virtualinvoke $r5.<minalloy.minalloyviz.MinAlloyModel: minalloy.minalloyviz.MinAlloyType getSuperType(minalloy.minalloyviz.MinAlloyType)>(r0);

        goto label5;

     label3:
        $r6 = r1.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinVizState$MMap nodeVisible>;

        $r7 = virtualinvoke $r6.<minalloy.minalloyviz.MinVizState$MMap: java.lang.Object get(minalloy.minalloyviz.MinAlloyElement)>(r12);

        r8 = (java.lang.Boolean) $r7;

        if r8 == null goto label4;

        goto label6;

     label4:
        r12 = virtualinvoke $r5.<minalloy.minalloyviz.MinAlloyModel: minalloy.minalloyviz.MinAlloyType getSuperType(minalloy.minalloyviz.MinAlloyType)>(r12);

     label5:
        if r12 != null goto label3;

     label6:
        if r12 != null goto label7;

        return 1;

     label7:
        $r9 = r1.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinVizState$MMap nodeVisible>;

        $r10 = virtualinvoke $r9.<minalloy.minalloyviz.MinVizState$MMap: java.lang.Object get(minalloy.minalloyviz.MinAlloyElement)>(r12);

        $r11 = (java.lang.Boolean) $r10;

        $z1 = virtualinvoke $r11.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    static boolean isActuallyVisible(minalloy.minalloyviz.MinVizState, minalloy.minalloyviz.MinAlloySet)
    {
        minalloy.minalloyviz.MinAlloySet r1;
        minalloy.minalloyviz.MinAlloyType $r5;
        minalloy.minalloyviz.MinVizState$MMap $r2;
        minalloy.minalloyviz.MinVizState r0;
        java.lang.Boolean r4;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @parameter0: minalloy.minalloyviz.MinVizState;

        r1 := @parameter1: minalloy.minalloyviz.MinAlloySet;

        $r2 = r0.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinVizState$MMap nodeVisible>;

        $r3 = virtualinvoke $r2.<minalloy.minalloyviz.MinVizState$MMap: java.lang.Object get(minalloy.minalloyviz.MinAlloyElement)>(r1);

        r4 = (java.lang.Boolean) $r3;

        if r4 == null goto label1;

        $z1 = virtualinvoke r4.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $r5 = virtualinvoke r1.<minalloy.minalloyviz.MinAlloySet: minalloy.minalloyviz.MinAlloyType getType()>();

        $z0 = staticinvoke <minalloy.minalloyviz.MinMagicUtil: boolean isActuallyVisible(minalloy.minalloyviz.MinVizState,minalloy.minalloyviz.MinAlloyType)>(r0, $r5);

        return $z0;
    }

    static java.util.Set visibleUserTypes(minalloy.minalloyviz.MinVizState)
    {
        java.util.Iterator $r4;
        java.util.Set $r3, $r7;
        minalloy.minalloyviz.MinAlloyType r6;
        minalloy.minalloyviz.MinAlloyModel $r2;
        minalloy.minalloyviz.MinVizState r1;
        java.lang.Object $r5;
        java.util.LinkedHashSet $r0;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: minalloy.minalloyviz.MinVizState;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r2 = virtualinvoke r1.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinAlloyModel getCurrentModel()>();

        $r3 = virtualinvoke $r2.<minalloy.minalloyviz.MinAlloyModel: java.util.Set getTypes()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (minalloy.minalloyviz.MinAlloyType) $r5;

        $z0 = r6.<minalloy.minalloyviz.MinAlloyType: boolean isBuiltin>;

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <minalloy.minalloyviz.MinMagicUtil: boolean isActuallyVisible(minalloy.minalloyviz.MinVizState,minalloy.minalloyviz.MinAlloyType)>(r1, r6);

        if $z1 == 0 goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label2:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r7;
    }

    static java.util.Set topLevelTypes(minalloy.minalloyviz.MinVizState)
    {
        java.util.Iterator $r4;
        java.util.Set $r3, $r7;
        minalloy.minalloyviz.MinAlloyType r6;
        minalloy.minalloyviz.MinAlloyModel $r2;
        minalloy.minalloyviz.MinVizState r1;
        java.lang.Object $r5;
        java.util.LinkedHashSet $r0;
        boolean $z0, $z1;

        r1 := @parameter0: minalloy.minalloyviz.MinVizState;

        $r0 = new java.util.LinkedHashSet;

        specialinvoke $r0.<java.util.LinkedHashSet: void <init>()>();

        $r2 = virtualinvoke r1.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinAlloyModel getOriginalModel()>();

        $r3 = virtualinvoke $r2.<minalloy.minalloyviz.MinAlloyModel: java.util.Set getTypes()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (minalloy.minalloyviz.MinAlloyType) $r5;

        $z0 = virtualinvoke r1.<minalloy.minalloyviz.MinVizState: boolean isTopLevel(minalloy.minalloyviz.MinAlloyType)>(r6);

        if $z0 == 0 goto label2;

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>(r6);

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r7 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r0);

        return $r7;
    }

    static java.util.Set partiallyVisibleUserTopLevelTypes(minalloy.minalloyviz.MinVizState)
    {
        java.util.Iterator $r4;
        java.util.Set $r2, $r8;
        minalloy.minalloyviz.MinAlloyType r6, $r7;
        minalloy.minalloyviz.MinAlloyModel $r1;
        minalloy.minalloyviz.MinVizState r0;
        java.lang.Object $r5;
        java.util.LinkedHashSet $r3;
        boolean $z0, $z1;

        r0 := @parameter0: minalloy.minalloyviz.MinVizState;

        $r1 = virtualinvoke r0.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinAlloyModel getOriginalModel()>();

        $r2 = staticinvoke <minalloy.minalloyviz.MinMagicUtil: java.util.Set visibleUserTypes(minalloy.minalloyviz.MinVizState)>(r0);

        $r3 = new java.util.LinkedHashSet;

        specialinvoke $r3.<java.util.LinkedHashSet: void <init>()>();

        $r4 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (minalloy.minalloyviz.MinAlloyType) $r5;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke $r1.<minalloy.minalloyviz.MinAlloyModel: minalloy.minalloyviz.MinAlloyType getTopmostSuperType(minalloy.minalloyviz.MinAlloyType)>(r6);

        interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r8 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        return $r8;
    }

    static java.util.Set visibleSubTypes(minalloy.minalloyviz.MinVizState, minalloy.minalloyviz.MinAlloyType)
    {
        edu.mit.csail.sdg.alloy4.ConstList $r3;
        java.util.Iterator $r6;
        java.util.Set $r4, $r9;
        minalloy.minalloyviz.MinAlloyType r2, r8;
        minalloy.minalloyviz.MinAlloyModel $r1;
        minalloy.minalloyviz.MinVizState r0;
        java.lang.Object $r7;
        java.util.LinkedHashSet $r5;
        boolean $z0, $z1;

        r0 := @parameter0: minalloy.minalloyviz.MinVizState;

        r2 := @parameter1: minalloy.minalloyviz.MinAlloyType;

        $r1 = virtualinvoke r0.<minalloy.minalloyviz.MinVizState: minalloy.minalloyviz.MinAlloyModel getCurrentModel()>();

        $r3 = virtualinvoke $r1.<minalloy.minalloyviz.MinAlloyModel: edu.mit.csail.sdg.alloy4.ConstList getSubTypes(minalloy.minalloyviz.MinAlloyType)>(r2);

        $r4 = staticinvoke <minalloy.minalloyviz.MinMagicUtil: java.util.Set visibleUserTypes(minalloy.minalloyviz.MinVizState)>(r0);

        $r5 = new java.util.LinkedHashSet;

        specialinvoke $r5.<java.util.LinkedHashSet: void <init>()>();

        $r6 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (minalloy.minalloyviz.MinAlloyType) $r7;

        $z0 = interfaceinvoke $r4.<java.util.Set: boolean contains(java.lang.Object)>(r8);

        if $z0 == 0 goto label2;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>(r8);

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        $r9 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        return $r9;
    }
}
