class org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache extends java.util.LinkedHashMap
{
    protected int maxsize;

    public void <init>(int)
    {
        int i0, $i1, $i2, $i3;
        org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache r0;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache;

        i0 := @parameter0: int;

        $i1 = i0 * 4;

        $i2 = $i1 / 3;

        $i3 = $i2 + 1;

        specialinvoke r0.<java.util.LinkedHashMap: void <init>(int,float,boolean)>($i3, 0.75F, 1);

        r0.<org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache: int maxsize> = i0;

        return;
    }

    protected boolean removeEldestEntry(java.util.Map$Entry)
    {
        java.util.Map$Entry r1;
        int $i0, $i1;
        org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache;

        r1 := @parameter0: java.util.Map$Entry;

        $i0 = virtualinvoke r0.<org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache: int size()>();

        $i1 = r0.<org.apache.lucene.queryparser.xml.builders.CachedFilterBuilder$LRUCache: int maxsize>;

        if $i0 <= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
