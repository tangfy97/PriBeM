class org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder extends org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder
{
    final org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0;

    void <init>(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)
    {
        org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder r0;
        org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI r1;

        r0 := @this: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder;

        r1 := @parameter0: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI;

        r0.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI$PaneBorder: void <init>(org.jdesktop.swingx.plaf.basic.BasicTaskPaneUI)>(r1);

        return;
    }

    protected void paintTitleBackground(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics)
    {
        java.awt.Color $r8, $r16, $r17;
        org.jdesktop.swingx.JXTaskPane r0;
        java.awt.ComponentOrientation $r4, $r7;
        java.awt.RenderingHints$Key $r19, $r22, $r25;
        java.awt.GradientPaint $r15;
        org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder r5;
        boolean $z0, $z1, $z2;
        org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI $r6, $r9, $r10, $r11, $r12, $r13, $r14, $r28, $r29, $r30, $r31, $r32, $r33;
        java.awt.Paint $r3;
        java.awt.Graphics r1;
        float $f0, $f1, $f2;
        java.awt.Graphics2D $r2, $r18, $r21, $r24, $r27, $r34;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        java.lang.Object $r20, $r23, $r26;

        r5 := @this: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder;

        r0 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r1 := @parameter1: java.awt.Graphics;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: boolean isSpecial()>();

        if $z0 == 0 goto label1;

        $r8 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: java.awt.Color specialTitleBackground>;

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        $i4 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r9 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i5 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$000(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r9);

        $i6 = $i5 * 2;

        $r10 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i7 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$100(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r10);

        $r11 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i8 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$200(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r11);

        virtualinvoke r1.<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>(0, 0, $i4, $i6, $i7, $i8);

        $r12 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i9 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$300(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r12);

        $i10 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r13 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i11 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$400(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI,java.awt.Component)>($r13, r0);

        $r14 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i12 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$500(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r14);

        $i13 = $i11 - $i12;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, $i9, $i10, $i13);

        goto label6;

     label1:
        $r2 = (java.awt.Graphics2D) r1;

        $r3 = virtualinvoke $r2.<java.awt.Graphics2D: java.awt.Paint getPaint()>();

        $r15 = new java.awt.GradientPaint;

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $i1 = $i0 / 2;

        $f0 = (float) $i1;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z1 = virtualinvoke $r4.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 == 0 goto label2;

        $r16 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: java.awt.Color titleBackgroundGradientStart>;

        goto label3;

     label2:
        $r16 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: java.awt.Color titleBackgroundGradientEnd>;

     label3:
        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $f1 = (float) $i2;

        $r6 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i3 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$600(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI,java.awt.Component)>($r6, r0);

        $f2 = (float) $i3;

        $r7 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: java.awt.ComponentOrientation getComponentOrientation()>();

        $z2 = virtualinvoke $r7.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z2 == 0 goto label4;

        $r17 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: java.awt.Color titleBackgroundGradientEnd>;

        goto label5;

     label4:
        $r17 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: java.awt.Color titleBackgroundGradientStart>;

     label5:
        specialinvoke $r15.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, $f0, $r16, $f1, $f2, $r17);

        $r18 = (java.awt.Graphics2D) r1;

        $r19 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_COLOR_RENDERING>;

        $r20 = <java.awt.RenderingHints: java.lang.Object VALUE_COLOR_RENDER_QUALITY>;

        virtualinvoke $r18.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r19, $r20);

        $r21 = (java.awt.Graphics2D) r1;

        $r22 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r23 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        virtualinvoke $r21.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r22, $r23);

        $r24 = (java.awt.Graphics2D) r1;

        $r25 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_RENDERING>;

        $r26 = <java.awt.RenderingHints: java.lang.Object VALUE_RENDER_QUALITY>;

        virtualinvoke $r24.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r25, $r26);

        $r27 = (java.awt.Graphics2D) r1;

        virtualinvoke $r27.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r15);

        $i14 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r28 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i15 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$700(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r28);

        $i16 = $i15 * 2;

        $r29 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i17 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$800(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r29);

        $r30 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i18 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$900(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r30);

        virtualinvoke r1.<java.awt.Graphics: void fillRoundRect(int,int,int,int,int,int)>(0, 0, $i14, $i16, $i17, $i18);

        $r31 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i19 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$1000(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r31);

        $i20 = virtualinvoke r0.<org.jdesktop.swingx.JXTaskPane: int getWidth()>();

        $r32 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i21 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$1100(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI,java.awt.Component)>($r32, r0);

        $r33 = r5.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI this$0>;

        $i22 = staticinvoke <org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI: int access$1200(org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI)>($r33);

        $i23 = $i21 - $i22;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, $i19, $i20, $i23);

        $r34 = (java.awt.Graphics2D) r1;

        virtualinvoke $r34.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r3);

     label6:
        return;
    }

    protected void paintExpandedControls(org.jdesktop.swingx.JXTaskPane, java.awt.Graphics, int, int, int, int)
    {
        java.awt.Color $r6;
        java.awt.Graphics2D $r3, $r9;
        java.awt.Graphics r0;
        java.awt.RenderingHints$Key $r2, $r8;
        int i0, i1, i2, i3;
        java.lang.Object $r1, $r7;
        org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder r4;
        org.jdesktop.swingx.JXTaskPane r5;

        r4 := @this: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder;

        r5 := @parameter0: org.jdesktop.swingx.JXTaskPane;

        r0 := @parameter1: java.awt.Graphics;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        $r3 = (java.awt.Graphics2D) r0;

        $r2 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r3.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r2, $r1);

        virtualinvoke r4.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: void paintOvalAroundControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)>(r5, r0, i0, i1, i2, i3);

        $r6 = virtualinvoke r4.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: java.awt.Color getPaintColor(org.jdesktop.swingx.JXTaskPane)>(r5);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

        virtualinvoke r4.<org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder: void paintChevronControls(org.jdesktop.swingx.JXTaskPane,java.awt.Graphics,int,int,int,int)>(r5, r0, i0, i1, i2, i3);

        $r9 = (java.awt.Graphics2D) r0;

        $r8 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r7 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_OFF>;

        virtualinvoke $r9.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r8, $r7);

        return;
    }

    protected boolean isMouseOverBorder()
    {
        org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder r0;

        r0 := @this: org.jdesktop.swingx.plaf.windows.WindowsTaskPaneUI$XPPaneBorder;

        return 1;
    }
}
