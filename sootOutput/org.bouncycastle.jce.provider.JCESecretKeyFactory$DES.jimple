public class org.bouncycastle.jce.provider.JCESecretKeyFactory$DES extends org.bouncycastle.jce.provider.JCESecretKeyFactory
{

    public void <init>()
    {
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DES r0;

        r0 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DES;

        specialinvoke r0.<org.bouncycastle.jce.provider.JCESecretKeyFactory: void <init>(java.lang.String,org.bouncycastle.asn1.DERObjectIdentifier)>("DES", null);

        return;
    }

    protected javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec) throws java.security.spec.InvalidKeySpecException
    {
        java.security.spec.KeySpec r0;
        byte[] $r5;
        javax.crypto.spec.DESKeySpec r3;
        javax.crypto.spec.SecretKeySpec $r4;
        javax.crypto.SecretKey $r2;
        org.bouncycastle.jce.provider.JCESecretKeyFactory$DES r1;
        boolean $z0;

        r1 := @this: org.bouncycastle.jce.provider.JCESecretKeyFactory$DES;

        r0 := @parameter0: java.security.spec.KeySpec;

        $z0 = r0 instanceof javax.crypto.spec.DESKeySpec;

        if $z0 == 0 goto label1;

        r3 = (javax.crypto.spec.DESKeySpec) r0;

        $r4 = new javax.crypto.spec.SecretKeySpec;

        $r5 = virtualinvoke r3.<javax.crypto.spec.DESKeySpec: byte[] getKey()>();

        specialinvoke $r4.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r5, "DES");

        return $r4;

     label1:
        $r2 = specialinvoke r1.<org.bouncycastle.jce.provider.JCESecretKeyFactory: javax.crypto.SecretKey engineGenerateSecret(java.security.spec.KeySpec)>(r0);

        return $r2;
    }
}
