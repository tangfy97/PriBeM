final class com.mycila.inject.internal.guava.io.CharStreams$2 extends java.lang.Object implements com.mycila.inject.internal.guava.io.InputSupplier
{
    final com.mycila.inject.internal.guava.io.InputSupplier val$in;
    final java.nio.charset.Charset val$charset;

    void <init>(com.mycila.inject.internal.guava.io.InputSupplier, java.nio.charset.Charset)
    {
        com.mycila.inject.internal.guava.io.CharStreams$2 r0;
        com.mycila.inject.internal.guava.io.InputSupplier r1;
        java.nio.charset.Charset r2;

        r0 := @this: com.mycila.inject.internal.guava.io.CharStreams$2;

        r1 := @parameter0: com.mycila.inject.internal.guava.io.InputSupplier;

        r2 := @parameter1: java.nio.charset.Charset;

        r0.<com.mycila.inject.internal.guava.io.CharStreams$2: com.mycila.inject.internal.guava.io.InputSupplier val$in> = r1;

        r0.<com.mycila.inject.internal.guava.io.CharStreams$2: java.nio.charset.Charset val$charset> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.InputStreamReader getInput() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.CharStreams$2 r1;
        com.mycila.inject.internal.guava.io.InputSupplier $r2;
        java.nio.charset.Charset $r4;
        java.lang.Object $r3;
        java.io.InputStreamReader $r0;
        java.io.InputStream $r5;

        r1 := @this: com.mycila.inject.internal.guava.io.CharStreams$2;

        $r0 = new java.io.InputStreamReader;

        $r2 = r1.<com.mycila.inject.internal.guava.io.CharStreams$2: com.mycila.inject.internal.guava.io.InputSupplier val$in>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.io.InputSupplier: java.lang.Object getInput()>();

        $r5 = (java.io.InputStream) $r3;

        $r4 = r1.<com.mycila.inject.internal.guava.io.CharStreams$2: java.nio.charset.Charset val$charset>;

        specialinvoke $r0.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>($r5, $r4);

        return $r0;
    }

    public volatile java.lang.Object getInput() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.CharStreams$2 r0;
        java.io.InputStreamReader $r1;

        r0 := @this: com.mycila.inject.internal.guava.io.CharStreams$2;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.io.CharStreams$2: java.io.InputStreamReader getInput()>();

        return $r1;
    }
}
