final class org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState extends java.lang.Object
{
    private final java.util.Map threadCollapsed;

    private void <init>()
    {
        java.util.HashMap $r1;
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState r0;

        r0 := @this: org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState: java.util.Map threadCollapsed> = $r1;

        return;
    }

    void setThreadState(java.lang.String, org.waveprotocol.wave.model.supplement.ThreadState)
    {
        java.util.Map $r3, $r4;
        java.lang.String r2;
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState r1;
        org.waveprotocol.wave.model.supplement.ThreadState r0;

        r1 := @this: org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: org.waveprotocol.wave.model.supplement.ThreadState;

        if r0 != null goto label1;

        $r4 = r1.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState: java.util.Map threadCollapsed>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r1.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState: java.util.Map threadCollapsed>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r0);

     label2:
        return;
    }

    org.waveprotocol.wave.model.supplement.ThreadState getThreadState(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.String r1;
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState r0;
        org.waveprotocol.wave.model.supplement.ThreadState $r4;

        r0 := @this: org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState: java.util.Map threadCollapsed>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (org.waveprotocol.wave.model.supplement.ThreadState) $r3;

        return $r4;
    }

    public java.lang.Iterable getStatefulThreads()
    {
        java.util.Set $r2;
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState r0;
        java.util.Map $r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState;

        $r1 = r0.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState: java.util.Map threadCollapsed>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    void <init>(org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$1)
    {
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState r0;
        org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$1 r1;

        r0 := @this: org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState;

        r1 := @parameter0: org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$1;

        specialinvoke r0.<org.waveprotocol.wave.model.supplement.PrimitiveSupplementImpl$WaveletThreadState: void <init>()>();

        return;
    }
}
