final class org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum extends org.apache.lucene.index.TermsEnum
{
    private final org.apache.lucene.store.IndexInput in;
    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack;
    private org.apache.lucene.util.fst.FST$Arc[] arcs;
    private final org.apache.lucene.util.automaton.RunAutomaton runAutomaton;
    private final org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton;
    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame;
    private final org.apache.lucene.util.BytesRef term;
    private final org.apache.lucene.util.fst.FST$BytesReader fstReader;
    private org.apache.lucene.util.BytesRef savedStartTerm;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1;

    public void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader, org.apache.lucene.util.automaton.CompiledAutomaton, org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        org.apache.lucene.util.fst.FST$Arc $r17, $r18, $r28;
        org.apache.lucene.util.fst.FST$Arc[] $r2, $r11, $r16, $r29;
        org.apache.lucene.util.automaton.CompiledAutomaton r4;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.BytesRef $r3, $r22, $r23, r24;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r26, $r30;
        org.apache.lucene.util.fst.FST$BytesReader $r14;
        org.apache.lucene.codecs.BlockTreeTermsReader $r6;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader r1;
        long $l2;
        java.lang.AssertionError $r25, $r27;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] $r9, $r10, $r19, $r31;
        int $i0, $i1, $i3, i4, i5;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.store.IndexInput $r7, $r8;
        org.apache.lucene.util.automaton.RunAutomaton $r20;
        org.apache.lucene.util.automaton.ByteRunAutomaton $r5;
        org.apache.lucene.util.fst.FST $r12, $r13, $r15;
        java.lang.Object $r21;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r1 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader;

        r4 := @parameter1: org.apache.lucene.util.automaton.CompiledAutomaton;

        r24 := @parameter2: org.apache.lucene.util.BytesRef;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1> = r1;

        specialinvoke r0.<org.apache.lucene.index.TermsEnum: void <init>()>();

        $r2 = newarray (org.apache.lucene.util.fst.FST$Arc)[5];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs> = $r2;

        $r3 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r3.<org.apache.lucene.util.BytesRef: void <init>()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term> = $r3;

        $r5 = r4.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.automaton.ByteRunAutomaton runAutomaton>;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.RunAutomaton runAutomaton> = $r5;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton> = r4;

        $r6 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r7 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.BlockTreeTermsReader)>($r6);

        $r8 = virtualinvoke $r7.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.store.IndexInput in> = $r8;

        $r9 = newarray (org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)[5];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack> = $r9;

        i4 = 0;

     label1:
        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $i0 = lengthof $r10;

        if i4 >= $i0 goto label2;

        $r31 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $r30 = new org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame;

        specialinvoke $r30.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum,int)>(r0, i4);

        $r31[i4] = $r30;

        i4 = i4 + 1;

        goto label1;

     label2:
        i5 = 0;

     label3:
        $r11 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i1 = lengthof $r11;

        if i5 >= $i1 goto label4;

        $r29 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r28 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r28.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        $r29[i5] = $r28;

        i5 = i5 + 1;

        goto label3;

     label4:
        $r12 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        if $r12 != null goto label5;

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader> = null;

        goto label6;

     label5:
        $r13 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        $r14 = virtualinvoke $r13.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$BytesReader getBytesReader()>();

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader> = $r14;

     label6:
        $r15 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>(r1);

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r17 = $r16[0];

        $r18 = virtualinvoke $r15.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc getFirstArc(org.apache.lucene.util.fst.FST$Arc)>($r17);

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label7;

        $z3 = virtualinvoke $r18.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z3 != 0 goto label7;

        $r27 = new java.lang.AssertionError;

        specialinvoke $r27.<java.lang.AssertionError: void <init>()>();

        throw $r27;

     label7:
        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $r26 = $r19[0];

        $l2 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: long rootBlockFP>;

        $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long fpOrig> = $l2;

        $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long fp> = $l2;

        $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix> = 0;

        $r20 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.RunAutomaton runAutomaton>;

        $i3 = virtualinvoke $r20.<org.apache.lucene.util.automaton.RunAutomaton: int getInitialState()>();

        virtualinvoke $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void setState(int)>($i3);

        $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc> = $r18;

        $r21 = $r18.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r22 = (org.apache.lucene.util.BytesRef) $r21;

        $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.BytesRef outputPrefix> = $r22;

        $r23 = r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.BytesRef rootCode>;

        virtualinvoke $r26.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void load(org.apache.lucene.util.BytesRef)>($r23);

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label8;

        $z2 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean setSavedStartTerm(org.apache.lucene.util.BytesRef)>(r24);

        if $z2 != 0 goto label8;

        $r25 = new java.lang.AssertionError;

        specialinvoke $r25.<java.lang.AssertionError: void <init>()>();

        throw $r25;

     label8:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame> = $r26;

        if r24 == null goto label9;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: void seekToStartTerm(org.apache.lucene.util.BytesRef)>(r24);

     label9:
        return;
    }

    private boolean setSavedStartTerm(org.apache.lucene.util.BytesRef)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.BytesRef r1, $r2;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r1 := @parameter0: org.apache.lucene.util.BytesRef;

        if r1 != null goto label1;

        $r2 = null;

        goto label2;

     label1:
        $r2 = staticinvoke <org.apache.lucene.util.BytesRef: org.apache.lucene.util.BytesRef deepCopyOf(org.apache.lucene.util.BytesRef)>(r1);

     label2:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef savedStartTerm> = $r2;

        return 1;
    }

    public org.apache.lucene.index.TermState termState() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2;
        org.apache.lucene.index.TermState $r4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.codecs.BlockTermState $r3;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.codecs.BlockTermState: org.apache.lucene.index.TermState clone()>();

        return $r4;
    }

    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame getFrame(int) throws java.io.IOException
    {
        java.lang.AssertionError $r6;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] $r1, $r2, $r4, r7, $r8, $r9, $r10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r3, $r5, $r11;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label3;

        $i4 = 1 + i0;

        $i3 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i5 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i4, $i3);

        r7 = newarray (org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)[$i5];

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $i6 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, r7, 0, $i6);

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        i8 = lengthof $r10;

     label1:
        $i7 = lengthof r7;

        if i8 >= $i7 goto label2;

        $r11 = new org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame;

        specialinvoke $r11.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void <init>(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum,int)>(r0, i8);

        r7[i8] = $r11;

        i8 = i8 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack> = r7;

     label3:
        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label4;

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $r5 = $r4[i0];

        $i2 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int ord>;

        if $i2 == i0 goto label4;

        $r6 = new java.lang.AssertionError;

        specialinvoke $r6.<java.lang.AssertionError: void <init>()>();

        throw $r6;

     label4:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $r3 = $r2[i0];

        return $r3;
    }

    private org.apache.lucene.util.fst.FST$Arc getArc(int)
    {
        org.apache.lucene.util.fst.FST$Arc $r3, $r8;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;
        org.apache.lucene.util.fst.FST$Arc[] $r1, $r2, r4, $r5, $r6, $r7;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i1 = lengthof $r1;

        if i0 < $i1 goto label3;

        $i3 = 1 + i0;

        $i2 = <org.apache.lucene.util.RamUsageEstimator: int NUM_BYTES_OBJECT_REF>;

        $i4 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i3, $i2);

        r4 = newarray (org.apache.lucene.util.fst.FST$Arc)[$i4];

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $i5 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r4, 0, $i5);

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        i7 = lengthof $r7;

     label1:
        $i6 = lengthof r4;

        if i7 >= $i6 goto label2;

        $r8 = new org.apache.lucene.util.fst.FST$Arc;

        specialinvoke $r8.<org.apache.lucene.util.fst.FST$Arc: void <init>()>();

        r4[i7] = $r8;

        i7 = i7 + 1;

        goto label1;

     label2:
        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs> = r4;

     label3:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r3 = $r2[i0];

        return $r3;
    }

    private org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame pushFrame(int) throws java.io.IOException
    {
        byte[] $r18;
        org.apache.lucene.util.fst.FST$Arc $r21, $r23, r32;
        byte $b6;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.util.BytesRef $r15, $r17, r33;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r30;
        org.apache.lucene.util.fst.FST$BytesReader $r22;
        org.apache.lucene.codecs.BlockTreeTermsReader $r11, $r25;
        long $l1;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r10, $r19, $r24;
        java.lang.AssertionError $r34, $r35, $r36;
        org.apache.lucene.util.fst.Outputs $r13, $r27;
        short s7, $s13;
        int $i0, $i2, $i3, $i4, i5, $i8, $i9, $i10, i11, $i12, $i14;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.fst.FST $r20;
        java.lang.Object $r12, $r14, $r26, $r28;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        i5 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        if $r1 != null goto label1;

        $i10 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i0 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int ord>;

        $i10 = 1 + $i0;

     label2:
        $r3 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame getFrame(int)>($i10);

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $l1 = $r4.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long lastSubFP>;

        $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long fpOrig> = $l1;

        $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long fp> = $l1;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i2 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i3 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r6);

        $i4 = $i2 + $i3;

        $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix> = $i4;

        virtualinvoke $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void setState(int)>(i5);

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        r32 = $r7.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        i11 = $r8.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        $r30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i9 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r30);

        if $i9 > 0 goto label3;

        $r34 = new java.lang.AssertionError;

        specialinvoke $r34.<java.lang.AssertionError: void <init>()>();

        throw $r34;

     label3:
        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        r33 = $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.BytesRef outputPrefix>;

     label4:
        $i12 = $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        if i11 >= $i12 goto label6;

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r18 = $r17.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $b6 = $r18[i11];

        $s13 = (short) $b6;

        s7 = $s13 & 255;

        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r20 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.util.fst.FST access$500(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader)>($r19);

        $i8 = 1 + i11;

        $r21 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc getArc(int)>($i8);

        $r22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$BytesReader fstReader>;

        $i14 = (int) s7;

        $r23 = virtualinvoke $r20.<org.apache.lucene.util.fst.FST: org.apache.lucene.util.fst.FST$Arc findTargetArc(int,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$Arc,org.apache.lucene.util.fst.FST$BytesReader)>($i14, r32, $r21, $r22);

        r32 = $r23;

        $z3 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label5;

        if $r23 != null goto label5;

        $r35 = new java.lang.AssertionError;

        specialinvoke $r35.<java.lang.AssertionError: void <init>()>();

        throw $r35;

     label5:
        $r24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r25 = $r24.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r27 = $r25.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r26 = $r23.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object output>;

        $r28 = virtualinvoke $r27.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r33, $r26);

        r33 = (org.apache.lucene.util.BytesRef) $r28;

        i11 = i11 + 1;

        goto label4;

     label6:
        $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc> = r32;

        $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.BytesRef outputPrefix> = r33;

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label7;

        $z2 = virtualinvoke r32.<org.apache.lucene.util.fst.FST$Arc: boolean isFinal()>();

        if $z2 != 0 goto label7;

        $r36 = new java.lang.AssertionError;

        specialinvoke $r36.<java.lang.AssertionError: void <init>()>();

        throw $r36;

     label7:
        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r11 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r13 = $r11.<org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.util.fst.Outputs fstOutputs>;

        $r12 = r32.<org.apache.lucene.util.fst.FST$Arc: java.lang.Object nextFinalOutput>;

        $r14 = virtualinvoke $r13.<org.apache.lucene.util.fst.Outputs: java.lang.Object add(java.lang.Object,java.lang.Object)>(r33, $r12);

        $r15 = (org.apache.lucene.util.BytesRef) $r14;

        virtualinvoke $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void load(org.apache.lucene.util.BytesRef)>($r15);

        return $r3;
    }

    public org.apache.lucene.util.BytesRef term()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.BytesRef $r1;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        return $r1;
    }

    public int docFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.codecs.BlockTermState $r3;
        int $i0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $i0 = $r3.<org.apache.lucene.codecs.BlockTermState: int docFreq>;

        return $i0;
    }

    public long totalTermFreq() throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.codecs.BlockTermState $r3;
        long $l0;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $l0 = $r3.<org.apache.lucene.codecs.BlockTermState: long totalTermFreq>;

        return $l0;
    }

    public org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.codecs.BlockTreeTermsReader $r3;
        org.apache.lucene.codecs.BlockTermState $r9;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r2, $r5;
        org.apache.lucene.index.DocsEnum r8, $r11;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r6;
        org.apache.lucene.codecs.PostingsReaderBase $r4;
        int i0;
        org.apache.lucene.index.FieldInfo $r10;
        org.apache.lucene.util.Bits r7;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r7 := @parameter0: org.apache.lucene.util.Bits;

        r8 := @parameter1: org.apache.lucene.index.DocsEnum;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void decodeMetaData()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r3 = $r2.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r3);

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r10 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r9 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $r11 = virtualinvoke $r4.<org.apache.lucene.codecs.PostingsReaderBase: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.index.FieldInfo,org.apache.lucene.codecs.BlockTermState,org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>($r10, $r9, r7, r8, i0);

        return $r11;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsAndPositionsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.BlockTreeTermsReader $r7;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader $r1, $r6, $r9;
        org.apache.lucene.index.DocsAndPositionsEnum r12, $r15;
        org.apache.lucene.codecs.PostingsReaderBase $r8;
        int $i0, i1;
        org.apache.lucene.util.Bits r11;
        org.apache.lucene.index.FieldInfo$IndexOptions $r3, $r4;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.codecs.BlockTermState $r13;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r5, $r10;
        org.apache.lucene.index.FieldInfo $r2, $r14;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r11 := @parameter0: org.apache.lucene.util.Bits;

        r12 := @parameter1: org.apache.lucene.index.DocsAndPositionsEnum;

        i1 := @parameter2: int;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r2 = $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.FieldInfo: org.apache.lucene.index.FieldInfo$IndexOptions getIndexOptions()>();

        $r4 = <org.apache.lucene.index.FieldInfo$IndexOptions: org.apache.lucene.index.FieldInfo$IndexOptions DOCS_AND_FREQS_AND_POSITIONS>;

        $i0 = virtualinvoke $r3.<org.apache.lucene.index.FieldInfo$IndexOptions: int compareTo(java.lang.Enum)>($r4);

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void decodeMetaData()>();

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r7 = $r6.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.codecs.BlockTreeTermsReader this$0>;

        $r8 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader: org.apache.lucene.codecs.PostingsReaderBase access$000(org.apache.lucene.codecs.BlockTreeTermsReader)>($r7);

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader this$1>;

        $r14 = $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader: org.apache.lucene.index.FieldInfo fieldInfo>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r13 = $r10.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $r15 = virtualinvoke $r8.<org.apache.lucene.codecs.PostingsReaderBase: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.index.FieldInfo,org.apache.lucene.codecs.BlockTermState,org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum,int)>($r14, $r13, r11, r12, i1);

        return $r15;
    }

    private int getState()
    {
        byte[] $r6;
        java.lang.AssertionError $r8;
        short $s4, $s8;
        byte $b3;
        int $i0, $i1, $i2, $i5, i6, i7, $i9, $i11;
        boolean $z0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.automaton.RunAutomaton $r5;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2, $r3, $r4;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        i6 = $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int state>;

        i7 = 0;

     label1:
        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i0 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r2);

        if i7 >= $i0 goto label3;

        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.RunAutomaton runAutomaton>;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r6 = $r3.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r4 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i1 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r4);

        $i2 = $i1 + i7;

        $b3 = $r6[$i2];

        $s8 = (short) $b3;

        $s4 = $s8 & 255;

        $i9 = (int) $s4;

        $i5 = virtualinvoke $r5.<org.apache.lucene.util.automaton.RunAutomaton: int step(int,int)>(i6, $i9);

        i6 = $i5;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $i11 = (int) -1;

        if $i5 != $i11 goto label2;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label2:
        i7 = i7 + 1;

        goto label1;

     label3:
        return i6;
    }

    private void seekToStartTerm(org.apache.lucene.util.BytesRef) throws java.io.IOException
    {
        byte[] $r7, $r11, $r23, $r27, $r39, $r41, $r46, $r48, $r64;
        org.apache.lucene.util.fst.FST$Arc $r43, $r49;
        org.apache.lucene.util.fst.FST$Arc[] $r3;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r5, $r6, $r9, $r10, $r13, $r14, $r15, $r16, $r17, $r19, $r21, $r22, $r25, $r26, $r28, $r29, $r31, $r32, $r33, $r34, $r36, $r42, $r50, $r52, $r54, $r55, $r56, $r57, $r59, $r61, $r62;
        long $l25;
        java.lang.AssertionError $r4, $r44, $r51;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.store.ByteArrayDataInput $r18, $r53;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.codecs.BlockTermState $r20, $r58;
        org.apache.lucene.util.BytesRef $r1, r2, $r8, $r12, $r24, $r30, $r35, $r37, $r38, $r40, $r45, $r47, $r60, $r63, $r65;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        $z0 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r50 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i19 = $r50.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int ord>;

        if $i19 == 0 goto label01;

        $r51 = new java.lang.AssertionError;

        specialinvoke $r51.<java.lang.AssertionError: void <init>()>();

        throw $r51;

     label01:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $i1 = $r1.<org.apache.lucene.util.BytesRef: int length>;

        $i0 = r2.<org.apache.lucene.util.BytesRef: int length>;

        if $i1 >= $i0 goto label02;

        $r47 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r45 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r46 = $r45.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i18 = r2.<org.apache.lucene.util.BytesRef: int length>;

        $r48 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r46, $i18);

        $r47.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r48;

     label02:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.fst.FST$Arc[] arcs>;

        $r49 = $r3[0];

        $z1 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z1 != 0 goto label03;

        $r42 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r43 = $r42.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.fst.FST$Arc arc>;

        if $r49 == $r43 goto label03;

        $r44 = new java.lang.AssertionError;

        specialinvoke $r44.<java.lang.AssertionError: void <init>()>();

        throw $r44;

     label03:
        i20 = 0;

     label04:
        $i21 = r2.<org.apache.lucene.util.BytesRef: int length>;

        if i20 > $i21 goto label12;

     label05:
        $r52 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r53 = $r52.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        $i22 = virtualinvoke $r53.<org.apache.lucene.store.ByteArrayDataInput: int getPosition()>();

        $r54 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i23 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r54);

        $r55 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i24 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r55);

        $r56 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $l25 = $r56.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long lastSubFP>;

        $r57 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r58 = $r57.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $i26 = $r58.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd>;

        $r59 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $z5 = virtualinvoke $r59.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: boolean next()>();

        $r60 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r61 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i27 = $r61.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r62 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i28 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r62);

        $i29 = $i27 + $i28;

        $r60.<org.apache.lucene.util.BytesRef: int length> = $i29;

        $r63 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r64 = $r63.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i30 = lengthof $r64;

        $r65 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $i31 = $r65.<org.apache.lucene.util.BytesRef: int length>;

        if $i30 >= $i31 goto label06;

        $r40 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r37 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r39 = $r37.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r38 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $i17 = $r38.<org.apache.lucene.util.BytesRef: int length>;

        $r41 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r39, $i17);

        $r40.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r41;

     label06:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r7 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i2 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r6);

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r11 = $r8.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i3 = $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r10);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i2, $r11, $i3, $i4);

        if $z5 == 0 goto label07;

        $r35 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $z4 = staticinvoke <org.apache.lucene.util.StringHelper: boolean startsWith(org.apache.lucene.util.BytesRef,org.apache.lucene.util.BytesRef)>(r2, $r35);

        if $z4 == 0 goto label07;

        $i16 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: int getState()>();

        $r36 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame pushFrame(int)>($i16);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame> = $r36;

        goto label11;

     label07:
        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $i5 = virtualinvoke $r12.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>(r2);

        if $i5 >= 0 goto label09;

        $r31 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i15 = $r31.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int nextEnt>;

        $r32 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i14 = $r32.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int entCount>;

        if $i15 != $i14 goto label05;

        $r33 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $z3 = $r33.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: boolean isLastInFloor>;

        if $z3 != 0 goto label08;

        $r34 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r34.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void loadNextFloorBlock()>();

        goto label05;

     label08:
        return;

     label09:
        if $i5 != 0 goto label10;

        return;

     label10:
        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i6 = $r13.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int nextEnt>;

        $i7 = $i6 - 1;

        $r13.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int nextEnt> = $i7;

        $r14 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r14.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long lastSubFP> = $l25;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$702(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame,int)>($r15, $i23);

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$602(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame,int)>($r16, $i24);

        $r17 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r18 = $r17.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.store.ByteArrayDataInput suffixesReader>;

        virtualinvoke $r18.<org.apache.lucene.store.ByteArrayDataInput: void setPosition(int)>($i22);

        $r19 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r20 = $r19.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.codecs.BlockTermState termState>;

        $r20.<org.apache.lucene.codecs.BlockTermState: int termBlockOrd> = $i26;

        $r21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r23 = $r21.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i8 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r22);

        $r24 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r27 = $r24.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r25 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i9 = $r25.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i10 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r26);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r23, $i8, $r27, $i9, $i10);

        $r30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r28 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i11 = $r28.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r29 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i12 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r29);

        $i13 = $i11 + $i12;

        $r30.<org.apache.lucene.util.BytesRef: int length> = $i13;

        return;

     label11:
        i20 = i20 + 1;

        goto label04;

     label12:
        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label13;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

        throw $r4;

     label13:
        return;
    }

    public org.apache.lucene.util.BytesRef next() throws java.io.IOException
    {
        byte[] $r24, r32, $r52, r77, r78;
        byte $b4, $b19, $b20, $b25, $b26, $b30, $b44;
        org.apache.lucene.util.automaton.Transition[] $r56, $r60;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2, $r20, $r21, $r22, $r25, $r26, $r29, $r35, $r36, $r37, $r43, $r44, $r45, $r50, $r51, $r53, $r54, $r55, $r57, $r58, $r59, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r71, $r72, $r74, $r75, $r76, $r79, $r80;
        java.lang.StringBuilder $r11, $r14, $r15, $r18, $r85;
        long $l43, l47;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] $r70;
        short $s5, s48, $s56, $s62;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8, $i9, $i10, $i11, i12, $i13, $i14, $i15, $i16, $i17, $i18, $i21, $i22, $i23, $i24, $i27, $i28, $i29, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i45, $i46, i49, i50, i51, i52, i53, i54, $i55, $i57, $i58, $i59, $i60, $i61, $i63, $i65;
        java.lang.AssertionError $r82, $r83, $r84, $r86;
        java.lang.String $r13, $r17, $r19;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.lucene.util.automaton.CompiledAutomaton $r3, $r27, $r30, $r33, $r38, $r40, $r47;
        org.apache.lucene.util.BytesRef $r4, $r6, $r7, $r8, $r12, $r16, $r28, $r31, $r34, $r39, $r41, $r42, $r48, $r81;
        org.apache.lucene.util.automaton.RunAutomaton $r5, $r23;
        org.apache.lucene.util.automaton.Transition $r61;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

     label01:
        $r75 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i45 = $r75.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int nextEnt>;

        $r76 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i46 = $r76.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int entCount>;

        if $i45 != $i46 goto label05;

        $r66 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $z5 = $r66.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: boolean isLastInFloor>;

        if $z5 != 0 goto label02;

        $r74 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        virtualinvoke $r74.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: void loadNextFloorBlock()>();

        goto label01;

     label02:
        $r67 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i40 = $r67.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int ord>;

        if $i40 != 0 goto label03;

        return null;

     label03:
        $r68 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        l47 = $r68.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long fpOrig>;

        $r70 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame[] stack>;

        $r69 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i41 = $r69.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int ord>;

        $i42 = $i41 - 1;

        $r71 = $r70[$i42];

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame> = $r71;

        $z6 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z6 != 0 goto label04;

        $r72 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $l43 = $r72.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: long lastSubFP>;

        $b44 = $l43 cmp l47;

        if $b44 == 0 goto label04;

        $r82 = new java.lang.AssertionError;

        specialinvoke $r82.<java.lang.AssertionError: void <init>()>();

        throw $r82;

     label04:
        goto label01;

     label05:
        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: boolean next()>();

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i0 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r2);

        if $i0 == 0 goto label08;

        $r50 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r52 = $r50.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r51 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i29 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r51);

        $b30 = $r52[$i29];

        $s56 = (short) $b30;

        s48 = $s56 & 255;

     label06:
        $r53 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i31 = $r53.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int curTransitionMax>;

        $i57 = (int) s48;

        if $i57 <= $i31 goto label08;

        $r54 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i34 = $r54.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int transitionIndex>;

        $r55 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r56 = $r55.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.automaton.Transition[] transitions>;

        $i32 = lengthof $r56;

        $i33 = $i32 - 1;

        if $i34 < $i33 goto label07;

        $r63 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r63.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: boolean isLastInFloor> = 1;

        $r65 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r64 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i39 = $r64.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int entCount>;

        $r65.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int nextEnt> = $i39;

        goto label01;

     label07:
        $r57 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i35 = $r57.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int transitionIndex>;

        $i36 = $i35 + 1;

        $r57.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int transitionIndex> = $i36;

        $r62 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r58 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r60 = $r58.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: org.apache.lucene.util.automaton.Transition[] transitions>;

        $r59 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i37 = $r59.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int transitionIndex>;

        $r61 = $r60[$i37];

        $i38 = virtualinvoke $r61.<org.apache.lucene.util.automaton.Transition: int getMax()>();

        $r62.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int curTransitionMax> = $i38;

        goto label06;

     label08:
        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r4 = $r3.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        if $r4 == null goto label17;

        if $z0 != 0 goto label17;

        $r25 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i7 = $r25.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r26 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i8 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r26);

        i49 = $i7 + $i8;

        $r27 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r28 = $r27.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        $i9 = $r28.<org.apache.lucene.util.BytesRef: int length>;

        if i49 >= $i9 goto label09;

        goto label01;

     label09:
        $r29 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        r77 = $r29.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r30 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r31 = $r30.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        r32 = $r31.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r33 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r34 = $r33.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        $i10 = $r34.<org.apache.lucene.util.BytesRef: int length>;

        $r35 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i11 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r35);

        i12 = $i10 - $i11;

        $z3 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z3 != 0 goto label10;

        $r47 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r48 = $r47.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        $i28 = $r48.<org.apache.lucene.util.BytesRef: int offset>;

        if $i28 == 0 goto label10;

        $r83 = new java.lang.AssertionError;

        specialinvoke $r83.<java.lang.AssertionError: void <init>()>();

        throw $r83;

     label10:
        i50 = 0;

        if i12 <= 0 goto label14;

        $r42 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        r78 = $r42.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r43 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i21 = $r43.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        i51 = $i21 - i12;

        $z4 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z4 != 0 goto label11;

        if i51 >= 0 goto label11;

        $r84 = new java.lang.AssertionError;

        specialinvoke $r84.<java.lang.AssertionError: void <init>()>();

        throw $r84;

     label11:
        $r44 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i27 = $r44.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

     label12:
        if i51 >= $i27 goto label13;

        $i23 = i51;

        i51 = i51 + 1;

        $b26 = r78[$i23];

        $i24 = i50;

        i50 = i50 + 1;

        $b25 = r32[$i24];

        $i58 = (int) $b26;

        $i59 = (int) $b25;

        if $i58 == $i59 goto label12;

        goto label01;

     label13:
        $r45 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        i52 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r45);

        goto label15;

     label14:
        $r36 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i13 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r36);

        $r37 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i14 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r37);

        $i16 = $i13 + $i14;

        $r38 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r39 = $r38.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        $i15 = $r39.<org.apache.lucene.util.BytesRef: int length>;

        i52 = $i16 - $i15;

     label15:
        $r40 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        $r41 = $r40.<org.apache.lucene.util.automaton.CompiledAutomaton: org.apache.lucene.util.BytesRef commonSuffixRef>;

        $i22 = $r41.<org.apache.lucene.util.BytesRef: int length>;

     label16:
        if i50 >= $i22 goto label17;

        $i17 = i52;

        i52 = i52 + 1;

        $b20 = r77[$i17];

        $i18 = i50;

        i50 = i50 + 1;

        $b19 = r32[$i18];

        $i60 = (int) $b20;

        $i61 = (int) $b19;

        if $i60 == $i61 goto label16;

        goto label01;

     label17:
        $r79 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        i53 = $r79.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int state>;

        i54 = 0;

     label18:
        $r80 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i55 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r80);

        if i54 >= $i55 goto label20;

        $r23 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.RunAutomaton runAutomaton>;

        $r21 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r24 = $r21.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r22 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i2 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r22);

        $i3 = $i2 + i54;

        $b4 = $r24[$i3];

        $s62 = (short) $b4;

        $s5 = $s62 & 255;

        $i63 = (int) $s5;

        $i6 = virtualinvoke $r23.<org.apache.lucene.util.automaton.RunAutomaton: int step(int,int)>(i53, $i63);

        i53 = $i6;

        $i65 = (int) -1;

        if $i6 != $i65 goto label19;

        goto label01;

     label19:
        i54 = i54 + 1;

        goto label18;

     label20:
        if $z0 == 0 goto label21;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: void copyTerm()>();

        $r20 = specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame pushFrame(int)>(i53);

        r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame> = $r20;

        goto label23;

     label21:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.RunAutomaton runAutomaton>;

        $z1 = virtualinvoke $r5.<org.apache.lucene.util.automaton.RunAutomaton: boolean isAccept(int)>(i53);

        if $z1 == 0 goto label23;

        specialinvoke r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: void copyTerm()>();

        $z2 = <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled>;

        if $z2 != 0 goto label22;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef savedStartTerm>;

        if $r6 == null goto label22;

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r7 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef savedStartTerm>;

        $i1 = virtualinvoke $r8.<org.apache.lucene.util.BytesRef: int compareTo(org.apache.lucene.util.BytesRef)>($r7);

        if $i1 > 0 goto label22;

        $r86 = new java.lang.AssertionError;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("saveStartTerm=");

        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef savedStartTerm>;

        $r13 = virtualinvoke $r12.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" term=");

        $r16 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r17 = virtualinvoke $r16.<org.apache.lucene.util.BytesRef: java.lang.String utf8ToString()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r86.<java.lang.AssertionError: void <init>(java.lang.Object)>($r19);

        throw $r86;

     label22:
        $r81 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        return $r81;

     label23:
        goto label01;
    }

    private void copyTerm()
    {
        byte[] $r4, $r7, $r11, $r14, $r16;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.BytesRef $r3, $r8, $r12, $r13, $r15;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame $r1, $r2, $r5, $r6, $r9, $r10;

        r0 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i0 = $r1.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r2 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i1 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r2);

        i2 = $i0 + $i1;

        $r3 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r4 = $r3.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i3 = lengthof $r4;

        if $i3 >= i2 goto label1;

        $r15 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r13 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r14 = $r13.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r16 = staticinvoke <org.apache.lucene.util.ArrayUtil: byte[] grow(byte[],int)>($r14, i2);

        $r15.<org.apache.lucene.util.BytesRef: byte[] bytes> = $r16;

     label1:
        $r5 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $r7 = $r5.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: byte[] suffixBytes>;

        $r6 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i4 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$700(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r6);

        $r8 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r11 = $r8.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $r9 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i5 = $r9.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int prefix>;

        $r10 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame currentFrame>;

        $i6 = staticinvoke <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame: int access$600(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum$Frame)>($r10);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, $i4, $r11, $i5, $i6);

        $r12 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.BytesRef term>;

        $r12.<org.apache.lucene.util.BytesRef: int length> = i2;

        return;
    }

    public java.util.Comparator getComparator()
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r1;
        java.util.Comparator $r0;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r0 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        return $r0;
    }

    public boolean seekExact(org.apache.lucene.util.BytesRef, boolean)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r1;
        org.apache.lucene.util.BytesRef r2;
        boolean z0;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        z0 := @parameter1: boolean;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void seekExact(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r1;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public long ord()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r1;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef, boolean)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r1;
        org.apache.lucene.util.BytesRef r2;
        boolean z0;

        r1 := @this: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        r2 := @parameter0: org.apache.lucene.util.BytesRef;

        z0 := @parameter1: boolean;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static org.apache.lucene.util.automaton.CompiledAutomaton access$100(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.automaton.CompiledAutomaton $r1;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.CompiledAutomaton compiledAutomaton>;

        return $r1;
    }

    static org.apache.lucene.util.automaton.RunAutomaton access$200(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.util.automaton.RunAutomaton $r1;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.util.automaton.RunAutomaton runAutomaton>;

        return $r1;
    }

    static org.apache.lucene.store.IndexInput access$300(org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum)
    {
        org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum r0;
        org.apache.lucene.store.IndexInput $r1;

        r0 := @parameter0: org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum;

        $r1 = r0.<org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: org.apache.lucene.store.IndexInput in>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/codecs/BlockTreeTermsReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.codecs.BlockTreeTermsReader$FieldReader$IntersectEnum: boolean $assertionsDisabled> = $z1;

        return;
    }
}
