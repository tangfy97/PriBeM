public abstract class org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser extends org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser
{
    private static boolean factoriesAreAbstract;

    public void <init>()
    {
        org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractBeanDefinitionParser: void <init>()>();

        return;
    }

    public static void setFactoriesAreAbstract(boolean)
    {
        boolean z0;

        z0 := @parameter0: boolean;

        <org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: boolean factoriesAreAbstract> = z0;

        return;
    }

    protected java.lang.String getDestroyMethod()
    {
        org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser;

        return null;
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.springframework.beans.factory.support.AbstractBeanDefinition $r17, $r18, $r21, $r22, $r23, $r35, $r37;
        org.apache.cxf.configuration.spring.BusWiringType $r41;
        java.lang.StringBuilder $r12, $r14, $r27, $r29, $r32, $r34, $r53, $r54, $r61, $r62, $r63, $r64;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2, r56;
        short $s0;
        org.springframework.beans.factory.xml.ParserContext r7;
        org.springframework.beans.factory.config.BeanDefinition $r8, $r65, $r66, $r67, $r68;
        java.lang.String $r6, $r13, $r15, $r19, $r20, $r28, $r30, $r33, $r39, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, r58, r60;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r16, $r25, $r36, $r38;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, z12, z13, z14;
        org.w3c.dom.Attr r57;
        org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser r0;
        org.w3c.dom.Node $r42, r59;
        int i1, $i2;
        org.w3c.dom.NamedNodeMap $r5;
        org.w3c.dom.Element r4, $r40;
        java.lang.Class $r1, $r3, $r9, $r10, $r24, $r55;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser;

        r4 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        r2 := @parameter2: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.Class getFactoryClass()>();

        r56 = r2;

        $r3 = class "Lorg/springframework/beans/factory/FactoryBean;";

        $z0 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r1);

        if $z0 != 0 goto label01;

        $r55 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.Class getFactoryClass()>();

        r56 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder rootBeanDefinition(java.lang.Class)>($r55);

     label01:
        $r5 = interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        z12 = 0;

        z13 = 0;

        i1 = 0;

     label02:
        $i2 = interfaceinvoke $r5.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i2 goto label08;

        $r42 = interfaceinvoke $r5.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r57 = (org.w3c.dom.Attr) $r42;

        $r43 = interfaceinvoke r57.<org.w3c.dom.Attr: java.lang.String getValue()>();

        r58 = $r43;

        $r44 = interfaceinvoke r57.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $r45 = interfaceinvoke r57.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r46 = "createdFromAPI";

        $z4 = virtualinvoke $r46.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z4 == 0 goto label03;

        virtualinvoke r56.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)>(1);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)>(1);

        z12 = 1;

        goto label07;

     label03:
        $r47 = "abstract";

        $z5 = virtualinvoke $r47.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z5 == 0 goto label04;

        virtualinvoke r56.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)>(1);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setAbstract(boolean)>(1);

        goto label07;

     label04:
        $r48 = "depends-on";

        $z6 = virtualinvoke $r48.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z6 == 0 goto label05;

        virtualinvoke r56.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addDependsOn(java.lang.String)>($r43);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addDependsOn(java.lang.String)>($r43);

        goto label07;

     label05:
        $r49 = "id";

        $z7 = virtualinvoke $r49.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z7 != 0 goto label07;

        $r50 = "name";

        $z8 = virtualinvoke $r50.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z8 != 0 goto label07;

        $z9 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: boolean isAttribute(java.lang.String,java.lang.String)>($r44, $r45);

        if $z9 == 0 goto label07;

        $r51 = "bus";

        $z10 = virtualinvoke $r51.<java.lang.String: boolean equals(java.lang.Object)>($r45);

        if $z10 == 0 goto label06;

        z13 = 1;

        $z11 = virtualinvoke $r43.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z11 != 0 goto label06;

        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r43);

        r58 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: void mapAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String,java.lang.String)>(r56, r4, $r45, r58);

     label07:
        i1 = i1 + 1;

        goto label02;

     label08:
        if z13 != 0 goto label09;

        $r41 = <org.apache.cxf.configuration.spring.BusWiringType: org.apache.cxf.configuration.spring.BusWiringType PROPERTY>;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: void addBusWiringAttribute(org.springframework.beans.factory.support.BeanDefinitionBuilder,org.apache.cxf.configuration.spring.BusWiringType)>(r56, $r41);

     label09:
        r59 = interfaceinvoke r4.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

     label10:
        if r59 == null goto label12;

        $s0 = interfaceinvoke r59.<org.w3c.dom.Node: short getNodeType()>();

        if $s0 != 1 goto label11;

        $r39 = interfaceinvoke r59.<org.w3c.dom.Node: java.lang.String getLocalName()>();

        $r40 = (org.w3c.dom.Element) r59;

        virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: void mapElement(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,org.w3c.dom.Element,java.lang.String)>(r7, r56, $r40, $r39);

     label11:
        r59 = interfaceinvoke r59.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label10;

     label12:
        $r6 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.String getIdOrName(org.w3c.dom.Element)>(r4);

        r60 = $r6;

        $r8 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.config.BeanDefinition getContainingBeanDefinition()>();

        z14 = 0;

        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>($r6);

        if $z1 == 0 goto label14;

        if $r8 != null goto label13;

        $r37 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r38 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r65 = (org.springframework.beans.factory.config.BeanDefinition) $r37;

        r60 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>($r65, $r38, 0);

        goto label14;

     label13:
        $r35 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r36 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r66 = (org.springframework.beans.factory.config.BeanDefinition) $r35;

        r60 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionReaderUtils: java.lang.String generateBeanName(org.springframework.beans.factory.config.BeanDefinition,org.springframework.beans.factory.support.BeanDefinitionRegistry,boolean)>($r66, $r36, 1);

        z14 = 1;

     label14:
        if z12 == 0 goto label15;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r33 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.String getSuffix()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        r60 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        $r9 = class "Lorg/springframework/beans/factory/FactoryBean;";

        $r10 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.Class getFactoryClass()>();

        $z2 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r10);

        if $z2 == 0 goto label17;

        if z14 != 0 goto label16;

        $r22 = virtualinvoke r56.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        $r23 = virtualinvoke $r22.<org.springframework.beans.factory.support.AbstractBeanDefinition: org.springframework.beans.factory.support.AbstractBeanDefinition cloneBeanDefinition()>();

        $r24 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.Class getRawFactoryClass()>();

        virtualinvoke $r23.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setBeanClass(java.lang.Class)>($r24);

        $z3 = <org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: boolean factoriesAreAbstract>;

        virtualinvoke $r23.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAbstract(boolean)>($z3);

        virtualinvoke $r23.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setLazyInit(boolean)>(1);

        $r25 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r63 = new java.lang.StringBuilder;

        specialinvoke $r63.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r28 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.String getFactoryIdSuffix()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        $r67 = (org.springframework.beans.factory.config.BeanDefinition) $r23;

        interfaceinvoke $r25.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r30, $r67);

     label16:
        $r21 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        virtualinvoke $r21.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAttribute(java.lang.String,java.lang.Object)>("id", r60);

        goto label18;

     label17:
        $r64 = new java.lang.StringBuilder;

        specialinvoke $r64.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r60);

        $r13 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.String getFactoryIdSuffix()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = virtualinvoke r7.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r17 = virtualinvoke r56.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        $r68 = (org.springframework.beans.factory.config.BeanDefinition) $r17;

        interfaceinvoke $r16.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>($r15, $r68);

        $r18 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        virtualinvoke $r18.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setAttribute(java.lang.String,java.lang.Object)>("id", r60);

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setFactoryBean(java.lang.String,java.lang.String)>($r15, "create");

     label18:
        $r19 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.String getDestroyMethod()>();

        if $r19 == null goto label19;

        $r20 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.String getDestroyMethod()>();

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setDestroyMethodName(java.lang.String)>($r20);

     label19:
        return;
    }

    protected abstract java.lang.Class getFactoryClass();

    protected java.lang.Class getRawFactoryClass()
    {
        java.lang.Class $r1;
        org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser;

        $r1 = virtualinvoke r0.<org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: java.lang.Class getFactoryClass()>();

        return $r1;
    }

    protected abstract java.lang.String getFactoryIdSuffix();

    static void <clinit>()
    {
        <org.apache.cxf.configuration.spring.AbstractFactoryBeanDefinitionParser: boolean factoriesAreAbstract> = 1;

        return;
    }
}
