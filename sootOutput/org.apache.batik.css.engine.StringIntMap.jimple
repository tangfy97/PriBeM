public class org.apache.batik.css.engine.StringIntMap extends java.lang.Object
{
    protected org.apache.batik.css.engine.StringIntMap$Entry[] table;
    protected int count;

    public void <init>(int)
    {
        org.apache.batik.css.engine.StringIntMap r0;
        int i0, $i1, $i2, $i3;
        org.apache.batik.css.engine.StringIntMap$Entry[] $r1;

        r0 := @this: org.apache.batik.css.engine.StringIntMap;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = i0 >> 2;

        $i2 = i0 - $i1;

        $i3 = $i2 + 1;

        $r1 = newarray (org.apache.batik.css.engine.StringIntMap$Entry)[$i3];

        r0.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table> = $r1;

        return;
    }

    public int get(java.lang.String)
    {
        org.apache.batik.css.engine.StringIntMap r1;
        org.apache.batik.css.engine.StringIntMap$Entry r5;
        int $i0, i1, $i2, i3, $i4, $i5, $i7;
        java.lang.String r0, $r4;
        org.apache.batik.css.engine.StringIntMap$Entry[] $r2, $r3;
        boolean $z0;

        r1 := @this: org.apache.batik.css.engine.StringIntMap;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        i1 = $i0 & 2147483647;

        $r2 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $i2 = lengthof $r2;

        i3 = i1 % $i2;

        $r3 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        r5 = $r3[i3];

        goto label3;

     label1:
        $i4 = r5.<org.apache.batik.css.engine.StringIntMap$Entry: int hash>;

        if $i4 != i1 goto label2;

        $r4 = r5.<org.apache.batik.css.engine.StringIntMap$Entry: java.lang.String key>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        $i5 = r5.<org.apache.batik.css.engine.StringIntMap$Entry: int value>;

        return $i5;

     label2:
        r5 = r5.<org.apache.batik.css.engine.StringIntMap$Entry: org.apache.batik.css.engine.StringIntMap$Entry next>;

     label3:
        if r5 != null goto label1;

        $i7 = (int) -1;

        return $i7;
    }

    public void put(java.lang.String, int)
    {
        org.apache.batik.css.engine.StringIntMap$Entry $r6, $r8, r11;
        int $i0, i1, $i2, $i3, i4, i5, $i6, $i7, $i8, $i9, $i10, i11;
        java.lang.String r0, $r4;
        boolean $z0;
        org.apache.batik.css.engine.StringIntMap r1;
        org.apache.batik.css.engine.StringIntMap$Entry[] $r2, $r3, $r5, $r7, $r9, $r10;

        r1 := @this: org.apache.batik.css.engine.StringIntMap;

        r0 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();

        i1 = $i0 & 2147483647;

        $r2 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $i2 = lengthof $r2;

        i11 = i1 % $i2;

        $r3 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        r11 = $r3[i11];

        goto label3;

     label1:
        $i3 = r11.<org.apache.batik.css.engine.StringIntMap$Entry: int hash>;

        if $i3 != i1 goto label2;

        $r4 = r11.<org.apache.batik.css.engine.StringIntMap$Entry: java.lang.String key>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        r11.<org.apache.batik.css.engine.StringIntMap$Entry: int value> = i4;

        return;

     label2:
        r11 = r11.<org.apache.batik.css.engine.StringIntMap$Entry: org.apache.batik.css.engine.StringIntMap$Entry next>;

     label3:
        if r11 != null goto label1;

        $r5 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        i5 = lengthof $r5;

        $i6 = r1.<org.apache.batik.css.engine.StringIntMap: int count>;

        $i7 = $i6 + 1;

        r1.<org.apache.batik.css.engine.StringIntMap: int count> = $i7;

        $i8 = i5 >> 2;

        $i9 = i5 - $i8;

        if $i6 < $i9 goto label4;

        virtualinvoke r1.<org.apache.batik.css.engine.StringIntMap: void rehash()>();

        $r10 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $i10 = lengthof $r10;

        i11 = i1 % $i10;

     label4:
        $r6 = new org.apache.batik.css.engine.StringIntMap$Entry;

        $r7 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $r8 = $r7[i11];

        specialinvoke $r6.<org.apache.batik.css.engine.StringIntMap$Entry: void <init>(int,java.lang.String,int,org.apache.batik.css.engine.StringIntMap$Entry)>(i1, r0, i4, $r8);

        $r9 = r1.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $r9[i11] = $r6;

        return;
    }

    protected void rehash()
    {
        org.apache.batik.css.engine.StringIntMap$Entry r3, $r6, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9;
        org.apache.batik.css.engine.StringIntMap r0;
        org.apache.batik.css.engine.StringIntMap$Entry[] r1, $r2, $r4, $r5, $r7;

        r0 := @this: org.apache.batik.css.engine.StringIntMap;

        r1 = r0.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $i0 = lengthof r1;

        $i1 = $i0 * 2;

        $i2 = $i1 + 1;

        $r2 = newarray (org.apache.batik.css.engine.StringIntMap$Entry)[$i2];

        r0.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table> = $r2;

        $i3 = lengthof r1;

        i7 = $i3 - 1;

        goto label4;

     label1:
        r8 = r1[i7];

        goto label3;

     label2:
        r3 = r8;

        r8 = r8.<org.apache.batik.css.engine.StringIntMap$Entry: org.apache.batik.css.engine.StringIntMap$Entry next>;

        $i5 = r3.<org.apache.batik.css.engine.StringIntMap$Entry: int hash>;

        $r4 = r0.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $i4 = lengthof $r4;

        i6 = $i5 % $i4;

        $r5 = r0.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $r6 = $r5[i6];

        r3.<org.apache.batik.css.engine.StringIntMap$Entry: org.apache.batik.css.engine.StringIntMap$Entry next> = $r6;

        $r7 = r0.<org.apache.batik.css.engine.StringIntMap: org.apache.batik.css.engine.StringIntMap$Entry[] table>;

        $r7[i6] = r3;

     label3:
        if r8 != null goto label2;

        $i9 = (int) -1;

        i7 = i7 + $i9;

     label4:
        if i7 >= 0 goto label1;

        return;
    }
}
