public interface  com.hp.hpl.jena.ontology.OntProperty extends java.lang.Object implements com.hp.hpl.jena.ontology.OntResource, com.hp.hpl.jena.rdf.model.Property
{

    public abstract void setSuperProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void addSuperProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.OntProperty getSuperProperty();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSuperProperties(boolean);

    public abstract boolean hasSuperProperty(com.hp.hpl.jena.rdf.model.Property, boolean);

    public abstract void removeSuperProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void setSubProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void addSubProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.OntProperty getSubProperty();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSubProperties();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listSubProperties(boolean);

    public abstract boolean hasSubProperty(com.hp.hpl.jena.rdf.model.Property, boolean);

    public abstract void removeSubProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void setDomain(com.hp.hpl.jena.rdf.model.Resource);

    public abstract void addDomain(com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.OntResource getDomain();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listDomain();

    public abstract boolean hasDomain(com.hp.hpl.jena.rdf.model.Resource);

    public abstract void removeDomain(com.hp.hpl.jena.rdf.model.Resource);

    public abstract void setRange(com.hp.hpl.jena.rdf.model.Resource);

    public abstract void addRange(com.hp.hpl.jena.rdf.model.Resource);

    public abstract com.hp.hpl.jena.ontology.OntResource getRange();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listRange();

    public abstract boolean hasRange(com.hp.hpl.jena.rdf.model.Resource);

    public abstract void removeRange(com.hp.hpl.jena.rdf.model.Resource);

    public abstract void setEquivalentProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void addEquivalentProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.OntProperty getEquivalentProperty();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listEquivalentProperties();

    public abstract boolean hasEquivalentProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void removeEquivalentProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract void setInverseOf(com.hp.hpl.jena.rdf.model.Property);

    public abstract void addInverseOf(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.OntProperty getInverseOf();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listInverseOf();

    public abstract boolean isInverseOf(com.hp.hpl.jena.rdf.model.Property);

    public abstract void removeInverseProperty(com.hp.hpl.jena.rdf.model.Property);

    public abstract com.hp.hpl.jena.ontology.FunctionalProperty asFunctionalProperty();

    public abstract com.hp.hpl.jena.ontology.DatatypeProperty asDatatypeProperty();

    public abstract com.hp.hpl.jena.ontology.ObjectProperty asObjectProperty();

    public abstract com.hp.hpl.jena.ontology.TransitiveProperty asTransitiveProperty();

    public abstract com.hp.hpl.jena.ontology.InverseFunctionalProperty asInverseFunctionalProperty();

    public abstract com.hp.hpl.jena.ontology.SymmetricProperty asSymmetricProperty();

    public abstract com.hp.hpl.jena.ontology.FunctionalProperty convertToFunctionalProperty();

    public abstract com.hp.hpl.jena.ontology.DatatypeProperty convertToDatatypeProperty();

    public abstract com.hp.hpl.jena.ontology.ObjectProperty convertToObjectProperty();

    public abstract com.hp.hpl.jena.ontology.TransitiveProperty convertToTransitiveProperty();

    public abstract com.hp.hpl.jena.ontology.InverseFunctionalProperty convertToInverseFunctionalProperty();

    public abstract com.hp.hpl.jena.ontology.SymmetricProperty convertToSymmetricProperty();

    public abstract boolean isFunctionalProperty();

    public abstract boolean isDatatypeProperty();

    public abstract boolean isObjectProperty();

    public abstract boolean isTransitiveProperty();

    public abstract boolean isInverseFunctionalProperty();

    public abstract boolean isSymmetricProperty();

    public abstract com.hp.hpl.jena.ontology.OntProperty getInverse();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listInverse();

    public abstract boolean hasInverse();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaringClasses();

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listDeclaringClasses(boolean);

    public abstract com.hp.hpl.jena.util.iterator.ExtendedIterator listReferringRestrictions();
}
