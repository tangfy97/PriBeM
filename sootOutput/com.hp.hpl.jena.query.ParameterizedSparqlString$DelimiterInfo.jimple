class com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo extends java.lang.Object
{
    private java.util.List starts;
    private java.util.Map stops;
    final com.hp.hpl.jena.query.ParameterizedSparqlString this$0;

    private void <init>(com.hp.hpl.jena.query.ParameterizedSparqlString)
    {
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        java.util.HashMap $r3;
        com.hp.hpl.jena.query.ParameterizedSparqlString r1;
        java.util.ArrayList $r2;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        r1 := @parameter0: com.hp.hpl.jena.query.ParameterizedSparqlString;

        r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: com.hp.hpl.jena.query.ParameterizedSparqlString this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.List starts> = $r2;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.Map stops> = $r3;

        return;
    }

    public void parseFrom(java.lang.String)
    {
        java.util.Map $r2;
        java.lang.String r3, $r7;
        char[] $r4, $r6;
        java.util.List $r1;
        int $i0, $i2, $i4, $i6, $i7, $i9, $i11, $i13, $i15, $i16, $i18, $i20, $i22, $i23, $i24, $i25, $i28, $i29, $i31, $i33, $i35, $i37, $i38, $i40, $i42, $i44, i46, i47, i48, $i49, i50, i51, i52, $i53, i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73;
        char $c1, $c3, $c5, $c8, $c10, $c12, $c14, $c17, $c19, $c21, $c26, $c27, $c30, $c32, $c34, $c36, $c39, $c41, $c43, $c45;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.List starts>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        $r2 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.Map stops>;

        interfaceinvoke $r2.<java.util.Map: void clear()>();

        $r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>();

        i46 = 0;

     label01:
        $i0 = lengthof $r4;

        if i46 >= $i0 goto label29;

        $c1 = $r4[i46];

        $i55 = (int) $c1;

        lookupswitch($i55)
        {
            case 10: goto label27;
            case 13: goto label27;
            case 34: goto label02;
            case 35: goto label22;
            case 39: goto label14;
            case 40: goto label27;
            case 41: goto label27;
            case 44: goto label27;
            case 46: goto label27;
            case 59: goto label27;
            case 60: goto label10;
            case 91: goto label27;
            case 93: goto label27;
            case 123: goto label27;
            case 125: goto label27;
            default: goto label28;
        };

     label02:
        $i28 = lengthof $r4;

        $i29 = $i28 - 2;

        if i46 >= $i29 goto label06;

        $i33 = i46 + 1;

        $c34 = $r4[$i33];

        $i56 = (int) $c34;

        if $i56 != 34 goto label06;

        $i35 = i46 + 2;

        $c36 = $r4[$i35];

        $i57 = (int) $c36;

        if $i57 != 34 goto label06;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, "\"\"\"");

        i47 = i46 + 3;

     label03:
        $i37 = lengthof $r4;

        $i38 = $i37 - 2;

        if i47 >= $i38 goto label05;

        $c39 = $r4[i47];

        $i58 = (int) $c39;

        if $i58 != 34 goto label04;

        $i40 = i47 + 1;

        $c41 = $r4[$i40];

        $i59 = (int) $c41;

        if $i59 != 34 goto label04;

        $i42 = i47 + 2;

        $c43 = $r4[$i42];

        $i60 = (int) $c43;

        if $i60 != 34 goto label04;

        $i44 = i47 + 2;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, $i44);

        i46 = i47 + 2;

     label04:
        i47 = i47 + 1;

        goto label03;

     label05:
        goto label28;

     label06:
        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, "\"");

        i48 = i46 + 1;

     label07:
        $i49 = lengthof $r4;

        if i48 >= $i49 goto label09;

        $c30 = $r4[i48];

        $i61 = (int) $c30;

        if $i61 != 34 goto label08;

        $i31 = i48 - 1;

        $c32 = $r4[$i31];

        $i62 = (int) $c32;

        if $i62 == 92 goto label08;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, i48);

        i46 = i48;

     label08:
        i48 = i48 + 1;

        goto label07;

     label09:
        goto label28;

     label10:
        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, "<");

        i50 = i46 + 1;

     label11:
        $i2 = lengthof $r4;

        if i50 >= $i2 goto label13;

        $c3 = $r4[i50];

        $i63 = (int) $c3;

        if $i63 != 62 goto label12;

        $i4 = i50 - 1;

        $c5 = $r4[$i4];

        $i64 = (int) $c5;

        if $i64 == 92 goto label12;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, i50);

        i46 = i50;

     label12:
        i50 = i50 + 1;

        goto label11;

     label13:
        goto label28;

     label14:
        $i6 = lengthof $r4;

        $i7 = $i6 - 2;

        if i46 >= $i7 goto label18;

        $i11 = i46 + 1;

        $c12 = $r4[$i11];

        $i65 = (int) $c12;

        if $i65 != 39 goto label18;

        $i13 = i46 + 2;

        $c14 = $r4[$i13];

        $i66 = (int) $c14;

        if $i66 != 39 goto label18;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, "\'\'\'");

        i51 = i46 + 3;

     label15:
        $i15 = lengthof $r4;

        $i16 = $i15 - 2;

        if i51 >= $i16 goto label17;

        $c17 = $r4[i51];

        $i67 = (int) $c17;

        if $i67 != 39 goto label16;

        $i18 = i51 + 1;

        $c19 = $r4[$i18];

        $i68 = (int) $c19;

        if $i68 != 39 goto label16;

        $i20 = i51 + 2;

        $c21 = $r4[$i20];

        $i69 = (int) $c21;

        if $i69 != 39 goto label16;

        $i22 = i51 + 2;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, $i22);

        i46 = i51 + 2;

     label16:
        i51 = i51 + 1;

        goto label15;

     label17:
        goto label28;

     label18:
        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, "\'");

        i52 = i46 + 1;

     label19:
        $i53 = lengthof $r4;

        if i52 >= $i53 goto label21;

        $c8 = $r4[i52];

        $i70 = (int) $c8;

        if $i70 != 39 goto label20;

        $i9 = i52 - 1;

        $c10 = $r4[$i9];

        $i71 = (int) $c10;

        if $i71 == 92 goto label20;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, i52);

        i46 = i52;

     label20:
        i52 = i52 + 1;

        goto label19;

     label21:
        goto label28;

     label22:
        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, "#");

        i54 = i46 + 1;

     label23:
        $i23 = lengthof $r4;

        if i54 >= $i23 goto label26;

        $c26 = $r4[i54];

        $i72 = (int) $c26;

        if $i72 == 10 goto label24;

        $c27 = $r4[i54];

        $i73 = (int) $c27;

        if $i73 != 13 goto label25;

     label24:
        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, i54);

        i46 = i54;

     label25:
        i54 = i54 + 1;

        goto label23;

     label26:
        $i24 = lengthof $r4;

        $i25 = $i24 - 1;

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, $i25);

        goto label28;

     label27:
        $r7 = new java.lang.String;

        $r6 = newarray (char)[1];

        $c45 = $r4[i46];

        $r6[0] = $c45;

        specialinvoke $r7.<java.lang.String: void <init>(char[])>($r6);

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStart(int,java.lang.String)>(i46, $r7);

        virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void addStop(int,int)>(i46, i46);

     label28:
        i46 = i46 + 1;

        goto label01;

     label29:
        return;
    }

    public void addStart(int, java.lang.String)
    {
        java.util.List $r2;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        int i0;
        org.apache.jena.atlas.lib.Pair $r1;
        java.lang.String r4;
        java.lang.Integer $r3;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.List starts>;

        $r1 = new org.apache.jena.atlas.lib.Pair;

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        specialinvoke $r1.<org.apache.jena.atlas.lib.Pair: void <init>(java.lang.Object,java.lang.Object)>($r3, r4);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void addStop(int, int)
    {
        java.util.Map $r1;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        int i0, i1;
        java.lang.Integer $r2, $r3;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.Map stops>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r3);

        return;
    }

    public org.apache.jena.atlas.lib.Pair findBefore(int)
    {
        java.util.Iterator $r2;
        java.lang.Integer $r6, $r8;
        java.util.List $r1;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        int $i0, i1, $i2;
        org.apache.jena.atlas.lib.Pair r4, r9;
        java.lang.Object $r3, $r5, $r7;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i1 := @parameter0: int;

        r9 = null;

        $r1 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.List starts>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.jena.atlas.lib.Pair) $r3;

        $r5 = virtualinvoke r4.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i0 >= i1 goto label2;

        r9 = r4;

     label2:
        $r7 = virtualinvoke r4.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r8 = (java.lang.Integer) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        if $i2 < i1 goto label3;

        goto label4;

     label3:
        goto label1;

     label4:
        return r9;
    }

    public org.apache.jena.atlas.lib.Pair findAfter(int)
    {
        java.util.Iterator $r2;
        java.lang.Integer $r6;
        java.util.List $r1;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        int $i0, i1;
        org.apache.jena.atlas.lib.Pair r4;
        java.lang.Object $r3, $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i1 := @parameter0: int;

        $r1 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.List starts>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.jena.atlas.lib.Pair) $r3;

        $r5 = virtualinvoke r4.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        if $i0 <= i1 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }

    public boolean isInsideLiteral(int, int)
    {
        java.lang.Integer r7;
        java.util.Map $r4;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        int i0, $i1, i2;
        org.apache.jena.atlas.lib.Pair $r1;
        java.lang.Object $r2, $r5, $r6;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: org.apache.jena.atlas.lib.Pair findBefore(int)>(i0);

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("\"");

        if $z0 == 0 goto label5;

        $r4 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.Map stops>;

        $r5 = virtualinvoke $r1.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.Integer) $r6;

        if r7 != null goto label2;

        return 1;

     label2:
        $i1 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        if $i1 <= i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public boolean isInsideAltLiteral(int, int)
    {
        java.lang.Integer r7;
        java.util.Map $r4;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        int i0, $i1, i2;
        org.apache.jena.atlas.lib.Pair $r1;
        java.lang.Object $r2, $r5, $r6;
        java.lang.String $r3;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i0 := @parameter0: int;

        i2 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: org.apache.jena.atlas.lib.Pair findBefore(int)>(i0);

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("\'");

        if $z0 == 0 goto label5;

        $r4 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.Map stops>;

        $r5 = virtualinvoke $r1.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.Integer) $r6;

        if r7 != null goto label2;

        return 1;

     label2:
        $i1 = virtualinvoke r7.<java.lang.Integer: int intValue()>();

        if $i1 <= i2 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;

     label5:
        return 0;
    }

    public boolean isBetweenLiterals(int, int)
    {
        java.lang.Integer r7;
        java.util.Map $r4;
        int i0, i1;
        java.lang.String $r3, $r10;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        org.apache.jena.atlas.lib.Pair $r1, $r8;
        java.lang.Object $r2, $r5, $r6, $r9;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: org.apache.jena.atlas.lib.Pair findBefore(int)>(i0);

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r3 = (java.lang.String) $r2;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("\"");

        if $z0 == 0 goto label5;

        $r4 = r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: java.util.Map stops>;

        $r5 = virtualinvoke $r1.<org.apache.jena.atlas.lib.Pair: java.lang.Object getLeft()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r7 = (java.lang.Integer) $r6;

        if r7 != null goto label2;

        return 0;

     label2:
        $r8 = virtualinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: org.apache.jena.atlas.lib.Pair findAfter(int)>(i1);

        if $r8 == null goto label3;

        $r9 = virtualinvoke $r8.<org.apache.jena.atlas.lib.Pair: java.lang.Object getRight()>();

        $r10 = (java.lang.String) $r9;

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("\"");

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;

     label5:
        return 0;
    }

    void <init>(com.hp.hpl.jena.query.ParameterizedSparqlString, com.hp.hpl.jena.query.ParameterizedSparqlString$1)
    {
        com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo r0;
        com.hp.hpl.jena.query.ParameterizedSparqlString r1;
        com.hp.hpl.jena.query.ParameterizedSparqlString$1 r2;

        r0 := @this: com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo;

        r1 := @parameter0: com.hp.hpl.jena.query.ParameterizedSparqlString;

        r2 := @parameter1: com.hp.hpl.jena.query.ParameterizedSparqlString$1;

        specialinvoke r0.<com.hp.hpl.jena.query.ParameterizedSparqlString$DelimiterInfo: void <init>(com.hp.hpl.jena.query.ParameterizedSparqlString)>(r1);

        return;
    }
}
