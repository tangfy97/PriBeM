public final class com.mycila.inject.internal.guava.primitives.UnsignedLongs extends java.lang.Object
{
    public static final long MAX_VALUE;
    private static final long[] maxValueDivs;
    private static final int[] maxValueMods;
    private static final int[] maxSafeDigits;

    private void <init>()
    {
        com.mycila.inject.internal.guava.primitives.UnsignedLongs r0;

        r0 := @this: com.mycila.inject.internal.guava.primitives.UnsignedLongs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static long flip(long)
    {
        long l0, $l1;

        l0 := @parameter0: long;

        $l1 = l0 ^ -9223372036854775808L;

        return $l1;
    }

    public static int compare(long, long)
    {
        int $i4;
        long l0, $l1, l2, $l3;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        $l1 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>(l0);

        $l3 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>(l2);

        $i4 = staticinvoke <com.mycila.inject.internal.guava.primitives.Longs: int compare(long,long)>($l1, $l3);

        return $i4;
    }

    public static transient long min(long[])
    {
        long $l1, $l2, $l3, $l4, l6;
        long[] r0;
        byte $b5;
        int $i0, i7, $i8, $i9;
        boolean $z0;

        r0 := @parameter0: long[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        $l1 = r0[0];

        l6 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>($l1);

        i7 = 1;

     label3:
        $i8 = lengthof r0;

        if i7 >= $i8 goto label5;

        $l3 = r0[i7];

        $l4 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>($l3);

        $b5 = $l4 cmp l6;

        $i9 = (int) $b5;

        if $i9 >= 0 goto label4;

        l6 = $l4;

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        $l2 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>(l6);

        return $l2;
    }

    public static transient long max(long[])
    {
        long $l1, $l2, $l3, $l4, l6;
        long[] r0;
        byte $b5;
        int $i0, i7, $i8, $i9;
        boolean $z0;

        r0 := @parameter0: long[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean)>($z0);

        $l1 = r0[0];

        l6 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>($l1);

        i7 = 1;

     label3:
        $i8 = lengthof r0;

        if i7 >= $i8 goto label5;

        $l3 = r0[i7];

        $l4 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>($l3);

        $b5 = $l4 cmp l6;

        $i9 = (int) $b5;

        if $i9 <= 0 goto label4;

        l6 = $l4;

     label4:
        i7 = i7 + 1;

        goto label3;

     label5:
        $l2 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long flip(long)>(l6);

        return $l2;
    }

    public static transient java.lang.String join(java.lang.String, long[])
    {
        long $l3, $l5;
        long[] r1;
        int $i0, $i1, $i2, $i4, i6;
        java.lang.StringBuilder $r2, $r4;
        java.lang.String r0, $r3, $r5;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: long[];

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = lengthof r1;

        if $i0 != 0 goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        $i1 = lengthof r1;

        $i2 = $i1 * 5;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i2);

        $l3 = r1[0];

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        i6 = 1;

     label2:
        $i4 = lengthof r1;

        if i6 >= $i4 goto label3;

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $l5 = r1[i6];

        $r5 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: java.lang.String toString(long)>($l5);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        i6 = i6 + 1;

        goto label2;

     label3:
        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static java.util.Comparator lexicographicalComparator()
    {
        com.mycila.inject.internal.guava.primitives.UnsignedLongs$LexicographicalComparator $r0;

        $r0 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs$LexicographicalComparator: com.mycila.inject.internal.guava.primitives.UnsignedLongs$LexicographicalComparator INSTANCE>;

        return $r0;
    }

    public static long divide(long, long)
    {
        long l0, l2, $l4, $l5, l6, $l7, l8, $l10, $l11, $l12;
        byte $b1, $b3;
        int $i9, $i13, $i14, $i15;
        boolean $z0;

        l2 := @parameter0: long;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        $i14 = (int) $b1;

        if $i14 >= 0 goto label2;

        $i13 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int compare(long,long)>(l2, l0);

        if $i13 >= 0 goto label1;

        return 0L;

     label1:
        return 1L;

     label2:
        $b3 = l2 cmp 0L;

        $i15 = (int) $b3;

        if $i15 < 0 goto label3;

        $l12 = l2 / l0;

        return $l12;

     label3:
        $l4 = l2 >>> 1;

        $l5 = $l4 / l0;

        l6 = $l5 << 1;

        $l7 = l6 * l0;

        l8 = l2 - $l7;

        $i9 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int compare(long,long)>(l8, l0);

        if $i9 < 0 goto label4;

        $z0 = 1;

        goto label5;

     label4:
        $z0 = 0;

     label5:
        $l10 = (long) $z0;

        $l11 = l6 + $l10;

        return $l11;
    }

    public static long remainder(long, long)
    {
        long l0, l2, $l4, $l5, l6, $l7, l8, $l10, $l11, $l13, $l14;
        byte $b1, $b3;
        int $i9, $i12, $i15, $i16;

        l2 := @parameter0: long;

        l0 := @parameter1: long;

        $b1 = l0 cmp 0L;

        $i15 = (int) $b1;

        if $i15 >= 0 goto label2;

        $i12 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int compare(long,long)>(l2, l0);

        if $i12 >= 0 goto label1;

        return l2;

     label1:
        $l13 = l2 - l0;

        return $l13;

     label2:
        $b3 = l2 cmp 0L;

        $i16 = (int) $b3;

        if $i16 < 0 goto label3;

        $l11 = l2 % l0;

        return $l11;

     label3:
        $l4 = l2 >>> 1;

        $l5 = $l4 / l0;

        l6 = $l5 << 1;

        $l7 = l6 * l0;

        l8 = l2 - $l7;

        $i9 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int compare(long,long)>(l8, l0);

        if $i9 < 0 goto label4;

        $l14 = l0;

        goto label5;

     label4:
        $l14 = 0L;

     label5:
        $l10 = l8 - $l14;

        return $l10;
    }

    public static long parseUnsignedLong(java.lang.String)
    {
        long $l0;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long parseUnsignedLong(java.lang.String,int)>(r0, 10);

        return $l0;
    }

    public static long parseUnsignedLong(java.lang.String, int)
    {
        long $l7, $l8, $l9, l10;
        int[] $r6;
        int $i0, i1, $i2, i3, $i4, $i6, i11, $i13;
        java.lang.String r0, $r5, $r11;
        boolean $z0;
        char $c5;
        java.lang.NumberFormatException $r14, $r16, $r17, $r19;
        java.lang.StringBuilder $r3, $r4, $r9, $r10, $r15, $r18;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r0);

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        $r14 = new java.lang.NumberFormatException;

        specialinvoke $r14.<java.lang.NumberFormatException: void <init>(java.lang.String)>("empty string");

        throw $r14;

     label1:
        if i1 < 2 goto label2;

        if i1 <= 36 goto label3;

     label2:
        $r16 = new java.lang.NumberFormatException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("illegal radix:");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r5);

        throw $r16;

     label3:
        $r6 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int[] maxSafeDigits>;

        $i2 = $r6[i1];

        i3 = $i2 - 1;

        l10 = 0L;

        i11 = 0;

     label4:
        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        if i11 >= $i4 goto label7;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i6 = staticinvoke <java.lang.Character: int digit(char,int)>($c5, i1);

        $i13 = (int) -1;

        if $i6 != $i13 goto label5;

        $r17 = new java.lang.NumberFormatException;

        specialinvoke $r17.<java.lang.NumberFormatException: void <init>(java.lang.String)>(r0);

        throw $r17;

     label5:
        if i11 <= i3 goto label6;

        $z0 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: boolean overflowInParse(long,int,int)>(l10, $i6, i1);

        if $z0 == 0 goto label6;

        $r19 = new java.lang.NumberFormatException;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Too large for unsigned long: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r19.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r11);

        throw $r19;

     label6:
        $l7 = (long) i1;

        $l9 = l10 * $l7;

        $l8 = (long) $i6;

        l10 = $l9 + $l8;

        i11 = i11 + 1;

        goto label4;

     label7:
        return l10;
    }

    private static boolean overflowInParse(long, int, int)
    {
        long l0, $l3, $l5;
        long[] $r0, $r1;
        byte $b1, $b4, $b6;
        int[] $r2;
        int i2, i7, $i8, $i9, $i10, $i11;
        boolean $z0;

        l0 := @parameter0: long;

        i7 := @parameter1: int;

        i2 := @parameter2: int;

        $b1 = l0 cmp 0L;

        $i9 = (int) $b1;

        if $i9 < 0 goto label5;

        $r0 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long[] maxValueDivs>;

        $l3 = $r0[i2];

        $b4 = l0 cmp $l3;

        $i10 = (int) $b4;

        if $i10 >= 0 goto label1;

        return 0;

     label1:
        $r1 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long[] maxValueDivs>;

        $l5 = $r1[i2];

        $b6 = l0 cmp $l5;

        $i11 = (int) $b6;

        if $i11 <= 0 goto label2;

        return 1;

     label2:
        $r2 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int[] maxValueMods>;

        $i8 = $r2[i2];

        if i7 <= $i8 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;

     label5:
        return 1;
    }

    public static java.lang.String toString(long)
    {
        long l0;
        java.lang.String $r0;

        l0 := @parameter0: long;

        $r0 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: java.lang.String toString(long,int)>(l0, 10);

        return $r0;
    }

    public static java.lang.String toString(long, int)
    {
        java.lang.Integer $r3;
        byte $b1, $b2, $b15, $b26, $b28;
        boolean $z0;
        java.lang.Object[] $r2;
        long $l5, $l6, $l9, $l10, $l11, $l12, $l13, $l14, $l16, $l17, $l20, $l21, $l22, $l23, $l24, $l25, l27, l30, l31, l32;
        int i0, $i3, $i4, $i7, $i18, i29, $i33, $i34, $i35, $i37, $i38, $i40;
        java.lang.String $r4;
        char $c8, $c19;
        char[] r0;

        l27 := @parameter0: long;

        i0 := @parameter1: int;

        if i0 < 2 goto label1;

        if i0 > 36 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[1];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2[0] = $r3;

        staticinvoke <com.mycila.inject.internal.guava.base.Preconditions: void checkArgument(boolean,java.lang.String,java.lang.Object[])>($z0, "radix (%s) must be between Character.MIN_RADIX and Character.MAX_RADIX", $r2);

        $b28 = l27 cmp 0L;

        if $b28 != 0 goto label3;

        return "0";

     label3:
        r0 = newarray (char)[64];

        i29 = lengthof r0;

        $b1 = l27 cmp 0L;

        $i33 = (int) $b1;

        if $i33 >= 0 goto label7;

        l30 = l27 >>> 32;

        $l13 = l27 & 4294967295L;

        $l10 = (long) i0;

        $l11 = l30 % $l10;

        $l12 = $l11 << 32;

        l31 = $l13 + $l12;

        $l14 = (long) i0;

        l32 = l30 / $l14;

     label4:
        $b15 = l31 cmp 0L;

        $i34 = (int) $b15;

        if $i34 > 0 goto label5;

        $b26 = l32 cmp 0L;

        $i35 = (int) $b26;

        if $i35 <= 0 goto label6;

     label5:
        $i37 = (int) -1;

        i29 = i29 + $i37;

        $l16 = (long) i0;

        $l17 = l31 % $l16;

        $i18 = (int) $l17;

        $c19 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i18, i0);

        r0[i29] = $c19;

        $l20 = (long) i0;

        $l24 = l31 / $l20;

        $l21 = (long) i0;

        $l22 = l32 % $l21;

        $l23 = $l22 << 32;

        l31 = $l24 + $l23;

        $l25 = (long) i0;

        l32 = l32 / $l25;

        goto label4;

     label6:
        goto label8;

     label7:
        $b2 = l27 cmp 0L;

        $i38 = (int) $b2;

        if $i38 <= 0 goto label8;

        $i40 = (int) -1;

        i29 = i29 + $i40;

        $l5 = (long) i0;

        $l6 = l27 % $l5;

        $i7 = (int) $l6;

        $c8 = staticinvoke <java.lang.Character: char forDigit(int,int)>($i7, i0);

        r0[i29] = $c8;

        $l9 = (long) i0;

        l27 = l27 / $l9;

        goto label7;

     label8:
        $r4 = new java.lang.String;

        $i3 = lengthof r0;

        $i4 = $i3 - i29;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r0, i29, $i4);

        return $r4;
    }

    static void <clinit>()
    {
        long $l0, $l1, $l2, $l3;
        long[] $r0, $r4;
        int[] $r1, $r2, $r5, $r6;
        int $i4, $i5, $i6, i7;
        java.math.BigInteger $r3;
        java.lang.String $r7;

        <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long MAX_VALUE> = -1L;

        $r0 = newarray (long)[37];

        <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long[] maxValueDivs> = $r0;

        $r1 = newarray (int)[37];

        <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int[] maxValueMods> = $r1;

        $r2 = newarray (int)[37];

        <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int[] maxSafeDigits> = $r2;

        $r3 = new java.math.BigInteger;

        specialinvoke $r3.<java.math.BigInteger: void <init>(java.lang.String,int)>("10000000000000000", 16);

        i7 = 2;

     label1:
        if i7 > 36 goto label2;

        $r4 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long[] maxValueDivs>;

        $l0 = (long) i7;

        $l1 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long divide(long,long)>(-1L, $l0);

        $r4[i7] = $l1;

        $r5 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int[] maxValueMods>;

        $l2 = (long) i7;

        $l3 = staticinvoke <com.mycila.inject.internal.guava.primitives.UnsignedLongs: long remainder(long,long)>(-1L, $l2);

        $i4 = (int) $l3;

        $r5[i7] = $i4;

        $r6 = <com.mycila.inject.internal.guava.primitives.UnsignedLongs: int[] maxSafeDigits>;

        $r7 = virtualinvoke $r3.<java.math.BigInteger: java.lang.String toString(int)>(i7);

        $i5 = virtualinvoke $r7.<java.lang.String: int length()>();

        $i6 = $i5 - 1;

        $r6[i7] = $i6;

        i7 = i7 + 1;

        goto label1;

     label2:
        return;
    }
}
