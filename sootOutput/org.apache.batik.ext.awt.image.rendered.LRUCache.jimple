public class org.apache.batik.ext.awt.image.rendered.LRUCache extends java.lang.Object
{
    private org.apache.batik.util.DoublyLinkedList free;
    private org.apache.batik.util.DoublyLinkedList used;
    private int maxSize;

    public void <init>(int)
    {
        org.apache.batik.util.DoublyLinkedList $r4, $r5, $r6;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode $r7;
        int i0, $i2;
        org.apache.batik.ext.awt.image.rendered.LRUCache r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: int maxSize> = 0;

        if i0 > 0 goto label1;

        i0 = 1;

     label1:
        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: int maxSize> = i0;

        $r5 = new org.apache.batik.util.DoublyLinkedList;

        specialinvoke $r5.<org.apache.batik.util.DoublyLinkedList: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free> = $r5;

        $r6 = new org.apache.batik.util.DoublyLinkedList;

        specialinvoke $r6.<org.apache.batik.util.DoublyLinkedList: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used> = $r6;

        goto label3;

     label2:
        $r4 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        $r7 = new org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode;

        specialinvoke $r7.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void <init>(org.apache.batik.ext.awt.image.rendered.LRUCache)>(r0);

        virtualinvoke $r4.<org.apache.batik.util.DoublyLinkedList: void add(org.apache.batik.util.DoublyLinkedList$Node)>($r7);

        $i2 = (int) -1;

        i0 = i0 + $i2;

     label3:
        if i0 > 0 goto label2;

        return;
    }

    public int getUsed()
    {
        int $i0;
        org.apache.batik.util.DoublyLinkedList $r1;
        org.apache.batik.ext.awt.image.rendered.LRUCache r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $i0 = virtualinvoke $r1.<org.apache.batik.util.DoublyLinkedList: int getSize()>();

        return $i0;
    }

    public synchronized void setSize(int)
    {
        org.apache.batik.ext.awt.image.rendered.LRUCache r0;
        org.apache.batik.util.DoublyLinkedList $r1, $r2, $r5, $r7;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode r4, $r8;
        int i0, $i1, $i2, i3, i4, $i6;
        org.apache.batik.util.DoublyLinkedList$Node $r3;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: int maxSize>;

        if $i1 >= i0 goto label3;

        i3 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: int maxSize>;

        goto label2;

     label1:
        $r7 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        $r8 = new org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode;

        specialinvoke $r8.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void <init>(org.apache.batik.ext.awt.image.rendered.LRUCache)>(r0);

        virtualinvoke $r7.<org.apache.batik.util.DoublyLinkedList: void add(org.apache.batik.util.DoublyLinkedList$Node)>($r8);

        i3 = i3 + 1;

     label2:
        if i3 < i0 goto label1;

        goto label6;

     label3:
        $i2 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: int maxSize>;

        if $i2 <= i0 goto label6;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        i4 = virtualinvoke $r1.<org.apache.batik.util.DoublyLinkedList: int getSize()>();

        goto label5;

     label4:
        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node getTail()>();

        r4 = (org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode) $r3;

        $r5 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        virtualinvoke $r5.<org.apache.batik.util.DoublyLinkedList: void remove(org.apache.batik.util.DoublyLinkedList$Node)>(r4);

        virtualinvoke r4.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void setObj(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(null);

        $i6 = (int) -1;

        i4 = i4 + $i6;

     label5:
        if i4 > i0 goto label4;

     label6:
        r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: int maxSize> = i0;

        return;
    }

    public synchronized void flush()
    {
        org.apache.batik.util.DoublyLinkedList $r1, $r2, $r5;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode r4;
        int $i0;
        org.apache.batik.util.DoublyLinkedList$Node $r3;
        org.apache.batik.ext.awt.image.rendered.LRUCache r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $r3 = virtualinvoke $r2.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node pop()>();

        r4 = (org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode) $r3;

        virtualinvoke r4.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void setObj(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(null);

        $r5 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        virtualinvoke $r5.<org.apache.batik.util.DoublyLinkedList: void add(org.apache.batik.util.DoublyLinkedList$Node)>(r4);

     label2:
        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $i0 = virtualinvoke $r1.<org.apache.batik.util.DoublyLinkedList: int getSize()>();

        if $i0 > 0 goto label1;

        return;
    }

    public synchronized void remove(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)
    {
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj r0;
        org.apache.batik.util.DoublyLinkedList $r3, $r4;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode $r1;
        org.apache.batik.ext.awt.image.rendered.LRUCache r2;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        r0 := @parameter0: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj;

        $r1 = interfaceinvoke r0.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode lruGet()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        virtualinvoke $r3.<org.apache.batik.util.DoublyLinkedList: void remove(org.apache.batik.util.DoublyLinkedList$Node)>($r1);

        virtualinvoke $r1.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void setObj(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(null);

        $r4 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        virtualinvoke $r4.<org.apache.batik.util.DoublyLinkedList: void add(org.apache.batik.util.DoublyLinkedList$Node)>($r1);

        return;
    }

    public synchronized void touch(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)
    {
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj r0;
        org.apache.batik.util.DoublyLinkedList $r3;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode $r1;
        org.apache.batik.ext.awt.image.rendered.LRUCache r2;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        r0 := @parameter0: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj;

        $r1 = interfaceinvoke r0.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode lruGet()>();

        if $r1 != null goto label1;

        return;

     label1:
        $r3 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        virtualinvoke $r3.<org.apache.batik.util.DoublyLinkedList: void touch(org.apache.batik.util.DoublyLinkedList$Node)>($r1);

        return;
    }

    public synchronized void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)
    {
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj r0;
        org.apache.batik.ext.awt.image.rendered.LRUCache r2;
        org.apache.batik.util.DoublyLinkedList $r3, $r4, $r6, $r7, $r9, $r10;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode $r1, r11, r12;
        int $i0;
        org.apache.batik.util.DoublyLinkedList$Node $r5, $r8;

        r2 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        r0 := @parameter0: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj;

        $r1 = interfaceinvoke r0.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode lruGet()>();

        if $r1 == null goto label1;

        $r10 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        virtualinvoke $r10.<org.apache.batik.util.DoublyLinkedList: void touch(org.apache.batik.util.DoublyLinkedList$Node)>($r1);

        return;

     label1:
        $r3 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        $i0 = virtualinvoke $r3.<org.apache.batik.util.DoublyLinkedList: int getSize()>();

        if $i0 <= 0 goto label2;

        $r7 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        $r8 = virtualinvoke $r7.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node pop()>();

        r11 = (org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode) $r8;

        virtualinvoke r11.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void setObj(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r0);

        $r9 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        virtualinvoke $r9.<org.apache.batik.util.DoublyLinkedList: void add(org.apache.batik.util.DoublyLinkedList$Node)>(r11);

        goto label3;

     label2:
        $r4 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $r5 = virtualinvoke $r4.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node getTail()>();

        r12 = (org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode) $r5;

        virtualinvoke r12.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: void setObj(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r0);

        $r6 = r2.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        virtualinvoke $r6.<org.apache.batik.util.DoublyLinkedList: void touch(org.apache.batik.util.DoublyLinkedList$Node)>(r12);

     label3:
        return;
    }

    protected synchronized void print()
    {
        org.apache.batik.util.DoublyLinkedList $r4, $r7, $r10, $r15;
        java.lang.StringBuffer $r0, $r2, $r5, $r6, $r8;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode $r17, r18;
        int $i0, $i1;
        java.lang.String $r9;
        java.io.PrintStream $r1, $r12;
        org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj $r13;
        org.apache.batik.ext.awt.image.rendered.LRUCache r3;
        org.apache.batik.util.DoublyLinkedList$Node $r11, $r14, $r16;

        r3 := @this: org.apache.batik.ext.awt.image.rendered.LRUCache;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("In Use: ");

        $r4 = r3.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $i0 = virtualinvoke $r4.<org.apache.batik.util.DoublyLinkedList: int getSize()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Free: ");

        $r7 = r3.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList free>;

        $i1 = virtualinvoke $r7.<org.apache.batik.util.DoublyLinkedList: int getSize()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

        $r10 = r3.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $r11 = virtualinvoke $r10.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node getHead()>();

        r18 = (org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode) $r11;

        if r18 != null goto label1;

        return;

     label1:
        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r13 = virtualinvoke r18.<org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode: org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj getObj()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.Object)>($r13);

        $r14 = virtualinvoke r18.<org.apache.batik.util.DoublyLinkedList$Node: org.apache.batik.util.DoublyLinkedList$Node getNext()>();

        $r17 = (org.apache.batik.ext.awt.image.rendered.LRUCache$LRUNode) $r14;

        r18 = $r17;

        $r15 = r3.<org.apache.batik.ext.awt.image.rendered.LRUCache: org.apache.batik.util.DoublyLinkedList used>;

        $r16 = virtualinvoke $r15.<org.apache.batik.util.DoublyLinkedList: org.apache.batik.util.DoublyLinkedList$Node getHead()>();

        if $r17 != $r16 goto label1;

        return;
    }
}
