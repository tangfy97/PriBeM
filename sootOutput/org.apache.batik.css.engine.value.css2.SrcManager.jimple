public class org.apache.batik.css.engine.value.css2.SrcManager extends org.apache.batik.css.engine.value.IdentifierManager
{
    protected static final org.apache.batik.css.engine.value.StringMap values;

    public void <init>()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        specialinvoke r0.<org.apache.batik.css.engine.value.IdentifierManager: void <init>()>();

        return;
    }

    public boolean isInheritedProperty()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        return 0;
    }

    public boolean isAnimatableProperty()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        return 0;
    }

    public boolean isAdditiveProperty()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        return 0;
    }

    public int getPropertyType()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        return 38;
    }

    public java.lang.String getPropertyName()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r0;

        r0 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        return "src";
    }

    public org.apache.batik.css.engine.value.Value getDefaultValue()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r1;
        org.apache.batik.css.engine.value.Value $r0;

        r1 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        $r0 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        return $r0;
    }

    public org.apache.batik.css.engine.value.Value createValue(org.w3c.css.sac.LexicalUnit, org.apache.batik.css.engine.CSSEngine) throws org.w3c.dom.DOMException
    {
        org.w3c.css.sac.LexicalUnit $r3, $r9, $r17, $r26, r30;
        boolean $z0;
        org.apache.batik.css.engine.value.StringValue $r33, $r36, $r37;
        org.apache.batik.css.engine.value.css2.SrcManager r4;
        org.apache.batik.css.engine.value.ListValue $r32;
        org.apache.batik.util.ParsedURL $r21;
        org.apache.batik.css.engine.CSSEngine r20;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6, $s7;
        java.lang.StringBuffer $r35;
        org.w3c.dom.DOMException $r5, $r6, $r29;
        int $i8, $i9, $i10, $i11, $i12;
        org.apache.batik.css.engine.value.URIValue $r34;
        java.lang.String $r2, $r8, $r10, $r11, $r12, $r16, $r19, $r22, $r23, $r25, $r27;
        org.apache.batik.css.engine.value.Value $r15, $r28, $r31;
        java.lang.Object $r14;
        org.apache.batik.css.engine.value.StringMap $r13;

        r4 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        r30 := @parameter0: org.w3c.css.sac.LexicalUnit;

        r20 := @parameter1: org.apache.batik.css.engine.CSSEngine;

        $s0 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i8 = (int) $s0;

        lookupswitch($i8)
        {
            case 12: goto label01;
            case 24: goto label03;
            case 35: goto label03;
            case 36: goto label03;
            default: goto label02;
        };

     label01:
        $r28 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value INHERIT_VALUE>;

        return $r28;

     label02:
        $s7 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r29 = virtualinvoke r4.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s7);

        throw $r29;

     label03:
        $r32 = new org.apache.batik.css.engine.value.ListValue;

        specialinvoke $r32.<org.apache.batik.css.engine.value.ListValue: void <init>()>();

        goto label04;

     label04:
        $s1 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i9 = (int) $s1;

        lookupswitch($i9)
        {
            case 24: goto label06;
            case 35: goto label08;
            case 36: goto label05;
            default: goto label14;
        };

     label05:
        $r33 = new org.apache.batik.css.engine.value.StringValue;

        $r2 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        specialinvoke $r33.<org.apache.batik.css.engine.value.StringValue: void <init>(short,java.lang.String)>(19, $r2);

        virtualinvoke $r32.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r33);

        r30 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        goto label14;

     label06:
        $r21 = virtualinvoke r20.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.util.ParsedURL getCSSBaseURI()>();

        $r22 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        $r23 = staticinvoke <org.apache.batik.css.engine.value.AbstractValueFactory: java.lang.String resolveURI(org.apache.batik.util.ParsedURL,java.lang.String)>($r21, $r22);

        $r34 = new org.apache.batik.css.engine.value.URIValue;

        $r25 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        specialinvoke $r34.<org.apache.batik.css.engine.value.URIValue: void <init>(java.lang.String,java.lang.String)>($r25, $r23);

        virtualinvoke $r32.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r34);

        $r26 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        r30 = $r26;

        if $r26 == null goto label14;

        $s6 = interfaceinvoke $r26.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i10 = (int) $s6;

        if $i10 != 41 goto label14;

        $r27 = interfaceinvoke $r26.<org.w3c.css.sac.LexicalUnit: java.lang.String getFunctionName()>();

        $z0 = virtualinvoke $r27.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("format");

        if $z0 != 0 goto label07;

        goto label14;

     label07:
        r30 = interfaceinvoke $r26.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        goto label14;

     label08:
        $r35 = new java.lang.StringBuffer;

        $r8 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        specialinvoke $r35.<java.lang.StringBuffer: void <init>(java.lang.String)>($r8);

        $r9 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        r30 = $r9;

        if $r9 == null goto label11;

        $s4 = interfaceinvoke $r9.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i11 = (int) $s4;

        if $i11 != 35 goto label11;

     label09:
        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r16 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: java.lang.String getStringValue()>();

        virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r17 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        r30 = $r17;

        if $r17 == null goto label10;

        $s5 = interfaceinvoke $r17.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $i12 = (int) $s5;

        if $i12 == 35 goto label09;

     label10:
        $r36 = new org.apache.batik.css.engine.value.StringValue;

        $r19 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r36.<org.apache.batik.css.engine.value.StringValue: void <init>(short,java.lang.String)>(19, $r19);

        virtualinvoke $r32.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r36);

        goto label14;

     label11:
        $r10 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r11 = virtualinvoke $r10.<java.lang.String: java.lang.String toLowerCase()>();

        $r12 = virtualinvoke $r11.<java.lang.String: java.lang.String intern()>();

        $r13 = <org.apache.batik.css.engine.value.css2.SrcManager: org.apache.batik.css.engine.value.StringMap values>;

        $r14 = virtualinvoke $r13.<org.apache.batik.css.engine.value.StringMap: java.lang.Object get(java.lang.String)>($r12);

        $r15 = (org.apache.batik.css.engine.value.Value) $r14;

        if $r15 == null goto label12;

        $r31 = $r15;

        goto label13;

     label12:
        $r37 = new org.apache.batik.css.engine.value.StringValue;

        $r31 = $r37;

        specialinvoke $r37.<org.apache.batik.css.engine.value.StringValue: void <init>(short,java.lang.String)>(19, $r10);

     label13:
        virtualinvoke $r32.<org.apache.batik.css.engine.value.ListValue: void append(org.apache.batik.css.engine.value.Value)>($r31);

     label14:
        if r30 != null goto label15;

        return $r32;

     label15:
        $s2 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        if $s2 == 0 goto label16;

        $s3 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: short getLexicalUnitType()>();

        $r6 = virtualinvoke r4.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createInvalidLexicalUnitDOMException(short)>($s3);

        throw $r6;

     label16:
        $r3 = interfaceinvoke r30.<org.w3c.css.sac.LexicalUnit: org.w3c.css.sac.LexicalUnit getNextLexicalUnit()>();

        r30 = $r3;

        if $r3 != null goto label17;

        $r5 = virtualinvoke r4.<org.apache.batik.css.engine.value.AbstractValueFactory: org.w3c.dom.DOMException createMalformedLexicalUnitDOMException()>();

        throw $r5;

     label17:
        goto label04;
    }

    public org.apache.batik.css.engine.value.StringMap getIdentifiers()
    {
        org.apache.batik.css.engine.value.css2.SrcManager r1;
        org.apache.batik.css.engine.value.StringMap $r0;

        r1 := @this: org.apache.batik.css.engine.value.css2.SrcManager;

        $r0 = <org.apache.batik.css.engine.value.css2.SrcManager: org.apache.batik.css.engine.value.StringMap values>;

        return $r0;
    }

    static void <clinit>()
    {
        org.apache.batik.css.engine.value.StringMap $r0, $r2;
        org.apache.batik.css.engine.value.Value $r1;

        $r0 = new org.apache.batik.css.engine.value.StringMap;

        specialinvoke $r0.<org.apache.batik.css.engine.value.StringMap: void <init>()>();

        <org.apache.batik.css.engine.value.css2.SrcManager: org.apache.batik.css.engine.value.StringMap values> = $r0;

        $r2 = <org.apache.batik.css.engine.value.css2.SrcManager: org.apache.batik.css.engine.value.StringMap values>;

        $r1 = <org.apache.batik.css.engine.value.ValueConstants: org.apache.batik.css.engine.value.Value NONE_VALUE>;

        virtualinvoke $r2.<org.apache.batik.css.engine.value.StringMap: java.lang.Object put(java.lang.String,java.lang.Object)>("none", $r1);

        return;
    }
}
