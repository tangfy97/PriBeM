class groovy.util.slurpersupport.Node$3 extends java.lang.Object implements java.util.Iterator
{
    private final java.util.Iterator iter;
    private java.lang.Object nextElementNodes;
    private final groovy.util.slurpersupport.Node this$0;

    void <init>(groovy.util.slurpersupport.Node)
    {
        groovy.util.slurpersupport.Node r1, $r2;
        java.util.List $r3;
        java.util.Iterator $r4;
        groovy.util.slurpersupport.Node$3 r0;
        java.lang.Object $r5;

        r0 := @this: groovy.util.slurpersupport.Node$3;

        r1 := @parameter0: groovy.util.slurpersupport.Node;

        r0.<groovy.util.slurpersupport.Node$3: groovy.util.slurpersupport.Node this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = r0.<groovy.util.slurpersupport.Node$3: groovy.util.slurpersupport.Node this$0>;

        $r3 = staticinvoke <groovy.util.slurpersupport.Node: java.util.List access$100(groovy.util.slurpersupport.Node)>($r2);

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

        r0.<groovy.util.slurpersupport.Node$3: java.util.Iterator iter> = $r4;

        $r5 = specialinvoke r0.<groovy.util.slurpersupport.Node$3: java.lang.Object getNextElementNodes()>();

        r0.<groovy.util.slurpersupport.Node$3: java.lang.Object nextElementNodes> = $r5;

        return;
    }

    public boolean hasNext()
    {
        groovy.util.slurpersupport.Node$3 r0;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: groovy.util.slurpersupport.Node$3;

        $r1 = r0.<groovy.util.slurpersupport.Node$3: java.lang.Object nextElementNodes>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Throwable $r3;
        groovy.util.slurpersupport.Node$3 r0;
        java.lang.Object r1, $r2, $r4;

        r0 := @this: groovy.util.slurpersupport.Node$3;

     label1:
        r1 = r0.<groovy.util.slurpersupport.Node$3: java.lang.Object nextElementNodes>;

     label2:
        $r2 = specialinvoke r0.<groovy.util.slurpersupport.Node$3: java.lang.Object getNextElementNodes()>();

        r0.<groovy.util.slurpersupport.Node$3: java.lang.Object nextElementNodes> = $r2;

        return r1;

     label3:
        $r3 := @caughtexception;

     label4:
        $r4 = specialinvoke r0.<groovy.util.slurpersupport.Node$3: java.lang.Object getNextElementNodes()>();

        r0.<groovy.util.slurpersupport.Node$3: java.lang.Object nextElementNodes> = $r4;

        throw $r3;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        groovy.util.slurpersupport.Node$3 r1;

        r1 := @this: groovy.util.slurpersupport.Node$3;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    private java.lang.Object getNextElementNodes()
    {
        java.util.Iterator $r1, $r2;
        groovy.util.slurpersupport.Node$3 r0;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: groovy.util.slurpersupport.Node$3;

     label1:
        $r1 = r0.<groovy.util.slurpersupport.Node$3: java.util.Iterator iter>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = r0.<groovy.util.slurpersupport.Node$3: java.util.Iterator iter>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = $r3 instanceof groovy.util.slurpersupport.Node;

        if $z1 == 0 goto label2;

        return $r3;

     label2:
        goto label1;

     label3:
        return null;
    }
}
