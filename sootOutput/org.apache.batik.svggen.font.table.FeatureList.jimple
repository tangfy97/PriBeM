public class org.apache.batik.svggen.font.table.FeatureList extends java.lang.Object
{
    private int featureCount;
    private org.apache.batik.svggen.font.table.FeatureRecord[] featureRecords;
    private org.apache.batik.svggen.font.table.Feature[] features;

    public void <init>(java.io.RandomAccessFile, int) throws java.io.IOException
    {
        org.apache.batik.svggen.font.table.FeatureList r0;
        java.io.RandomAccessFile r1;
        long $l1;
        org.apache.batik.svggen.font.table.FeatureRecord $r4, $r8;
        int i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10;
        org.apache.batik.svggen.font.table.FeatureRecord[] $r2, $r5, $r7;
        org.apache.batik.svggen.font.table.Feature[] $r3, $r9;
        org.apache.batik.svggen.font.table.Feature $r6;

        r0 := @this: org.apache.batik.svggen.font.table.FeatureList;

        r1 := @parameter0: java.io.RandomAccessFile;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $l1 = (long) i0;

        virtualinvoke r1.<java.io.RandomAccessFile: void seek(long)>($l1);

        $i2 = virtualinvoke r1.<java.io.RandomAccessFile: int readUnsignedShort()>();

        r0.<org.apache.batik.svggen.font.table.FeatureList: int featureCount> = $i2;

        $i3 = r0.<org.apache.batik.svggen.font.table.FeatureList: int featureCount>;

        $r2 = newarray (org.apache.batik.svggen.font.table.FeatureRecord)[$i3];

        r0.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.FeatureRecord[] featureRecords> = $r2;

        $i4 = r0.<org.apache.batik.svggen.font.table.FeatureList: int featureCount>;

        $r3 = newarray (org.apache.batik.svggen.font.table.Feature)[$i4];

        r0.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.Feature[] features> = $r3;

        i9 = 0;

        goto label2;

     label1:
        $r5 = r0.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.FeatureRecord[] featureRecords>;

        $r4 = new org.apache.batik.svggen.font.table.FeatureRecord;

        specialinvoke $r4.<org.apache.batik.svggen.font.table.FeatureRecord: void <init>(java.io.RandomAccessFile)>(r1);

        $r5[i9] = $r4;

        i9 = i9 + 1;

     label2:
        $i5 = r0.<org.apache.batik.svggen.font.table.FeatureList: int featureCount>;

        if i9 < $i5 goto label1;

        i10 = 0;

        goto label4;

     label3:
        $r9 = r0.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.Feature[] features>;

        $r6 = new org.apache.batik.svggen.font.table.Feature;

        $r7 = r0.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.FeatureRecord[] featureRecords>;

        $r8 = $r7[i10];

        $i7 = virtualinvoke $r8.<org.apache.batik.svggen.font.table.FeatureRecord: int getOffset()>();

        $i8 = i0 + $i7;

        specialinvoke $r6.<org.apache.batik.svggen.font.table.Feature: void <init>(java.io.RandomAccessFile,int)>(r1, $i8);

        $r9[i10] = $r6;

        i10 = i10 + 1;

     label4:
        $i6 = r0.<org.apache.batik.svggen.font.table.FeatureList: int featureCount>;

        if i10 < $i6 goto label3;

        return;
    }

    public org.apache.batik.svggen.font.table.Feature findFeature(org.apache.batik.svggen.font.table.LangSys, java.lang.String)
    {
        org.apache.batik.svggen.font.table.FeatureList r1;
        org.apache.batik.svggen.font.table.FeatureRecord $r3;
        int $i0, $i2, $i4, $i5, $i7, $i8, i10, $i11, i12, $i13, $i14, $i15, $i16, $i17;
        java.lang.String r0;
        org.apache.batik.svggen.font.table.FeatureRecord[] $r2;
        boolean $z0;
        org.apache.batik.svggen.font.table.Feature[] $r5;
        char $c1, $c3, $c6, $c9;
        org.apache.batik.svggen.font.table.LangSys r4;
        org.apache.batik.svggen.font.table.Feature $r6;

        r1 := @this: org.apache.batik.svggen.font.table.FeatureList;

        r4 := @parameter0: org.apache.batik.svggen.font.table.LangSys;

        r0 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 4 goto label1;

        return null;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i14 = (int) $c1;

        $i2 = $i14 << 24;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        $i15 = (int) $c3;

        $i4 = $i15 << 16;

        $i5 = $i2 | $i4;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>(2);

        $i16 = (int) $c6;

        $i7 = $i16 << 8;

        $i8 = $i5 | $i7;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>(3);

        $i17 = (int) $c9;

        i10 = $i8 | $i17;

        i12 = 0;

        goto label4;

     label2:
        $r2 = r1.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.FeatureRecord[] featureRecords>;

        $r3 = $r2[i12];

        $i11 = virtualinvoke $r3.<org.apache.batik.svggen.font.table.FeatureRecord: int getTag()>();

        if $i11 != i10 goto label3;

        $z0 = virtualinvoke r4.<org.apache.batik.svggen.font.table.LangSys: boolean isFeatureIndexed(int)>(i12);

        if $z0 == 0 goto label3;

        $r5 = r1.<org.apache.batik.svggen.font.table.FeatureList: org.apache.batik.svggen.font.table.Feature[] features>;

        $r6 = $r5[i12];

        return $r6;

     label3:
        i12 = i12 + 1;

     label4:
        $i13 = r1.<org.apache.batik.svggen.font.table.FeatureList: int featureCount>;

        if i12 < $i13 goto label2;

        return null;
    }
}
