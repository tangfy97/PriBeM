public interface  org.apache.poi.ss.usermodel.Sheet extends java.lang.Object implements java.lang.Iterable
{
    public static final short LeftMargin;
    public static final short RightMargin;
    public static final short TopMargin;
    public static final short BottomMargin;
    public static final short HeaderMargin;
    public static final short FooterMargin;
    public static final byte PANE_LOWER_RIGHT;
    public static final byte PANE_UPPER_RIGHT;
    public static final byte PANE_LOWER_LEFT;
    public static final byte PANE_UPPER_LEFT;

    public abstract org.apache.poi.ss.usermodel.Row createRow(int);

    public abstract void removeRow(org.apache.poi.ss.usermodel.Row);

    public abstract org.apache.poi.ss.usermodel.Row getRow(int);

    public abstract int getPhysicalNumberOfRows();

    public abstract int getFirstRowNum();

    public abstract int getLastRowNum();

    public abstract void setColumnHidden(int, boolean);

    public abstract boolean isColumnHidden(int);

    public abstract void setRightToLeft(boolean);

    public abstract boolean isRightToLeft();

    public abstract void setColumnWidth(int, int);

    public abstract int getColumnWidth(int);

    public abstract void setDefaultColumnWidth(int);

    public abstract int getDefaultColumnWidth();

    public abstract short getDefaultRowHeight();

    public abstract float getDefaultRowHeightInPoints();

    public abstract void setDefaultRowHeight(short);

    public abstract void setDefaultRowHeightInPoints(float);

    public abstract org.apache.poi.ss.usermodel.CellStyle getColumnStyle(int);

    public abstract int addMergedRegion(org.apache.poi.ss.util.CellRangeAddress);

    public abstract void setVerticallyCenter(boolean);

    public abstract void setHorizontallyCenter(boolean);

    public abstract boolean getHorizontallyCenter();

    public abstract boolean getVerticallyCenter();

    public abstract void removeMergedRegion(int);

    public abstract int getNumMergedRegions();

    public abstract org.apache.poi.ss.util.CellRangeAddress getMergedRegion(int);

    public abstract java.util.Iterator rowIterator();

    public abstract void setForceFormulaRecalculation(boolean);

    public abstract boolean getForceFormulaRecalculation();

    public abstract void setAutobreaks(boolean);

    public abstract void setDisplayGuts(boolean);

    public abstract void setDisplayZeros(boolean);

    public abstract boolean isDisplayZeros();

    public abstract void setFitToPage(boolean);

    public abstract void setRowSumsBelow(boolean);

    public abstract void setRowSumsRight(boolean);

    public abstract boolean getAutobreaks();

    public abstract boolean getDisplayGuts();

    public abstract boolean getFitToPage();

    public abstract boolean getRowSumsBelow();

    public abstract boolean getRowSumsRight();

    public abstract boolean isPrintGridlines();

    public abstract void setPrintGridlines(boolean);

    public abstract org.apache.poi.ss.usermodel.PrintSetup getPrintSetup();

    public abstract org.apache.poi.ss.usermodel.Header getHeader();

    public abstract org.apache.poi.ss.usermodel.Footer getFooter();

    public abstract void setSelected(boolean);

    public abstract double getMargin(short);

    public abstract void setMargin(short, double);

    public abstract boolean getProtect();

    public abstract void protectSheet(java.lang.String);

    public abstract boolean getScenarioProtect();

    public abstract void setZoom(int, int);

    public abstract short getTopRow();

    public abstract short getLeftCol();

    public abstract void showInPane(int, int);

    public abstract void showInPane(short, short);

    public abstract void shiftRows(int, int, int);

    public abstract void shiftRows(int, int, int, boolean, boolean);

    public abstract void createFreezePane(int, int, int, int);

    public abstract void createFreezePane(int, int);

    public abstract void createSplitPane(int, int, int, int, int);

    public abstract org.apache.poi.hssf.util.PaneInformation getPaneInformation();

    public abstract void setDisplayGridlines(boolean);

    public abstract boolean isDisplayGridlines();

    public abstract void setDisplayFormulas(boolean);

    public abstract boolean isDisplayFormulas();

    public abstract void setDisplayRowColHeadings(boolean);

    public abstract boolean isDisplayRowColHeadings();

    public abstract void setRowBreak(int);

    public abstract boolean isRowBroken(int);

    public abstract void removeRowBreak(int);

    public abstract int[] getRowBreaks();

    public abstract int[] getColumnBreaks();

    public abstract void setColumnBreak(int);

    public abstract boolean isColumnBroken(int);

    public abstract void removeColumnBreak(int);

    public abstract void setColumnGroupCollapsed(int, boolean);

    public abstract void groupColumn(int, int);

    public abstract void ungroupColumn(int, int);

    public abstract void groupRow(int, int);

    public abstract void ungroupRow(int, int);

    public abstract void setRowGroupCollapsed(int, boolean);

    public abstract void setDefaultColumnStyle(int, org.apache.poi.ss.usermodel.CellStyle);

    public abstract void autoSizeColumn(int);

    public abstract void autoSizeColumn(int, boolean);

    public abstract org.apache.poi.ss.usermodel.Comment getCellComment(int, int);

    public abstract org.apache.poi.ss.usermodel.Drawing createDrawingPatriarch();

    public abstract org.apache.poi.ss.usermodel.Workbook getWorkbook();

    public abstract java.lang.String getSheetName();

    public abstract boolean isSelected();

    public abstract org.apache.poi.ss.usermodel.CellRange setArrayFormula(java.lang.String, org.apache.poi.ss.util.CellRangeAddress);

    public abstract org.apache.poi.ss.usermodel.CellRange removeArrayFormula(org.apache.poi.ss.usermodel.Cell);

    public abstract org.apache.poi.ss.usermodel.DataValidationHelper getDataValidationHelper();

    public abstract void addValidationData(org.apache.poi.ss.usermodel.DataValidation);

    public abstract org.apache.poi.ss.usermodel.AutoFilter setAutoFilter(org.apache.poi.ss.util.CellRangeAddress);

    public abstract org.apache.poi.ss.usermodel.SheetConditionalFormatting getSheetConditionalFormatting();

    public abstract org.apache.poi.ss.util.CellRangeAddress getRepeatingRows();

    public abstract org.apache.poi.ss.util.CellRangeAddress getRepeatingColumns();

    public abstract void setRepeatingRows(org.apache.poi.ss.util.CellRangeAddress);

    public abstract void setRepeatingColumns(org.apache.poi.ss.util.CellRangeAddress);

    public static void <clinit>()
    {
        <org.apache.poi.ss.usermodel.Sheet: byte PANE_UPPER_LEFT> = 3;

        <org.apache.poi.ss.usermodel.Sheet: byte PANE_LOWER_LEFT> = 2;

        <org.apache.poi.ss.usermodel.Sheet: byte PANE_UPPER_RIGHT> = 1;

        <org.apache.poi.ss.usermodel.Sheet: byte PANE_LOWER_RIGHT> = 0;

        <org.apache.poi.ss.usermodel.Sheet: short FooterMargin> = 5;

        <org.apache.poi.ss.usermodel.Sheet: short HeaderMargin> = 4;

        <org.apache.poi.ss.usermodel.Sheet: short BottomMargin> = 3;

        <org.apache.poi.ss.usermodel.Sheet: short TopMargin> = 2;

        <org.apache.poi.ss.usermodel.Sheet: short RightMargin> = 1;

        <org.apache.poi.ss.usermodel.Sheet: short LeftMargin> = 0;

        return;
    }
}
