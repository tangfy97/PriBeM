public class ucar.util.prefs.XMLStore extends java.lang.Object
{
    private static boolean debugRead;
    private static boolean debugReadValues;
    private static boolean debugWhichStore;
    private static boolean debugWriteNested;
    private static boolean debugWriteBean;
    private java.io.File prefsFile;
    private ucar.util.prefs.PreferencesExt rootPrefs;
    private boolean showDecoderExceptions;
    private static final int BUFF_SIZE;
    private static final java.lang.String prologue;
    private static final java.lang.String header;
    private static final java.lang.String trailer;
    private java.lang.String outputExceptionMessage;
    private static char[] replaceChar;
    private static java.lang.String[] replaceWith;

    public static ucar.util.prefs.XMLStore createFromFile(java.lang.String, ucar.util.prefs.XMLStore) throws java.io.IOException
    {
        java.io.BufferedInputStream $r9, $r11, r13, r14;
        java.lang.String r1, $r8;
        boolean $z0, $z1;
        java.io.PrintStream $r5;
        java.io.FileInputStream $r10, $r12;
        java.io.File $r0;
        ucar.util.prefs.XMLStore $r2, r3;
        java.lang.StringBuilder $r4, $r6, $r7;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: ucar.util.prefs.XMLStore;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        r13 = null;

        r14 = null;

        $z0 = virtualinvoke $r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r9 = new java.io.BufferedInputStream;

        $r10 = new java.io.FileInputStream;

        specialinvoke $r10.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r9.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r10);

        r13 = $r9;

        $r11 = new java.io.BufferedInputStream;

        $r12 = new java.io.FileInputStream;

        specialinvoke $r12.<java.io.FileInputStream: void <init>(java.io.File)>($r0);

        specialinvoke $r11.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r12);

        r14 = $r11;

     label1:
        $z1 = <ucar.util.prefs.XMLStore: boolean debugWhichStore>;

        if $z1 == 0 goto label2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLStore read from file ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label2:
        $r2 = new ucar.util.prefs.XMLStore;

        specialinvoke $r2.<ucar.util.prefs.XMLStore: void <init>(java.io.InputStream,java.io.InputStream,ucar.util.prefs.XMLStore)>(r13, r14, r3);

        $r2.<ucar.util.prefs.XMLStore: java.io.File prefsFile> = $r0;

        return $r2;
    }

    public static ucar.util.prefs.XMLStore createFromInputStream(java.io.InputStream, java.io.InputStream, ucar.util.prefs.XMLStore) throws java.io.IOException
    {
        java.io.PrintStream $r5;
        ucar.util.prefs.XMLStore $r0, r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;
        java.io.InputStream r1, r2;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: ucar.util.prefs.XMLStore;

        $z0 = <ucar.util.prefs.XMLStore: boolean debugWhichStore>;

        if $z0 == 0 goto label1;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLStore read from input stream ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

     label1:
        $r0 = new ucar.util.prefs.XMLStore;

        specialinvoke $r0.<ucar.util.prefs.XMLStore: void <init>(java.io.InputStream,java.io.InputStream,ucar.util.prefs.XMLStore)>(r1, r2, r3);

        return $r0;
    }

    public static ucar.util.prefs.XMLStore createFromResource(java.lang.String, ucar.util.prefs.XMLStore) throws java.io.IOException
    {
        java.lang.String r1, $r10, $r16;
        boolean $z0;
        java.io.PrintStream $r7;
        java.io.IOException $r11;
        ucar.util.prefs.XMLStore $r4, r5;
        java.lang.Class r0, r17, r18;
        java.lang.StringBuilder $r6, $r8, $r9, $r12, $r13, $r14, $r15;
        java.io.InputStream $r2, $r3;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: ucar.util.prefs.XMLStore;

        r0 = class "Lucar/util/prefs/XMLStore;";

        r18 = class "Lucar/util/prefs/XMLStore;";

        r17 = class "Lucar/util/prefs/XMLStore;";

        $r2 = virtualinvoke r17.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        $r3 = virtualinvoke r18.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(r1);

        if $r2 != null goto label1;

        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLStore.createFromResource cant find <");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r11;

     label1:
        $z0 = <ucar.util.prefs.XMLStore: boolean debugWhichStore>;

        if $z0 == 0 goto label2;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLStore read from resource ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r10);

     label2:
        $r4 = new ucar.util.prefs.XMLStore;

        specialinvoke $r4.<ucar.util.prefs.XMLStore: void <init>(java.io.InputStream,java.io.InputStream,ucar.util.prefs.XMLStore)>($r2, $r3, r5);

        return $r4;
    }

    public void <init>()
    {
        ucar.util.prefs.XMLStore r0;
        ucar.util.prefs.PreferencesExt $r1;

        r0 := @this: ucar.util.prefs.XMLStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile> = null;

        $r1 = new ucar.util.prefs.PreferencesExt;

        specialinvoke $r1.<ucar.util.prefs.PreferencesExt: void <init>(ucar.util.prefs.PreferencesExt,java.lang.String)>(null, "");

        r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs> = $r1;

        r0.<ucar.util.prefs.XMLStore: boolean showDecoderExceptions> = 0;

        return;
    }

    private void <init>(java.io.InputStream, java.io.InputStream, ucar.util.prefs.XMLStore) throws java.io.IOException
    {
        javax.xml.parsers.SAXParserFactory $r6;
        ucar.util.prefs.XMLStore$MySaxHandler $r8;
        javax.xml.parsers.SAXParser $r7;
        java.lang.String $r15, $r17, $r22, $r24;
        java.io.PrintStream $r13, $r20;
        java.io.IOException $r10;
        java.lang.Exception $r18;
        ucar.util.prefs.PreferencesExt $r1, $r4, $r5;
        javax.xml.parsers.ParserConfigurationException $r25;
        org.xml.sax.SAXException $r11;
        ucar.util.prefs.XMLStore r0, r3;
        java.lang.StringBuilder $r12, $r14, $r16, $r19, $r21, $r23;
        java.io.InputStream r2, r9;

        r0 := @this: ucar.util.prefs.XMLStore;

        r2 := @parameter0: java.io.InputStream;

        r9 := @parameter1: java.io.InputStream;

        r3 := @parameter2: ucar.util.prefs.XMLStore;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile> = null;

        $r1 = new ucar.util.prefs.PreferencesExt;

        specialinvoke $r1.<ucar.util.prefs.PreferencesExt: void <init>(ucar.util.prefs.PreferencesExt,java.lang.String)>(null, "");

        r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs> = $r1;

        r0.<ucar.util.prefs.XMLStore: boolean showDecoderExceptions> = 0;

        if null == r2 goto label8;

        $r6 = staticinvoke <javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParserFactory newInstance()>();

     label1:
        $r7 = virtualinvoke $r6.<javax.xml.parsers.SAXParserFactory: javax.xml.parsers.SAXParser newSAXParser()>();

        $r8 = new ucar.util.prefs.XMLStore$MySaxHandler;

        specialinvoke $r8.<ucar.util.prefs.XMLStore$MySaxHandler: void <init>(ucar.util.prefs.XMLStore,java.io.InputStream)>(r0, r9);

        virtualinvoke $r7.<javax.xml.parsers.SAXParser: void parse(java.io.InputStream,org.xml.sax.helpers.DefaultHandler)>(r2, $r8);

     label2:
        goto label7;

     label3:
        $r25 := @caughtexception;

        virtualinvoke $r25.<javax.xml.parsers.ParserConfigurationException: void printStackTrace()>();

        goto label7;

     label4:
        $r11 := @caughtexception;

        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("SAXException = ");

        $r15 = virtualinvoke $r11.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r17);

        virtualinvoke $r11.<org.xml.sax.SAXException: void printStackTrace()>();

        $r18 = virtualinvoke $r11.<org.xml.sax.SAXException: java.lang.Exception getException()>();

        if $r18 == null goto label5;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("from = ");

        $r22 = virtualinvoke $r18.<java.lang.Exception: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>($r24);

        virtualinvoke $r18.<java.lang.Exception: void printStackTrace()>();

     label5:
        goto label7;

     label6:
        $r10 := @caughtexception;

        virtualinvoke $r10.<java.io.IOException: void printStackTrace()>();

     label7:
        virtualinvoke r2.<java.io.InputStream: void close()>();

        virtualinvoke r9.<java.io.InputStream: void close()>();

     label8:
        if r3 == null goto label9;

        $r4 = r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs>;

        $r5 = virtualinvoke r3.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt getPreferences()>();

        virtualinvoke $r4.<ucar.util.prefs.PreferencesExt: void setStoredDefaults(ucar.util.prefs.PreferencesExt)>($r5);

     label9:
        return;

        catch javax.xml.parsers.ParserConfigurationException from label1 to label2 with label3;
        catch org.xml.sax.SAXException from label1 to label2 with label4;
        catch java.io.IOException from label1 to label2 with label6;
    }

    private java.beans.XMLDecoder openBeanDecoder(java.io.InputStream)
    {
        java.beans.XMLDecoder $r3;
        ucar.util.prefs.XMLStore r1;
        java.io.IOException $r5;
        ucar.util.prefs.XMLStore$InputMunger $r0;
        java.io.InputStream r2;
        ucar.util.prefs.XMLStore$1 $r4;

        r1 := @this: ucar.util.prefs.XMLStore;

        r2 := @parameter0: java.io.InputStream;

     label1:
        $r0 = new ucar.util.prefs.XMLStore$InputMunger;

        specialinvoke $r0.<ucar.util.prefs.XMLStore$InputMunger: void <init>(ucar.util.prefs.XMLStore,java.io.InputStream)>(r1, r2);

        $r3 = new java.beans.XMLDecoder;

        $r4 = new ucar.util.prefs.XMLStore$1;

        specialinvoke $r4.<ucar.util.prefs.XMLStore$1: void <init>(ucar.util.prefs.XMLStore)>(r1);

        specialinvoke $r3.<java.beans.XMLDecoder: void <init>(java.io.InputStream,java.lang.Object,java.beans.ExceptionListener)>($r0, null, $r4);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.io.IOException: void printStackTrace()>();

        return null;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public static java.lang.String makeStandardFilename(java.lang.String, java.lang.String)
    {
        java.lang.String r3, $r5, r10, $r12, $r18, r19;
        boolean $z0;
        java.io.PrintStream $r15;
        java.io.File $r6;
        java.lang.Exception $r13;
        java.lang.StringBuilder $r0, $r1, $r2, $r4, $r7, $r8, $r9, $r11, $r14, $r16, $r17;

        r3 := @parameter0: java.lang.String;

        r10 := @parameter1: java.lang.String;

        r19 = null;

     label1:
        r19 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XMLStore.makeStandardFilename: error System.getProperty(user.home) ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>($r18);

     label4:
        if null != r19 goto label5;

        r19 = ".";

     label5:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r5);

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label6;

        virtualinvoke $r6.<java.io.File: boolean mkdirs()>();

     label6:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public ucar.util.prefs.PreferencesExt getPreferences()
    {
        ucar.util.prefs.XMLStore r0;
        ucar.util.prefs.PreferencesExt $r1;

        r0 := @this: ucar.util.prefs.XMLStore;

        $r1 = r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs>;

        return $r1;
    }

    public void save() throws java.io.IOException
    {
        java.lang.String $r3, $r9, $r12;
        boolean $z0;
        java.lang.UnsupportedOperationException $r15;
        java.io.FileOutputStream $r5;
        java.io.File $r1, $r2, $r4, $r6, $r8, $r13, $r14, r16;
        ucar.util.prefs.XMLStore r0;
        java.lang.StringBuilder $r7, $r10, $r11;

        r0 := @this: ucar.util.prefs.XMLStore;

        $r1 = r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile>;

        if $r1 != null goto label1;

        $r15 = new java.lang.UnsupportedOperationException;

        specialinvoke $r15.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("XMLStore is read-only");

        throw $r15;

     label1:
        $r2 = r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile>;

        $r3 = virtualinvoke $r2.<java.io.File: java.lang.String getParent()>();

        if $r3 != null goto label2;

        r16 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>("pref", ".xml");

        goto label3;

     label2:
        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.lang.String)>($r3);

        r16 = staticinvoke <java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>("pref", ".xml", $r4);

     label3:
        virtualinvoke r16.<java.io.File: void deleteOnExit()>();

        $r5 = new java.io.FileOutputStream;

        specialinvoke $r5.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(r16, 0);

        virtualinvoke r0.<ucar.util.prefs.XMLStore: void save(java.io.OutputStream)>($r5);

        virtualinvoke $r5.<java.io.FileOutputStream: void close()>();

        $r6 = new java.io.File;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile>;

        $r9 = virtualinvoke $r8.<java.io.File: java.lang.String getAbsolutePath()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".bak");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r12);

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        virtualinvoke $r6.<java.io.File: boolean delete()>();

     label4:
        $r13 = r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile>;

        virtualinvoke $r13.<java.io.File: boolean renameTo(java.io.File)>($r6);

        $r14 = r0.<ucar.util.prefs.XMLStore: java.io.File prefsFile>;

        virtualinvoke r16.<java.io.File: boolean renameTo(java.io.File)>($r14);

        virtualinvoke r16.<java.io.File: boolean delete()>();

        return;
    }

    public void save(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r2;
        java.io.PrintWriter $r3;
        java.beans.XMLEncoder $r4;
        java.io.IOException $r9;
        ucar.util.prefs.XMLStore$2 $r5;
        ucar.util.prefs.XMLStore$OutputMunger $r1;
        ucar.util.prefs.PreferencesExt $r6, $r7;
        ucar.util.prefs.XMLStore r0;
        java.lang.String $r8, $r10;
        boolean $z0;

        r0 := @this: ucar.util.prefs.XMLStore;

        r2 := @parameter0: java.io.OutputStream;

        r0.<ucar.util.prefs.XMLStore: java.lang.String outputExceptionMessage> = null;

        $r1 = new ucar.util.prefs.XMLStore$OutputMunger;

        specialinvoke $r1.<ucar.util.prefs.XMLStore$OutputMunger: void <init>(ucar.util.prefs.XMLStore,java.io.OutputStream)>(r0, r2);

        $r3 = new java.io.PrintWriter;

        specialinvoke $r3.<java.io.PrintWriter: void <init>(java.io.OutputStream)>($r1);

        $r4 = new java.beans.XMLEncoder;

        specialinvoke $r4.<java.beans.XMLEncoder: void <init>(java.io.OutputStream)>($r1);

        $r5 = new ucar.util.prefs.XMLStore$2;

        specialinvoke $r5.<ucar.util.prefs.XMLStore$2: void <init>(ucar.util.prefs.XMLStore)>(r0);

        virtualinvoke $r4.<java.beans.XMLEncoder: void setExceptionListener(java.beans.ExceptionListener)>($r5);

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n");

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("<preferences EXTERNAL_XML_VERSION=\'1.0\'>\n");

        $r6 = r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs>;

        $z0 = virtualinvoke $r6.<ucar.util.prefs.PreferencesExt: boolean isUserNode()>();

        if $z0 != 0 goto label1;

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  <root type=\'system\'>\n");

        goto label2;

     label1:
        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  <root type=\'user\'>\n");

     label2:
        $r7 = r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs>;

        specialinvoke r0.<ucar.util.prefs.XMLStore: void writeXmlNode(ucar.util.prefs.XMLStore$OutputMunger,java.io.PrintWriter,ucar.util.prefs.PreferencesExt,java.beans.XMLEncoder,java.lang.String)>($r1, $r3, $r7, $r4, "  ");

        $r8 = r0.<ucar.util.prefs.XMLStore: java.lang.String outputExceptionMessage>;

        if $r8 == null goto label3;

        $r9 = new java.io.IOException;

        $r10 = r0.<ucar.util.prefs.XMLStore: java.lang.String outputExceptionMessage>;

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label3:
        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("  </root>\n");

        virtualinvoke $r3.<java.io.PrintWriter: void print(java.lang.String)>("</preferences>\n");

        virtualinvoke $r3.<java.io.PrintWriter: void flush()>();

        return;
    }

    private void writeXmlNode(ucar.util.prefs.XMLStore$OutputMunger, java.io.PrintWriter, ucar.util.prefs.PreferencesExt, java.beans.XMLEncoder, java.lang.String) throws java.io.IOException
    {
        ucar.util.prefs.Bean$Collection r155;
        java.lang.Thread $r129;
        java.lang.StringBuilder $r0, $r1, $r2, $r7, $r8, $r9, $r11, $r12, $r13, $r18, $r19, $r20, $r22, $r23, $r28, $r29, $r30, $r34, $r35, $r36, $r38, $r39, $r41, $r43, $r45, $r46, $r47, $r48, $r51, $r53, $r54, $r55, $r58, $r59, $r60, $r62, $r63, $r66, $r67, $r69, $r71, $r73, $r74, $r75, $r78, $r79, $r80, $r82, $r83, $r86, $r87, $r91, $r92, $r93, $r96, $r97, $r98, $r100, $r102, $r104, $r106, $r107, $r108, $r110, $r111, $r114, $r115, $r117, $r119, $r121, $r122, $r123, $r125, $r126, $r127, $r131, $r133, $r136, $r138, $r140, $r141, $r147, $r149, $r150;
        java.lang.ClassLoader $r130;
        java.io.IOException $r144, $r152;
        java.util.prefs.Preferences $r17;
        ucar.util.prefs.Bean r156;
        java.util.Collection $r77, $r89;
        int $i0, $i1, i2, i3, $i4;
        java.io.PrintStream $r42, $r57, $r70, $r101, $r118, $r132, $r139, $r148;
        java.lang.Object $r33, $r95;
        java.lang.Class $r49, $r64, $r84, $r134;
        java.io.PrintWriter r6;
        java.lang.Exception $r146;
        java.util.prefs.BackingStoreException $r143;
        java.lang.String $r3, $r10, $r14, $r16, $r21, $r24, $r31, $r32, $r37, $r40, $r44, $r50, $r52, $r56, $r61, $r65, $r68, $r72, $r76, $r81, $r85, $r88, $r94, $r99, $r103, $r105, $r109, $r112, $r113, $r116, $r120, $r124, $r128, $r135, $r137, $r142, $r145, $r151, $r153, r154;
        ucar.util.prefs.XMLStore$OutputMunger r26;
        ucar.util.prefs.PreferencesExt r4, r157;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        ucar.util.prefs.XMLStore r25;
        java.beans.XMLEncoder r27;
        java.lang.String[] $r5, $r15;
        java.util.Iterator $r90;

        r25 := @this: ucar.util.prefs.XMLStore;

        r26 := @parameter0: ucar.util.prefs.XMLStore$OutputMunger;

        r6 := @parameter1: java.io.PrintWriter;

        r4 := @parameter2: ucar.util.prefs.PreferencesExt;

        r27 := @parameter3: java.beans.XMLEncoder;

        r154 := @parameter4: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r154);

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        $z0 = <ucar.util.prefs.XMLStore: boolean debugWriteNested>;

        if $z0 == 0 goto label01;

        $r139 = <java.lang.System: java.io.PrintStream out>;

        $r138 = new java.lang.StringBuilder;

        specialinvoke $r138.<java.lang.StringBuilder: void <init>()>();

        $r140 = virtualinvoke $r138.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" writeXmlNode ");

        $r141 = virtualinvoke $r140.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r4);

        $r142 = virtualinvoke $r141.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r139.<java.io.PrintStream: void println(java.lang.String)>($r142);

     label01:
        $z1 = <ucar.util.prefs.XMLStore: boolean debugWriteBean>;

        if $z1 == 0 goto label02;

        $r129 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        $r130 = virtualinvoke $r129.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();

        $r132 = <java.lang.System: java.io.PrintStream out>;

        $r131 = new java.lang.StringBuilder;

        specialinvoke $r131.<java.lang.StringBuilder: void <init>()>();

        $r133 = virtualinvoke $r131.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ClassLoader ");

        $r134 = virtualinvoke $r130.<java.lang.Object: java.lang.Class getClass()>();

        $r135 = virtualinvoke $r134.<java.lang.Class: java.lang.String getName()>();

        $r136 = virtualinvoke $r133.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r135);

        $r137 = virtualinvoke $r136.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r132.<java.io.PrintStream: void println(java.lang.String)>($r137);

     label02:
        $r5 = virtualinvoke r4.<ucar.util.prefs.PreferencesExt: java.lang.String[] keysNoDefaults()>();

        $i0 = lengthof $r5;

        if $i0 != 0 goto label03;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r126 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r127 = virtualinvoke $r126.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<map/>");

        $r128 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r128);

        goto label22;

     label03:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<map>");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r10);

        i2 = 0;

     label04:
        $i1 = lengthof $r5;

        if i2 >= $i1 goto label21;

        $r32 = $r5[i2];

        $r33 = virtualinvoke r4.<ucar.util.prefs.PreferencesExt: java.lang.Object getObjectNoDefaults(java.lang.String)>($r32);

        $z2 = $r33 instanceof java.lang.String;

        if $z2 == 0 goto label06;

        $z11 = <ucar.util.prefs.XMLStore: boolean debugWriteNested>;

        if $z11 == 0 goto label05;

        $r118 = <java.lang.System: java.io.PrintStream out>;

        $r117 = new java.lang.StringBuilder;

        specialinvoke $r117.<java.lang.StringBuilder: void <init>()>();

        $r119 = virtualinvoke $r117.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  write entry ");

        $r120 = $r5[i2];

        $r121 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r120);

        $r122 = virtualinvoke $r121.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r124 = virtualinvoke $r123.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r118.<java.io.PrintStream: void println(java.lang.String)>($r124);

     label05:
        $r106 = new java.lang.StringBuilder;

        specialinvoke $r106.<java.lang.StringBuilder: void <init>()>();

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <entry key=\'");

        $r109 = $r5[i2];

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' value=\'");

        $r112 = (java.lang.String) $r33;

        $r113 = staticinvoke <ucar.util.prefs.XMLStore: java.lang.String quote(java.lang.String)>($r112);

        $r114 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r113);

        $r115 = virtualinvoke $r114.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' />");

        $r116 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r116);

        goto label20;

     label06:
        $z3 = $r33 instanceof ucar.util.prefs.Bean$Collection;

        if $z3 == 0 goto label11;

        r155 = (ucar.util.prefs.Bean$Collection) $r33;

        $z8 = <ucar.util.prefs.XMLStore: boolean debugWriteNested>;

        if $z8 == 0 goto label07;

        $r101 = <java.lang.System: java.io.PrintStream out>;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r102 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  write bean collection ");

        $r103 = $r5[i2];

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r103);

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r101.<java.io.PrintStream: void println(java.lang.String)>($r105);

     label07:
        $r77 = virtualinvoke r155.<ucar.util.prefs.Bean$Collection: java.util.Collection getCollection()>();

        $z9 = interfaceinvoke $r77.<java.util.Collection: boolean isEmpty()>();

        if $z9 == 0 goto label08;

        goto label20;

     label08:
        $r78 = new java.lang.StringBuilder;

        specialinvoke $r78.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <beanCollection key=\'");

        $r81 = $r5[i2];

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' class=\'");

        $r84 = virtualinvoke r155.<ucar.util.prefs.Bean$Collection: java.lang.Class getBeanClass()>();

        $r85 = virtualinvoke $r84.<java.lang.Class: java.lang.String getName()>();

        $r86 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'>");

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r88);

        $r89 = virtualinvoke r155.<ucar.util.prefs.Bean$Collection: java.util.Collection getCollection()>();

        $r90 = interfaceinvoke $r89.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z10 = interfaceinvoke $r90.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label10;

        $r95 = interfaceinvoke $r90.<java.util.Iterator: java.lang.Object next()>();

        $r96 = new java.lang.StringBuilder;

        specialinvoke $r96.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    <bean ");

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void print(java.lang.String)>($r99);

        virtualinvoke r155.<ucar.util.prefs.Bean$Collection: void writeProperties(java.io.PrintWriter,java.lang.Object)>(r6, $r95);

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>("/>");

        goto label09;

     label10:
        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r93 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </beanCollection>");

        $r94 = virtualinvoke $r93.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r94);

        goto label20;

     label11:
        $z4 = $r33 instanceof ucar.util.prefs.Bean;

        if $z4 == 0 goto label13;

        r156 = (ucar.util.prefs.Bean) $r33;

        $z7 = <ucar.util.prefs.XMLStore: boolean debugWriteNested>;

        if $z7 == 0 goto label12;

        $r70 = <java.lang.System: java.io.PrintStream out>;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  write bean ");

        $r72 = $r5[i2];

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r70.<java.io.PrintStream: void println(java.lang.String)>($r76);

     label12:
        $r58 = new java.lang.StringBuilder;

        specialinvoke $r58.<java.lang.StringBuilder: void <init>()>();

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <bean key=\'");

        $r61 = $r5[i2];

        $r62 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r61);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' class=\'");

        $r64 = virtualinvoke r156.<ucar.util.prefs.Bean: java.lang.Class getBeanClass()>();

        $r65 = virtualinvoke $r64.<java.lang.Class: java.lang.String getName()>();

        $r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' ");

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void print(java.lang.String)>($r68);

        virtualinvoke r156.<ucar.util.prefs.Bean: void writeProperties(java.io.PrintWriter)>(r6);

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>("/>");

        goto label20;

     label13:
        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  <beanObject key=\'");

        $r37 = $r5[i2];

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r40);

        virtualinvoke r6.<java.io.PrintWriter: void flush()>();

        virtualinvoke r26.<ucar.util.prefs.XMLStore$OutputMunger: void enterBeanStream()>();

     label14:
        $z5 = <ucar.util.prefs.XMLStore: boolean debugWriteNested>;

        if $z5 != 0 goto label15;

        $z6 = <ucar.util.prefs.XMLStore: boolean debugWriteBean>;

        if $z6 == 0 goto label16;

     label15:
        $r42 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  write beanObject ");

        $r44 = $r5[i2];

        $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r33);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r49 = virtualinvoke $r33.<java.lang.Object: java.lang.Class getClass()>();

        $r50 = virtualinvoke $r49.<java.lang.Class: java.lang.String getName()>();

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r52);

     label16:
        virtualinvoke r27.<java.beans.XMLEncoder: void writeObject(java.lang.Object)>($r33);

        $z12 = <ucar.util.prefs.XMLStore: boolean debugWriteBean>;

        if $z12 == 0 goto label17;

        $r57 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r57.<java.io.PrintStream: void println(java.lang.String)>("  write bean done ");

     label17:
        goto label19;

     label18:
        $r146 := @caughtexception;

        $r148 = <java.lang.System: java.io.PrintStream out>;

        $r147 = new java.lang.StringBuilder;

        specialinvoke $r147.<java.lang.StringBuilder: void <init>()>();

        $r149 = virtualinvoke $r147.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception beanEncoder: ");

        $r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r146);

        $r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r148.<java.io.PrintStream: void println(java.lang.String)>($r151);

        virtualinvoke $r146.<java.lang.Exception: void printStackTrace()>();

        $r152 = new java.io.IOException;

        $r153 = virtualinvoke $r146.<java.lang.Exception: java.lang.String getMessage()>();

        specialinvoke $r152.<java.io.IOException: void <init>(java.lang.String)>($r153);

        throw $r152;

     label19:
        virtualinvoke r27.<java.beans.XMLEncoder: void flush()>();

        virtualinvoke r26.<ucar.util.prefs.XMLStore$OutputMunger: void exitBeanStream()>();

        $r53 = new java.lang.StringBuilder;

        specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  </beanObject>");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r56);

     label20:
        i2 = i2 + 1;

        goto label04;

     label21:
        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</map>");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r14);

     label22:
        $r15 = virtualinvoke r4.<ucar.util.prefs.PreferencesExt: java.lang.String[] childrenNames()>();

        i3 = 0;

     label23:
        $i4 = lengthof $r15;

        if i3 >= $i4 goto label24;

        $r16 = $r15[i3];

        $r17 = virtualinvoke r4.<ucar.util.prefs.PreferencesExt: java.util.prefs.Preferences node(java.lang.String)>($r16);

        r157 = (ucar.util.prefs.PreferencesExt) $r17;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<node name=\'");

        $r21 = virtualinvoke r157.<ucar.util.prefs.PreferencesExt: java.lang.String name()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' >");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r24);

        specialinvoke r25.<ucar.util.prefs.XMLStore: void writeXmlNode(ucar.util.prefs.XMLStore$OutputMunger,java.io.PrintWriter,ucar.util.prefs.PreferencesExt,java.beans.XMLEncoder,java.lang.String)>(r26, r6, r157, r27, $r3);

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</node>");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<java.io.PrintWriter: void println(java.lang.String)>($r31);

        i3 = i3 + 1;

        goto label23;

     label24:
        goto label26;

     label25:
        $r143 := @caughtexception;

        virtualinvoke $r143.<java.util.prefs.BackingStoreException: void printStackTrace()>();

        $r144 = new java.io.IOException;

        $r145 = virtualinvoke $r143.<java.util.prefs.BackingStoreException: java.lang.String getMessage()>();

        specialinvoke $r144.<java.io.IOException: void <init>(java.lang.String)>($r145);

        throw $r144;

     label26:
        return;

        catch java.lang.Exception from label14 to label17 with label18;
        catch java.util.prefs.BackingStoreException from label02 to label24 with label25;
    }

    static java.lang.String quote(java.lang.String)
    {
        java.lang.String[] $r7;
        java.lang.StringBuffer $r10;
        int $i0, $i1, $i3, $i6, i7, i8, $i9, $i10;
        java.lang.String r2, $r4, $r8;
        boolean $z0, z1, $z2;
        char $c2, $c4, $c5;
        char[] $r0, $r3, $r5, $r6, $r9;

        r2 := @parameter0: java.lang.String;

        z1 = 1;

        i7 = 0;

     label1:
        $r0 = <ucar.util.prefs.XMLStore: char[] replaceChar>;

        $i0 = lengthof $r0;

        if i7 >= $i0 goto label4;

        $r9 = <ucar.util.prefs.XMLStore: char[] replaceChar>;

        $c5 = $r9[i7];

        $i9 = (int) $c5;

        $i6 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($i9);

        $z0 = z1;

        if $i6 >= 0 goto label2;

        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        z1 = $z0 & $z2;

        i7 = i7 + 1;

        goto label1;

     label4:
        if z1 == 0 goto label5;

        return r2;

     label5:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(java.lang.String)>(r2);

        i8 = 0;

     label6:
        $r3 = <ucar.util.prefs.XMLStore: char[] replaceChar>;

        $i1 = lengthof $r3;

        if i8 >= $i1 goto label8;

        $r5 = <ucar.util.prefs.XMLStore: char[] replaceChar>;

        $c2 = $r5[i8];

        $i10 = (int) $c2;

        $i3 = virtualinvoke r2.<java.lang.String: int indexOf(int)>($i10);

        if $i3 < 0 goto label7;

        $r6 = <ucar.util.prefs.XMLStore: char[] replaceChar>;

        $c4 = $r6[i8];

        $r7 = <ucar.util.prefs.XMLStore: java.lang.String[] replaceWith>;

        $r8 = $r7[i8];

        staticinvoke <ucar.util.prefs.XMLStore: void replace(java.lang.StringBuffer,char,java.lang.String)>($r10, $c4, $r8);

     label7:
        i8 = i8 + 1;

        goto label6;

     label8:
        $r4 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    private static void replace(java.lang.StringBuffer, char, java.lang.String)
    {
        char $c1, c2;
        java.lang.StringBuffer r0;
        int $i0, $i3, $i4, i5, $i6, $i7;
        java.lang.String r1;

        r0 := @parameter0: java.lang.StringBuffer;

        c2 := @parameter1: char;

        r1 := @parameter2: java.lang.String;

        i5 = 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>();

        if i5 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.StringBuffer: char charAt(int)>(i5);

        $i6 = (int) $c1;

        $i7 = (int) c2;

        if $i6 != $i7 goto label2;

        $i3 = i5 + 1;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer replace(int,int,java.lang.String)>(i5, $i3, r1);

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = i5 + $i4;

     label2:
        i5 = i5 + 1;

        goto label1;

     label3:
        return;
    }

    static boolean access$000(ucar.util.prefs.XMLStore)
    {
        ucar.util.prefs.XMLStore r0;
        boolean $z0;

        r0 := @parameter0: ucar.util.prefs.XMLStore;

        $z0 = r0.<ucar.util.prefs.XMLStore: boolean showDecoderExceptions>;

        return $z0;
    }

    static ucar.util.prefs.PreferencesExt access$100(ucar.util.prefs.XMLStore)
    {
        ucar.util.prefs.XMLStore r0;
        ucar.util.prefs.PreferencesExt $r1;

        r0 := @parameter0: ucar.util.prefs.XMLStore;

        $r1 = r0.<ucar.util.prefs.XMLStore: ucar.util.prefs.PreferencesExt rootPrefs>;

        return $r1;
    }

    static java.beans.XMLDecoder access$200(ucar.util.prefs.XMLStore, java.io.InputStream)
    {
        ucar.util.prefs.XMLStore r0;
        java.beans.XMLDecoder $r2;
        java.io.InputStream r1;

        r0 := @parameter0: ucar.util.prefs.XMLStore;

        r1 := @parameter1: java.io.InputStream;

        $r2 = specialinvoke r0.<ucar.util.prefs.XMLStore: java.beans.XMLDecoder openBeanDecoder(java.io.InputStream)>(r1);

        return $r2;
    }

    static java.lang.String access$302(ucar.util.prefs.XMLStore, java.lang.String)
    {
        ucar.util.prefs.XMLStore r0;
        java.lang.String r1;

        r0 := @parameter0: ucar.util.prefs.XMLStore;

        r1 := @parameter1: java.lang.String;

        r0.<ucar.util.prefs.XMLStore: java.lang.String outputExceptionMessage> = r1;

        return r1;
    }

    static void <clinit>()
    {
        char[] $r0;
        java.lang.String[] $r1;

        <ucar.util.prefs.XMLStore: java.lang.String trailer> = "</java>\n";

        <ucar.util.prefs.XMLStore: java.lang.String header> = "<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n<java version=\'1.4.1_01\' class=\'java.beans.XMLDecoder\'>\n";

        <ucar.util.prefs.XMLStore: java.lang.String prologue> = "<?xml version=\'1.0\' encoding=\'UTF-8\'?>\n";

        <ucar.util.prefs.XMLStore: int BUFF_SIZE> = 1024;

        <ucar.util.prefs.XMLStore: boolean debugRead> = 0;

        <ucar.util.prefs.XMLStore: boolean debugReadValues> = 0;

        <ucar.util.prefs.XMLStore: boolean debugWhichStore> = 0;

        <ucar.util.prefs.XMLStore: boolean debugWriteNested> = 0;

        <ucar.util.prefs.XMLStore: boolean debugWriteBean> = 0;

        $r0 = newarray (char)[7];

        $r0[0] = 38;

        $r0[1] = 60;

        $r0[2] = 62;

        $r0[3] = 39;

        $r0[4] = 34;

        $r0[5] = 13;

        $r0[6] = 10;

        <ucar.util.prefs.XMLStore: char[] replaceChar> = $r0;

        $r1 = newarray (java.lang.String)[7];

        $r1[0] = "&amp;";

        $r1[1] = "&lt;";

        $r1[2] = "&gt;";

        $r1[3] = "&apos;";

        $r1[4] = "&quot;";

        $r1[5] = "&#13;";

        $r1[6] = "&#10;";

        <ucar.util.prefs.XMLStore: java.lang.String[] replaceWith> = $r1;

        return;
    }
}
