final class org.objectweb.asm.FieldWriter extends org.objectweb.asm.FieldVisitor
{
    private final org.objectweb.asm.ClassWriter cw;
    private final int access;
    private final int name;
    private final int desc;
    private int signature;
    private int value;
    private org.objectweb.asm.AnnotationWriter anns;
    private org.objectweb.asm.AnnotationWriter ianns;
    private org.objectweb.asm.Attribute attrs;

    void <init>(org.objectweb.asm.ClassWriter, int, java.lang.String, java.lang.String, java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.ClassWriter r1;
        org.objectweb.asm.FieldWriter r0, $r2, $r3;
        org.objectweb.asm.Item $r8;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.Object r7;
        java.lang.String r4, r5, r6;

        r0 := @this: org.objectweb.asm.FieldWriter;

        r1 := @parameter0: org.objectweb.asm.ClassWriter;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.Object;

        specialinvoke r0.<org.objectweb.asm.FieldVisitor: void <init>(int)>(262144);

        $r2 = r1.<org.objectweb.asm.ClassWriter: org.objectweb.asm.FieldWriter firstField>;

        if $r2 != null goto label1;

        r1.<org.objectweb.asm.ClassWriter: org.objectweb.asm.FieldWriter firstField> = r0;

        goto label2;

     label1:
        $r3 = r1.<org.objectweb.asm.ClassWriter: org.objectweb.asm.FieldWriter lastField>;

        $r3.<org.objectweb.asm.FieldWriter: org.objectweb.asm.FieldVisitor fv> = r0;

     label2:
        r1.<org.objectweb.asm.ClassWriter: org.objectweb.asm.FieldWriter lastField> = r0;

        r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw> = r1;

        r0.<org.objectweb.asm.FieldWriter: int access> = i0;

        $i1 = virtualinvoke r1.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(r4);

        r0.<org.objectweb.asm.FieldWriter: int name> = $i1;

        $i2 = virtualinvoke r1.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(r5);

        r0.<org.objectweb.asm.FieldWriter: int desc> = $i2;

        if r6 == null goto label3;

        $i4 = virtualinvoke r1.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(r6);

        r0.<org.objectweb.asm.FieldWriter: int signature> = $i4;

     label3:
        if r7 == null goto label4;

        $r8 = virtualinvoke r1.<org.objectweb.asm.ClassWriter: org.objectweb.asm.Item newConstItem(java.lang.Object)>(r7);

        $i3 = $r8.<org.objectweb.asm.Item: int index>;

        r0.<org.objectweb.asm.FieldWriter: int value> = $i3;

     label4:
        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, boolean)
    {
        org.objectweb.asm.ClassWriter $r3, $r6;
        org.objectweb.asm.ByteVector $r0, $r4;
        org.objectweb.asm.FieldWriter r1;
        int $i0;
        org.objectweb.asm.AnnotationWriter $r5, $r7, $r8;
        java.lang.String r2;
        boolean z0;

        r1 := @this: org.objectweb.asm.FieldWriter;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $r0 = new org.objectweb.asm.ByteVector;

        specialinvoke $r0.<org.objectweb.asm.ByteVector: void <init>()>();

        $r3 = r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i0 = virtualinvoke $r3.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>(r2);

        $r4 = virtualinvoke $r0.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i0);

        virtualinvoke $r4.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>(0);

        $r5 = new org.objectweb.asm.AnnotationWriter;

        $r6 = r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        specialinvoke $r5.<org.objectweb.asm.AnnotationWriter: void <init>(org.objectweb.asm.ClassWriter,boolean,org.objectweb.asm.ByteVector,org.objectweb.asm.ByteVector,int)>($r6, 1, $r0, $r0, 2);

        if z0 == 0 goto label1;

        $r8 = r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns>;

        $r5.<org.objectweb.asm.AnnotationWriter: org.objectweb.asm.AnnotationWriter next> = $r8;

        r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns> = $r5;

        goto label2;

     label1:
        $r7 = r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns>;

        $r5.<org.objectweb.asm.AnnotationWriter: org.objectweb.asm.AnnotationWriter next> = $r7;

        r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns> = $r5;

     label2:
        return $r5;
    }

    public void visitAttribute(org.objectweb.asm.Attribute)
    {
        org.objectweb.asm.Attribute r0, $r2;
        org.objectweb.asm.FieldWriter r1;

        r1 := @this: org.objectweb.asm.FieldWriter;

        r0 := @parameter0: org.objectweb.asm.Attribute;

        $r2 = r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        r0.<org.objectweb.asm.Attribute: org.objectweb.asm.Attribute next> = $r2;

        r1.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs> = r0;

        return;
    }

    public void visitEnd()
    {
        org.objectweb.asm.FieldWriter r0;

        r0 := @this: org.objectweb.asm.FieldWriter;

        return;
    }

    int getSize()
    {
        org.objectweb.asm.FieldWriter r0;
        org.objectweb.asm.ClassWriter $r4, $r6, $r8, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i17, $i19, $i21;
        org.objectweb.asm.Attribute $r3, $r5;
        org.objectweb.asm.AnnotationWriter $r1, $r2, $r7, $r9;

        r0 := @this: org.objectweb.asm.FieldWriter;

        i13 = 8;

        $i0 = r0.<org.objectweb.asm.FieldWriter: int value>;

        if $i0 == 0 goto label1;

        $r14 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $r14.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("ConstantValue");

        i13 = 16;

     label1:
        $i1 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i2 = $i1 & 4096;

        if $i2 == 0 goto label3;

        $r12 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i9 = $r12.<org.objectweb.asm.ClassWriter: int version>;

        $i17 = (int) 65535;

        $i10 = $i9 & $i17;

        if $i10 < 49 goto label2;

        $i11 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i12 = $i11 & 262144;

        if $i12 == 0 goto label3;

     label2:
        $r13 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $r13.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        i13 = i13 + 6;

     label3:
        $i14 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i15 = $i14 & 131072;

        if $i15 == 0 goto label4;

        $r11 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $r11.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        i13 = i13 + 6;

     label4:
        $i3 = r0.<org.objectweb.asm.FieldWriter: int signature>;

        if $i3 == 0 goto label5;

        $r10 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $r10.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        i13 = i13 + 8;

     label5:
        $r1 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns>;

        if $r1 == null goto label6;

        $r8 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $r8.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        $r9 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns>;

        $i7 = virtualinvoke $r9.<org.objectweb.asm.AnnotationWriter: int getSize()>();

        $i8 = 8 + $i7;

        i13 = i13 + $i8;

     label6:
        $r2 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns>;

        if $r2 == null goto label7;

        $r6 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        virtualinvoke $r6.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        $r7 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns>;

        $i5 = virtualinvoke $r7.<org.objectweb.asm.AnnotationWriter: int getSize()>();

        $i6 = 8 + $i5;

        i13 = i13 + $i6;

     label7:
        $r3 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        if $r3 == null goto label8;

        $r5 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        $r4 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i19 = (int) -1;

        $i21 = (int) -1;

        $i4 = virtualinvoke $r5.<org.objectweb.asm.Attribute: int getSize(org.objectweb.asm.ClassWriter,byte[],int,int,int)>($r4, null, 0, $i19, $i21);

        i13 = i13 + $i4;

     label8:
        return i13;
    }

    void put(org.objectweb.asm.ByteVector)
    {
        org.objectweb.asm.ClassWriter $r10, $r12, $r14, $r16, $r18, $r20, $r21, $r23, $r26;
        org.objectweb.asm.Attribute $r6, $r9, $r11, $r25;
        org.objectweb.asm.ByteVector r1, $r2, $r3, $r17, $r19, $r22, $r24;
        org.objectweb.asm.AnnotationWriter $r4, $r5, $r7, $r8, $r13, $r15;
        org.objectweb.asm.FieldWriter r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, i34, $i35, $i36, $i37, $i38, $i40, $i42, $i44, $i46, $i48;

        r0 := @this: org.objectweb.asm.FieldWriter;

        r1 := @parameter0: org.objectweb.asm.ByteVector;

        $i0 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i1 = $i0 & 262144;

        $i2 = $i1 / 64;

        i3 = 393216 | $i2;

        $i5 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i40 = (int) -1;

        $i4 = i3 ^ $i40;

        $i6 = $i5 & $i4;

        $r2 = virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i6);

        $i7 = r0.<org.objectweb.asm.FieldWriter: int name>;

        $r3 = virtualinvoke $r2.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i7);

        $i8 = r0.<org.objectweb.asm.FieldWriter: int desc>;

        virtualinvoke $r3.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i8);

        i34 = 0;

        $i9 = r0.<org.objectweb.asm.FieldWriter: int value>;

        if $i9 == 0 goto label01;

        i34 = 1;

     label01:
        $i10 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i11 = $i10 & 4096;

        if $i11 == 0 goto label03;

        $r26 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i30 = $r26.<org.objectweb.asm.ClassWriter: int version>;

        $i42 = (int) 65535;

        $i31 = $i30 & $i42;

        if $i31 < 49 goto label02;

        $i32 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i33 = $i32 & 262144;

        if $i33 == 0 goto label03;

     label02:
        i34 = i34 + 1;

     label03:
        $i35 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i36 = $i35 & 131072;

        if $i36 == 0 goto label04;

        i34 = i34 + 1;

     label04:
        $i12 = r0.<org.objectweb.asm.FieldWriter: int signature>;

        if $i12 == 0 goto label05;

        i34 = i34 + 1;

     label05:
        $r4 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns>;

        if $r4 == null goto label06;

        i34 = i34 + 1;

     label06:
        $r5 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns>;

        if $r5 == null goto label07;

        i34 = i34 + 1;

     label07:
        $r6 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        if $r6 == null goto label08;

        $r25 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        $i29 = virtualinvoke $r25.<org.objectweb.asm.Attribute: int getCount()>();

        i34 = i34 + $i29;

     label08:
        virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>(i34);

        $i13 = r0.<org.objectweb.asm.FieldWriter: int value>;

        if $i13 == 0 goto label09;

        $r23 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i27 = virtualinvoke $r23.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("ConstantValue");

        virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i27);

        $r24 = virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>(2);

        $i28 = r0.<org.objectweb.asm.FieldWriter: int value>;

        virtualinvoke $r24.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i28);

     label09:
        $i14 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i15 = $i14 & 4096;

        if $i15 == 0 goto label11;

        $r20 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i22 = $r20.<org.objectweb.asm.ClassWriter: int version>;

        $i44 = (int) 65535;

        $i23 = $i22 & $i44;

        if $i23 < 49 goto label10;

        $i25 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i26 = $i25 & 262144;

        if $i26 == 0 goto label11;

     label10:
        $r21 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i24 = virtualinvoke $r21.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Synthetic");

        $r22 = virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i24);

        virtualinvoke $r22.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>(0);

     label11:
        $i37 = r0.<org.objectweb.asm.FieldWriter: int access>;

        $i38 = $i37 & 131072;

        if $i38 == 0 goto label12;

        $r18 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i21 = virtualinvoke $r18.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Deprecated");

        $r19 = virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i21);

        virtualinvoke $r19.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>(0);

     label12:
        $i16 = r0.<org.objectweb.asm.FieldWriter: int signature>;

        if $i16 == 0 goto label13;

        $r16 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i19 = virtualinvoke $r16.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("Signature");

        virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i19);

        $r17 = virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putInt(int)>(2);

        $i20 = r0.<org.objectweb.asm.FieldWriter: int signature>;

        virtualinvoke $r17.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i20);

     label13:
        $r7 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns>;

        if $r7 == null goto label14;

        $r14 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i18 = virtualinvoke $r14.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeVisibleAnnotations");

        virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i18);

        $r15 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter anns>;

        virtualinvoke $r15.<org.objectweb.asm.AnnotationWriter: void put(org.objectweb.asm.ByteVector)>(r1);

     label14:
        $r8 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns>;

        if $r8 == null goto label15;

        $r12 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i17 = virtualinvoke $r12.<org.objectweb.asm.ClassWriter: int newUTF8(java.lang.String)>("RuntimeInvisibleAnnotations");

        virtualinvoke r1.<org.objectweb.asm.ByteVector: org.objectweb.asm.ByteVector putShort(int)>($i17);

        $r13 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.AnnotationWriter ianns>;

        virtualinvoke $r13.<org.objectweb.asm.AnnotationWriter: void put(org.objectweb.asm.ByteVector)>(r1);

     label15:
        $r9 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        if $r9 == null goto label16;

        $r11 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.Attribute attrs>;

        $r10 = r0.<org.objectweb.asm.FieldWriter: org.objectweb.asm.ClassWriter cw>;

        $i46 = (int) -1;

        $i48 = (int) -1;

        virtualinvoke $r11.<org.objectweb.asm.Attribute: void put(org.objectweb.asm.ClassWriter,byte[],int,int,int,org.objectweb.asm.ByteVector)>($r10, null, 0, $i46, $i48, r1);

     label16:
        return;
    }
}
