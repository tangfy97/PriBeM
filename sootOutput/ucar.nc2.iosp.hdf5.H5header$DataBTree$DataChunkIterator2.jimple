class ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2 extends java.lang.Object implements ucar.nc2.iosp.LayoutTiled$DataChunkIterator
{
    private ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root;
    private int nChunkDim;
    final ucar.nc2.iosp.hdf5.H5header$DataBTree this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$DataBTree, ucar.ma2.Section, int) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree r1;
        ucar.ma2.Section r3;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2 r0;
        long $l1;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$Node $r2, $r4;
        int[] $r5;
        int i0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$DataBTree;

        r3 := @parameter1: ucar.ma2.Section;

        i0 := @parameter2: int;

        r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: ucar.nc2.iosp.hdf5.H5header$DataBTree this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: int nChunkDim> = i0;

        $r2 = new ucar.nc2.iosp.hdf5.H5header$DataBTree$Node;

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header$DataBTree: long access$5900(ucar.nc2.iosp.hdf5.H5header$DataBTree)>(r1);

        specialinvoke $r2.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: void <init>(ucar.nc2.iosp.hdf5.H5header$DataBTree,long,long)>(r1, $l1, -1L);

        r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root> = $r2;

        if r3 == null goto label1;

        $r5 = virtualinvoke r3.<ucar.ma2.Section: int[] getOrigin()>();

        goto label2;

     label1:
        $r5 = null;

     label2:
        $r4 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root>;

        virtualinvoke $r4.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: void first(int[])>($r5);

        return;
    }

    public boolean hasNext()
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2 r0;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$Node $r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root>;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: boolean hasNext()>();

        return $z0;
    }

    public ucar.nc2.iosp.LayoutTiled$DataChunk next() throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2 r0;
        long $l2;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$Node $r1;
        int[] $r4, r5;
        ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk $r2;
        int $i0, $i1, $i3, $i4;
        ucar.nc2.iosp.LayoutTiled$DataChunk $r3;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: ucar.nc2.iosp.hdf5.H5header$DataBTree$Node root>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.hdf5.H5header$DataBTree$Node: ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk next()>();

        r5 = $r2.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: int[] offset>;

        $i1 = lengthof r5;

        $i0 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: int nChunkDim>;

        if $i1 <= $i0 goto label1;

        $i3 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: int nChunkDim>;

        r5 = newarray (int)[$i3];

        $r4 = $r2.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: int[] offset>;

        $i4 = r0.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunkIterator2: int nChunkDim>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r5, 0, $i4);

     label1:
        $r3 = new ucar.nc2.iosp.LayoutTiled$DataChunk;

        $l2 = $r2.<ucar.nc2.iosp.hdf5.H5header$DataBTree$DataChunk: long filePos>;

        specialinvoke $r3.<ucar.nc2.iosp.LayoutTiled$DataChunk: void <init>(int[],long)>(r5, $l2);

        return $r3;
    }
}
