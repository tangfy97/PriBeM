public class com.hp.hpl.jena.ontology.impl.RDFSProfile extends com.hp.hpl.jena.ontology.impl.AbstractProfile
{
    private static java.lang.Object[][] s_supportsCheckTable;
    protected static java.util.HashMap s_supportsChecks;

    public void <init>()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.AbstractProfile: void <init>()>();

        return;
    }

    public java.lang.String NAMESPACE()
    {
        java.lang.String $r0;
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = staticinvoke <com.hp.hpl.jena.vocabulary.RDFS: java.lang.String getURI()>();

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource CLASS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Resource $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource RESTRICTION()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource THING()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource NOTHING()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Resource $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource Property>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource OBJECT_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource DATATYPE_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource TRANSITIVE_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource SYMMETRIC_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource FUNCTIONAL_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource INVERSE_FUNCTIONAL_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource ALL_DIFFERENT()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource ONTOLOGY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource DEPRECATED_CLASS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource DEPRECATED_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource ANNOTATION_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource ONTOLOGY_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Resource LIST()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Resource $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource List>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource NIL()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Resource $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Resource nil>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Resource DATARANGE()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property EQUIVALENT_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property EQUIVALENT_CLASS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property DISJOINT_WITH()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property SAME_INDIVIDUAL_AS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property SAME_AS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property DIFFERENT_FROM()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property DISTINCT_MEMBERS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property UNION_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property INTERSECTION_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property COMPLEMENT_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property ONE_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property ON_PROPERTY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property ALL_VALUES_FROM()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property HAS_VALUE()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property SOME_VALUES_FROM()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property MAX_CARDINALITY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property CARDINALITY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property INVERSE_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property IMPORTS()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property PRIOR_VERSION()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property BACKWARD_COMPATIBLE_WITH()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property INCOMPATIBLE_WITH()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property SUB_PROPERTY_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property subPropertyOf>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property SUB_CLASS_OF()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property subClassOf>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property DOMAIN()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property domain>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property RANGE()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property range>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property FIRST()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property first>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property REST()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDF: com.hp.hpl.jena.rdf.model.Property rest>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property MIN_CARDINALITY_Q()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property MAX_CARDINALITY_Q()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property CARDINALITY_Q()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property HAS_CLASS_Q()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property VERSION_INFO()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return null;
    }

    public com.hp.hpl.jena.rdf.model.Property LABEL()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property label>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property COMMENT()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property comment>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property SEE_ALSO()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property seeAlso>;

        return $r0;
    }

    public com.hp.hpl.jena.rdf.model.Property IS_DEFINED_BY()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r1;
        com.hp.hpl.jena.rdf.model.Property $r0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property isDefinedBy>;

        return $r0;
    }

    protected com.hp.hpl.jena.rdf.model.Resource[][] aliasTable()
    {
        com.hp.hpl.jena.rdf.model.Resource[] $r1;
        com.hp.hpl.jena.rdf.model.Resource[][] $r0;
        com.hp.hpl.jena.ontology.impl.RDFSProfile r2;

        r2 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = newarray (com.hp.hpl.jena.rdf.model.Resource[])[1];

        $r1 = newarray (com.hp.hpl.jena.rdf.model.Resource)[0];

        $r0[0] = $r1;

        return $r0;
    }

    public java.util.Iterator getAxiomTypes()
    {
        java.util.List $r1;
        java.util.Iterator $r2;
        com.hp.hpl.jena.rdf.model.Resource[] $r0;
        com.hp.hpl.jena.ontology.impl.RDFSProfile r3;

        r3 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = newarray (com.hp.hpl.jena.rdf.model.Resource)[0];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

        return $r2;
    }

    public java.util.Iterator getAnnotationProperties()
    {
        java.util.Iterator $r6;
        com.hp.hpl.jena.ontology.impl.RDFSProfile r7;
        java.util.List $r5;
        com.hp.hpl.jena.rdf.model.Property $r1, $r2, $r3, $r4;
        com.hp.hpl.jena.rdf.model.Resource[] $r0;

        r7 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = newarray (com.hp.hpl.jena.rdf.model.Resource)[4];

        $r1 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property label>;

        $r0[0] = $r1;

        $r2 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property seeAlso>;

        $r0[1] = $r2;

        $r3 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property comment>;

        $r0[2] = $r3;

        $r4 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Property isDefinedBy>;

        $r0[3] = $r4;

        $r5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

        return $r6;
    }

    public java.util.Iterator getClassDescriptionTypes()
    {
        java.util.List $r2;
        java.util.Iterator $r3;
        com.hp.hpl.jena.rdf.model.Resource[] $r0;
        com.hp.hpl.jena.ontology.impl.RDFSProfile r4;
        com.hp.hpl.jena.rdf.model.Resource $r1;

        r4 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        $r0 = newarray (com.hp.hpl.jena.rdf.model.Resource)[1];

        $r1 = <com.hp.hpl.jena.vocabulary.RDFS: com.hp.hpl.jena.rdf.model.Resource Class>;

        $r0[0] = $r1;

        $r2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r0);

        $r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

        return $r3;
    }

    public boolean isSupported(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph, java.lang.Class)
    {
        java.util.HashMap $r3;
        com.hp.hpl.jena.graph.Node r6;
        com.hp.hpl.jena.ontology.impl.RDFSProfile$SupportsCheck r5;
        com.hp.hpl.jena.ontology.impl.RDFSProfile r7;
        com.hp.hpl.jena.enhanced.EnhGraph r0;
        java.lang.Class r2;
        java.lang.Object $r4;
        com.hp.hpl.jena.ontology.OntModel r1;
        boolean $z0, $z1, $z2, $z3;

        r7 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        r6 := @parameter0: com.hp.hpl.jena.graph.Node;

        r0 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        r2 := @parameter2: java.lang.Class;

        $z0 = r0 instanceof com.hp.hpl.jena.ontology.OntModel;

        if $z0 == 0 goto label5;

        r1 = (com.hp.hpl.jena.ontology.OntModel) r0;

        $z1 = interfaceinvoke r1.<com.hp.hpl.jena.ontology.OntModel: boolean strictMode()>();

        if $z1 != 0 goto label1;

        return 1;

     label1:
        $r3 = <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.util.HashMap s_supportsChecks>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        r5 = (com.hp.hpl.jena.ontology.impl.RDFSProfile$SupportsCheck) $r4;

        if r5 == null goto label2;

        $z2 = virtualinvoke r5.<com.hp.hpl.jena.ontology.impl.RDFSProfile$SupportsCheck: boolean doCheck(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r6, r0);

        if $z2 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        return $z3;

     label5:
        return 0;
    }

    public java.lang.String getLabel()
    {
        com.hp.hpl.jena.ontology.impl.RDFSProfile r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.RDFSProfile;

        return "RDFS";
    }

    static void <clinit>()
    {
        java.lang.Object[] $r1, $r3, $r5, $r10, $r12;
        java.util.HashMap $r7, $r15;
        java.lang.Object[][] $r0, $r8, $r9, $r11;
        int $i0, i1;
        com.hp.hpl.jena.ontology.impl.RDFSProfile$1 $r2;
        com.hp.hpl.jena.ontology.impl.RDFSProfile$3 $r6;
        com.hp.hpl.jena.ontology.impl.RDFSProfile$2 $r4;
        java.lang.Object $r13, $r14;

        $r0 = newarray (java.lang.Object[])[3];

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = class "Lcom/hp/hpl/jena/ontology/OntClass;";

        $r2 = new com.hp.hpl.jena.ontology.impl.RDFSProfile$1;

        specialinvoke $r2.<com.hp.hpl.jena.ontology.impl.RDFSProfile$1: void <init>()>();

        $r1[1] = $r2;

        $r0[0] = $r1;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = class "Lcom/hp/hpl/jena/rdf/model/RDFList;";

        $r4 = new com.hp.hpl.jena.ontology.impl.RDFSProfile$2;

        specialinvoke $r4.<com.hp.hpl.jena.ontology.impl.RDFSProfile$2: void <init>()>();

        $r3[1] = $r4;

        $r0[1] = $r3;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = class "Lcom/hp/hpl/jena/ontology/OntProperty;";

        $r6 = new com.hp.hpl.jena.ontology.impl.RDFSProfile$3;

        specialinvoke $r6.<com.hp.hpl.jena.ontology.impl.RDFSProfile$3: void <init>()>();

        $r5[1] = $r6;

        $r0[2] = $r5;

        <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.lang.Object[][] s_supportsCheckTable> = $r0;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.util.HashMap s_supportsChecks> = $r7;

        i1 = 0;

     label1:
        $r8 = <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.lang.Object[][] s_supportsCheckTable>;

        $i0 = lengthof $r8;

        if i1 >= $i0 goto label2;

        $r15 = <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.util.HashMap s_supportsChecks>;

        $r9 = <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.lang.Object[][] s_supportsCheckTable>;

        $r10 = $r9[i1];

        $r14 = $r10[0];

        $r11 = <com.hp.hpl.jena.ontology.impl.RDFSProfile: java.lang.Object[][] s_supportsCheckTable>;

        $r12 = $r11[i1];

        $r13 = $r12[1];

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r14, $r13);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }
}
