public class com.hp.hpl.jena.sparql.lang.ParserARQUpdate extends com.hp.hpl.jena.sparql.lang.UpdateParser
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.lang.ParserARQUpdate r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.ParserARQUpdate;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.UpdateParser: void <init>()>();

        return;
    }

    protected void parse$(com.hp.hpl.jena.sparql.modify.UpdateSink, java.lang.String)
    {
        com.hp.hpl.jena.sparql.modify.UpdateSink r3;
        com.hp.hpl.jena.sparql.lang.ParserARQUpdate r2;
        java.io.StringReader $r0;
        java.lang.String r1;

        r2 := @this: com.hp.hpl.jena.sparql.lang.ParserARQUpdate;

        r3 := @parameter0: com.hp.hpl.jena.sparql.modify.UpdateSink;

        r1 := @parameter1: java.lang.String;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        specialinvoke r2.<com.hp.hpl.jena.sparql.lang.ParserARQUpdate: void _parse(com.hp.hpl.jena.sparql.modify.UpdateSink,java.io.Reader)>(r3, $r0);

        return;
    }

    protected void parse$(com.hp.hpl.jena.sparql.modify.UpdateSink, org.apache.jena.atlas.io.PeekReader)
    {
        com.hp.hpl.jena.sparql.modify.UpdateSink r1;
        com.hp.hpl.jena.sparql.lang.ParserARQUpdate r0;
        org.apache.jena.atlas.io.PeekReader r2;

        r0 := @this: com.hp.hpl.jena.sparql.lang.ParserARQUpdate;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.UpdateSink;

        r2 := @parameter1: org.apache.jena.atlas.io.PeekReader;

        specialinvoke r0.<com.hp.hpl.jena.sparql.lang.ParserARQUpdate: void _parse(com.hp.hpl.jena.sparql.modify.UpdateSink,java.io.Reader)>(r1, r2);

        return;
    }

    public void parse(com.hp.hpl.jena.sparql.modify.UpdateSink, java.io.Reader)
    {
        com.hp.hpl.jena.sparql.modify.UpdateSink r2;
        com.hp.hpl.jena.sparql.lang.ParserARQUpdate r1;
        org.slf4j.Logger $r4;
        java.lang.Class $r3;
        java.io.Reader r0;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.lang.ParserARQUpdate;

        r2 := @parameter0: com.hp.hpl.jena.sparql.modify.UpdateSink;

        r0 := @parameter1: java.io.Reader;

        $z0 = r0 instanceof java.io.FileReader;

        if $z0 == 0 goto label1;

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>($r3);

        interfaceinvoke $r4.<org.slf4j.Logger: void warn(java.lang.String)>("FileReader passed to ParserSPARQLUpdate.parse - use a FileInputStream");

     label1:
        specialinvoke r1.<com.hp.hpl.jena.sparql.lang.ParserARQUpdate: void _parse(com.hp.hpl.jena.sparql.modify.UpdateSink,java.io.Reader)>(r2, r0);

        return;
    }

    private void _parse(com.hp.hpl.jena.sparql.modify.UpdateSink, java.io.Reader)
    {
        com.hp.hpl.jena.shared.JenaException $r3;
        com.hp.hpl.jena.query.QueryException $r4, $r6;
        com.hp.hpl.jena.sparql.lang.arq.ParseException $r12;
        com.hp.hpl.jena.sparql.lang.arq.TokenMgrError $r7;
        int i0, i1, $i2, $i3;
        com.hp.hpl.jena.sparql.lang.arq.Token $r8, $r9, $r15, $r16;
        java.lang.String $r5, $r11, $r14;
        com.hp.hpl.jena.query.QueryParseException $r10, $r13;
        com.hp.hpl.jena.sparql.lang.arq.ARQParser $r0, r18;
        java.io.Reader r1;
        com.hp.hpl.jena.sparql.modify.UpdateSink r2;
        com.hp.hpl.jena.sparql.lang.ParserARQUpdate r17;

        r17 := @this: com.hp.hpl.jena.sparql.lang.ParserARQUpdate;

        r2 := @parameter0: com.hp.hpl.jena.sparql.modify.UpdateSink;

        r1 := @parameter1: java.io.Reader;

        r18 = null;

     label1:
        $r0 = new com.hp.hpl.jena.sparql.lang.arq.ARQParser;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: void <init>(java.io.Reader)>(r1);

        r18 = $r0;

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: void setUpdateSink(com.hp.hpl.jena.sparql.modify.UpdateSink)>(r2);

        virtualinvoke $r0.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: void UpdateUnit()>();

     label2:
        goto label7;

     label3:
        $r12 := @caughtexception;

        $r13 = new com.hp.hpl.jena.query.QueryParseException;

        $r14 = virtualinvoke $r12.<com.hp.hpl.jena.sparql.lang.arq.ParseException: java.lang.String getMessage()>();

        $r15 = $r12.<com.hp.hpl.jena.sparql.lang.arq.ParseException: com.hp.hpl.jena.sparql.lang.arq.Token currentToken>;

        $i3 = $r15.<com.hp.hpl.jena.sparql.lang.arq.Token: int beginLine>;

        $r16 = $r12.<com.hp.hpl.jena.sparql.lang.arq.ParseException: com.hp.hpl.jena.sparql.lang.arq.Token currentToken>;

        $i2 = $r16.<com.hp.hpl.jena.sparql.lang.arq.Token: int beginColumn>;

        specialinvoke $r13.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,int,int)>($r14, $i3, $i2);

        throw $r13;

     label4:
        $r7 := @caughtexception;

        $r8 = r18.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: com.hp.hpl.jena.sparql.lang.arq.Token token>;

        i0 = $r8.<com.hp.hpl.jena.sparql.lang.arq.Token: int endColumn>;

        $r9 = r18.<com.hp.hpl.jena.sparql.lang.arq.ARQParser: com.hp.hpl.jena.sparql.lang.arq.Token token>;

        i1 = $r9.<com.hp.hpl.jena.sparql.lang.arq.Token: int endLine>;

        $r10 = new com.hp.hpl.jena.query.QueryParseException;

        $r11 = virtualinvoke $r7.<com.hp.hpl.jena.sparql.lang.arq.TokenMgrError: java.lang.String getMessage()>();

        specialinvoke $r10.<com.hp.hpl.jena.query.QueryParseException: void <init>(java.lang.String,int,int)>($r11, i1, i0);

        throw $r10;

     label5:
        $r6 := @caughtexception;

        throw $r6;

     label6:
        $r3 := @caughtexception;

        $r4 = new com.hp.hpl.jena.query.QueryException;

        $r5 = virtualinvoke $r3.<com.hp.hpl.jena.shared.JenaException: java.lang.String getMessage()>();

        specialinvoke $r4.<com.hp.hpl.jena.query.QueryException: void <init>(java.lang.String,java.lang.Throwable)>($r5, $r3);

        throw $r4;

     label7:
        return;

        catch com.hp.hpl.jena.sparql.lang.arq.ParseException from label1 to label2 with label3;
        catch com.hp.hpl.jena.sparql.lang.arq.TokenMgrError from label1 to label2 with label4;
        catch com.hp.hpl.jena.query.QueryException from label1 to label2 with label5;
        catch com.hp.hpl.jena.shared.JenaException from label1 to label2 with label6;
    }
}
