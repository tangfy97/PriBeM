final class com.mycila.inject.internal.guava.io.Files$1 extends java.lang.Object implements com.mycila.inject.internal.guava.io.InputSupplier
{
    final java.io.File val$file;

    void <init>(java.io.File)
    {
        com.mycila.inject.internal.guava.io.Files$1 r0;
        java.io.File r1;

        r0 := @this: com.mycila.inject.internal.guava.io.Files$1;

        r1 := @parameter0: java.io.File;

        r0.<com.mycila.inject.internal.guava.io.Files$1: java.io.File val$file> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.FileInputStream getInput() throws java.io.IOException
    {
        java.io.FileInputStream $r0;
        com.mycila.inject.internal.guava.io.Files$1 r1;
        java.io.File $r2;

        r1 := @this: com.mycila.inject.internal.guava.io.Files$1;

        $r0 = new java.io.FileInputStream;

        $r2 = r1.<com.mycila.inject.internal.guava.io.Files$1: java.io.File val$file>;

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        return $r0;
    }

    public volatile java.lang.Object getInput() throws java.io.IOException
    {
        java.io.FileInputStream $r1;
        com.mycila.inject.internal.guava.io.Files$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.io.Files$1;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.io.Files$1: java.io.FileInputStream getInput()>();

        return $r1;
    }
}
