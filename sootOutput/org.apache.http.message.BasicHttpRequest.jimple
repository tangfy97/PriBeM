public class org.apache.http.message.BasicHttpRequest extends org.apache.http.message.AbstractHttpMessage implements org.apache.http.HttpRequest
{
    private final java.lang.String method;
    private final java.lang.String uri;
    private org.apache.http.RequestLine requestline;

    public void <init>(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        java.lang.IllegalArgumentException $r3, $r4;
        org.apache.http.message.BasicHttpRequest r0;

        r0 := @this: org.apache.http.message.BasicHttpRequest;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.http.message.AbstractHttpMessage: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Method name may not be null");

        throw $r4;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request URI may not be null");

        throw $r3;

     label2:
        r0.<org.apache.http.message.BasicHttpRequest: java.lang.String method> = r1;

        r0.<org.apache.http.message.BasicHttpRequest: java.lang.String uri> = r2;

        r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline> = null;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, org.apache.http.ProtocolVersion)
    {
        org.apache.http.ProtocolVersion r4;
        org.apache.http.message.BasicRequestLine $r1;
        java.lang.String r2, r3;
        org.apache.http.message.BasicHttpRequest r0;

        r0 := @this: org.apache.http.message.BasicHttpRequest;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: org.apache.http.ProtocolVersion;

        $r1 = new org.apache.http.message.BasicRequestLine;

        specialinvoke $r1.<org.apache.http.message.BasicRequestLine: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>(r2, r3, r4);

        specialinvoke r0.<org.apache.http.message.BasicHttpRequest: void <init>(org.apache.http.RequestLine)>($r1);

        return;
    }

    public void <init>(org.apache.http.RequestLine)
    {
        org.apache.http.RequestLine r1;
        java.lang.String $r2, $r3;
        java.lang.IllegalArgumentException $r4;
        org.apache.http.message.BasicHttpRequest r0;

        r0 := @this: org.apache.http.message.BasicHttpRequest;

        r1 := @parameter0: org.apache.http.RequestLine;

        specialinvoke r0.<org.apache.http.message.AbstractHttpMessage: void <init>()>();

        if r1 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Request line may not be null");

        throw $r4;

     label1:
        r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline> = r1;

        $r2 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getMethod()>();

        r0.<org.apache.http.message.BasicHttpRequest: java.lang.String method> = $r2;

        $r3 = interfaceinvoke r1.<org.apache.http.RequestLine: java.lang.String getUri()>();

        r0.<org.apache.http.message.BasicHttpRequest: java.lang.String uri> = $r3;

        return;
    }

    public org.apache.http.ProtocolVersion getProtocolVersion()
    {
        org.apache.http.ProtocolVersion $r2;
        org.apache.http.RequestLine $r1;
        org.apache.http.message.BasicHttpRequest r0;

        r0 := @this: org.apache.http.message.BasicHttpRequest;

        $r1 = virtualinvoke r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine getRequestLine()>();

        $r2 = interfaceinvoke $r1.<org.apache.http.RequestLine: org.apache.http.ProtocolVersion getProtocolVersion()>();

        return $r2;
    }

    public org.apache.http.RequestLine getRequestLine()
    {
        org.apache.http.message.BasicRequestLine $r5;
        org.apache.http.message.BasicHttpRequest r0;
        org.apache.http.ProtocolVersion $r4;
        org.apache.http.RequestLine $r1, $r2;
        org.apache.http.params.HttpParams $r3;
        java.lang.String $r6, $r7;

        r0 := @this: org.apache.http.message.BasicHttpRequest;

        $r1 = r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.params.HttpParams getParams()>();

        $r4 = staticinvoke <org.apache.http.params.HttpProtocolParams: org.apache.http.ProtocolVersion getVersion(org.apache.http.params.HttpParams)>($r3);

        $r5 = new org.apache.http.message.BasicRequestLine;

        $r7 = r0.<org.apache.http.message.BasicHttpRequest: java.lang.String method>;

        $r6 = r0.<org.apache.http.message.BasicHttpRequest: java.lang.String uri>;

        specialinvoke $r5.<org.apache.http.message.BasicRequestLine: void <init>(java.lang.String,java.lang.String,org.apache.http.ProtocolVersion)>($r7, $r6, $r4);

        r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline> = $r5;

     label1:
        $r2 = r0.<org.apache.http.message.BasicHttpRequest: org.apache.http.RequestLine requestline>;

        return $r2;
    }

    public java.lang.String toString()
    {
        org.apache.http.message.HeaderGroup $r8;
        org.apache.http.message.BasicHttpRequest r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r9;
        java.lang.String $r2, $r5, $r10;

        r1 := @this: org.apache.http.message.BasicHttpRequest;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.http.message.BasicHttpRequest: java.lang.String method>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = r1.<org.apache.http.message.BasicHttpRequest: java.lang.String uri>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = r1.<org.apache.http.message.BasicHttpRequest: org.apache.http.message.HeaderGroup headergroup>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
