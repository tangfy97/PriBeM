public class org.eclipse.jdt.internal.compiler.util.GenericXMLWriter extends java.io.PrintWriter
{
    private static final java.lang.String XML_VERSION;
    private java.lang.String lineSeparator;
    private int tab;

    private static void appendEscapedChar(java.lang.StringBuffer, char)
    {
        char c0;
        java.lang.String $r0;
        java.lang.StringBuffer r1;

        r1 := @parameter0: java.lang.StringBuffer;

        c0 := @parameter1: char;

        $r0 = staticinvoke <org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String getReplacement(char)>(c0);

        if $r0 == null goto label1;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r0);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        goto label2;

     label1:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

     label2:
        return;
    }

    private static java.lang.String getEscaped(java.lang.String)
    {
        char $c3;
        java.lang.StringBuffer $r0;
        int $i0, $i1, $i2, i4;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $i1 = $i0 + 10;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i1);

        i4 = 0;

        goto label2;

     label1:
        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i4);

        staticinvoke <org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void appendEscapedChar(java.lang.StringBuffer,char)>($r0, $c3);

        i4 = i4 + 1;

     label2:
        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        if i4 < $i2 goto label1;

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    private static java.lang.String getReplacement(char)
    {
        int $i1;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 34: goto label3;
            case 38: goto label5;
            case 39: goto label4;
            case 60: goto label1;
            case 62: goto label2;
            default: goto label6;
        };

     label1:
        return "lt";

     label2:
        return "gt";

     label3:
        return "quot";

     label4:
        return "apos";

     label5:
        return "amp";

     label6:
        return null;
    }

    public void <init>(java.io.OutputStream, java.lang.String, boolean)
    {
        java.io.PrintWriter $r1;
        java.io.OutputStream r2;
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;
        java.lang.String r3;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        r2 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.OutputStream)>(r2);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void <init>(java.io.Writer,java.lang.String,boolean)>($r1, r3, z0);

        return;
    }

    public void <init>(java.io.Writer, java.lang.String, boolean)
    {
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;
        java.io.Writer r1;
        java.lang.String r2, $r3;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        r1 := @parameter0: java.io.Writer;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab> = 0;

        r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String lineSeparator> = r2;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String lineSeparator>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>($r3);

     label1:
        return;
    }

    public void endTag(java.lang.String, boolean, boolean)
    {
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;
        java.lang.StringBuffer $r1, $r4;
        int $i0, $i1;
        java.lang.String $r2, r3, $r5;
        boolean z0, z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        r3 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab> = $i1;

        $r1 = new java.lang.StringBuffer;

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(47);

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void printTag(java.lang.String,java.util.HashMap,boolean,boolean,boolean)>($r5, null, z0, z1, 0);

        return;
    }

    public void printString(java.lang.String, boolean, boolean)
    {
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;
        java.lang.String r1, $r2;
        boolean z0, z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void printTabulation()>();

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>(r1);

        if z1 == 0 goto label2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String lineSeparator>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>($r2);

     label2:
        return;
    }

    private void printTabulation()
    {
        int $i0, i1;
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        i1 = 0;

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(char)>(9);

        i1 = i1 + 1;

     label2:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab>;

        if i1 < $i0 goto label1;

        return;
    }

    public void printTag(java.lang.String, java.util.HashMap, boolean, boolean, boolean)
    {
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1 $r6;
        java.util.HashMap r2;
        int $i0, $i1, $i2, i3;
        java.lang.String r1, $r3, $r11, $r12;
        java.util.Map$Entry[] r4;
        boolean z0, z1, z2;
        java.util.Map$Entry $r7, $r9;
        java.util.Set $r5;
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;
        java.lang.Object $r8, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.HashMap;

        z0 := @parameter2: boolean;

        z2 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        if z0 == 0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void printTabulation()>();

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(char)>(60);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>(r1);

        if r2 == null goto label4;

        $i2 = virtualinvoke r2.<java.util.HashMap: int size()>();

        r4 = newarray (java.util.Map$Entry)[$i2];

        $r5 = virtualinvoke r2.<java.util.HashMap: java.util.Set entrySet()>();

        interfaceinvoke $r5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(r4);

        $r6 = new org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter$1: void <init>(org.eclipse.jdt.internal.compiler.util.GenericXMLWriter)>(r0);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(r4, $r6);

        i3 = 0;

        goto label3;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(char)>(32);

        $r7 = r4[i3];

        $r8 = interfaceinvoke $r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.Object)>($r8);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>("=\"");

        $r9 = r4[i3];

        $r10 = interfaceinvoke $r9.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r10);

        $r12 = staticinvoke <org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String getEscaped(java.lang.String)>($r11);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>($r12);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(char)>(34);

        i3 = i3 + 1;

     label3:
        if i3 < $i2 goto label2;

     label4:
        if z1 == 0 goto label5;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>("/>");

        goto label6;

     label5:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>(">");

     label6:
        if z2 == 0 goto label7;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String lineSeparator>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void print(java.lang.String)>($r3);

     label7:
        if r2 == null goto label8;

        if z1 != 0 goto label8;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab> = $i1;

     label8:
        return;
    }

    public void startTag(java.lang.String, boolean)
    {
        org.eclipse.jdt.internal.compiler.util.GenericXMLWriter r0;
        int $i0, $i1;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.util.GenericXMLWriter;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: void printTag(java.lang.String,java.util.HashMap,boolean,boolean,boolean)>(r1, null, z0, 1, 0);

        $i0 = r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: int tab> = $i1;

        return;
    }

    public static void <clinit>()
    {
        <org.eclipse.jdt.internal.compiler.util.GenericXMLWriter: java.lang.String XML_VERSION> = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>";

        return;
    }
}
