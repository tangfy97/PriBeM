public class org.mozilla.javascript.ScriptRuntime extends java.lang.Object
{
    public static final java.lang.Class BooleanClass;
    public static final java.lang.Class ByteClass;
    public static final java.lang.Class CharacterClass;
    public static final java.lang.Class ClassClass;
    public static final java.lang.Class DoubleClass;
    public static final java.lang.Class FloatClass;
    public static final java.lang.Class IntegerClass;
    public static final java.lang.Class LongClass;
    public static final java.lang.Class NumberClass;
    public static final java.lang.Class ObjectClass;
    public static final java.lang.Class ShortClass;
    public static final java.lang.Class StringClass;
    public static final java.lang.Class DateClass;
    public static final java.lang.Class ContextClass;
    public static final java.lang.Class ContextFactoryClass;
    public static final java.lang.Class FunctionClass;
    public static final java.lang.Class ScriptableClass;
    public static final java.lang.Class ScriptableObjectClass;
    private static final java.lang.String XML_INIT_CLASS;
    private static final java.lang.String[] lazilyNames;
    private static final java.lang.Object LIBRARY_SCOPE_KEY;
    public static final double NaN;
    public static final double negativeZero;
    public static final java.lang.Double NaNobj;
    private static final boolean MSJVM_BUG_WORKAROUNDS;
    private static final java.lang.String DEFAULT_NS_TAG;
    public static final java.lang.Object[] emptyArgs;
    public static final java.lang.String[] emptyStrings;

    protected void <init>()
    {
        org.mozilla.javascript.ScriptRuntime r0;

        r0 := @this: org.mozilla.javascript.ScriptRuntime;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isRhinoRuntimeType(java.lang.Class)
    {
        java.lang.Class r0, $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z0 == 0 goto label3;

        $r5 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 == $r5 goto label1;

        $z3 = 1;

        goto label2;

     label1:
        $z3 = 0;

     label2:
        return $z3;

     label3:
        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        if r0 == $r1 goto label4;

        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        if r0 == $r2 goto label4;

        $r3 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        $z1 = virtualinvoke $r3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z1 != 0 goto label4;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass>;

        $z2 = virtualinvoke $r4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z2 == 0 goto label5;

     label4:
        $z4 = 1;

        goto label6;

     label5:
        $z4 = 0;

     label6:
        return $z4;
    }

    public static org.mozilla.javascript.ScriptableObject initStandardObjects(org.mozilla.javascript.Context, org.mozilla.javascript.ScriptableObject, boolean)
    {
        java.lang.String[] $r6, $r8, $r13;
        org.mozilla.javascript.NativeObject $r11;
        org.mozilla.javascript.ClassCache $r1;
        int $i0, i1, $i2;
        java.lang.String r7, r9;
        boolean z0, $z1;
        org.mozilla.javascript.Context r5;
        org.mozilla.javascript.LazilyLoadedCtor $r10;
        org.mozilla.javascript.Scriptable $r2, $r3, $r4;
        org.mozilla.javascript.ScriptableObject r12;
        java.lang.Object $r0;

        r5 := @parameter0: org.mozilla.javascript.Context;

        r12 := @parameter1: org.mozilla.javascript.ScriptableObject;

        z0 := @parameter2: boolean;

        if r12 != null goto label1;

        $r11 = new org.mozilla.javascript.NativeObject;

        specialinvoke $r11.<org.mozilla.javascript.NativeObject: void <init>()>();

        r12 = $r11;

     label1:
        $r0 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object LIBRARY_SCOPE_KEY>;

        virtualinvoke r12.<org.mozilla.javascript.ScriptableObject: java.lang.Object associateValue(java.lang.Object,java.lang.Object)>($r0, r12);

        $r1 = new org.mozilla.javascript.ClassCache;

        specialinvoke $r1.<org.mozilla.javascript.ClassCache: void <init>()>();

        virtualinvoke $r1.<org.mozilla.javascript.ClassCache: boolean associate(org.mozilla.javascript.ScriptableObject)>(r12);

        staticinvoke <org.mozilla.javascript.BaseFunction: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeObject: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getObjectPrototype(org.mozilla.javascript.Scriptable)>(r12);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getFunctionPrototype(org.mozilla.javascript.Scriptable)>(r12);

        interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: void setPrototype(org.mozilla.javascript.Scriptable)>($r2);

        $r4 = virtualinvoke r12.<org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getPrototype()>();

        if $r4 != null goto label2;

        virtualinvoke r12.<org.mozilla.javascript.ScriptableObject: void setPrototype(org.mozilla.javascript.Scriptable)>($r2);

     label2:
        staticinvoke <org.mozilla.javascript.NativeError: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeGlobal: void init(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,boolean)>(r5, r12, z0);

        staticinvoke <org.mozilla.javascript.NativeArray: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeString: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeBoolean: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeNumber: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeDate: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeMath: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeWith: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeCall: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        staticinvoke <org.mozilla.javascript.NativeScript: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        $z1 = virtualinvoke r5.<org.mozilla.javascript.Context: boolean hasFeature(int)>(6);

        i1 = 0;

     label3:
        $r13 = <org.mozilla.javascript.ScriptRuntime: java.lang.String[] lazilyNames>;

        $i2 = lengthof $r13;

        if i1 == $i2 goto label6;

        $r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.String[] lazilyNames>;

        r7 = $r6[i1];

        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.String[] lazilyNames>;

        $i0 = i1 + 1;

        r9 = $r8[$i0];

        if $z1 != 0 goto label4;

        if r9 != "org.mozilla.javascript.xmlimpl.XMLLibImpl" goto label4;

        goto label5;

     label4:
        $r10 = new org.mozilla.javascript.LazilyLoadedCtor;

        specialinvoke $r10.<org.mozilla.javascript.LazilyLoadedCtor: void <init>(org.mozilla.javascript.ScriptableObject,java.lang.String,java.lang.String,boolean)>(r12, r7, r9, z0);

     label5:
        i1 = i1 + 2;

        goto label3;

     label6:
        staticinvoke <org.mozilla.javascript.continuations.Continuation: void init(org.mozilla.javascript.Scriptable,boolean)>(r12, z0);

        return r12;
    }

    public static org.mozilla.javascript.ScriptableObject getLibraryScopeOrNull(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.ScriptableObject r3;
        java.lang.Object $r1, $r2;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object LIBRARY_SCOPE_KEY>;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getTopScopeValue(org.mozilla.javascript.Scriptable,java.lang.Object)>(r0, $r1);

        r3 = (org.mozilla.javascript.ScriptableObject) $r2;

        return r3;
    }

    public static boolean isJSLineTerminator(int)
    {
        int i0, $i1, $i3;
        boolean $z0;

        i0 := @parameter0: int;

        $i3 = (int) 57296;

        $i1 = i0 & $i3;

        if $i1 == 0 goto label1;

        return 0;

     label1:
        if i0 == 10 goto label2;

        if i0 == 13 goto label2;

        if i0 == 8232 goto label2;

        if i0 != 8233 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static java.lang.Boolean wrapBoolean(boolean)
    {
        java.lang.Boolean $r0;
        boolean z0;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r0 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label2;

     label1:
        $r0 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label2:
        return $r0;
    }

    public static java.lang.Integer wrapInt(int)
    {
        int i0;
        java.lang.Integer $r0;

        i0 := @parameter0: int;

        $r0 = new java.lang.Integer;

        specialinvoke $r0.<java.lang.Integer: void <init>(int)>(i0);

        return $r0;
    }

    public static java.lang.Number wrapNumber(double)
    {
        byte $b0;
        java.lang.Double $r0, $r1;
        double d0;

        d0 := @parameter0: double;

        $b0 = d0 cmpl d0;

        if $b0 == 0 goto label1;

        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r1;

     label1:
        $r0 = new java.lang.Double;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>(d0);

        return $r0;
    }

    public static boolean toBoolean(java.lang.Object)
    {
        byte $b0, $b1;
        int $i2;
        java.lang.Boolean $r8;
        java.lang.String $r7;
        java.lang.Number $r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        double $d0;
        org.mozilla.javascript.Context $r1;
        java.lang.RuntimeException $r5;
        org.mozilla.javascript.Scriptable $r3;
        java.lang.Object $r0, $r4, r9;
        java.lang.Class $r2;

        r9 := @parameter0: java.lang.Object;

     label01:
        $z0 = r9 instanceof java.lang.Boolean;

        if $z0 == 0 goto label02;

        $r8 = (java.lang.Boolean) r9;

        $z6 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>();

        return $z6;

     label02:
        if r9 == null goto label03;

        $r0 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r9 != $r0 goto label04;

     label03:
        return 0;

     label04:
        $z1 = r9 instanceof java.lang.String;

        if $z1 == 0 goto label07;

        $r7 = (java.lang.String) r9;

        $i2 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i2 == 0 goto label05;

        $z7 = 1;

        goto label06;

     label05:
        $z7 = 0;

     label06:
        return $z7;

     label07:
        $z2 = r9 instanceof java.lang.Number;

        if $z2 == 0 goto label10;

        $r6 = (java.lang.Number) r9;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl $d0;

        if $b0 != 0 goto label08;

        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label08;

        $z8 = 1;

        goto label09;

     label08:
        $z8 = 0;

     label09:
        return $z8;

     label10:
        $z3 = r9 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label12;

        $r1 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $z4 = virtualinvoke $r1.<org.mozilla.javascript.Context: boolean isVersionECMA1()>();

        if $z4 == 0 goto label11;

        return 1;

     label11:
        $r3 = (org.mozilla.javascript.Scriptable) r9;

        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass>;

        $r4 = interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r2);

        r9 = $r4;

        $z5 = $r4 instanceof org.mozilla.javascript.Scriptable;

        if $z5 == 0 goto label01;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException errorWithClassName(java.lang.String,java.lang.Object)>("msg.primitive.expected", $r4);

        throw $r5;

     label12:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r9);

        return 1;
    }

    public static boolean toBoolean(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        $r1 = r0[i0];

        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean toBoolean(java.lang.Object)>($r1);

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static double toNumber(java.lang.Object)
    {
        java.lang.Boolean $r5;
        java.lang.String $r6;
        java.lang.Number $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0, $d1, $d2, $d3, $d4;
        java.lang.RuntimeException $r4;
        org.mozilla.javascript.Scriptable $r2;
        java.lang.Object $r0, $r3, r8;
        java.lang.Class $r1;

        r8 := @parameter0: java.lang.Object;

     label1:
        $z0 = r8 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r7 = (java.lang.Number) r8;

        $d3 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        return $d3;

     label2:
        if r8 != null goto label3;

        return 0.0;

     label3:
        $r0 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r8 != $r0 goto label4;

        $d2 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d2;

     label4:
        $z1 = r8 instanceof java.lang.String;

        if $z1 == 0 goto label5;

        $r6 = (java.lang.String) r8;

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.String)>($r6);

        return $d1;

     label5:
        $z2 = r8 instanceof java.lang.Boolean;

        if $z2 == 0 goto label8;

        $r5 = (java.lang.Boolean) r8;

        $z5 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        if $z5 == 0 goto label6;

        $d4 = 1.0;

        goto label7;

     label6:
        $d4 = 0.0;

     label7:
        return $d4;

     label8:
        $z3 = r8 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label9;

        $r2 = (org.mozilla.javascript.Scriptable) r8;

        $r1 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        $r3 = interfaceinvoke $r2.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r1);

        r8 = $r3;

        $z4 = $r3 instanceof org.mozilla.javascript.Scriptable;

        if $z4 == 0 goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException errorWithClassName(java.lang.String,java.lang.Object)>("msg.primitive.expected", $r3);

        throw $r4;

     label9:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r8);

        $d0 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d0;
    }

    public static double toNumber(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0, $i1;
        java.lang.Object $r1;
        double $d0;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        $r1 = r0[i0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r1);

        goto label2;

     label1:
        $d0 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

     label2:
        return $d0;
    }

    static double stringToNumber(java.lang.String, int, int)
    {
        byte $b2, b22, b26, b27;
        java.lang.Double $r2;
        java.lang.String r0, $r1;
        java.lang.NumberFormatException $r3;
        boolean z0, $z1, z2, z3, $z5, $z6, $z7, $z8, $z9;
        int $i0, i1, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, i20, i21, i23, $i24, $i25, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i42, $i43, $i44, $i45, $i47, $i48, $i50, $i52, $i54;
        double $d0, $d1, $d2, d3, $d4, $d5, $d6, d7;
        char $c4, $c5;

        r0 := @parameter0: java.lang.String;

        i14 := @parameter1: int;

        i1 := @parameter2: int;

        i15 = 57;

        i16 = 97;

        i17 = 65;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i1 >= 10 goto label01;

        $i12 = 48 + i1;

        $i13 = $i12 - 1;

        i15 = (char) $i13;

     label01:
        if i1 <= 10 goto label02;

        $i8 = 97 + i1;

        $i9 = $i8 - 10;

        i16 = (char) $i9;

        $i10 = 65 + i1;

        $i11 = $i10 - 10;

        i17 = (char) $i11;

     label02:
        d3 = 0.0;

        i18 = i14;

     label03:
        if i18 >= $i0 goto label07;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i18);

        $i28 = (int) $c5;

        if 48 > $i28 goto label04;

        $i29 = (int) $c5;

        if $i29 > i15 goto label04;

        $i30 = (int) $c5;

        i19 = $i30 - 48;

        goto label06;

     label04:
        $i31 = (int) $c5;

        if 97 > $i31 goto label05;

        $i32 = (int) $c5;

        if $i32 >= i16 goto label05;

        $i33 = (int) $c5;

        $i7 = $i33 - 97;

        i19 = $i7 + 10;

        goto label06;

     label05:
        $i34 = (int) $c5;

        if 65 > $i34 goto label07;

        $i35 = (int) $c5;

        if $i35 >= i17 goto label07;

        $i36 = (int) $c5;

        $i6 = $i36 - 65;

        i19 = $i6 + 10;

     label06:
        $d4 = (double) i1;

        $d5 = d3 * $d4;

        $d6 = (double) i19;

        d3 = $d5 + $d6;

        i18 = i18 + 1;

        goto label03;

     label07:
        if i14 != i18 goto label08;

        $d1 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d1;

     label08:
        $b2 = d3 cmpl 9.007199254740992E15;

        $i37 = (int) $b2;

        if $i37 < 0 goto label36;

        if i1 != 10 goto label12;

     label09:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i14, i18);

        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r1);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

     label10:
        return $d0;

     label11:
        $r3 := @caughtexception;

        $d2 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d2;

     label12:
        if i1 == 2 goto label13;

        if i1 == 4 goto label13;

        if i1 == 8 goto label13;

        if i1 == 16 goto label13;

        if i1 != 32 goto label36;

     label13:
        i20 = 1;

        i21 = 0;

        b22 = 0;

        b27 = 0;

        b26 = 0;

        i23 = 53;

        d7 = 0.0;

        z2 = 0;

        z3 = 0;

     label14:
        if i20 != 1 goto label19;

        if i14 != i18 goto label15;

        goto label29;

     label15:
        $i3 = i14;

        i14 = i14 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i38 = (int) $c4;

        if 48 > $i38 goto label16;

        $i39 = (int) $c4;

        if $i39 > 57 goto label16;

        $i40 = (int) $c4;

        $i42 = (int) -48;

        i21 = $i40 + $i42;

        goto label18;

     label16:
        $i43 = (int) $c4;

        if 97 > $i43 goto label17;

        $i44 = (int) $c4;

        if $i44 > 122 goto label17;

        $i45 = (int) $c4;

        $i47 = (int) -87;

        i21 = $i45 + $i47;

        goto label18;

     label17:
        $i48 = (int) $c4;

        $i50 = (int) -55;

        i21 = $i48 + $i50;

     label18:
        i20 = i1;

     label19:
        $i24 = i20 >> 1;

        i20 = $i24;

        $i25 = i21 & $i24;

        if $i25 == 0 goto label20;

        $z9 = 1;

        $z8 = 1;

        $z7 = 1;

        $z6 = 1;

        $z5 = 1;

        goto label21;

     label20:
        $z9 = 0;

        $z8 = 0;

        $z7 = 0;

        $z6 = 0;

        $z5 = 0;

     label21:
        z0 = $z7;

        tableswitch(b26)
        {
            case 0: goto label22;
            case 1: goto label23;
            case 2: goto label25;
            case 3: goto label26;
            case 4: goto label27;
            default: goto label28;
        };

     label22:
        if $z8 == 0 goto label28;

        $i52 = (int) -1;

        i23 = i23 + $i52;

        d3 = 1.0;

        b22 = 1;

        b27 = 1;

        b26 = 1;

        goto label28;

     label23:
        d3 = d3 * 2.0;

        if $z5 == 0 goto label24;

        d3 = d3 + 1.0;

     label24:
        $i54 = (int) -1;

        i23 = i23 + $i54;

        if i23 != 0 goto label28;

        z2 = z0;

        b22 = 2;

        b27 = 2;

        b26 = 2;

        goto label28;

     label25:
        z3 = $z6;

        d7 = 2.0;

        b22 = 3;

        b27 = 3;

        b26 = 3;

        goto label28;

     label26:
        if $z9 == 0 goto label27;

        b22 = 4;

        b27 = 4;

        b26 = 4;

     label27:
        d7 = d7 * 2.0;

     label28:
        goto label14;

     label29:
        tableswitch(b27)
        {
            case 0: goto label30;
            case 1: goto label31;
            case 2: goto label31;
            case 3: goto label32;
            case 4: goto label34;
            default: goto label36;
        };

     label30:
        d3 = 0.0;

        goto label36;

     label31:
        goto label36;

     label32:
        $z1 = z3 & z2;

        if $z1 == 0 goto label33;

        d3 = d3 + 1.0;

     label33:
        d3 = d3 * d7;

        goto label36;

     label34:
        if z3 == 0 goto label35;

        d3 = d3 + 1.0;

     label35:
        d3 = d3 * d7;

     label36:
        return d3;

        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public static double toNumber(java.lang.String)
    {
        boolean $z0, $z1, $z2;
        java.lang.Double $r2;
        int $i0, $i2, $i3, $i4, $i6, $i8, $i10, $i11, $i12, $i14, i15, i16, $i18, i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i43;
        java.lang.String r0, $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        char $c1, $c5, $c7, $c9, $c13, $c17;
        java.lang.NumberFormatException $r3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i15 = 0;

     label01:
        if i15 != $i0 goto label02;

        return 0.0;

     label02:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 != 0 goto label03;

        goto label04;

     label03:
        i15 = i15 + 1;

        goto label01;

     label04:
        $i20 = (int) $c1;

        if $i20 != 48 goto label06;

        $i11 = i15 + 2;

        if $i11 >= $i0 goto label11;

        $i12 = i15 + 1;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);

        $i21 = (int) $c13;

        if $i21 == 120 goto label05;

        $i22 = (int) $c13;

        if $i22 != 88 goto label11;

     label05:
        $i14 = i15 + 2;

        $d4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double stringToNumber(java.lang.String,int,int)>(r0, $i14, 16);

        return $d4;

     label06:
        $i23 = (int) $c1;

        if $i23 == 43 goto label07;

        $i24 = (int) $c1;

        if $i24 != 45 goto label11;

     label07:
        $i2 = i15 + 3;

        if $i2 >= $i0 goto label11;

        $i6 = i15 + 1;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $i25 = (int) $c7;

        if $i25 != 48 goto label11;

        $i8 = i15 + 2;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        $i26 = (int) $c9;

        if $i26 == 120 goto label08;

        $i27 = (int) $c9;

        if $i27 != 88 goto label11;

     label08:
        $i10 = i15 + 3;

        $d3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double stringToNumber(java.lang.String,int,int)>(r0, $i10, 16);

        $i28 = (int) $c1;

        if $i28 != 45 goto label09;

        $d6 = neg $d3;

        goto label10;

     label09:
        $d6 = $d3;

     label10:
        return $d6;

     label11:
        i16 = $i0 - 1;

     label12:
        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        $z2 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c17);

        if $z2 == 0 goto label13;

        $i30 = (int) -1;

        i16 = i16 + $i30;

        goto label12;

     label13:
        $i31 = (int) $c17;

        if $i31 != 121 goto label19;

        $i32 = (int) $c1;

        if $i32 == 43 goto label14;

        $i33 = (int) $c1;

        if $i33 != 45 goto label15;

     label14:
        i15 = i15 + 1;

     label15:
        $i18 = i15 + 7;

        if $i18 != i16 goto label18;

        $z1 = virtualinvoke r0.<java.lang.String: boolean regionMatches(int,java.lang.String,int,int)>(i15, "Infinity", 0, 8);

        if $z1 == 0 goto label18;

        $i34 = (int) $c1;

        if $i34 != 45 goto label16;

        $d7 = #-Infinity;

        goto label17;

     label16:
        $d7 = #Infinity;

     label17:
        return $d7;

     label18:
        $d2 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d2;

     label19:
        $i3 = i16 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i15, $i3);

        $i4 = virtualinvoke $r1.<java.lang.String: int length()>();

        i19 = $i4 - 1;

     label20:
        if i19 < 0 goto label24;

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i19);

        $i35 = (int) $c5;

        if 48 > $i35 goto label21;

        $i36 = (int) $c5;

        if $i36 <= 57 goto label23;

     label21:
        $i37 = (int) $c5;

        if $i37 == 46 goto label23;

        $i38 = (int) $c5;

        if $i38 == 101 goto label23;

        $i39 = (int) $c5;

        if $i39 == 69 goto label23;

        $i40 = (int) $c5;

        if $i40 == 43 goto label23;

        $i41 = (int) $c5;

        if $i41 != 45 goto label22;

        goto label23;

     label22:
        $d1 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d1;

     label23:
        $i43 = (int) -1;

        i19 = i19 + $i43;

        goto label20;

     label24:
        $r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(java.lang.String)>($r1);

        $d0 = virtualinvoke $r2.<java.lang.Double: double doubleValue()>();

     label25:
        return $d0;

     label26:
        $r3 := @caughtexception;

        $d5 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        return $d5;

        catch java.lang.NumberFormatException from label24 to label25 with label26;
    }

    public static java.lang.Object[] padArguments(java.lang.Object[], int)
    {
        java.lang.Object[] r0, r1;
        int i0, $i1, $i2, i3;
        java.lang.Object $r2, $r3;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        return r0;

     label1:
        r1 = newarray (java.lang.Object)[i0];

        i3 = 0;

     label2:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label3;

        $r3 = r0[i3];

        r1[i3] = $r3;

        i3 = i3 + 1;

        goto label2;

     label3:
        if i3 >= i0 goto label4;

        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        r1[i3] = $r2;

        i3 = i3 + 1;

        goto label3;

     label4:
        return r1;
    }

    public static java.lang.String escapeString(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeString(java.lang.String,char)>(r0, 34);

        return $r1;
    }

    public static java.lang.String escapeString(java.lang.String, char)
    {
        byte b11, b12, b15, b16;
        java.lang.StringBuffer r2, $r4;
        int $i2, $i3, i4, $i7, i9, $i10, i13, $i14, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i30;
        java.lang.String r0, $r3;
        char c0, $c1, $c5, $c6, $c8;

        r0 := @parameter0: java.lang.String;

        c0 := @parameter1: char;

        $i17 = (int) c0;

        if $i17 == 34 goto label01;

        $i18 = (int) c0;

        if $i18 == 39 goto label01;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label01:
        r2 = null;

        i9 = 0;

        $i10 = virtualinvoke r0.<java.lang.String: int length()>();

     label02:
        if i9 == $i10 goto label22;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i9);

        $i19 = (int) $c1;

        if 32 > $i19 goto label03;

        $i20 = (int) $c1;

        if $i20 > 126 goto label03;

        $i21 = (int) $c1;

        $i22 = (int) c0;

        if $i21 == $i22 goto label03;

        $i23 = (int) $c1;

        if $i23 == 92 goto label03;

        if r2 == null goto label21;

        $c8 = (char) $c1;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        goto label21;

     label03:
        if r2 != null goto label04;

        $r4 = new java.lang.StringBuffer;

        $i7 = $i10 + 3;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i7);

        r2 = $r4;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        virtualinvoke $r4.<java.lang.StringBuffer: void setLength(int)>(i9);

     label04:
        b11 = -1;

        b16 = -1;

        b15 = -1;

        $i24 = (int) $c1;

        lookupswitch($i24)
        {
            case 8: goto label05;
            case 9: goto label09;
            case 10: goto label07;
            case 11: goto label10;
            case 12: goto label06;
            case 13: goto label08;
            case 32: goto label11;
            case 92: goto label12;
            default: goto label13;
        };

     label05:
        b11 = 98;

        b16 = 98;

        b15 = 98;

        goto label13;

     label06:
        b11 = 102;

        b16 = 102;

        b15 = 102;

        goto label13;

     label07:
        b11 = 110;

        b16 = 110;

        b15 = 110;

        goto label13;

     label08:
        b11 = 114;

        b16 = 114;

        b15 = 114;

        goto label13;

     label09:
        b11 = 116;

        b16 = 116;

        b15 = 116;

        goto label13;

     label10:
        b11 = 118;

        b16 = 118;

        b15 = 118;

        goto label13;

     label11:
        b11 = 32;

        b16 = 32;

        b15 = 32;

        goto label13;

     label12:
        b11 = 92;

        b16 = 92;

        b15 = 92;

     label13:
        if b16 < 0 goto label14;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        $c6 = (char) b15;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c6);

        goto label21;

     label14:
        $i25 = (int) $c1;

        $i26 = (int) c0;

        if $i25 != $i26 goto label15;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(92);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0);

        goto label21;

     label15:
        $i27 = (int) $c1;

        if $i27 >= 256 goto label16;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\x");

        b12 = 2;

        goto label17;

     label16:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\\u");

        b12 = 4;

     label17:
        $i2 = b12 - 1;

        i13 = $i2 * 4;

     label18:
        if i13 < 0 goto label21;

        $i28 = (int) $c1;

        $i3 = $i28 >> i13;

        i4 = 15 & $i3;

        if i4 >= 10 goto label19;

        $i14 = 48 + i4;

        goto label20;

     label19:
        $i14 = 87 + i4;

     label20:
        $c5 = (char) $i14;

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        $i30 = (int) -4;

        i13 = i13 + $i30;

        goto label18;

     label21:
        i9 = i9 + 1;

        goto label02;

     label22:
        if r2 != null goto label23;

        $r3 = r0;

        goto label24;

     label23:
        $r3 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

     label24:
        return $r3;
    }

    static boolean isValidIdentifierName(java.lang.String)
    {
        char $c1, $c2;
        int $i0, i3;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i3 = 1;

     label3:
        if i3 == $i0 goto label5;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $z2 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c2);

        if $z2 != 0 goto label4;

        return 0;

     label4:
        i3 = i3 + 1;

        goto label3;

     label5:
        $z1 = staticinvoke <org.mozilla.javascript.TokenStream: boolean isKeyword(java.lang.String)>(r0);

        if $z1 != 0 goto label6;

        $z3 = 1;

        goto label7;

     label6:
        $z3 = 0;

     label7:
        return $z3;
    }

    public static java.lang.String toString(java.lang.Object)
    {
        java.lang.RuntimeException $r5;
        org.mozilla.javascript.Scriptable $r3;
        java.lang.Object $r0, $r4, r9;
        java.lang.Class $r2;
        java.lang.String $r1, $r7, $r8;
        java.lang.Number $r6;
        boolean $z0, $z1, $z2, $z3;
        double $d0;

        r9 := @parameter0: java.lang.Object;

     label1:
        if r9 != null goto label2;

        return "null";

     label2:
        $r0 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r9 != $r0 goto label3;

        return "undefined";

     label3:
        $z0 = r9 instanceof java.lang.String;

        if $z0 == 0 goto label4;

        $r8 = (java.lang.String) r9;

        return $r8;

     label4:
        $z1 = r9 instanceof java.lang.Number;

        if $z1 == 0 goto label5;

        $r6 = (java.lang.Number) r9;

        $d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String numberToString(double,int)>($d0, 10);

        return $r7;

     label5:
        $z2 = r9 instanceof org.mozilla.javascript.Scriptable;

        if $z2 == 0 goto label6;

        $r3 = (org.mozilla.javascript.Scriptable) r9;

        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass>;

        $r4 = interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r2);

        r9 = $r4;

        $z3 = $r4 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException errorWithClassName(java.lang.String,java.lang.Object)>("msg.primitive.expected", $r4);

        throw $r5;

     label6:
        $r1 = virtualinvoke r9.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    static java.lang.String defaultObjectToString(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[object ");

        $r3 = interfaceinvoke r2.<org.mozilla.javascript.Scriptable: java.lang.String getClassName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static java.lang.String toString(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0, $i1;
        java.lang.Object $r1;
        java.lang.String $r2;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        $r1 = r0[i0];

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r1);

        goto label2;

     label1:
        $r2 = "undefined";

     label2:
        return $r2;
    }

    public static java.lang.String toString(double)
    {
        java.lang.String $r0;
        double d0;

        d0 := @parameter0: double;

        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String numberToString(double,int)>(d0, 10);

        return $r0;
    }

    public static java.lang.String numberToString(double, int)
    {
        org.mozilla.javascript.EvaluatorException $r1;
        byte $b0, $b1, $b2, $b3;
        java.lang.StringBuffer $r2;
        int i4;
        java.lang.String $r0, $r3, $r4;
        double d0;

        d0 := @parameter0: double;

        i4 := @parameter1: int;

        $b0 = d0 cmpl d0;

        if $b0 == 0 goto label1;

        return "NaN";

     label1:
        $b1 = d0 cmpl #Infinity;

        if $b1 != 0 goto label2;

        return "Infinity";

     label2:
        $b2 = d0 cmpl #-Infinity;

        if $b2 != 0 goto label3;

        return "-Infinity";

     label3:
        $b3 = d0 cmpl 0.0;

        if $b3 != 0 goto label4;

        return "0";

     label4:
        if i4 < 2 goto label5;

        if i4 <= 36 goto label6;

     label5:
        $r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i4);

        $r1 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.bad.radix", $r0);

        throw $r1;

     label6:
        if i4 == 10 goto label7;

        $r4 = staticinvoke <org.mozilla.javascript.DToA: java.lang.String JS_dtobasestr(int,double)>(i4, d0);

        return $r4;

     label7:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        staticinvoke <org.mozilla.javascript.DToA: void JS_dtostr(java.lang.StringBuffer,int,int,double)>($r2, 0, 0, d0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    static java.lang.String uneval(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        java.lang.Object[] $r8;
        byte $b0, $b1;
        java.lang.StringBuffer $r19;
        int $i2, $i3, $i4;
        org.mozilla.javascript.Function r5;
        java.lang.String $r2, $r4, $r10, $r11, $r13, $r14, $r15, $r17;
        java.lang.Number $r12;
        boolean $z0, $z1, $z2, $z3, $z4;
        double $d0, $d1;
        org.mozilla.javascript.Context r6;
        org.mozilla.javascript.Scriptable r7, r18;
        java.lang.Object r0, $r1, $r3, $r9;

        r6 := @parameter0: org.mozilla.javascript.Context;

        r7 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        return "null";

     label1:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r1 goto label2;

        return "undefined";

     label2:
        $z0 = r0 instanceof java.lang.String;

        if $z0 == 0 goto label3;

        $r14 = (java.lang.String) r0;

        $r15 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeString(java.lang.String)>($r14);

        $r19 = new java.lang.StringBuffer;

        $i2 = virtualinvoke $r15.<java.lang.String: int length()>();

        $i3 = $i2 + 2;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>(int)>($i3);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r17 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r17;

     label3:
        $z1 = r0 instanceof java.lang.Number;

        if $z1 == 0 goto label5;

        $r12 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r12.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label4;

        $d1 = 1.0 / $d0;

        $b1 = $d1 cmpg 0.0;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label4;

        return "-0";

     label4:
        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>($d0);

        return $r13;

     label5:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label6;

        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        return $r11;

     label6:
        $z3 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label8;

        r18 = (org.mozilla.javascript.Scriptable) r0;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r18, "toSource");

        $z4 = $r3 instanceof org.mozilla.javascript.Function;

        if $z4 == 0 goto label7;

        r5 = (org.mozilla.javascript.Function) $r3;

        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r9 = interfaceinvoke r5.<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r6, r7, r18, $r8);

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>($r9);

        return $r10;

     label7:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        return $r4;

     label8:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r0);

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    static java.lang.String defaultObjectToSource(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r7, r14;
        java.lang.Integer $r10;
        java.lang.StringBuffer $r4;
        int $i0, $i1, i2;
        java.lang.String $r5, $r8, r16, $r17;
        boolean $z0, $z1, z2, z3, z4, z5, z6, z7;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r2, r9;
        java.lang.Object $r11, r15;
        org.mozilla.javascript.ObjToIntMap $r1, $r3, $r6, $r12;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r9 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: org.mozilla.javascript.Scriptable;

        r14 := @parameter3: java.lang.Object[];

        $r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating>;

        if $r1 != null goto label01;

        z2 = 1;

        z7 = 1;

        z6 = 1;

        z5 = 1;

        z4 = 1;

        z3 = 0;

        $r12 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r12.<org.mozilla.javascript.ObjToIntMap: void <init>(int)>(31);

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating> = $r12;

        goto label02;

     label01:
        z2 = 0;

        z7 = 0;

        z6 = 0;

        z5 = 0;

        z4 = 0;

        $r3 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating>;

        z3 = virtualinvoke $r3.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>(r2);

     label02:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>(128);

        if z5 == 0 goto label03;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

     label03:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

     label04:
        if z3 != 0 goto label10;

        $r6 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating>;

        virtualinvoke $r6.<org.mozilla.javascript.ObjToIntMap: java.lang.Object intern(java.lang.Object)>(r2);

        $r7 = interfaceinvoke r2.<org.mozilla.javascript.Scriptable: java.lang.Object[] getIds()>();

        i2 = 0;

     label05:
        $i0 = lengthof $r7;

        if i2 >= $i0 goto label10;

        if i2 <= 0 goto label06;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label06:
        $r11 = $r7[i2];

        $z0 = $r11 instanceof java.lang.Integer;

        if $z0 == 0 goto label07;

        $r10 = (java.lang.Integer) $r11;

        $i1 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        r15 = interfaceinvoke r2.<org.mozilla.javascript.Scriptable: java.lang.Object get(int,org.mozilla.javascript.Scriptable)>($i1, r2);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        goto label09;

     label07:
        r16 = (java.lang.String) $r11;

        r15 = interfaceinvoke r2.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r16, r2);

        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean isValidIdentifierName(java.lang.String)>(r16);

        if $z1 == 0 goto label08;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        goto label09;

     label08:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeString(java.lang.String,char)>(r16, 39);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(39);

     label09:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $r17 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String uneval(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r0, r9, r15);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        i2 = i2 + 1;

        goto label05;

     label10:
        if z4 == 0 goto label14;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating> = null;

        goto label14;

     label11:
        $r13 := @caughtexception;

     label12:
        if z7 == 0 goto label13;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.ObjToIntMap iterating> = null;

     label13:
        throw $r13;

     label14:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        if z6 == 0 goto label15;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

     label15:
        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;

        catch java.lang.Throwable from label04 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
    }

    public static org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.Scriptable r2, $r3, $r4;
        org.mozilla.javascript.Context $r1;
        java.lang.Object r0;
        boolean $z0;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.Scriptable) r0;

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>($r1, r2, r0);

        return $r3;
    }

    public static org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.Scriptable $r3, $r4, $r5;
        org.mozilla.javascript.Context r2;
        java.lang.Object r0, $r1;
        boolean $z0;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r5 = (org.mozilla.javascript.Scriptable) r0;

        return $r5;

     label1:
        if r0 == null goto label2;

        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 == $r1 goto label2;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context)>(r2);

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r2, $r3, r0);

        return $r4;

     label2:
        return null;
    }

    public static org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.Scriptable r2, $r3, $r4;
        org.mozilla.javascript.Context $r1;
        java.lang.Object r0;
        java.lang.Class r5;
        boolean $z0;

        r2 := @parameter0: org.mozilla.javascript.Scriptable;

        r0 := @parameter1: java.lang.Object;

        r5 := @parameter2: java.lang.Class;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r4 = (org.mozilla.javascript.Scriptable) r0;

        return $r4;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>($r1, r2, r0);

        return $r3;
    }

    public static org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r10, $r11;
        java.lang.Object[] $r7;
        java.lang.String $r15, $r16;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r5;
        org.mozilla.javascript.WrapFactory $r3;
        org.mozilla.javascript.Scriptable $r6, $r8, $r9, $r12, r13;
        java.lang.Object r0, $r1, $r4;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r13 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label1;

        $r12 = (org.mozilla.javascript.Scriptable) r0;

        return $r12;

     label1:
        if r0 != null goto label2;

        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.null.to.object");

        throw $r11;

     label2:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r1 goto label3;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.undef.to.object");

        throw $r10;

     label3:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label4;

        $r16 = "String";

        $r15 = "String";

        goto label7;

     label4:
        $z2 = r0 instanceof java.lang.Number;

        if $z2 == 0 goto label5;

        $r16 = "Number";

        $r15 = "Number";

        goto label7;

     label5:
        $z3 = r0 instanceof java.lang.Boolean;

        if $z3 == 0 goto label6;

        $r16 = "Boolean";

        $r15 = "Boolean";

        goto label7;

     label6:
        $r16 = null;

        $r15 = null;

     label7:
        if $r16 == null goto label8;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r0;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r13);

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r2, $r8, $r15, $r7);

        return $r9;

     label8:
        $r3 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r2, r13, r0, null);

        $z4 = $r4 instanceof org.mozilla.javascript.Scriptable;

        if $z4 == 0 goto label9;

        $r6 = (org.mozilla.javascript.Scriptable) $r4;

        return $r6;

     label9:
        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException errorWithClassName(java.lang.String,java.lang.Object)>("msg.invalid.type", r0);

        throw $r5;
    }

    public static org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Class)
    {
        org.mozilla.javascript.Scriptable r1, $r3;
        org.mozilla.javascript.Context r0;
        java.lang.Object r2;
        java.lang.Class r4;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.Object;

        r4 := @parameter3: java.lang.Class;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObject(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object)>(r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object call(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object, java.lang.Object[], org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] r6;
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r8, $r10;
        org.mozilla.javascript.Scriptable $r4, r5;
        java.lang.Object r0, r3, $r7;
        org.mozilla.javascript.Function r1;
        java.lang.String $r9;
        boolean $z0;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        r3 := @parameter2: java.lang.Object;

        r6 := @parameter3: java.lang.Object[];

        r5 := @parameter4: org.mozilla.javascript.Scriptable;

        $z0 = r0 instanceof org.mozilla.javascript.Function;

        if $z0 != 0 goto label1;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object)>($r9);

        throw $r10;

     label1:
        r1 = (org.mozilla.javascript.Function) r0;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r2, r3);

        if $r4 != null goto label2;

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefCallError(java.lang.Object,java.lang.Object)>($r4, "function");

        throw $r8;

     label2:
        $r7 = interfaceinvoke r1.<org.mozilla.javascript.Function: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r5, $r4, r6);

        return $r7;
    }

    public static org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String, java.lang.Object[])
    {
        org.mozilla.javascript.Scriptable $r0, $r4, r5;
        java.lang.Object[] r6;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Function $r3;
        java.lang.String r2;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r5 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r5);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Function getExistingCtor(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r1, $r0, r2);

        if r6 != null goto label1;

        r6 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

     label1:
        $r4 = interfaceinvoke $r3.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, $r0, r6);

        return $r4;
    }

    public static double toInteger(java.lang.Object)
    {
        java.lang.Object r0;
        double $d0, $d1;

        r0 := @parameter0: java.lang.Object;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(double)>($d0);

        return $d1;
    }

    public static double toInteger(double)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i5;
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $b0 = d0 cmpl d0;

        if $b0 == 0 goto label1;

        return 0.0;

     label1:
        $b1 = d0 cmpl 0.0;

        if $b1 == 0 goto label2;

        $b2 = d0 cmpl #Infinity;

        if $b2 == 0 goto label2;

        $b3 = d0 cmpl #-Infinity;

        if $b3 != 0 goto label3;

     label2:
        return d0;

     label3:
        $b4 = d0 cmpl 0.0;

        $i5 = (int) $b4;

        if $i5 <= 0 goto label4;

        $d2 = staticinvoke <java.lang.Math: double floor(double)>(d0);

        return $d2;

     label4:
        $d1 = staticinvoke <java.lang.Math: double ceil(double)>(d0);

        return $d1;
    }

    public static double toInteger(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0, $i1;
        java.lang.Object $r1;
        double $d0;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        $r1 = r0[i0];

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toInteger(java.lang.Object)>($r1);

        goto label2;

     label1:
        $d0 = 0.0;

     label2:
        return $d0;
    }

    public static int toInt32(java.lang.Object)
    {
        int $i0, $i1;
        java.lang.Object r0;
        java.lang.Integer $r1;
        boolean $z0;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.lang.Integer;

        if $z0 == 0 goto label1;

        $r1 = (java.lang.Integer) r0;

        $i1 = virtualinvoke $r1.<java.lang.Integer: int intValue()>();

        return $i1;

     label1:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(double)>($d0);

        return $i0;
    }

    public static int toInt32(java.lang.Object[], int)
    {
        java.lang.Object[] r0;
        int i0, $i1, $i2;
        java.lang.Object $r1;

        r0 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $i1 = lengthof r0;

        if i0 >= $i1 goto label1;

        $r1 = r0[i0];

        $i2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int toInt32(java.lang.Object)>($r1);

        goto label2;

     label1:
        $i2 = 0;

     label2:
        return $i2;
    }

    public static int toInt32(double)
    {
        long $l7;
        byte $b1, $b2, $b3, $b4, $b5;
        int i0, $i6, $i8;
        double $d0, $d1, d2, $d3;

        d2 := @parameter0: double;

        i0 = (int) d2;

        $d0 = (double) i0;

        $b1 = $d0 cmpl d2;

        if $b1 != 0 goto label1;

        return i0;

     label1:
        $b2 = d2 cmpl d2;

        if $b2 != 0 goto label2;

        $b3 = d2 cmpl #Infinity;

        if $b3 == 0 goto label2;

        $b4 = d2 cmpl #-Infinity;

        if $b4 != 0 goto label3;

     label2:
        return 0;

     label3:
        $b5 = d2 cmpl 0.0;

        $i8 = (int) $b5;

        if $i8 < 0 goto label4;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>(d2);

        goto label5;

     label4:
        $d3 = staticinvoke <java.lang.Math: double ceil(double)>(d2);

     label5:
        $d1 = staticinvoke <java.lang.Math: double IEEEremainder(double,double)>($d3, 4.294967296E9);

        $l7 = (long) $d1;

        $i6 = (int) $l7;

        return $i6;
    }

    public static long toUint32(double)
    {
        long $l5, $l6, $l7, l8;
        byte $b0, $b1, $b2, $b3, $b4;
        int $i9;
        double $d0, $d1, d2, $d3;

        d2 := @parameter0: double;

        l8 = (long) d2;

        $d0 = (double) l8;

        $b0 = $d0 cmpl d2;

        if $b0 != 0 goto label1;

        $l7 = l8 & 4294967295L;

        return $l7;

     label1:
        $b1 = d2 cmpl d2;

        if $b1 != 0 goto label2;

        $b2 = d2 cmpl #Infinity;

        if $b2 == 0 goto label2;

        $b3 = d2 cmpl #-Infinity;

        if $b3 != 0 goto label3;

     label2:
        return 0L;

     label3:
        $b4 = d2 cmpl 0.0;

        $i9 = (int) $b4;

        if $i9 < 0 goto label4;

        $d3 = staticinvoke <java.lang.Math: double floor(double)>(d2);

        goto label5;

     label4:
        $d3 = staticinvoke <java.lang.Math: double ceil(double)>(d2);

     label5:
        $d1 = staticinvoke <java.lang.Math: double IEEEremainder(double,double)>($d3, 4.294967296E9);

        $l6 = (long) $d1;

        $l5 = $l6 & 4294967295L;

        return $l5;
    }

    public static long toUint32(java.lang.Object)
    {
        java.lang.Object r0;
        long $l0;
        double $d0;

        r0 := @parameter0: java.lang.Object;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        $l0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long toUint32(double)>($d0);

        return $l0;
    }

    public static char toUint16(java.lang.Object)
    {
        byte $b0, $b1, $b2, $b3, $b4;
        int $i6, i8, $i9;
        double $d0, $d1, $d2, $d3, $d4;
        char $c5, $c7;
        java.lang.Object r0;

        r0 := @parameter0: java.lang.Object;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r0);

        i8 = (int) $d0;

        $d1 = (double) i8;

        $b0 = $d1 cmpl $d0;

        if $b0 != 0 goto label1;

        $c7 = (char) i8;

        return $c7;

     label1:
        $b1 = $d0 cmpl $d0;

        if $b1 != 0 goto label2;

        $b2 = $d0 cmpl #Infinity;

        if $b2 == 0 goto label2;

        $b3 = $d0 cmpl #-Infinity;

        if $b3 != 0 goto label3;

     label2:
        return 0;

     label3:
        $b4 = $d0 cmpl 0.0;

        $i9 = (int) $b4;

        if $i9 < 0 goto label4;

        $d4 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        goto label5;

     label4:
        $d4 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

     label5:
        $d2 = (double) 65536;

        $d3 = staticinvoke <java.lang.Math: double IEEEremainder(double,double)>($d4, $d2);

        $i6 = (int) $d3;

        $c5 = (char) $i6;

        return $c5;
    }

    public static java.lang.Object setDefaultNamespace(java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xml.XMLLib $r1;
        org.mozilla.javascript.Scriptable r5;
        org.mozilla.javascript.Context r0;
        java.lang.Object r2, $r3, $r4;
        boolean $z0;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.mozilla.javascript.Context;

        r5 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

        if r5 != null goto label1;

        r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context)>(r0);

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context)>(r0);

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.xml.XMLLib: java.lang.Object toDefaultXmlNamespace(org.mozilla.javascript.Context,java.lang.Object)>(r0, r2);

        $z0 = interfaceinvoke r5.<org.mozilla.javascript.Scriptable: boolean has(java.lang.String,org.mozilla.javascript.Scriptable)>("__default_namespace__", r5);

        if $z0 != 0 goto label2;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r5, "__default_namespace__", $r3, 6);

        goto label3;

     label2:
        interfaceinvoke r5.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>("__default_namespace__", r5, $r3);

     label3:
        $r4 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r4;
    }

    public static java.lang.Object searchDefaultNamespace(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable r5, $r6;
        java.lang.Object $r1, $r2, $r3, $r4, r7;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r5 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

        if r5 != null goto label1;

        r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context)>(r0);

     label1:
        $r6 = interfaceinvoke r5.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        if $r6 != null goto label2;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r5, "__default_namespace__");

        r7 = $r3;

        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r3 != $r4 goto label4;

        return null;

     label2:
        $r1 = interfaceinvoke r5.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>("__default_namespace__", r5);

        r7 = $r1;

        $r2 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r1 == $r2 goto label3;

        goto label4;

     label3:
        r5 = $r6;

        goto label1;

     label4:
        return r7;
    }

    public static java.lang.Object getTopLevelProp(org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Scriptable $r0, r3;
        java.lang.Object $r2;
        java.lang.String r1;

        r3 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r3);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>($r0, r1);

        return $r2;
    }

    static org.mozilla.javascript.Function getExistingCtor(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Context r7;
        org.mozilla.javascript.EvaluatorException $r4, $r5;
        org.mozilla.javascript.Scriptable r0;
        java.lang.Object $r2, $r3;
        org.mozilla.javascript.Function $r6;
        java.lang.String r1;
        boolean $z0;

        r7 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: java.lang.String;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r1);

        $z0 = $r2 instanceof org.mozilla.javascript.Function;

        if $z0 == 0 goto label1;

        $r6 = (org.mozilla.javascript.Function) $r2;

        return $r6;

     label1:
        $r3 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r2 != $r3 goto label2;

        $r5 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.ctor.not.found", r1);

        throw $r5;

     label2:
        $r4 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.not.ctor", r1);

        throw $r4;
    }

    private static long indexFromString(java.lang.String)
    {
        long $l2, $l3;
        byte $b10, $b14;
        int $i0, $i4, $i6, $i7, i9, i11, i12, i13, $i15, $i16, $i17, $i19, $i20;
        java.lang.String r0;
        boolean z0, z1, z2, z3, z4;
        char $c1, $c5, c8;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label11;

        z0 = 0;

        z1 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        c8 = $c1;

        $i16 = (int) $c1;

        if $i16 != 45 goto label01;

        if $i0 <= 1 goto label01;

        c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

        z0 = 1;

        z1 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

     label01:
        $i17 = (int) c8;

        $i19 = (int) -48;

        i9 = $i17 + $i19;

        if 0 > i9 goto label11;

        if i9 > 9 goto label11;

        if z3 == 0 goto label02;

        $b10 = 11;

        goto label03;

     label02:
        $b10 = 10;

     label03:
        if $i0 > $b10 goto label11;

        i11 = neg i9;

        i12 = 0;

        i13 = z0 + 1;

        if i11 == 0 goto label05;

     label04:
        if i13 == $i0 goto label05;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $i20 = (int) $c5;

        $i6 = $i20 - 48;

        i9 = $i6;

        if 0 > $i6 goto label05;

        if $i6 > 9 goto label05;

        i12 = i11;

        $i7 = 10 * i11;

        i11 = $i7 - $i6;

        i13 = i13 + 1;

        goto label04;

     label05:
        if i13 != $i0 goto label11;

        if i12 > -214748364 goto label08;

        if i12 != -214748364 goto label11;

        $i4 = i9;

        if z4 == 0 goto label06;

        $b14 = 8;

        goto label07;

     label06:
        $b14 = 7;

     label07:
        if $i4 > $b14 goto label11;

     label08:
        if z2 == 0 goto label09;

        $i15 = i11;

        goto label10;

     label09:
        $i15 = neg i11;

     label10:
        $l2 = (long) $i15;

        $l3 = 4294967295L & $l2;

        return $l3;

     label11:
        return -1L;
    }

    public static long testUint32String(java.lang.String)
    {
        long $l2, $l5, $l6, $l8, l9;
        byte $b3;
        int $i0, i7, i10, i11, $i12, $i14, $i15;
        java.lang.String r0;
        char $c1, $c4;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if 1 > $i0 goto label8;

        if $i0 > 10 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i12 = (int) $c1;

        $i14 = (int) -48;

        i7 = $i12 + $i14;

        if i7 != 0 goto label3;

        if $i0 != 1 goto label1;

        $l8 = 0L;

        goto label2;

     label1:
        $l8 = -1L;

     label2:
        return $l8;

     label3:
        if 1 > i7 goto label8;

        if i7 > 9 goto label8;

        l9 = (long) i7;

        i10 = 1;

     label4:
        if i10 == $i0 goto label7;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i10);

        $i15 = (int) $c4;

        i11 = $i15 - 48;

        if 0 > i11 goto label5;

        if i11 <= 9 goto label6;

     label5:
        return -1L;

     label6:
        $l6 = 10L * l9;

        $l5 = (long) i11;

        l9 = $l6 + $l5;

        i10 = i10 + 1;

        goto label4;

     label7:
        $l2 = l9 >>> 32;

        $b3 = $l2 cmp 0L;

        if $b3 != 0 goto label8;

        return l9;

     label8:
        return -1L;
    }

    static java.lang.Object getIndexObject(java.lang.String)
    {
        byte $b1;
        int $i2, $i3;
        long $l0;
        java.lang.String r0;
        java.lang.Integer $r2;

        r0 := @parameter0: java.lang.String;

        $l0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long indexFromString(java.lang.String)>(r0);

        $b1 = $l0 cmp 0L;

        $i3 = (int) $b1;

        if $i3 < 0 goto label1;

        $r2 = new java.lang.Integer;

        $i2 = (int) $l0;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i2);

        return $r2;

     label1:
        return r0;
    }

    static java.lang.Object getIndexObject(double)
    {
        byte $b1;
        int i0;
        java.lang.String $r0;
        java.lang.Integer $r1;
        double d0, $d1;

        d0 := @parameter0: double;

        i0 = (int) d0;

        $d1 = (double) i0;

        $b1 = $d1 cmpl d0;

        if $b1 != 0 goto label1;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        return $r1;

     label1:
        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>(d0);

        return $r0;
    }

    static java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context, java.lang.Object)
    {
        org.mozilla.javascript.Context r1;
        long $l0;
        byte $b1, $b4;
        int $i2, i3, $i5;
        java.lang.Object r0;
        java.lang.String $r3, r4;
        java.lang.Number $r2;
        boolean $z0, $z1;
        double $d0, $d1;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label2;

        $r2 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r2.<java.lang.Number: double doubleValue()>();

        i3 = (int) $d0;

        $d1 = (double) i3;

        $b4 = $d1 cmpl $d0;

        if $b4 != 0 goto label1;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeIndexResult(org.mozilla.javascript.Context,int)>(r1, i3);

        return null;

     label1:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        return $r3;

     label2:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label3;

        r4 = (java.lang.String) r0;

        goto label4;

     label3:
        r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

     label4:
        $l0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: long indexFromString(java.lang.String)>(r4);

        $b1 = $l0 cmp 0L;

        $i5 = (int) $b1;

        if $i5 < 0 goto label5;

        $i2 = (int) $l0;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeIndexResult(org.mozilla.javascript.Context,int)>(r1, $i2);

        return null;

     label5:
        return r4;
    }

    public static java.lang.Object getObjectElem(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable $r2;
        org.mozilla.javascript.Context r0;
        java.lang.Object r1, r3, $r4;
        java.lang.RuntimeException $r5;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefReadError(java.lang.Object,java.lang.Object)>(r1, r3);

        throw $r5;

     label1:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context)>($r2, r3, r0);

        return $r4;
    }

    public static java.lang.Object getObjectElem(org.mozilla.javascript.Scriptable, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.xml.XMLObject r6;
        org.mozilla.javascript.Scriptable r0;
        int $i0;
        java.lang.Object r2, $r4, $r5, r7;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.Object;

        r1 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r6 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r5 = virtualinvoke r6.<org.mozilla.javascript.xml.XMLObject: java.lang.Object ecmaGet(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        return $r5;

     label1:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        if $r3 != null goto label2;

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int lastIndexResult(org.mozilla.javascript.Context)>(r1);

        r7 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,int)>(r0, $i0);

        goto label3;

     label2:
        r7 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, $r3);

     label3:
        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if r7 != $r4 goto label4;

        r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label4:
        return r7;
    }

    public static java.lang.Object getObjectProp(java.lang.Object, java.lang.String, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable $r2;
        org.mozilla.javascript.Context r0;
        java.lang.Object r1, $r4;
        java.lang.String r3;
        java.lang.RuntimeException $r5;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefReadError(java.lang.Object,java.lang.Object)>(r1, r3);

        throw $r5;

     label1:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context)>($r2, r3, r0);

        return $r4;
    }

    public static java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable, java.lang.String, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.xml.XMLObject r6;
        org.mozilla.javascript.Scriptable r0;
        java.lang.Object $r2, $r3, $r5, r7;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.lang.String;

        r4 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r6 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r5 = virtualinvoke r6.<org.mozilla.javascript.xml.XMLObject: java.lang.Object ecmaGet(org.mozilla.javascript.Context,java.lang.Object)>(r4, r1);

        return $r5;

     label1:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r1);

        r7 = $r2;

        $r3 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r2 != $r3 goto label2;

        r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label2:
        return r7;
    }

    public static java.lang.Object getObjectIndex(java.lang.Object, double, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r0;
        java.lang.RuntimeException $r7;
        org.mozilla.javascript.Scriptable $r2;
        byte $b1;
        int i0;
        java.lang.Object r1, $r4, $r5;
        java.lang.String $r3, $r6;
        double d0, $d1;

        r1 := @parameter0: java.lang.Object;

        d0 := @parameter1: double;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>(d0);

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefReadError(java.lang.Object,java.lang.Object)>(r1, $r6);

        throw $r7;

     label1:
        i0 = (int) d0;

        $d1 = (double) i0;

        $b1 = $d1 cmpl d0;

        if $b1 != 0 goto label2;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectIndex(org.mozilla.javascript.Scriptable,int,org.mozilla.javascript.Context)>($r2, i0, r0);

        return $r5;

     label2:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>(d0);

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context)>($r2, $r3, r0);

        return $r4;
    }

    public static java.lang.Object getObjectIndex(org.mozilla.javascript.Scriptable, int, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.xml.XMLObject r6;
        java.lang.Integer $r4;
        org.mozilla.javascript.Scriptable r0;
        int i0;
        java.lang.Object $r1, $r2, $r5, r7;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        i0 := @parameter1: int;

        r3 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r6 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0);

        $r5 = virtualinvoke r6.<org.mozilla.javascript.xml.XMLObject: java.lang.Object ecmaGet(org.mozilla.javascript.Context,java.lang.Object)>(r3, $r4);

        return $r5;

     label1:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,int)>(r0, i0);

        r7 = $r1;

        $r2 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r1 != $r2 goto label2;

        r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

     label2:
        return r7;
    }

    public static java.lang.Object setObjectElem(java.lang.Object, java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable $r2;
        org.mozilla.javascript.Context r0;
        java.lang.Object r1, r3, r4, $r5;
        java.lang.RuntimeException $r6;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r0 := @parameter3: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefWriteError(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r3, r4);

        throw $r6;

     label1:
        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>($r2, r3, r4, r0);

        return $r5;
    }

    public static java.lang.Object setObjectElem(org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.xml.XMLObject r5;
        org.mozilla.javascript.Scriptable r0;
        int $i0;
        java.lang.Object r2, r4;
        java.lang.String $r3;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r1 := @parameter3: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r5 = (org.mozilla.javascript.xml.XMLObject) r0;

        virtualinvoke r5.<org.mozilla.javascript.xml.XMLObject: void ecmaPut(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object)>(r1, r2, r4);

        return r4;

     label1:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        if $r3 != null goto label2;

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int lastIndexResult(org.mozilla.javascript.Context)>(r1);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,int,java.lang.Object)>(r0, $i0, r4);

        goto label3;

     label2:
        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>(r0, $r3, r4);

     label3:
        return r4;
    }

    public static java.lang.Object setObjectProp(java.lang.Object, java.lang.String, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable $r2;
        org.mozilla.javascript.Context r0;
        java.lang.Object r1, r4, $r5;
        java.lang.String r3;
        java.lang.RuntimeException $r6;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object;

        r0 := @parameter3: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefWriteError(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, r3, r4);

        throw $r6;

     label1:
        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,org.mozilla.javascript.Context)>($r2, r3, r4, r0);

        return $r5;
    }

    public static java.lang.Object setObjectProp(org.mozilla.javascript.Scriptable, java.lang.String, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.xml.XMLObject r3;
        org.mozilla.javascript.Context r4;
        java.lang.Object r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Object;

        r4 := @parameter3: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r3 = (org.mozilla.javascript.xml.XMLObject) r0;

        virtualinvoke r3.<org.mozilla.javascript.xml.XMLObject: void ecmaPut(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object)>(r4, r1, r2);

        goto label2;

     label1:
        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>(r0, r1, r2);

     label2:
        return r2;
    }

    public static java.lang.Object setObjectIndex(java.lang.Object, double, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r0;
        java.lang.RuntimeException $r8;
        org.mozilla.javascript.Scriptable $r2;
        byte $b1;
        int i0;
        java.lang.Object r1, r4, $r5, $r6;
        java.lang.String $r3, $r7;
        double d0, $d1;

        r1 := @parameter0: java.lang.Object;

        d0 := @parameter1: double;

        r4 := @parameter2: java.lang.Object;

        r0 := @parameter3: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0);

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefWriteError(java.lang.Object,java.lang.Object,java.lang.Object)>(r1, $r7, r4);

        throw $r8;

     label1:
        i0 = (int) d0;

        $d1 = (double) i0;

        $b1 = $d1 cmpl d0;

        if $b1 != 0 goto label2;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectIndex(org.mozilla.javascript.Scriptable,int,java.lang.Object,org.mozilla.javascript.Context)>($r2, i0, r4, r0);

        return $r6;

     label2:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(double)>(d0);

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,org.mozilla.javascript.Context)>($r2, $r3, r4, r0);

        return $r5;
    }

    public static java.lang.Object setObjectIndex(org.mozilla.javascript.Scriptable, int, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.xml.XMLObject r2;
        org.mozilla.javascript.Context r3;
        int i0;
        java.lang.Object r1;
        java.lang.Integer $r4;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.Object;

        r3 := @parameter3: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r2 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r4 = new java.lang.Integer;

        specialinvoke $r4.<java.lang.Integer: void <init>(int)>(i0);

        virtualinvoke r2.<org.mozilla.javascript.xml.XMLObject: void ecmaPut(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object)>(r3, $r4, r1);

        goto label2;

     label1:
        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,int,java.lang.Object)>(r0, i0, r1);

     label2:
        return r1;
    }

    public static boolean deleteObjectElem(org.mozilla.javascript.Scriptable, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.xml.XMLObject r4;
        org.mozilla.javascript.Scriptable r0;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r3;
        boolean $z0, z1;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.Object;

        r1 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r4 = (org.mozilla.javascript.xml.XMLObject) r0;

        z1 = virtualinvoke r4.<org.mozilla.javascript.xml.XMLObject: boolean ecmaDelete(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        goto label3;

     label1:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        if $r3 != null goto label2;

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int lastIndexResult(org.mozilla.javascript.Context)>(r1);

        z1 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean deleteProperty(org.mozilla.javascript.Scriptable,int)>(r0, $i0);

        goto label3;

     label2:
        z1 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean deleteProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, $r3);

     label3:
        return z1;
    }

    public static boolean hasObjectElem(org.mozilla.javascript.Scriptable, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.xml.XMLObject r4;
        org.mozilla.javascript.Scriptable r0;
        int $i0;
        java.lang.Object r2;
        java.lang.String $r3;
        boolean $z0, z1;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.Object;

        r1 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label1;

        r4 = (org.mozilla.javascript.xml.XMLObject) r0;

        z1 = virtualinvoke r4.<org.mozilla.javascript.xml.XMLObject: boolean ecmaHas(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        goto label3;

     label1:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        if $r3 != null goto label2;

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int lastIndexResult(org.mozilla.javascript.Context)>(r1);

        z1 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean hasProperty(org.mozilla.javascript.Scriptable,int)>(r0, $i0);

        goto label3;

     label2:
        z1 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean hasProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, $r3);

     label3:
        return z1;
    }

    public static java.lang.Object refGet(org.mozilla.javascript.Ref, org.mozilla.javascript.Context)
    {
        java.lang.Object $r2;
        org.mozilla.javascript.Ref r0;
        org.mozilla.javascript.Context r1;

        r0 := @parameter0: org.mozilla.javascript.Ref;

        r1 := @parameter1: org.mozilla.javascript.Context;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.Ref: java.lang.Object get(org.mozilla.javascript.Context)>(r1);

        return $r2;
    }

    public static java.lang.Object refSet(org.mozilla.javascript.Ref, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Ref r0;
        org.mozilla.javascript.Context r1;
        java.lang.Object r2, $r3;

        r0 := @parameter0: org.mozilla.javascript.Ref;

        r2 := @parameter1: java.lang.Object;

        r1 := @parameter2: org.mozilla.javascript.Context;

        $r3 = virtualinvoke r0.<org.mozilla.javascript.Ref: java.lang.Object set(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public static java.lang.Object refDel(org.mozilla.javascript.Ref, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Ref r0;
        org.mozilla.javascript.Context r1;
        java.lang.Boolean $r2;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Ref;

        r1 := @parameter1: org.mozilla.javascript.Context;

        $z0 = virtualinvoke r0.<org.mozilla.javascript.Ref: boolean delete(org.mozilla.javascript.Context)>(r1);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z0);

        return $r2;
    }

    static boolean isSpecialProperty(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("__proto__");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("__parent__");

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static org.mozilla.javascript.Ref specialRef(java.lang.Object, java.lang.String, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Ref $r3;
        org.mozilla.javascript.Context r0;
        java.lang.Object r1;
        java.lang.String r2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r3 = staticinvoke <org.mozilla.javascript.SpecialRef: org.mozilla.javascript.Ref createSpecial(org.mozilla.javascript.Context,java.lang.Object,java.lang.String)>(r0, r1, r2);

        return $r3;
    }

    public static java.lang.Object delete(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.EcmaError $r6;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable $r2;
        java.lang.Boolean $r4;
        java.lang.Object r1, r3;
        java.lang.String $r5, $r7;
        boolean $z0;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label3;

        if r3 != null goto label1;

        $r7 = "null";

        goto label2;

     label1:
        $r7 = virtualinvoke r3.<java.lang.Object: java.lang.String toString()>();

     label2:
        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String)>("msg.undef.prop.delete", $r5, $r7);

        throw $r6;

     label3:
        $z0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean deleteObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context)>($r2, r3, r0);

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>($z0);

        return $r4;
    }

    public static java.lang.Object name(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r7;
        org.mozilla.javascript.Scriptable r0, $r1;
        java.lang.Object $r4, $r5, $r6;
        java.lang.String r3;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.String;

        $r1 = interfaceinvoke r0.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        if $r1 != null goto label2;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object topScopeName(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r2, r0, r3);

        $r6 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r5 != $r6 goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFoundError(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r3);

        throw $r7;

     label1:
        return $r5;

     label2:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object nameOrFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.String,boolean)>(r2, r0, $r1, r3, 0);

        return $r4;
    }

    private static java.lang.Object nameOrFunction(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.String, boolean)
    {
        org.mozilla.javascript.xml.XMLObject r13, r17;
        java.lang.String r0;
        boolean $z0, $z1, z2, $z3, $z4, $z5;
        org.mozilla.javascript.Context r3;
        java.lang.RuntimeException $r6, $r7;
        org.mozilla.javascript.Scriptable $r10, r14, r15, r16, $r19;
        java.lang.Object $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12, r18;

        r3 := @parameter0: org.mozilla.javascript.Context;

        r14 := @parameter1: org.mozilla.javascript.Scriptable;

        r15 := @parameter2: org.mozilla.javascript.Scriptable;

        r0 := @parameter3: java.lang.String;

        z2 := @parameter4: boolean;

        r16 = r14;

        r17 = null;

     label01:
        $z0 = r14 instanceof org.mozilla.javascript.NativeWith;

        if $z0 == 0 goto label04;

        $r10 = interfaceinvoke r14.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        $z4 = $r10 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z4 == 0 goto label03;

        r13 = (org.mozilla.javascript.xml.XMLObject) $r10;

        $z5 = virtualinvoke r13.<org.mozilla.javascript.xml.XMLObject: boolean ecmaHas(org.mozilla.javascript.Context,java.lang.Object)>(r3, r0);

        if $z5 == 0 goto label02;

        r16 = r13;

        r18 = virtualinvoke r13.<org.mozilla.javascript.xml.XMLObject: java.lang.Object ecmaGet(org.mozilla.javascript.Context,java.lang.Object)>(r3, r0);

        goto label10;

     label02:
        if r17 != null goto label06;

        r17 = r13;

        goto label06;

     label03:
        $r11 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>($r10, r0);

        r18 = $r11;

        $r12 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r11 == $r12 goto label06;

        r16 = $r10;

        goto label10;

     label04:
        $z1 = r14 instanceof org.mozilla.javascript.NativeCall;

        if $z1 == 0 goto label05;

        $r8 = interfaceinvoke r14.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r0, r14);

        r18 = $r8;

        $r9 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r8 == $r9 goto label06;

        if z2 == 0 goto label10;

        r16 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r15);

        goto label10;

     label05:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r14, r0);

        r18 = $r1;

        $r2 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r1 == $r2 goto label06;

        r16 = r14;

        goto label10;

     label06:
        r14 = r15;

        $r19 = interfaceinvoke r15.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r15 = $r19;

        if $r19 != null goto label01;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object topScopeName(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r3, r14, r0);

        r18 = $r4;

        $r5 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r4 != $r5 goto label09;

        if r17 == null goto label07;

        if z2 == 0 goto label08;

     label07:
        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFoundError(org.mozilla.javascript.Scriptable,java.lang.String)>(r14, r0);

        throw $r7;

     label08:
        r18 = virtualinvoke r17.<org.mozilla.javascript.xml.XMLObject: java.lang.Object ecmaGet(org.mozilla.javascript.Context,java.lang.Object)>(r3, r0);

     label09:
        r16 = r14;

        goto label10;

     label10:
        if z2 == 0 goto label12;

        $z3 = r18 instanceof org.mozilla.javascript.Callable;

        if $z3 != 0 goto label11;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>(r18, r0);

        throw $r6;

     label11:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeScriptable(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r3, r16);

     label12:
        return r18;
    }

    private static java.lang.Object topScopeName(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Scriptable $r3, r4;
        org.mozilla.javascript.Context r0;
        java.lang.Object $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: java.lang.String;

        $z0 = r0.<org.mozilla.javascript.Context: boolean useDynamicScope>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable checkDynamicScope(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable)>($r3, r4);

     label1:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r4, r1);

        return $r2;
    }

    public static org.mozilla.javascript.Scriptable bind(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.xml.XMLObject r6, r8;
        java.lang.String r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.mozilla.javascript.Context r1;
        org.mozilla.javascript.Scriptable $r0, $r3, $r4, $r5, r7, r9, $r10;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r7 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 := @parameter2: java.lang.String;

        r8 = null;

        $r0 = interfaceinvoke r7.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r9 = $r0;

        if $r0 == null goto label7;

     label1:
        $z1 = r7 instanceof org.mozilla.javascript.NativeWith;

        if $z1 == 0 goto label5;

        $r5 = interfaceinvoke r7.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        $z3 = $r5 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z3 == 0 goto label3;

        r6 = (org.mozilla.javascript.xml.XMLObject) $r5;

        $z5 = virtualinvoke r6.<org.mozilla.javascript.xml.XMLObject: boolean ecmaHas(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        if $z5 == 0 goto label2;

        return r6;

     label2:
        if r8 != null goto label4;

        r8 = r6;

        goto label4;

     label3:
        $z4 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean hasProperty(org.mozilla.javascript.Scriptable,java.lang.String)>($r5, r2);

        if $z4 == 0 goto label4;

        return $r5;

     label4:
        r7 = r9;

        $r10 = interfaceinvoke r9.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r9 = $r10;

        if $r10 != null goto label1;

        goto label7;

     label5:
        $z2 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean hasProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r7, r2);

        if $z2 == 0 goto label6;

        return r7;

     label6:
        r7 = r9;

        $r4 = interfaceinvoke r9.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r9 = $r4;

        if $r4 != null goto label5;

        goto label7;

     label7:
        $z6 = r1.<org.mozilla.javascript.Context: boolean useDynamicScope>;

        if $z6 == 0 goto label8;

        $r3 = r1.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable checkDynamicScope(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable)>($r3, r7);

     label8:
        $z0 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean hasProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r7, r2);

        if $z0 == 0 goto label9;

        return r7;

     label9:
        return r8;
    }

    public static java.lang.Object setName(org.mozilla.javascript.Scriptable, java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.xml.XMLObject r7;
        org.mozilla.javascript.EvaluatorException $r6;
        org.mozilla.javascript.Scriptable r1, $r2, $r5, r8, r9;
        java.lang.Object r4;
        java.lang.String r3;
        boolean $z0, $z1, $z2;

        r8 := @parameter0: org.mozilla.javascript.Scriptable;

        r4 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.mozilla.javascript.Context;

        r1 := @parameter3: org.mozilla.javascript.Scriptable;

        r3 := @parameter4: java.lang.String;

        if r8 == null goto label2;

        $z2 = r8 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z2 == 0 goto label1;

        r7 = (org.mozilla.javascript.xml.XMLObject) r8;

        virtualinvoke r7.<org.mozilla.javascript.xml.XMLObject: void ecmaPut(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object)>(r0, r3, r4);

        goto label5;

     label1:
        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>(r8, r3, r4);

        goto label5;

     label2:
        $z0 = virtualinvoke r0.<org.mozilla.javascript.Context: boolean hasFeature(int)>(8);

        if $z0 == 0 goto label3;

        $r6 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.assn.create.strict", r3);

        throw $r6;

     label3:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r1);

        r9 = $r2;

        $z1 = r0.<org.mozilla.javascript.Context: boolean useDynamicScope>;

        if $z1 == 0 goto label4;

        $r5 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable checkDynamicScope(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable)>($r5, $r2);

     label4:
        interfaceinvoke r9.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>(r3, r9, r4);

     label5:
        return r4;
    }

    public static java.lang.Object enumInit(java.lang.Object, org.mozilla.javascript.Context, boolean)
    {
        org.mozilla.javascript.Scriptable $r3, $r4;
        org.mozilla.javascript.Context r1;
        java.lang.Object r2;
        org.mozilla.javascript.ScriptRuntime$IdEnumeration $r0;
        boolean z0;

        r2 := @parameter0: java.lang.Object;

        r1 := @parameter1: org.mozilla.javascript.Context;

        z0 := @parameter2: boolean;

        $r0 = new org.mozilla.javascript.ScriptRuntime$IdEnumeration;

        specialinvoke $r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: void <init>(org.mozilla.javascript.ScriptRuntime$1)>(null);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r1, r2);

        $r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj> = $r3;

        $r4 = $r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        if $r4 == null goto label1;

        $r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: boolean enumValues> = z0;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void enumChangeObject(org.mozilla.javascript.ScriptRuntime$IdEnumeration)>($r0);

     label1:
        return $r0;
    }

    public static java.lang.Boolean enumNext(java.lang.Object)
    {
        java.lang.Object[] $r2, $r3;
        org.mozilla.javascript.ScriptRuntime$IdEnumeration r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Boolean $r10;
        java.lang.String $r9, r17;
        java.lang.Number $r6;
        boolean $z0, $z1, $z2, $z3, z4;
        org.mozilla.javascript.Scriptable $r7, $r8, $r11, $r12, $r14, $r15, $r16;
        java.lang.Object r0, r4;
        org.mozilla.javascript.ObjToIntMap $r5, $r13;

        r0 := @parameter0: java.lang.Object;

        r1 = (org.mozilla.javascript.ScriptRuntime$IdEnumeration) r0;

     label1:
        $r16 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        if $r16 != null goto label2;

        z4 = 0;

        goto label9;

     label2:
        $i1 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: int index>;

        $r2 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.Object[] ids>;

        $i0 = lengthof $r2;

        if $i1 != $i0 goto label3;

        $r14 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r15 = interfaceinvoke $r14.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj> = $r15;

        staticinvoke <org.mozilla.javascript.ScriptRuntime: void enumChangeObject(org.mozilla.javascript.ScriptRuntime$IdEnumeration)>(r1);

        goto label1;

     label3:
        $r3 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.Object[] ids>;

        $i2 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: int index>;

        $i3 = $i2 + 1;

        r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: int index> = $i3;

        r4 = $r3[$i2];

        $r5 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.ObjToIntMap used>;

        if $r5 == null goto label4;

        $r13 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.ObjToIntMap used>;

        $z3 = virtualinvoke $r13.<org.mozilla.javascript.ObjToIntMap: boolean has(java.lang.Object)>(r4);

        if $z3 == 0 goto label4;

        goto label1;

     label4:
        $z0 = r4 instanceof java.lang.String;

        if $z0 == 0 goto label6;

        r17 = (java.lang.String) r4;

        $r12 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r11 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $z2 = interfaceinvoke $r12.<org.mozilla.javascript.Scriptable: boolean has(java.lang.String,org.mozilla.javascript.Scriptable)>(r17, $r11);

        if $z2 != 0 goto label5;

        goto label1;

     label5:
        r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.String currentId> = r17;

        goto label8;

     label6:
        $r6 = (java.lang.Number) r4;

        $i4 = virtualinvoke $r6.<java.lang.Number: int intValue()>();

        $r8 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r7 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $z1 = interfaceinvoke $r8.<org.mozilla.javascript.Scriptable: boolean has(int,org.mozilla.javascript.Scriptable)>($i4, $r7);

        if $z1 != 0 goto label7;

        goto label1;

     label7:
        $r9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i4);

        r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.String currentId> = $r9;

     label8:
        z4 = 1;

        goto label9;

     label9:
        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Boolean wrapBoolean(boolean)>(z4);

        return $r10;
    }

    public static java.lang.Object enumId(java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.ScriptRuntime$IdEnumeration r1;
        org.mozilla.javascript.Scriptable $r5, $r6, $r7, $r8;
        int $i0;
        java.lang.Object r0, r10;
        java.lang.String $r3, $r4, $r9;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r1 = (org.mozilla.javascript.ScriptRuntime$IdEnumeration) r0;

        $z0 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: boolean enumValues>;

        if $z0 != 0 goto label1;

        $r9 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.String currentId>;

        return $r9;

     label1:
        $r3 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.String currentId>;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object)>(r2, $r3);

        if $r4 != null goto label2;

        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int lastIndexResult(org.mozilla.javascript.Context)>(r2);

        $r8 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r7 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        r10 = interfaceinvoke $r8.<org.mozilla.javascript.Scriptable: java.lang.Object get(int,org.mozilla.javascript.Scriptable)>($i0, $r7);

        goto label3;

     label2:
        $r6 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r5 = r1.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        r10 = interfaceinvoke $r6.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>($r4, $r5);

     label3:
        return r10;
    }

    private static void enumChangeObject(org.mozilla.javascript.ScriptRuntime$IdEnumeration)
    {
        java.lang.Object[] $r3, r4, $r10, r13;
        org.mozilla.javascript.ScriptRuntime$IdEnumeration r0;
        int i0, $i1, i2;
        org.mozilla.javascript.Scriptable $r1, $r2, $r9, $r11, $r12;
        java.lang.Object $r6;
        org.mozilla.javascript.ObjToIntMap $r5, $r7, $r8;

        r0 := @parameter0: org.mozilla.javascript.ScriptRuntime$IdEnumeration;

        r13 = null;

     label1:
        $r1 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        if $r1 == null goto label3;

        $r9 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r10 = interfaceinvoke $r9.<org.mozilla.javascript.Scriptable: java.lang.Object[] getIds()>();

        r13 = $r10;

        $i1 = lengthof $r10;

        if $i1 == 0 goto label2;

        goto label3;

     label2:
        $r11 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        $r12 = interfaceinvoke $r11.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj> = $r12;

        goto label1;

     label3:
        $r2 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.Scriptable obj>;

        if $r2 == null goto label6;

        $r3 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.Object[] ids>;

        if $r3 == null goto label6;

        r4 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.Object[] ids>;

        i0 = lengthof r4;

        $r5 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.ObjToIntMap used>;

        if $r5 != null goto label4;

        $r8 = new org.mozilla.javascript.ObjToIntMap;

        specialinvoke $r8.<org.mozilla.javascript.ObjToIntMap: void <init>(int)>(i0);

        r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.ObjToIntMap used> = $r8;

     label4:
        i2 = 0;

     label5:
        if i2 == i0 goto label6;

        $r7 = r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: org.mozilla.javascript.ObjToIntMap used>;

        $r6 = r4[i2];

        virtualinvoke $r7.<org.mozilla.javascript.ObjToIntMap: java.lang.Object intern(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label5;

     label6:
        r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: java.lang.Object[] ids> = r13;

        r0.<org.mozilla.javascript.ScriptRuntime$IdEnumeration: int index> = 0;

        return;
    }

    public static org.mozilla.javascript.Callable getNameFunctionAndThis(java.lang.String, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Callable $r5, $r7;
        java.lang.RuntimeException $r9, $r10;
        org.mozilla.javascript.Scriptable r0, $r1;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String r3;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r0 := @parameter2: org.mozilla.javascript.Scriptable;

        $r1 = interfaceinvoke r0.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object topScopeName(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>(r2, r0, r3);

        $z0 = $r6 instanceof org.mozilla.javascript.Callable;

        if $z0 != 0 goto label2;

        $r8 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r6 != $r8 goto label1;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFoundError(org.mozilla.javascript.Scriptable,java.lang.String)>(r0, r3);

        throw $r10;

     label1:
        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>($r6, r3);

        throw $r9;

     label2:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeScriptable(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, r0);

        $r7 = (org.mozilla.javascript.Callable) $r6;

        return $r7;

     label3:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object nameOrFunction(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.String,boolean)>(r2, r0, $r1, r3, 1);

        $r5 = (org.mozilla.javascript.Callable) $r4;

        return $r5;
    }

    public static org.mozilla.javascript.Callable getElemFunctionAndThis(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xml.XMLObject r7;
        org.mozilla.javascript.Callable $r9, $r13;
        int $i0;
        java.lang.String $r2, $r11;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r0;
        java.lang.RuntimeException $r10, $r12;
        org.mozilla.javascript.Scriptable $r4, $r8, r14;
        java.lang.Object r1, r3, $r5, $r6;

        r3 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toStringIdOrIndex(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 == null goto label1;

        $r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object,java.lang.String,org.mozilla.javascript.Context)>(r3, $r2, r0);

        return $r13;

     label1:
        $i0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: int lastIndexResult(org.mozilla.javascript.Context)>(r0);

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r3);

        r14 = $r4;

        if $r4 != null goto label2;

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        $r12 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefCallError(java.lang.Object,java.lang.Object)>(r3, $r11);

        throw $r12;

     label2:
        $r5 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,int)>(r14, $i0);

        $r6 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r5 == $r6 goto label3;

        goto label6;

     label3:
        $z0 = r14 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 != 0 goto label4;

        goto label6;

     label4:
        r7 = (org.mozilla.javascript.xml.XMLObject) r14;

        $r8 = virtualinvoke r7.<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context)>(r0);

        if $r8 != null goto label5;

        goto label6;

     label5:
        r14 = $r8;

        goto label2;

     label6:
        $z1 = $r5 instanceof org.mozilla.javascript.Callable;

        if $z1 != 0 goto label7;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>($r5, r1);

        throw $r10;

     label7:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeScriptable(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r14);

        $r9 = (org.mozilla.javascript.Callable) $r5;

        return $r9;
    }

    public static org.mozilla.javascript.Callable getPropFunctionAndThis(java.lang.Object, java.lang.String, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.xml.XMLObject r6;
        org.mozilla.javascript.Callable $r8;
        java.lang.RuntimeException $r9, $r10;
        org.mozilla.javascript.Scriptable $r2, $r7, r11;
        java.lang.Object r1, $r4, $r5;
        java.lang.String r3;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.mozilla.javascript.Context;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        r11 = $r2;

        if $r2 != null goto label1;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefCallError(java.lang.Object,java.lang.Object)>(r1, r3);

        throw $r10;

     label1:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r11, r3);

        $r5 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r4 == $r5 goto label2;

        goto label5;

     label2:
        $z0 = r11 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 != 0 goto label3;

        goto label5;

     label3:
        r6 = (org.mozilla.javascript.xml.XMLObject) r11;

        $r7 = virtualinvoke r6.<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.Scriptable getExtraMethodSource(org.mozilla.javascript.Context)>(r0);

        if $r7 != null goto label4;

        goto label5;

     label4:
        r11 = $r7;

        goto label1;

     label5:
        $z1 = $r4 instanceof org.mozilla.javascript.Callable;

        if $z1 != 0 goto label6;

        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>($r4, r3);

        throw $r9;

     label6:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeScriptable(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r0, r11);

        $r8 = (org.mozilla.javascript.Callable) $r4;

        return $r8;
    }

    public static org.mozilla.javascript.Callable getValueFunctionAndThis(java.lang.Object, org.mozilla.javascript.Context)
    {
        java.lang.IllegalStateException $r5;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.Callable r1;
        java.lang.RuntimeException $r7;
        org.mozilla.javascript.Scriptable $r3, $r4, $r6, r8;
        java.lang.Object r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.Callable;

        if $z0 != 0 goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object)>(r0);

        throw $r7;

     label1:
        r1 = (org.mozilla.javascript.Callable) r0;

        $z1 = r1 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label2;

        $r6 = (org.mozilla.javascript.Scriptable) r1;

        r8 = interfaceinvoke $r6.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        goto label4;

     label2:
        $r3 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if $r3 != null goto label3;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label3:
        r8 = r2.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

     label4:
        $r4 = interfaceinvoke r8.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        if $r4 == null goto label6;

        $z2 = r8 instanceof org.mozilla.javascript.NativeWith;

        if $z2 == 0 goto label5;

        goto label6;

     label5:
        $z3 = r8 instanceof org.mozilla.javascript.NativeCall;

        if $z3 == 0 goto label6;

        r8 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r8);

     label6:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void storeScriptable(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>(r2, r8);

        return r1;
    }

    public static org.mozilla.javascript.Ref callRef(org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.EcmaError $r3;
        java.lang.IllegalStateException $r8;
        java.lang.Object[] r6;
        org.mozilla.javascript.Ref $r7;
        org.mozilla.javascript.Callable r0;
        java.lang.StringBuffer $r9, $r12, $r13;
        java.lang.String $r1, $r2, $r11, $r14;
        boolean $z0;
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.RefCallable r15;
        org.mozilla.javascript.Scriptable r5;
        java.lang.Class $r10;

        r0 := @parameter0: org.mozilla.javascript.Callable;

        r5 := @parameter1: org.mozilla.javascript.Scriptable;

        r6 := @parameter2: java.lang.Object[];

        r4 := @parameter3: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.RefCallable;

        if $z0 == 0 goto label2;

        r15 = (org.mozilla.javascript.RefCallable) r0;

        $r7 = interfaceinvoke r15.<org.mozilla.javascript.RefCallable: org.mozilla.javascript.Ref refCall(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r4, r5, r6);

        if $r7 != null goto label1;

        $r8 = new java.lang.IllegalStateException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke r15.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".refCall() returned null");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r8;

     label1:
        return $r7;

     label2:
        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage1(java.lang.String,java.lang.Object)>("msg.no.ref.from.function", $r1);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String)>("ReferenceError", $r2);

        throw $r3;
    }

    public static org.mozilla.javascript.Scriptable newObject(java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r6;
        org.mozilla.javascript.Scriptable r3, $r5;
        java.lang.Object r0;
        org.mozilla.javascript.Function r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r3 := @parameter2: org.mozilla.javascript.Scriptable;

        r4 := @parameter3: java.lang.Object[];

        $z0 = r0 instanceof org.mozilla.javascript.Function;

        if $z0 != 0 goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object)>(r0);

        throw $r6;

     label1:
        r1 = (org.mozilla.javascript.Function) r0;

        $r5 = interfaceinvoke r1.<org.mozilla.javascript.Function: org.mozilla.javascript.Scriptable construct(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, r4);

        return $r5;
    }

    public static java.lang.Object callSpecial(org.mozilla.javascript.Context, org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, java.lang.Object[], org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, int, java.lang.String, int)
    {
        java.lang.Object[] r5;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.EvaluatorException $r7;
        org.mozilla.javascript.Callable r1;
        java.lang.RuntimeException $r0;
        org.mozilla.javascript.Scriptable r3, r4, r8;
        int i0, i1;
        java.lang.Object $r6, $r10;
        java.lang.String r9;
        boolean $z0, $z1;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Callable;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        r5 := @parameter3: java.lang.Object[];

        r3 := @parameter4: org.mozilla.javascript.Scriptable;

        r8 := @parameter5: org.mozilla.javascript.Scriptable;

        i0 := @parameter6: int;

        r9 := @parameter7: java.lang.String;

        i1 := @parameter8: int;

        if i0 != 1 goto label1;

        $z1 = staticinvoke <org.mozilla.javascript.NativeGlobal: boolean isEvalFunction(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object evalSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Object[],java.lang.String,int)>(r2, r3, r8, r5, r9, i1);

        return $r10;

     label1:
        if i0 != 2 goto label2;

        $z0 = staticinvoke <org.mozilla.javascript.NativeWith: boolean isWithFunction(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r7 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>("msg.only.from.new", "With");

        throw $r7;

     label2:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;

     label3:
        $r6 = interfaceinvoke r1.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, r4, r5);

        return $r6;
    }

    public static java.lang.Object newSpecial(org.mozilla.javascript.Context, java.lang.Object, java.lang.Object[], org.mozilla.javascript.Scriptable, int)
    {
        org.mozilla.javascript.EcmaError $r7;
        java.lang.Object[] r4;
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r0;
        org.mozilla.javascript.Scriptable r3, $r5;
        int i0;
        java.lang.Object r1, $r6;
        boolean $z0, $z1;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object[];

        r3 := @parameter3: org.mozilla.javascript.Scriptable;

        i0 := @parameter4: int;

        if i0 != 1 goto label1;

        $z1 = staticinvoke <org.mozilla.javascript.NativeGlobal: boolean isEvalFunction(java.lang.Object)>(r1);

        if $z1 == 0 goto label3;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.not.ctor", "eval");

        throw $r7;

     label1:
        if i0 != 2 goto label2;

        $z0 = staticinvoke <org.mozilla.javascript.NativeWith: boolean isWithFunction(java.lang.Object)>(r1);

        if $z0 == 0 goto label3;

        $r6 = staticinvoke <org.mozilla.javascript.NativeWith: java.lang.Object newWithSpecial(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, r4);

        return $r6;

     label2:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;

     label3:
        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable newObject(java.lang.Object,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, r3, r4);

        return $r5;
    }

    public static java.lang.Object applyOrCall(boolean, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.EcmaError $r9;
        java.lang.Object[] r0, r14;
        org.mozilla.javascript.Callable r12;
        int i0, $i1, $i2;
        boolean $z0, $z1, z2, $z3, $z4;
        org.mozilla.javascript.Context r4;
        java.lang.RuntimeException $r11;
        org.mozilla.javascript.Scriptable r1, r5, $r8, r13;
        java.lang.Class $r2;
        java.lang.Object $r3, r6, $r7, $r10, $r15;

        z2 := @parameter0: boolean;

        r4 := @parameter1: org.mozilla.javascript.Context;

        r5 := @parameter2: org.mozilla.javascript.Scriptable;

        r1 := @parameter3: org.mozilla.javascript.Scriptable;

        r0 := @parameter4: java.lang.Object[];

        i0 = lengthof r0;

        $z0 = r1 instanceof org.mozilla.javascript.Callable;

        if $z0 == 0 goto label01;

        r12 = (org.mozilla.javascript.Callable) r1;

        goto label03;

     label01:
        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class FunctionClass>;

        $r3 = interfaceinvoke r1.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r2);

        $z1 = $r3 instanceof org.mozilla.javascript.Callable;

        if $z1 != 0 goto label02;

        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>($r3, r1);

        throw $r11;

     label02:
        r12 = (org.mozilla.javascript.Callable) $r3;

     label03:
        r13 = null;

        if i0 == 0 goto label04;

        $r10 = r0[0];

        r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r4, $r10);

     label04:
        if r13 != null goto label05;

        r13 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context)>(r4);

     label05:
        if z2 == 0 goto label11;

        if i0 > 1 goto label06;

        r14 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        goto label13;

     label06:
        r6 = r0[1];

        if r6 == null goto label07;

        $r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r6 != $r7 goto label08;

     label07:
        r14 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        goto label13;

     label08:
        $z3 = r6 instanceof org.mozilla.javascript.NativeArray;

        if $z3 != 0 goto label09;

        $z4 = r6 instanceof org.mozilla.javascript.Arguments;

        if $z4 == 0 goto label10;

     label09:
        $r8 = (org.mozilla.javascript.Scriptable) r6;

        r14 = virtualinvoke r4.<org.mozilla.javascript.Context: java.lang.Object[] getElements(org.mozilla.javascript.Scriptable)>($r8);

        goto label13;

     label10:
        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.arg.isnt.array");

        throw $r9;

     label11:
        if i0 > 1 goto label12;

        r14 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        goto label13;

     label12:
        $i1 = i0 - 1;

        r14 = newarray (java.lang.Object)[$i1];

        $i2 = i0 - 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r0, 1, r14, 0, $i2);

     label13:
        $r15 = interfaceinvoke r12.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r4, r5, r13, r14);

        return $r15;
    }

    public static java.lang.Object evalSpecial(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, java.lang.Object, java.lang.Object[], java.lang.String, int)
    {
        org.mozilla.javascript.Interpreter $r15;
        java.lang.Object[] r0, $r21;
        org.mozilla.javascript.Callable $r19;
        int[] r10;
        int $i0, i1;
        java.lang.String $r5, $r6, r9, $r11, $r14;
        org.mozilla.javascript.InterpreterData $r18;
        boolean $z0, $z1;
        org.mozilla.javascript.Context r2;
        org.mozilla.javascript.EvaluatorException $r7;
        org.mozilla.javascript.Script $r16;
        org.mozilla.javascript.ErrorReporter $r12, $r13;
        org.mozilla.javascript.Scriptable r3, $r20;
        java.lang.Object r1, r4, $r8, $r22;
        org.mozilla.javascript.InterpretedFunction $r17;

        r2 := @parameter0: org.mozilla.javascript.Context;

        r3 := @parameter1: org.mozilla.javascript.Scriptable;

        r4 := @parameter2: java.lang.Object;

        r0 := @parameter3: java.lang.Object[];

        r9 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        $i0 = lengthof r0;

        if $i0 >= 1 goto label1;

        $r8 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        return $r8;

     label1:
        r1 = r0[0];

        $z0 = r1 instanceof java.lang.String;

        if $z0 != 0 goto label3;

        $z1 = virtualinvoke r2.<org.mozilla.javascript.Context: boolean hasFeature(int)>(9);

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.eval.nonstring.strict");

        throw $r7;

     label2:
        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage0(java.lang.String)>("msg.eval.nonstring");

        staticinvoke <org.mozilla.javascript.Context: void reportWarning(java.lang.String)>($r6);

        return r1;

     label3:
        if r9 != null goto label5;

        r10 = newarray (int)[1];

        $r5 = staticinvoke <org.mozilla.javascript.Context: java.lang.String getSourcePositionFromStack(int[])>(r10);

        r9 = $r5;

        if $r5 == null goto label4;

        i1 = r10[0];

        goto label5;

     label4:
        r9 = "";

     label5:
        $r11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String makeUrlForGeneratedScript(boolean,java.lang.String,int)>(1, r9, i1);

        $r12 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.ErrorReporter getErrorReporter()>();

        $r13 = staticinvoke <org.mozilla.javascript.DefaultErrorReporter: org.mozilla.javascript.ErrorReporter forEval(org.mozilla.javascript.ErrorReporter)>($r12);

        $r14 = (java.lang.String) r1;

        $r15 = new org.mozilla.javascript.Interpreter;

        specialinvoke $r15.<org.mozilla.javascript.Interpreter: void <init>()>();

        $r16 = virtualinvoke r2.<org.mozilla.javascript.Context: org.mozilla.javascript.Script compileString(java.lang.String,org.mozilla.javascript.Interpreter,org.mozilla.javascript.ErrorReporter,java.lang.String,int,java.lang.Object)>($r14, $r15, $r13, $r11, 1, null);

        $r17 = (org.mozilla.javascript.InterpretedFunction) $r16;

        $r18 = $r17.<org.mozilla.javascript.InterpretedFunction: org.mozilla.javascript.InterpreterData idata>;

        $r18.<org.mozilla.javascript.InterpreterData: boolean evalScriptFlag> = 1;

        $r19 = (org.mozilla.javascript.Callable) $r16;

        $r20 = (org.mozilla.javascript.Scriptable) r4;

        $r21 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r22 = interfaceinvoke $r19.<org.mozilla.javascript.Callable: java.lang.Object call(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r2, r3, $r20, $r21);

        return $r22;
    }

    public static java.lang.String typeof(java.lang.Object)
    {
        java.lang.RuntimeException $r2;
        java.lang.Object r0, $r1;
        java.lang.String $r3;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return "object";

     label1:
        $r1 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r1 goto label2;

        return "undefined";

     label2:
        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label6;

        $z4 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z4 == 0 goto label3;

        return "xml";

     label3:
        $z5 = r0 instanceof org.mozilla.javascript.Callable;

        if $z5 == 0 goto label4;

        $r3 = "function";

        goto label5;

     label4:
        $r3 = "object";

     label5:
        return $r3;

     label6:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label7;

        return "string";

     label7:
        $z2 = r0 instanceof java.lang.Number;

        if $z2 == 0 goto label8;

        return "number";

     label8:
        $z3 = r0 instanceof java.lang.Boolean;

        if $z3 == 0 goto label9;

        return "boolean";

     label9:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException errorWithClassName(java.lang.String,java.lang.Object)>("msg.invalid.type", r0);

        throw $r2;
    }

    public static java.lang.String typeofName(org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.Scriptable r1, $r3;
        org.mozilla.javascript.Context $r0;
        java.lang.Object $r4;
        java.lang.String r2, $r5;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.String;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable bind(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.String)>($r0, r1, r2);

        if $r3 != null goto label1;

        return "undefined";

     label1:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectProp(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Context)>($r3, r2, $r0);

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String typeof(java.lang.Object)>($r4);

        return $r5;
    }

    public static java.lang.Object add(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        org.mozilla.javascript.Scriptable $r7, $r8;
        org.mozilla.javascript.xml.XMLObject $r10, $r13;
        java.lang.String $r0, $r1, $r2;
        java.lang.Number $r3, $r4, $r5, $r6, $r16, $r17, $r18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8;
        org.mozilla.javascript.Context r9;
        java.lang.Object $r11, $r12, $r14, $r15, r19, r20;

        r19 := @parameter0: java.lang.Object;

        r20 := @parameter1: java.lang.Object;

        r9 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r19 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        $z9 = r20 instanceof java.lang.Number;

        if $z9 == 0 goto label1;

        $r16 = (java.lang.Number) r19;

        $d6 = virtualinvoke $r16.<java.lang.Number: double doubleValue()>();

        $r17 = (java.lang.Number) r20;

        $d7 = virtualinvoke $r17.<java.lang.Number: double doubleValue()>();

        $d8 = $d6 + $d7;

        $r18 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d8);

        return $r18;

     label1:
        $z1 = r19 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z1 == 0 goto label2;

        $r13 = (org.mozilla.javascript.xml.XMLObject) r19;

        $r14 = virtualinvoke $r13.<org.mozilla.javascript.xml.XMLObject: java.lang.Object addValues(org.mozilla.javascript.Context,boolean,java.lang.Object)>(r9, 1, r20);

        $r15 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r14 == $r15 goto label2;

        return $r14;

     label2:
        $z2 = r20 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z2 == 0 goto label3;

        $r10 = (org.mozilla.javascript.xml.XMLObject) r20;

        $r11 = virtualinvoke $r10.<org.mozilla.javascript.xml.XMLObject: java.lang.Object addValues(org.mozilla.javascript.Context,boolean,java.lang.Object)>(r9, 0, r19);

        $r12 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r11 == $r12 goto label3;

        return $r11;

     label3:
        $z3 = r19 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label4;

        $r8 = (org.mozilla.javascript.Scriptable) r19;

        r19 = interfaceinvoke $r8.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>(null);

     label4:
        $z4 = r20 instanceof org.mozilla.javascript.Scriptable;

        if $z4 == 0 goto label5;

        $r7 = (org.mozilla.javascript.Scriptable) r20;

        r20 = interfaceinvoke $r7.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>(null);

     label5:
        $z5 = r19 instanceof java.lang.String;

        if $z5 != 0 goto label7;

        $z6 = r20 instanceof java.lang.String;

        if $z6 != 0 goto label7;

        $z7 = r19 instanceof java.lang.Number;

        if $z7 == 0 goto label6;

        $z8 = r20 instanceof java.lang.Number;

        if $z8 == 0 goto label6;

        $r4 = (java.lang.Number) r19;

        $d3 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        $r5 = (java.lang.Number) r20;

        $d4 = virtualinvoke $r5.<java.lang.Number: double doubleValue()>();

        $d5 = $d3 + $d4;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d5);

        return $r6;

     label6:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r19);

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r20);

        $d2 = $d0 + $d1;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d2);

        return $r3;

     label7:
        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r19);

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r20);

        $r2 = virtualinvoke $r0.<java.lang.String: java.lang.String concat(java.lang.String)>($r1);

        return $r2;
    }

    public static java.lang.Object nameIncrDecr(org.mozilla.javascript.Scriptable, java.lang.String, int)
    {
        java.lang.RuntimeException $r3;
        org.mozilla.javascript.Scriptable $r1, $r2, r5, r6;
        int i0;
        java.lang.Object $r4, $r7, $r8;
        java.lang.String r0;

        r5 := @parameter0: org.mozilla.javascript.Scriptable;

        r0 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

     label1:
        r6 = r5;

     label2:
        $r7 = interfaceinvoke r6.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r0, r5);

        $r8 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r7 == $r8 goto label3;

        goto label4;

     label3:
        $r1 = interfaceinvoke r6.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r6 = $r1;

        if $r1 != null goto label2;

        $r2 = interfaceinvoke r5.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        r5 = $r2;

        if $r2 != null goto label1;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFoundError(org.mozilla.javascript.Scriptable,java.lang.String)>($r2, r0);

        throw $r3;

     label4:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object doScriptableIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object,int)>(r6, r0, r5, $r7, i0);

        return $r4;
    }

    public static java.lang.Object propIncrDecr(java.lang.Object, java.lang.String, org.mozilla.javascript.Context, int)
    {
        org.mozilla.javascript.Context r0;
        java.lang.Double $r7, $r8;
        java.lang.RuntimeException $r10;
        org.mozilla.javascript.Scriptable $r2, $r6, r11;
        int i0;
        java.lang.Object r1, $r4, $r5, $r9;
        java.lang.String r3;

        r1 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.String;

        r0 := @parameter2: org.mozilla.javascript.Context;

        i0 := @parameter3: int;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException undefReadError(java.lang.Object,java.lang.Object)>(r1, r3);

        throw $r10;

     label1:
        r11 = $r2;

     label2:
        $r4 = interfaceinvoke r11.<org.mozilla.javascript.Scriptable: java.lang.Object get(java.lang.String,org.mozilla.javascript.Scriptable)>(r3, $r2);

        $r5 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r4 == $r5 goto label3;

        goto label4;

     label3:
        $r6 = interfaceinvoke r11.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r11 = $r6;

        if $r6 != null goto label2;

        $r7 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        interfaceinvoke $r2.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>(r3, $r2, $r7);

        $r8 = <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj>;

        return $r8;

     label4:
        $r9 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object doScriptableIncrDecr(org.mozilla.javascript.Scriptable,java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object,int)>(r11, r3, $r2, $r4, i0);

        return $r9;
    }

    private static java.lang.Object doScriptableIncrDecr(org.mozilla.javascript.Scriptable, java.lang.String, org.mozilla.javascript.Scriptable, java.lang.Object, int)
    {
        int i0, $i1, $i2;
        java.lang.String r2;
        java.lang.Number $r0, $r4;
        boolean z0, $z1, $z3, $z4;
        double $d0, d1, d2;
        org.mozilla.javascript.Scriptable r1, r3;
        java.lang.Object r5;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.mozilla.javascript.Scriptable;

        r5 := @parameter3: java.lang.Object;

        i0 := @parameter4: int;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z0 = $z3;

        $z1 = r5 instanceof java.lang.Number;

        if $z1 == 0 goto label3;

        $r4 = (java.lang.Number) r5;

        d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        goto label4;

     label3:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r5);

        d1 = $d0;

        if $z4 == 0 goto label4;

        r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

     label4:
        $i2 = i0 & 1;

        if $i2 != 0 goto label5;

        d2 = d1 + 1.0;

        goto label6;

     label5:
        d2 = d1 - 1.0;

     label6:
        $r0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d2);

        interfaceinvoke r1.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>(r2, r3, $r0);

        if z0 == 0 goto label7;

        return r5;

     label7:
        return $r0;
    }

    public static java.lang.Object elemIncrDecr(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context, int)
    {
        int i0, $i1, $i2;
        java.lang.Number $r4, $r5;
        boolean z0, $z1, $z3, $z4;
        double $d0, d1, d2;
        org.mozilla.javascript.Context r2;
        java.lang.Object r0, r1, $r3, r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.mozilla.javascript.Context;

        i0 := @parameter3: int;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object getObjectElem(java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r0, r1, r2);

        r6 = $r3;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z0 = $z3;

        $z1 = $r3 instanceof java.lang.Number;

        if $z1 == 0 goto label3;

        $r5 = (java.lang.Number) $r3;

        d1 = virtualinvoke $r5.<java.lang.Number: double doubleValue()>();

        goto label4;

     label3:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r3);

        d1 = $d0;

        if $z4 == 0 goto label4;

        r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

     label4:
        $i2 = i0 & 1;

        if $i2 != 0 goto label5;

        d2 = d1 + 1.0;

        goto label6;

     label5:
        d2 = d1 - 1.0;

     label6:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d2);

        staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object setObjectElem(java.lang.Object,java.lang.Object,java.lang.Object,org.mozilla.javascript.Context)>(r0, r1, $r4, r2);

        if z0 == 0 goto label7;

        return r6;

     label7:
        return $r4;
    }

    public static java.lang.Object refIncrDecr(org.mozilla.javascript.Ref, org.mozilla.javascript.Context, int)
    {
        org.mozilla.javascript.Ref r0;
        int i0, $i1, $i2;
        java.lang.Number $r3, $r4;
        boolean z0, $z1, $z3, $z4;
        double $d0, d1, d2;
        org.mozilla.javascript.Context r1;
        java.lang.Object $r2, r5;

        r0 := @parameter0: org.mozilla.javascript.Ref;

        r1 := @parameter1: org.mozilla.javascript.Context;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.Ref: java.lang.Object get(org.mozilla.javascript.Context)>(r1);

        r5 = $r2;

        $i1 = i0 & 2;

        if $i1 == 0 goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z0 = $z3;

        $z1 = $r2 instanceof java.lang.Number;

        if $z1 == 0 goto label3;

        $r4 = (java.lang.Number) $r2;

        d1 = virtualinvoke $r4.<java.lang.Number: double doubleValue()>();

        goto label4;

     label3:
        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>($r2);

        d1 = $d0;

        if $z4 == 0 goto label4;

        r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>($d0);

     label4:
        $i2 = i0 & 1;

        if $i2 != 0 goto label5;

        d2 = d1 + 1.0;

        goto label6;

     label5:
        d2 = d1 - 1.0;

     label6:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d2);

        virtualinvoke r0.<org.mozilla.javascript.Ref: java.lang.Object set(org.mozilla.javascript.Context,java.lang.Object)>(r1, $r3);

        if z0 == 0 goto label7;

        return r5;

     label7:
        return $r3;
    }

    private static java.lang.Object toPrimitive(java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r3;
        org.mozilla.javascript.Scriptable r1;
        java.lang.Object r0, $r2;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 != 0 goto label1;

        return r0;

     label1:
        r1 = (org.mozilla.javascript.Scriptable) r0;

        $r2 = interfaceinvoke r1.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>(null);

        $z1 = $r2 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label2;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.bad.default.value");

        throw $r3;

     label2:
        return $r2;
    }

    public static boolean eq(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.Wrapper $r15, $r17;
        java.lang.String $r8, $r33;
        java.lang.Number $r9, $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32;
        java.lang.Boolean $r6, $r10, $r14, $r22, $r26, $r27, $r31, $r32;
        double $d0, $d1, $d2, $d3;
        org.mozilla.javascript.ScriptableObject $r3, $r11, $r19, $r23, $r28;
        java.lang.Object r0, r1, $r2, $r4, $r5, $r7, $r12, $r13, $r16, $r18, $r20, $r21, $r24, $r25, $r29, $r30;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 == null goto label01;

        $r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r7 goto label05;

     label01:
        if r1 == null goto label02;

        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r1 != $r2 goto label03;

     label02:
        return 1;

     label03:
        $z0 = r1 instanceof org.mozilla.javascript.ScriptableObject;

        if $z0 == 0 goto label04;

        $r3 = (org.mozilla.javascript.ScriptableObject) r1;

        $r4 = virtualinvoke $r3.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>(r0);

        $r5 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r4 == $r5 goto label04;

        $r6 = (java.lang.Boolean) $r4;

        $z1 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label04:
        return 0;

     label05:
        $z2 = r0 instanceof java.lang.Number;

        if $z2 == 0 goto label06;

        $r34 = (java.lang.Number) r0;

        $d1 = virtualinvoke $r34.<java.lang.Number: double doubleValue()>();

        $z29 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqNumber(double,java.lang.Object)>($d1, r1);

        return $z29;

     label06:
        $z3 = r0 instanceof java.lang.String;

        if $z3 == 0 goto label07;

        $r33 = (java.lang.String) r0;

        $z28 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqString(java.lang.String,java.lang.Object)>($r33, r1);

        return $z28;

     label07:
        $z4 = r0 instanceof java.lang.Boolean;

        if $z4 == 0 goto label14;

        $r27 = (java.lang.Boolean) r0;

        $z22 = virtualinvoke $r27.<java.lang.Boolean: boolean booleanValue()>();

        $z23 = r1 instanceof java.lang.Boolean;

        if $z23 == 0 goto label10;

        $r32 = (java.lang.Boolean) r1;

        $z27 = virtualinvoke $r32.<java.lang.Boolean: boolean booleanValue()>();

        if $z22 != $z27 goto label08;

        $z30 = 1;

        goto label09;

     label08:
        $z30 = 0;

     label09:
        return $z30;

     label10:
        $z24 = r1 instanceof org.mozilla.javascript.ScriptableObject;

        if $z24 == 0 goto label11;

        $r28 = (org.mozilla.javascript.ScriptableObject) r1;

        $r29 = virtualinvoke $r28.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>(r0);

        $r30 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r29 == $r30 goto label11;

        $r31 = (java.lang.Boolean) $r29;

        $z26 = virtualinvoke $r31.<java.lang.Boolean: boolean booleanValue()>();

        return $z26;

     label11:
        if $z22 == 0 goto label12;

        $d2 = 1.0;

        goto label13;

     label12:
        $d2 = 0.0;

     label13:
        $z25 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqNumber(double,java.lang.Object)>($d2, r1);

        return $z25;

     label14:
        $z5 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z5 == 0 goto label28;

        $z6 = r1 instanceof org.mozilla.javascript.Scriptable;

        if $z6 == 0 goto label21;

        if r0 != r1 goto label15;

        return 1;

     label15:
        $z16 = r0 instanceof org.mozilla.javascript.ScriptableObject;

        if $z16 == 0 goto label16;

        $r23 = (org.mozilla.javascript.ScriptableObject) r0;

        $r24 = virtualinvoke $r23.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>(r1);

        $r25 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r24 == $r25 goto label16;

        $r26 = (java.lang.Boolean) $r24;

        $z21 = virtualinvoke $r26.<java.lang.Boolean: boolean booleanValue()>();

        return $z21;

     label16:
        $z17 = r1 instanceof org.mozilla.javascript.ScriptableObject;

        if $z17 == 0 goto label17;

        $r19 = (org.mozilla.javascript.ScriptableObject) r1;

        $r20 = virtualinvoke $r19.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>(r0);

        $r21 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r20 == $r21 goto label17;

        $r22 = (java.lang.Boolean) $r20;

        $z20 = virtualinvoke $r22.<java.lang.Boolean: boolean booleanValue()>();

        return $z20;

     label17:
        $z18 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z18 == 0 goto label20;

        $z19 = r1 instanceof org.mozilla.javascript.Wrapper;

        if $z19 == 0 goto label20;

        $r15 = (org.mozilla.javascript.Wrapper) r0;

        $r16 = interfaceinvoke $r15.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $r17 = (org.mozilla.javascript.Wrapper) r1;

        $r18 = interfaceinvoke $r17.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        if $r16 != $r18 goto label18;

        $z31 = 1;

        goto label19;

     label18:
        $z31 = 0;

     label19:
        return $z31;

     label20:
        return 0;

     label21:
        $z7 = r1 instanceof java.lang.Boolean;

        if $z7 == 0 goto label25;

        $z12 = r0 instanceof org.mozilla.javascript.ScriptableObject;

        if $z12 == 0 goto label22;

        $r11 = (org.mozilla.javascript.ScriptableObject) r0;

        $r12 = virtualinvoke $r11.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>(r1);

        $r13 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r12 == $r13 goto label22;

        $r14 = (java.lang.Boolean) $r12;

        $z15 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        return $z15;

     label22:
        $r10 = (java.lang.Boolean) r1;

        $z13 = virtualinvoke $r10.<java.lang.Boolean: boolean booleanValue()>();

        if $z13 == 0 goto label23;

        $d3 = 1.0;

        goto label24;

     label23:
        $d3 = 0.0;

     label24:
        $z14 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqNumber(double,java.lang.Object)>($d3, r0);

        return $z14;

     label25:
        $z8 = r1 instanceof java.lang.Number;

        if $z8 == 0 goto label26;

        $r9 = (java.lang.Number) r1;

        $d0 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();

        $z11 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqNumber(double,java.lang.Object)>($d0, r0);

        return $z11;

     label26:
        $z9 = r1 instanceof java.lang.String;

        if $z9 == 0 goto label27;

        $r8 = (java.lang.String) r1;

        $z10 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean eqString(java.lang.String,java.lang.Object)>($r8, r0);

        return $z10;

     label27:
        return 0;

     label28:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r0);

        if r0 != r1 goto label29;

        $z32 = 1;

        goto label30;

     label29:
        $z32 = 0;

     label30:
        return $z32;
    }

    static boolean eqNumber(double, java.lang.Object)
    {
        byte $b0, $b1, $b2;
        java.lang.Boolean $r5, $r6;
        java.lang.Number $r1, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        double d0, $d1, $d2, $d3;
        org.mozilla.javascript.ScriptableObject $r2;
        java.lang.Object $r0, $r3, $r4, r8;

        d0 := @parameter0: double;

        r8 := @parameter1: java.lang.Object;

     label01:
        if r8 == null goto label02;

        $r0 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r8 != $r0 goto label03;

     label02:
        return 0;

     label03:
        $z0 = r8 instanceof java.lang.Number;

        if $z0 == 0 goto label06;

        $r7 = (java.lang.Number) r8;

        $d2 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $b2 = d0 cmpl $d2;

        if $b2 != 0 goto label04;

        $z7 = 1;

        goto label05;

     label04:
        $z7 = 0;

     label05:
        return $z7;

     label06:
        $z1 = r8 instanceof java.lang.String;

        if $z1 == 0 goto label09;

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r8);

        $b1 = d0 cmpl $d1;

        if $b1 != 0 goto label07;

        $z8 = 1;

        goto label08;

     label07:
        $z8 = 0;

     label08:
        return $z8;

     label09:
        $z2 = r8 instanceof java.lang.Boolean;

        if $z2 == 0 goto label14;

        $r6 = (java.lang.Boolean) r8;

        $z6 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label10;

        $d3 = 1.0;

        goto label11;

     label10:
        $d3 = 0.0;

     label11:
        $b0 = d0 cmpl $d3;

        if $b0 != 0 goto label12;

        $z9 = 1;

        goto label13;

     label12:
        $z9 = 0;

     label13:
        return $z9;

     label14:
        $z3 = r8 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label16;

        $z4 = r8 instanceof org.mozilla.javascript.ScriptableObject;

        if $z4 == 0 goto label15;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Number wrapNumber(double)>(d0);

        $r2 = (org.mozilla.javascript.ScriptableObject) r8;

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>($r1);

        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r3 == $r4 goto label15;

        $r5 = (java.lang.Boolean) $r3;

        $z5 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z5;

     label15:
        r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object toPrimitive(java.lang.Object)>(r8);

        goto label01;

     label16:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r8);

        return 0;
    }

    private static boolean eqString(java.lang.String, java.lang.Object)
    {
        byte $b0, $b1;
        java.lang.Boolean $r5, $r6;
        java.lang.String r1;
        java.lang.Number $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        double $d0, $d1, $d2, $d3;
        org.mozilla.javascript.ScriptableObject $r2;
        java.lang.Object $r0, $r3, $r4, r8;

        r1 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object;

     label01:
        if r8 == null goto label02;

        $r0 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r8 != $r0 goto label03;

     label02:
        return 0;

     label03:
        $z0 = r8 instanceof java.lang.String;

        if $z0 == 0 goto label04;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r8);

        return $z7;

     label04:
        $z1 = r8 instanceof java.lang.Number;

        if $z1 == 0 goto label07;

        $d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.String)>(r1);

        $r7 = (java.lang.Number) r8;

        $d2 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $b1 = $d1 cmpl $d2;

        if $b1 != 0 goto label05;

        $z8 = 1;

        goto label06;

     label05:
        $z8 = 0;

     label06:
        return $z8;

     label07:
        $z2 = r8 instanceof java.lang.Boolean;

        if $z2 == 0 goto label12;

        $d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.String)>(r1);

        $r6 = (java.lang.Boolean) r8;

        $z6 = virtualinvoke $r6.<java.lang.Boolean: boolean booleanValue()>();

        if $z6 == 0 goto label08;

        $d3 = 1.0;

        goto label09;

     label08:
        $d3 = 0.0;

     label09:
        $b0 = $d0 cmpl $d3;

        if $b0 != 0 goto label10;

        $z9 = 1;

        goto label11;

     label10:
        $z9 = 0;

     label11:
        return $z9;

     label12:
        $z3 = r8 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label14;

        $z4 = r8 instanceof org.mozilla.javascript.ScriptableObject;

        if $z4 == 0 goto label13;

        $r2 = (org.mozilla.javascript.ScriptableObject) r8;

        $r3 = virtualinvoke $r2.<org.mozilla.javascript.ScriptableObject: java.lang.Object equivalentValues(java.lang.Object)>(r1);

        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r3 == $r4 goto label13;

        $r5 = (java.lang.Boolean) $r3;

        $z5 = virtualinvoke $r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z5;

     label13:
        r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.Object toPrimitive(java.lang.Object)>(r8);

        goto label01;

     label14:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r8);

        return 0;
    }

    public static boolean shallowEq(java.lang.Object, java.lang.Object)
    {
        byte $b0, $b1;
        java.lang.Number $r7, $r8, $r9;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15;
        double $d0, $d1, $d2;
        org.mozilla.javascript.Wrapper $r3, $r5;
        java.lang.Object r0, r1, $r2, $r4, $r6;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != r1 goto label04;

        $z11 = r0 instanceof java.lang.Number;

        if $z11 != 0 goto label01;

        return 1;

     label01:
        $r9 = (java.lang.Number) r0;

        $d2 = virtualinvoke $r9.<java.lang.Number: double doubleValue()>();

        $b1 = $d2 cmpl $d2;

        if $b1 != 0 goto label02;

        $z12 = 1;

        goto label03;

     label02:
        $z12 = 0;

     label03:
        return $z12;

     label04:
        if r0 == null goto label05;

        $r2 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        if r0 != $r2 goto label06;

     label05:
        return 0;

     label06:
        $z0 = r0 instanceof java.lang.Number;

        if $z0 == 0 goto label09;

        $z10 = r1 instanceof java.lang.Number;

        if $z10 == 0 goto label17;

        $r7 = (java.lang.Number) r0;

        $d0 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        $r8 = (java.lang.Number) r1;

        $d1 = virtualinvoke $r8.<java.lang.Number: double doubleValue()>();

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label07;

        $z13 = 1;

        goto label08;

     label07:
        $z13 = 0;

     label08:
        return $z13;

     label09:
        $z1 = r0 instanceof java.lang.String;

        if $z1 == 0 goto label10;

        $z8 = r1 instanceof java.lang.String;

        if $z8 == 0 goto label17;

        $z9 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z9;

     label10:
        $z2 = r0 instanceof java.lang.Boolean;

        if $z2 == 0 goto label11;

        $z6 = r1 instanceof java.lang.Boolean;

        if $z6 == 0 goto label17;

        $z7 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z7;

     label11:
        $z3 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z3 == 0 goto label14;

        $z4 = r0 instanceof org.mozilla.javascript.Wrapper;

        if $z4 == 0 goto label17;

        $z5 = r1 instanceof org.mozilla.javascript.Wrapper;

        if $z5 == 0 goto label17;

        $r3 = (org.mozilla.javascript.Wrapper) r0;

        $r4 = interfaceinvoke $r3.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        $r5 = (org.mozilla.javascript.Wrapper) r1;

        $r6 = interfaceinvoke $r5.<org.mozilla.javascript.Wrapper: java.lang.Object unwrap()>();

        if $r4 != $r6 goto label12;

        $z14 = 1;

        goto label13;

     label12:
        $z14 = 0;

     label13:
        return $z14;

     label14:
        staticinvoke <org.mozilla.javascript.ScriptRuntime: void warnAboutNonJSObject(java.lang.Object)>(r0);

        if r0 != r1 goto label15;

        $z15 = 1;

        goto label16;

     label15:
        $z15 = 0;

     label16:
        return $z15;

     label17:
        return 0;
    }

    public static boolean instanceOf(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.EcmaError $r4;
        org.mozilla.javascript.Context r5;
        org.mozilla.javascript.Scriptable $r2, $r3;
        java.lang.Object r0, r1;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r5 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.instanceof.not.object");

        throw $r4;

     label1:
        $z1 = r1 instanceof org.mozilla.javascript.Scriptable;

        if $z1 != 0 goto label2;

        return 0;

     label2:
        $r3 = (org.mozilla.javascript.Scriptable) r0;

        $r2 = (org.mozilla.javascript.Scriptable) r1;

        $z2 = interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: boolean hasInstance(org.mozilla.javascript.Scriptable)>($r2);

        return $z2;
    }

    public static boolean jsDelegatesTo(org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r0, r1, r2;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r2 = interfaceinvoke r0.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

     label1:
        if r2 == null goto label3;

        $z0 = virtualinvoke r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        r2 = interfaceinvoke r2.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        goto label1;

     label3:
        return 0;
    }

    public static boolean in(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.EcmaError $r4;
        org.mozilla.javascript.Scriptable $r3;
        org.mozilla.javascript.Context r2;
        java.lang.Object r0, r1;
        boolean $z0, $z1;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.mozilla.javascript.Context;

        $z0 = r0 instanceof org.mozilla.javascript.Scriptable;

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError0(java.lang.String)>("msg.instanceof.not.object");

        throw $r4;

     label1:
        $r3 = (org.mozilla.javascript.Scriptable) r0;

        $z1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: boolean hasObjectElem(org.mozilla.javascript.Scriptable,java.lang.Object,org.mozilla.javascript.Context)>($r3, r1, r2);

        return $z1;
    }

    public static boolean cmp_LT(java.lang.Object, java.lang.Object)
    {
        byte $b1;
        int $i0, $i2;
        java.lang.String $r0, $r1;
        java.lang.Number $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        double d0, d1;
        org.mozilla.javascript.Scriptable $r3, $r5;
        java.lang.Class $r2, $r4;
        java.lang.Object r8, r9;

        r8 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.Object;

        $z0 = r8 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        $z5 = r9 instanceof java.lang.Number;

        if $z5 == 0 goto label1;

        $r6 = (java.lang.Number) r8;

        d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $r7 = (java.lang.Number) r9;

        d1 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        goto label7;

     label1:
        $z1 = r8 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label2;

        $r5 = (org.mozilla.javascript.Scriptable) r8;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        r8 = interfaceinvoke $r5.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r4);

     label2:
        $z2 = r9 instanceof org.mozilla.javascript.Scriptable;

        if $z2 == 0 goto label3;

        $r3 = (org.mozilla.javascript.Scriptable) r9;

        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        r9 = interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r2);

     label3:
        $z3 = r8 instanceof java.lang.String;

        if $z3 == 0 goto label6;

        $z4 = r9 instanceof java.lang.String;

        if $z4 == 0 goto label6;

        $r1 = (java.lang.String) r8;

        $r0 = (java.lang.String) r9;

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r0);

        if $i0 >= 0 goto label4;

        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        return $z6;

     label6:
        d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r8);

        d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r9);

     label7:
        $b1 = d0 cmpg d1;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label8;

        $z7 = 1;

        goto label9;

     label8:
        $z7 = 0;

     label9:
        return $z7;
    }

    public static boolean cmp_LE(java.lang.Object, java.lang.Object)
    {
        byte $b1;
        int $i0, $i2;
        java.lang.String $r0, $r1;
        java.lang.Number $r6, $r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        double d0, d1;
        org.mozilla.javascript.Scriptable $r3, $r5;
        java.lang.Class $r2, $r4;
        java.lang.Object r8, r9;

        r8 := @parameter0: java.lang.Object;

        r9 := @parameter1: java.lang.Object;

        $z0 = r8 instanceof java.lang.Number;

        if $z0 == 0 goto label1;

        $z5 = r9 instanceof java.lang.Number;

        if $z5 == 0 goto label1;

        $r6 = (java.lang.Number) r8;

        d0 = virtualinvoke $r6.<java.lang.Number: double doubleValue()>();

        $r7 = (java.lang.Number) r9;

        d1 = virtualinvoke $r7.<java.lang.Number: double doubleValue()>();

        goto label7;

     label1:
        $z1 = r8 instanceof org.mozilla.javascript.Scriptable;

        if $z1 == 0 goto label2;

        $r5 = (org.mozilla.javascript.Scriptable) r8;

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        r8 = interfaceinvoke $r5.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r4);

     label2:
        $z2 = r9 instanceof org.mozilla.javascript.Scriptable;

        if $z2 == 0 goto label3;

        $r3 = (org.mozilla.javascript.Scriptable) r9;

        $r2 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass>;

        r9 = interfaceinvoke $r3.<org.mozilla.javascript.Scriptable: java.lang.Object getDefaultValue(java.lang.Class)>($r2);

     label3:
        $z3 = r8 instanceof java.lang.String;

        if $z3 == 0 goto label6;

        $z4 = r9 instanceof java.lang.String;

        if $z4 == 0 goto label6;

        $r1 = (java.lang.String) r8;

        $r0 = (java.lang.String) r9;

        $i0 = virtualinvoke $r1.<java.lang.String: int compareTo(java.lang.String)>($r0);

        if $i0 > 0 goto label4;

        $z6 = 1;

        goto label5;

     label4:
        $z6 = 0;

     label5:
        return $z6;

     label6:
        d0 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r8);

        d1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: double toNumber(java.lang.Object)>(r9);

     label7:
        $b1 = d0 cmpg d1;

        $i2 = (int) $b1;

        if $i2 > 0 goto label8;

        $z7 = 1;

        goto label9;

     label8:
        $z7 = 0;

     label9:
        return $z7;
    }

    public static org.mozilla.javascript.ScriptableObject getGlobal(org.mozilla.javascript.Context)
    {
        java.lang.Object[] $r6;
        org.mozilla.javascript.Context r2;
        java.lang.Class[] $r3;
        java.lang.reflect.Constructor $r5;
        java.lang.Exception $r9;
        org.mozilla.javascript.ScriptableObject $r8;
        org.mozilla.javascript.ImporterTopLevel $r1;
        java.lang.Class $r0, $r4;
        java.lang.Object $r7;

        r2 := @parameter0: org.mozilla.javascript.Context;

        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.tools.shell.Global");

        if $r0 == null goto label4;

     label1:
        $r3 = newarray (java.lang.Class)[1];

        $r4 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextClass>;

        $r3[0] = $r4;

        $r5 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>($r3);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r2;

        $r7 = virtualinvoke $r5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r6);

        $r8 = (org.mozilla.javascript.ScriptableObject) $r7;

     label2:
        return $r8;

     label3:
        $r9 := @caughtexception;

     label4:
        $r1 = new org.mozilla.javascript.ImporterTopLevel;

        specialinvoke $r1.<org.mozilla.javascript.ImporterTopLevel: void <init>(org.mozilla.javascript.Context)>(r2);

        return $r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean hasTopCall(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable $r1;
        org.mozilla.javascript.Context r0;
        boolean $z0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        $r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static org.mozilla.javascript.Scriptable getTopCallScope(org.mozilla.javascript.Context)
    {
        java.lang.IllegalStateException $r2;
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>()>();

        throw $r2;

     label1:
        return r1;
    }

    public static java.lang.Object doTopCall(org.mozilla.javascript.Callable, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Throwable $r13;
        java.lang.IllegalStateException $r10, $r11, $r15;
        java.lang.Object[] r7;
        org.mozilla.javascript.Callable r5;
        org.mozilla.javascript.ContextFactory $r4;
        org.mozilla.javascript.NativeCall $r9, $r14;
        boolean $z0;
        org.mozilla.javascript.Context r1;
        java.lang.IllegalArgumentException $r12;
        org.mozilla.javascript.Scriptable r0, $r2, $r3, r6;
        java.lang.Object $r8;

        r5 := @parameter0: org.mozilla.javascript.Callable;

        r1 := @parameter1: org.mozilla.javascript.Context;

        r0 := @parameter2: org.mozilla.javascript.Scriptable;

        r6 := @parameter3: org.mozilla.javascript.Scriptable;

        r7 := @parameter4: java.lang.Object[];

        if r0 != null goto label01;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r12;

     label01:
        $r2 = r1.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if $r2 == null goto label02;

        $r11 = new java.lang.IllegalStateException;

        specialinvoke $r11.<java.lang.IllegalStateException: void <init>()>();

        throw $r11;

     label02:
        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r0);

        r1.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope> = $r3;

        $z0 = virtualinvoke r1.<org.mozilla.javascript.Context: boolean hasFeature(int)>(7);

        r1.<org.mozilla.javascript.Context: boolean useDynamicScope> = $z0;

        $r4 = virtualinvoke r1.<org.mozilla.javascript.Context: org.mozilla.javascript.ContextFactory getFactory()>();

     label03:
        $r8 = virtualinvoke $r4.<org.mozilla.javascript.ContextFactory: java.lang.Object doTopCall(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r5, r1, r0, r6, r7);

        goto label08;

     label04:
        goto label07;

     label05:
        $r13 := @caughtexception;

        goto label10;

     label06:
        throw $r13;

     label07:
        return $r8;

     label08:
        r1.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope> = null;

        r1.<org.mozilla.javascript.Context: org.mozilla.javascript.xml.XMLLib cachedXMLLib> = null;

        $r9 = r1.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

        if $r9 == null goto label09;

        $r10 = new java.lang.IllegalStateException;

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>()>();

        throw $r10;

     label09:
        goto label04;

     label10:
        r1.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope> = null;

        r1.<org.mozilla.javascript.Context: org.mozilla.javascript.xml.XMLLib cachedXMLLib> = null;

        $r14 = r1.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

        if $r14 == null goto label11;

        $r15 = new java.lang.IllegalStateException;

        specialinvoke $r15.<java.lang.IllegalStateException: void <init>()>();

        throw $r15;

     label11:
        goto label06;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
    }

    static org.mozilla.javascript.Scriptable checkDynamicScope(org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r0, r1, $r2, r3;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        if r0 != r1 goto label1;

        return r0;

     label1:
        r3 = r0;

     label2:
        $r2 = interfaceinvoke r3.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getPrototype()>();

        r3 = $r2;

        if $r2 != r1 goto label3;

        return r0;

     label3:
        if $r2 != null goto label2;

        return r1;
    }

    public static void initScript(org.mozilla.javascript.NativeFunction, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, boolean)
    {
        java.lang.IllegalStateException $r7;
        org.mozilla.javascript.NativeFunction r2;
        int $i0, i1, $i2, $i3;
        java.lang.String $r4;
        boolean $z0, $z1, z2;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Scriptable $r1, r3, r8, r9;
        java.lang.Object $r5, $r6;

        r2 := @parameter0: org.mozilla.javascript.NativeFunction;

        r8 := @parameter1: org.mozilla.javascript.Scriptable;

        r0 := @parameter2: org.mozilla.javascript.Context;

        r3 := @parameter3: org.mozilla.javascript.Scriptable;

        z2 := @parameter4: boolean;

        $r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if $r1 != null goto label1;

        $r7 = new java.lang.IllegalStateException;

        specialinvoke $r7.<java.lang.IllegalStateException: void <init>()>();

        throw $r7;

     label1:
        $i0 = virtualinvoke r2.<org.mozilla.javascript.NativeFunction: int getParamAndVarCount()>();

        if $i0 == 0 goto label6;

        r9 = r3;

     label2:
        $z0 = r9 instanceof org.mozilla.javascript.NativeWith;

        if $z0 == 0 goto label3;

        r9 = interfaceinvoke r9.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        goto label2;

     label3:
        i1 = $i0;

     label4:
        $i2 = i1;

        $i3 = i1 - 1;

        i1 = $i3;

        if $i2 == 0 goto label6;

        $r4 = virtualinvoke r2.<org.mozilla.javascript.NativeFunction: java.lang.String getParamOrVarName(int)>($i3);

        $z1 = staticinvoke <org.mozilla.javascript.ScriptableObject: boolean hasProperty(org.mozilla.javascript.Scriptable,java.lang.String)>(r3, $r4);

        if $z1 != 0 goto label4;

        if z2 != 0 goto label5;

        $r6 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r9, $r4, $r6, 4);

        goto label4;

     label5:
        $r5 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        interfaceinvoke r9.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>($r4, r9, $r5);

        goto label4;

     label6:
        return;
    }

    public static org.mozilla.javascript.Scriptable createFunctionActivation(org.mozilla.javascript.NativeFunction, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        org.mozilla.javascript.Scriptable r2;
        java.lang.Object[] r3;
        org.mozilla.javascript.NativeCall $r0;
        org.mozilla.javascript.NativeFunction r1;

        r1 := @parameter0: org.mozilla.javascript.NativeFunction;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        r3 := @parameter2: java.lang.Object[];

        $r0 = new org.mozilla.javascript.NativeCall;

        specialinvoke $r0.<org.mozilla.javascript.NativeCall: void <init>(org.mozilla.javascript.NativeFunction,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r1, r2, r3);

        return $r0;
    }

    public static void enterActivationFunction(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.IllegalStateException $r5;
        org.mozilla.javascript.Scriptable $r1, r2;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.NativeCall r3, $r4;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        r3 = (org.mozilla.javascript.NativeCall) r2;

        $r4 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

        r3.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeCall parentActivationCall> = $r4;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall> = r3;

        return;
    }

    public static void exitActivationFunction(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.NativeCall r1, $r2;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

        $r2 = r1.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeCall parentActivationCall>;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall> = $r2;

        r1.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeCall parentActivationCall> = null;

        return;
    }

    static org.mozilla.javascript.NativeCall findFunctionActivation(org.mozilla.javascript.Context, org.mozilla.javascript.Function)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.Function r1;
        org.mozilla.javascript.NativeCall r3;
        org.mozilla.javascript.NativeFunction $r2;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: org.mozilla.javascript.Function;

        r3 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.NativeCall currentActivationCall>;

     label1:
        if r3 == null goto label3;

        $r2 = r3.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeFunction function>;

        if $r2 != r1 goto label2;

        return r3;

     label2:
        r3 = r3.<org.mozilla.javascript.NativeCall: org.mozilla.javascript.NativeCall parentActivationCall>;

        goto label1;

     label3:
        return null;
    }

    public static org.mozilla.javascript.Scriptable newCatchScope(java.lang.Throwable, org.mozilla.javascript.Scriptable, java.lang.String, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.RhinoException r28;
        java.lang.Integer $r13;
        boolean $z0, $z1, $z2, $z3, z4;
        org.mozilla.javascript.Scriptable r1, r5, $r6;
        java.lang.Throwable r0, $r14, r26;
        org.mozilla.javascript.EcmaError r27;
        java.lang.Object[] $r3, $r12, r35;
        org.mozilla.javascript.NativeObject r25, $r36;
        org.mozilla.javascript.WrappedException r31;
        java.lang.StringBuffer $r15, $r18, $r19, $r21;
        int $i0;
        java.lang.String r9, $r17, $r20, r29, r30, $r33, r34;
        org.mozilla.javascript.Context r4;
        org.mozilla.javascript.JavaScriptException $r23;
        org.mozilla.javascript.EvaluatorException r32;
        java.lang.RuntimeException $r2;
        org.mozilla.javascript.WrapFactory $r7, $r10;
        java.lang.Object $r8, $r11, $r22, r24;
        java.lang.Class $r16;

        r0 := @parameter0: java.lang.Throwable;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        r9 := @parameter2: java.lang.String;

        r4 := @parameter3: org.mozilla.javascript.Context;

        r5 := @parameter4: org.mozilla.javascript.Scriptable;

        $z0 = r0 instanceof org.mozilla.javascript.JavaScriptException;

        if $z0 == 0 goto label01;

        z4 = 0;

        $r23 = (org.mozilla.javascript.JavaScriptException) r0;

        r24 = virtualinvoke $r23.<org.mozilla.javascript.JavaScriptException: java.lang.Object getValue()>();

        goto label11;

     label01:
        z4 = 1;

        if r1 == null goto label02;

        r25 = (org.mozilla.javascript.NativeObject) r1;

        $r22 = virtualinvoke r25.<org.mozilla.javascript.NativeObject: java.lang.Object getAssociatedValue(java.lang.Object)>(r0);

        r24 = $r22;

        if $r22 != null goto label11;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        goto label11;

     label02:
        r26 = null;

        $z1 = r0 instanceof org.mozilla.javascript.EcmaError;

        if $z1 == 0 goto label03;

        r27 = (org.mozilla.javascript.EcmaError) r0;

        r28 = r27;

        r29 = virtualinvoke r27.<org.mozilla.javascript.EcmaError: java.lang.String getName()>();

        r30 = virtualinvoke r27.<org.mozilla.javascript.EcmaError: java.lang.String getErrorMessage()>();

        goto label06;

     label03:
        $z2 = r0 instanceof org.mozilla.javascript.WrappedException;

        if $z2 == 0 goto label04;

        r31 = (org.mozilla.javascript.WrappedException) r0;

        r28 = r31;

        $r14 = virtualinvoke r31.<org.mozilla.javascript.WrappedException: java.lang.Throwable getWrappedException()>();

        r26 = $r14;

        r29 = "JavaException";

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r14.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(": ");

        $r20 = virtualinvoke $r14.<java.lang.Throwable: java.lang.String getMessage()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        r30 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label06;

     label04:
        $z3 = r0 instanceof org.mozilla.javascript.EvaluatorException;

        if $z3 == 0 goto label05;

        r32 = (org.mozilla.javascript.EvaluatorException) r0;

        r28 = r32;

        r29 = "InternalError";

        r30 = virtualinvoke r32.<org.mozilla.javascript.EvaluatorException: java.lang.String getMessage()>();

        goto label06;

     label05:
        $r2 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r2;

     label06:
        $r33 = virtualinvoke r28.<org.mozilla.javascript.RhinoException: java.lang.String sourceName()>();

        r34 = $r33;

        if $r33 != null goto label07;

        r34 = "";

     label07:
        $i0 = virtualinvoke r28.<org.mozilla.javascript.RhinoException: int lineNumber()>();

        if $i0 <= 0 goto label08;

        $r12 = newarray (java.lang.Object)[3];

        $r12[0] = r30;

        $r12[1] = r34;

        $r13 = new java.lang.Integer;

        specialinvoke $r13.<java.lang.Integer: void <init>(int)>($i0);

        $r12[2] = $r13;

        r35 = $r12;

        goto label09;

     label08:
        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = r30;

        $r3[1] = r34;

        r35 = $r3;

     label09:
        $r6 = virtualinvoke r4.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r5, r29, r35);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r6, "name", r29);

        if r26 == null goto label10;

        $r10 = virtualinvoke r4.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r11 = virtualinvoke $r10.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r4, r5, r26, null);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>($r6, "javaException", $r11, 5);

     label10:
        $r7 = virtualinvoke r4.<org.mozilla.javascript.Context: org.mozilla.javascript.WrapFactory getWrapFactory()>();

        $r8 = virtualinvoke $r7.<org.mozilla.javascript.WrapFactory: java.lang.Object wrap(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,java.lang.Object,java.lang.Class)>(r4, r5, r28, null);

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>($r6, "rhinoException", $r8, 5);

        r24 = $r6;

     label11:
        $r36 = new org.mozilla.javascript.NativeObject;

        specialinvoke $r36.<org.mozilla.javascript.NativeObject: void <init>()>();

        virtualinvoke $r36.<org.mozilla.javascript.NativeObject: void defineProperty(java.lang.String,java.lang.Object,int)>(r9, r24, 4);

        if z4 == 0 goto label12;

        virtualinvoke $r36.<org.mozilla.javascript.NativeObject: java.lang.Object associateValue(java.lang.Object,java.lang.Object)>(r0, r24);

     label12:
        return $r36;
    }

    public static org.mozilla.javascript.Scriptable enterWith(java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.EcmaError $r8;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.xml.XMLObject r5;
        org.mozilla.javascript.NativeWith $r3, $r6;
        org.mozilla.javascript.Scriptable $r2, r4;
        java.lang.Object r1;
        java.lang.String $r7;
        boolean $z0;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.mozilla.javascript.Context;

        r4 := @parameter2: org.mozilla.javascript.Scriptable;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.Scriptable toObjectOrNull(org.mozilla.javascript.Context,java.lang.Object)>(r0, r1);

        if $r2 != null goto label1;

        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        $r8 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.undef.with", $r7);

        throw $r8;

     label1:
        $z0 = $r2 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 == 0 goto label2;

        r5 = (org.mozilla.javascript.xml.XMLObject) $r2;

        $r6 = virtualinvoke r5.<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.NativeWith enterWith(org.mozilla.javascript.Scriptable)>(r4);

        return $r6;

     label2:
        $r3 = new org.mozilla.javascript.NativeWith;

        specialinvoke $r3.<org.mozilla.javascript.NativeWith: void <init>(org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable)>(r4, $r2);

        return $r3;
    }

    public static org.mozilla.javascript.Scriptable leaveWith(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeWith r1;
        org.mozilla.javascript.Scriptable r0, $r2;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 = (org.mozilla.javascript.NativeWith) r0;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeWith: org.mozilla.javascript.Scriptable getParentScope()>();

        return $r2;
    }

    public static org.mozilla.javascript.Scriptable enterDotQuery(java.lang.Object, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r2;
        org.mozilla.javascript.xml.XMLObject r1;
        java.lang.Object r0;
        org.mozilla.javascript.NativeWith $r3;
        java.lang.RuntimeException $r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 != 0 goto label1;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notXmlError(java.lang.Object)>(r0);

        throw $r4;

     label1:
        r1 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.NativeWith enterDotQuery(org.mozilla.javascript.Scriptable)>(r2);

        return $r3;
    }

    public static java.lang.Object updateDotQuery(boolean, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r0;
        org.mozilla.javascript.NativeWith r1;
        java.lang.Object $r2;
        boolean z0;

        z0 := @parameter0: boolean;

        r0 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 = (org.mozilla.javascript.NativeWith) r0;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeWith: java.lang.Object updateDotQuery(boolean)>(z0);

        return $r2;
    }

    public static org.mozilla.javascript.Scriptable leaveDotQuery(org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.NativeWith r1;
        org.mozilla.javascript.Scriptable r0, $r2;

        r0 := @parameter0: org.mozilla.javascript.Scriptable;

        r1 = (org.mozilla.javascript.NativeWith) r0;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeWith: org.mozilla.javascript.Scriptable getParentScope()>();

        return $r2;
    }

    public static void setFunctionProtoAndParent(org.mozilla.javascript.BaseFunction, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable r1, $r2;
        org.mozilla.javascript.BaseFunction r0;

        r0 := @parameter0: org.mozilla.javascript.BaseFunction;

        r1 := @parameter1: org.mozilla.javascript.Scriptable;

        virtualinvoke r0.<org.mozilla.javascript.BaseFunction: void setParentScope(org.mozilla.javascript.Scriptable)>(r1);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getFunctionPrototype(org.mozilla.javascript.Scriptable)>(r1);

        virtualinvoke r0.<org.mozilla.javascript.BaseFunction: void setPrototype(org.mozilla.javascript.Scriptable)>($r2);

        return;
    }

    public static void setObjectProtoAndParent(org.mozilla.javascript.ScriptableObject, org.mozilla.javascript.Scriptable)
    {
        org.mozilla.javascript.Scriptable $r0, $r3, r4;
        org.mozilla.javascript.ScriptableObject r1;
        java.lang.String $r2;

        r1 := @parameter0: org.mozilla.javascript.ScriptableObject;

        r4 := @parameter1: org.mozilla.javascript.Scriptable;

        $r0 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getTopLevelScope(org.mozilla.javascript.Scriptable)>(r4);

        virtualinvoke r1.<org.mozilla.javascript.ScriptableObject: void setParentScope(org.mozilla.javascript.Scriptable)>($r0);

        $r2 = virtualinvoke r1.<org.mozilla.javascript.ScriptableObject: java.lang.String getClassName()>();

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: org.mozilla.javascript.Scriptable getClassPrototype(org.mozilla.javascript.Scriptable,java.lang.String)>($r0, $r2);

        virtualinvoke r1.<org.mozilla.javascript.ScriptableObject: void setPrototype(org.mozilla.javascript.Scriptable)>($r3);

        return;
    }

    public static void initFunction(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, org.mozilla.javascript.NativeFunction, int, boolean)
    {
        org.mozilla.javascript.Context r4;
        java.lang.RuntimeException $r0;
        org.mozilla.javascript.NativeFunction r1;
        org.mozilla.javascript.Scriptable r5;
        int i0, $i1, $i2;
        java.lang.String $r2, $r3;
        boolean $z0, z1;

        r4 := @parameter0: org.mozilla.javascript.Context;

        r5 := @parameter1: org.mozilla.javascript.Scriptable;

        r1 := @parameter2: org.mozilla.javascript.NativeFunction;

        i0 := @parameter3: int;

        z1 := @parameter4: boolean;

        if i0 != 1 goto label2;

        $r3 = virtualinvoke r1.<org.mozilla.javascript.NativeFunction: java.lang.String getFunctionName()>();

        if $r3 == null goto label6;

        $i2 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i2 == 0 goto label6;

        if z1 != 0 goto label1;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void defineProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object,int)>(r5, $r3, r1, 4);

        goto label6;

     label1:
        interfaceinvoke r5.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>($r3, r5, r1);

        goto label6;

     label2:
        if i0 != 3 goto label5;

        $r2 = virtualinvoke r1.<org.mozilla.javascript.NativeFunction: java.lang.String getFunctionName()>();

        if $r2 == null goto label6;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label6;

     label3:
        $z0 = r5 instanceof org.mozilla.javascript.NativeWith;

        if $z0 == 0 goto label4;

        r5 = interfaceinvoke r5.<org.mozilla.javascript.Scriptable: org.mozilla.javascript.Scriptable getParentScope()>();

        goto label3;

     label4:
        interfaceinvoke r5.<org.mozilla.javascript.Scriptable: void put(java.lang.String,org.mozilla.javascript.Scriptable,java.lang.Object)>($r2, r5, r1);

        goto label6;

     label5:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

        throw $r0;

     label6:
        return;
    }

    public static org.mozilla.javascript.Scriptable newArrayLiteral(java.lang.Object[], int[], org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] r0, $r5, $r7;
        java.lang.Integer $r2;
        int[] r1;
        int i0, $i1, $i2, $i3, i4, i5, i6, i7;
        org.mozilla.javascript.Context r3;
        org.mozilla.javascript.Scriptable r4, $r8, r9;
        java.lang.Object $r6;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: int[];

        r3 := @parameter2: org.mozilla.javascript.Context;

        r4 := @parameter3: org.mozilla.javascript.Scriptable;

        i0 = lengthof r0;

        i4 = 0;

        if r1 == null goto label1;

        i4 = lengthof r1;

     label1:
        $i3 = i0 + i4;

        $r2 = new java.lang.Integer;

        specialinvoke $r2.<java.lang.Integer: void <init>(int)>($i3);

        $i1 = virtualinvoke r3.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i1 != 120 goto label2;

        $r7 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        $r8 = virtualinvoke r3.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r4, "Array", $r7);

        r9 = $r8;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r8, "length", $r2);

        goto label3;

     label2:
        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = $r2;

        r9 = virtualinvoke r3.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object[])>(r4, "Array", $r5);

     label3:
        i5 = 0;

        i6 = 0;

        i7 = 0;

     label4:
        if i6 == $i3 goto label7;

        if i5 == i4 goto label5;

        $i2 = r1[i5];

        if $i2 != i6 goto label5;

        i5 = i5 + 1;

        goto label6;

     label5:
        $r6 = r0[i7];

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,int,java.lang.Object)>(r9, i6, $r6);

        i7 = i7 + 1;

     label6:
        i6 = i6 + 1;

        goto label4;

     label7:
        return r9;
    }

    public static org.mozilla.javascript.Scriptable newObjectLiteral(java.lang.Object[], java.lang.Object[], org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] r3, r5;
        org.mozilla.javascript.Context r0;
        java.lang.Integer $r7;
        org.mozilla.javascript.Scriptable r1, $r2;
        int i0, $i1, i2;
        java.lang.Object r4, r6;
        java.lang.String $r8;
        boolean $z0;

        r3 := @parameter0: java.lang.Object[];

        r5 := @parameter1: java.lang.Object[];

        r0 := @parameter2: org.mozilla.javascript.Context;

        r1 := @parameter3: org.mozilla.javascript.Scriptable;

        $r2 = virtualinvoke r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable newObject(org.mozilla.javascript.Scriptable)>(r1);

        i2 = 0;

        i0 = lengthof r3;

     label1:
        if i2 == i0 goto label4;

        r4 = r3[i2];

        r6 = r5[i2];

        $z0 = r4 instanceof java.lang.String;

        if $z0 == 0 goto label2;

        $r8 = (java.lang.String) r4;

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,java.lang.String,java.lang.Object)>($r2, $r8, r6);

        goto label3;

     label2:
        $r7 = (java.lang.Integer) r4;

        $i1 = virtualinvoke $r7.<java.lang.Integer: int intValue()>();

        staticinvoke <org.mozilla.javascript.ScriptableObject: void putProperty(org.mozilla.javascript.Scriptable,int,java.lang.Object)>($r2, $i1, r6);

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        return $r2;
    }

    public static boolean isArrayObject(java.lang.Object)
    {
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.mozilla.javascript.NativeArray;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof org.mozilla.javascript.Arguments;

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public static java.lang.Object[] getArrayElements(org.mozilla.javascript.Scriptable)
    {
        java.lang.Object[] r2, $r5;
        org.mozilla.javascript.Context $r0;
        long $l0;
        java.lang.IllegalArgumentException $r8;
        org.mozilla.javascript.Scriptable r1;
        byte $b1;
        int i2, $i3, i4, $i5;
        java.lang.Object $r3, $r4, $r7;

        r1 := @parameter0: org.mozilla.javascript.Scriptable;

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getContext()>();

        $l0 = staticinvoke <org.mozilla.javascript.NativeArray: long getLengthProperty(org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable)>($r0, r1);

        $b1 = $l0 cmp 2147483647L;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label1;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label1:
        i2 = (int) $l0;

        if i2 != 0 goto label2;

        $r5 = <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs>;

        return $r5;

     label2:
        r2 = newarray (java.lang.Object)[i2];

        i4 = 0;

     label3:
        if i4 >= i2 goto label6;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptableObject: java.lang.Object getProperty(org.mozilla.javascript.Scriptable,int)>(r1, i4);

        $i3 = i4;

        $r4 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if $r3 != $r4 goto label4;

        $r7 = <org.mozilla.javascript.Undefined: java.lang.Object instance>;

        goto label5;

     label4:
        $r7 = $r3;

     label5:
        r2[$i3] = $r7;

        i4 = i4 + 1;

        goto label3;

     label6:
        return r2;
    }

    static void checkDeprecated(org.mozilla.javascript.Context, java.lang.String)
    {
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.EvaluatorException $r3;
        int $i0;
        java.lang.String r1, $r2;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Context: int getLanguageVersion()>();

        if $i0 >= 140 goto label1;

        if $i0 != 0 goto label3;

     label1:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage1(java.lang.String,java.lang.Object)>("msg.deprec.ctor", r1);

        if $i0 != 0 goto label2;

        staticinvoke <org.mozilla.javascript.Context: void reportWarning(java.lang.String)>($r2);

        goto label3;

     label2:
        $r3 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError(java.lang.String)>($r2);

        throw $r3;

     label3:
        return;
    }

    public static java.lang.String getMessage0(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r0, null);

        return $r1;
    }

    public static java.lang.String getMessage1(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object r1;
        java.lang.String r2, $r3;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r2, $r0);

        return $r3;
    }

    public static java.lang.String getMessage2(java.lang.String, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object r1, r2;
        java.lang.String r3, $r4;

        r3 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        $r0 = newarray (java.lang.Object)[2];

        $r0[0] = r1;

        $r0[1] = r2;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r3, $r0);

        return $r4;
    }

    public static java.lang.String getMessage3(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object r1, r2, r3;
        java.lang.String r4, $r5;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        $r0 = newarray (java.lang.Object)[3];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r4, $r0);

        return $r5;
    }

    public static java.lang.String getMessage4(java.lang.String, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] $r0;
        java.lang.Object r1, r2, r3, r4;
        java.lang.String r5, $r6;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.Object;

        r4 := @parameter4: java.lang.Object;

        $r0 = newarray (java.lang.Object)[4];

        $r0[0] = r1;

        $r0[1] = r2;

        $r0[2] = r3;

        $r0[3] = r4;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r5, $r0);

        return $r6;
    }

    public static java.lang.String getMessage(java.lang.String, java.lang.Object[])
    {
        java.lang.Object[] r5;
        org.mozilla.javascript.Context $r0;
        java.util.MissingResourceException $r7;
        java.lang.RuntimeException $r8;
        java.text.MessageFormat $r4;
        java.util.ResourceBundle $r1;
        java.lang.StringBuffer $r9, $r10, $r11;
        java.util.Locale $r13;
        java.lang.String r2, $r3, $r6, $r12;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.Object[];

        $r0 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.Context getCurrentContext()>();

        if $r0 == null goto label1;

        $r13 = virtualinvoke $r0.<org.mozilla.javascript.Context: java.util.Locale getLocale()>();

        goto label2;

     label1:
        $r13 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

     label2:
        $r1 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.mozilla.javascript.resources.Messages", $r13);

     label3:
        $r3 = virtualinvoke $r1.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(r2);

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("no message resource found for message property ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r8;

     label6:
        $r4 = new java.text.MessageFormat;

        specialinvoke $r4.<java.text.MessageFormat: void <init>(java.lang.String)>($r3);

        $r6 = virtualinvoke $r4.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>(r5);

        return $r6;

        catch java.util.MissingResourceException from label3 to label4 with label5;
    }

    public static org.mozilla.javascript.EcmaError constructError(java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r4;
        int[] r0;
        int $i0;
        java.lang.String $r1, r2, r3;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r0 = newarray (int)[1];

        $r1 = staticinvoke <org.mozilla.javascript.Context: java.lang.String getSourcePositionFromStack(int[])>(r0);

        $i0 = r0[0];

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>(r2, r3, $r1, $i0, null, 0);

        return $r4;
    }

    public static org.mozilla.javascript.EcmaError constructError(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, int)
    {
        org.mozilla.javascript.EcmaError $r0;
        int i0, i1;
        java.lang.String r1, r2, r3, r4;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        i0 := @parameter3: int;

        r4 := @parameter4: java.lang.String;

        i1 := @parameter5: int;

        $r0 = new org.mozilla.javascript.EcmaError;

        specialinvoke $r0.<org.mozilla.javascript.EcmaError: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,int)>(r1, r2, r3, i0, r4, i1);

        return $r0;
    }

    public static org.mozilla.javascript.EcmaError typeError(java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String)>("TypeError", r0);

        return $r1;
    }

    public static org.mozilla.javascript.EcmaError typeError0(java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage0(java.lang.String)>(r0);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r1);

        return $r2;
    }

    public static org.mozilla.javascript.EcmaError typeError1(java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r3;
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage1(java.lang.String,java.lang.Object)>(r0, r1);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r2);

        return $r3;
    }

    public static org.mozilla.javascript.EcmaError typeError2(java.lang.String, java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r4;
        java.lang.String r0, r1, r2, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage2(java.lang.String,java.lang.Object,java.lang.Object)>(r0, r1, r2);

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r3);

        return $r4;
    }

    public static org.mozilla.javascript.EcmaError typeError3(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r5;
        java.lang.String r0, r1, r2, r3, $r4;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage3(java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)>(r0, r1, r2, r3);

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError(java.lang.String)>($r4);

        return $r5;
    }

    public static java.lang.RuntimeException undefReadError(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r3;
        java.lang.Object r0, r1;
        java.lang.String $r2, $r4;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = "null";

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String)>("msg.undef.prop.read", $r2, $r4);

        return $r3;
    }

    public static java.lang.RuntimeException undefCallError(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r3;
        java.lang.Object r0, r1;
        java.lang.String $r2, $r4;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = "null";

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r1);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String)>("msg.undef.method.call", $r2, $r4);

        return $r3;
    }

    public static java.lang.RuntimeException undefWriteError(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r5;
        java.lang.Object r0, r2, r3;
        java.lang.String r1, $r4, $r6, $r7;
        boolean $z0;

        r3 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        r2 := @parameter2: java.lang.Object;

        if r0 != null goto label1;

        $r6 = "null";

        goto label2;

     label1:
        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        r1 = $r6;

        $z0 = r2 instanceof org.mozilla.javascript.Scriptable;

        if $z0 == 0 goto label3;

        $r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        goto label4;

     label3:
        $r7 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r2);

     label4:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r3);

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError3(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("msg.undef.prop.write", $r4, r1, $r7);

        return $r5;
    }

    public static java.lang.RuntimeException notFoundError(org.mozilla.javascript.Scriptable, java.lang.String)
    {
        org.mozilla.javascript.EcmaError $r2;
        org.mozilla.javascript.Scriptable r3;
        java.lang.String r0, $r1;

        r3 := @parameter0: org.mozilla.javascript.Scriptable;

        r0 := @parameter1: java.lang.String;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String getMessage1(java.lang.String,java.lang.Object)>("msg.is.not.defined", r0);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError constructError(java.lang.String,java.lang.String)>("ReferenceError", $r1);

        throw $r2;
    }

    public static java.lang.RuntimeException notFunctionError(java.lang.Object)
    {
        java.lang.Object r0;
        java.lang.RuntimeException $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notFunctionError(java.lang.Object,java.lang.Object)>(r0, r0);

        return $r1;
    }

    public static java.lang.RuntimeException notFunctionError(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r4, $r6;
        java.lang.Object r0, r1, $r2;
        java.lang.Class $r3;
        java.lang.String $r5, $r7, $r8;

        r1 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r7 = "null";

        goto label2;

     label1:
        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

     label2:
        $r2 = <org.mozilla.javascript.Scriptable: java.lang.Object NOT_FOUND>;

        if r1 != $r2 goto label3;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.function.not.found", $r7);

        return $r6;

     label3:
        $r5 = $r7;

        if r1 != null goto label4;

        $r8 = "null";

        goto label5;

     label4:
        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

     label5:
        $r4 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError2(java.lang.String,java.lang.String,java.lang.String)>("msg.isnt.function", $r5, $r8);

        return $r4;
    }

    private static java.lang.RuntimeException notXmlError(java.lang.Object)
    {
        org.mozilla.javascript.EcmaError $r2;
        java.lang.Object r0;
        java.lang.String $r1;

        r0 := @parameter0: java.lang.Object;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String toString(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.EcmaError typeError1(java.lang.String,java.lang.String)>("msg.isnt.xml.object", $r1);

        throw $r2;
    }

    private static void warnAboutNonJSObject(java.lang.Object)
    {
        java.io.PrintStream $r10;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r7, $r8;
        java.lang.Object r2;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;

        r2 := @parameter0: java.lang.Object;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("RHINO USAGE WARNING: Missed Context.javaToJS() conversion:\nRhino runtime detected object ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of class ");

        $r5 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" where it expected String, Number, Boolean or Scriptable instance. Please check your code for missing Context.javaToJS() call.");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.mozilla.javascript.Context: void reportWarning(java.lang.String)>($r9);

        $r10 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }

    public static org.mozilla.javascript.RegExpProxy getRegExpProxy(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.RegExpProxy $r1;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        $r1 = virtualinvoke r0.<org.mozilla.javascript.Context: org.mozilla.javascript.RegExpProxy getRegExpProxy()>();

        return $r1;
    }

    public static void setRegExpProxy(org.mozilla.javascript.Context, org.mozilla.javascript.RegExpProxy)
    {
        org.mozilla.javascript.RegExpProxy r0;
        org.mozilla.javascript.Context r1;
        java.lang.IllegalArgumentException $r2;

        r1 := @parameter0: org.mozilla.javascript.Context;

        r0 := @parameter1: org.mozilla.javascript.RegExpProxy;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label1:
        r1.<org.mozilla.javascript.Context: org.mozilla.javascript.RegExpProxy regExpProxy> = r0;

        return;
    }

    public static org.mozilla.javascript.RegExpProxy checkRegExpProxy(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.RegExpProxy $r1;
        org.mozilla.javascript.Context r0;
        org.mozilla.javascript.EvaluatorException $r2;

        r0 := @parameter0: org.mozilla.javascript.Context;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.RegExpProxy getRegExpProxy(org.mozilla.javascript.Context)>(r0);

        if $r1 != null goto label1;

        $r2 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError0(java.lang.String)>("msg.no.regexp");

        throw $r2;

     label1:
        return $r1;
    }

    private static org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context)
    {
        java.lang.IllegalStateException $r4, $r5;
        org.mozilla.javascript.xml.XMLLib $r3, r6;
        org.mozilla.javascript.Scriptable $r1, $r2;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        $r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        if $r1 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>()>();

        throw $r5;

     label1:
        r6 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.xml.XMLLib cachedXMLLib>;

        if r6 != null goto label3;

        $r2 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable topCallScope>;

        $r3 = staticinvoke <org.mozilla.javascript.xml.XMLLib: org.mozilla.javascript.xml.XMLLib extractFromScope(org.mozilla.javascript.Scriptable)>($r2);

        r6 = $r3;

        if $r3 != null goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>()>();

        throw $r4;

     label2:
        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.xml.XMLLib cachedXMLLib> = $r3;

     label3:
        return r6;
    }

    public static java.lang.String escapeAttributeValue(java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xml.XMLLib $r1;
        org.mozilla.javascript.Context r0;
        java.lang.Object r2;
        java.lang.String $r3;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.mozilla.javascript.Context;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context)>(r0);

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.xml.XMLLib: java.lang.String escapeAttributeValue(java.lang.Object)>(r2);

        return $r3;
    }

    public static java.lang.String escapeTextValue(java.lang.Object, org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.xml.XMLLib $r1;
        org.mozilla.javascript.Context r0;
        java.lang.Object r2;
        java.lang.String $r3;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.mozilla.javascript.Context;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context)>(r0);

        $r3 = virtualinvoke $r1.<org.mozilla.javascript.xml.XMLLib: java.lang.String escapeTextValue(java.lang.Object)>(r2);

        return $r3;
    }

    public static org.mozilla.javascript.Ref memberRef(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context, int)
    {
        org.mozilla.javascript.Ref $r4;
        org.mozilla.javascript.xml.XMLObject r1;
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r5;
        int i0;
        java.lang.Object r0, r3;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.mozilla.javascript.Context;

        i0 := @parameter3: int;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 != 0 goto label1;

        $r5 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notXmlError(java.lang.Object)>(r0);

        throw $r5;

     label1:
        r1 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r4 = virtualinvoke r1.<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,int)>(r2, r3, i0);

        return $r4;
    }

    public static org.mozilla.javascript.Ref memberRef(java.lang.Object, java.lang.Object, java.lang.Object, org.mozilla.javascript.Context, int)
    {
        org.mozilla.javascript.Ref $r5;
        org.mozilla.javascript.xml.XMLObject r1;
        org.mozilla.javascript.Context r2;
        java.lang.RuntimeException $r6;
        int i0;
        java.lang.Object r0, r3, r4;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        r2 := @parameter3: org.mozilla.javascript.Context;

        i0 := @parameter4: int;

        $z0 = r0 instanceof org.mozilla.javascript.xml.XMLObject;

        if $z0 != 0 goto label1;

        $r6 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.RuntimeException notXmlError(java.lang.Object)>(r0);

        throw $r6;

     label1:
        r1 = (org.mozilla.javascript.xml.XMLObject) r0;

        $r5 = virtualinvoke r1.<org.mozilla.javascript.xml.XMLObject: org.mozilla.javascript.Ref memberRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,int)>(r2, r3, r4, i0);

        return $r5;
    }

    public static org.mozilla.javascript.Ref nameRef(java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, int)
    {
        org.mozilla.javascript.xml.XMLLib $r1;
        org.mozilla.javascript.Scriptable r3;
        org.mozilla.javascript.Ref $r4;
        org.mozilla.javascript.Context r0;
        int i0;
        java.lang.Object r2;

        r2 := @parameter0: java.lang.Object;

        r0 := @parameter1: org.mozilla.javascript.Context;

        r3 := @parameter2: org.mozilla.javascript.Scriptable;

        i0 := @parameter3: int;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context)>(r0);

        $r4 = virtualinvoke $r1.<org.mozilla.javascript.xml.XMLLib: org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,org.mozilla.javascript.Scriptable,int)>(r0, r2, r3, i0);

        return $r4;
    }

    public static org.mozilla.javascript.Ref nameRef(java.lang.Object, java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable, int)
    {
        org.mozilla.javascript.xml.XMLLib $r1;
        org.mozilla.javascript.Scriptable r4;
        org.mozilla.javascript.Ref $r5;
        org.mozilla.javascript.Context r0;
        int i0;
        java.lang.Object r2, r3;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r0 := @parameter2: org.mozilla.javascript.Context;

        r4 := @parameter3: org.mozilla.javascript.Scriptable;

        i0 := @parameter4: int;

        $r1 = staticinvoke <org.mozilla.javascript.ScriptRuntime: org.mozilla.javascript.xml.XMLLib currentXMLLib(org.mozilla.javascript.Context)>(r0);

        $r5 = virtualinvoke $r1.<org.mozilla.javascript.xml.XMLLib: org.mozilla.javascript.Ref nameRef(org.mozilla.javascript.Context,java.lang.Object,java.lang.Object,org.mozilla.javascript.Scriptable,int)>(r0, r2, r3, r4, i0);

        return $r5;
    }

    private static void storeIndexResult(org.mozilla.javascript.Context, int)
    {
        int i0;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        i0 := @parameter1: int;

        r0.<org.mozilla.javascript.Context: int scratchIndex> = i0;

        return;
    }

    static int lastIndexResult(org.mozilla.javascript.Context)
    {
        int $i0;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        $i0 = r0.<org.mozilla.javascript.Context: int scratchIndex>;

        return $i0;
    }

    public static void storeUint32Result(org.mozilla.javascript.Context, long)
    {
        byte $b2;
        org.mozilla.javascript.Context r0;
        long l0, $l1;
        java.lang.IllegalArgumentException $r1;

        r0 := @parameter0: org.mozilla.javascript.Context;

        l0 := @parameter1: long;

        $l1 = l0 >>> 32;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r1;

     label1:
        r0.<org.mozilla.javascript.Context: long scratchUint32> = l0;

        return;
    }

    public static long lastUint32Result(org.mozilla.javascript.Context)
    {
        java.lang.IllegalStateException $r1;
        org.mozilla.javascript.Context r0;
        byte $b2;
        long l0, $l1;

        r0 := @parameter0: org.mozilla.javascript.Context;

        l0 = r0.<org.mozilla.javascript.Context: long scratchUint32>;

        $l1 = l0 >>> 32;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label1:
        return l0;
    }

    private static void storeScriptable(org.mozilla.javascript.Context, org.mozilla.javascript.Scriptable)
    {
        java.lang.IllegalStateException $r3;
        org.mozilla.javascript.Scriptable $r1, r2;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r2 := @parameter1: org.mozilla.javascript.Scriptable;

        $r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable scratchScriptable>;

        if $r1 == null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable scratchScriptable> = r2;

        return;
    }

    public static org.mozilla.javascript.Scriptable lastStoredScriptable(org.mozilla.javascript.Context)
    {
        org.mozilla.javascript.Scriptable r1;
        org.mozilla.javascript.Context r0;

        r0 := @parameter0: org.mozilla.javascript.Context;

        r1 = r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable scratchScriptable>;

        r0.<org.mozilla.javascript.Context: org.mozilla.javascript.Scriptable scratchScriptable> = null;

        return r1;
    }

    static java.lang.String makeUrlForGeneratedScript(boolean, java.lang.String, int)
    {
        java.lang.StringBuffer $r0, $r2, $r3, $r4, $r5, $r7, $r8, $r9, $r10, $r11;
        int i0;
        java.lang.String r1, $r6, $r12;
        boolean z0;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        if z0 == 0 goto label1;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(eval)");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;

     label1:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(Function)");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    static boolean isGeneratedScript(java.lang.String)
    {
        int $i0, $i1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("(eval)");

        if $i0 >= 0 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>("(Function)");

        if $i1 < 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private static java.lang.RuntimeException errorWithClassName(java.lang.String, java.lang.Object)
    {
        org.mozilla.javascript.EvaluatorException $r4;
        java.lang.Object r1;
        java.lang.Class $r2;
        java.lang.String r0, $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = staticinvoke <org.mozilla.javascript.Context: org.mozilla.javascript.EvaluatorException reportRuntimeError1(java.lang.String,java.lang.Object)>(r0, $r3);

        return $r4;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r21;
        java.lang.Double $r20;
        java.lang.String[] $r18, $r22;
        double $d0, $d1, $d2;
        java.lang.Class $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;
        java.lang.Object $r19;

        <org.mozilla.javascript.ScriptRuntime: java.lang.String DEFAULT_NS_TAG> = "__default_namespace__";

        <org.mozilla.javascript.ScriptRuntime: boolean MSJVM_BUG_WORKAROUNDS> = 1;

        <org.mozilla.javascript.ScriptRuntime: java.lang.String XML_INIT_CLASS> = "org.mozilla.javascript.xmlimpl.XMLLibImpl";

        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Boolean");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class BooleanClass> = $r0;

        $r1 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Byte");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ByteClass> = $r1;

        $r2 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Character");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class CharacterClass> = $r2;

        $r3 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Class");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ClassClass> = $r3;

        $r4 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Double");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class DoubleClass> = $r4;

        $r5 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Float");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class FloatClass> = $r5;

        $r6 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Integer");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class IntegerClass> = $r6;

        $r7 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Long");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class LongClass> = $r7;

        $r8 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Number");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class NumberClass> = $r8;

        $r9 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Object");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ObjectClass> = $r9;

        $r10 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Short");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ShortClass> = $r10;

        $r11 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.String");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class StringClass> = $r11;

        $r12 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.util.Date");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class DateClass> = $r12;

        $r13 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.Context");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextClass> = $r13;

        $r14 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.ContextFactory");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextFactoryClass> = $r14;

        $r15 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.Function");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class FunctionClass> = $r15;

        $r16 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.Scriptable");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableClass> = $r16;

        $r17 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("org.mozilla.javascript.ScriptableObject");

        <org.mozilla.javascript.ScriptRuntime: java.lang.Class ScriptableObjectClass> = $r17;

        $r18 = newarray (java.lang.String)[20];

        $r18[0] = "RegExp";

        $r18[1] = "org.mozilla.javascript.regexp.NativeRegExp";

        $r18[2] = "Packages";

        $r18[3] = "org.mozilla.javascript.NativeJavaTopPackage";

        $r18[4] = "java";

        $r18[5] = "org.mozilla.javascript.NativeJavaTopPackage";

        $r18[6] = "getClass";

        $r18[7] = "org.mozilla.javascript.NativeJavaTopPackage";

        $r18[8] = "JavaAdapter";

        $r18[9] = "org.mozilla.javascript.JavaAdapter";

        $r18[10] = "JavaImporter";

        $r18[11] = "org.mozilla.javascript.ImporterTopLevel";

        $r18[12] = "XML";

        $r18[13] = "org.mozilla.javascript.xmlimpl.XMLLibImpl";

        $r18[14] = "XMLList";

        $r18[15] = "org.mozilla.javascript.xmlimpl.XMLLibImpl";

        $r18[16] = "Namespace";

        $r18[17] = "org.mozilla.javascript.xmlimpl.XMLLibImpl";

        $r18[18] = "QName";

        $r18[19] = "org.mozilla.javascript.xmlimpl.XMLLibImpl";

        <org.mozilla.javascript.ScriptRuntime: java.lang.String[] lazilyNames> = $r18;

        $r19 = new java.lang.Object;

        specialinvoke $r19.<java.lang.Object: void <init>()>();

        <org.mozilla.javascript.ScriptRuntime: java.lang.Object LIBRARY_SCOPE_KEY> = $r19;

        $d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(9221120237041090560L);

        <org.mozilla.javascript.ScriptRuntime: double NaN> = $d0;

        $d1 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(-9223372036854775808L);

        <org.mozilla.javascript.ScriptRuntime: double negativeZero> = $d1;

        $r20 = new java.lang.Double;

        $d2 = <org.mozilla.javascript.ScriptRuntime: double NaN>;

        specialinvoke $r20.<java.lang.Double: void <init>(double)>($d2);

        <org.mozilla.javascript.ScriptRuntime: java.lang.Double NaNobj> = $r20;

        $r21 = newarray (java.lang.Object)[0];

        <org.mozilla.javascript.ScriptRuntime: java.lang.Object[] emptyArgs> = $r21;

        $r22 = newarray (java.lang.String)[0];

        <org.mozilla.javascript.ScriptRuntime: java.lang.String[] emptyStrings> = $r22;

        return;
    }
}
