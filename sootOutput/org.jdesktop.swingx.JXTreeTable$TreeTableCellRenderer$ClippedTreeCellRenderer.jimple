class org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer extends org.jdesktop.swingx.tree.DefaultXTreeCellRenderer implements org.jdesktop.swingx.renderer.StringValue
{
    private boolean inpainting;
    private java.lang.String shortText;
    private final java.awt.Rectangle iconRect;
    private final java.awt.Rectangle textRect;
    private final java.awt.Rectangle itemRect;
    final org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0;

    private void <init>(org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r0;
        java.awt.Rectangle $r2, $r3, $r4;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer;

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0> = r1;

        specialinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void <init>()>();

        $r2 = new java.awt.Rectangle;

        specialinvoke $r2.<java.awt.Rectangle: void <init>()>();

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle iconRect> = $r2;

        $r3 = new java.awt.Rectangle;

        specialinvoke $r3.<java.awt.Rectangle: void <init>()>();

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle textRect> = $r3;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>()>();

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle itemRect> = $r4;

        return;
    }

    public void paint(java.awt.Graphics)
    {
        java.lang.Throwable $r11;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r0;
        java.awt.Rectangle $r5, $r6, $r7, $r8;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r9, $r10;
        javax.swing.Icon $r4;
        java.awt.FontMetrics $r3;
        java.awt.Graphics r2;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = specialinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.lang.String getText()>();

        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: javax.swing.Icon getIcon()>();

        $i0 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: int getVerticalAlignment()>();

        $i1 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: int getHorizontalAlignment()>();

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: int getVerticalTextPosition()>();

        $i3 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: int getHorizontalTextPosition()>();

        $r5 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle itemRect>;

        $r6 = specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle getItemRect(java.awt.Rectangle)>($r5);

        $r7 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle iconRect>;

        $r8 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle textRect>;

        $i4 = virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: int getIconTextGap()>();

        $r9 = staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>(r0, $r3, $r1, $r4, $i0, $i1, $i2, $i3, $r6, $r7, $r8, $i4);

        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.lang.String shortText> = $r9;

     label1:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: boolean inpainting> = 1;

        $r10 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.lang.String shortText>;

        virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: void setText(java.lang.String)>($r10);

        specialinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void paint(java.awt.Graphics)>(r2);

     label2:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: boolean inpainting> = 0;

        virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: void setText(java.lang.String)>($r1);

        goto label5;

     label3:
        $r11 := @caughtexception;

     label4:
        r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: boolean inpainting> = 0;

        virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: void setText(java.lang.String)>($r1);

        throw $r11;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private java.awt.Rectangle getItemRect(java.awt.Rectangle)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r0;
        java.awt.Rectangle r1;
        int $i0, $i1, $i2;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r2;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r1 := @parameter0: java.awt.Rectangle;

        virtualinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.awt.Rectangle getBounds(java.awt.Rectangle)>(r1);

        $r2 = r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $i0 = staticinvoke <org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: int access$1100(org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer)>($r2);

        $i1 = r1.<java.awt.Rectangle: int x>;

        $i2 = $i0 - $i1;

        r1.<java.awt.Rectangle: int width> = $i2;

        return r1;
    }

    public java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r0;
        javax.swing.JTree r1;
        java.awt.Component $r4;
        int i0;
        java.lang.Object r2, $r3;
        boolean z0, z1, z2, z3;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r1 := @parameter0: javax.swing.JTree;

        r2 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        z3 := @parameter6: boolean;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.lang.Object getHierarchicalTableValue(java.lang.Object)>(r2);

        $r4 = specialinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.awt.Component getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)>(r1, $r3, z0, z1, z2, i0, z3);

        return $r4;
    }

    private java.lang.Object getHierarchicalTableValue(java.lang.Object)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r1;
        org.jdesktop.swingx.treetable.TreeTableModel $r6, $r9;
        org.jdesktop.swingx.JXTreeTable $r3, $r5, $r8;
        int $i0;
        java.lang.Object r0, r10, r11;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer $r2, $r4, $r7;

        r1 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r0 := @parameter0: java.lang.Object;

        r10 = r0;

        $r2 = r1.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r3 = $r2.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: org.jdesktop.swingx.JXTreeTable treeTable>;

        if $r3 == null goto label2;

        $r4 = r1.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r5 = $r4.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: org.jdesktop.swingx.JXTreeTable treeTable>;

        $r6 = virtualinvoke $r5.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        $i0 = interfaceinvoke $r6.<org.jdesktop.swingx.treetable.TreeTableModel: int getHierarchicalColumn()>();

        r11 = null;

        if $i0 < 0 goto label1;

        $r7 = r1.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer this$0>;

        $r8 = $r7.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer: org.jdesktop.swingx.JXTreeTable treeTable>;

        $r9 = virtualinvoke $r8.<org.jdesktop.swingx.JXTreeTable: org.jdesktop.swingx.treetable.TreeTableModel getTreeTableModel()>();

        r11 = interfaceinvoke $r9.<org.jdesktop.swingx.treetable.TreeTableModel: java.lang.Object getValueAt(java.lang.Object,int)>(r0, $i0);

     label1:
        r10 = r11;

     label2:
        return r10;
    }

    public java.lang.String getString(java.lang.Object)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r0;
        org.jdesktop.swingx.renderer.StringValue $r2;
        java.lang.Object r1, $r3;
        java.lang.String $r4;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r1 := @parameter0: java.lang.Object;

        $r2 = <org.jdesktop.swingx.renderer.StringValues: org.jdesktop.swingx.renderer.StringValue TO_STRING>;

        $r3 = specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: java.lang.Object getHierarchicalTableValue(java.lang.Object)>(r1);

        $r4 = interfaceinvoke $r2.<org.jdesktop.swingx.renderer.StringValue: java.lang.String getString(java.lang.Object)>($r3);

        return $r4;
    }

    void <init>(org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer, org.jdesktop.swingx.JXTreeTable$1)
    {
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer r0;
        org.jdesktop.swingx.JXTreeTable$1 r2;
        org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer r1;

        r0 := @this: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer;

        r1 := @parameter0: org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer;

        r2 := @parameter1: org.jdesktop.swingx.JXTreeTable$1;

        specialinvoke r0.<org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer$ClippedTreeCellRenderer: void <init>(org.jdesktop.swingx.JXTreeTable$TreeTableCellRenderer)>(r1);

        return;
    }
}
