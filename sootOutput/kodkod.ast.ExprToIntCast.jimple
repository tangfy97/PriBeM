public final class kodkod.ast.ExprToIntCast extends kodkod.ast.IntExpression
{
    private final kodkod.ast.Expression expression;
    private final kodkod.ast.operator.ExprCastOperator op;

    void <init>(kodkod.ast.Expression, kodkod.ast.operator.ExprCastOperator)
    {
        kodkod.ast.operator.ExprCastOperator r2, $r3;
        kodkod.ast.Expression r1;
        java.lang.IllegalArgumentException $r4;
        kodkod.ast.ExprToIntCast r0;
        int $i0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8;
        java.lang.String $r9;

        r0 := @this: kodkod.ast.ExprToIntCast;

        r1 := @parameter0: kodkod.ast.Expression;

        r2 := @parameter1: kodkod.ast.operator.ExprCastOperator;

        specialinvoke r0.<kodkod.ast.IntExpression: void <init>()>();

        $i0 = virtualinvoke r1.<kodkod.ast.Expression: int arity()>();

        if $i0 <= 1 goto label1;

        $r3 = <kodkod.ast.operator.ExprCastOperator: kodkod.ast.operator.ExprCastOperator SUM>;

        if r2 != $r3 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>("cannot apply ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r4;

     label1:
        r0.<kodkod.ast.ExprToIntCast: kodkod.ast.Expression expression> = r1;

        r0.<kodkod.ast.ExprToIntCast: kodkod.ast.operator.ExprCastOperator op> = r2;

        return;
    }

    public kodkod.ast.Expression expression()
    {
        kodkod.ast.ExprToIntCast r0;
        kodkod.ast.Expression $r1;

        r0 := @this: kodkod.ast.ExprToIntCast;

        $r1 = r0.<kodkod.ast.ExprToIntCast: kodkod.ast.Expression expression>;

        return $r1;
    }

    public kodkod.ast.operator.ExprCastOperator op()
    {
        kodkod.ast.ExprToIntCast r0;
        kodkod.ast.operator.ExprCastOperator $r1;

        r0 := @this: kodkod.ast.ExprToIntCast;

        $r1 = r0.<kodkod.ast.ExprToIntCast: kodkod.ast.operator.ExprCastOperator op>;

        return $r1;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        kodkod.ast.ExprToIntCast r1;
        java.lang.Object $r2;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.ExprToIntCast;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.ExprToIntCast)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.ExprToIntCast r1;
        kodkod.ast.visitor.VoidVisitor r0;

        r1 := @this: kodkod.ast.ExprToIntCast;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.ExprToIntCast)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.operator.ExprCastOperator $r2;
        kodkod.ast.Expression $r5;
        kodkod.ast.ExprToIntCast r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r7, $r8;
        java.lang.String $r6, $r9;

        r1 := @this: kodkod.ast.ExprToIntCast;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<kodkod.ast.ExprToIntCast: kodkod.ast.operator.ExprCastOperator op>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r5 = r1.<kodkod.ast.ExprToIntCast: kodkod.ast.Expression expression>;

        $r6 = virtualinvoke $r5.<kodkod.ast.Expression: java.lang.String toString()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
