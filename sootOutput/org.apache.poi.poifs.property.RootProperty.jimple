public final class org.apache.poi.poifs.property.RootProperty extends org.apache.poi.poifs.property.DirectoryProperty
{
    private static final java.lang.String NAME;

    void <init>()
    {
        int $i1;
        org.apache.poi.poifs.property.RootProperty r0;

        r0 := @this: org.apache.poi.poifs.property.RootProperty;

        specialinvoke r0.<org.apache.poi.poifs.property.DirectoryProperty: void <init>(java.lang.String)>("Root Entry");

        virtualinvoke r0.<org.apache.poi.poifs.property.RootProperty: void setNodeColor(byte)>(1);

        virtualinvoke r0.<org.apache.poi.poifs.property.RootProperty: void setPropertyType(byte)>(5);

        $i1 = (int) -2;

        virtualinvoke r0.<org.apache.poi.poifs.property.RootProperty: void setStartBlock(int)>($i1);

        return;
    }

    protected void <init>(int, byte[], int)
    {
        byte[] r1;
        int i0, i1;
        org.apache.poi.poifs.property.RootProperty r0;

        r0 := @this: org.apache.poi.poifs.property.RootProperty;

        i0 := @parameter0: int;

        r1 := @parameter1: byte[];

        i1 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.poifs.property.DirectoryProperty: void <init>(int,byte[],int)>(i0, r1, i1);

        return;
    }

    public void setSize(int)
    {
        int i0, $i1;
        org.apache.poi.poifs.property.RootProperty r0;

        r0 := @this: org.apache.poi.poifs.property.RootProperty;

        i0 := @parameter0: int;

        $i1 = staticinvoke <org.apache.poi.poifs.storage.SmallDocumentBlock: int calcSize(int)>(i0);

        specialinvoke r0.<org.apache.poi.poifs.property.DirectoryProperty: void setSize(int)>($i1);

        return;
    }

    public java.lang.String getName()
    {
        org.apache.poi.poifs.property.RootProperty r0;

        r0 := @this: org.apache.poi.poifs.property.RootProperty;

        return "Root Entry";
    }

    public static void <clinit>()
    {
        <org.apache.poi.poifs.property.RootProperty: java.lang.String NAME> = "Root Entry";

        return;
    }
}
