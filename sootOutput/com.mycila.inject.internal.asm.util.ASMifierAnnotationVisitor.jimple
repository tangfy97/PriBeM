public class com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor extends com.mycila.inject.internal.asm.util.AbstractVisitor implements com.mycila.inject.internal.asm.AnnotationVisitor
{
    protected final int id;

    public void <init>(int)
    {
        int i0;
        com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor r0;

        r0 := @this: com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        i0 := @parameter0: int;

        specialinvoke r0.<com.mycila.inject.internal.asm.util.AbstractVisitor: void <init>()>();

        r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id> = i0;

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor r0;
        java.util.List $r12;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r11;
        int $i0;
        java.lang.Object r8;
        java.lang.String r5, $r13;

        r0 := @this: com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.Object;

        $r1 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av");

        $i0 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visit(");

        $r6 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r6, r5);

        $r7 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r9 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r11 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor r0;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r6, $r7, $r9, $r10, $r12, $r13, $r14;
        int $i0;
        java.lang.String r5, r8, r11, $r16;
        java.util.List $r15;

        r0 := @this: com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        r5 := @parameter0: java.lang.String;

        r8 := @parameter1: java.lang.String;

        r11 := @parameter2: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av");

        $i0 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitEnum(");

        $r6 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r6, r5);

        $r7 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r9 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r12, r11);

        $r13 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r15 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r14 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        return;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)
    {
        com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor r0, $r17;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r8, r11, $r16;
        java.util.List $r15, $r18, $r19, $r20;

        r0 := @this: com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        r8 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r3 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AnnotationVisitor av");

        $i0 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $i1 = $i0 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = av");

        $r6 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $i2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitAnnotation(");

        $r9 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r12 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r12, r11);

        $r13 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r15 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r14 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = new com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        $i3 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $i4 = $i3 + 1;

        specialinvoke $r17.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: void <init>(int)>($i4);

        $r18 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r19 = virtualinvoke $r17.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List getText()>();

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        $r20 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        interfaceinvoke $r20.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r17;
    }

    public com.mycila.inject.internal.asm.AnnotationVisitor visitArray(java.lang.String)
    {
        com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor r0, $r14;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r9, $r10, $r11;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String r8, $r13;
        java.util.List $r12, $r15, $r16, $r17;

        r0 := @this: com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        r8 := @parameter0: java.lang.String;

        $r1 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("{\n");

        $r3 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("AnnotationVisitor av");

        $i0 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $i1 = $i0 + 1;

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = av");

        $r6 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $i2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitArray(");

        $r9 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        staticinvoke <com.mycila.inject.internal.asm.util.ASMifierAbstractVisitor: void appendConstant(java.lang.StringBuffer,java.lang.Object)>($r9, r8);

        $r10 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(");\n");

        $r12 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r11 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r12.<java.util.List: boolean add(java.lang.Object)>($r13);

        $r14 = new com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        $i3 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $i4 = $i3 + 1;

        specialinvoke $r14.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: void <init>(int)>($i4);

        $r15 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r16 = virtualinvoke $r14.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List getText()>();

        interfaceinvoke $r15.<java.util.List: boolean add(java.lang.Object)>($r16);

        $r17 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>("}\n");

        return $r14;
    }

    public void visitEnd()
    {
        com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor r0;
        java.util.List $r6;
        java.lang.StringBuffer $r1, $r2, $r3, $r4, $r5;
        int $i0;
        java.lang.String $r7;

        r0 := @this: com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor;

        $r1 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        virtualinvoke $r1.<java.lang.StringBuffer: void setLength(int)>(0);

        $r2 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("av");

        $i0 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: int id>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".visitEnd();\n");

        $r6 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.util.List text>;

        $r5 = r0.<com.mycila.inject.internal.asm.util.ASMifierAnnotationVisitor: java.lang.StringBuffer buf>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>($r7);

        return;
    }
}
