public class org.apache.fontbox.util.ResourceLoader extends java.lang.Object
{

    private void <init>()
    {
        org.apache.fontbox.util.ResourceLoader r0;

        r0 := @this: org.apache.fontbox.util.ResourceLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.io.InputStream loadResource(java.lang.String) throws java.io.IOException
    {
        java.io.FileInputStream $r4;
        java.io.File $r2;
        java.lang.Class $r0;
        java.lang.ClassLoader $r1, $r5;
        java.lang.String r3;
        boolean $z0;
        java.io.InputStream r6;

        r3 := @parameter0: java.lang.String;

        $r0 = class "Lorg/apache/fontbox/util/ResourceLoader;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r6 = null;

        if $r1 == null goto label1;

        r6 = virtualinvoke $r1.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

     label1:
        if r6 != null goto label2;

        $r5 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();

        if $r5 == null goto label2;

        r6 = virtualinvoke $r5.<java.lang.ClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>(r3);

     label2:
        if r6 != null goto label3;

        $r2 = new java.io.File;

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r3);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label3;

        $r4 = new java.io.FileInputStream;

        specialinvoke $r4.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        r6 = $r4;

     label3:
        return r6;
    }

    public static java.util.Properties loadProperties(java.lang.String) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        java.util.Properties $r2, r4;
        java.lang.String r0;
        java.io.InputStream $r1, r5;

        r0 := @parameter0: java.lang.String;

        r4 = null;

        r5 = null;

     label1:
        $r1 = staticinvoke <org.apache.fontbox.util.ResourceLoader: java.io.InputStream loadResource(java.lang.String)>(r0);

        r5 = $r1;

        if $r1 == null goto label2;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        r4 = $r2;

        virtualinvoke $r2.<java.util.Properties: void load(java.io.InputStream)>($r1);

     label2:
        if $r1 == null goto label6;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        if r5 == null goto label5;

        virtualinvoke r5.<java.io.InputStream: void close()>();

     label5:
        throw $r3;

     label6:
        return r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public static java.util.Properties loadProperties(java.lang.String, java.util.Properties) throws java.io.IOException
    {
        java.lang.Throwable $r3;
        java.util.Properties r2;
        java.lang.String r0;
        java.io.InputStream $r1, r4;

        r0 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.Properties;

        r4 = null;

     label1:
        $r1 = staticinvoke <org.apache.fontbox.util.ResourceLoader: java.io.InputStream loadResource(java.lang.String)>(r0);

        r4 = $r1;

        if $r1 == null goto label2;

        virtualinvoke r2.<java.util.Properties: void load(java.io.InputStream)>($r1);

     label2:
        if $r1 == null goto label6;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        goto label6;

     label3:
        $r3 := @caughtexception;

     label4:
        if r4 == null goto label5;

        virtualinvoke r4.<java.io.InputStream: void close()>();

     label5:
        throw $r3;

     label6:
        return r2;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }
}
