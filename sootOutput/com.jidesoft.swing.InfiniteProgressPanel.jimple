public class com.jidesoft.swing.InfiniteProgressPanel extends javax.swing.JComponent implements java.awt.event.ActionListener
{
    private static final int DEFAULT_NUMBER_OF_BARS;
    private int numBars;
    private double dScale;
    private java.awt.geom.Area[] bars;
    private java.awt.Rectangle barsBounds;
    private java.awt.Rectangle barsScreenBounds;
    private java.awt.geom.AffineTransform centerAndScaleTransform;
    private javax.swing.Timer timer;
    private java.awt.Color[] colors;
    private int colorOffset;
    private boolean tempHide;

    public void <init>()
    {
        com.jidesoft.swing.InfiniteProgressPanel r0;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        specialinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void <init>(double)>(1.0);

        return;
    }

    public void <init>(double)
    {
        java.awt.Color $r6, $r9;
        java.awt.Rectangle $r4, $r12, $r13, $r14;
        java.awt.geom.Area r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        javax.swing.Timer $r1;
        double d0;
        com.jidesoft.swing.InfiniteProgressPanel r0;
        java.awt.geom.Area[] $r3, $r5, r15;
        java.awt.Color[] $r2, $r7, $r8, $r10;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        d0 := @parameter0: double;

        specialinvoke r0.<javax.swing.JComponent: void <init>()>();

        r0.<com.jidesoft.swing.InfiniteProgressPanel: double dScale> = 1.2;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsBounds> = null;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsScreenBounds> = null;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.AffineTransform centerAndScaleTransform> = null;

        $r1 = new javax.swing.Timer;

        specialinvoke $r1.<javax.swing.Timer: void <init>(int,java.awt.event.ActionListener)>(62, r0);

        r0.<com.jidesoft.swing.InfiniteProgressPanel: javax.swing.Timer timer> = $r1;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color[] colors> = null;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: int colorOffset> = 0;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: boolean tempHide> = 0;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: int numBars> = 12;

        $i0 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int numBars>;

        $i1 = $i0 * 2;

        $r2 = newarray (java.awt.Color)[$i1];

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color[] colors> = $r2;

        $i2 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int numBars>;

        $r3 = staticinvoke <com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area[] buildTicker(int,double)>($i2, d0);

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area[] bars> = $r3;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>()>();

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsBounds> = $r4;

        r15 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area[] bars>;

        i8 = lengthof r15;

        i9 = 0;

     label1:
        if i9 >= i8 goto label2;

        r11 = r15[i9];

        $r12 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsBounds>;

        $r13 = virtualinvoke r11.<java.awt.geom.Area: java.awt.Rectangle getBounds()>();

        $r14 = virtualinvoke $r12.<java.awt.Rectangle: java.awt.Rectangle union(java.awt.Rectangle)>($r13);

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsBounds> = $r14;

        i9 = i9 + 1;

        goto label1;

     label2:
        i10 = 0;

     label3:
        $r5 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area[] bars>;

        $i3 = lengthof $r5;

        if i10 >= $i3 goto label4;

        $i4 = i10 + 1;

        $i5 = 128 / $i4;

        i11 = 224 - $i5;

        $r7 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color[] colors>;

        $r6 = new java.awt.Color;

        specialinvoke $r6.<java.awt.Color: void <init>(int,int,int)>(i11, i11, i11);

        $r7[i10] = $r6;

        $r10 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color[] colors>;

        $i6 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int numBars>;

        $i7 = $i6 + i10;

        $r8 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color[] colors>;

        $r9 = $r8[i10];

        $r10[$i7] = $r9;

        i10 = i10 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void setOpaque(boolean)>(1);

        return;
    }

    public void actionPerformed(java.awt.event.ActionEvent)
    {
        java.awt.Rectangle $r1, $r2;
        com.jidesoft.swing.InfiniteProgressPanel r0;
        java.awt.event.ActionEvent r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        r3 := @parameter0: java.awt.event.ActionEvent;

        $i2 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int colorOffset>;

        $i0 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int numBars>;

        $i1 = $i0 - 1;

        if $i2 != $i1 goto label1;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: int colorOffset> = 0;

        goto label2;

     label1:
        $i3 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int colorOffset>;

        $i4 = $i3 + 1;

        r0.<com.jidesoft.swing.InfiniteProgressPanel: int colorOffset> = $i4;

     label2:
        $r1 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsScreenBounds>;

        if $r1 == null goto label3;

        $r2 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsScreenBounds>;

        virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void repaint(java.awt.Rectangle)>($r2);

        goto label4;

     label3:
        virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void repaint()>();

     label4:
        return;
    }

    public void setVisible(boolean)
    {
        com.jidesoft.swing.InfiniteProgressPanel r0;
        boolean z0;
        javax.swing.Timer $r1, $r2;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        z0 := @parameter0: boolean;

        virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void setOpaque(boolean)>(0);

        if z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.swing.InfiniteProgressPanel: javax.swing.Timer timer>;

        virtualinvoke $r2.<javax.swing.Timer: void start()>();

        goto label2;

     label1:
        $r1 = r0.<com.jidesoft.swing.InfiniteProgressPanel: javax.swing.Timer timer>;

        virtualinvoke $r1.<javax.swing.Timer: void stop()>();

     label2:
        specialinvoke r0.<javax.swing.JComponent: void setVisible(boolean)>(z0);

        return;
    }

    public void setBounds(int, int, int, int)
    {
        java.awt.Rectangle $r4, $r6, $r8;
        java.awt.geom.Area $r5;
        int i0, i1, i2, i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        java.awt.geom.AffineTransform $r1, $r2, $r3, $r7;
        com.jidesoft.swing.InfiniteProgressPanel r0;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        specialinvoke r0.<javax.swing.JComponent: void setBounds(int,int,int,int)>(i0, i1, i2, i3);

        $r1 = new java.awt.geom.AffineTransform;

        specialinvoke $r1.<java.awt.geom.AffineTransform: void <init>()>();

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.AffineTransform centerAndScaleTransform> = $r1;

        $r2 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.AffineTransform centerAndScaleTransform>;

        $i4 = virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: int getWidth()>();

        $d0 = (double) $i4;

        $d1 = $d0 / 2.0;

        $i5 = virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: int getHeight()>();

        $d2 = (double) $i5;

        $d3 = $d2 / 2.0;

        virtualinvoke $r2.<java.awt.geom.AffineTransform: void translate(double,double)>($d1, $d3);

        $r3 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.AffineTransform centerAndScaleTransform>;

        $d5 = r0.<com.jidesoft.swing.InfiniteProgressPanel: double dScale>;

        $d4 = r0.<com.jidesoft.swing.InfiniteProgressPanel: double dScale>;

        virtualinvoke $r3.<java.awt.geom.AffineTransform: void scale(double,double)>($d5, $d4);

        $r4 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsBounds>;

        if $r4 == null goto label1;

        $r5 = new java.awt.geom.Area;

        $r6 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsBounds>;

        specialinvoke $r5.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r6);

        $r7 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.AffineTransform centerAndScaleTransform>;

        virtualinvoke $r5.<java.awt.geom.Area: void transform(java.awt.geom.AffineTransform)>($r7);

        $r8 = virtualinvoke $r5.<java.awt.geom.Area: java.awt.Rectangle getBounds()>();

        r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Rectangle barsScreenBounds> = $r8;

     label1:
        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.awt.Color $r8, $r11;
        java.awt.Rectangle $r2;
        java.awt.geom.Area $r10;
        java.awt.Graphics2D $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        boolean $z0, $z1;
        java.awt.geom.AffineTransform $r6;
        com.jidesoft.swing.InfiniteProgressPanel r0;
        java.awt.geom.Area[] $r9, $r13;
        java.awt.Graphics r1, $r3;
        java.awt.RenderingHints$Key $r5;
        java.lang.Object $r4;
        java.awt.Color[] $r7;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        r1 := @parameter0: java.awt.Graphics;

        $z0 = r0.<com.jidesoft.swing.InfiniteProgressPanel: boolean tempHide>;

        if $z0 != 0 goto label3;

        $r2 = virtualinvoke r1.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        $z1 = virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: boolean isOpaque()>();

        if $z1 == 0 goto label1;

        $r11 = virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color getBackground()>();

        virtualinvoke r1.<java.awt.Graphics: void setColor(java.awt.Color)>($r11);

        $i5 = $r2.<java.awt.Rectangle: int x>;

        $i4 = $r2.<java.awt.Rectangle: int y>;

        $i3 = $r2.<java.awt.Rectangle: int width>;

        $i2 = $r2.<java.awt.Rectangle: int height>;

        virtualinvoke r1.<java.awt.Graphics: void fillRect(int,int,int,int)>($i5, $i4, $i3, $i2);

     label1:
        $r3 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create()>();

        $r12 = (java.awt.Graphics2D) $r3;

        $r5 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_ANTIALIASING>;

        $r4 = <java.awt.RenderingHints: java.lang.Object VALUE_ANTIALIAS_ON>;

        virtualinvoke $r12.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r5, $r4);

        $r6 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.AffineTransform centerAndScaleTransform>;

        virtualinvoke $r12.<java.awt.Graphics2D: void transform(java.awt.geom.AffineTransform)>($r6);

        i6 = 0;

     label2:
        $r13 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area[] bars>;

        $i7 = lengthof $r13;

        if i6 >= $i7 goto label3;

        $r7 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.Color[] colors>;

        $i0 = r0.<com.jidesoft.swing.InfiniteProgressPanel: int colorOffset>;

        $i1 = i6 + $i0;

        $r8 = $r7[$i1];

        virtualinvoke $r12.<java.awt.Graphics2D: void setColor(java.awt.Color)>($r8);

        $r9 = r0.<com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area[] bars>;

        $r10 = $r9[i6];

        virtualinvoke $r12.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r10);

        i6 = i6 + 1;

        goto label2;

     label3:
        return;
    }

    private static java.awt.geom.Area[] buildTicker(int, double)
    {
        java.awt.geom.Area $r2;
        java.awt.geom.Point2D$Double $r7;
        byte $b1;
        int i0, $i2, $i3;
        double $d0, d1, $d2, d3, $d4, $d5, $d6, $d7, $d8, $d9, d10;
        java.awt.geom.AffineTransform $r3, $r4, $r5, $r8;
        java.awt.geom.Area[] r0;

        i0 := @parameter0: int;

        d3 := @parameter1: double;

        r0 = newarray (java.awt.geom.Area)[i0];

        $r7 = new java.awt.geom.Point2D$Double;

        specialinvoke $r7.<java.awt.geom.Point2D$Double: void <init>(double,double)>(0.0, 0.0);

        $d0 = (double) i0;

        d1 = 6.283185307179586 / $d0;

        d10 = 0.0;

     label1:
        $d2 = (double) i0;

        $b1 = d10 cmpg $d2;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

        $r2 = staticinvoke <com.jidesoft.swing.InfiniteProgressPanel: java.awt.geom.Area buildPrimitive(double)>(d3);

        $d4 = virtualinvoke $r7.<java.awt.geom.Point2D$Double: double getX()>();

        $d5 = virtualinvoke $r7.<java.awt.geom.Point2D$Double: double getY()>();

        $r3 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d4, $d5);

        $r4 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>(2.0, -0.4);

        $d6 = neg d10;

        $d7 = $d6 * d1;

        $d8 = virtualinvoke $r7.<java.awt.geom.Point2D$Double: double getX()>();

        $d9 = virtualinvoke $r7.<java.awt.geom.Point2D$Double: double getY()>();

        $r5 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getRotateInstance(double,double,double)>($d7, $d8, $d9);

        $r8 = new java.awt.geom.AffineTransform;

        specialinvoke $r8.<java.awt.geom.AffineTransform: void <init>()>();

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r3);

        virtualinvoke $r8.<java.awt.geom.AffineTransform: void concatenate(java.awt.geom.AffineTransform)>($r4);

        virtualinvoke $r2.<java.awt.geom.Area: void transform(java.awt.geom.AffineTransform)>($r8);

        virtualinvoke $r2.<java.awt.geom.Area: void transform(java.awt.geom.AffineTransform)>($r5);

        $i2 = (int) d10;

        r0[$i2] = $r2;

        d10 = d10 + 1.0;

        goto label1;

     label2:
        return r0;
    }

    private static java.awt.geom.Area buildPrimitive(double)
    {
        java.awt.geom.Area $r1;
        java.awt.geom.Rectangle2D$Double $r0;
        double d0, $d1, $d2;

        d0 := @parameter0: double;

        $r0 = new java.awt.geom.Rectangle2D$Double;

        $d2 = 2.0 * d0;

        $d1 = 4.0 * d0;

        specialinvoke $r0.<java.awt.geom.Rectangle2D$Double: void <init>(double,double,double,double)>($d2, 0.0, $d1, d0);

        $r1 = new java.awt.geom.Area;

        specialinvoke $r1.<java.awt.geom.Area: void <init>(java.awt.Shape)>($r0);

        return $r1;
    }

    public void start()
    {
        com.jidesoft.swing.InfiniteProgressPanel r0;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void setVisible(boolean)>(1);

        return;
    }

    public void stop()
    {
        com.jidesoft.swing.InfiniteProgressPanel r0;

        r0 := @this: com.jidesoft.swing.InfiniteProgressPanel;

        virtualinvoke r0.<com.jidesoft.swing.InfiniteProgressPanel: void setVisible(boolean)>(0);

        return;
    }

    public static void <clinit>()
    {
        <com.jidesoft.swing.InfiniteProgressPanel: int DEFAULT_NUMBER_OF_BARS> = 12;

        return;
    }
}
