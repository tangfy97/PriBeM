public abstract class org.apache.http.impl.auth.RFC2617Scheme extends org.apache.http.impl.auth.AuthSchemeBase
{
    private final java.util.Map params;

    public void <init>(org.apache.http.auth.ChallengeState)
    {
        org.apache.http.auth.ChallengeState r1;
        java.util.HashMap $r2;
        org.apache.http.impl.auth.RFC2617Scheme r0;

        r0 := @this: org.apache.http.impl.auth.RFC2617Scheme;

        r1 := @parameter0: org.apache.http.auth.ChallengeState;

        specialinvoke r0.<org.apache.http.impl.auth.AuthSchemeBase: void <init>(org.apache.http.auth.ChallengeState)>(r1);

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map params> = $r2;

        return;
    }

    public void <init>()
    {
        org.apache.http.impl.auth.RFC2617Scheme r0;

        r0 := @this: org.apache.http.impl.auth.RFC2617Scheme;

        specialinvoke r0.<org.apache.http.impl.auth.RFC2617Scheme: void <init>(org.apache.http.auth.ChallengeState)>(null);

        return;
    }

    protected void parseChallenge(org.apache.http.util.CharArrayBuffer, int, int) throws org.apache.http.auth.MalformedChallengeException
    {
        org.apache.http.HeaderElement[] $r3;
        org.apache.http.impl.auth.RFC2617Scheme r4;
        org.apache.http.message.BasicHeaderValueParser r0;
        java.util.Map $r5, $r7;
        int i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r8, $r9;
        org.apache.http.auth.MalformedChallengeException $r10;
        org.apache.http.HeaderElement r6;
        org.apache.http.util.CharArrayBuffer r2;
        org.apache.http.message.ParserCursor $r1;

        r4 := @this: org.apache.http.impl.auth.RFC2617Scheme;

        r2 := @parameter0: org.apache.http.util.CharArrayBuffer;

        i0 := @parameter1: int;

        i4 := @parameter2: int;

        r0 = <org.apache.http.message.BasicHeaderValueParser: org.apache.http.message.BasicHeaderValueParser DEFAULT>;

        $r1 = new org.apache.http.message.ParserCursor;

        $i1 = virtualinvoke r2.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r1.<org.apache.http.message.ParserCursor: void <init>(int,int)>(i0, $i1);

        $r3 = interfaceinvoke r0.<org.apache.http.message.HeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>(r2, $r1);

        $i2 = lengthof $r3;

        if $i2 != 0 goto label1;

        $r10 = new org.apache.http.auth.MalformedChallengeException;

        specialinvoke $r10.<org.apache.http.auth.MalformedChallengeException: void <init>(java.lang.String)>("Authentication challenge is empty");

        throw $r10;

     label1:
        $r5 = r4.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map params>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        i3 = lengthof $r3;

        i5 = 0;

     label2:
        if i5 >= i3 goto label3;

        r6 = $r3[i5];

        $r7 = r4.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map params>;

        $r8 = interfaceinvoke r6.<org.apache.http.HeaderElement: java.lang.String getName()>();

        $r9 = interfaceinvoke r6.<org.apache.http.HeaderElement: java.lang.String getValue()>();

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r8, $r9);

        i5 = i5 + 1;

        goto label2;

     label3:
        return;
    }

    protected java.util.Map getParameters()
    {
        org.apache.http.impl.auth.RFC2617Scheme r0;
        java.util.Map $r1;

        r0 := @this: org.apache.http.impl.auth.RFC2617Scheme;

        $r1 = r0.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map params>;

        return $r1;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        org.apache.http.impl.auth.RFC2617Scheme r1;
        java.util.Locale $r2;
        java.util.Map $r3;
        java.lang.Object $r5;
        java.lang.String r0, $r4, $r6;

        r1 := @this: org.apache.http.impl.auth.RFC2617Scheme;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r3 = r1.<org.apache.http.impl.auth.RFC2617Scheme: java.util.Map params>;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.lang.String) $r5;

        return $r6;
    }

    public java.lang.String getRealm()
    {
        org.apache.http.impl.auth.RFC2617Scheme r0;
        java.lang.String $r1;

        r0 := @this: org.apache.http.impl.auth.RFC2617Scheme;

        $r1 = virtualinvoke r0.<org.apache.http.impl.auth.RFC2617Scheme: java.lang.String getParameter(java.lang.String)>("realm");

        return $r1;
    }
}
