public class com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN extends com.hp.hpl.jena.sparql.engine.iterator.QueryIterPlainWrapper
{
    private final com.hp.hpl.jena.sparql.engine.QueryIterator embeddedIterator;
    private java.util.PriorityQueue heap;
    private long limit;
    private final boolean distinct;

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, java.util.List, long, boolean, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.List r3;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;
        long l0;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r4;
        com.hp.hpl.jena.sparql.engine.binding.BindingComparator $r2;
        com.hp.hpl.jena.sparql.engine.QueryIterator r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter1: java.util.List;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        r4 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        $r2 = new com.hp.hpl.jena.sparql.engine.binding.BindingComparator;

        specialinvoke $r2.<com.hp.hpl.jena.sparql.engine.binding.BindingComparator: void <init>(java.util.List,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r3, r4);

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator,java.util.Comparator,long,boolean,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r1, $r2, l0, z0, r4);

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.engine.QueryIterator, java.util.Comparator, long, boolean, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        java.util.PriorityQueue $r16;
        org.apache.jena.atlas.lib.ReverseComparator $r15;
        long l0, $l1, $l3, $l5, $l8;
        byte $b2, $b4, $b6;
        int $i7, $i9;
        com.hp.hpl.jena.query.QueryExecException $r14;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r1;
        java.lang.String $r12;
        boolean z0;
        java.util.Iterator $r6, $r7;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;
        java.lang.StringBuilder $r10, $r11, $r13;
        java.util.Comparator r5;
        com.hp.hpl.jena.sparql.engine.QueryIterator r2;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r5 := @parameter1: java.util.Comparator;

        l0 := @parameter2: long;

        z0 := @parameter3: boolean;

        r1 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterPlainWrapper: void <init>(java.util.Iterator,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(null, r1);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: com.hp.hpl.jena.sparql.engine.QueryIterator embeddedIterator> = r2;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: boolean distinct> = z0;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit> = l0;

        $l1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit>;

        $b2 = $l1 cmp -9223372036854775808L;

        if $b2 != 0 goto label1;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit> = 9223372036854775807L;

     label1:
        $l3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit>;

        $b4 = $l3 cmp 0L;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label2;

        $r14 = new com.hp.hpl.jena.query.QueryExecException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Negative LIMIT: ");

        $l8 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.hp.hpl.jena.query.QueryExecException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label2:
        $l5 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit>;

        $b6 = $l5 cmp 0L;

        if $b6 != 0 goto label3;

        $r7 = staticinvoke <org.apache.jena.atlas.iterator.Iter: java.util.Iterator nullIterator()>();

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: void setIterator(java.util.Iterator)>($r7);

        interfaceinvoke r2.<com.hp.hpl.jena.sparql.engine.QueryIterator: void close()>();

        return;

     label3:
        $r16 = new java.util.PriorityQueue;

        $i7 = (int) l0;

        $r15 = new org.apache.jena.atlas.lib.ReverseComparator;

        specialinvoke $r15.<org.apache.jena.atlas.lib.ReverseComparator: void <init>(java.util.Comparator)>(r5);

        specialinvoke $r16.<java.util.PriorityQueue: void <init>(int,java.util.Comparator)>($i7, $r15);

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.PriorityQueue heap> = $r16;

        $r6 = specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.Iterator sortTopN(com.hp.hpl.jena.sparql.engine.QueryIterator,java.util.Comparator)>(r2, r5);

        virtualinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: void setIterator(java.util.Iterator)>($r6);

        return;
    }

    public void requestCancel()
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: com.hp.hpl.jena.sparql.engine.QueryIterator embeddedIterator>;

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.engine.QueryIterator: void cancel()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterPlainWrapper: void requestCancel()>();

        return;
    }

    private java.util.Iterator sortTopN(com.hp.hpl.jena.sparql.engine.QueryIterator, java.util.Comparator)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r1;
        java.util.Comparator r3;
        com.hp.hpl.jena.sparql.engine.QueryIterator r2;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN$1 $r0;

        r1 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.QueryIterator;

        r3 := @parameter1: java.util.Comparator;

        $r0 = new com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN$1;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN$1: void <init>(com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN,com.hp.hpl.jena.sparql.engine.QueryIterator,java.util.Comparator)>(r1, r2, r3);

        return $r0;
    }

    private void add(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;
        java.util.PriorityQueue $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        r1 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $z0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: boolean distinct>;

        if $z0 == 0 goto label1;

        $r3 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.PriorityQueue heap>;

        $z1 = virtualinvoke $r3.<java.util.PriorityQueue: boolean contains(java.lang.Object)>(r1);

        if $z1 != 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.PriorityQueue heap>;

        virtualinvoke $r4.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r1);

        goto label2;

     label1:
        $r2 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.PriorityQueue heap>;

        virtualinvoke $r2.<java.util.PriorityQueue: boolean add(java.lang.Object)>(r1);

     label2:
        return;
    }

    static java.util.PriorityQueue access$000(com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;
        java.util.PriorityQueue $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        $r1 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.PriorityQueue heap>;

        return $r1;
    }

    static long access$100(com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN)
    {
        long $l0;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        $l0 = r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: long limit>;

        return $l0;
    }

    static void access$200(com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r1;
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        r1 := @parameter1: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: void add(com.hp.hpl.jena.sparql.engine.binding.Binding)>(r1);

        return;
    }

    static java.util.PriorityQueue access$002(com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN, java.util.PriorityQueue)
    {
        com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN r0;
        java.util.PriorityQueue r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN;

        r1 := @parameter1: java.util.PriorityQueue;

        r0.<com.hp.hpl.jena.sparql.engine.iterator.QueryIterTopN: java.util.PriorityQueue heap> = r1;

        return r1;
    }
}
