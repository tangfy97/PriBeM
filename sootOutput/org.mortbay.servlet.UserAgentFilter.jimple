public class org.mortbay.servlet.UserAgentFilter extends java.lang.Object implements javax.servlet.Filter
{
    private java.util.regex.Pattern _pattern;
    private java.util.Map _agentCache;
    private int _agentCacheSize;
    private java.lang.String _attribute;

    public void <init>()
    {
        java.util.HashMap $r1;
        org.mortbay.servlet.UserAgentFilter r0;

        r0 := @this: org.mortbay.servlet.UserAgentFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache> = $r1;

        r0.<org.mortbay.servlet.UserAgentFilter: int _agentCacheSize> = 1024;

        return;
    }

    public void destroy()
    {
        org.mortbay.servlet.UserAgentFilter r0;

        r0 := @this: org.mortbay.servlet.UserAgentFilter;

        return;
    }

    public void doFilter(javax.servlet.ServletRequest, javax.servlet.ServletResponse, javax.servlet.FilterChain) throws java.io.IOException, javax.servlet.ServletException
    {
        javax.servlet.FilterChain r2;
        javax.servlet.ServletRequest r3;
        org.mortbay.servlet.UserAgentFilter r0;
        javax.servlet.ServletResponse r4;
        java.lang.String $r1, $r6, $r7;
        java.util.regex.Pattern $r5;

        r0 := @this: org.mortbay.servlet.UserAgentFilter;

        r3 := @parameter0: javax.servlet.ServletRequest;

        r4 := @parameter1: javax.servlet.ServletResponse;

        r2 := @parameter2: javax.servlet.FilterChain;

        $r1 = r0.<org.mortbay.servlet.UserAgentFilter: java.lang.String _attribute>;

        if $r1 == null goto label1;

        $r5 = r0.<org.mortbay.servlet.UserAgentFilter: java.util.regex.Pattern _pattern>;

        if $r5 == null goto label1;

        $r6 = virtualinvoke r0.<org.mortbay.servlet.UserAgentFilter: java.lang.String getUserAgent(javax.servlet.ServletRequest)>(r3);

        $r7 = r0.<org.mortbay.servlet.UserAgentFilter: java.lang.String _attribute>;

        interfaceinvoke r3.<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>($r7, $r6);

     label1:
        interfaceinvoke r2.<javax.servlet.FilterChain: void doFilter(javax.servlet.ServletRequest,javax.servlet.ServletResponse)>(r3, r4);

        return;
    }

    public void init(javax.servlet.FilterConfig) throws javax.servlet.ServletException
    {
        org.mortbay.servlet.UserAgentFilter r0;
        javax.servlet.FilterConfig r1;
        int $i0;
        java.lang.String $r2, $r3, $r4;
        java.util.regex.Pattern $r5;

        r0 := @this: org.mortbay.servlet.UserAgentFilter;

        r1 := @parameter0: javax.servlet.FilterConfig;

        $r2 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("attribute");

        r0.<org.mortbay.servlet.UserAgentFilter: java.lang.String _attribute> = $r2;

        $r3 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("userAgent");

        if $r3 == null goto label1;

        $r5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>($r3);

        r0.<org.mortbay.servlet.UserAgentFilter: java.util.regex.Pattern _pattern> = $r5;

     label1:
        $r4 = interfaceinvoke r1.<javax.servlet.FilterConfig: java.lang.String getInitParameter(java.lang.String)>("cacheSize");

        if $r4 == null goto label2;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r4);

        r0.<org.mortbay.servlet.UserAgentFilter: int _agentCacheSize> = $i0;

     label2:
        return;
    }

    public java.lang.String getUserAgent(javax.servlet.ServletRequest)
    {
        javax.servlet.ServletRequest r0;
        javax.servlet.http.HttpServletRequest $r1;
        org.mortbay.servlet.UserAgentFilter r3;
        java.lang.String $r2, $r4;

        r3 := @this: org.mortbay.servlet.UserAgentFilter;

        r0 := @parameter0: javax.servlet.ServletRequest;

        $r1 = (javax.servlet.http.HttpServletRequest) r0;

        $r2 = interfaceinvoke $r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>("User-Agent");

        $r4 = virtualinvoke r3.<org.mortbay.servlet.UserAgentFilter: java.lang.String getUserAgent(java.lang.String)>($r2);

        return $r4;
    }

    public java.lang.String getUserAgent(java.lang.String)
    {
        java.lang.Throwable $r13, $r14;
        java.util.regex.Matcher $r6;
        java.lang.StringBuffer $r10, $r11, $r12;
        java.util.Map $r2, $r3, $r7, $r8, $r17, $r18;
        int $i0, $i1, i2, $i3, $i4;
        java.lang.String r0, $r9, r15, $r16;
        boolean $z0;
        org.mortbay.servlet.UserAgentFilter r1;
        java.lang.Object $r4;
        java.util.regex.Pattern $r5;

        r1 := @this: org.mortbay.servlet.UserAgentFilter;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return null;

     label01:
        $r2 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache>;

        entermonitor $r2;

     label02:
        $r3 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        r15 = (java.lang.String) $r4;

        exitmonitor $r2;

     label03:
        goto label06;

     label04:
        $r14 := @caughtexception;

        exitmonitor $r2;

     label05:
        throw $r14;

     label06:
        if r15 != null goto label20;

        $r5 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.regex.Pattern _pattern>;

        $r6 = virtualinvoke $r5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r6.<java.util.regex.Matcher: boolean matches()>();

        if $z0 == 0 goto label13;

        $i0 = virtualinvoke $r6.<java.util.regex.Matcher: int groupCount()>();

        if $i0 <= 0 goto label12;

        i2 = 1;

     label07:
        $i1 = virtualinvoke $r6.<java.util.regex.Matcher: int groupCount()>();

        if i2 > $i1 goto label11;

        $r9 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group(int)>(i2);

        if $r9 == null goto label10;

        if r15 != null goto label08;

        $r16 = $r9;

        goto label09;

     label08:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r16 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        r15 = $r16;

     label10:
        i2 = i2 + 1;

        goto label07;

     label11:
        goto label14;

     label12:
        r15 = virtualinvoke $r6.<java.util.regex.Matcher: java.lang.String group()>();

        goto label14;

     label13:
        r15 = r0;

     label14:
        $r17 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache>;

        entermonitor $r17;

     label15:
        $r18 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache>;

        $i3 = interfaceinvoke $r18.<java.util.Map: int size()>();

        $i4 = r1.<org.mortbay.servlet.UserAgentFilter: int _agentCacheSize>;

        if $i3 < $i4 goto label16;

        $r8 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache>;

        interfaceinvoke $r8.<java.util.Map: void clear()>();

     label16:
        $r7 = r1.<org.mortbay.servlet.UserAgentFilter: java.util.Map _agentCache>;

        interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r15);

        exitmonitor $r17;

     label17:
        goto label20;

     label18:
        $r13 := @caughtexception;

        exitmonitor $r17;

     label19:
        throw $r13;

     label20:
        return r15;

        catch java.lang.Throwable from label02 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.lang.Throwable from label15 to label17 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
    }
}
