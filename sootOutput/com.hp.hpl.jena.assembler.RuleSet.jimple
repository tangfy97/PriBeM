public class com.hp.hpl.jena.assembler.RuleSet extends java.lang.Object
{
    private static final java.util.List emptyRules;
    public static final com.hp.hpl.jena.assembler.RuleSet empty;
    private final java.util.List rules;

    public static com.hp.hpl.jena.assembler.RuleSet create(java.util.List)
    {
        java.util.List r1;
        com.hp.hpl.jena.assembler.RuleSet $r0;

        r1 := @parameter0: java.util.List;

        $r0 = new com.hp.hpl.jena.assembler.RuleSet;

        specialinvoke $r0.<com.hp.hpl.jena.assembler.RuleSet: void <init>(java.util.List)>(r1);

        return $r0;
    }

    public static com.hp.hpl.jena.assembler.RuleSet create(java.lang.String)
    {
        java.util.List $r1;
        java.lang.String r0;
        com.hp.hpl.jena.assembler.RuleSet $r2;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.reasoner.rulesys.Rule: java.util.List parseRules(java.lang.String)>(r0);

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.RuleSet: com.hp.hpl.jena.assembler.RuleSet create(java.util.List)>($r1);

        return $r2;
    }

    protected void <init>(java.util.List)
    {
        java.util.List r2;
        com.hp.hpl.jena.assembler.RuleSet r0;
        java.util.ArrayList $r1;

        r0 := @this: com.hp.hpl.jena.assembler.RuleSet;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>(r2);

        r0.<com.hp.hpl.jena.assembler.RuleSet: java.util.List rules> = $r1;

        return;
    }

    public java.util.List getRules()
    {
        java.util.List $r1;
        com.hp.hpl.jena.assembler.RuleSet r0;

        r0 := @this: com.hp.hpl.jena.assembler.RuleSet;

        $r1 = r0.<com.hp.hpl.jena.assembler.RuleSet: java.util.List rules>;

        return $r1;
    }

    public int hashCode()
    {
        int $i0;
        java.util.List $r1;
        com.hp.hpl.jena.assembler.RuleSet r0;

        r0 := @this: com.hp.hpl.jena.assembler.RuleSet;

        $r1 = r0.<com.hp.hpl.jena.assembler.RuleSet: java.util.List rules>;

        $i0 = interfaceinvoke $r1.<java.util.List: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.List $r3, $r4;
        java.lang.Object r0;
        com.hp.hpl.jena.assembler.RuleSet r1, $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.assembler.RuleSet;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.hp.hpl.jena.assembler.RuleSet;

        if $z0 == 0 goto label1;

        $r4 = r1.<com.hp.hpl.jena.assembler.RuleSet: java.util.List rules>;

        $r2 = (com.hp.hpl.jena.assembler.RuleSet) r0;

        $r3 = $r2.<com.hp.hpl.jena.assembler.RuleSet: java.util.List rules>;

        $z1 = interfaceinvoke $r4.<java.util.List: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    static void <clinit>()
    {
        java.util.List $r0, $r1;
        com.hp.hpl.jena.assembler.RuleSet $r2;

        $r0 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        <com.hp.hpl.jena.assembler.RuleSet: java.util.List emptyRules> = $r0;

        $r1 = <com.hp.hpl.jena.assembler.RuleSet: java.util.List emptyRules>;

        $r2 = staticinvoke <com.hp.hpl.jena.assembler.RuleSet: com.hp.hpl.jena.assembler.RuleSet create(java.util.List)>($r1);

        <com.hp.hpl.jena.assembler.RuleSet: com.hp.hpl.jena.assembler.RuleSet empty> = $r2;

        return;
    }
}
