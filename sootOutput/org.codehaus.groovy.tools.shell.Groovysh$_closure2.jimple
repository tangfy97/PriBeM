class org.codehaus.groovy.tools.shell.Groovysh$_closure2 extends groovy.lang.Closure implements org.codehaus.groovy.runtime.GeneratedClosure
{
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Throwable;
    static java.lang.Class class$java$lang$StringBuffer;
    static java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Class $r0, $r1, $r5, $r6;
        java.lang.Object r3, r4;
        org.codehaus.groovy.tools.shell.Groovysh$_closure2 r2;

        r2 := @this: org.codehaus.groovy.tools.shell.Groovysh$_closure2;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r0 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r5 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_closure2");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0> = $r5;

        goto label2;

     label1:
        $r5 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r6;

        goto label4;

     label3:
        $r6 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        specialinvoke r2.<groovy.lang.Closure: void <init>(java.lang.Object,java.lang.Object)>(r3, r4);

        return;
    }

    public java.lang.Object doCall(java.lang.Throwable)
    {
        java.lang.Integer $r202, $r204;
        java.lang.Object[] $r33, $r37, $r66, $r77, $r79, $r94, $r109, $r124, $r126, $r140, $r157, $r182, $r194;
        java.lang.StringBuffer $r196;
        org.codehaus.groovy.runtime.GStringImpl $r197, $r201, $r203;
        int $i1;
        java.lang.Boolean $r62, $r105, $r155, $r188;
        java.lang.Class $r2, r3, $r4, $r8, $r9, $r13, $r14, $r17, $r20, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r34, $r35, $r39, $r43, $r44, $r45, $r46, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r61, $r63, $r64, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r80, $r81, $r82, $r83, $r84, $r88, $r89, $r90, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r106, $r107, $r108, $r111, $r112, $r113, $r114, $r115, $r116, $r122, $r127, $r128, $r131, $r132, $r133, $r137, $r138, $r141, $r142, $r146, $r147, $r150, $r151, $r158, $r159, $r162, $r163, $r164, $r168, $r169, $r172, $r173, $r175, $r176, $r177, $r178, $r179, $r184, $r185, $r186, $r187, $r189, $r190, $r191;
        java.lang.Object $r5, $r7, $r11, $r12, $r15, $r16, $r18, $r19, $r21, $r22, $r26, $r32, $r36, $r40, $r41, $r42, $r47, $r48, $r58, $r59, $r65, $r67, $r75, $r76, $r85, $r86, $r87, $r91, $r92, $r95, $r110, $r117, $r120, $r121, $r123, $r129, $r130, $r134, $r135, $r139, $r143, $r144, $r145, $r148, $r149, $r152, $r153, $r160, $r161, $r165, $r166, $r170, $r171, $r174, $r180, $r181, $r183, $r192, $r193;
        org.codehaus.groovy.tools.shell.Groovysh$_closure2 r10;
        java.lang.Throwable r0, $r60;
        groovy.lang.Reference $r195, $r198, $r199, $r200;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14;
        java.lang.String[] $r93, $r136, $r167;
        java.util.Iterator $r205, $r206;

        r10 := @this: org.codehaus.groovy.tools.shell.Groovysh$_closure2;

        r0 := @parameter0: java.lang.Throwable;

        $r195 = new groovy.lang.Reference;

        specialinvoke $r195.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0>;

        if $r2 != null goto label01;

        $r70 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_closure2");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0> = $r70;

        goto label02;

     label01:
        $r70 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0>;

     label02:
        r3 = $r70;

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label03;

        $r71 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r71;

        goto label04;

     label03:
        $r71 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r5 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r5, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r196 = new java.lang.StringBuffer;

        specialinvoke $r196.<java.lang.StringBuffer: void <init>(java.lang.String)>("(cause != null). Values: ");

        virtualinvoke $r196.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("cause = ");

        $r7 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        virtualinvoke $r196.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r196, null);

     label06:
        $r8 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r8 != null goto label07;

        $r69 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r72 = $r69;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r69;

        goto label08;

     label07:
        $r72 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label08:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r9 != null goto label09;

        $r73 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r74 = $r73;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r73;

        goto label10;

     label09:
        $r74 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label10:
        $r75 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "io");

        $r76 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r74, $r75, "err");

        $r77 = newarray (java.lang.Object)[1];

        $r197 = new org.codehaus.groovy.runtime.GStringImpl;

        $r79 = newarray (java.lang.Object)[2];

        $r80 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r80 != null goto label11;

        $r68 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r81 = $r68;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r68;

        goto label12;

     label11:
        $r81 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label12:
        $r82 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r82 != null goto label13;

        $r83 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r84 = $r83;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r83;

        goto label14;

     label13:
        $r84 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label14:
        $r85 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $r86 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r84, $r85, "class");

        $r87 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r81, $r86, "name");

        $r79[0] = $r87;

        $r88 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r88 != null goto label15;

        $r89 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r90 = $r89;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r89;

        goto label16;

     label15:
        $r90 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label16:
        $r91 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $r92 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r90, $r91, "message");

        $r79[1] = $r92;

        $r93 = newarray (java.lang.String)[3];

        $r93[0] = "@|bold,red ERROR| ";

        $r93[1] = ": @|bold,red ";

        $r93[2] = "|";

        specialinvoke $r197.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r79, $r93);

        $r77[0] = $r197;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r72, $r76, "println", $r77);

        $r94 = newarray (java.lang.Object)[1];

        $r95 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $r94[0] = $r95;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r10, "maybeRecordError", $r94);

        $r96 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r96 != null goto label17;

        $r97 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r97;

        goto label18;

     label17:
        $r97 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label18:
        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "log");

        $r12 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r97, $r11, "debug");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r12);

        if $z1 == 0 goto label21;

        $r64 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r64 != null goto label19;

        $r98 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r98;

        goto label20;

     label19:
        $r98 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label20:
        $r65 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "log");

        $r66 = newarray (java.lang.Object)[1];

        $r67 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $r66[0] = $r67;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r98, $r65, "debug", $r66);

        goto label95;

     label21:
        $r13 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r13 != null goto label22;

        $r63 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r99 = $r63;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r63;

        goto label23;

     label22:
        $r99 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label23:
        $r14 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

        if $r14 != null goto label24;

        $r100 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.util.Preferences");

        $r101 = $r100;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences> = $r100;

        goto label25;

     label24:
        $r101 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$util$Preferences>;

     label25:
        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r99, $r101, "sanitizeStackTrace");

        $r102 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$Boolean>;

        if $r102 != null goto label26;

        $r103 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$Boolean> = $r103;

        goto label27;

     label26:
        $r103 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$Boolean>;

     label27:
        $r16 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r15, $r103);

        $r62 = (java.lang.Boolean) $r16;

        $r17 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r17 != null goto label28;

        $r104 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r104;

        goto label29;

     label28:
        $r104 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label29:
        $r18 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "io");

        $r19 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r104, $r18, "verbose");

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r19);

        if $z2 != 0 goto label30;

        $z6 = 1;

        goto label31;

     label30:
        $z6 = 0;

     label31:
        if $z6 == 0 goto label32;

        $z5 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r62);

        if $z5 == 0 goto label32;

        $r105 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label33;

     label32:
        $r105 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label33:
        $z7 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r105);

        if $z7 == 0 goto label40;

        $r56 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r56 != null goto label34;

        $r61 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r106 = $r61;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r61;

        goto label35;

     label34:
        $r106 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label35:
        $r57 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils>;

        if $r57 != null goto label36;

        $r107 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.runtime.StackTraceUtils");

        $r108 = $r107;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils> = $r107;

        goto label37;

     label36:
        $r108 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$runtime$StackTraceUtils>;

     label37:
        $r109 = newarray (java.lang.Object)[1];

        $r110 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $r109[0] = $r110;

        $r58 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r106, $r108, "deepSanitize", $r109);

        $r111 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$Throwable>;

        if $r111 != null goto label38;

        $r112 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$Throwable> = $r112;

        goto label39;

     label38:
        $r112 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$Throwable>;

     label39:
        $r59 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r58, $r112);

        $r60 = (java.lang.Throwable) $r59;

        virtualinvoke $r195.<groovy.lang.Reference: void set(java.lang.Object)>($r60);

        goto label40;

     label40:
        $r20 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r20 != null goto label41;

        $r113 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r113;

        goto label42;

     label41:
        $r113 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label42:
        $r21 = virtualinvoke $r195.<groovy.lang.Reference: java.lang.Object get()>();

        $r22 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r113, $r21, "stackTrace");

        $r198 = new groovy.lang.Reference;

        specialinvoke $r198.<groovy.lang.Reference: void <init>(java.lang.Object)>($r22);

        $r24 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r24 != null goto label43;

        $r55 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r114 = $r55;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r55;

        goto label44;

     label43:
        $r114 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label44:
        $r25 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$StringBuffer>;

        if $r25 != null goto label45;

        $r115 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("java.lang.StringBuffer");

        $r116 = $r115;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$StringBuffer> = $r115;

        goto label46;

     label45:
        $r116 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$java$lang$StringBuffer>;

     label46:
        $r117 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>($r114, $r116);

        $r199 = new groovy.lang.Reference;

        specialinvoke $r199.<groovy.lang.Reference: void <init>(java.lang.Object)>($r117);

        $r200 = new groovy.lang.Reference;

        specialinvoke $r200.<groovy.lang.Reference: void <init>(java.lang.Object)>(null);

        $r120 = virtualinvoke $r198.<groovy.lang.Reference: java.lang.Object get()>();

        $r121 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r3, $r120, "iterator");

     label47:
        $r205 = (java.util.Iterator) $r121;

        $z8 = interfaceinvoke $r205.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label95;

        $r206 = (java.util.Iterator) $r121;

        $r26 = interfaceinvoke $r206.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r200.<groovy.lang.Reference: void set(java.lang.Object)>($r26);

        $r27 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r27 != null goto label48;

        $r54 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r122 = $r54;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r54;

        goto label49;

     label48:
        $r122 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label49:
        $r123 = virtualinvoke $r199.<groovy.lang.Reference: java.lang.Object get()>();

        $r124 = newarray (java.lang.Object)[1];

        $r201 = new org.codehaus.groovy.runtime.GStringImpl;

        $r126 = newarray (java.lang.Object)[2];

        $r28 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r28 != null goto label50;

        $r127 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r128 = $r127;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r127;

        goto label51;

     label50:
        $r128 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label51:
        $r129 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r130 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r128, $r129, "className");

        $r126[0] = $r130;

        $r131 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r131 != null goto label52;

        $r132 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r133 = $r132;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r132;

        goto label53;

     label52:
        $r133 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label53:
        $r134 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r135 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r133, $r134, "methodName");

        $r126[1] = $r135;

        $r136 = newarray (java.lang.String)[3];

        $r136[0] = "        @|bold at| ";

        $r136[1] = ".";

        $r136[2] = " (@|bold ";

        specialinvoke $r201.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r126, $r136);

        $r124[0] = $r201;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r122, $r123, "leftShift", $r124);

        $r137 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r137 != null goto label54;

        $r53 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r138 = $r53;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r53;

        goto label55;

     label54:
        $r138 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label55:
        $r139 = virtualinvoke $r199.<groovy.lang.Reference: java.lang.Object get()>();

        $r140 = newarray (java.lang.Object)[1];

        $r29 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r29 != null goto label56;

        $r141 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r142 = $r141;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r141;

        goto label57;

     label56:
        $r142 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label57:
        $r143 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r144 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r142, $r143, "nativeMethod");

        $z9 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r144);

        if $z9 == 0 goto label58;

        $r145 = "Native Method";

        goto label75;

     label58:
        $r30 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r30 != null goto label59;

        $r146 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r147 = $r146;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r146;

        goto label60;

     label59:
        $r147 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label60:
        $r148 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r149 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r147, $r148, "fileName");

        $z10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r149, null);

        if $z10 == 0 goto label63;

        $r52 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r52 != null goto label61;

        $r150 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r151 = $r150;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r150;

        goto label62;

     label61:
        $r151 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label62:
        $r152 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r153 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r151, $r152, "lineNumber");

        $r202 = new java.lang.Integer;

        $i1 = (int) -1;

        specialinvoke $r202.<java.lang.Integer: void <init>(int)>($i1);

        $z11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r153, $r202);

        if $z11 == 0 goto label63;

        $r155 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label64;

     label63:
        $r155 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label64:
        $z12 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r155);

        if $z12 == 0 goto label69;

        $r203 = new org.codehaus.groovy.runtime.GStringImpl;

        $r145 = $r203;

        $r157 = newarray (java.lang.Object)[2];

        $r51 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r51 != null goto label65;

        $r158 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r159 = $r158;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r158;

        goto label66;

     label65:
        $r159 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label66:
        $r160 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r161 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r159, $r160, "fileName");

        $r157[0] = $r161;

        $r162 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r162 != null goto label67;

        $r163 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r164 = $r163;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r163;

        goto label68;

     label67:
        $r164 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label68:
        $r165 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r166 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r164, $r165, "lineNumber");

        $r157[1] = $r166;

        $r167 = newarray (java.lang.String)[3];

        $r167[0] = "";

        $r167[1] = ":";

        $r167[2] = "";

        specialinvoke $r203.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r157, $r167);

        goto label75;

     label69:
        $r31 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r31 != null goto label70;

        $r168 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r169 = $r168;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r168;

        goto label71;

     label70:
        $r169 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label71:
        $r170 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r171 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r169, $r170, "fileName");

        $z13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>($r171, null);

        if $z13 == 0 goto label74;

        $r50 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r50 != null goto label72;

        $r172 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r173 = $r172;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r172;

        goto label73;

     label72:
        $r173 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label73:
        $r174 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r145 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r173, $r174, "fileName");

        goto label75;

     label74:
        $r145 = "Unknown Source";

     label75:
        $r140[0] = $r145;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r138, $r139, "leftShift", $r140);

        $r175 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r175 != null goto label76;

        $r176 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r176;

        goto label77;

     label76:
        $r176 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label77:
        $r32 = virtualinvoke $r199.<groovy.lang.Reference: java.lang.Object get()>();

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = "|)";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r176, $r32, "leftShift", $r33);

        $r34 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r34 != null goto label78;

        $r49 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r177 = $r49;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r49;

        goto label79;

     label78:
        $r177 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label79:
        $r35 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r35 != null goto label80;

        $r178 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r179 = $r178;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r178;

        goto label81;

     label80:
        $r179 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label81:
        $r180 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "io");

        $r181 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r179, $r180, "err");

        $r182 = newarray (java.lang.Object)[1];

        $r183 = virtualinvoke $r199.<groovy.lang.Reference: java.lang.Object get()>();

        $r182[0] = $r183;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r177, $r181, "println", $r182);

        $r184 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r184 != null goto label82;

        $r185 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r185;

        goto label83;

     label82:
        $r185 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label83:
        $r36 = virtualinvoke $r199.<groovy.lang.Reference: java.lang.Object get()>();

        $r37 = newarray (java.lang.Object)[1];

        $r204 = new java.lang.Integer;

        specialinvoke $r204.<java.lang.Integer: void <init>(int)>(0);

        $r37[0] = $r204;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r185, $r36, "setLength", $r37);

        $r39 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r39 != null goto label84;

        $r186 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r186;

        goto label85;

     label84:
        $r186 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label85:
        $r40 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r41 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r186, $r40, "className");

        $r42 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "EVAL_SCRIPT_FILENAME");

        $z3 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r41, $r42);

        if $z3 == 0 goto label88;

        $r46 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r46 != null goto label86;

        $r187 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r187;

        goto label87;

     label86:
        $r187 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label87:
        $r47 = virtualinvoke $r200.<groovy.lang.Reference: java.lang.Object get()>();

        $r48 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r187, $r47, "methodName");

        $z4 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r48, "run");

        if $z4 == 0 goto label88;

        $r188 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label89;

     label88:
        $r188 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label89:
        $z14 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r188);

        if $z14 == 0 goto label94;

        $r43 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r43 != null goto label90;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r189 = $r45;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r45;

        goto label91;

     label90:
        $r189 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label91:
        $r44 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

        if $r44 != null goto label92;

        $r190 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh");

        $r191 = $r190;

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh> = $r190;

        goto label93;

     label92:
        $r191 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$org$codehaus$groovy$tools$shell$Groovysh>;

     label93:
        $r192 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r3, r10, "io");

        $r193 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>($r191, $r192, "err");

        $r194 = newarray (java.lang.Object)[1];

        $r194[0] = "        @|bold ...|";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>($r189, $r193, "println", $r194);

        goto label95;

     label94:
        goto label47;

     label95:
        return null;
    }

    public java.lang.Object call(java.lang.Throwable)
    {
        java.lang.Throwable r0;
        java.lang.Object[] $r6;
        groovy.lang.Reference $r1;
        java.lang.Class $r2, r3, $r4, $r9, $r10;
        java.lang.Object $r7, $r8;
        org.codehaus.groovy.tools.shell.Groovysh$_closure2 r5;

        r5 := @this: org.codehaus.groovy.tools.shell.Groovysh$_closure2;

        r0 := @parameter0: java.lang.Throwable;

        $r1 = new groovy.lang.Reference;

        specialinvoke $r1.<groovy.lang.Reference: void <init>(java.lang.Object)>(r0);

        $r2 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0>;

        if $r2 != null goto label1;

        $r9 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.Groovysh$_closure2");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0> = $r9;

        goto label2;

     label1:
        $r9 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$0>;

     label2:
        r3 = $r9;

        $r4 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

        if $r4 != null goto label3;

        $r10 = staticinvoke <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass> = $r10;

        goto label4;

     label3:
        $r10 = <org.codehaus.groovy.tools.shell.Groovysh$_closure2: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r6 = newarray (java.lang.Object)[1];

        $r7 = virtualinvoke $r1.<groovy.lang.Reference: java.lang.Object get()>();

        $r6[0] = $r7;

        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r3, r5, "doCall", $r6);

        return $r8;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
