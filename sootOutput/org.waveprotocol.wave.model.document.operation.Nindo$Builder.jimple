public class org.waveprotocol.wave.model.document.operation.Nindo$Builder extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor
{
    private final java.util.List mutationList;
    boolean hasBeenUsed;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList> = $r1;

        r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean hasBeenUsed> = 0;

        return;
    }

    public void skip(int)
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        int i0;
        org.waveprotocol.wave.model.document.operation.Nindo$Skip $r1;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        i0 := @parameter0: int;

        $z0 = <org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$Skip;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$Skip: void <init>(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void characters(java.lang.String)
    {
        java.util.List $r3;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r1;
        org.waveprotocol.wave.model.document.operation.Nindo$Characters $r2;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r3 = r1.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r2 = new org.waveprotocol.wave.model.document.operation.Nindo$Characters;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.Nindo$Characters: void <init>(java.lang.String)>(r0);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

     label1:
        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$ElementStart $r1;
        java.util.List $r4;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        java.lang.String r2;
        java.lang.AssertionError $r5;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $z0 = <org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r3 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r4 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$ElementStart;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$ElementStart: void <init>(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void elementEnd()
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Nindo$ElementEnd $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = <org.waveprotocol.wave.model.document.operation.Nindo$ElementEnd: org.waveprotocol.wave.model.document.operation.Nindo$ElementEnd INSTANCE>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void deleteCharacters(int)
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Nindo$DeleteCharacters $r1;
        int i0;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        i0 := @parameter0: int;

        $z0 = <org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if i0 > 0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$DeleteCharacters;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$DeleteCharacters: void <init>(int)>(i0);

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void deleteElementStart()
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Nindo$DeleteElementStart $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = <org.waveprotocol.wave.model.document.operation.Nindo$DeleteElementStart: org.waveprotocol.wave.model.document.operation.Nindo$DeleteElementStart INSTANCE>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void deleteElementEnd()
    {
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Nindo$DeleteElementEnd $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = <org.waveprotocol.wave.model.document.operation.Nindo$DeleteElementEnd: org.waveprotocol.wave.model.document.operation.Nindo$DeleteElementEnd INSTANCE>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.Nindo$ReplaceAttributes $r1;
        java.util.List $r3;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Attributes r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$ReplaceAttributes;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$ReplaceAttributes: void <init>(org.waveprotocol.wave.model.document.operation.Attributes)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void updateAttributes(java.util.Map)
    {
        java.util.List $r3;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes $r1;
        java.util.Map r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r2 := @parameter0: java.util.Map;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$UpdateAttributes: void <init>(java.util.Map)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void startAnnotation(java.lang.String, java.lang.String)
    {
        java.util.List $r4;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        org.waveprotocol.wave.model.document.operation.Nindo$StartAnnotation $r1;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$StartAnnotation;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$StartAnnotation: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void endAnnotation(java.lang.String)
    {
        java.util.List $r3;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.Nindo$EndAnnotation $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        r2 := @parameter0: java.lang.String;

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $r1 = new org.waveprotocol.wave.model.document.operation.Nindo$EndAnnotation;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.Nindo$EndAnnotation: void <init>(java.lang.String)>(r2);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public org.waveprotocol.wave.model.document.operation.Nindo build()
    {
        org.waveprotocol.wave.model.document.operation.Nindo $r0;
        java.util.List $r2;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r1;

        r1 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $r0 = new org.waveprotocol.wave.model.document.operation.Nindo;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.Nindo: void <init>(java.util.List,org.waveprotocol.wave.model.document.operation.Nindo$1)>($r2, null);

        return $r0;
    }

    private org.waveprotocol.wave.model.document.operation.Nindo buildWithoutTrailingSkip()
    {
        java.util.List $r1, $r2, $r4;
        org.waveprotocol.wave.model.document.operation.Nindo $r5;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        int $i0, $i1, $i2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $i1 = $i0 - 1;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i1);

        $z0 = $r3 instanceof org.waveprotocol.wave.model.document.operation.Nindo$Skip;

        if $z0 == 0 goto label1;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: java.util.List mutationList>;

        $i2 = $i0 - 1;

        interfaceinvoke $r4.<java.util.List: java.lang.Object remove(int)>($i2);

     label1:
        $r5 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: org.waveprotocol.wave.model.document.operation.Nindo build()>();

        return $r5;
    }

    public void begin()
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $z0 = r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean hasBeenUsed>;

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "Cannot reuse a builder");

        r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean hasBeenUsed> = 1;

        return;
    }

    public void finish()
    {
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        return;
    }

    static org.waveprotocol.wave.model.document.operation.Nindo access$200(org.waveprotocol.wave.model.document.operation.Nindo$Builder)
    {
        org.waveprotocol.wave.model.document.operation.Nindo $r1;
        org.waveprotocol.wave.model.document.operation.Nindo$Builder r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.Nindo$Builder;

        $r1 = specialinvoke r0.<org.waveprotocol.wave.model.document.operation.Nindo$Builder: org.waveprotocol.wave.model.document.operation.Nindo buildWithoutTrailingSkip()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/operation/Nindo;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.operation.Nindo$Builder: boolean $assertionsDisabled> = $z1;

        return;
    }
}
