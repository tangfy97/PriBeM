class org.jsoup.parser.ParseErrorList extends java.util.ArrayList
{
    private static final int INITIAL_CAPACITY;
    private final int maxSize;

    void <init>(int, int)
    {
        int i0, i1;
        org.jsoup.parser.ParseErrorList r0;

        r0 := @this: org.jsoup.parser.ParseErrorList;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.util.ArrayList: void <init>(int)>(i0);

        r0.<org.jsoup.parser.ParseErrorList: int maxSize> = i1;

        return;
    }

    boolean canAddError()
    {
        int $i0, $i1;
        org.jsoup.parser.ParseErrorList r0;
        boolean $z0;

        r0 := @this: org.jsoup.parser.ParseErrorList;

        $i0 = virtualinvoke r0.<org.jsoup.parser.ParseErrorList: int size()>();

        $i1 = r0.<org.jsoup.parser.ParseErrorList: int maxSize>;

        if $i0 >= $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    int getMaxSize()
    {
        int $i0;
        org.jsoup.parser.ParseErrorList r0;

        r0 := @this: org.jsoup.parser.ParseErrorList;

        $i0 = r0.<org.jsoup.parser.ParseErrorList: int maxSize>;

        return $i0;
    }

    static org.jsoup.parser.ParseErrorList noTracking()
    {
        org.jsoup.parser.ParseErrorList $r0;

        $r0 = new org.jsoup.parser.ParseErrorList;

        specialinvoke $r0.<org.jsoup.parser.ParseErrorList: void <init>(int,int)>(0, 0);

        return $r0;
    }

    static org.jsoup.parser.ParseErrorList tracking(int)
    {
        int i0;
        org.jsoup.parser.ParseErrorList $r0;

        i0 := @parameter0: int;

        $r0 = new org.jsoup.parser.ParseErrorList;

        specialinvoke $r0.<org.jsoup.parser.ParseErrorList: void <init>(int,int)>(16, i0);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.jsoup.parser.ParseErrorList: int INITIAL_CAPACITY> = 16;

        return;
    }
}
