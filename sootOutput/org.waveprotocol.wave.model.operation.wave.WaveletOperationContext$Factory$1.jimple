final class org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1 extends java.lang.Object implements org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory
{

    void <init>()
    {
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1 r0;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.operation.wave.WaveletOperationContext createContext()
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1 r1;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Read only");

        throw $r0;
    }

    public org.waveprotocol.wave.model.operation.wave.WaveletOperationContext createContext(org.waveprotocol.wave.model.wave.ParticipantId)
    {
        java.lang.UnsupportedOperationException $r0;
        org.waveprotocol.wave.model.wave.ParticipantId r2;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1 r1;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext$Factory$1;

        r2 := @parameter0: org.waveprotocol.wave.model.wave.ParticipantId;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Read only");

        throw $r0;
    }
}
