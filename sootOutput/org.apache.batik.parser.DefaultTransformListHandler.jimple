public class org.apache.batik.parser.DefaultTransformListHandler extends java.lang.Object implements org.apache.batik.parser.TransformListHandler
{
    public static final org.apache.batik.parser.TransformListHandler INSTANCE;

    protected void <init>()
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void startTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        return;
    }

    public void matrix(float, float, float, float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0, f1, f2, f3, f4, f5;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        f3 := @parameter3: float;

        f4 := @parameter4: float;

        f5 := @parameter5: float;

        return;
    }

    public void rotate(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        return;
    }

    public void rotate(float, float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0, f1, f2;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        f2 := @parameter2: float;

        return;
    }

    public void translate(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        return;
    }

    public void translate(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0, f1;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public void scale(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        return;
    }

    public void scale(float, float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0, f1;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        return;
    }

    public void skewX(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        return;
    }

    public void skewY(float) throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;
        float f0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        f0 := @parameter0: float;

        return;
    }

    public void endTransformList() throws org.apache.batik.parser.ParseException
    {
        org.apache.batik.parser.DefaultTransformListHandler r0;

        r0 := @this: org.apache.batik.parser.DefaultTransformListHandler;

        return;
    }

    static void <clinit>()
    {
        org.apache.batik.parser.DefaultTransformListHandler $r0;

        $r0 = new org.apache.batik.parser.DefaultTransformListHandler;

        specialinvoke $r0.<org.apache.batik.parser.DefaultTransformListHandler: void <init>()>();

        <org.apache.batik.parser.DefaultTransformListHandler: org.apache.batik.parser.TransformListHandler INSTANCE> = $r0;

        return;
    }
}
