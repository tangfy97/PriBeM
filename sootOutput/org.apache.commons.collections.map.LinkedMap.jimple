public class org.apache.commons.collections.map.LinkedMap extends org.apache.commons.collections.map.AbstractLinkedMap implements java.io.Serializable, java.lang.Cloneable
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.commons.collections.map.LinkedMap r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractLinkedMap: void <init>(int,float,int)>(16, 0.75F, 12);

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.commons.collections.map.LinkedMap r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractLinkedMap: void <init>(int)>(i0);

        return;
    }

    public void <init>(int, float)
    {
        int i0;
        float f0;
        org.apache.commons.collections.map.LinkedMap r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        i0 := @parameter0: int;

        f0 := @parameter1: float;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractLinkedMap: void <init>(int,float)>(i0, f0);

        return;
    }

    public void <init>(java.util.Map)
    {
        org.apache.commons.collections.map.LinkedMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.commons.collections.map.AbstractLinkedMap: void <init>(java.util.Map)>(r1);

        return;
    }

    public java.lang.Object clone()
    {
        java.lang.Object $r1;
        org.apache.commons.collections.map.LinkedMap r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        $r1 = specialinvoke r0.<org.apache.commons.collections.map.AbstractLinkedMap: java.lang.Object clone()>();

        return $r1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        java.io.ObjectOutputStream r0;
        org.apache.commons.collections.map.LinkedMap r1;

        r1 := @this: org.apache.commons.collections.map.LinkedMap;

        r0 := @parameter0: java.io.ObjectOutputStream;

        virtualinvoke r0.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        virtualinvoke r1.<org.apache.commons.collections.map.LinkedMap: void doWriteObject(java.io.ObjectOutputStream)>(r0);

        return;
    }

    private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
    {
        java.io.ObjectInputStream r0;
        org.apache.commons.collections.map.LinkedMap r1;

        r1 := @this: org.apache.commons.collections.map.LinkedMap;

        r0 := @parameter0: java.io.ObjectInputStream;

        virtualinvoke r0.<java.io.ObjectInputStream: void defaultReadObject()>();

        virtualinvoke r1.<org.apache.commons.collections.map.LinkedMap: void doReadObject(java.io.ObjectInputStream)>(r0);

        return;
    }

    public java.lang.Object get(int)
    {
        int i0;
        java.lang.Object $r2;
        org.apache.commons.collections.map.LinkedMap r0;
        org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.LinkedMap: org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry getEntry(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry: java.lang.Object getKey()>();

        return $r2;
    }

    public java.lang.Object getValue(int)
    {
        int i0;
        java.lang.Object $r2;
        org.apache.commons.collections.map.LinkedMap r0;
        org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry $r1;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.LinkedMap: org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry getEntry(int)>(i0);

        $r2 = virtualinvoke $r1.<org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry: java.lang.Object getValue()>();

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        int i0, $i2;
        java.lang.Object $r1, $r4, r5;
        org.apache.commons.collections.map.LinkedMap r0;
        org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry $r2, $r3, r6;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.LinkedMap: java.lang.Object convertKey(java.lang.Object)>(r5);

        i0 = 0;

        $r2 = r0.<org.apache.commons.collections.map.LinkedMap: org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry header>;

        r6 = $r2.<org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry: org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry after>;

     label1:
        $r3 = r0.<org.apache.commons.collections.map.LinkedMap: org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry header>;

        if r6 == $r3 goto label3;

        $r4 = r6.<org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry: java.lang.Object key>;

        $z0 = virtualinvoke r0.<org.apache.commons.collections.map.LinkedMap: boolean isEqualKey(java.lang.Object,java.lang.Object)>($r1, $r4);

        if $z0 == 0 goto label2;

        return i0;

     label2:
        r6 = r6.<org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry: org.apache.commons.collections.map.AbstractLinkedMap$LinkEntry after>;

        i0 = i0 + 1;

        goto label1;

     label3:
        $i2 = (int) -1;

        return $i2;
    }

    public java.lang.Object remove(int)
    {
        int i0;
        java.lang.Object $r1, $r2;
        org.apache.commons.collections.map.LinkedMap r0;

        r0 := @this: org.apache.commons.collections.map.LinkedMap;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.map.LinkedMap: java.lang.Object get(int)>(i0);

        $r2 = virtualinvoke r0.<org.apache.commons.collections.map.LinkedMap: java.lang.Object remove(java.lang.Object)>($r1);

        return $r2;
    }

    public java.util.List asList()
    {
        org.apache.commons.collections.map.LinkedMap$LinkedMapList $r0;
        org.apache.commons.collections.map.LinkedMap r1;

        r1 := @this: org.apache.commons.collections.map.LinkedMap;

        $r0 = new org.apache.commons.collections.map.LinkedMap$LinkedMapList;

        specialinvoke $r0.<org.apache.commons.collections.map.LinkedMap$LinkedMapList: void <init>(org.apache.commons.collections.map.LinkedMap)>(r1);

        return $r0;
    }

    public static void <clinit>()
    {
        <org.apache.commons.collections.map.LinkedMap: long serialVersionUID> = 9077234323521161066L;

        return;
    }
}
