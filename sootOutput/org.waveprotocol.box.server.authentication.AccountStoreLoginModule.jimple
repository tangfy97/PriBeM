public class org.waveprotocol.box.server.authentication.AccountStoreLoginModule extends java.lang.Object implements javax.security.auth.spi.LoginModule
{
    private javax.security.auth.Subject subject;
    private org.waveprotocol.box.server.authentication.ParticipantPrincipal principal;
    private javax.security.auth.callback.CallbackHandler callbackHandler;
    private org.waveprotocol.box.server.persistence.AccountStore accountStore;
    private final org.waveprotocol.wave.util.logging.Log LOG;
    private org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status;

    public void <init>()
    {
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule r0;
        org.waveprotocol.wave.util.logging.Log $r1;

        r0 := @this: org.waveprotocol.box.server.authentication.AccountStoreLoginModule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.waveprotocol.wave.util.logging.Log: org.waveprotocol.wave.util.logging.Log get(java.lang.Class)>(class "Lorg/waveprotocol/box/server/authentication/AccountStoreLoginModule;");

        r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.wave.util.logging.Log LOG> = $r1;

        return;
    }

    public void initialize(javax.security.auth.Subject, javax.security.auth.callback.CallbackHandler, java.util.Map, java.util.Map)
    {
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status $r3;
        javax.security.auth.callback.CallbackHandler r0;
        java.util.Map r5, r6;
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule r1;
        org.waveprotocol.box.server.persistence.AccountStore $r2;
        javax.security.auth.Subject r4;

        r1 := @this: org.waveprotocol.box.server.authentication.AccountStoreLoginModule;

        r4 := @parameter0: javax.security.auth.Subject;

        r0 := @parameter1: javax.security.auth.callback.CallbackHandler;

        r5 := @parameter2: java.util.Map;

        r6 := @parameter3: java.util.Map;

        staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r0, "Callback handler null");

        $r2 = staticinvoke <org.waveprotocol.box.server.authentication.AccountStoreHolder: org.waveprotocol.box.server.persistence.AccountStore getAccountStore()>();

        r1.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.persistence.AccountStore accountStore> = $r2;

        $r3 = <org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status NOT>;

        r1.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status> = $r3;

        r1.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.Subject subject> = r4;

        r1.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.callback.CallbackHandler callbackHandler> = r0;

        return;
    }

    public boolean login() throws javax.security.auth.login.LoginException
    {
        javax.security.auth.login.LoginException $r25, $r28, $r36;
        javax.security.auth.callback.UnsupportedCallbackException $r27;
        org.waveprotocol.wave.model.wave.ParticipantId $r6, r38;
        javax.security.auth.callback.CallbackHandler $r4;
        org.waveprotocol.wave.util.logging.Log $r21;
        boolean $z0, $z1, $z2, z3;
        javax.security.auth.callback.PasswordCallback $r1;
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status $r13;
        org.waveprotocol.box.server.authentication.ParticipantPrincipal $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r18, $r20, $r22, $r23, $r29, $r30, $r33;
        javax.security.auth.callback.Callback $r31;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r26;
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule r3;
        org.waveprotocol.box.server.account.AccountData $r8;
        org.waveprotocol.box.server.account.HumanAccountData $r10;
        org.waveprotocol.box.server.persistence.PersistenceException $r19;
        javax.security.auth.callback.Callback[] $r2;
        java.lang.String $r5, $r17, $r24, $r32, $r34, $r37, r39;
        java.io.IOException $r35;
        javax.security.auth.callback.NameCallback $r0;
        char[] $r9;
        org.waveprotocol.box.server.persistence.AccountStore $r7;
        org.waveprotocol.box.server.authentication.PasswordDigest $r11;

        r3 := @this: org.waveprotocol.box.server.authentication.AccountStoreLoginModule;

        $r0 = new javax.security.auth.callback.NameCallback;

        specialinvoke $r0.<javax.security.auth.callback.NameCallback: void <init>(java.lang.String)>("Username");

        $r1 = new javax.security.auth.callback.PasswordCallback;

        specialinvoke $r1.<javax.security.auth.callback.PasswordCallback: void <init>(java.lang.String,boolean)>("Password", 0);

        $r2 = newarray (javax.security.auth.callback.Callback)[2];

        $r2[0] = $r0;

        $r2[1] = $r1;

     label01:
        $r4 = r3.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.callback.CallbackHandler callbackHandler>;

        interfaceinvoke $r4.<javax.security.auth.callback.CallbackHandler: void handle(javax.security.auth.callback.Callback[])>($r2);

     label02:
        goto label05;

     label03:
        $r35 := @caughtexception;

        $r36 = new javax.security.auth.login.LoginException;

        $r37 = virtualinvoke $r35.<java.io.IOException: java.lang.String toString()>();

        specialinvoke $r36.<javax.security.auth.login.LoginException: void <init>(java.lang.String)>($r37);

        throw $r36;

     label04:
        $r27 := @caughtexception;

        $r28 = new javax.security.auth.login.LoginException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Error: ");

        $r31 = virtualinvoke $r27.<javax.security.auth.callback.UnsupportedCallbackException: javax.security.auth.callback.Callback getCallback()>();

        $r32 = virtualinvoke $r31.<java.lang.Object: java.lang.String toString()>();

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<javax.security.auth.login.LoginException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label05:
        r38 = null;

        $r5 = virtualinvoke $r0.<javax.security.auth.callback.NameCallback: java.lang.String getName()>();

        r39 = $r5;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z0 != 0 goto label06;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r17 = staticinvoke <org.waveprotocol.box.server.authentication.AccountStoreHolder: java.lang.String getDefaultDomain()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        r39 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label06:
        $r6 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>(r39);

        r38 = $r6;

        $r7 = r3.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        $r8 = interfaceinvoke $r7.<org.waveprotocol.box.server.persistence.AccountStore: org.waveprotocol.box.server.account.AccountData getAccount(org.waveprotocol.wave.model.wave.ParticipantId)>($r6);

        $r9 = virtualinvoke $r1.<javax.security.auth.callback.PasswordCallback: char[] getPassword()>();

        if $r8 != null goto label07;

        z3 = 0;

        goto label11;

     label07:
        $z1 = interfaceinvoke $r8.<org.waveprotocol.box.server.account.AccountData: boolean isHuman()>();

        if $z1 != 0 goto label08;

        z3 = 0;

        goto label11;

     label08:
        if $r9 != null goto label09;

        z3 = 0;

        goto label11;

     label09:
        $r10 = interfaceinvoke $r8.<org.waveprotocol.box.server.account.AccountData: org.waveprotocol.box.server.account.HumanAccountData asHuman()>();

        $r11 = interfaceinvoke $r10.<org.waveprotocol.box.server.account.HumanAccountData: org.waveprotocol.box.server.authentication.PasswordDigest getPasswordDigest()>();

        $z2 = virtualinvoke $r11.<org.waveprotocol.box.server.authentication.PasswordDigest: boolean verify(char[])>($r9);

        if $z2 != 0 goto label10;

        z3 = 0;

        goto label11;

     label10:
        z3 = 1;

     label11:
        goto label14;

     label12:
        $r26 := @caughtexception;

        z3 = 0;

        goto label14;

     label13:
        $r19 := @caughtexception;

        $r21 = r3.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.wave.util.logging.Log LOG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to retreive account data for ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r38);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<org.waveprotocol.wave.util.logging.Log: void severe(java.lang.String,java.lang.Throwable)>($r24, $r19);

        $r25 = new javax.security.auth.login.LoginException;

        specialinvoke $r25.<javax.security.auth.login.LoginException: void <init>(java.lang.String)>("An unexpected error occured while trying to retrieve account information!");

        throw $r25;

     label14:
        virtualinvoke $r1.<javax.security.auth.callback.PasswordCallback: void clearPassword()>();

        if z3 == 0 goto label15;

        $r12 = new org.waveprotocol.box.server.authentication.ParticipantPrincipal;

        specialinvoke $r12.<org.waveprotocol.box.server.authentication.ParticipantPrincipal: void <init>(org.waveprotocol.wave.model.wave.ParticipantId)>(r38);

        r3.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.ParticipantPrincipal principal> = $r12;

        $r13 = <org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status OK>;

        r3.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status> = $r13;

        return 1;

     label15:
        return 0;

        catch java.io.IOException from label01 to label02 with label03;
        catch javax.security.auth.callback.UnsupportedCallbackException from label01 to label02 with label04;
        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label06 to label11 with label12;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label06 to label11 with label13;
    }

    public boolean commit()
    {
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status $r1, $r2, $r7;
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule r0;
        java.util.Set $r5;
        org.waveprotocol.box.server.authentication.ParticipantPrincipal $r6;
        javax.security.auth.Subject $r3, $r4;

        r0 := @this: org.waveprotocol.box.server.authentication.AccountStoreLoginModule;

        $r2 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status>;

        $r1 = <org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status NOT>;

        if $r2 != $r1 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.Subject subject>;

        if $r3 != null goto label2;

        return 0;

     label2:
        $r4 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.Subject subject>;

        $r5 = virtualinvoke $r4.<javax.security.auth.Subject: java.util.Set getPrincipals()>();

        $r6 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.ParticipantPrincipal principal>;

        interfaceinvoke $r5.<java.util.Set: boolean add(java.lang.Object)>($r6);

        $r7 = <org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status COMMIT>;

        r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status> = $r7;

        return 1;
    }

    public boolean abort()
    {
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status $r6;
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule r0;
        org.waveprotocol.box.server.authentication.ParticipantPrincipal $r2, $r5;
        java.util.Set $r4;
        javax.security.auth.Subject $r1, $r3;

        r0 := @this: org.waveprotocol.box.server.authentication.AccountStoreLoginModule;

        $r1 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.Subject subject>;

        if $r1 == null goto label1;

        $r2 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.ParticipantPrincipal principal>;

        if $r2 == null goto label1;

        $r3 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.Subject subject>;

        $r4 = virtualinvoke $r3.<javax.security.auth.Subject: java.util.Set getPrincipals()>();

        $r5 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.ParticipantPrincipal principal>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>($r5);

     label1:
        r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.ParticipantPrincipal principal> = null;

        $r6 = <org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status NOT>;

        r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status> = $r6;

        return 1;
    }

    public boolean logout()
    {
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status $r4;
        org.waveprotocol.box.server.authentication.AccountStoreLoginModule r0;
        java.util.Set $r2;
        org.waveprotocol.box.server.authentication.ParticipantPrincipal $r3;
        javax.security.auth.Subject $r1;

        r0 := @this: org.waveprotocol.box.server.authentication.AccountStoreLoginModule;

        $r1 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: javax.security.auth.Subject subject>;

        $r2 = virtualinvoke $r1.<javax.security.auth.Subject: java.util.Set getPrincipals()>();

        $r3 = r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.ParticipantPrincipal principal>;

        interfaceinvoke $r2.<java.util.Set: boolean remove(java.lang.Object)>($r3);

        $r4 = <org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status NOT>;

        r0.<org.waveprotocol.box.server.authentication.AccountStoreLoginModule: org.waveprotocol.box.server.authentication.AccountStoreLoginModule$Status status> = $r4;

        return 1;
    }
}
