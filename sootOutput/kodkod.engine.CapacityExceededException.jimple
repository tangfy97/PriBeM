public final class kodkod.engine.CapacityExceededException extends java.lang.RuntimeException
{
    private static final long serialVersionUID;
    private final kodkod.util.ints.IntVector dims;

    public void <init>(kodkod.util.ints.IntVector)
    {
        kodkod.util.ints.IntVector r1;
        kodkod.engine.CapacityExceededException r0;

        r0 := @this: kodkod.engine.CapacityExceededException;

        r1 := @parameter0: kodkod.util.ints.IntVector;

        specialinvoke r0.<java.lang.RuntimeException: void <init>()>();

        r0.<kodkod.engine.CapacityExceededException: kodkod.util.ints.IntVector dims> = r1;

        return;
    }

    public void <init>(java.lang.String, kodkod.util.ints.IntVector)
    {
        java.lang.String r1;
        kodkod.util.ints.IntVector r2;
        kodkod.engine.CapacityExceededException r0;

        r0 := @this: kodkod.engine.CapacityExceededException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: kodkod.util.ints.IntVector;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String)>(r1);

        r0.<kodkod.engine.CapacityExceededException: kodkod.util.ints.IntVector dims> = r2;

        return;
    }

    public void <init>(java.lang.Throwable, kodkod.util.ints.IntVector)
    {
        java.lang.Throwable r1;
        kodkod.util.ints.IntVector r2;
        kodkod.engine.CapacityExceededException r0;

        r0 := @this: kodkod.engine.CapacityExceededException;

        r1 := @parameter0: java.lang.Throwable;

        r2 := @parameter1: kodkod.util.ints.IntVector;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(r1);

        r0.<kodkod.engine.CapacityExceededException: kodkod.util.ints.IntVector dims> = r2;

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable, kodkod.util.ints.IntVector)
    {
        java.lang.Throwable r2;
        kodkod.util.ints.IntVector r3;
        kodkod.engine.CapacityExceededException r0;
        java.lang.String r1;

        r0 := @this: kodkod.engine.CapacityExceededException;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        r3 := @parameter2: kodkod.util.ints.IntVector;

        specialinvoke r0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(r1, r2);

        r0.<kodkod.engine.CapacityExceededException: kodkod.util.ints.IntVector dims> = r3;

        return;
    }

    public final kodkod.util.ints.IntVector dims()
    {
        kodkod.util.ints.IntVector $r1;
        kodkod.engine.CapacityExceededException r0;

        r0 := @this: kodkod.engine.CapacityExceededException;

        $r1 = r0.<kodkod.engine.CapacityExceededException: kodkod.util.ints.IntVector dims>;

        return $r1;
    }

    public static void <clinit>()
    {
        <kodkod.engine.CapacityExceededException: long serialVersionUID> = -8098615204149641969L;

        return;
    }
}
