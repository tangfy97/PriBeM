class org.apache.commons.collections.map.MultiValueMap$ValuesIterator extends java.lang.Object implements java.util.Iterator
{
    private final java.lang.Object key;
    private final java.util.Collection values;
    private final java.util.Iterator iterator;
    private final org.apache.commons.collections.map.MultiValueMap this$0;

    public void <init>(org.apache.commons.collections.map.MultiValueMap, java.lang.Object)
    {
        org.apache.commons.collections.map.MultiValueMap r1;
        java.util.Iterator $r5;
        org.apache.commons.collections.map.MultiValueMap$ValuesIterator r0;
        java.util.Collection $r3, $r4;
        java.lang.Object r2;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$ValuesIterator;

        r1 := @parameter0: org.apache.commons.collections.map.MultiValueMap;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: org.apache.commons.collections.map.MultiValueMap this$0> = r1;

        r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.lang.Object key> = r2;

        $r3 = virtualinvoke r1.<org.apache.commons.collections.map.MultiValueMap: java.util.Collection getCollection(java.lang.Object)>(r2);

        r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Collection values> = $r3;

        $r4 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Collection values>;

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

        r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Iterator iterator> = $r5;

        return;
    }

    public void remove()
    {
        org.apache.commons.collections.map.MultiValueMap $r4;
        java.util.Iterator $r1;
        org.apache.commons.collections.map.MultiValueMap$ValuesIterator r0;
        java.util.Collection $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$ValuesIterator;

        $r1 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Iterator iterator>;

        interfaceinvoke $r1.<java.util.Iterator: void remove()>();

        $r2 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Collection values>;

        $z0 = interfaceinvoke $r2.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: org.apache.commons.collections.map.MultiValueMap this$0>;

        $r3 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.lang.Object key>;

        virtualinvoke $r4.<org.apache.commons.collections.map.MultiValueMap: java.lang.Object remove(java.lang.Object)>($r3);

     label1:
        return;
    }

    public boolean hasNext()
    {
        java.util.Iterator $r1;
        org.apache.commons.collections.map.MultiValueMap$ValuesIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$ValuesIterator;

        $r1 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Iterator iterator>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Object $r2;
        java.util.Iterator $r1;
        org.apache.commons.collections.map.MultiValueMap$ValuesIterator r0;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$ValuesIterator;

        $r1 = r0.<org.apache.commons.collections.map.MultiValueMap$ValuesIterator: java.util.Iterator iterator>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        return $r2;
    }
}
