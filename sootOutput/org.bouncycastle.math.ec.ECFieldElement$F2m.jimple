public class org.bouncycastle.math.ec.ECFieldElement$F2m extends org.bouncycastle.math.ec.ECFieldElement
{
    public static final int GNB;
    public static final int TPB;
    public static final int PPB;
    private int representation;
    private int m;
    private int k1;
    private int k2;
    private int k3;
    private org.bouncycastle.math.ec.IntArray x;
    private int t;

    public void <init>(int, int, int, int, java.math.BigInteger)
    {
        java.lang.IllegalArgumentException $r3, $r4, $r5;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;
        org.bouncycastle.math.ec.IntArray $r1;
        int i0, $i1, $i2, $i3, i4, i5, $i6, i7;
        java.math.BigInteger r2;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        r2 := @parameter4: java.math.BigInteger;

        specialinvoke r0.<org.bouncycastle.math.ec.ECFieldElement: void <init>()>();

        $i1 = i0 + 31;

        $i2 = $i1 >> 5;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int t> = $i2;

        $r1 = new org.bouncycastle.math.ec.IntArray;

        $i3 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int t>;

        specialinvoke $r1.<org.bouncycastle.math.ec.IntArray: void <init>(java.math.BigInteger,int)>(r2, $i3);

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x> = $r1;

        if i4 != 0 goto label1;

        if i5 != 0 goto label1;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation> = 2;

        goto label4;

     label1:
        if i4 < i5 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("k2 must be smaller than k3");

        throw $r5;

     label2:
        if i4 > 0 goto label3;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("k2 must be larger than 0");

        throw $r4;

     label3:
        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation> = 3;

     label4:
        $i6 = virtualinvoke r2.<java.math.BigInteger: int signum()>();

        if $i6 >= 0 goto label5;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("x value cannot be negative");

        throw $r3;

     label5:
        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m> = i0;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1> = i7;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2> = i4;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3> = i5;

        return;
    }

    public void <init>(int, int, java.math.BigInteger)
    {
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;
        int i0, i1;
        java.math.BigInteger r1;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.math.BigInteger;

        specialinvoke r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: void <init>(int,int,int,int,java.math.BigInteger)>(i0, i1, 0, 0, r1);

        return;
    }

    private void <init>(int, int, int, int, org.bouncycastle.math.ec.IntArray)
    {
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;
        org.bouncycastle.math.ec.IntArray r1;
        int i0, $i1, $i2, i3, i4, i5;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        r1 := @parameter4: org.bouncycastle.math.ec.IntArray;

        specialinvoke r0.<org.bouncycastle.math.ec.ECFieldElement: void <init>()>();

        $i1 = i0 + 31;

        $i2 = $i1 >> 5;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int t> = $i2;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x> = r1;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m> = i0;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1> = i3;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2> = i4;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3> = i5;

        if i4 != 0 goto label1;

        if i5 != 0 goto label1;

        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation> = 2;

        goto label2;

     label1:
        r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation> = 3;

     label2:
        return;
    }

    public java.math.BigInteger toBigInteger()
    {
        java.math.BigInteger $r2;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;
        org.bouncycastle.math.ec.IntArray $r1;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.math.ec.IntArray: java.math.BigInteger toBigInteger()>();

        return $r2;
    }

    public java.lang.String getFieldName()
    {
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        return "F2m";
    }

    public int getFieldSize()
    {
        int $i0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        return $i0;
    }

    public static void checkFieldElements(org.bouncycastle.math.ec.ECFieldElement, org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r0, r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r1, $r5, $r6;
        org.bouncycastle.math.ec.ECFieldElement$F2m r3, r4;

        r0 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        r2 := @parameter1: org.bouncycastle.math.ec.ECFieldElement;

        $z0 = r0 instanceof org.bouncycastle.math.ec.ECFieldElement$F2m;

        if $z0 == 0 goto label1;

        $z1 = r2 instanceof org.bouncycastle.math.ec.ECFieldElement$F2m;

        if $z1 != 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field elements are not both instances of ECFieldElement.F2m");

        throw $r1;

     label2:
        r3 = (org.bouncycastle.math.ec.ECFieldElement$F2m) r0;

        r4 = (org.bouncycastle.math.ec.ECFieldElement$F2m) r2;

        $i1 = r3.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i0 = r4.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        if $i1 != $i0 goto label3;

        $i3 = r3.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i2 = r4.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        if $i3 != $i2 goto label3;

        $i5 = r3.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i4 = r4.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        if $i5 != $i4 goto label3;

        $i7 = r3.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        $i6 = r4.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        if $i7 == $i6 goto label4;

     label3:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Field elements are not elements of the same field F2m");

        throw $r6;

     label4:
        $i9 = r3.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation>;

        $i8 = r4.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation>;

        if $i9 == $i8 goto label5;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("One of the field elements are not elements has incorrect representation");

        throw $r5;

     label5:
        return;
    }

    public org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r4;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0, r5, $r7;
        org.bouncycastle.math.ec.IntArray $r1, r3, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        r4 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.math.ec.IntArray: java.lang.Object clone()>();

        r3 = (org.bouncycastle.math.ec.IntArray) $r2;

        r5 = (org.bouncycastle.math.ec.ECFieldElement$F2m) r4;

        $r6 = r5.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        virtualinvoke r3.<org.bouncycastle.math.ec.IntArray: void addShifted(org.bouncycastle.math.ec.IntArray,int)>($r6, 0);

        $r7 = new org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i3 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i2 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        specialinvoke $r7.<org.bouncycastle.math.ec.ECFieldElement$F2m: void <init>(int,int,int,int,org.bouncycastle.math.ec.IntArray)>($i3, $i2, $i1, $i0, r3);

        return $r7;
    }

    public org.bouncycastle.math.ec.ECFieldElement subtract(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r1, $r2;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        r1 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r2 = virtualinvoke r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.ECFieldElement add(org.bouncycastle.math.ec.ECFieldElement)>(r1);

        return $r2;
    }

    public org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement r0;
        int[] $r6;
        org.bouncycastle.math.ec.IntArray $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.bouncycastle.math.ec.ECFieldElement$F2m r1, r2, $r7;

        r2 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        r0 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        r1 = (org.bouncycastle.math.ec.ECFieldElement$F2m) r0;

        $r4 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $r3 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $i0 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $r5 = virtualinvoke $r4.<org.bouncycastle.math.ec.IntArray: org.bouncycastle.math.ec.IntArray multiply(org.bouncycastle.math.ec.IntArray,int)>($r3, $i0);

        $i4 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $r6 = newarray (int)[3];

        $i1 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $r6[0] = $i1;

        $i2 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $r6[1] = $i2;

        $i3 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        $r6[2] = $i3;

        virtualinvoke $r5.<org.bouncycastle.math.ec.IntArray: void reduce(int,int[])>($i4, $r6);

        $r7 = new org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i8 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i7 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i6 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i5 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        specialinvoke $r7.<org.bouncycastle.math.ec.ECFieldElement$F2m: void <init>(int,int,int,int,org.bouncycastle.math.ec.IntArray)>($i8, $i7, $i6, $i5, $r5);

        return $r7;
    }

    public org.bouncycastle.math.ec.ECFieldElement divide(org.bouncycastle.math.ec.ECFieldElement)
    {
        org.bouncycastle.math.ec.ECFieldElement$F2m r2;
        org.bouncycastle.math.ec.ECFieldElement r0, $r1, $r3;

        r2 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        r0 := @parameter0: org.bouncycastle.math.ec.ECFieldElement;

        $r1 = virtualinvoke r0.<org.bouncycastle.math.ec.ECFieldElement: org.bouncycastle.math.ec.ECFieldElement invert()>();

        $r3 = virtualinvoke r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.ECFieldElement multiply(org.bouncycastle.math.ec.ECFieldElement)>($r1);

        return $r3;
    }

    public org.bouncycastle.math.ec.ECFieldElement negate()
    {
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        return r0;
    }

    public org.bouncycastle.math.ec.ECFieldElement square()
    {
        int[] $r3;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0, $r4;
        org.bouncycastle.math.ec.IntArray $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.math.ec.IntArray: org.bouncycastle.math.ec.IntArray square(int)>($i0);

        $i4 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $r3 = newarray (int)[3];

        $i1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $r3[0] = $i1;

        $i2 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $r3[1] = $i2;

        $i3 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        $r3[2] = $i3;

        virtualinvoke $r2.<org.bouncycastle.math.ec.IntArray: void reduce(int,int[])>($i4, $r3);

        $r4 = new org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i8 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i7 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i6 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i5 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        specialinvoke $r4.<org.bouncycastle.math.ec.ECFieldElement$F2m: void <init>(int,int,int,int,org.bouncycastle.math.ec.IntArray)>($i8, $i7, $i6, $i5, $r2);

        return $r4;
    }

    public org.bouncycastle.math.ec.ECFieldElement invert()
    {
        org.bouncycastle.math.ec.IntArray $r1, $r3, $r4, $r5, $r7, $r8, r9, r10, r11, r12, r13, r14;
        boolean $z0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0, $r6;
        java.lang.Object $r2;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.math.ec.IntArray: java.lang.Object clone()>();

        r9 = (org.bouncycastle.math.ec.IntArray) $r2;

        $r3 = new org.bouncycastle.math.ec.IntArray;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int t>;

        specialinvoke $r3.<org.bouncycastle.math.ec.IntArray: void <init>(int)>($i0);

        r10 = $r3;

        $i1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        virtualinvoke $r3.<org.bouncycastle.math.ec.IntArray: void setBit(int)>($i1);

        virtualinvoke $r3.<org.bouncycastle.math.ec.IntArray: void setBit(int)>(0);

        $i2 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        virtualinvoke $r3.<org.bouncycastle.math.ec.IntArray: void setBit(int)>($i2);

        $i3 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation>;

        if $i3 != 3 goto label1;

        $i14 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        virtualinvoke $r3.<org.bouncycastle.math.ec.IntArray: void setBit(int)>($i14);

        $i15 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        virtualinvoke $r3.<org.bouncycastle.math.ec.IntArray: void setBit(int)>($i15);

     label1:
        $r4 = new org.bouncycastle.math.ec.IntArray;

        $i4 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int t>;

        specialinvoke $r4.<org.bouncycastle.math.ec.IntArray: void <init>(int)>($i4);

        r11 = $r4;

        virtualinvoke $r4.<org.bouncycastle.math.ec.IntArray: void setBit(int)>(0);

        $r5 = new org.bouncycastle.math.ec.IntArray;

        $i5 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int t>;

        specialinvoke $r5.<org.bouncycastle.math.ec.IntArray: void <init>(int)>($i5);

        r12 = $r5;

     label2:
        $z0 = virtualinvoke r9.<org.bouncycastle.math.ec.IntArray: boolean isZero()>();

        if $z0 != 0 goto label4;

        $i10 = virtualinvoke r9.<org.bouncycastle.math.ec.IntArray: int bitLength()>();

        $i11 = virtualinvoke r10.<org.bouncycastle.math.ec.IntArray: int bitLength()>();

        i16 = $i10 - $i11;

        if i16 >= 0 goto label3;

        r13 = r9;

        r9 = r10;

        r10 = r13;

        r14 = r11;

        r11 = r12;

        r12 = r14;

        i16 = neg i16;

     label3:
        $i12 = i16 >> 5;

        $i13 = i16 & 31;

        $r7 = virtualinvoke r10.<org.bouncycastle.math.ec.IntArray: org.bouncycastle.math.ec.IntArray shiftLeft(int)>($i13);

        virtualinvoke r9.<org.bouncycastle.math.ec.IntArray: void addShifted(org.bouncycastle.math.ec.IntArray,int)>($r7, $i12);

        $r8 = virtualinvoke r12.<org.bouncycastle.math.ec.IntArray: org.bouncycastle.math.ec.IntArray shiftLeft(int)>($i13);

        virtualinvoke r11.<org.bouncycastle.math.ec.IntArray: void addShifted(org.bouncycastle.math.ec.IntArray,int)>($r8, $i12);

        goto label2;

     label4:
        $r6 = new org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i9 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i8 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i7 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i6 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        specialinvoke $r6.<org.bouncycastle.math.ec.ECFieldElement$F2m: void <init>(int,int,int,int,org.bouncycastle.math.ec.IntArray)>($i9, $i8, $i7, $i6, r12);

        return $r6;
    }

    public org.bouncycastle.math.ec.ECFieldElement sqrt()
    {
        java.lang.RuntimeException $r0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r1;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("Not implemented");

        throw $r0;
    }

    public int getRepresentation()
    {
        int $i0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation>;

        return $i0;
    }

    public int getM()
    {
        int $i0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        return $i0;
    }

    public int getK1()
    {
        int $i0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        return $i0;
    }

    public int getK2()
    {
        int $i0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        return $i0;
    }

    public int getK3()
    {
        int $i0;
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $i0 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.bouncycastle.math.ec.IntArray $r3, $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2;
        org.bouncycastle.math.ec.ECFieldElement$F2m r1, r2;
        java.lang.Object r0;

        r1 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.bouncycastle.math.ec.ECFieldElement$F2m;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.bouncycastle.math.ec.ECFieldElement$F2m) r0;

        $i1 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i0 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        if $i1 != $i0 goto label3;

        $i3 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i2 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        if $i3 != $i2 goto label3;

        $i5 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i4 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        if $i5 != $i4 goto label3;

        $i7 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        $i6 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        if $i7 != $i6 goto label3;

        $i9 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation>;

        $i8 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: int representation>;

        if $i9 != $i8 goto label3;

        $r4 = r1.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $r3 = r2.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $z1 = virtualinvoke $r4.<org.bouncycastle.math.ec.IntArray: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public int hashCode()
    {
        org.bouncycastle.math.ec.ECFieldElement$F2m r0;
        org.bouncycastle.math.ec.IntArray $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.bouncycastle.math.ec.ECFieldElement$F2m;

        $r1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: org.bouncycastle.math.ec.IntArray x>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.math.ec.IntArray: int hashCode()>();

        $i1 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int m>;

        $i3 = $i0 ^ $i1;

        $i2 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k1>;

        $i5 = $i3 ^ $i2;

        $i4 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k2>;

        $i7 = $i5 ^ $i4;

        $i6 = r0.<org.bouncycastle.math.ec.ECFieldElement$F2m: int k3>;

        $i8 = $i7 ^ $i6;

        return $i8;
    }

    public static void <clinit>()
    {
        <org.bouncycastle.math.ec.ECFieldElement$F2m: int PPB> = 3;

        <org.bouncycastle.math.ec.ECFieldElement$F2m: int TPB> = 2;

        <org.bouncycastle.math.ec.ECFieldElement$F2m: int GNB> = 1;

        return;
    }
}
