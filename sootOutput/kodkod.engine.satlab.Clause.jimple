public abstract class kodkod.engine.satlab.Clause extends java.lang.Object
{

    void <init>()
    {
        kodkod.engine.satlab.Clause r0;

        r0 := @this: kodkod.engine.satlab.Clause;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract int size();

    public abstract kodkod.util.ints.IntIterator literals();

    public abstract int maxVariable();

    public abstract int[] toArray(int[]);

    public int[] toArray()
    {
        int[] $r1, $r2;
        kodkod.engine.satlab.Clause r0;
        int $i0;

        r0 := @this: kodkod.engine.satlab.Clause;

        $i0 = virtualinvoke r0.<kodkod.engine.satlab.Clause: int size()>();

        $r1 = newarray (int)[$i0];

        $r2 = virtualinvoke r0.<kodkod.engine.satlab.Clause: int[] toArray(int[])>($r1);

        return $r2;
    }

    public abstract int numberOfAntecedents();

    public abstract java.util.Iterator antecedents();

    public boolean equals(java.lang.Object)
    {
        kodkod.util.ints.IntIterator $r8, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r3, $r4;
        kodkod.engine.satlab.Clause r1, r2, $r6;
        java.lang.Object r0, $r5, $r7;

        r1 := @this: kodkod.engine.satlab.Clause;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof kodkod.engine.satlab.Clause;

        if $z0 == 0 goto label9;

        r2 = (kodkod.engine.satlab.Clause) r0;

        $i0 = virtualinvoke r1.<kodkod.engine.satlab.Clause: int size()>();

        $i1 = virtualinvoke r2.<kodkod.engine.satlab.Clause: int size()>();

        if $i0 != $i1 goto label4;

        $r8 = virtualinvoke r1.<kodkod.engine.satlab.Clause: kodkod.util.ints.IntIterator literals()>();

        $r9 = virtualinvoke r1.<kodkod.engine.satlab.Clause: kodkod.util.ints.IntIterator literals()>();

        goto label3;

     label2:
        $i4 = interfaceinvoke $r8.<kodkod.util.ints.IntIterator: int next()>();

        $i5 = interfaceinvoke $r9.<kodkod.util.ints.IntIterator: int next()>();

        if $i4 == $i5 goto label3;

        return 0;

     label3:
        $z3 = interfaceinvoke $r8.<kodkod.util.ints.IntIterator: boolean hasNext()>();

        if $z3 != 0 goto label2;

     label4:
        $i2 = virtualinvoke r1.<kodkod.engine.satlab.Clause: int numberOfAntecedents()>();

        if $i2 <= 0 goto label7;

        $i3 = virtualinvoke r2.<kodkod.engine.satlab.Clause: int numberOfAntecedents()>();

        if $i2 != $i3 goto label7;

        $r3 = virtualinvoke r1.<kodkod.engine.satlab.Clause: java.util.Iterator antecedents()>();

        $r4 = virtualinvoke r2.<kodkod.engine.satlab.Clause: java.util.Iterator antecedents()>();

        goto label6;

     label5:
        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (kodkod.engine.satlab.Clause) $r5;

        $r7 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $z2 = virtualinvoke $r6.<kodkod.engine.satlab.Clause: boolean equals(java.lang.Object)>($r7);

        if $z2 != 0 goto label6;

        return 0;

     label6:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label5;

     label7:
        if $i2 != 0 goto label8;

        return 1;

     label8:
        return 0;

     label9:
        return 0;
    }

    public int hashCode()
    {
        java.util.Iterator $r2;
        kodkod.engine.satlab.Clause r0, $r5;
        kodkod.util.ints.IntIterator $r1;
        int[] $r3;
        int $i0, $i1, $i2, $i3, $i4, i5;
        java.lang.Object $r4;
        boolean $z0, $z1;

        r0 := @this: kodkod.engine.satlab.Clause;

        $i0 = virtualinvoke r0.<kodkod.engine.satlab.Clause: int size()>();

        $i1 = virtualinvoke r0.<kodkod.engine.satlab.Clause: int numberOfAntecedents()>();

        i5 = $i0 + $i1;

        $r1 = virtualinvoke r0.<kodkod.engine.satlab.Clause: kodkod.util.ints.IntIterator literals()>();

        goto label2;

     label1:
        $i2 = interfaceinvoke $r1.<kodkod.util.ints.IntIterator: int next()>();

        i5 = staticinvoke <kodkod.util.ints.Ints: int superFastHashIncremental(int,int)>($i2, i5);

     label2:
        $z0 = interfaceinvoke $r1.<kodkod.util.ints.IntIterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r2 = virtualinvoke r0.<kodkod.engine.satlab.Clause: java.util.Iterator antecedents()>();

        goto label4;

     label3:
        $r3 = newarray (int)[2];

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (kodkod.engine.satlab.Clause) $r4;

        $i3 = virtualinvoke $r5.<kodkod.engine.satlab.Clause: int hashCode()>();

        $r3[0] = $i3;

        $r3[1] = i5;

        i5 = staticinvoke <kodkod.util.ints.Ints: int superFastHash(int[])>($r3);

     label4:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $i4 = staticinvoke <kodkod.util.ints.Ints: int superFastHashAvalanche(int)>(i5);

        return $i4;
    }

    public java.lang.String toString()
    {
        kodkod.engine.satlab.Clause r1;
        int $i0, $i1;
        java.lang.StringBuilder $r0;
        java.lang.String $r3;
        kodkod.util.ints.IntIterator $r2;
        boolean $z0;

        r1 := @this: kodkod.engine.satlab.Clause;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = virtualinvoke r1.<kodkod.engine.satlab.Clause: int numberOfAntecedents()>();

        if $i0 != 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("AXIOM");

        goto label2;

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("RESOLVENT");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(". Literals: {");

        $r2 = virtualinvoke r1.<kodkod.engine.satlab.Clause: kodkod.util.ints.IntIterator literals()>();

        goto label4;

     label3:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i1 = interfaceinvoke $r2.<kodkod.util.ints.IntIterator: int next()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

     label4:
        $z0 = interfaceinvoke $r2.<kodkod.util.ints.IntIterator: boolean hasNext()>();

        if $z0 != 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" }");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
