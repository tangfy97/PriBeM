public class org.apache.xmlbeans.impl.jam.provider.ResourcePath extends java.lang.Object
{
    private java.io.File[] mFiles;

    public static org.apache.xmlbeans.impl.jam.provider.ResourcePath forFiles(java.io.File[])
    {
        org.apache.xmlbeans.impl.jam.provider.ResourcePath $r0;
        java.io.File[] r1;

        r1 := @parameter0: java.io.File[];

        $r0 = new org.apache.xmlbeans.impl.jam.provider.ResourcePath;

        specialinvoke $r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: void <init>(java.io.File[])>(r1);

        return $r0;
    }

    private void <init>(java.io.File[])
    {
        org.apache.xmlbeans.impl.jam.provider.ResourcePath r0;
        java.lang.IllegalArgumentException $r2;
        java.io.File[] r1;

        r0 := @this: org.apache.xmlbeans.impl.jam.provider.ResourcePath;

        r1 := @parameter0: java.io.File[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("null files");

        throw $r2;

     label1:
        r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles> = r1;

        return;
    }

    public java.net.URI[] toUriPath()
    {
        java.io.File $r5;
        java.net.URI[] r2;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.jam.provider.ResourcePath r0;
        java.net.URI $r6;
        java.io.File[] $r1, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.provider.ResourcePath;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $i0 = lengthof $r1;

        r2 = newarray (java.net.URI)[$i0];

        i2 = 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $r5 = $r4[i2];

        $r6 = virtualinvoke $r5.<java.io.File: java.net.URI toURI()>();

        r2[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.net.URL[] toUrlPath() throws java.net.MalformedURLException
    {
        java.net.URL $r6;
        java.io.File $r5;
        java.net.URL[] r2;
        int $i0, $i1, i2;
        org.apache.xmlbeans.impl.jam.provider.ResourcePath r0;
        java.io.File[] $r1, $r3, $r4;

        r0 := @this: org.apache.xmlbeans.impl.jam.provider.ResourcePath;

        $r1 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $i0 = lengthof $r1;

        r2 = newarray (java.net.URL)[$i0];

        i2 = 0;

     label1:
        $r3 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $i1 = lengthof $r3;

        if i2 >= $i1 goto label2;

        $r4 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $r5 = $r4[i2];

        $r6 = virtualinvoke $r5.<java.io.File: java.net.URL toURL()>();

        r2[i2] = $r6;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r2;
    }

    public java.io.InputStream findInPath(java.lang.String)
    {
        java.io.FileInputStream $r6;
        java.io.File $r2, $r5;
        java.io.FileNotFoundException $r7;
        int $i0, i1;
        org.apache.xmlbeans.impl.jam.provider.ResourcePath r0;
        java.lang.String r4;
        java.io.File[] $r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.jam.provider.ResourcePath;

        r4 := @parameter0: java.lang.String;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label7;

        $r2 = new java.io.File;

        $r3 = r0.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $r5 = $r3[i1];

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r5, r4);

     label2:
        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $r6 = new java.io.FileInputStream;

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

     label3:
        return $r6;

     label4:
        goto label6;

     label5:
        $r7 := @caughtexception;

        virtualinvoke $r7.<java.io.FileNotFoundException: void printStackTrace()>();

     label6:
        i1 = i1 + 1;

        goto label1;

     label7:
        return null;

        catch java.io.FileNotFoundException from label2 to label3 with label5;
    }

    public java.lang.String toString()
    {
        java.io.StringWriter $r7;
        char $c1;
        java.io.File $r5;
        int $i0, i2, $i3;
        org.apache.xmlbeans.impl.jam.provider.ResourcePath r1;
        java.lang.String $r3, $r6;
        java.io.File[] $r2, $r4;

        r1 := @this: org.apache.xmlbeans.impl.jam.provider.ResourcePath;

        $r7 = new java.io.StringWriter;

        specialinvoke $r7.<java.io.StringWriter: void <init>()>();

        i2 = 0;

     label1:
        $r2 = r1.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $i0 = lengthof $r2;

        if i2 >= $i0 goto label2;

        $r4 = r1.<org.apache.xmlbeans.impl.jam.provider.ResourcePath: java.io.File[] mFiles>;

        $r5 = $r4[i2];

        $r6 = virtualinvoke $r5.<java.io.File: java.lang.String getAbsolutePath()>();

        virtualinvoke $r7.<java.io.StringWriter: void write(java.lang.String)>($r6);

        $c1 = <java.io.File: char pathSeparatorChar>;

        $i3 = (int) $c1;

        virtualinvoke $r7.<java.io.StringWriter: void write(int)>($i3);

        i2 = i2 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r7.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }
}
