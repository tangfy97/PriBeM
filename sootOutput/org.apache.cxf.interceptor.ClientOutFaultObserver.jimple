public class org.apache.cxf.interceptor.ClientOutFaultObserver extends org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver
{

    public void <init>(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.interceptor.ClientOutFaultObserver r0;

        r0 := @this: org.apache.cxf.interceptor.ClientOutFaultObserver;

        r1 := @parameter0: org.apache.cxf.Bus;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractFaultChainInitiatorObserver: void <init>(org.apache.cxf.Bus)>(r1);

        return;
    }

    protected java.util.SortedSet getPhases()
    {
        org.apache.cxf.Bus $r1;
        org.apache.cxf.phase.PhaseManager $r3;
        java.util.SortedSet $r4;
        org.apache.cxf.interceptor.ClientOutFaultObserver r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.cxf.interceptor.ClientOutFaultObserver;

        $r1 = virtualinvoke r0.<org.apache.cxf.interceptor.ClientOutFaultObserver: org.apache.cxf.Bus getBus()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        $r3 = (org.apache.cxf.phase.PhaseManager) $r2;

        $r4 = interfaceinvoke $r3.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        return $r4;
    }

    public void onMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.endpoint.ClientCallback r7;
        org.apache.cxf.interceptor.ClientOutFaultObserver r16;
        java.util.Map $r11, $r12, $r14, $r15;
        java.lang.Boolean $r2;
        boolean $z0;
        org.apache.cxf.message.Message r0, $r9;
        org.apache.cxf.message.Exchange $r5, $r8;
        java.lang.Exception r4;
        java.lang.Object $r1, $r3, $r6, $r10, $r13;

        r16 := @this: org.apache.cxf.interceptor.ClientOutFaultObserver;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.message.inbound");

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r4 = (java.lang.Exception) $r3;

        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r6 = interfaceinvoke $r5.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/endpoint/ClientCallback;");

        r7 = (org.apache.cxf.endpoint.ClientCallback) $r6;

        if r7 == null goto label2;

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getOutMessage()>();

        $r10 = interfaceinvoke $r9.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.invocation.context");

        $r11 = (java.util.Map) $r10;

        $r12 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r11);

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>("ResponseContext");

        $r14 = (java.util.Map) $r13;

        $r15 = staticinvoke <org.apache.cxf.helpers.CastUtils: java.util.Map cast(java.util.Map)>($r14);

        virtualinvoke r7.<org.apache.cxf.endpoint.ClientCallback: void handleException(java.util.Map,java.lang.Throwable)>($r15, r4);

     label2:
        return;
    }

    protected boolean isOutboundObserver()
    {
        org.apache.cxf.interceptor.ClientOutFaultObserver r0;

        r0 := @this: org.apache.cxf.interceptor.ClientOutFaultObserver;

        return 1;
    }
}
