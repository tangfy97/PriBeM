public class org.apache.lucene.analysis.path.PathHierarchyTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    private static final int DEFAULT_BUFFER_SIZE;
    public static final char DEFAULT_DELIMITER;
    public static final int DEFAULT_SKIP;
    private final char delimiter;
    private final char replacement;
    private final int skip;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;
    private final org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt;
    private int startPosition;
    private int skipped;
    private boolean endDelimiter;
    private java.lang.StringBuilder resultToken;
    private int charsRead;

    public void <init>(java.io.Reader)
    {
        java.io.Reader r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, 47, 47, 0);

        return;
    }

    public void <init>(java.io.Reader, int)
    {
        int i0;
        java.io.Reader r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, 47, 47, i0);

        return;
    }

    public void <init>(java.io.Reader, int, char)
    {
        int i0;
        char c1;
        java.io.Reader r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, i0, c1, c1, 0);

        return;
    }

    public void <init>(java.io.Reader, char, char)
    {
        char c0, c1;
        java.io.Reader r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, c0, c1, 0);

        return;
    }

    public void <init>(java.io.Reader, char, char, int)
    {
        int i2;
        char c0, c1;
        java.io.Reader r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        c0 := @parameter1: char;

        c1 := @parameter2: char;

        i2 := @parameter3: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(java.io.Reader,int,char,char,int)>(r1, 1024, c0, c1, i2);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, char, char, int)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        int i2;
        char c0, c1;
        java.io.Reader r2;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        c0 := @parameter2: char;

        c1 := @parameter3: char;

        i2 := @parameter4: int;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader,int,char,char,int)>(r1, r2, 1024, c0, c1, i2);

        return;
    }

    public void <init>(java.io.Reader, int, char, char, int)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory $r2;
        int i0, i3;
        char c1, c2;
        java.io.Reader r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: java.io.Reader;

        i0 := @parameter1: int;

        c1 := @parameter2: char;

        c2 := @parameter3: char;

        i3 := @parameter4: int;

        $r2 = <org.apache.lucene.util.AttributeSource$AttributeFactory: org.apache.lucene.util.AttributeSource$AttributeFactory DEFAULT_ATTRIBUTE_FACTORY>;

        specialinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader,int,char,char,int)>($r2, r1, i0, c1, c2, i3);

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader, int, char, char, int)
    {
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;
        int i0, i1;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r4, $r9;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r8;
        char c2, c3;
        java.io.Reader r2;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r6;
        java.lang.IllegalArgumentException $r11, $r12;
        java.lang.StringBuilder $r10;
        org.apache.lucene.util.Attribute $r3, $r5, $r7;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        i0 := @parameter2: int;

        c2 := @parameter3: char;

        c3 := @parameter4: char;

        i1 := @parameter5: int;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        $r3 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r4 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r3;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r4;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r5;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r6;

        $r7 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/PositionIncrementAttribute;");

        $r8 = (org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute) $r7;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt> = $r8;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition> = 0;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped> = 0;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: boolean endDelimiter> = 0;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int charsRead> = 0;

        if i0 >= 0 goto label1;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bufferSize cannot be negative");

        throw $r12;

     label1:
        if i1 >= 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("skip cannot be negative");

        throw $r11;

     label2:
        $r9 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r9.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(i0);

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char delimiter> = c2;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char replacement> = c3;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skip> = i1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(int)>(i0);

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken> = $r10;

        return;
    }

    public final boolean incrementToken() throws java.io.IOException
    {
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute $r4, $r23;
        java.io.Reader $r24;
        java.lang.StringBuilder $r1, $r3, $r5, $r8, $r10, $r14, $r17, $r19;
        char[] $r11, $r20;
        boolean $z0, z1, z2, z3, z4;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r7, $r16;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, i40, $i41, i42, i44, $i45, $i46;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r2, $r6, $r9, $r12, $r13, $r15, $r18, $r21, $r22;
        char $c11, $c16, $c25, $c38, $c39, $c43;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: void clearAttributes()>();

        $r2 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r1 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(java.lang.StringBuilder)>($r1);

        $r3 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $i0 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>();

        if $i0 != 0 goto label01;

        $r23 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt>;

        interfaceinvoke $r23.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>(1);

        goto label02;

     label01:
        $r4 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute posAtt>;

        interfaceinvoke $r4.<org.apache.lucene.analysis.tokenattributes.PositionIncrementAttribute: void setPositionIncrement(int)>(0);

     label02:
        i40 = 0;

        z1 = 0;

        z4 = 0;

        z3 = 0;

        z2 = 0;

        $z0 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: boolean endDelimiter>;

        if $z0 == 0 goto label03;

        $r22 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $c39 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char replacement>;

        interfaceinvoke $r22.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(char)>($c39);

        i40 = 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: boolean endDelimiter> = 0;

        z1 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

     label03:
        $r24 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.io.Reader input>;

        $i41 = virtualinvoke $r24.<java.io.Reader: int read()>();

        if $i41 < 0 goto label04;

        $i9 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int charsRead>;

        $i10 = $i9 + 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int charsRead> = $i10;

        goto label07;

     label04:
        $i2 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i1 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skip>;

        if $i2 <= $i1 goto label06;

        $r5 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $i3 = virtualinvoke $r5.<java.lang.StringBuilder: int length()>();

        i42 = i40 + $i3;

        $r6 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r6.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i42);

        $r7 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i4 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i5 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int correctOffset(int)>($i4);

        $i6 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i7 = $i6 + i42;

        $i8 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int correctOffset(int)>($i7);

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i5, $i8);

        if z2 == 0 goto label05;

        $r8 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        virtualinvoke $r8.<java.lang.StringBuilder: void setLength(int)>(0);

        $r10 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $r9 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r11 = interfaceinvoke $r9.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r11, 0, i42);

     label05:
        return z3;

     label06:
        return 0;

     label07:
        if z4 != 0 goto label11;

        z1 = 1;

        z4 = 1;

        z3 = 1;

        z2 = 1;

        $i32 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i33 = $i32 + 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped> = $i33;

        $i35 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i34 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skip>;

        if $i35 <= $i34 goto label10;

        $r21 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $c38 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char delimiter>;

        $i45 = (int) $c38;

        if $i41 != $i45 goto label08;

        $c43 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char replacement>;

        goto label09;

     label08:
        $c43 = (char) $i41;

     label09:
        interfaceinvoke $r21.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(char)>($c43);

        i40 = i40 + 1;

        goto label16;

     label10:
        $i36 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i37 = $i36 + 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition> = $i37;

        goto label16;

     label11:
        $c11 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char delimiter>;

        $i46 = (int) $c11;

        if $i41 != $i46 goto label14;

        $i18 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i17 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skip>;

        if $i18 <= $i17 goto label12;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: boolean endDelimiter> = 1;

        goto label17;

     label12:
        $i19 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i20 = $i19 + 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped> = $i20;

        $i22 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i21 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skip>;

        if $i22 <= $i21 goto label13;

        $r13 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $c25 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: char replacement>;

        interfaceinvoke $r13.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(char)>($c25);

        i40 = i40 + 1;

        goto label16;

     label13:
        $i23 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i24 = $i23 + 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition> = $i24;

        goto label16;

     label14:
        $i13 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped>;

        $i12 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skip>;

        if $i13 <= $i12 goto label15;

        $r12 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $c16 = (char) $i41;

        interfaceinvoke $r12.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute append(char)>($c16);

        i40 = i40 + 1;

        goto label16;

     label15:
        $i14 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i15 = $i14 + 1;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition> = $i15;

     label16:
        goto label03;

     label17:
        $r14 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $i26 = virtualinvoke $r14.<java.lang.StringBuilder: int length()>();

        i44 = i40 + $i26;

        $r15 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r15.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i44);

        $r16 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i27 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i28 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int correctOffset(int)>($i27);

        $i29 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition>;

        $i30 = $i29 + i44;

        $i31 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int correctOffset(int)>($i30);

        interfaceinvoke $r16.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i28, $i31);

        $r17 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        virtualinvoke $r17.<java.lang.StringBuilder: void setLength(int)>(0);

        $r19 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        $r18 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r20 = interfaceinvoke $r18.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r20, 0, i44);

        return 1;
    }

    public final void end()
    {
        int $i0, $i1;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        $i0 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int charsRead>;

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int correctOffset(int)>($i0);

        $r1 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i1);

        return;
    }

    public void reset() throws java.io.IOException
    {
        java.lang.StringBuilder $r1;
        org.apache.lucene.analysis.path.PathHierarchyTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.path.PathHierarchyTokenizer;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void reset()>();

        $r1 = r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: java.lang.StringBuilder resultToken>;

        virtualinvoke $r1.<java.lang.StringBuilder: void setLength(int)>(0);

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int charsRead> = 0;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: boolean endDelimiter> = 0;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int skipped> = 0;

        r0.<org.apache.lucene.analysis.path.PathHierarchyTokenizer: int startPosition> = 0;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.path.PathHierarchyTokenizer: int DEFAULT_SKIP> = 0;

        <org.apache.lucene.analysis.path.PathHierarchyTokenizer: char DEFAULT_DELIMITER> = 47;

        <org.apache.lucene.analysis.path.PathHierarchyTokenizer: int DEFAULT_BUFFER_SIZE> = 1024;

        return;
    }
}
