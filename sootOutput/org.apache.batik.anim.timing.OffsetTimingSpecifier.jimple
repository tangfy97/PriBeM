public class org.apache.batik.anim.timing.OffsetTimingSpecifier extends org.apache.batik.anim.timing.TimingSpecifier
{
    protected float offset;

    public void <init>(org.apache.batik.anim.timing.TimedElement, boolean, float)
    {
        org.apache.batik.anim.timing.TimedElement r1;
        float f0;
        org.apache.batik.anim.timing.OffsetTimingSpecifier r0;
        boolean z0;

        r0 := @this: org.apache.batik.anim.timing.OffsetTimingSpecifier;

        r1 := @parameter0: org.apache.batik.anim.timing.TimedElement;

        z0 := @parameter1: boolean;

        f0 := @parameter2: float;

        specialinvoke r0.<org.apache.batik.anim.timing.TimingSpecifier: void <init>(org.apache.batik.anim.timing.TimedElement,boolean)>(r1, z0);

        r0.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset> = f0;

        return;
    }

    public java.lang.String toString()
    {
        byte $b0;
        java.lang.StringBuffer $r2, $r3, $r6;
        int $i1;
        float $f0, $f1;
        org.apache.batik.anim.timing.OffsetTimingSpecifier r1;
        java.lang.String $r4, $r5;

        r1 := @this: org.apache.batik.anim.timing.OffsetTimingSpecifier;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $f0 = r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $b0 = $f0 cmpl 0.0F;

        $i1 = (int) $b0;

        if $i1 < 0 goto label1;

        $r5 = "+";

        goto label2;

     label1:
        $r5 = "";

     label2:
        $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $f1 = r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>($f1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public void initialize()
    {
        org.apache.batik.anim.timing.TimedElement $r2;
        org.apache.batik.anim.timing.InstanceTime $r0;
        float $f0;
        org.apache.batik.anim.timing.OffsetTimingSpecifier r1;
        boolean $z0;

        r1 := @this: org.apache.batik.anim.timing.OffsetTimingSpecifier;

        $r0 = new org.apache.batik.anim.timing.InstanceTime;

        $f0 = r1.<org.apache.batik.anim.timing.OffsetTimingSpecifier: float offset>;

        specialinvoke $r0.<org.apache.batik.anim.timing.InstanceTime: void <init>(org.apache.batik.anim.timing.TimingSpecifier,float,boolean)>(r1, $f0, 0);

        $r2 = r1.<org.apache.batik.anim.timing.TimingSpecifier: org.apache.batik.anim.timing.TimedElement owner>;

        $z0 = r1.<org.apache.batik.anim.timing.TimingSpecifier: boolean isBegin>;

        virtualinvoke $r2.<org.apache.batik.anim.timing.TimedElement: float addInstanceTime(org.apache.batik.anim.timing.InstanceTime,boolean)>($r0, $z0);

        return;
    }

    public boolean isEventCondition()
    {
        org.apache.batik.anim.timing.OffsetTimingSpecifier r0;

        r0 := @this: org.apache.batik.anim.timing.OffsetTimingSpecifier;

        return 0;
    }
}
