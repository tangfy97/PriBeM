public class org.apache.log4j.lf5.DefaultLF5Configurator extends java.lang.Object implements org.apache.log4j.spi.Configurator
{
    static java.lang.Class class$org$apache$log4j$lf5$DefaultLF5Configurator;

    private void <init>()
    {
        org.apache.log4j.lf5.DefaultLF5Configurator r0;

        r0 := @this: org.apache.log4j.lf5.DefaultLF5Configurator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void configure() throws java.io.IOException
    {
        java.net.URL $r1;
        java.io.IOException $r2;
        java.lang.StringBuffer $r3, $r4, $r5;
        java.lang.Class $r0, $r7;
        java.lang.String $r6;

        $r0 = <org.apache.log4j.lf5.DefaultLF5Configurator: java.lang.Class class$org$apache$log4j$lf5$DefaultLF5Configurator>;

        if $r0 != null goto label1;

        $r7 = staticinvoke <org.apache.log4j.lf5.DefaultLF5Configurator: java.lang.Class class$(java.lang.String)>("org.apache.log4j.lf5.DefaultLF5Configurator");

        <org.apache.log4j.lf5.DefaultLF5Configurator: java.lang.Class class$org$apache$log4j$lf5$DefaultLF5Configurator> = $r7;

        goto label2;

     label1:
        $r7 = <org.apache.log4j.lf5.DefaultLF5Configurator: java.lang.Class class$org$apache$log4j$lf5$DefaultLF5Configurator>;

     label2:
        $r1 = virtualinvoke $r7.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/org/apache/log4j/lf5/config/defaultconfig.properties");

        if $r1 == null goto label3;

        staticinvoke <org.apache.log4j.PropertyConfigurator: void configure(java.net.URL)>($r1);

        goto label4;

     label3:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error: Unable to open the resource");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/org/apache/log4j/lf5/config/defaultconfig.properties");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label4:
        return;
    }

    public void doConfigure(java.net.URL, org.apache.log4j.spi.LoggerRepository)
    {
        java.lang.IllegalStateException $r0;
        java.net.URL r2;
        org.apache.log4j.spi.LoggerRepository r3;
        org.apache.log4j.lf5.DefaultLF5Configurator r1;

        r1 := @this: org.apache.log4j.lf5.DefaultLF5Configurator;

        r2 := @parameter0: java.net.URL;

        r3 := @parameter1: org.apache.log4j.spi.LoggerRepository;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This class should NOT be instantiated!");

        throw $r0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }
}
