final class org.apache.poi.ss.util.MutableFPNumber$Rounder extends java.lang.Object
{
    private static final java.math.BigInteger[] HALF_BITS;

    private void <init>()
    {
        org.apache.poi.ss.util.MutableFPNumber$Rounder r0;

        r0 := @this: org.apache.poi.ss.util.MutableFPNumber$Rounder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.math.BigInteger round(java.math.BigInteger, int)
    {
        int i0;
        java.math.BigInteger[] $r1;
        java.math.BigInteger r0, $r2, $r3;

        r0 := @parameter0: java.math.BigInteger;

        i0 := @parameter1: int;

        if i0 >= 1 goto label1;

        return r0;

     label1:
        $r1 = <org.apache.poi.ss.util.MutableFPNumber$Rounder: java.math.BigInteger[] HALF_BITS>;

        $r2 = $r1[i0];

        $r3 = virtualinvoke r0.<java.math.BigInteger: java.math.BigInteger add(java.math.BigInteger)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        int $i0, i2;
        java.math.BigInteger[] r0;
        java.math.BigInteger $r1;
        long l1;

        r0 = newarray (java.math.BigInteger)[33];

        l1 = 1L;

        i2 = 1;

     label1:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label2;

        $r1 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(l1);

        r0[i2] = $r1;

        l1 = l1 << 1;

        i2 = i2 + 1;

        goto label1;

     label2:
        <org.apache.poi.ss.util.MutableFPNumber$Rounder: java.math.BigInteger[] HALF_BITS> = r0;

        return;
    }
}
