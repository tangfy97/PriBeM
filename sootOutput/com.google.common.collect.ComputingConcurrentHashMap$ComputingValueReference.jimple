class com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference extends java.lang.Object implements com.google.common.collect.CustomConcurrentHashMap$ValueReference
{
    com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference;
    final com.google.common.collect.ComputingConcurrentHashMap this$0;

    private void <init>(com.google.common.collect.ComputingConcurrentHashMap)
    {
        com.google.common.collect.CustomConcurrentHashMap$ValueReference $r2;
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;
        com.google.common.collect.ComputingConcurrentHashMap r1;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        r1 := @parameter0: com.google.common.collect.ComputingConcurrentHashMap;

        r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.ComputingConcurrentHashMap this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ValueReference unset()>();

        r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference> = $r2;

        return;
    }

    public java.lang.Object get()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        return null;
    }

    public com.google.common.collect.CustomConcurrentHashMap$ValueReference copyFor(com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry)
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;
        com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry r1;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        r1 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ReferenceEntry;

        return r0;
    }

    public boolean isComputingReference()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        return 1;
    }

    public java.lang.Object waitForValue() throws java.lang.InterruptedException
    {
        java.lang.Throwable $r7;
        com.google.common.collect.CustomConcurrentHashMap$ValueReference $r1, $r2, $r3, $r5, $r6;
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;
        java.lang.Object $r4;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        $r2 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference>;

        $r1 = <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ValueReference UNSET>;

        if $r2 != $r1 goto label6;

        entermonitor r0;

     label1:
        $r6 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference>;

        $r5 = <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ValueReference UNSET>;

        if $r6 != $r5 goto label2;

        virtualinvoke r0.<java.lang.Object: void wait()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r7;

     label6:
        $r3 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference>;

        $r4 = interfaceinvoke $r3.<com.google.common.collect.CustomConcurrentHashMap$ValueReference: java.lang.Object waitForValue()>();

        return $r4;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void clear()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;
        com.google.common.collect.ComputingConcurrentHashMap$ComputedReference $r1;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        $r1 = new com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        specialinvoke $r1.<com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: void <init>(java.lang.Object)>(null);

        virtualinvoke r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)>($r1);

        return;
    }

    public void notifyValueReclaimed()
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        return;
    }

    java.lang.Object compute(java.lang.Object, int)
    {
        java.lang.Throwable $r18, $r23;
        com.google.common.collect.ComputingConcurrentHashMap $r1, $r6, $r9;
        java.lang.NullPointerException $r17;
        com.google.common.collect.ComputationException $r20, $r21;
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;
        int i0;
        java.lang.String $r15;
        com.google.common.collect.ComputingConcurrentHashMap$ComputedReference $r5;
        com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference $r19, $r22;
        com.google.common.base.Function $r3, $r10;
        com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment $r7;
        java.lang.Object r2, $r4;
        java.lang.StringBuilder $r8, $r11, $r12, $r13, $r14;
        com.google.common.collect.ComputingConcurrentHashMap$NullPointerExceptionReference $r16;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        r2 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

     label1:
        $r1 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.ComputingConcurrentHashMap this$0>;

        $r3 = $r1.<com.google.common.collect.ComputingConcurrentHashMap: com.google.common.base.Function computingFunction>;

        $r4 = interfaceinvoke $r3.<com.google.common.base.Function: java.lang.Object apply(java.lang.Object)>(r2);

     label2:
        goto label5;

     label3:
        $r21 := @caughtexception;

        $r22 = new com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        $r23 = virtualinvoke $r21.<com.google.common.collect.ComputationException: java.lang.Throwable getCause()>();

        specialinvoke $r22.<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: void <init>(java.lang.Throwable)>($r23);

        virtualinvoke r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)>($r22);

        throw $r21;

     label4:
        $r18 := @caughtexception;

        $r19 = new com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference;

        specialinvoke $r19.<com.google.common.collect.ComputingConcurrentHashMap$ComputationExceptionReference: void <init>(java.lang.Throwable)>($r18);

        virtualinvoke r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)>($r19);

        $r20 = new com.google.common.collect.ComputationException;

        specialinvoke $r20.<com.google.common.collect.ComputationException: void <init>(java.lang.Throwable)>($r18);

        throw $r20;

     label5:
        if $r4 != null goto label6;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.ComputingConcurrentHashMap this$0>;

        $r10 = $r9.<com.google.common.collect.ComputingConcurrentHashMap: com.google.common.base.Function computingFunction>;

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" returned null for key ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        $r16 = new com.google.common.collect.ComputingConcurrentHashMap$NullPointerExceptionReference;

        specialinvoke $r16.<com.google.common.collect.ComputingConcurrentHashMap$NullPointerExceptionReference: void <init>(java.lang.String)>($r15);

        virtualinvoke r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)>($r16);

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>($r15);

        throw $r17;

     label6:
        $r5 = new com.google.common.collect.ComputingConcurrentHashMap$ComputedReference;

        specialinvoke $r5.<com.google.common.collect.ComputingConcurrentHashMap$ComputedReference: void <init>(java.lang.Object)>($r4);

        virtualinvoke r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)>($r5);

        $r6 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.ComputingConcurrentHashMap this$0>;

        $r7 = virtualinvoke $r6.<com.google.common.collect.ComputingConcurrentHashMap: com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment segmentFor(int)>(i0);

        virtualinvoke $r7.<com.google.common.collect.ComputingConcurrentHashMap$ComputingSegment: java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean)>(r2, i0, $r4, 1);

        return $r4;

        catch com.google.common.collect.ComputationException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label4;
    }

    void setValueReference(com.google.common.collect.CustomConcurrentHashMap$ValueReference)
    {
        java.lang.Throwable $r4;
        com.google.common.collect.CustomConcurrentHashMap$ValueReference $r1, $r2, r3;
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        r3 := @parameter0: com.google.common.collect.CustomConcurrentHashMap$ValueReference;

        entermonitor r0;

     label1:
        $r2 = r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference>;

        $r1 = <com.google.common.collect.CustomConcurrentHashMap: com.google.common.collect.CustomConcurrentHashMap$ValueReference UNSET>;

        if $r2 != $r1 goto label2;

        r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: com.google.common.collect.CustomConcurrentHashMap$ValueReference computedReference> = r3;

        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

     label2:
        exitmonitor r0;

     label3:
        goto label6;

     label4:
        $r4 := @caughtexception;

        exitmonitor r0;

     label5:
        throw $r4;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    void <init>(com.google.common.collect.ComputingConcurrentHashMap, com.google.common.collect.ComputingConcurrentHashMap$1)
    {
        com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference r0;
        com.google.common.collect.ComputingConcurrentHashMap r1;
        com.google.common.collect.ComputingConcurrentHashMap$1 r2;

        r0 := @this: com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference;

        r1 := @parameter0: com.google.common.collect.ComputingConcurrentHashMap;

        r2 := @parameter1: com.google.common.collect.ComputingConcurrentHashMap$1;

        specialinvoke r0.<com.google.common.collect.ComputingConcurrentHashMap$ComputingValueReference: void <init>(com.google.common.collect.ComputingConcurrentHashMap)>(r1);

        return;
    }
}
