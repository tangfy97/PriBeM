public class com.jhlabs.image.PinchFilter extends com.jhlabs.image.TransformFilter
{
    private float angle;
    private float centreX;
    private float centreY;
    private float radius;
    private float amount;
    private float radius2;
    private float icentreX;
    private float icentreY;
    private float width;
    private float height;

    public void <init>()
    {
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        specialinvoke r0.<com.jhlabs.image.TransformFilter: void <init>()>();

        r0.<com.jhlabs.image.PinchFilter: float angle> = 0.0F;

        r0.<com.jhlabs.image.PinchFilter: float centreX> = 0.5F;

        r0.<com.jhlabs.image.PinchFilter: float centreY> = 0.5F;

        r0.<com.jhlabs.image.PinchFilter: float radius> = 100.0F;

        r0.<com.jhlabs.image.PinchFilter: float amount> = 0.5F;

        r0.<com.jhlabs.image.PinchFilter: float radius2> = 0.0F;

        return;
    }

    public void setAngle(float)
    {
        float f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.PinchFilter: float angle> = f0;

        return;
    }

    public float getAngle()
    {
        float $f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        $f0 = r0.<com.jhlabs.image.PinchFilter: float angle>;

        return $f0;
    }

    public void setCentreX(float)
    {
        float f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.PinchFilter: float centreX> = f0;

        return;
    }

    public float getCentreX()
    {
        float $f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        $f0 = r0.<com.jhlabs.image.PinchFilter: float centreX>;

        return $f0;
    }

    public void setCentreY(float)
    {
        float f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.PinchFilter: float centreY> = f0;

        return;
    }

    public float getCentreY()
    {
        float $f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        $f0 = r0.<com.jhlabs.image.PinchFilter: float centreY>;

        return $f0;
    }

    public void setCentre(java.awt.geom.Point2D)
    {
        java.awt.geom.Point2D r1;
        float $f0, $f1;
        com.jhlabs.image.PinchFilter r0;
        double $d0, $d1;

        r0 := @this: com.jhlabs.image.PinchFilter;

        r1 := @parameter0: java.awt.geom.Point2D;

        $d0 = virtualinvoke r1.<java.awt.geom.Point2D: double getX()>();

        $f0 = (float) $d0;

        r0.<com.jhlabs.image.PinchFilter: float centreX> = $f0;

        $d1 = virtualinvoke r1.<java.awt.geom.Point2D: double getY()>();

        $f1 = (float) $d1;

        r0.<com.jhlabs.image.PinchFilter: float centreY> = $f1;

        return;
    }

    public java.awt.geom.Point2D getCentre()
    {
        java.awt.geom.Point2D$Float $r0;
        float $f0, $f1;
        com.jhlabs.image.PinchFilter r1;

        r1 := @this: com.jhlabs.image.PinchFilter;

        $r0 = new java.awt.geom.Point2D$Float;

        $f1 = r1.<com.jhlabs.image.PinchFilter: float centreX>;

        $f0 = r1.<com.jhlabs.image.PinchFilter: float centreY>;

        specialinvoke $r0.<java.awt.geom.Point2D$Float: void <init>(float,float)>($f1, $f0);

        return $r0;
    }

    public void setRadius(float)
    {
        float f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.PinchFilter: float radius> = f0;

        return;
    }

    public float getRadius()
    {
        float $f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        $f0 = r0.<com.jhlabs.image.PinchFilter: float radius>;

        return $f0;
    }

    public void setAmount(float)
    {
        float f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.PinchFilter: float amount> = f0;

        return;
    }

    public float getAmount()
    {
        float $f0;
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        $f0 = r0.<com.jhlabs.image.PinchFilter: float amount>;

        return $f0;
    }

    public java.awt.image.BufferedImage filter(java.awt.image.BufferedImage, java.awt.image.BufferedImage)
    {
        byte $b2;
        int $i0, $i1;
        com.jhlabs.image.PinchFilter r0;
        java.awt.image.BufferedImage r1, r2, $r3;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, $f9, $f10, $f11, $f12, $f13, $f14;

        r0 := @this: com.jhlabs.image.PinchFilter;

        r1 := @parameter0: java.awt.image.BufferedImage;

        r2 := @parameter1: java.awt.image.BufferedImage;

        $i0 = virtualinvoke r1.<java.awt.image.BufferedImage: int getWidth()>();

        $f0 = (float) $i0;

        r0.<com.jhlabs.image.PinchFilter: float width> = $f0;

        $i1 = virtualinvoke r1.<java.awt.image.BufferedImage: int getHeight()>();

        $f1 = (float) $i1;

        r0.<com.jhlabs.image.PinchFilter: float height> = $f1;

        $f3 = r0.<com.jhlabs.image.PinchFilter: float width>;

        $f2 = r0.<com.jhlabs.image.PinchFilter: float centreX>;

        $f4 = $f3 * $f2;

        r0.<com.jhlabs.image.PinchFilter: float icentreX> = $f4;

        $f6 = r0.<com.jhlabs.image.PinchFilter: float height>;

        $f5 = r0.<com.jhlabs.image.PinchFilter: float centreY>;

        $f7 = $f6 * $f5;

        r0.<com.jhlabs.image.PinchFilter: float icentreY> = $f7;

        $f8 = r0.<com.jhlabs.image.PinchFilter: float radius>;

        $b2 = $f8 cmpl 0.0F;

        if $b2 != 0 goto label1;

        $f13 = r0.<com.jhlabs.image.PinchFilter: float icentreX>;

        $f12 = r0.<com.jhlabs.image.PinchFilter: float icentreY>;

        $f14 = staticinvoke <java.lang.Math: float min(float,float)>($f13, $f12);

        r0.<com.jhlabs.image.PinchFilter: float radius> = $f14;

     label1:
        $f10 = r0.<com.jhlabs.image.PinchFilter: float radius>;

        $f9 = r0.<com.jhlabs.image.PinchFilter: float radius>;

        $f11 = $f10 * $f9;

        r0.<com.jhlabs.image.PinchFilter: float radius2> = $f11;

        $r3 = specialinvoke r0.<com.jhlabs.image.TransformFilter: java.awt.image.BufferedImage filter(java.awt.image.BufferedImage,java.awt.image.BufferedImage)>(r1, r2);

        return $r3;
    }

    protected void transformInverse(int, int, float[])
    {
        byte $b2, $b3;
        com.jhlabs.image.PinchFilter r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, f6, $f7, $f8, $f9, $f10, $f11, f12, $f13, $f14, f15, f16, $f17, $f18, f19, f20, f21, $f22, $f23, $f24, $f25, $f26, $f27, $f28, $f29, $f30, $f31, f32, f33, f34, f35;
        float[] r1;
        int i0, i1, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;

        r0 := @this: com.jhlabs.image.PinchFilter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: float[];

        $f1 = (float) i0;

        $f0 = r0.<com.jhlabs.image.PinchFilter: float icentreX>;

        f32 = $f1 - $f0;

        $f3 = (float) i1;

        $f2 = r0.<com.jhlabs.image.PinchFilter: float icentreY>;

        f33 = $f3 - $f2;

        $f5 = f32 * f32;

        $f4 = f33 * f33;

        f6 = $f5 + $f4;

        $f7 = r0.<com.jhlabs.image.PinchFilter: float radius2>;

        $b2 = f6 cmpl $f7;

        $i4 = (int) $b2;

        if $i4 > 0 goto label1;

        $b3 = f6 cmpl 0.0F;

        if $b3 != 0 goto label2;

     label1:
        $f8 = (float) i0;

        r1[0] = $f8;

        $f9 = (float) i1;

        r1[1] = $f9;

        goto label3;

     label2:
        $f10 = r0.<com.jhlabs.image.PinchFilter: float radius2>;

        $f11 = f6 / $f10;

        $d0 = (double) $f11;

        $d1 = staticinvoke <java.lang.Math: double sqrt(double)>($d0);

        f12 = (float) $d1;

        $d2 = (double) f12;

        $d3 = 1.5707963267948966 * $d2;

        $d4 = staticinvoke <java.lang.Math: double sin(double)>($d3);

        $f13 = r0.<com.jhlabs.image.PinchFilter: float amount>;

        $f14 = neg $f13;

        $d5 = (double) $f14;

        $d6 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, $d5);

        f15 = (float) $d6;

        f34 = f32 * f15;

        f35 = f33 * f15;

        f16 = 1.0F - f12;

        $f17 = r0.<com.jhlabs.image.PinchFilter: float angle>;

        $f18 = $f17 * f16;

        f19 = $f18 * f16;

        $d7 = (double) f19;

        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d7);

        f20 = (float) $d8;

        $d9 = (double) f19;

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);

        f21 = (float) $d10;

        $f23 = r0.<com.jhlabs.image.PinchFilter: float icentreX>;

        $f22 = f21 * f34;

        $f25 = $f23 + $f22;

        $f24 = f20 * f35;

        $f26 = $f25 - $f24;

        r1[0] = $f26;

        $f28 = r0.<com.jhlabs.image.PinchFilter: float icentreY>;

        $f27 = f20 * f34;

        $f30 = $f28 + $f27;

        $f29 = f21 * f35;

        $f31 = $f30 + $f29;

        r1[1] = $f31;

     label3:
        return;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.PinchFilter r0;

        r0 := @this: com.jhlabs.image.PinchFilter;

        return "Distort/Pinch...";
    }
}
