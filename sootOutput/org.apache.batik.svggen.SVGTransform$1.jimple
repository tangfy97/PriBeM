class org.apache.batik.svggen.SVGTransform$1 extends java.util.Stack
{
    private final org.apache.batik.svggen.SVGTransform this$0;

    void <init>(org.apache.batik.svggen.SVGTransform)
    {
        org.apache.batik.svggen.SVGTransform$1 r0;
        org.apache.batik.svggen.SVGTransform r1;

        r0 := @this: org.apache.batik.svggen.SVGTransform$1;

        r1 := @parameter0: org.apache.batik.svggen.SVGTransform;

        specialinvoke r0.<java.util.Stack: void <init>()>();

        r0.<org.apache.batik.svggen.SVGTransform$1: org.apache.batik.svggen.SVGTransform this$0> = r1;

        return;
    }

    public java.lang.Object push(java.lang.Object)
    {
        java.lang.Object r0, r3;
        org.apache.batik.ext.awt.g2d.TransformStackElement $r1;
        org.apache.batik.svggen.SVGTransform$1 r2;
        boolean $z0;

        r2 := @this: org.apache.batik.svggen.SVGTransform$1;

        r0 := @parameter0: java.lang.Object;

        $r1 = (org.apache.batik.ext.awt.g2d.TransformStackElement) r0;

        $z0 = virtualinvoke $r1.<org.apache.batik.ext.awt.g2d.TransformStackElement: boolean isIdentity()>();

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r2.<org.apache.batik.svggen.SVGTransform$1: java.lang.Object pop()>();

        goto label2;

     label1:
        specialinvoke r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r0);

        r3 = null;

     label2:
        return r3;
    }

    public java.lang.Object pop()
    {
        java.lang.Object r1;
        org.apache.batik.svggen.SVGTransform$1 r0;
        boolean $z0;

        r0 := @this: org.apache.batik.svggen.SVGTransform$1;

        r1 = null;

        $z0 = specialinvoke r0.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label1;

        r1 = specialinvoke r0.<java.util.Stack: java.lang.Object pop()>();

     label1:
        return r1;
    }
}
