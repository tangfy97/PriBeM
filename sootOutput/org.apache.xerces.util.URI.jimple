public class org.apache.xerces.util.URI extends java.lang.Object implements java.io.Serializable
{
    static final long serialVersionUID;
    private static final byte[] fgLookupTable;
    private static final int RESERVED_CHARACTERS;
    private static final int MARK_CHARACTERS;
    private static final int SCHEME_CHARACTERS;
    private static final int USERINFO_CHARACTERS;
    private static final int ASCII_ALPHA_CHARACTERS;
    private static final int ASCII_DIGIT_CHARACTERS;
    private static final int ASCII_HEX_CHARACTERS;
    private static final int PATH_CHARACTERS;
    private static final int MASK_ALPHA_NUMERIC;
    private static final int MASK_UNRESERVED_MASK;
    private static final int MASK_URI_CHARACTER;
    private static final int MASK_SCHEME_CHARACTER;
    private static final int MASK_USERINFO_CHARACTER;
    private static final int MASK_PATH_CHARACTER;
    private java.lang.String m_scheme;
    private java.lang.String m_userinfo;
    private java.lang.String m_host;
    private int m_port;
    private java.lang.String m_regAuthority;
    private java.lang.String m_path;
    private java.lang.String m_queryString;
    private java.lang.String m_fragment;
    private static boolean DEBUG;

    public void <init>()
    {
        int $i1;
        org.apache.xerces.util.URI r0;

        r0 := @this: org.apache.xerces.util.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xerces.util.URI: int m_port> = $i1;

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        return;
    }

    public void <init>(org.apache.xerces.util.URI)
    {
        int $i1;
        org.apache.xerces.util.URI r0, r1;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: org.apache.xerces.util.URI;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xerces.util.URI: int m_port> = $i1;

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        specialinvoke r0.<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI)>(r1);

        return;
    }

    public void <init>(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0;
        java.lang.String r1;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.xerces.util.URI: void <init>(org.apache.xerces.util.URI,java.lang.String)>(null, r1);

        return;
    }

    public void <init>(java.lang.String, boolean) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xerces.util.URI: void <init>(org.apache.xerces.util.URI,java.lang.String,boolean)>(null, r1, z0);

        return;
    }

    public void <init>(org.apache.xerces.util.URI, java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0, r1;
        int $i1;
        java.lang.String r2;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: org.apache.xerces.util.URI;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xerces.util.URI: int m_port> = $i1;

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        specialinvoke r0.<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI,java.lang.String)>(r1, r2);

        return;
    }

    public void <init>(org.apache.xerces.util.URI, java.lang.String, boolean) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0, r1;
        int $i1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: org.apache.xerces.util.URI;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        $i1 = (int) -1;

        r0.<org.apache.xerces.util.URI: int m_port> = $i1;

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        specialinvoke r0.<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI,java.lang.String,boolean)>(r1, r2, z0);

        return;
    }

    public void <init>(java.lang.String, java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0;
        int $i0, $i1, $i3;
        java.lang.String r1, $r3, r4, $r6;
        org.apache.xerces.util.URI$MalformedURIException $r7, $r8;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        $i3 = (int) -1;

        r0.<org.apache.xerces.util.URI: int m_port> = $i3;

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r7 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r7.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot construct URI with null/empty scheme!");

        throw $r7;

     label2:
        if r4 == null goto label3;

        $r6 = virtualinvoke r4.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

     label3:
        $r8 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r8.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot construct URI with null/empty scheme-specific part!");

        throw $r8;

     label4:
        virtualinvoke r0.<org.apache.xerces.util.URI: void setScheme(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setPath(java.lang.String)>(r4);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0;
        int $i1;
        java.lang.String r1, r2, r3, r4, r5;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: java.lang.String;

        $i1 = (int) -1;

        specialinvoke r0.<org.apache.xerces.util.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(r1, null, r2, $i1, r3, r4, r5);

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String, int, java.lang.String, java.lang.String, java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0;
        int $i0, i1, $i2, $i3, $i5, $i7, $i9, $i11;
        java.lang.String r1, $r3, r4, r5, r6, r7, r8;
        org.apache.xerces.util.URI$MalformedURIException $r13, $r14, $r15, $r16, $r17;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        i1 := @parameter3: int;

        r5 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.String;

        r8 := @parameter6: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        $i5 = (int) -1;

        r0.<org.apache.xerces.util.URI: int m_port> = $i5;

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        if r1 == null goto label1;

        $r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $r13 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r13.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Scheme is required!");

        throw $r13;

     label2:
        if r4 != null goto label4;

        if r6 == null goto label3;

        $r14 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r14.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Userinfo may not be specified if host is not specified!");

        throw $r14;

     label3:
        $i7 = (int) -1;

        if i1 == $i7 goto label4;

        $r15 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r15.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Port may not be specified if host is not specified!");

        throw $r15;

     label4:
        if r5 == null goto label6;

        $i2 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(63);

        $i9 = (int) -1;

        if $i2 == $i9 goto label5;

        if r7 == null goto label5;

        $r16 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r16.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Query string cannot be specified in path and query string!");

        throw $r16;

     label5:
        $i3 = virtualinvoke r5.<java.lang.String: int indexOf(int)>(35);

        $i11 = (int) -1;

        if $i3 == $i11 goto label6;

        if r8 == null goto label6;

        $r17 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r17.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Fragment cannot be specified in both the path and fragment!");

        throw $r17;

     label6:
        virtualinvoke r0.<org.apache.xerces.util.URI: void setScheme(java.lang.String)>(r1);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setHost(java.lang.String)>(r4);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setPort(int)>(i1);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setUserinfo(java.lang.String)>(r6);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setPath(java.lang.String)>(r5);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setQueryString(java.lang.String)>(r7);

        virtualinvoke r0.<org.apache.xerces.util.URI: void setFragment(java.lang.String)>(r8);

        return;
    }

    private void initialize(org.apache.xerces.util.URI)
    {
        org.apache.xerces.util.URI r0, r1;
        int $i0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8;

        r0 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: org.apache.xerces.util.URI;

        $r2 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getScheme()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = $r2;

        $r3 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getUserinfo()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = $r3;

        $r4 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getHost()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = $r4;

        $i0 = virtualinvoke r1.<org.apache.xerces.util.URI: int getPort()>();

        r0.<org.apache.xerces.util.URI: int m_port> = $i0;

        $r5 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getRegBasedAuthority()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = $r5;

        $r6 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getPath()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = $r6;

        $r7 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getQueryString()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = $r7;

        $r8 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getFragment()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = $r8;

        return;
    }

    private void initialize(org.apache.xerces.util.URI, java.lang.String, boolean) throws org.apache.xerces.util.URI$MalformedURIException
    {
        boolean $z0, z1;
        org.apache.xerces.util.URI$MalformedURIException $r9, $r10, $r11, $r12;
        org.apache.xerces.util.URI r1, r2;
        int i0, $i1, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15, i16, $i17, i18, $i20, $i22, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        java.lang.String r0, $r3, $r6;
        char $c2, $c4, $c5, $c13;

        r2 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: org.apache.xerces.util.URI;

        r0 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        if r0 == null goto label01;

        $i14 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label02;

     label01:
        $i14 = 0;

     label02:
        i0 = $i14;

        if r1 != null goto label04;

        if $i14 != 0 goto label04;

        if z1 == 0 goto label03;

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = "";

        return;

     label03:
        $r9 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r9.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot initialize URI with empty parameters.");

        throw $r9;

     label04:
        if i0 != 0 goto label05;

        specialinvoke r2.<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI)>(r1);

        return;

     label05:
        i15 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i20 = (int) -1;

        if $i1 == $i20 goto label10;

        i16 = $i1 - 1;

        $i7 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(47, i16);

        $i8 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(63, i16);

        $i9 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(35, i16);

        if $i1 == 0 goto label06;

        $i22 = (int) -1;

        if $i7 != $i22 goto label06;

        $i24 = (int) -1;

        if $i8 != $i24 goto label06;

        $i26 = (int) -1;

        if $i9 == $i26 goto label08;

     label06:
        if $i1 == 0 goto label07;

        if r1 != null goto label11;

        if $i9 == 0 goto label11;

        if z1 != 0 goto label11;

     label07:
        $r10 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r10.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("No scheme found in URI.");

        throw $r10;

     label08:
        specialinvoke r2.<org.apache.xerces.util.URI: void initializeScheme(java.lang.String)>(r0);

        $r6 = r2.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        $i10 = virtualinvoke $r6.<java.lang.String: int length()>();

        i15 = $i10 + 1;

        $i11 = i0 - 1;

        if $i1 == $i11 goto label09;

        $i12 = $i1 + 1;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);

        $i27 = (int) $c13;

        if $i27 != 35 goto label11;

     label09:
        $r11 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r11.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Scheme specific part cannot be empty.");

        throw $r11;

     label10:
        if r1 != null goto label11;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(35);

        if $i6 == 0 goto label11;

        if z1 != 0 goto label11;

        $r12 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r12.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("No scheme found in URI.");

        throw $r12;

     label11:
        $i17 = i15 + 1;

        if $i17 >= i0 goto label17;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $i28 = (int) $c2;

        if $i28 != 47 goto label17;

        $i3 = i15 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i29 = (int) $c4;

        if $i29 != 47 goto label17;

        i15 = i15 + 2;

        i18 = i15;

        goto label14;

     label12:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $i30 = (int) $c5;

        if $i30 == 47 goto label15;

        $i31 = (int) $c5;

        if $i31 == 63 goto label15;

        $i32 = (int) $c5;

        if $i32 != 35 goto label13;

        goto label15;

     label13:
        i15 = i15 + 1;

     label14:
        if i15 < i0 goto label12;

     label15:
        if i15 <= i18 goto label16;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i18, i15);

        $z0 = specialinvoke r2.<org.apache.xerces.util.URI: boolean initializeAuthority(java.lang.String)>($r3);

        if $z0 != 0 goto label17;

        i15 = i18 - 2;

        goto label17;

     label16:
        r2.<org.apache.xerces.util.URI: java.lang.String m_host> = "";

     label17:
        specialinvoke r2.<org.apache.xerces.util.URI: void initializePath(java.lang.String,int)>(r0, i15);

        if r1 == null goto label18;

        virtualinvoke r2.<org.apache.xerces.util.URI: void absolutize(org.apache.xerces.util.URI)>(r1);

     label18:
        return;
    }

    private void initialize(org.apache.xerces.util.URI, java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        boolean $z0;
        org.apache.xerces.util.URI$MalformedURIException $r9, $r10, $r11, $r12;
        org.apache.xerces.util.URI r1, r2;
        int i0, $i1, $i3, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, i15, i16, $i17, i18, $i20, $i22, $i24, $i26, $i27, $i28, $i29, $i30, $i31, $i32;
        java.lang.String r0, $r3, $r6;
        char $c2, $c4, $c5, $c13;

        r2 := @this: org.apache.xerces.util.URI;

        r1 := @parameter0: org.apache.xerces.util.URI;

        r0 := @parameter1: java.lang.String;

        if r0 == null goto label01;

        $i14 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label02;

     label01:
        $i14 = 0;

     label02:
        i0 = $i14;

        if r1 != null goto label03;

        if $i14 != 0 goto label03;

        $r9 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r9.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot initialize URI with empty parameters.");

        throw $r9;

     label03:
        if i0 != 0 goto label04;

        specialinvoke r2.<org.apache.xerces.util.URI: void initialize(org.apache.xerces.util.URI)>(r1);

        return;

     label04:
        i15 = 0;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58);

        $i20 = (int) -1;

        if $i1 == $i20 goto label09;

        i16 = $i1 - 1;

        $i7 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(47, i16);

        $i8 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(63, i16);

        $i9 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(35, i16);

        if $i1 == 0 goto label05;

        $i22 = (int) -1;

        if $i7 != $i22 goto label05;

        $i24 = (int) -1;

        if $i8 != $i24 goto label05;

        $i26 = (int) -1;

        if $i9 == $i26 goto label07;

     label05:
        if $i1 == 0 goto label06;

        if r1 != null goto label10;

        if $i9 == 0 goto label10;

     label06:
        $r10 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r10.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("No scheme found in URI.");

        throw $r10;

     label07:
        specialinvoke r2.<org.apache.xerces.util.URI: void initializeScheme(java.lang.String)>(r0);

        $r6 = r2.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        $i10 = virtualinvoke $r6.<java.lang.String: int length()>();

        i15 = $i10 + 1;

        $i11 = i0 - 1;

        if $i1 == $i11 goto label08;

        $i12 = $i1 + 1;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);

        $i27 = (int) $c13;

        if $i27 != 35 goto label10;

     label08:
        $r11 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r11.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Scheme specific part cannot be empty.");

        throw $r11;

     label09:
        if r1 != null goto label10;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(35);

        if $i6 == 0 goto label10;

        $r12 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r12.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("No scheme found in URI.");

        throw $r12;

     label10:
        $i17 = i15 + 1;

        if $i17 >= i0 goto label16;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $i28 = (int) $c2;

        if $i28 != 47 goto label16;

        $i3 = i15 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $i29 = (int) $c4;

        if $i29 != 47 goto label16;

        i15 = i15 + 2;

        i18 = i15;

        goto label13;

     label11:
        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        $i30 = (int) $c5;

        if $i30 == 47 goto label14;

        $i31 = (int) $c5;

        if $i31 == 63 goto label14;

        $i32 = (int) $c5;

        if $i32 != 35 goto label12;

        goto label14;

     label12:
        i15 = i15 + 1;

     label13:
        if i15 < i0 goto label11;

     label14:
        if i15 <= i18 goto label15;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i18, i15);

        $z0 = specialinvoke r2.<org.apache.xerces.util.URI: boolean initializeAuthority(java.lang.String)>($r3);

        if $z0 != 0 goto label16;

        i15 = i18 - 2;

        goto label16;

     label15:
        r2.<org.apache.xerces.util.URI: java.lang.String m_host> = "";

     label16:
        specialinvoke r2.<org.apache.xerces.util.URI: void initializePath(java.lang.String,int)>(r0, i15);

        if r1 == null goto label17;

        virtualinvoke r2.<org.apache.xerces.util.URI: void absolutize(org.apache.xerces.util.URI)>(r1);

     label17:
        return;
    }

    public void absolutize(org.apache.xerces.util.URI)
    {
        org.apache.xerces.util.URI r0, r2;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, r33, $r34, r35;
        boolean $z0, $z1, $z2, $z3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, i21, $i22, $i24, $i26, $i28, $i30;

        r0 := @this: org.apache.xerces.util.URI;

        r2 := @parameter0: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        $r20 = r0.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r20 != null goto label02;

        $r21 = r0.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r21 != null goto label02;

        $r22 = r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        if $r22 != null goto label02;

        $r23 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getScheme()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = $r23;

        $r24 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getUserinfo()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = $r24;

        $r25 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getHost()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = $r25;

        $i20 = virtualinvoke r2.<org.apache.xerces.util.URI: int getPort()>();

        r0.<org.apache.xerces.util.URI: int m_port> = $i20;

        $r26 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getRegBasedAuthority()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = $r26;

        $r27 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getPath()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = $r27;

        $r28 = r0.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r28 != null goto label01;

        $r29 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getQueryString()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_queryString> = $r29;

        $r30 = r0.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r30 != null goto label01;

        $r31 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getFragment()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_fragment> = $r31;

     label01:
        return;

     label02:
        $r32 = r0.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r32 != null goto label03;

        $r3 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getScheme()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_scheme> = $r3;

        goto label04;

     label03:
        return;

     label04:
        $r4 = r0.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r4 != null goto label05;

        $r5 = r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        if $r5 != null goto label05;

        $r6 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getUserinfo()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = $r6;

        $r7 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getHost()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_host> = $r7;

        $i1 = virtualinvoke r2.<org.apache.xerces.util.URI: int getPort()>();

        r0.<org.apache.xerces.util.URI: int m_port> = $i1;

        $r8 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getRegBasedAuthority()>();

        r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = $r8;

        goto label06;

     label05:
        return;

     label06:
        $r9 = r0.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i2 <= 0 goto label07;

        $r19 = r0.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $z3 = virtualinvoke $r19.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z3 == 0 goto label07;

        return;

     label07:
        r33 = "";

        $r10 = virtualinvoke r2.<org.apache.xerces.util.URI: java.lang.String getPath()>();

        if $r10 == null goto label08;

        $i17 = virtualinvoke $r10.<java.lang.String: int length()>();

        if $i17 <= 0 goto label08;

        $i18 = virtualinvoke $r10.<java.lang.String: int lastIndexOf(int)>(47);

        $i24 = (int) -1;

        if $i18 == $i24 goto label09;

        $i19 = $i18 + 1;

        r33 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(0, $i19);

        goto label09;

     label08:
        $r11 = r0.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $i3 = virtualinvoke $r11.<java.lang.String: int length()>();

        if $i3 <= 0 goto label09;

        r33 = "/";

     label09:
        $r34 = r0.<org.apache.xerces.util.URI: java.lang.String m_path>;

        r35 = virtualinvoke r33.<java.lang.String: java.lang.String concat(java.lang.String)>($r34);

        goto label11;

     label10:
        $i5 = $i4 + 1;

        $r12 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i5);

        $i6 = $i4 + 3;

        $r13 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int)>($i6);

        r35 = virtualinvoke $r12.<java.lang.String: java.lang.String concat(java.lang.String)>($r13);

     label11:
        $i4 = virtualinvoke r35.<java.lang.String: int indexOf(java.lang.String)>("/./");

        $i26 = (int) -1;

        if $i4 != $i26 goto label10;

        $z0 = virtualinvoke r35.<java.lang.String: boolean endsWith(java.lang.String)>("/.");

        if $z0 == 0 goto label12;

        $i15 = virtualinvoke r35.<java.lang.String: int length()>();

        $i16 = $i15 - 1;

        r35 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i16);

     label12:
        i21 = 1;

        goto label16;

     label13:
        $i7 = virtualinvoke r35.<java.lang.String: int indexOf(java.lang.String)>("/../");

        $r14 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i7);

        $i8 = virtualinvoke $r14.<java.lang.String: int lastIndexOf(int)>(47);

        $i28 = (int) -1;

        if $i8 == $i28 goto label15;

        $r15 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>($i8);

        $z1 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("..");

        if $z1 != 0 goto label14;

        $i9 = $i8 + 1;

        $r16 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i9);

        $i10 = $i22 + 4;

        $r17 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int)>($i10);

        r35 = virtualinvoke $r16.<java.lang.String: java.lang.String concat(java.lang.String)>($r17);

        i21 = $i8;

        goto label16;

     label14:
        i21 = $i22 + 4;

        goto label16;

     label15:
        i21 = $i22 + 4;

     label16:
        $i22 = virtualinvoke r35.<java.lang.String: int indexOf(java.lang.String,int)>("/../", i21);

        if $i22 > 0 goto label13;

        $z2 = virtualinvoke r35.<java.lang.String: boolean endsWith(java.lang.String)>("/..");

        if $z2 == 0 goto label17;

        $i11 = virtualinvoke r35.<java.lang.String: int length()>();

        $i12 = $i11 - 3;

        $r18 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i12);

        $i13 = virtualinvoke $r18.<java.lang.String: int lastIndexOf(int)>(47);

        $i30 = (int) -1;

        if $i13 == $i30 goto label17;

        $i14 = $i13 + 1;

        r35 = virtualinvoke r35.<java.lang.String: java.lang.String substring(int,int)>(0, $i14);

     label17:
        r0.<org.apache.xerces.util.URI: java.lang.String m_path> = r35;

        return;
    }

    private void initializeScheme(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        char $c1;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String r0, $r3;
        org.apache.xerces.util.URI$MalformedURIException $r4;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i2 = 0;

        goto label3;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i4 = (int) $c1;

        if $i4 == 58 goto label4;

        $i5 = (int) $c1;

        if $i5 == 47 goto label4;

        $i6 = (int) $c1;

        if $i6 == 63 goto label4;

        $i7 = (int) $c1;

        if $i7 != 35 goto label2;

        goto label4;

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < $i0 goto label1;

     label4:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i2);

        $i3 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i3 != 0 goto label5;

        $r4 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r4.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("No scheme found in URI.");

        throw $r4;

     label5:
        virtualinvoke r1.<org.apache.xerces.util.URI: void setScheme(java.lang.String)>($r3);

        return;
    }

    private boolean initializeAuthority(java.lang.String)
    {
        boolean $z0, z1, $z2, $z3;
        org.apache.xerces.util.URI r1;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, i11, i12, $i13, $i14, i15, $i16, i17, i18, $i20, $i21, $i22, $i24, $i25, $i27, $i29, $i31, $i33;
        java.lang.String r0, $r2, r4, $r5;
        char $c4, $c9, $c10;
        java.lang.NumberFormatException $r3;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        i11 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        r4 = null;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(64, 0);

        $i20 = (int) -1;

        if $i1 == $i20 goto label05;

        goto label03;

     label01:
        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i21 = (int) $c10;

        if $i21 != 64 goto label02;

        goto label04;

     label02:
        i11 = i11 + 1;

     label03:
        if i11 < $i0 goto label01;

     label04:
        r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i11);

        i11 = i11 + 1;

     label05:
        i12 = i11;

        z1 = 0;

        if i11 >= $i0 goto label14;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i11);

        $i22 = (int) $c4;

        if $i22 != 91 goto label09;

        $i6 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(93, i11);

        $i24 = (int) -1;

        if $i6 == $i24 goto label06;

        $i13 = $i6;

        goto label07;

     label06:
        $i13 = $i0;

     label07:
        $i7 = $i13 + 1;

        if $i7 >= $i0 goto label08;

        $i8 = $i13 + 1;

        $c9 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i8);

        $i25 = (int) $c9;

        if $i25 != 58 goto label08;

        i11 = $i13 + 1;

        z1 = 1;

        goto label14;

     label08:
        i11 = $i0;

        goto label14;

     label09:
        $i5 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int,int)>(58, $i0);

        if $i5 <= i11 goto label10;

        $i14 = $i5;

        goto label11;

     label10:
        $i14 = $i0;

     label11:
        i11 = $i14;

        if $i14 == $i0 goto label12;

        $z2 = 1;

        goto label13;

     label12:
        $z2 = 0;

     label13:
        z1 = $z2;

     label14:
        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i12, i11);

        $i27 = (int) -1;

        i15 = $i27;

        $i16 = virtualinvoke $r5.<java.lang.String: int length()>();

        if $i16 <= 0 goto label20;

        if z1 == 0 goto label20;

        i17 = i11 + 1;

        i18 = i17;

        goto label16;

     label15:
        i17 = i17 + 1;

     label16:
        if i17 < $i0 goto label15;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i18, i17);

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i2 <= 0 goto label20;

     label17:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        i15 = $i3;

        $i29 = (int) -1;

        if $i3 != $i29 goto label18;

        $i31 = (int) -1;

        i15 = $i3 + $i31;

     label18:
        goto label20;

     label19:
        $r3 := @caughtexception;

        $i33 = (int) -2;

        i15 = $i33;

     label20:
        $z3 = specialinvoke r1.<org.apache.xerces.util.URI: boolean isValidServerBasedAuthority(java.lang.String,int,java.lang.String)>($r5, i15, r4);

        if $z3 == 0 goto label21;

        r1.<org.apache.xerces.util.URI: java.lang.String m_host> = $r5;

        r1.<org.apache.xerces.util.URI: int m_port> = i15;

        r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = r4;

        return 1;

     label21:
        $z0 = specialinvoke r1.<org.apache.xerces.util.URI: boolean isValidRegistryBasedAuthority(java.lang.String)>(r0);

        if $z0 == 0 goto label22;

        r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = r0;

        return 1;

     label22:
        return 0;

        catch java.lang.NumberFormatException from label17 to label18 with label19;
    }

    private boolean isValidServerBasedAuthority(java.lang.String, int, java.lang.String)
    {
        org.apache.xerces.util.URI r2;
        int i0, $i1, $i3, $i4, $i6, i8, $i10, $i12, $i13;
        java.lang.String r0, r1;
        boolean $z0, $z1, $z2, $z3;
        char $c2, $c5, $c7;

        r2 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isWellFormedAddress(java.lang.String)>(r0);

        if $z0 != 0 goto label01;

        return 0;

     label01:
        $i10 = (int) -1;

        if i0 < $i10 goto label02;

        $i12 = (int) 65535;

        if i0 <= $i12 goto label03;

     label02:
        return 0;

     label03:
        if r1 == null goto label10;

        i8 = 0;

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        goto label09;

     label04:
        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i8);

        $i13 = (int) $c2;

        if $i13 != 37 goto label07;

        $i3 = i8 + 2;

        if $i3 >= $i1 goto label05;

        $i4 = i8 + 1;

        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i4);

        $z2 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c5);

        if $z2 == 0 goto label05;

        $i6 = i8 + 2;

        $c7 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i6);

        $z3 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c7);

        if $z3 != 0 goto label06;

     label05:
        return 0;

     label06:
        i8 = i8 + 2;

        goto label08;

     label07:
        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isUserinfoCharacter(char)>($c2);

        if $z1 != 0 goto label08;

        return 0;

     label08:
        i8 = i8 + 1;

     label09:
        if i8 < $i1 goto label04;

     label10:
        return 1;
    }

    private boolean isValidRegistryBasedAuthority(java.lang.String)
    {
        org.apache.xerces.util.URI r1;
        char $c1, $c4, $c6;
        int $i0, $i2, $i3, $i5, i7, $i8;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        i7 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label6;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c1;

        if $i8 != 37 goto label4;

        $i2 = i7 + 2;

        if $i2 >= $i0 goto label2;

        $i3 = i7 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c4);

        if $z1 == 0 goto label2;

        $i5 = i7 + 2;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $z2 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c6);

        if $z2 != 0 goto label3;

     label2:
        return 0;

     label3:
        i7 = i7 + 2;

        goto label5;

     label4:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isPathCharacter(char)>($c1);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        i7 = i7 + 1;

     label6:
        if i7 < $i0 goto label1;

        return 1;
    }

    private void initializePath(java.lang.String, int) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI$MalformedURIException $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r43;
        org.apache.xerces.util.URI r1;
        java.lang.StringBuffer $r4, $r5, $r10, $r11, $r17, $r18, $r22, $r23, $r33, $r36, $r39, $r42;
        java.lang.String r0, $r6, $r7, $r12, $r13, $r14, $r19, $r24, $r28;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11;
        int i0, $i1, $i3, $i4, $i6, $i9, $i10, $i12, $i15, $i16, $i18, $i22, $i23, $i25, i27, i28, i29, i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41;
        char $c2, $c5, $c7, $c8, $c11, $c13, $c14, $c17, $c19, $c20, $c21, $c24, $c26;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if r0 != null goto label01;

        $r31 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r31.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot initialize path from null string!");

        throw $r31;

     label01:
        i27 = i0;

        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        i28 = 0;

        if i0 >= $i1 goto label16;

        $r14 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getScheme()>();

        if $r14 == null goto label08;

        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $i32 = (int) $c20;

        if $i32 != 47 goto label15;

        goto label08;

     label02:
        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i27);

        i28 = $c14;

        $i33 = (int) $c14;

        if $i33 != 37 goto label05;

        $i15 = i27 + 2;

        if $i15 >= $i1 goto label03;

        $i16 = i27 + 1;

        $c17 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i16);

        $z7 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c17);

        if $z7 == 0 goto label03;

        $i18 = i27 + 2;

        $c19 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i18);

        $z8 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c19);

        if $z8 != 0 goto label04;

     label03:
        $r32 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r32.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Path contains invalid escape sequence!");

        throw $r32;

     label04:
        i27 = i27 + 2;

        goto label07;

     label05:
        $z6 = staticinvoke <org.apache.xerces.util.URI: boolean isPathCharacter(char)>($c14);

        if $z6 != 0 goto label07;

        $i34 = (int) $c14;

        if $i34 == 63 goto label16;

        $i35 = (int) $c14;

        if $i35 != 35 goto label06;

        goto label16;

     label06:
        $r34 = new org.apache.xerces.util.URI$MalformedURIException;

        $r33 = new java.lang.StringBuffer;

        specialinvoke $r33.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Path contains invalid character: ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c14);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r34.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>($r19);

        throw $r34;

     label07:
        i27 = i27 + 1;

     label08:
        if i27 < $i1 goto label02;

        goto label16;

     label09:
        $c21 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i27);

        i28 = $c21;

        $i36 = (int) $c21;

        if $i36 == 63 goto label16;

        $i37 = (int) $c21;

        if $i37 != 35 goto label10;

        goto label16;

     label10:
        $i38 = (int) $c21;

        if $i38 != 37 goto label13;

        $i22 = i27 + 2;

        if $i22 >= $i1 goto label11;

        $i23 = i27 + 1;

        $c24 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i23);

        $z10 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c24);

        if $z10 == 0 goto label11;

        $i25 = i27 + 2;

        $c26 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i25);

        $z11 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c26);

        if $z11 != 0 goto label12;

     label11:
        $r35 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r35.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Opaque part contains invalid escape sequence!");

        throw $r35;

     label12:
        i27 = i27 + 2;

        goto label14;

     label13:
        $z9 = staticinvoke <org.apache.xerces.util.URI: boolean isURICharacter(char)>($c21);

        if $z9 != 0 goto label14;

        $r37 = new org.apache.xerces.util.URI$MalformedURIException;

        $r36 = new java.lang.StringBuffer;

        specialinvoke $r36.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Opaque part contains invalid character: ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c21);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r37.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>($r24);

        throw $r37;

     label14:
        i27 = i27 + 1;

     label15:
        if i27 < $i1 goto label09;

     label16:
        $r28 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i27);

        r1.<org.apache.xerces.util.URI: java.lang.String m_path> = $r28;

        if i28 != 63 goto label25;

        i27 = i27 + 1;

        i29 = i27;

        goto label23;

     label17:
        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i27);

        i28 = $c8;

        $i39 = (int) $c8;

        if $i39 != 35 goto label18;

        goto label24;

     label18:
        $i40 = (int) $c8;

        if $i40 != 37 goto label21;

        $i9 = i27 + 2;

        if $i9 >= $i1 goto label19;

        $i10 = i27 + 1;

        $c11 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i10);

        $z4 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c11);

        if $z4 == 0 goto label19;

        $i12 = i27 + 2;

        $c13 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i12);

        $z5 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c13);

        if $z5 != 0 goto label20;

     label19:
        $r38 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r38.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Query string contains invalid escape sequence!");

        throw $r38;

     label20:
        i27 = i27 + 2;

        goto label22;

     label21:
        $z3 = staticinvoke <org.apache.xerces.util.URI: boolean isURICharacter(char)>($c8);

        if $z3 != 0 goto label22;

        $r40 = new org.apache.xerces.util.URI$MalformedURIException;

        $r39 = new java.lang.StringBuffer;

        specialinvoke $r39.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Query string contains invalid character: ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r40.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>($r12);

        throw $r40;

     label22:
        i27 = i27 + 1;

     label23:
        if i27 < $i1 goto label17;

     label24:
        $r13 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i29, i27);

        r1.<org.apache.xerces.util.URI: java.lang.String m_queryString> = $r13;

     label25:
        if i28 != 35 goto label32;

        i30 = i27 + 1;

        i31 = i30;

        goto label31;

     label26:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i30);

        $i41 = (int) $c2;

        if $i41 != 37 goto label29;

        $i3 = i30 + 2;

        if $i3 >= $i1 goto label27;

        $i4 = i30 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c5);

        if $z1 == 0 goto label27;

        $i6 = i30 + 2;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i6);

        $z2 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c7);

        if $z2 != 0 goto label28;

     label27:
        $r41 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r41.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Fragment contains invalid escape sequence!");

        throw $r41;

     label28:
        i30 = i30 + 2;

        goto label30;

     label29:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isURICharacter(char)>($c2);

        if $z0 != 0 goto label30;

        $r43 = new org.apache.xerces.util.URI$MalformedURIException;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Fragment contains invalid character: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r43.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>($r6);

        throw $r43;

     label30:
        i30 = i30 + 1;

     label31:
        if i30 < $i1 goto label26;

        $r7 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i31, i30);

        r1.<org.apache.xerces.util.URI: java.lang.String m_fragment> = $r7;

     label32:
        return;
    }

    public java.lang.String getScheme()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        return $r1;
    }

    public java.lang.String getSchemeSpecificPart()
    {
        org.apache.xerces.util.URI r1;
        java.lang.StringBuffer $r16;
        int $i0, $i1, $i3;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15;

        r1 := @this: org.apache.xerces.util.URI;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r2 != null goto label1;

        $r14 = r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        if $r14 == null goto label4;

     label1:
        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r3 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r3 == null goto label3;

        $r11 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        if $r11 == null goto label2;

        $r13 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label2:
        $r12 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $i0 = r1.<org.apache.xerces.util.URI: int m_port>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label4;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i1 = r1.<org.apache.xerces.util.URI: int m_port>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        goto label4;

     label3:
        $r4 = r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label4:
        $r15 = r1.<org.apache.xerces.util.URI: java.lang.String m_path>;

        if $r15 == null goto label5;

        $r10 = r1.<org.apache.xerces.util.URI: java.lang.String m_path>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label5:
        $r5 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r5 == null goto label6;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r9 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label6:
        $r6 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r6 == null goto label7;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r8 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label7:
        $r7 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getUserinfo()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        return $r1;
    }

    public java.lang.String getHost()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_host>;

        return $r1;
    }

    public int getPort()
    {
        int $i0;
        org.apache.xerces.util.URI r0;

        r0 := @this: org.apache.xerces.util.URI;

        $i0 = r0.<org.apache.xerces.util.URI: int m_port>;

        return $i0;
    }

    public java.lang.String getRegBasedAuthority()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        return $r1;
    }

    public java.lang.String getAuthority()
    {
        org.apache.xerces.util.URI r1;
        java.lang.StringBuffer $r10;
        int $i0, $i1, $i3;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9;

        r1 := @this: org.apache.xerces.util.URI;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r2 != null goto label1;

        $r8 = r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        if $r8 == null goto label4;

     label1:
        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("//");

        $r3 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r3 == null goto label3;

        $r5 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        if $r5 == null goto label2;

        $r7 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

     label2:
        $r6 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $i0 = r1.<org.apache.xerces.util.URI: int m_port>;

        $i3 = (int) -1;

        if $i0 == $i3 goto label4;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        $i1 = r1.<org.apache.xerces.util.URI: int m_port>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        goto label4;

     label3:
        $r4 = r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority>;

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label4:
        $r9 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    public java.lang.String getPath(boolean, boolean)
    {
        org.apache.xerces.util.URI r1;
        java.lang.StringBuffer $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;
        boolean z0, z1;

        r1 := @this: org.apache.xerces.util.URI;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        $r0 = new java.lang.StringBuffer;

        $r2 = r1.<org.apache.xerces.util.URI: java.lang.String m_path>;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>($r2);

        if z0 == 0 goto label1;

        $r5 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r5 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(63);

        $r6 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label1:
        if z1 == 0 goto label2;

        $r3 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r3 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(35);

        $r4 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label2:
        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String getPath()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_path>;

        return $r1;
    }

    public java.lang.String getQueryString()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        return $r1;
    }

    public java.lang.String getFragment()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        return $r1;
    }

    public void setScheme(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        java.util.Locale $r2;
        java.lang.String r0, $r3;
        org.apache.xerces.util.URI$MalformedURIException $r4, $r5;
        boolean $z0;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        $r5 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r5.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Cannot set scheme from null string!");

        throw $r5;

     label1:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isConformantSchemeName(java.lang.String)>(r0);

        if $z0 != 0 goto label2;

        $r4 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r4.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("The scheme is not conformant.");

        throw $r4;

     label2:
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        r1.<org.apache.xerces.util.URI: java.lang.String m_scheme> = $r3;

        return;
    }

    public void setUserinfo(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        java.lang.StringBuffer $r5, $r6, $r12;
        int $i0, $i2, $i3, $i5, i7, $i8;
        java.lang.String r0, $r2, $r7;
        boolean $z0, $z1, $z2;
        char $c1, $c4, $c6;
        org.apache.xerces.util.URI$MalformedURIException $r10, $r11, $r13;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        return;

     label1:
        $r2 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r2 != null goto label2;

        $r10 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r10.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Userinfo cannot be set when host is null!");

        throw $r10;

     label2:
        i7 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        goto label7;

     label3:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c1;

        if $i8 != 37 goto label5;

        $i2 = i7 + 2;

        if $i2 >= $i0 goto label4;

        $i3 = i7 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c4);

        if $z1 == 0 goto label4;

        $i5 = i7 + 2;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $z2 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c6);

        if $z2 != 0 goto label6;

     label4:
        $r11 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r11.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Userinfo contains invalid escape sequence!");

        throw $r11;

     label5:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isUserinfoCharacter(char)>($c1);

        if $z0 != 0 goto label6;

        $r13 = new org.apache.xerces.util.URI$MalformedURIException;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Userinfo contains invalid character:");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>($r7);

        throw $r13;

     label6:
        i7 = i7 + 1;

     label7:
        if i7 < $i0 goto label3;

        r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = r0;

        return;
    }

    public void setHost(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        int $i0, $i2;
        java.lang.String r0;
        org.apache.xerces.util.URI$MalformedURIException $r3;
        boolean $z0;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label1:
        if r0 == null goto label2;

        r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

     label2:
        r1.<org.apache.xerces.util.URI: java.lang.String m_host> = r0;

        r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        $i2 = (int) -1;

        r1.<org.apache.xerces.util.URI: int m_port> = $i2;

        return;

     label3:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isWellFormedAddress(java.lang.String)>(r0);

        if $z0 != 0 goto label4;

        $r3 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r3.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Host is not a well formed address!");

        throw $r3;

     label4:
        r1.<org.apache.xerces.util.URI: java.lang.String m_host> = r0;

        r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        return;
    }

    public void setPort(int) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r0;
        int i0, $i2, $i4;
        java.lang.String $r2;
        org.apache.xerces.util.URI$MalformedURIException $r4, $r5;

        r0 := @this: org.apache.xerces.util.URI;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i2 = (int) 65535;

        if i0 > $i2 goto label1;

        $r2 = r0.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r2 != null goto label2;

        $r4 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r4.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Port cannot be set when host is null!");

        throw $r4;

     label1:
        $i4 = (int) -1;

        if i0 == $i4 goto label2;

        $r5 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r5.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Invalid port number!");

        throw $r5;

     label2:
        r0.<org.apache.xerces.util.URI: int m_port> = i0;

        return;
    }

    public void setRegBasedAuthority(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        int $i0, $i1, $i3, $i5;
        java.lang.String r0;
        org.apache.xerces.util.URI$MalformedURIException $r3;
        boolean $z0;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = null;

        return;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 < 1 goto label2;

        $z0 = specialinvoke r1.<org.apache.xerces.util.URI: boolean isValidRegistryBasedAuthority(java.lang.String)>(r0);

        if $z0 == 0 goto label2;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i3 = (int) -1;

        if $i1 == $i3 goto label3;

     label2:
        $r3 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r3.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Registry based authority is not well formed.");

        throw $r3;

     label3:
        r1.<org.apache.xerces.util.URI: java.lang.String m_regAuthority> = r0;

        r1.<org.apache.xerces.util.URI: java.lang.String m_host> = null;

        r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo> = null;

        $i5 = (int) -1;

        r1.<org.apache.xerces.util.URI: int m_port> = $i5;

        return;
    }

    public void setPath(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        java.lang.String r0;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xerces.util.URI: java.lang.String m_path> = null;

        r1.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        r1.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        goto label2;

     label1:
        specialinvoke r1.<org.apache.xerces.util.URI: void initializePath(java.lang.String,int)>(r0, 0);

     label2:
        return;
    }

    public void appendPath(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xerces.util.URI$MalformedURIException $r24;
        org.apache.xerces.util.URI r2;
        java.lang.StringBuffer $r4, $r5, $r6, $r11, $r13, $r14;
        int $i0, $i1;
        java.lang.String r0, $r1, $r3, $r7, $r8, $r9, $r10, $r12, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23;

        r2 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label01;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        return;

     label02:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isURIString(java.lang.String)>(r0);

        if $z0 != 0 goto label03;

        $r24 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r24.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Path contains invalid character!");

        throw $r24;

     label03:
        $r3 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        if $r3 == null goto label04;

        $r8 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String trim()>();

        $i1 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 != 0 goto label06;

     label04:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z1 == 0 goto label05;

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = r0;

        goto label10;

     label05:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = $r7;

        goto label10;

     label06:
        $r10 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z2 == 0 goto label08;

        $z4 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z4 == 0 goto label07;

        $r21 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $r22 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1);

        $r23 = virtualinvoke $r21.<java.lang.String: java.lang.String concat(java.lang.String)>($r22);

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = $r23;

        goto label10;

     label07:
        $r19 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $r20 = virtualinvoke $r19.<java.lang.String: java.lang.String concat(java.lang.String)>(r0);

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = $r20;

        goto label10;

     label08:
        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z3 == 0 goto label09;

        $r17 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String concat(java.lang.String)>(r0);

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = $r18;

        goto label10;

     label09:
        $r12 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("/");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = virtualinvoke $r12.<java.lang.String: java.lang.String concat(java.lang.String)>($r15);

        r2.<org.apache.xerces.util.URI: java.lang.String m_path> = $r16;

     label10:
        return;
    }

    public void setQueryString(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        java.lang.String r0, $r2;
        org.apache.xerces.util.URI$MalformedURIException $r3, $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xerces.util.URI: java.lang.String m_queryString> = null;

        goto label5;

     label1:
        $z0 = virtualinvoke r1.<org.apache.xerces.util.URI: boolean isGenericURI()>();

        if $z0 != 0 goto label2;

        $r5 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r5.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Query string can only be set for a generic URI!");

        throw $r5;

     label2:
        $r2 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getPath()>();

        if $r2 != null goto label3;

        $r4 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r4.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Query string cannot be set when path is null!");

        throw $r4;

     label3:
        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isURIString(java.lang.String)>(r0);

        if $z1 != 0 goto label4;

        $r3 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r3.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Query string contains invalid character!");

        throw $r3;

     label4:
        r1.<org.apache.xerces.util.URI: java.lang.String m_queryString> = r0;

     label5:
        return;
    }

    public void setFragment(java.lang.String) throws org.apache.xerces.util.URI$MalformedURIException
    {
        org.apache.xerces.util.URI r1;
        java.lang.String r0, $r2;
        org.apache.xerces.util.URI$MalformedURIException $r3, $r4, $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        r1.<org.apache.xerces.util.URI: java.lang.String m_fragment> = null;

        goto label5;

     label1:
        $z0 = virtualinvoke r1.<org.apache.xerces.util.URI: boolean isGenericURI()>();

        if $z0 != 0 goto label2;

        $r5 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r5.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Fragment can only be set for a generic URI!");

        throw $r5;

     label2:
        $r2 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getPath()>();

        if $r2 != null goto label3;

        $r4 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r4.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Fragment cannot be set when path is null!");

        throw $r4;

     label3:
        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isURIString(java.lang.String)>(r0);

        if $z1 != 0 goto label4;

        $r3 = new org.apache.xerces.util.URI$MalformedURIException;

        specialinvoke $r3.<org.apache.xerces.util.URI$MalformedURIException: void <init>(java.lang.String)>("Fragment contains invalid character!");

        throw $r3;

     label4:
        r1.<org.apache.xerces.util.URI: java.lang.String m_fragment> = r0;

     label5:
        return;
    }

    public boolean equals(java.lang.Object)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xerces.util.URI r1, r2;
        int $i0, $i1;
        java.lang.String $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38;
        java.lang.Object r0;

        r2 := @this: org.apache.xerces.util.URI;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.xerces.util.URI;

        if $z0 == 0 goto label13;

        r1 = (org.apache.xerces.util.URI) r0;

        $r3 = r2.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r3 != null goto label01;

        $r38 = r1.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r38 == null goto label02;

     label01:
        $r4 = r2.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r4 == null goto label13;

        $r5 = r1.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r5 == null goto label13;

        $r7 = r2.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        $r6 = r1.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 == 0 goto label13;

     label02:
        $r8 = r2.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        if $r8 != null goto label03;

        $r37 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        if $r37 == null goto label04;

     label03:
        $r9 = r2.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        if $r9 == null goto label13;

        $r10 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        if $r10 == null goto label13;

        $r12 = r2.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        $r11 = r1.<org.apache.xerces.util.URI: java.lang.String m_userinfo>;

        $z2 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z2 == 0 goto label13;

     label04:
        $r13 = r2.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r13 != null goto label05;

        $r36 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r36 == null goto label06;

     label05:
        $r14 = r2.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r14 == null goto label13;

        $r15 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r15 == null goto label13;

        $r17 = r2.<org.apache.xerces.util.URI: java.lang.String m_host>;

        $r16 = r1.<org.apache.xerces.util.URI: java.lang.String m_host>;

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r16);

        if $z3 == 0 goto label13;

     label06:
        $i1 = r2.<org.apache.xerces.util.URI: int m_port>;

        $i0 = r1.<org.apache.xerces.util.URI: int m_port>;

        if $i1 != $i0 goto label13;

        $r18 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        if $r18 != null goto label07;

        $r35 = r1.<org.apache.xerces.util.URI: java.lang.String m_path>;

        if $r35 == null goto label08;

     label07:
        $r19 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        if $r19 == null goto label13;

        $r20 = r1.<org.apache.xerces.util.URI: java.lang.String m_path>;

        if $r20 == null goto label13;

        $r22 = r2.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $r21 = r1.<org.apache.xerces.util.URI: java.lang.String m_path>;

        $z4 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r21);

        if $z4 == 0 goto label13;

     label08:
        $r23 = r2.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r23 != null goto label09;

        $r34 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r34 == null goto label10;

     label09:
        $r24 = r2.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r24 == null goto label13;

        $r25 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        if $r25 == null goto label13;

        $r27 = r2.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        $r26 = r1.<org.apache.xerces.util.URI: java.lang.String m_queryString>;

        $z5 = virtualinvoke $r27.<java.lang.String: boolean equals(java.lang.Object)>($r26);

        if $z5 == 0 goto label13;

     label10:
        $r28 = r2.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r28 != null goto label11;

        $r33 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r33 == null goto label12;

     label11:
        $r29 = r2.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r29 == null goto label13;

        $r30 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        if $r30 == null goto label13;

        $r32 = r2.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        $r31 = r1.<org.apache.xerces.util.URI: java.lang.String m_fragment>;

        $z6 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r31);

        if $z6 == 0 goto label13;

     label12:
        return 1;

     label13:
        return 0;
    }

    public java.lang.String toString()
    {
        org.apache.xerces.util.URI r1;
        java.lang.StringBuffer $r0;
        java.lang.String $r2, $r3, $r4, $r5;

        r1 := @this: org.apache.xerces.util.URI;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = r1.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r2 == null goto label1;

        $r5 = r1.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

     label1:
        $r3 = virtualinvoke r1.<org.apache.xerces.util.URI: java.lang.String getSchemeSpecificPart()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    public boolean isGenericURI()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_host>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAbsoluteURI()
    {
        org.apache.xerces.util.URI r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.xerces.util.URI;

        $r1 = r0.<org.apache.xerces.util.URI: java.lang.String m_scheme>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isConformantSchemeName(java.lang.String)
    {
        char $c1, $c3;
        int $i0, $i2, i4;
        java.lang.String r0, $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isAlpha(char)>($c1);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        i4 = 1;

        goto label6;

     label4:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isSchemeCharacter(char)>($c3);

        if $z1 != 0 goto label5;

        return 0;

     label5:
        i4 = i4 + 1;

     label6:
        if i4 < $i2 goto label4;

        return 1;
    }

    public static boolean isWellFormedAddress(java.lang.String)
    {
        int $i0, $i1, $i2, $i4, $i6, $i7, $i9, i11, i12, i13, $i14, $i15;
        java.lang.String r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        char $c3, $c5, $c8, $c10;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        return 0;

     label01:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

        return 0;

     label02:
        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("[");

        if $z0 == 0 goto label03;

        $z10 = staticinvoke <org.apache.xerces.util.URI: boolean isWellFormedIPv6Reference(java.lang.String)>(r0);

        return $z10;

     label03:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(".");

        if $z1 != 0 goto label04;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("-");

        if $z2 != 0 goto label04;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("-");

        if $z3 == 0 goto label05;

     label04:
        return 0;

     label05:
        $i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46);

        i11 = $i1;

        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(".");

        if $z4 == 0 goto label06;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

        i11 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int)>(46);

     label06:
        $i2 = i11 + 1;

        if $i2 >= $i0 goto label07;

        $i9 = i11 + 1;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        $z8 = staticinvoke <org.apache.xerces.util.URI: boolean isDigit(char)>($c10);

        if $z8 == 0 goto label07;

        $z9 = staticinvoke <org.apache.xerces.util.URI: boolean isWellFormedIPv4Address(java.lang.String)>(r0);

        return $z9;

     label07:
        if $i0 <= 255 goto label08;

        return 0;

     label08:
        i12 = 0;

        i13 = 0;

        goto label15;

     label09:
        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $i14 = (int) $c3;

        if $i14 != 46 goto label12;

        $i4 = i13 - 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $z6 = staticinvoke <org.apache.xerces.util.URI: boolean isAlphanum(char)>($c5);

        if $z6 != 0 goto label10;

        return 0;

     label10:
        $i6 = i13 + 1;

        if $i6 >= $i0 goto label11;

        $i7 = i13 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $z7 = staticinvoke <org.apache.xerces.util.URI: boolean isAlphanum(char)>($c8);

        if $z7 != 0 goto label11;

        return 0;

     label11:
        i12 = 0;

        goto label14;

     label12:
        $z5 = staticinvoke <org.apache.xerces.util.URI: boolean isAlphanum(char)>($c3);

        if $z5 != 0 goto label13;

        $i15 = (int) $c3;

        if $i15 == 45 goto label13;

        return 0;

     label13:
        i12 = i12 + 1;

        if i12 <= 63 goto label14;

        return 0;

     label14:
        i13 = i13 + 1;

     label15:
        if i13 < $i0 goto label09;

        return 1;
    }

    public static boolean isWellFormedIPv4Address(java.lang.String)
    {
        int $i0, $i2, $i4, $i6, $i7, $i9, i11, i12, i13, $i14, $i15, $i16, $i17, $i18, $i19;
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3;
        char $c1, $c3, $c5, $c8, $c10;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i11 = 0;

        i12 = 0;

        i13 = 0;

        goto label10;

     label01:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $i14 = (int) $c1;

        if $i14 != 46 goto label05;

        if i13 <= 0 goto label02;

        $i9 = i13 - 1;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        $z2 = staticinvoke <org.apache.xerces.util.URI: boolean isDigit(char)>($c10);

        if $z2 == 0 goto label03;

     label02:
        $i6 = i13 + 1;

        if $i6 >= $i0 goto label04;

        $i7 = i13 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isDigit(char)>($c8);

        if $z1 != 0 goto label04;

     label03:
        return 0;

     label04:
        i12 = 0;

        i11 = i11 + 1;

        if i11 <= 3 goto label09;

        return 0;

     label05:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isDigit(char)>($c1);

        if $z0 != 0 goto label06;

        return 0;

     label06:
        i12 = i12 + 1;

        if i12 <= 3 goto label07;

        return 0;

     label07:
        if i12 != 3 goto label09;

        $i2 = i13 - 2;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i4 = i13 - 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i15 = (int) $c3;

        if $i15 < 50 goto label09;

        $i16 = (int) $c3;

        if $i16 != 50 goto label08;

        $i17 = (int) $c5;

        if $i17 < 53 goto label09;

        $i18 = (int) $c5;

        if $i18 != 53 goto label08;

        $i19 = (int) $c1;

        if $i19 <= 53 goto label09;

     label08:
        return 0;

     label09:
        i13 = i13 + 1;

     label10:
        if i13 < $i0 goto label01;

        if i11 != 3 goto label11;

        $z3 = 1;

        goto label12;

     label11:
        $z3 = 0;

     label12:
        return $z3;
    }

    public static boolean isWellFormedIPv6Reference(java.lang.String)
    {
        int[] r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        int $i0, i1, $i4, $i5, $i7, $i9, $i10, $i11, $i12, i13, $i14, $i15, $i16, i17, $i18, $i19, $i20, $i22, $i23, $i24, $i26;
        java.lang.String r0, $r2, $r3;
        char $c2, $c3, $c6, $c8;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i1 = $i0 - 1;

        if $i0 <= 2 goto label01;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i19 = (int) $c2;

        if $i19 != 91 goto label01;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i1);

        $i20 = (int) $c3;

        if $i20 == 93 goto label02;

     label01:
        return 0;

     label02:
        r1 = newarray (int)[1];

        $i4 = staticinvoke <org.apache.xerces.util.URI: int scanHexSequence(java.lang.String,int,int,int[])>(r0, 1, i1, r1);

        $i22 = (int) -1;

        if $i4 != $i22 goto label03;

        return 0;

     label03:
        if $i4 != i1 goto label06;

        $i16 = r1[0];

        if $i16 != 8 goto label04;

        $z2 = 1;

        goto label05;

     label04:
        $z2 = 0;

     label05:
        return $z2;

     label06:
        $i5 = $i4 + 1;

        if $i5 >= i1 goto label11;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i23 = (int) $c6;

        if $i23 != 58 goto label11;

        $i7 = $i4 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $i24 = (int) $c8;

        if $i24 != 58 goto label08;

        $i11 = r1[0];

        $i12 = $i11 + 1;

        r1[0] = $i12;

        if $i12 <= 8 goto label07;

        return 0;

     label07:
        i17 = $i4 + 2;

        if i17 != i1 goto label12;

        return 1;

     label08:
        $i9 = r1[0];

        if $i9 != 6 goto label09;

        $i10 = $i4 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i10, i1);

        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isWellFormedIPv4Address(java.lang.String)>($r2);

        if $z0 == 0 goto label09;

        $z3 = 1;

        goto label10;

     label09:
        $z3 = 0;

     label10:
        return $z3;

     label11:
        return 0;

     label12:
        i13 = r1[0];

        $i14 = staticinvoke <org.apache.xerces.util.URI: int scanHexSequence(java.lang.String,int,int,int[])>(r0, i17, i1, r1);

        if $i14 == i1 goto label15;

        $i26 = (int) -1;

        if $i14 == $i26 goto label16;

        $i15 = r1[0];

        if $i15 <= i13 goto label13;

        $i18 = $i14 + 1;

        goto label14;

     label13:
        $i18 = $i14;

     label14:
        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i18, i1);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isWellFormedIPv4Address(java.lang.String)>($r3);

        if $z1 == 0 goto label16;

     label15:
        $z4 = 1;

        goto label17;

     label16:
        $z4 = 0;

     label17:
        return $z4;
    }

    private static int scanHexSequence(java.lang.String, int, int, int[])
    {
        int[] r1;
        int i0, i1, $i3, $i4, i5, $i6, $i7, $i9, $i10, $i11, $i12, i13, i14, $i15, $i16, $i17, $i19, $i20, $i21, $i23, $i25, $i27;
        java.lang.String r0;
        boolean $z0;
        char $c2, $c8;

        r0 := @parameter0: java.lang.String;

        i13 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i14 = 0;

        i0 = i13;

        goto label11;

     label01:
        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i13);

        $i17 = (int) $c2;

        if $i17 != 58 goto label05;

        if i14 <= 0 goto label02;

        $i9 = r1[0];

        $i10 = $i9 + 1;

        r1[0] = $i10;

        if $i10 <= 8 goto label02;

        $i19 = (int) -1;

        return $i19;

     label02:
        if i14 == 0 goto label03;

        $i6 = i13 + 1;

        if $i6 >= i1 goto label04;

        $i7 = i13 + 1;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $i20 = (int) $c8;

        if $i20 != 58 goto label04;

     label03:
        return i13;

     label04:
        i14 = 0;

        goto label10;

     label05:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c2);

        if $z0 != 0 goto label09;

        $i21 = (int) $c2;

        if $i21 != 46 goto label08;

        if i14 >= 4 goto label08;

        if i14 <= 0 goto label08;

        $i3 = r1[0];

        if $i3 > 6 goto label08;

        $i4 = i13 - i14;

        i5 = $i4 - 1;

        if i5 < i0 goto label06;

        $i15 = i5;

        goto label07;

     label06:
        $i15 = i5 + 1;

     label07:
        return $i15;

     label08:
        $i23 = (int) -1;

        return $i23;

     label09:
        i14 = i14 + 1;

        if i14 <= 4 goto label10;

        $i25 = (int) -1;

        return $i25;

     label10:
        i13 = i13 + 1;

     label11:
        if i13 < i1 goto label01;

        if i14 <= 0 goto label12;

        $i11 = r1[0];

        $i12 = $i11 + 1;

        r1[0] = $i12;

        if $i12 > 8 goto label12;

        $i16 = i1;

        goto label13;

     label12:
        $i27 = (int) -1;

        $i16 = $i27;

     label13:
        return $i16;
    }

    private static boolean isDigit(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 48 goto label1;

        $i2 = (int) c0;

        if $i2 > 57 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isHex(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 102 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 64;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isAlpha(char)
    {
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 97 goto label1;

        $i2 = (int) c0;

        if $i2 <= 122 goto label2;

     label1:
        $i3 = (int) c0;

        if $i3 < 65 goto label3;

        $i4 = (int) c0;

        if $i4 > 90 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    private static boolean isAlphanum(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 122 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 48;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isReservedCharacter(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 93 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 1;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isUnreservedCharacter(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 126 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 50;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isURICharacter(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 126 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 51;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isSchemeCharacter(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 122 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 52;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isUserinfoCharacter(char)
    {
        byte[] $r0;
        byte $b1, $b2;
        int $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 122 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $b2 = $b1 & 58;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isPathCharacter(char)
    {
        byte[] $r0;
        char c0;
        short $s2, $s5;
        byte $b1;
        int $i3, $i4;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 > 126 goto label1;

        $r0 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i4 = (int) c0;

        $b1 = $r0[$i4];

        $s5 = (short) $b1;

        $s2 = $s5 & 178;

        if $s2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    private static boolean isURIString(java.lang.String)
    {
        char $c1, $c4, $c6;
        int $i0, $i2, $i3, $i5, i7, $i8;
        java.lang.String r0;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i7 = 0;

        goto label8;

     label2:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i7);

        $i8 = (int) $c1;

        if $i8 != 37 goto label5;

        $i2 = i7 + 2;

        if $i2 >= $i0 goto label3;

        $i3 = i7 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $z1 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c4);

        if $z1 == 0 goto label3;

        $i5 = i7 + 2;

        $c6 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i5);

        $z2 = staticinvoke <org.apache.xerces.util.URI: boolean isHex(char)>($c6);

        if $z2 != 0 goto label4;

     label3:
        return 0;

     label4:
        i7 = i7 + 2;

        goto label7;

     label5:
        $z0 = staticinvoke <org.apache.xerces.util.URI: boolean isURICharacter(char)>($c1);

        if $z0 == 0 goto label6;

        goto label7;

     label6:
        return 0;

     label7:
        i7 = i7 + 1;

     label8:
        if i7 < $i0 goto label2;

        return 1;
    }

    static void <clinit>()
    {
        byte[] $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45;
        byte $b0, $b1, $b2, $b3, $b4, $b5, $b7, $b8, $b9, $b10, $b11, $b12, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b30, $b31, $b32, $b33, $b34, $b35, $b36, $b37, $b38, $b39, $b40, $b41, $b42, $b43, $b44, $b45, $b46, $b47, $b48, $b49, $b50, $b51, $b52, $b53, $b54, $b55, $b56, $b57, $b58, $b59, $b60, $b61, $b62, $b63, $b64, $b65, $b66, $b67, $b68, $b69, $b70, $b71, $b72, $b73, $b74, $b75, $b76, $b77, $b78, $b79, $b80, $b81, $b82, $b83, $b84, $b85, $b86, $b87, $b88, $b89, $b90, $b91, $b92, $b93, $b94, $b95, $b96, $b97, $b98, $b99, $b100, $b101, $b102, $b103, $b104, $b105, $b106, $b107, $b108, $b109, $b110, $b112, $b113, $b115, $b116, $b118, $b119, $b121, $b122, $b124, $b125, $b127, $b128, $b130, $b131, $b133, $b134, $b136;
        short $s111, $s114, $s117, $s120, $s123, $s126, $s129, $s132, $s135, $s140, $s141, $s142, $s143, $s144, $s145, $s146, $s147, $s148;
        int $i6, $i13, i137, i138, i139;

        <org.apache.xerces.util.URI: int MASK_PATH_CHARACTER> = 178;

        <org.apache.xerces.util.URI: int MASK_USERINFO_CHARACTER> = 58;

        <org.apache.xerces.util.URI: int MASK_SCHEME_CHARACTER> = 52;

        <org.apache.xerces.util.URI: int MASK_URI_CHARACTER> = 51;

        <org.apache.xerces.util.URI: int MASK_UNRESERVED_MASK> = 50;

        <org.apache.xerces.util.URI: int MASK_ALPHA_NUMERIC> = 48;

        <org.apache.xerces.util.URI: int PATH_CHARACTERS> = 128;

        <org.apache.xerces.util.URI: int ASCII_HEX_CHARACTERS> = 64;

        <org.apache.xerces.util.URI: int ASCII_DIGIT_CHARACTERS> = 32;

        <org.apache.xerces.util.URI: int ASCII_ALPHA_CHARACTERS> = 16;

        <org.apache.xerces.util.URI: int USERINFO_CHARACTERS> = 8;

        <org.apache.xerces.util.URI: int SCHEME_CHARACTERS> = 4;

        <org.apache.xerces.util.URI: int MARK_CHARACTERS> = 2;

        <org.apache.xerces.util.URI: int RESERVED_CHARACTERS> = 1;

        <org.apache.xerces.util.URI: long serialVersionUID> = 1601921774685357214L;

        $r0 = newarray (byte)[128];

        <org.apache.xerces.util.URI: byte[] fgLookupTable> = $r0;

        i137 = 48;

        goto label2;

     label1:
        $r1 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b0 = $r1[i137];

        $b1 = $b0 | 96;

        $b2 = (byte) $b1;

        $r1[i137] = $b2;

        i137 = i137 + 1;

     label2:
        if i137 <= 57 goto label1;

        i138 = 65;

        goto label4;

     label3:
        $r2 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b3 = $r2[i138];

        $b4 = $b3 | 80;

        $b5 = (byte) $b4;

        $r2[i138] = $b5;

        $r3 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i6 = i138 + 32;

        $b7 = $r3[$i6];

        $b8 = $b7 | 80;

        $b9 = (byte) $b8;

        $r3[$i6] = $b9;

        i138 = i138 + 1;

     label4:
        if i138 <= 70 goto label3;

        i139 = 71;

        goto label6;

     label5:
        $r4 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b10 = $r4[i139];

        $b11 = $b10 | 16;

        $b12 = (byte) $b11;

        $r4[i139] = $b12;

        $r5 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $i13 = i139 + 32;

        $b14 = $r5[$i13];

        $b15 = $b14 | 16;

        $b16 = (byte) $b15;

        $r5[$i13] = $b16;

        i139 = i139 + 1;

     label6:
        if i139 <= 90 goto label5;

        $r6 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b17 = $r6[59];

        $b18 = $b17 | 1;

        $b19 = (byte) $b18;

        $r6[59] = $b19;

        $r7 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b20 = $r7[47];

        $b21 = $b20 | 1;

        $b22 = (byte) $b21;

        $r7[47] = $b22;

        $r8 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b23 = $r8[63];

        $b24 = $b23 | 1;

        $b25 = (byte) $b24;

        $r8[63] = $b25;

        $r9 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b26 = $r9[58];

        $b27 = $b26 | 1;

        $b28 = (byte) $b27;

        $r9[58] = $b28;

        $r10 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b29 = $r10[64];

        $b30 = $b29 | 1;

        $b31 = (byte) $b30;

        $r10[64] = $b31;

        $r11 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b32 = $r11[38];

        $b33 = $b32 | 1;

        $b34 = (byte) $b33;

        $r11[38] = $b34;

        $r12 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b35 = $r12[61];

        $b36 = $b35 | 1;

        $b37 = (byte) $b36;

        $r12[61] = $b37;

        $r13 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b38 = $r13[43];

        $b39 = $b38 | 1;

        $b40 = (byte) $b39;

        $r13[43] = $b40;

        $r14 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b41 = $r14[36];

        $b42 = $b41 | 1;

        $b43 = (byte) $b42;

        $r14[36] = $b43;

        $r15 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b44 = $r15[44];

        $b45 = $b44 | 1;

        $b46 = (byte) $b45;

        $r15[44] = $b46;

        $r16 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b47 = $r16[91];

        $b48 = $b47 | 1;

        $b49 = (byte) $b48;

        $r16[91] = $b49;

        $r17 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b50 = $r17[93];

        $b51 = $b50 | 1;

        $b52 = (byte) $b51;

        $r17[93] = $b52;

        $r18 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b53 = $r18[45];

        $b54 = $b53 | 2;

        $b55 = (byte) $b54;

        $r18[45] = $b55;

        $r19 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b56 = $r19[95];

        $b57 = $b56 | 2;

        $b58 = (byte) $b57;

        $r19[95] = $b58;

        $r20 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b59 = $r20[46];

        $b60 = $b59 | 2;

        $b61 = (byte) $b60;

        $r20[46] = $b61;

        $r21 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b62 = $r21[33];

        $b63 = $b62 | 2;

        $b64 = (byte) $b63;

        $r21[33] = $b64;

        $r22 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b65 = $r22[126];

        $b66 = $b65 | 2;

        $b67 = (byte) $b66;

        $r22[126] = $b67;

        $r23 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b68 = $r23[42];

        $b69 = $b68 | 2;

        $b70 = (byte) $b69;

        $r23[42] = $b70;

        $r24 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b71 = $r24[39];

        $b72 = $b71 | 2;

        $b73 = (byte) $b72;

        $r24[39] = $b73;

        $r25 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b74 = $r25[40];

        $b75 = $b74 | 2;

        $b76 = (byte) $b75;

        $r25[40] = $b76;

        $r26 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b77 = $r26[41];

        $b78 = $b77 | 2;

        $b79 = (byte) $b78;

        $r26[41] = $b79;

        $r27 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b80 = $r27[43];

        $b81 = $b80 | 4;

        $b82 = (byte) $b81;

        $r27[43] = $b82;

        $r28 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b83 = $r28[45];

        $b84 = $b83 | 4;

        $b85 = (byte) $b84;

        $r28[45] = $b85;

        $r29 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b86 = $r29[46];

        $b87 = $b86 | 4;

        $b88 = (byte) $b87;

        $r29[46] = $b88;

        $r30 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b89 = $r30[59];

        $b90 = $b89 | 8;

        $b91 = (byte) $b90;

        $r30[59] = $b91;

        $r31 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b92 = $r31[58];

        $b93 = $b92 | 8;

        $b94 = (byte) $b93;

        $r31[58] = $b94;

        $r32 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b95 = $r32[38];

        $b96 = $b95 | 8;

        $b97 = (byte) $b96;

        $r32[38] = $b97;

        $r33 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b98 = $r33[61];

        $b99 = $b98 | 8;

        $b100 = (byte) $b99;

        $r33[61] = $b100;

        $r34 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b101 = $r34[43];

        $b102 = $b101 | 8;

        $b103 = (byte) $b102;

        $r34[43] = $b103;

        $r35 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b104 = $r35[36];

        $b105 = $b104 | 8;

        $b106 = (byte) $b105;

        $r35[36] = $b106;

        $r36 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b107 = $r36[44];

        $b108 = $b107 | 8;

        $b109 = (byte) $b108;

        $r36[44] = $b109;

        $r37 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b110 = $r37[59];

        $s140 = (short) $b110;

        $s111 = $s140 | 128;

        $b112 = (byte) $s111;

        $r37[59] = $b112;

        $r38 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b113 = $r38[47];

        $s141 = (short) $b113;

        $s114 = $s141 | 128;

        $b115 = (byte) $s114;

        $r38[47] = $b115;

        $r39 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b116 = $r39[58];

        $s142 = (short) $b116;

        $s117 = $s142 | 128;

        $b118 = (byte) $s117;

        $r39[58] = $b118;

        $r40 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b119 = $r40[64];

        $s143 = (short) $b119;

        $s120 = $s143 | 128;

        $b121 = (byte) $s120;

        $r40[64] = $b121;

        $r41 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b122 = $r41[38];

        $s144 = (short) $b122;

        $s123 = $s144 | 128;

        $b124 = (byte) $s123;

        $r41[38] = $b124;

        $r42 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b125 = $r42[61];

        $s145 = (short) $b125;

        $s126 = $s145 | 128;

        $b127 = (byte) $s126;

        $r42[61] = $b127;

        $r43 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b128 = $r43[43];

        $s146 = (short) $b128;

        $s129 = $s146 | 128;

        $b130 = (byte) $s129;

        $r43[43] = $b130;

        $r44 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b131 = $r44[36];

        $s147 = (short) $b131;

        $s132 = $s147 | 128;

        $b133 = (byte) $s132;

        $r44[36] = $b133;

        $r45 = <org.apache.xerces.util.URI: byte[] fgLookupTable>;

        $b134 = $r45[44];

        $s148 = (short) $b134;

        $s135 = $s148 | 128;

        $b136 = (byte) $s135;

        $r45[44] = $b136;

        <org.apache.xerces.util.URI: boolean DEBUG> = 0;

        return;
    }
}
