public class org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed extends java.lang.Object implements org.apache.batik.ext.awt.image.rendered.CachableRed
{
    private java.awt.image.RenderedImage src;
    private java.util.Vector srcs;

    public static org.apache.batik.ext.awt.image.rendered.CachableRed wrap(java.awt.image.RenderedImage)
    {
        org.apache.batik.ext.awt.image.rendered.CachableRed $r4;
        java.awt.image.BufferedImage $r3;
        org.apache.batik.ext.awt.image.rendered.BufferedImageCachableRed $r2;
        java.awt.image.RenderedImage r0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.awt.image.RenderedImage;

        $z0 = r0 instanceof org.apache.batik.ext.awt.image.rendered.CachableRed;

        if $z0 == 0 goto label1;

        $r4 = (org.apache.batik.ext.awt.image.rendered.CachableRed) r0;

        return $r4;

     label1:
        $z1 = r0 instanceof java.awt.image.BufferedImage;

        if $z1 == 0 goto label2;

        $r2 = new org.apache.batik.ext.awt.image.rendered.BufferedImageCachableRed;

        $r3 = (java.awt.image.BufferedImage) r0;

        specialinvoke $r2.<org.apache.batik.ext.awt.image.rendered.BufferedImageCachableRed: void <init>(java.awt.image.BufferedImage)>($r3);

        return $r2;

     label2:
        $r1 = new org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        specialinvoke $r1.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: void <init>(java.awt.image.RenderedImage)>(r0);

        return $r1;
    }

    public void <init>(java.awt.image.RenderedImage)
    {
        java.util.Vector $r1;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage r2;
        java.lang.IllegalArgumentException $r3;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        r2 := @parameter0: java.awt.image.RenderedImage;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>(int)>(0);

        r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.util.Vector srcs> = $r1;

        if r2 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src> = r2;

        return;
    }

    public java.util.Vector getSources()
    {
        java.util.Vector $r1;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.util.Vector srcs>;

        return $r1;
    }

    public java.awt.Rectangle getBounds()
    {
        java.awt.Rectangle $r0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r1;
        int $i0, $i1, $i2, $i3;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r0 = new java.awt.Rectangle;

        $i0 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: int getMinX()>();

        $i1 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: int getMinY()>();

        $i2 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: int getWidth()>();

        $i3 = virtualinvoke r1.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: int getHeight()>();

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>($i0, $i1, $i2, $i3);

        return $r0;
    }

    public int getMinX()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getMinX()>();

        return $i0;
    }

    public int getMinY()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getMinY()>();

        return $i0;
    }

    public int getWidth()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getWidth()>();

        return $i0;
    }

    public int getHeight()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getHeight()>();

        return $i0;
    }

    public java.awt.image.ColorModel getColorModel()
    {
        java.awt.image.ColorModel $r2;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.awt.image.ColorModel getColorModel()>();

        return $r2;
    }

    public java.awt.image.SampleModel getSampleModel()
    {
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;
        java.awt.image.SampleModel $r2;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.awt.image.SampleModel getSampleModel()>();

        return $r2;
    }

    public int getMinTileX()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getMinTileX()>();

        return $i0;
    }

    public int getMinTileY()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getMinTileY()>();

        return $i0;
    }

    public int getNumXTiles()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getNumXTiles()>();

        return $i0;
    }

    public int getNumYTiles()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getNumYTiles()>();

        return $i0;
    }

    public int getTileGridXOffset()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getTileGridXOffset()>();

        return $i0;
    }

    public int getTileGridYOffset()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getTileGridYOffset()>();

        return $i0;
    }

    public int getTileWidth()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getTileWidth()>();

        return $i0;
    }

    public int getTileHeight()
    {
        int $i0;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $i0 = interfaceinvoke $r1.<java.awt.image.RenderedImage: int getTileHeight()>();

        return $i0;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r2;
        java.lang.Object $r3;
        java.lang.String r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r3 = interfaceinvoke $r2.<java.awt.image.RenderedImage: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r3;
    }

    public java.lang.String[] getPropertyNames()
    {
        java.lang.String[] $r2;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.lang.String[] getPropertyNames()>();

        return $r2;
    }

    public java.awt.image.Raster getTile(int, int)
    {
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;
        int i0, i1;
        java.awt.image.Raster $r2;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.awt.image.Raster getTile(int,int)>(i0, i1);

        return $r2;
    }

    public java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)
    {
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r2;
        java.awt.image.WritableRaster r1, $r3;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        r1 := @parameter0: java.awt.image.WritableRaster;

        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r3 = interfaceinvoke $r2.<java.awt.image.RenderedImage: java.awt.image.WritableRaster copyData(java.awt.image.WritableRaster)>(r1);

        return $r3;
    }

    public java.awt.image.Raster getData()
    {
        java.awt.image.Raster $r2;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r1;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r2 = interfaceinvoke $r1.<java.awt.image.RenderedImage: java.awt.image.Raster getData()>();

        return $r2;
    }

    public java.awt.image.Raster getData(java.awt.Rectangle)
    {
        java.awt.Rectangle r1;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r0;
        java.awt.image.RenderedImage $r2;
        java.awt.image.Raster $r3;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        r1 := @parameter0: java.awt.Rectangle;

        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed: java.awt.image.RenderedImage src>;

        $r3 = interfaceinvoke $r2.<java.awt.image.RenderedImage: java.awt.image.Raster getData(java.awt.Rectangle)>(r1);

        return $r3;
    }

    public java.awt.Shape getDependencyRegion(int, java.awt.Rectangle)
    {
        java.lang.IndexOutOfBoundsException $r0;
        java.awt.Rectangle r2;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r1;
        int i0;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        i0 := @parameter0: int;

        r2 := @parameter1: java.awt.Rectangle;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Nonexistant source requested.");

        throw $r0;
    }

    public java.awt.Shape getDirtyRegion(int, java.awt.Rectangle)
    {
        java.lang.IndexOutOfBoundsException $r0;
        java.awt.Rectangle r2;
        org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed r1;
        int i0;

        r1 := @this: org.apache.batik.ext.awt.image.rendered.RenderedImageCachableRed;

        i0 := @parameter0: int;

        r2 := @parameter1: java.awt.Rectangle;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Nonexistant source requested.");

        throw $r0;
    }
}
