class org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet extends org.waveprotocol.wave.model.document.util.LocalAnnotationSetImpl implements org.waveprotocol.wave.client.editor.content.DiffHighlightingFilter$DiffHighlightTarget
{
    final org.waveprotocol.wave.client.editor.content.ContentDocument this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.ContentDocument, org.waveprotocol.wave.model.document.indexed.RawAnnotationSet)
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentDocument;

        r2 := @parameter1: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet;

        r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: org.waveprotocol.wave.client.editor.content.ContentDocument this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.document.util.LocalAnnotationSetImpl: void <init>(org.waveprotocol.wave.model.document.indexed.RawAnnotationSet)>(r2);

        return;
    }

    public void startLocalAnnotation(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r3;
        java.lang.Object r2;
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: void checkLocalKey(java.lang.String)>(r1);

        $r3 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet fullAnnotationSet>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void startAnnotation(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    public void endLocalAnnotation(java.lang.String)
    {
        org.waveprotocol.wave.model.document.indexed.RawAnnotationSet $r2;
        java.lang.String r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: void checkLocalKey(java.lang.String)>(r1);

        $r2 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: org.waveprotocol.wave.model.document.indexed.RawAnnotationSet fullAnnotationSet>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.indexed.RawAnnotationSet: void endAnnotation(java.lang.String)>(r1);

        return;
    }

    public org.waveprotocol.wave.client.editor.content.ContentNode getCurrentNode()
    {
        org.waveprotocol.wave.client.editor.content.ContentNode $r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$ContentIndexedDoc $r2;
        org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: org.waveprotocol.wave.client.editor.content.ContentDocument$ContentIndexedDoc access$1200(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        $r3 = virtualinvoke $r2.<org.waveprotocol.wave.client.editor.content.ContentDocument$ContentIndexedDoc: org.waveprotocol.wave.client.editor.content.ContentNode getCurrentNode()>();

        return $r3;
    }

    public void consume(org.waveprotocol.wave.model.document.operation.DocOp) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.OperationException $r4;
        org.waveprotocol.wave.model.document.operation.DocOp r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument $r2;
        org.waveprotocol.wave.model.operation.OperationRuntimeException $r3;
        org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet;

        r1 := @parameter0: org.waveprotocol.wave.model.document.operation.DocOp;

     label1:
        $r2 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: void access$2200(org.waveprotocol.wave.client.editor.content.ContentDocument,org.waveprotocol.wave.model.document.operation.DocOp,boolean,boolean)>($r2, r1, 0, 1);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.operation.OperationRuntimeException: org.waveprotocol.wave.model.operation.OperationException get()>();

        throw $r4;

     label4:
        return;

        catch org.waveprotocol.wave.model.operation.OperationRuntimeException from label1 to label2 with label3;
    }

    public boolean isApplyingToDocument()
    {
        org.waveprotocol.wave.client.editor.content.ContentDocument $r1;
        org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.ContentDocument$LocalAnnotationSet: org.waveprotocol.wave.client.editor.content.ContentDocument this$0>;

        $z0 = staticinvoke <org.waveprotocol.wave.client.editor.content.ContentDocument: boolean access$2300(org.waveprotocol.wave.client.editor.content.ContentDocument)>($r1);

        return $z0;
    }
}
