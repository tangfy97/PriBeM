public class org.apache.batik.css.dom.CSSOMStyleDeclaration extends java.lang.Object implements org.w3c.dom.css.CSSStyleDeclaration
{
    protected org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider;
    protected org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler;
    protected org.w3c.dom.css.CSSRule parentRule;
    protected java.util.Map values;

    public void <init>(org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider, org.w3c.dom.css.CSSRule)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider r1;
        org.w3c.dom.css.CSSRule r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider;

        r2 := @parameter1: org.w3c.dom.css.CSSRule;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider> = r1;

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.w3c.dom.css.CSSRule parentRule> = r2;

        return;
    }

    public void setModificationHandler(org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler r1;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r1 := @parameter0: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler;

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler> = r1;

        return;
    }

    public java.lang.String getCssText()
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r1;
        java.lang.String $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: java.lang.String getText()>();

        return $r2;
    }

    public void setCssText(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.DOMException $r4;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler $r1, $r3;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.lang.String r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r4 = new org.w3c.dom.DOMException;

        specialinvoke $r4.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r4;

     label1:
        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values> = null;

        $r3 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        interfaceinvoke $r3.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler: void textChanged(java.lang.String)>(r2);

        return;
    }

    public java.lang.String getPropertyValue(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r2;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.lang.String r1, $r4;
        org.apache.batik.css.engine.value.Value $r3;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: org.apache.batik.css.engine.value.Value getValue(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return "";

     label1:
        $r4 = interfaceinvoke $r3.<org.apache.batik.css.engine.value.Value: java.lang.String getCssText()>();

        return $r4;
    }

    public org.w3c.dom.css.CSSValue getPropertyCSSValue(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r2;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.lang.String r1;
        org.w3c.dom.css.CSSValue $r4;
        org.apache.batik.css.engine.value.Value $r3;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $r3 = interfaceinvoke $r2.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: org.apache.batik.css.engine.value.Value getValue(java.lang.String)>(r1);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.w3c.dom.css.CSSValue getCSSValue(java.lang.String)>(r1);

        return $r4;
    }

    public java.lang.String removeProperty(java.lang.String) throws org.w3c.dom.DOMException
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.util.Map $r4, $r6;
        org.w3c.dom.DOMException $r7;
        int $i0;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler $r3, $r5;
        java.lang.String r1, $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.lang.String getPropertyValue(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 0 goto label3;

        $r3 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        if $r3 != null goto label1;

        $r7 = new org.w3c.dom.DOMException;

        specialinvoke $r7.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r7;

     label1:
        $r4 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values>;

        if $r4 == null goto label2;

        $r6 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label2:
        $r5 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        interfaceinvoke $r5.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler: void propertyRemoved(java.lang.String)>(r1);

     label3:
        return $r2;
    }

    public java.lang.String getPropertyPriority(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r2;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.lang.String r1, $r3;
        boolean $z0;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $z0 = interfaceinvoke $r2.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: boolean isImportant(java.lang.String)>(r1);

        if $z0 == 0 goto label1;

        $r3 = "important";

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    public void setProperty(java.lang.String, java.lang.String, java.lang.String) throws org.w3c.dom.DOMException
    {
        org.w3c.dom.DOMException $r6;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler $r1, $r5;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.lang.String r2, r3, r4;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        if $r1 != null goto label1;

        $r6 = new org.w3c.dom.DOMException;

        specialinvoke $r6.<org.w3c.dom.DOMException: void <init>(short,java.lang.String)>(7, "");

        throw $r6;

     label1:
        $r5 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler handler>;

        interfaceinvoke $r5.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ModificationHandler: void propertyChanged(java.lang.String,java.lang.String,java.lang.String)>(r2, r3, r4);

        return;
    }

    public int getLength()
    {
        int $i0;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $i0 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: int getLength()>();

        return $i0;
    }

    public java.lang.String item(int)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider $r1;
        int i0;
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.lang.String $r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider valueProvider>;

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.dom.CSSOMStyleDeclaration$ValueProvider: java.lang.String item(int)>(i0);

        return $r2;
    }

    public org.w3c.dom.css.CSSRule getParentRule()
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        org.w3c.dom.css.CSSRule $r1;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.w3c.dom.css.CSSRule parentRule>;

        return $r1;
    }

    protected org.w3c.dom.css.CSSValue getCSSValue(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration r0;
        java.util.HashMap $r6;
        org.w3c.dom.css.CSSValue $r3, r9;
        java.util.Map $r1, $r4, $r5, $r7;
        java.lang.Object $r8;
        java.lang.String r2;

        r0 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r2 := @parameter0: java.lang.String;

        r9 = null;

        $r1 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values>;

        if $r1 == null goto label1;

        $r7 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values>;

        $r8 = interfaceinvoke $r7.<java.util.Map: java.lang.Object get(java.lang.Object)>(r2);

        r9 = (org.w3c.dom.css.CSSValue) $r8;

     label1:
        if r9 != null goto label3;

        $r3 = virtualinvoke r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: org.w3c.dom.css.CSSValue createCSSValue(java.lang.String)>(r2);

        r9 = $r3;

        $r4 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values>;

        if $r4 != null goto label2;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>(int)>(11);

        r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values> = $r6;

     label2:
        $r5 = r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration: java.util.Map values>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r3);

     label3:
        return r9;
    }

    protected org.w3c.dom.css.CSSValue createCSSValue(java.lang.String)
    {
        org.apache.batik.css.dom.CSSOMStyleDeclaration r1;
        java.lang.String r2;
        org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue $r0;

        r1 := @this: org.apache.batik.css.dom.CSSOMStyleDeclaration;

        r2 := @parameter0: java.lang.String;

        $r0 = new org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue;

        specialinvoke $r0.<org.apache.batik.css.dom.CSSOMStyleDeclaration$StyleDeclarationValue: void <init>(org.apache.batik.css.dom.CSSOMStyleDeclaration,java.lang.String)>(r1, r2);

        return $r0;
    }
}
