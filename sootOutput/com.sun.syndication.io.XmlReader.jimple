public class com.sun.syndication.io.XmlReader extends java.io.Reader
{
    private static final int BUFFER_SIZE;
    private static final java.lang.String UTF_8;
    private static final java.lang.String US_ASCII;
    private static final java.lang.String UTF_16BE;
    private static final java.lang.String UTF_16LE;
    private static final java.lang.String UTF_16;
    private static java.lang.String _staticDefaultEncoding;
    private java.io.Reader _reader;
    private java.lang.String _encoding;
    private java.lang.String _defaultEncoding;
    private static final java.util.regex.Pattern CHARSET_PATTERN;
    private static final java.util.regex.Pattern ENCODING_PATTERN;
    private static final java.text.MessageFormat RAW_EX_1;
    private static final java.text.MessageFormat RAW_EX_2;
    private static final java.text.MessageFormat HTTP_EX_1;
    private static final java.text.MessageFormat HTTP_EX_2;
    private static final java.text.MessageFormat HTTP_EX_3;

    public static void setDefaultEncoding(java.lang.String)
    {
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        <com.sun.syndication.io.XmlReader: java.lang.String _staticDefaultEncoding> = r0;

        return;
    }

    public static java.lang.String getDefaultEncoding()
    {
        java.lang.String $r0;

        $r0 = <com.sun.syndication.io.XmlReader: java.lang.String _staticDefaultEncoding>;

        return $r0;
    }

    public void <init>(java.io.File) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        java.io.FileInputStream $r1;
        java.io.File r2;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r2 := @parameter0: java.io.File;

        $r1 = new java.io.FileInputStream;

        specialinvoke $r1.<java.io.FileInputStream: void <init>(java.io.File)>(r2);

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void <init>(java.io.InputStream)>($r1);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        java.io.InputStream r1;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.io.InputStream;

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void <init>(java.io.InputStream,boolean)>(r1, 1);

        return;
    }

    public void <init>(java.io.InputStream, boolean, java.lang.String) throws java.io.IOException, com.sun.syndication.io.XmlReaderException
    {
        com.sun.syndication.io.XmlReader r0;
        com.sun.syndication.io.XmlReaderException $r3;
        java.lang.String r1, $r4;
        java.io.InputStream r2;
        boolean z0;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r2 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        r1 := @parameter2: java.lang.String;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        if r1 != null goto label1;

        $r4 = <com.sun.syndication.io.XmlReader: java.lang.String _staticDefaultEncoding>;

        goto label2;

     label1:
        $r4 = r1;

     label2:
        r0.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding> = $r4;

     label3:
        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doRawStream(java.io.InputStream,boolean)>(r2, z0);

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

        if z0 != 0 goto label6;

        throw $r3;

     label6:
        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doLenientDetection(java.lang.String,com.sun.syndication.io.XmlReaderException)>(null, $r3);

     label7:
        return;

        catch com.sun.syndication.io.XmlReaderException from label3 to label4 with label5;
    }

    public void <init>(java.io.InputStream, boolean) throws java.io.IOException, com.sun.syndication.io.XmlReaderException
    {
        com.sun.syndication.io.XmlReader r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void <init>(java.io.InputStream,boolean,java.lang.String)>(r1, z0, null);

        return;
    }

    public void <init>(java.net.URL) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        java.net.URL r1;
        java.net.URLConnection $r2;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.net.URL;

        $r2 = virtualinvoke r1.<java.net.URL: java.net.URLConnection openConnection()>();

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void <init>(java.net.URLConnection)>($r2);

        return;
    }

    public void <init>(java.net.URLConnection) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        com.sun.syndication.io.XmlReaderException $r9, $r10, $r12;
        java.net.URLConnection r2;
        java.lang.String $r1, $r3, $r6, $r8, $r11, $r13;
        boolean $z0;
        java.io.InputStream $r4, $r5, $r7;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r2 := @parameter0: java.net.URLConnection;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        $r1 = <com.sun.syndication.io.XmlReader: java.lang.String _staticDefaultEncoding>;

        r0.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding> = $r1;

        $z0 = r2 instanceof java.net.HttpURLConnection;

        if $z0 == 0 goto label04;

     label01:
        $r7 = virtualinvoke r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r8 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getContentType()>();

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doHttpStream(java.io.InputStream,java.lang.String,boolean)>($r7, $r8, 1);

     label02:
        goto label11;

     label03:
        $r12 := @caughtexception;

        $r13 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getContentType()>();

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doLenientDetection(java.lang.String,com.sun.syndication.io.XmlReaderException)>($r13, $r12);

        goto label11;

     label04:
        $r3 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getContentType()>();

        if $r3 == null goto label08;

     label05:
        $r5 = virtualinvoke r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        $r6 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getContentType()>();

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doHttpStream(java.io.InputStream,java.lang.String,boolean)>($r5, $r6, 1);

     label06:
        goto label11;

     label07:
        $r10 := @caughtexception;

        $r11 = virtualinvoke r2.<java.net.URLConnection: java.lang.String getContentType()>();

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doLenientDetection(java.lang.String,com.sun.syndication.io.XmlReaderException)>($r11, $r10);

        goto label11;

     label08:
        $r4 = virtualinvoke r2.<java.net.URLConnection: java.io.InputStream getInputStream()>();

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doRawStream(java.io.InputStream,boolean)>($r4, 1);

     label09:
        goto label11;

     label10:
        $r9 := @caughtexception;

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doLenientDetection(java.lang.String,com.sun.syndication.io.XmlReaderException)>(null, $r9);

     label11:
        return;

        catch com.sun.syndication.io.XmlReaderException from label01 to label02 with label03;
        catch com.sun.syndication.io.XmlReaderException from label05 to label06 with label07;
        catch com.sun.syndication.io.XmlReaderException from label08 to label09 with label10;
    }

    public void <init>(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        java.lang.String r2;
        java.io.InputStream r1;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, r2, 1);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String, boolean, java.lang.String) throws java.io.IOException, com.sun.syndication.io.XmlReaderException
    {
        com.sun.syndication.io.XmlReader r0;
        com.sun.syndication.io.XmlReaderException $r4;
        java.lang.String r1, r3, $r5;
        java.io.InputStream r2;
        boolean z0;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.String;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        if r1 != null goto label1;

        $r5 = <com.sun.syndication.io.XmlReader: java.lang.String _staticDefaultEncoding>;

        goto label2;

     label1:
        $r5 = r1;

     label2:
        r0.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding> = $r5;

     label3:
        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doHttpStream(java.io.InputStream,java.lang.String,boolean)>(r2, r3, z0);

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        if z0 != 0 goto label6;

        throw $r4;

     label6:
        specialinvoke r0.<com.sun.syndication.io.XmlReader: void doLenientDetection(java.lang.String,com.sun.syndication.io.XmlReaderException)>(r3, $r4);

     label7:
        return;

        catch com.sun.syndication.io.XmlReaderException from label3 to label4 with label5;
    }

    public void <init>(java.io.InputStream, java.lang.String, boolean) throws java.io.IOException, com.sun.syndication.io.XmlReaderException
    {
        com.sun.syndication.io.XmlReader r0;
        java.lang.String r2;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<com.sun.syndication.io.XmlReader: void <init>(java.io.InputStream,java.lang.String,boolean,java.lang.String)>(r1, r2, z0, null);

        return;
    }

    private void doLenientDetection(java.lang.String, com.sun.syndication.io.XmlReaderException) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r1;
        java.lang.StringBuffer $r5, $r6, $r7;
        int $i0;
        java.lang.String $r0, $r2, $r3, $r4, $r8, r11, r13, $r14;
        boolean $z0;
        com.sun.syndication.io.XmlReaderException $r10, r12;
        java.io.InputStream $r9, $r15;

        r1 := @this: com.sun.syndication.io.XmlReader;

        r11 := @parameter0: java.lang.String;

        r12 := @parameter1: com.sun.syndication.io.XmlReaderException;

        if r11 == null goto label4;

        $z0 = virtualinvoke r11.<java.lang.String: boolean startsWith(java.lang.String)>("text/html");

        if $z0 == 0 goto label4;

        $r3 = "text/html";

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $r4 = virtualinvoke r11.<java.lang.String: java.lang.String substring(int)>($i0);

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("text/xml");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $r9 = virtualinvoke r12.<com.sun.syndication.io.XmlReaderException: java.io.InputStream getInputStream()>();

        specialinvoke r1.<com.sun.syndication.io.XmlReader: void doHttpStream(java.io.InputStream,java.lang.String,boolean)>($r9, $r8, 1);

        r12 = null;

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        r12 = $r10;

     label4:
        if r12 == null goto label9;

        $r0 = virtualinvoke r12.<com.sun.syndication.io.XmlReaderException: java.lang.String getXmlEncoding()>();

        r13 = $r0;

        if $r0 != null goto label5;

        r13 = virtualinvoke r12.<com.sun.syndication.io.XmlReaderException: java.lang.String getContentTypeEncoding()>();

     label5:
        if r13 != null goto label8;

        $r2 = r1.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding>;

        if $r2 != null goto label6;

        $r14 = "UTF-8";

        goto label7;

     label6:
        $r14 = r1.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding>;

     label7:
        r13 = $r14;

     label8:
        $r15 = virtualinvoke r12.<com.sun.syndication.io.XmlReaderException: java.io.InputStream getInputStream()>();

        specialinvoke r1.<com.sun.syndication.io.XmlReader: void prepareReader(java.io.InputStream,java.lang.String)>($r15, r13);

     label9:
        return;

        catch com.sun.syndication.io.XmlReaderException from label1 to label2 with label3;
    }

    public java.lang.String getEncoding()
    {
        com.sun.syndication.io.XmlReader r0;
        java.lang.String $r1;

        r0 := @this: com.sun.syndication.io.XmlReader;

        $r1 = r0.<com.sun.syndication.io.XmlReader: java.lang.String _encoding>;

        return $r1;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        int i0, i1, $i2;
        char[] r1;
        java.io.Reader $r2;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<com.sun.syndication.io.XmlReader: java.io.Reader _reader>;

        $i2 = virtualinvoke $r2.<java.io.Reader: int read(char[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public void close() throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        java.io.Reader $r1;

        r0 := @this: com.sun.syndication.io.XmlReader;

        $r1 = r0.<com.sun.syndication.io.XmlReader: java.io.Reader _reader>;

        virtualinvoke $r1.<java.io.Reader: void close()>();

        return;
    }

    private void doRawStream(java.io.InputStream, boolean) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r5;
        java.io.BufferedInputStream $r0;
        java.lang.String $r2, $r3, $r4, $r6;
        java.io.InputStream r1;
        boolean z0;

        r5 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        $r0 = new java.io.BufferedInputStream;

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r1, 4096);

        $r2 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getBOMEncoding(java.io.BufferedInputStream)>($r0);

        $r3 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getXMLGuessEncoding(java.io.BufferedInputStream)>($r0);

        $r4 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getXmlProlog(java.io.BufferedInputStream,java.lang.String)>($r0, $r3);

        $r6 = specialinvoke r5.<com.sun.syndication.io.XmlReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r2, $r3, $r4, $r0);

        specialinvoke r5.<com.sun.syndication.io.XmlReader: void prepareReader(java.io.InputStream,java.lang.String)>($r0, $r6);

        return;
    }

    private void doHttpStream(java.io.InputStream, java.lang.String, boolean) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r8;
        java.io.BufferedInputStream $r0;
        java.lang.String r2, $r3, $r4, $r5, $r6, $r7, $r9;
        java.io.InputStream r1;
        boolean z0;

        r8 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        $r0 = new java.io.BufferedInputStream;

        specialinvoke $r0.<java.io.BufferedInputStream: void <init>(java.io.InputStream,int)>(r1, 4096);

        $r3 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getContentTypeMime(java.lang.String)>(r2);

        $r4 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getContentTypeEncoding(java.lang.String)>(r2);

        $r5 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getBOMEncoding(java.io.BufferedInputStream)>($r0);

        $r6 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getXMLGuessEncoding(java.io.BufferedInputStream)>($r0);

        $r7 = staticinvoke <com.sun.syndication.io.XmlReader: java.lang.String getXmlProlog(java.io.BufferedInputStream,java.lang.String)>($r0, $r6);

        $r9 = specialinvoke r8.<com.sun.syndication.io.XmlReader: java.lang.String calculateHttpEncoding(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream,boolean)>($r3, $r4, $r5, $r6, $r7, $r0, z0);

        specialinvoke r8.<com.sun.syndication.io.XmlReader: void prepareReader(java.io.InputStream,java.lang.String)>($r0, $r9);

        return;
    }

    private void prepareReader(java.io.InputStream, java.lang.String) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r0;
        java.lang.String r3;
        java.io.InputStreamReader $r1;
        java.io.InputStream r2;

        r0 := @this: com.sun.syndication.io.XmlReader;

        r2 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        $r1 = new java.io.InputStreamReader;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r2, r3);

        r0.<com.sun.syndication.io.XmlReader: java.io.Reader _reader> = $r1;

        r0.<com.sun.syndication.io.XmlReader: java.lang.String _encoding> = r3;

        return;
    }

    private java.lang.String calculateRawEncoding(java.lang.String, java.lang.String, java.lang.String, java.io.InputStream) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        com.sun.syndication.io.XmlReaderException $r3, $r12, $r16, $r20;
        java.lang.Object[] $r4, $r9, $r13, $r17, $r21;
        java.text.MessageFormat $r5, $r10, $r14, $r18, $r22;
        java.lang.String r0, r1, r2, $r6, $r11, $r15, $r19, $r23, $r25, $r26, r27;
        java.io.IOException $r8;
        java.io.InputStream r7;

        r24 := @this: com.sun.syndication.io.XmlReader;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r7 := @parameter3: java.io.InputStream;

        if r0 != null goto label07;

        if r1 == null goto label01;

        if r2 != null goto label04;

     label01:
        $r25 = r24.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding>;

        if $r25 != null goto label02;

        $r26 = "UTF-8";

        goto label03;

     label02:
        $r26 = r24.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding>;

     label03:
        r27 = $r26;

        goto label15;

     label04:
        $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z8 == 0 goto label06;

        $z9 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z9 != 0 goto label05;

        $z10 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $z10 == 0 goto label06;

     label05:
        r27 = r1;

        goto label15;

     label06:
        r27 = r2;

        goto label15;

     label07:
        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z0 == 0 goto label10;

        if r1 == null goto label08;

        $z7 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z7 != 0 goto label08;

        $r20 = new com.sun.syndication.io.XmlReaderException;

        $r22 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_1>;

        $r21 = newarray (java.lang.Object)[3];

        $r21[0] = r0;

        $r21[1] = r1;

        $r21[2] = r2;

        $r23 = virtualinvoke $r22.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r21);

        specialinvoke $r20.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r23, r0, r1, r2, r7);

        throw $r20;

     label08:
        if r2 == null goto label09;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-8");

        if $z6 != 0 goto label09;

        $r16 = new com.sun.syndication.io.XmlReaderException;

        $r18 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_1>;

        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = r0;

        $r17[1] = r1;

        $r17[2] = r2;

        $r19 = virtualinvoke $r18.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r17);

        specialinvoke $r16.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r19, r0, r1, r2, r7);

        throw $r16;

     label09:
        r27 = "UTF-8";

        goto label15;

     label10:
        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z1 != 0 goto label11;

        $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $z5 == 0 goto label14;

     label11:
        if r1 == null goto label12;

        $z4 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 != 0 goto label12;

        $r8 = new java.io.IOException;

        $r10 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_1>;

        $r9 = newarray (java.lang.Object)[3];

        $r9[0] = r0;

        $r9[1] = r1;

        $r9[2] = r2;

        $r11 = virtualinvoke $r10.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r9);

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r8;

     label12:
        if r2 == null goto label13;

        $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z2 != 0 goto label13;

        $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 != 0 goto label13;

        $r3 = new com.sun.syndication.io.XmlReaderException;

        $r5 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_1>;

        $r4 = newarray (java.lang.Object)[3];

        $r4[0] = r0;

        $r4[1] = r1;

        $r4[2] = r2;

        $r6 = virtualinvoke $r5.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r4);

        specialinvoke $r3.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r6, r0, r1, r2, r7);

        throw $r3;

     label13:
        r27 = r0;

        goto label15;

     label14:
        $r12 = new com.sun.syndication.io.XmlReaderException;

        $r14 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_2>;

        $r13 = newarray (java.lang.Object)[3];

        $r13[0] = r0;

        $r13[1] = r1;

        $r13[2] = r2;

        $r15 = virtualinvoke $r14.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r13);

        specialinvoke $r12.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r15, r0, r1, r2, r7);

        throw $r12;

     label15:
        return r27;
    }

    private java.lang.String calculateHttpEncoding(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.io.InputStream, boolean) throws java.io.IOException
    {
        com.sun.syndication.io.XmlReader r14;
        java.lang.Object[] $r5, $r11, $r17;
        java.text.MessageFormat $r7, $r12, $r18;
        java.lang.String r0, r1, r2, r3, r6, $r8, $r13, $r15, $r19, r20, $r21;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.sun.syndication.io.XmlReaderException $r4, $r10, $r16;
        java.io.InputStream r9;

        r14 := @this: com.sun.syndication.io.XmlReader;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        r6 := @parameter3: java.lang.String;

        r0 := @parameter4: java.lang.String;

        r9 := @parameter5: java.io.InputStream;

        z0 := @parameter6: boolean;

        if r0 == null goto label01;

        $z8 = 1;

        goto label02;

     label01:
        $z8 = 0;

     label02:
        $z1 = z0 & $z8;

        if $z1 == 0 goto label03;

        r20 = r0;

        goto label14;

     label03:
        $z2 = staticinvoke <com.sun.syndication.io.XmlReader: boolean isAppXml(java.lang.String)>(r1);

        $z3 = staticinvoke <com.sun.syndication.io.XmlReader: boolean isTextXml(java.lang.String)>(r1);

        if $z2 != 0 goto label04;

        if $z3 == 0 goto label13;

     label04:
        if r2 != null goto label08;

        if $z2 == 0 goto label05;

        r20 = specialinvoke r14.<com.sun.syndication.io.XmlReader: java.lang.String calculateRawEncoding(java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>(r3, r6, r0, r9);

        goto label14;

     label05:
        $r15 = r14.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding>;

        if $r15 != null goto label06;

        $r21 = "US-ASCII";

        goto label07;

     label06:
        $r21 = r14.<com.sun.syndication.io.XmlReader: java.lang.String _defaultEncoding>;

     label07:
        r20 = $r21;

        goto label14;

     label08:
        if r3 == null goto label10;

        $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16BE");

        if $z6 != 0 goto label09;

        $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16LE");

        if $z7 == 0 goto label10;

     label09:
        $r10 = new com.sun.syndication.io.XmlReaderException;

        $r12 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat HTTP_EX_1>;

        $r11 = newarray (java.lang.Object)[5];

        $r11[0] = r1;

        $r11[1] = r2;

        $r11[2] = r3;

        $r11[3] = r6;

        $r11[4] = r0;

        $r13 = virtualinvoke $r12.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r11);

        specialinvoke $r10.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r13, r1, r2, r3, r6, r0, r9);

        throw $r10;

     label10:
        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("UTF-16");

        if $z4 == 0 goto label12;

        if r3 == null goto label11;

        $z5 = virtualinvoke r3.<java.lang.String: boolean startsWith(java.lang.String)>("UTF-16");

        if $z5 == 0 goto label11;

        r20 = r3;

        goto label14;

     label11:
        $r4 = new com.sun.syndication.io.XmlReaderException;

        $r7 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat HTTP_EX_2>;

        $r5 = newarray (java.lang.Object)[5];

        $r5[0] = r1;

        $r5[1] = r2;

        $r5[2] = r3;

        $r5[3] = r6;

        $r5[4] = r0;

        $r8 = virtualinvoke $r7.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r5);

        specialinvoke $r4.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r8, r1, r2, r3, r6, r0, r9);

        throw $r4;

     label12:
        r20 = r2;

        goto label14;

     label13:
        $r16 = new com.sun.syndication.io.XmlReaderException;

        $r18 = <com.sun.syndication.io.XmlReader: java.text.MessageFormat HTTP_EX_3>;

        $r17 = newarray (java.lang.Object)[5];

        $r17[0] = r1;

        $r17[1] = r2;

        $r17[2] = r3;

        $r17[3] = r6;

        $r17[4] = r0;

        $r19 = virtualinvoke $r18.<java.text.MessageFormat: java.lang.String format(java.lang.Object)>($r17);

        specialinvoke $r16.<com.sun.syndication.io.XmlReaderException: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.io.InputStream)>($r19, r1, r2, r3, r6, r0, r9);

        throw $r16;

     label14:
        return r20;
    }

    private static java.lang.String getContentTypeMime(java.lang.String)
    {
        int $i0, $i2;
        java.lang.String r0, r1, $r2;

        r0 := @parameter0: java.lang.String;

        r1 = null;

        if r0 == null goto label3;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        $i2 = (int) -1;

        if $i0 != $i2 goto label1;

        $r2 = r0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label2:
        r1 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

     label3:
        return r1;
    }

    private static java.lang.String getContentTypeEncoding(java.lang.String)
    {
        java.util.regex.Matcher $r3;
        int $i0, $i1, $i2, $i3, $i5;
        java.lang.String r0, $r1, r4, $r5, $r6;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.regex.Pattern $r2;

        r0 := @parameter0: java.lang.String;

        r4 = null;

        if r0 == null goto label8;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(";");

        $i5 = (int) -1;

        if $i0 <= $i5 goto label5;

        $i3 = $i0 + 1;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

        $r2 = <com.sun.syndication.io.XmlReader: java.util.regex.Pattern CHARSET_PATTERN>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1);

        $z4 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z4 == 0 goto label1;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        goto label2;

     label1:
        $r5 = null;

     label2:
        if $r5 == null goto label3;

        $r6 = virtualinvoke $r5.<java.lang.String: java.lang.String toUpperCase()>();

        goto label4;

     label3:
        $r6 = null;

     label4:
        r4 = $r6;

     label5:
        if r4 == null goto label8;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("\"");

        if $z0 == 0 goto label6;

        $z3 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("\"");

        if $z3 != 0 goto label7;

     label6:
        $z1 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("\'");

        if $z1 == 0 goto label8;

        $z2 = virtualinvoke r4.<java.lang.String: boolean endsWith(java.lang.String)>("\'");

        if $z2 == 0 goto label8;

     label7:
        $i1 = virtualinvoke r4.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r4 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label8:
        return r4;
    }

    private static java.lang.String getBOMEncoding(java.io.BufferedInputStream) throws java.io.IOException
    {
        java.io.BufferedInputStream r1;
        int[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r2;

        r1 := @parameter0: java.io.BufferedInputStream;

        r2 = null;

        r0 = newarray (int)[3];

        virtualinvoke r1.<java.io.BufferedInputStream: void mark(int)>(3);

        $i0 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[0] = $i0;

        $i1 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[1] = $i1;

        $i2 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[2] = $i2;

        $i3 = r0[0];

        if $i3 != 254 goto label1;

        $i9 = r0[1];

        if $i9 != 255 goto label1;

        r2 = "UTF-16BE";

        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

        virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        goto label4;

     label1:
        $i4 = r0[0];

        if $i4 != 255 goto label2;

        $i8 = r0[1];

        if $i8 != 254 goto label2;

        r2 = "UTF-16LE";

        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

        virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        goto label4;

     label2:
        $i5 = r0[0];

        if $i5 != 239 goto label3;

        $i6 = r0[1];

        if $i6 != 187 goto label3;

        $i7 = r0[2];

        if $i7 != 191 goto label3;

        r2 = "UTF-8";

        goto label4;

     label3:
        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

     label4:
        return r2;
    }

    private static java.lang.String getXMLGuessEncoding(java.io.BufferedInputStream) throws java.io.IOException
    {
        java.io.BufferedInputStream r1;
        int[] r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r2;

        r1 := @parameter0: java.io.BufferedInputStream;

        r2 = null;

        r0 = newarray (int)[4];

        virtualinvoke r1.<java.io.BufferedInputStream: void mark(int)>(4);

        $i0 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[0] = $i0;

        $i1 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[1] = $i1;

        $i2 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[2] = $i2;

        $i3 = virtualinvoke r1.<java.io.BufferedInputStream: int read()>();

        r0[3] = $i3;

        virtualinvoke r1.<java.io.BufferedInputStream: void reset()>();

        $i4 = r0[0];

        if $i4 != 0 goto label1;

        $i11 = r0[1];

        if $i11 != 60 goto label1;

        $i12 = r0[2];

        if $i12 != 0 goto label1;

        $i13 = r0[3];

        if $i13 != 63 goto label1;

        r2 = "UTF-16BE";

        goto label3;

     label1:
        $i14 = r0[0];

        if $i14 != 60 goto label2;

        $i8 = r0[1];

        if $i8 != 0 goto label2;

        $i9 = r0[2];

        if $i9 != 63 goto label2;

        $i10 = r0[3];

        if $i10 != 0 goto label2;

        r2 = "UTF-16LE";

        goto label3;

     label2:
        $i15 = r0[0];

        if $i15 != 60 goto label3;

        $i5 = r0[1];

        if $i5 != 63 goto label3;

        $i6 = r0[2];

        if $i6 != 120 goto label3;

        $i7 = r0[3];

        if $i7 != 109 goto label3;

        r2 = "UTF-8";

     label3:
        return r2;
    }

    private static java.lang.String getXmlProlog(java.io.BufferedInputStream, java.lang.String) throws java.io.IOException
    {
        byte[] r1;
        java.io.BufferedInputStream r2;
        java.util.regex.Matcher $r8;
        java.io.ByteArrayInputStream $r25;
        boolean $z0;
        java.util.regex.Pattern $r7;
        java.lang.StringBuffer $r13, $r14, $r15, $r23, $r28;
        int $i0, $i1, $i2, i3, i4, i5, i6, $i8, $i10, $i12, $i14, $i16;
        java.lang.String r0, $r9, $r10, $r16, r19, r20, $r21;
        java.io.IOException $r22, $r24;
        java.io.InputStreamReader $r26;
        java.io.BufferedReader $r27;

        r2 := @parameter0: java.io.BufferedInputStream;

        r0 := @parameter1: java.lang.String;

        r19 = null;

        if r0 == null goto label7;

        r1 = newarray (byte)[4096];

        virtualinvoke r2.<java.io.BufferedInputStream: void mark(int)>(4096);

        i3 = 0;

        i4 = 4096;

        i5 = virtualinvoke r2.<java.io.BufferedInputStream: int read(byte[],int,int)>(r1, 0, 4096);

        $i8 = (int) -1;

        i6 = $i8;

     label1:
        $i10 = (int) -1;

        if i5 == $i10 goto label2;

        $i12 = (int) -1;

        if i6 != $i12 goto label2;

        if i3 >= 4096 goto label2;

        i3 = i3 + i5;

        i4 = i4 - i5;

        i5 = virtualinvoke r2.<java.io.BufferedInputStream: int read(byte[],int,int)>(r1, i3, i4);

        $r21 = new java.lang.String;

        specialinvoke $r21.<java.lang.String: void <init>(byte[],int,int)>(r1, 0, i3);

        i6 = virtualinvoke $r21.<java.lang.String: int indexOf(java.lang.String)>(">");

        goto label1;

     label2:
        $i14 = (int) -1;

        if i6 != $i14 goto label4;

        $i16 = (int) -1;

        if i5 != $i16 goto label3;

        $r22 = new java.io.IOException;

        specialinvoke $r22.<java.io.IOException: void <init>(java.lang.String)>("Unexpected end of XML stream");

        throw $r22;

     label3:
        $r24 = new java.io.IOException;

        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XML prolog or ROOT element not found on first ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" bytes");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r24.<java.io.IOException: void <init>(java.lang.String)>($r16);

        throw $r24;

     label4:
        if i3 <= 0 goto label7;

        virtualinvoke r2.<java.io.BufferedInputStream: void reset()>();

        $r26 = new java.io.InputStreamReader;

        $r25 = new java.io.ByteArrayInputStream;

        $i0 = i6 + 1;

        specialinvoke $r25.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(r1, 0, $i0);

        specialinvoke $r26.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r25, r0);

        $r27 = new java.io.BufferedReader;

        specialinvoke $r27.<java.io.BufferedReader: void <init>(java.io.Reader)>($r26);

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        r20 = virtualinvoke $r27.<java.io.BufferedReader: java.lang.String readLine()>();

     label5:
        if r20 == null goto label6;

        virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r20);

        r20 = virtualinvoke $r27.<java.io.BufferedReader: java.lang.String readLine()>();

        goto label5;

     label6:
        $r7 = <com.sun.syndication.io.XmlReader: java.util.regex.Pattern ENCODING_PATTERN>;

        $r8 = virtualinvoke $r7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r28);

        $z0 = virtualinvoke $r8.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label7;

        $r9 = virtualinvoke $r8.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r10 = virtualinvoke $r9.<java.lang.String: java.lang.String toUpperCase()>();

        $i1 = virtualinvoke $r10.<java.lang.String: int length()>();

        $i2 = $i1 - 1;

        r19 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

     label7:
        return r19;
    }

    private static boolean isAppXml(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("application/xml");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("application/xml-dtd");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("application/xml-external-parsed-entity");

        if $z2 != 0 goto label1;

        $z3 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("application/");

        if $z3 == 0 goto label2;

        $z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("+xml");

        if $z4 == 0 goto label2;

     label1:
        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    private static boolean isTextXml(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label2;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("text/xml");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("text/xml-external-parsed-entity");

        if $z1 != 0 goto label1;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z2 == 0 goto label2;

        $z3 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>("+xml");

        if $z3 == 0 goto label2;

     label1:
        $z4 = 1;

        goto label3;

     label2:
        $z4 = 0;

     label3:
        return $z4;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;
        java.text.MessageFormat $r2, $r3, $r4, $r5, $r6;

        <com.sun.syndication.io.XmlReader: java.lang.String UTF_16> = "UTF-16";

        <com.sun.syndication.io.XmlReader: java.lang.String UTF_16LE> = "UTF-16LE";

        <com.sun.syndication.io.XmlReader: java.lang.String UTF_16BE> = "UTF-16BE";

        <com.sun.syndication.io.XmlReader: java.lang.String US_ASCII> = "US-ASCII";

        <com.sun.syndication.io.XmlReader: java.lang.String UTF_8> = "UTF-8";

        <com.sun.syndication.io.XmlReader: int BUFFER_SIZE> = 4096;

        <com.sun.syndication.io.XmlReader: java.lang.String _staticDefaultEncoding> = null;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("charset=([.[^; ]]*)");

        <com.sun.syndication.io.XmlReader: java.util.regex.Pattern CHARSET_PATTERN> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>("<\\?xml.*encoding[\\s]*=[\\s]*((?:\".[^\"]*\")|(?:\'.[^\']*\'))", 8);

        <com.sun.syndication.io.XmlReader: java.util.regex.Pattern ENCODING_PATTERN> = $r1;

        $r2 = new java.text.MessageFormat;

        specialinvoke $r2.<java.text.MessageFormat: void <init>(java.lang.String)>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] encoding mismatch");

        <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_1> = $r2;

        $r3 = new java.text.MessageFormat;

        specialinvoke $r3.<java.text.MessageFormat: void <init>(java.lang.String)>("Invalid encoding, BOM [{0}] XML guess [{1}] XML prolog [{2}] unknown BOM");

        <com.sun.syndication.io.XmlReader: java.text.MessageFormat RAW_EX_2> = $r3;

        $r4 = new java.text.MessageFormat;

        specialinvoke $r4.<java.text.MessageFormat: void <init>(java.lang.String)>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], BOM must be NULL");

        <com.sun.syndication.io.XmlReader: java.text.MessageFormat HTTP_EX_1> = $r4;

        $r5 = new java.text.MessageFormat;

        specialinvoke $r5.<java.text.MessageFormat: void <init>(java.lang.String)>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], encoding mismatch");

        <com.sun.syndication.io.XmlReader: java.text.MessageFormat HTTP_EX_2> = $r5;

        $r6 = new java.text.MessageFormat;

        specialinvoke $r6.<java.text.MessageFormat: void <init>(java.lang.String)>("Invalid encoding, CT-MIME [{0}] CT-Enc [{1}] BOM [{2}] XML guess [{3}] XML prolog [{4}], Invalid MIME");

        <com.sun.syndication.io.XmlReader: java.text.MessageFormat HTTP_EX_3> = $r6;

        return;
    }
}
