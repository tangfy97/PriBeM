public abstract class org.apache.lucene.store.DataOutput extends java.lang.Object
{
    private static int COPY_BUFFER_SIZE;
    private byte[] copyBuffer;
    static final boolean $assertionsDisabled;

    public void <init>()
    {
        org.apache.lucene.store.DataOutput r0;

        r0 := @this: org.apache.lucene.store.DataOutput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void writeByte(byte) throws java.io.IOException;

    public void writeBytes(byte[], int) throws java.io.IOException
    {
        int i0;
        byte[] r1;
        org.apache.lucene.store.DataOutput r0;

        r0 := @this: org.apache.lucene.store.DataOutput;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeBytes(byte[],int,int)>(r1, 0, i0);

        return;
    }

    public abstract void writeBytes(byte[], int, int) throws java.io.IOException;

    public void writeInt(int) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r0;
        byte $b2, $b4, $b6, $b7;
        int i0, $i1, $i3, $i5;

        r0 := @this: org.apache.lucene.store.DataOutput;

        i0 := @parameter0: int;

        $i1 = i0 >> 24;

        $b2 = (byte) $i1;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b2);

        $i3 = i0 >> 16;

        $b4 = (byte) $i3;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b4);

        $i5 = i0 >> 8;

        $b6 = (byte) $i5;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b6);

        $b7 = (byte) i0;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b7);

        return;
    }

    public void writeShort(short) throws java.io.IOException
    {
        short s0;
        byte $b2, $b3;
        org.apache.lucene.store.DataOutput r0;
        int $i1, $i4;

        r0 := @this: org.apache.lucene.store.DataOutput;

        s0 := @parameter0: short;

        $i4 = (int) s0;

        $i1 = $i4 >> 8;

        $b2 = (byte) $i1;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b2);

        $b3 = (byte) s0;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b3);

        return;
    }

    public final void writeVInt(int) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r0;
        byte $b1, $b4;
        int $i0, $i2, $i3, i5, $i7;

        r0 := @this: org.apache.lucene.store.DataOutput;

        i5 := @parameter0: int;

     label1:
        $i7 = (int) -128;

        $i0 = i5 & $i7;

        if $i0 == 0 goto label2;

        $i2 = i5 & 127;

        $i3 = $i2 | 128;

        $b4 = (byte) $i3;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b4);

        i5 = i5 >>> 7;

        goto label1;

     label2:
        $b1 = (byte) i5;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b1);

        return;
    }

    public void writeLong(long) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r0;
        int $i2, $i3;
        long l0, $l1;

        r0 := @this: org.apache.lucene.store.DataOutput;

        l0 := @parameter0: long;

        $l1 = l0 >> 32;

        $i2 = (int) $l1;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeInt(int)>($i2);

        $i3 = (int) l0;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeInt(int)>($i3);

        return;
    }

    public final void writeVLong(long) throws java.io.IOException
    {
        org.apache.lucene.store.DataOutput r0;
        long $l2, $l3, l7, $l8;
        java.lang.AssertionError $r2;
        byte $b1, $b5, $b6, $b9;
        int $i0, $i4, $i10;
        boolean $z0;

        r0 := @this: org.apache.lucene.store.DataOutput;

        l7 := @parameter0: long;

        $z0 = <org.apache.lucene.store.DataOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b6 = l7 cmp 0L;

        $i10 = (int) $b6;

        if $i10 >= 0 goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        $l8 = l7 & -128L;

        $b9 = $l8 cmp 0L;

        if $b9 == 0 goto label2;

        $l2 = l7 & 127L;

        $l3 = $l2 | 128L;

        $i4 = (int) $l3;

        $b5 = (byte) $i4;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b5);

        l7 = l7 >>> 7;

        goto label1;

     label2:
        $i0 = (int) l7;

        $b1 = (byte) $i0;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeByte(byte)>($b1);

        return;
    }

    public void writeString(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        org.apache.lucene.util.BytesRef $r0;
        org.apache.lucene.store.DataOutput r2;
        int $i0, $i1, $i2;
        java.lang.String r1;

        r2 := @this: org.apache.lucene.store.DataOutput;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r0.<org.apache.lucene.util.BytesRef: void <init>(int)>(10);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        staticinvoke <org.apache.lucene.util.UnicodeUtil: void UTF16toUTF8(java.lang.CharSequence,int,int,org.apache.lucene.util.BytesRef)>(r1, 0, $i0, $r0);

        $i1 = $r0.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke r2.<org.apache.lucene.store.DataOutput: void writeVInt(int)>($i1);

        $r3 = $r0.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        $i2 = $r0.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke r2.<org.apache.lucene.store.DataOutput: void writeBytes(byte[],int,int)>($r3, 0, $i2);

        return;
    }

    public void copyBytes(org.apache.lucene.store.DataInput, long) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4, $r5;
        org.apache.lucene.store.DataInput r2;
        org.apache.lucene.store.DataOutput r0;
        long l0, $l2, $l4, l7;
        java.lang.AssertionError $r12;
        byte $b3, $b6, $b8;
        int $i1, $i5, i9, $i10, $i11, $i12;
        java.lang.String $r10;
        boolean $z0;
        java.lang.StringBuilder $r8, $r9, $r11;

        r0 := @this: org.apache.lucene.store.DataOutput;

        r2 := @parameter0: org.apache.lucene.store.DataInput;

        l0 := @parameter1: long;

        $z0 = <org.apache.lucene.store.DataOutput: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $b6 = l0 cmp 0L;

        $i10 = (int) $b6;

        if $i10 >= 0 goto label1;

        $r12 = new java.lang.AssertionError;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("numBytes=");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.AssertionError: void <init>(java.lang.Object)>($r10);

        throw $r12;

     label1:
        l7 = l0;

        $r1 = r0.<org.apache.lucene.store.DataOutput: byte[] copyBuffer>;

        if $r1 != null goto label2;

        $i5 = <org.apache.lucene.store.DataOutput: int COPY_BUFFER_SIZE>;

        $r5 = newarray (byte)[$i5];

        r0.<org.apache.lucene.store.DataOutput: byte[] copyBuffer> = $r5;

     label2:
        $b8 = l7 cmp 0L;

        $i11 = (int) $b8;

        if $i11 <= 0 goto label5;

        $i1 = <org.apache.lucene.store.DataOutput: int COPY_BUFFER_SIZE>;

        $l2 = (long) $i1;

        $b3 = l7 cmp $l2;

        $i12 = (int) $b3;

        if $i12 <= 0 goto label3;

        i9 = <org.apache.lucene.store.DataOutput: int COPY_BUFFER_SIZE>;

        goto label4;

     label3:
        i9 = (int) l7;

     label4:
        $r3 = r0.<org.apache.lucene.store.DataOutput: byte[] copyBuffer>;

        virtualinvoke r2.<org.apache.lucene.store.DataInput: void readBytes(byte[],int,int)>($r3, 0, i9);

        $r4 = r0.<org.apache.lucene.store.DataOutput: byte[] copyBuffer>;

        virtualinvoke r0.<org.apache.lucene.store.DataOutput: void writeBytes(byte[],int,int)>($r4, 0, i9);

        $l4 = (long) i9;

        l7 = l7 - $l4;

        goto label2;

     label5:
        return;
    }

    public void writeStringStringMap(java.util.Map) throws java.io.IOException
    {
        java.util.Map$Entry r5;
        java.util.Iterator $r3;
        org.apache.lucene.store.DataOutput r1;
        java.util.Set $r2;
        java.util.Map r0;
        int $i0;
        java.lang.Object $r4, $r6, $r8;
        java.lang.String $r7, $r9;
        boolean $z0;

        r1 := @this: org.apache.lucene.store.DataOutput;

        r0 := @parameter0: java.util.Map;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeInt(int)>(0);

        goto label3;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Map: int size()>();

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeInt(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.Map$Entry) $r4;

        $r6 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r7 = (java.lang.String) $r6;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeString(java.lang.String)>($r7);

        $r8 = interfaceinvoke r5.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r9 = (java.lang.String) $r8;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeString(java.lang.String)>($r9);

        goto label2;

     label3:
        return;
    }

    public void writeStringSet(java.util.Set) throws java.io.IOException
    {
        java.util.Iterator $r2;
        org.apache.lucene.store.DataOutput r1;
        int $i0;
        java.util.Set r0;
        java.lang.Object $r3;
        java.lang.String r4;
        boolean $z0;

        r1 := @this: org.apache.lucene.store.DataOutput;

        r0 := @parameter0: java.util.Set;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeInt(int)>(0);

        goto label3;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Set: int size()>();

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeInt(int)>($i0);

        $r2 = interfaceinvoke r0.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.lang.String) $r3;

        virtualinvoke r1.<org.apache.lucene.store.DataOutput: void writeString(java.lang.String)>(r4);

        goto label2;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/store/DataOutput;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.store.DataOutput: boolean $assertionsDisabled> = $z1;

        <org.apache.lucene.store.DataOutput: int COPY_BUFFER_SIZE> = 16384;

        return;
    }
}
