public class org.bouncycastle.ocsp.OCSPReq extends java.lang.Object implements java.security.cert.X509Extension
{
    private org.bouncycastle.asn1.ocsp.OCSPRequest req;

    public void <init>(org.bouncycastle.asn1.ocsp.OCSPRequest)
    {
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest r1;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r1 := @parameter0: org.bouncycastle.asn1.ocsp.OCSPRequest;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req> = r1;

        return;
    }

    public void <init>(byte[]) throws java.io.IOException
    {
        byte[] r2;
        org.bouncycastle.asn1.ASN1InputStream $r1;
        org.bouncycastle.ocsp.OCSPReq r0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r2 := @parameter0: byte[];

        $r1 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: void <init>(byte[])>(r2);

        specialinvoke r0.<org.bouncycastle.ocsp.OCSPReq: void <init>(org.bouncycastle.asn1.ASN1InputStream)>($r1);

        return;
    }

    public void <init>(java.io.InputStream) throws java.io.IOException
    {
        org.bouncycastle.asn1.ASN1InputStream $r1;
        org.bouncycastle.ocsp.OCSPReq r0;
        java.io.InputStream r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r2 := @parameter0: java.io.InputStream;

        $r1 = new org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1InputStream: void <init>(java.io.InputStream)>(r2);

        specialinvoke r0.<org.bouncycastle.ocsp.OCSPReq: void <init>(org.bouncycastle.asn1.ASN1InputStream)>($r1);

        return;
    }

    private void <init>(org.bouncycastle.asn1.ASN1InputStream) throws java.io.IOException
    {
        org.bouncycastle.asn1.DERObject $r2;
        org.bouncycastle.asn1.ASN1InputStream r1;
        java.lang.ClassCastException $r4;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r3;
        java.lang.String $r8, $r10, $r15, $r17;
        java.io.IOException $r5, $r12;
        java.lang.IllegalArgumentException $r11;
        org.bouncycastle.ocsp.OCSPReq r0;
        java.lang.StringBuilder $r6, $r7, $r9, $r13, $r14, $r16;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r1 := @parameter0: org.bouncycastle.asn1.ASN1InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        $r2 = virtualinvoke r1.<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.DERObject readObject()>();

        $r3 = staticinvoke <org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.OCSPRequest getInstance(java.lang.Object)>($r2);

        r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req> = $r3;

     label2:
        goto label5;

     label3:
        $r11 := @caughtexception;

        $r12 = new java.io.IOException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed request: ");

        $r15 = virtualinvoke $r11.<java.lang.IllegalArgumentException: java.lang.String getMessage()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("malformed request: ");

        $r8 = virtualinvoke $r4.<java.lang.ClassCastException: java.lang.String getMessage()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label5:
        return;

        catch java.lang.IllegalArgumentException from label1 to label2 with label3;
        catch java.lang.ClassCastException from label1 to label2 with label4;
    }

    public byte[] getTBSRequest() throws org.bouncycastle.ocsp.OCSPException
    {
        byte[] $r3;
        org.bouncycastle.ocsp.OCSPException $r5;
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        java.io.IOException $r4;
        org.bouncycastle.asn1.ocsp.TBSRequest $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

     label1:
        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.TBSRequest: byte[] getEncoded()>();

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r5.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("problem encoding tbsRequest", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public int getVersion()
    {
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        int $i0, $i1;
        java.math.BigInteger $r4;
        org.bouncycastle.asn1.DERInteger $r3;
        org.bouncycastle.asn1.ocsp.TBSRequest $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.TBSRequest: org.bouncycastle.asn1.DERInteger getVersion()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERInteger: java.math.BigInteger getValue()>();

        $i0 = virtualinvoke $r4.<java.math.BigInteger: int intValue()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    public org.bouncycastle.asn1.x509.GeneralName getRequestorName()
    {
        org.bouncycastle.asn1.x509.GeneralName $r3, $r4;
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        org.bouncycastle.asn1.ocsp.TBSRequest $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.TBSRequest: org.bouncycastle.asn1.x509.GeneralName getRequestorName()>();

        $r4 = staticinvoke <org.bouncycastle.asn1.x509.GeneralName: org.bouncycastle.asn1.x509.GeneralName getInstance(java.lang.Object)>($r3);

        return $r4;
    }

    public org.bouncycastle.ocsp.Req[] getRequestList()
    {
        org.bouncycastle.asn1.ocsp.Request $r7;
        org.bouncycastle.asn1.ASN1Sequence $r3;
        org.bouncycastle.ocsp.Req $r5;
        org.bouncycastle.asn1.DEREncodable $r6;
        org.bouncycastle.ocsp.Req[] r4;
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        int $i0, $i1, i2;
        org.bouncycastle.asn1.ocsp.TBSRequest $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.TBSRequest: org.bouncycastle.asn1.ASN1Sequence getRequestList()>();

        $i0 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: int size()>();

        r4 = newarray (org.bouncycastle.ocsp.Req)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r4;

        if i2 == $i1 goto label2;

        $r5 = new org.bouncycastle.ocsp.Req;

        $r6 = virtualinvoke $r3.<org.bouncycastle.asn1.ASN1Sequence: org.bouncycastle.asn1.DEREncodable getObjectAt(int)>(i2);

        $r7 = staticinvoke <org.bouncycastle.asn1.ocsp.Request: org.bouncycastle.asn1.ocsp.Request getInstance(java.lang.Object)>($r6);

        specialinvoke $r5.<org.bouncycastle.ocsp.Req: void <init>(org.bouncycastle.asn1.ocsp.Request)>($r7);

        r4[i2] = $r5;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r4;
    }

    public org.bouncycastle.asn1.x509.X509Extensions getRequestExtensions()
    {
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        org.bouncycastle.asn1.x509.X509Extensions $r3, $r4;
        org.bouncycastle.asn1.ocsp.TBSRequest $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.TBSRequest: org.bouncycastle.asn1.x509.X509Extensions getRequestExtensions()>();

        $r4 = staticinvoke <org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extensions getInstance(java.lang.Object)>($r3);

        return $r4;
    }

    public java.lang.String getSignatureAlgOID()
    {
        org.bouncycastle.asn1.ocsp.Signature $r2;
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        java.lang.String $r5;
        org.bouncycastle.asn1.x509.AlgorithmIdentifier $r3;
        boolean $z0;
        org.bouncycastle.asn1.DERObjectIdentifier $r4;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $z0 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.Signature: org.bouncycastle.asn1.x509.AlgorithmIdentifier getSignatureAlgorithm()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.x509.AlgorithmIdentifier: org.bouncycastle.asn1.DERObjectIdentifier getObjectId()>();

        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        return $r5;
    }

    public byte[] getSignature()
    {
        org.bouncycastle.asn1.ocsp.Signature $r2;
        byte[] $r4;
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        org.bouncycastle.asn1.DERBitString $r3;
        boolean $z0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $z0 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.ocsp.Signature: org.bouncycastle.asn1.DERBitString getSignature()>();

        $r4 = virtualinvoke $r3.<org.bouncycastle.asn1.DERBitString: byte[] getBytes()>();

        return $r4;
    }

    private java.util.List getCertList(java.lang.String) throws org.bouncycastle.ocsp.OCSPException, java.security.NoSuchProviderException
    {
        org.bouncycastle.asn1.ocsp.Signature $r7;
        byte[] $r12;
        org.bouncycastle.asn1.ASN1Sequence $r8;
        java.io.ByteArrayOutputStream $r1;
        java.security.cert.CertificateFactory $r4;
        java.util.Enumeration $r9;
        org.bouncycastle.ocsp.OCSPException $r15, $r17, $r19;
        java.util.ArrayList $r0;
        java.io.ByteArrayInputStream $r11;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r6;
        java.lang.String r3;
        boolean $z0;
        org.bouncycastle.asn1.ASN1OutputStream $r2;
        java.io.IOException $r16;
        java.security.cert.CertificateException $r14, $r18;
        java.security.cert.Certificate $r13;
        org.bouncycastle.ocsp.OCSPReq r5;
        java.lang.Object $r10;

        r5 := @this: org.bouncycastle.ocsp.OCSPReq;

        r3 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r2.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r1);

     label01:
        $r4 = staticinvoke <org.bouncycastle.ocsp.OCSPUtil: java.security.cert.CertificateFactory createX509CertificateFactory(java.lang.String)>(r3);

     label02:
        goto label04;

     label03:
        $r18 := @caughtexception;

        $r19 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r19.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("can\'t get certificate factory.", $r18);

        throw $r19;

     label04:
        $r6 = r5.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r7 = virtualinvoke $r6.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.Signature getOptionalSignature()>();

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.ocsp.Signature: org.bouncycastle.asn1.ASN1Sequence getCerts()>();

        if $r8 == null goto label11;

        $r9 = virtualinvoke $r8.<org.bouncycastle.asn1.ASN1Sequence: java.util.Enumeration getObjects()>();

     label05:
        $z0 = interfaceinvoke $r9.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label11;

     label06:
        $r10 = interfaceinvoke $r9.<java.util.Enumeration: java.lang.Object nextElement()>();

        virtualinvoke $r2.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r10);

        $r11 = new java.io.ByteArrayInputStream;

        $r12 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[])>($r12);

        $r13 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.Certificate generateCertificate(java.io.InputStream)>($r11);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

     label07:
        goto label10;

     label08:
        $r16 := @caughtexception;

        $r17 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r17.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("can\'t re-encode certificate!", $r16);

        throw $r17;

     label09:
        $r14 := @caughtexception;

        $r15 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r15.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("can\'t re-encode certificate!", $r14);

        throw $r15;

     label10:
        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void reset()>();

        goto label05;

     label11:
        return $r0;

        catch java.security.cert.CertificateException from label01 to label02 with label03;
        catch java.io.IOException from label06 to label07 with label08;
        catch java.security.cert.CertificateException from label06 to label07 with label09;
    }

    public java.security.cert.X509Certificate[] getCerts(java.lang.String) throws org.bouncycastle.ocsp.OCSPException, java.security.NoSuchProviderException
    {
        java.lang.Object[] $r4;
        java.util.List $r2;
        org.bouncycastle.ocsp.OCSPReq r0;
        int $i0;
        java.lang.String r1;
        java.security.cert.X509Certificate[] $r3, $r5, $r6;
        boolean $z0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r1 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r2 = specialinvoke r0.<org.bouncycastle.ocsp.OCSPReq: java.util.List getCertList(java.lang.String)>(r1);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        $r3 = newarray (java.security.cert.X509Certificate)[$i0];

        $r4 = interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (java.security.cert.X509Certificate[]) $r4;

        $r6 = (java.security.cert.X509Certificate[]) $r5;

        return $r6;
    }

    public java.security.cert.CertStore getCertificates(java.lang.String, java.lang.String) throws java.security.NoSuchAlgorithmException, java.security.NoSuchProviderException, org.bouncycastle.ocsp.OCSPException
    {
        org.bouncycastle.ocsp.OCSPException $r7;
        java.security.InvalidAlgorithmParameterException $r6;
        java.security.cert.CollectionCertStoreParameters $r1;
        java.util.List $r3;
        java.security.cert.CertStore $r5;
        org.bouncycastle.ocsp.OCSPReq r0;
        java.lang.String r2, r4;
        boolean $z0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r1 = new java.security.cert.CollectionCertStoreParameters;

        $r3 = specialinvoke r0.<org.bouncycastle.ocsp.OCSPReq: java.util.List getCertList(java.lang.String)>(r2);

        specialinvoke $r1.<java.security.cert.CollectionCertStoreParameters: void <init>(java.util.Collection)>($r3);

        $r5 = staticinvoke <org.bouncycastle.ocsp.OCSPUtil: java.security.cert.CertStore createCertStoreInstance(java.lang.String,java.security.cert.CertStoreParameters,java.lang.String)>(r4, $r1, r2);

     label2:
        return $r5;

     label3:
        $r6 := @caughtexception;

        $r7 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r7.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>("can\'t setup the CertStore", $r6);

        throw $r7;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    public boolean isSigned()
    {
        org.bouncycastle.asn1.ocsp.Signature $r2;
        org.bouncycastle.ocsp.OCSPReq r0;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r1;
        boolean $z0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r2 = virtualinvoke $r1.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.Signature getOptionalSignature()>();

        if $r2 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean verify(java.security.PublicKey, java.lang.String) throws org.bouncycastle.ocsp.OCSPException, java.security.NoSuchProviderException
    {
        byte[] $r9, $r10;
        java.io.ByteArrayOutputStream $r5;
        org.bouncycastle.ocsp.OCSPException $r11, $r13;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r7;
        java.lang.String $r1, r2, $r17;
        org.bouncycastle.asn1.ocsp.TBSRequest $r8;
        boolean $z0, $z1;
        org.bouncycastle.asn1.ASN1OutputStream $r6;
        java.security.Signature $r3;
        java.security.PublicKey r4;
        java.lang.Exception $r12;
        org.bouncycastle.ocsp.OCSPReq r0;
        java.lang.StringBuilder $r14, $r15, $r16;
        java.security.NoSuchProviderException $r18;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r4 := @parameter0: java.security.PublicKey;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: boolean isSigned()>();

        if $z0 != 0 goto label1;

        $r11 = new org.bouncycastle.ocsp.OCSPException;

        specialinvoke $r11.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String)>("attempt to verify signature on unsigned object");

        throw $r11;

     label1:
        $r1 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: java.lang.String getSignatureAlgOID()>();

        $r3 = staticinvoke <org.bouncycastle.ocsp.OCSPUtil: java.security.Signature createSignatureInstance(java.lang.String,java.lang.String)>($r1, r2);

        virtualinvoke $r3.<java.security.Signature: void initVerify(java.security.PublicKey)>(r4);

        $r5 = new java.io.ByteArrayOutputStream;

        specialinvoke $r5.<java.io.ByteArrayOutputStream: void <init>()>();

        $r6 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r6.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r5);

        $r7 = r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        $r8 = virtualinvoke $r7.<org.bouncycastle.asn1.ocsp.OCSPRequest: org.bouncycastle.asn1.ocsp.TBSRequest getTbsRequest()>();

        virtualinvoke $r6.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r8);

        $r9 = virtualinvoke $r5.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke $r3.<java.security.Signature: void update(byte[])>($r9);

        $r10 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: byte[] getSignature()>();

        $z1 = virtualinvoke $r3.<java.security.Signature: boolean verify(byte[])>($r10);

     label2:
        return $z1;

     label3:
        $r18 := @caughtexception;

        throw $r18;

     label4:
        $r12 := @caughtexception;

        $r13 = new org.bouncycastle.ocsp.OCSPException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("exception processing sig: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<org.bouncycastle.ocsp.OCSPException: void <init>(java.lang.String,java.lang.Exception)>($r17, $r12);

        throw $r13;

        catch java.security.NoSuchProviderException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    public byte[] getEncoded() throws java.io.IOException
    {
        byte[] $r4;
        org.bouncycastle.asn1.ASN1OutputStream $r1;
        java.io.ByteArrayOutputStream $r0;
        org.bouncycastle.ocsp.OCSPReq r2;
        org.bouncycastle.asn1.ocsp.OCSPRequest $r3;

        r2 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r0 = new java.io.ByteArrayOutputStream;

        specialinvoke $r0.<java.io.ByteArrayOutputStream: void <init>()>();

        $r1 = new org.bouncycastle.asn1.ASN1OutputStream;

        specialinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void <init>(java.io.OutputStream)>($r0);

        $r3 = r2.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.ocsp.OCSPRequest req>;

        virtualinvoke $r1.<org.bouncycastle.asn1.ASN1OutputStream: void writeObject(java.lang.Object)>($r3);

        $r4 = virtualinvoke $r0.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r4;
    }

    public boolean hasUnsupportedCriticalExtension()
    {
        java.util.Set $r1;
        org.bouncycastle.ocsp.OCSPReq r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: java.util.Set getCriticalExtensionOIDs()>();

        if $r1 == null goto label1;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private java.util.Set getExtensionOIDs(boolean)
    {
        java.util.Enumeration $r3;
        org.bouncycastle.asn1.x509.X509Extensions $r2;
        org.bouncycastle.asn1.x509.X509Extension $r6;
        java.util.HashSet $r0;
        org.bouncycastle.ocsp.OCSPReq r1;
        java.lang.Object $r4;
        java.lang.String $r7;
        boolean $z0, z1, $z2;
        org.bouncycastle.asn1.DERObjectIdentifier r5;

        r1 := @this: org.bouncycastle.ocsp.OCSPReq;

        z1 := @parameter0: boolean;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        $r2 = virtualinvoke r1.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.x509.X509Extensions getRequestExtensions()>();

        if $r2 == null goto label3;

        $r3 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509Extensions: java.util.Enumeration oids()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Enumeration: java.lang.Object nextElement()>();

        r5 = (org.bouncycastle.asn1.DERObjectIdentifier) $r4;

        $r6 = virtualinvoke $r2.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>(r5);

        $z2 = virtualinvoke $r6.<org.bouncycastle.asn1.x509.X509Extension: boolean isCritical()>();

        if z1 != $z2 goto label2;

        $r7 = virtualinvoke r5.<org.bouncycastle.asn1.DERObjectIdentifier: java.lang.String getId()>();

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r7);

     label2:
        goto label1;

     label3:
        return $r0;
    }

    public java.util.Set getCriticalExtensionOIDs()
    {
        java.util.Set $r1;
        org.bouncycastle.ocsp.OCSPReq r0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = specialinvoke r0.<org.bouncycastle.ocsp.OCSPReq: java.util.Set getExtensionOIDs(boolean)>(1);

        return $r1;
    }

    public java.util.Set getNonCriticalExtensionOIDs()
    {
        java.util.Set $r1;
        org.bouncycastle.ocsp.OCSPReq r0;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        $r1 = specialinvoke r0.<org.bouncycastle.ocsp.OCSPReq: java.util.Set getExtensionOIDs(boolean)>(0);

        return $r1;
    }

    public byte[] getExtensionValue(java.lang.String)
    {
        byte[] $r6;
        org.bouncycastle.asn1.x509.X509Extensions $r1;
        org.bouncycastle.asn1.x509.X509Extension $r4;
        java.lang.RuntimeException $r8;
        java.lang.Exception $r7;
        org.bouncycastle.asn1.ASN1OctetString $r5;
        org.bouncycastle.ocsp.OCSPReq r0;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.String r3, $r11, $r13;
        org.bouncycastle.asn1.DERObjectIdentifier $r2;

        r0 := @this: org.bouncycastle.ocsp.OCSPReq;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.bouncycastle.ocsp.OCSPReq: org.bouncycastle.asn1.x509.X509Extensions getRequestExtensions()>();

        if $r1 == null goto label4;

        $r2 = new org.bouncycastle.asn1.DERObjectIdentifier;

        specialinvoke $r2.<org.bouncycastle.asn1.DERObjectIdentifier: void <init>(java.lang.String)>(r3);

        $r4 = virtualinvoke $r1.<org.bouncycastle.asn1.x509.X509Extensions: org.bouncycastle.asn1.x509.X509Extension getExtension(org.bouncycastle.asn1.DERObjectIdentifier)>($r2);

        if $r4 == null goto label4;

     label1:
        $r5 = virtualinvoke $r4.<org.bouncycastle.asn1.x509.X509Extension: org.bouncycastle.asn1.ASN1OctetString getValue()>();

        $r6 = virtualinvoke $r5.<org.bouncycastle.asn1.ASN1OctetString: byte[] getEncoded(java.lang.String)>("DER");

     label2:
        return $r6;

     label3:
        $r7 := @caughtexception;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("error encoding ");

        $r11 = virtualinvoke $r7.<java.lang.Exception: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
