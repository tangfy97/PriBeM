public class org.eclipse.jetty.server.session.HashedSession extends org.eclipse.jetty.server.session.AbstractSession
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    private final org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager;
    private transient boolean _idled;
    private transient boolean _saveFailed;

    protected void <init>(org.eclipse.jetty.server.session.HashSessionManager, javax.servlet.http.HttpServletRequest)
    {
        org.eclipse.jetty.server.session.HashSessionManager r1;
        javax.servlet.http.HttpServletRequest r2;
        org.eclipse.jetty.server.session.HashedSession r0;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        r1 := @parameter0: org.eclipse.jetty.server.session.HashSessionManager;

        r2 := @parameter1: javax.servlet.http.HttpServletRequest;

        specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void <init>(org.eclipse.jetty.server.session.AbstractSessionManager,javax.servlet.http.HttpServletRequest)>(r1, r2);

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _idled> = 0;

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _saveFailed> = 0;

        r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager> = r1;

        return;
    }

    protected void <init>(org.eclipse.jetty.server.session.HashSessionManager, long, long, java.lang.String)
    {
        org.eclipse.jetty.server.session.HashSessionManager r1;
        org.eclipse.jetty.server.session.HashedSession r0;
        long l0, l1;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        r1 := @parameter0: org.eclipse.jetty.server.session.HashSessionManager;

        l0 := @parameter1: long;

        l1 := @parameter2: long;

        r2 := @parameter3: java.lang.String;

        specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void <init>(org.eclipse.jetty.server.session.AbstractSessionManager,long,long,java.lang.String)>(r1, l0, l1, r2);

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _idled> = 0;

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _saveFailed> = 0;

        r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager> = r1;

        return;
    }

    protected void checkValid()
    {
        org.eclipse.jetty.server.session.HashSessionManager $r1;
        org.eclipse.jetty.server.session.HashedSession r0;
        byte $b1;
        long $l0;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        $r1 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $l0 = $r1.<org.eclipse.jetty.server.session.HashSessionManager: long _idleSavePeriodMs>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void deIdle()>();

     label1:
        specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void checkValid()>();

        return;
    }

    public void setMaxInactiveInterval(int)
    {
        org.eclipse.jetty.server.session.HashedSession r0;
        long $l3, $l4, $l5, $l6;
        org.eclipse.jetty.server.session.HashSessionManager $r1, $r2;
        byte $b7;
        int i0, $i1, $i2, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        i0 := @parameter0: int;

        specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void setMaxInactiveInterval(int)>(i0);

        $i1 = virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: int getMaxInactiveInterval()>();

        if $i1 <= 0 goto label1;

        $i2 = virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: int getMaxInactiveInterval()>();

        $l3 = (long) $i2;

        $l4 = $l3 * 1000L;

        $l6 = $l4 / 10L;

        $r1 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $l5 = $r1.<org.eclipse.jetty.server.session.HashSessionManager: long _scavengePeriodMs>;

        $b7 = $l6 cmp $l5;

        $i10 = (int) $b7;

        if $i10 >= 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $i8 = i0 + 9;

        $i9 = $i8 / 10;

        virtualinvoke $r2.<org.eclipse.jetty.server.session.HashSessionManager: void setScavengePeriod(int)>($i9);

     label1:
        return;
    }

    protected void doInvalidate() throws java.lang.IllegalStateException
    {
        org.eclipse.jetty.server.session.HashedSession r0;
        java.io.File $r2, $r5, $r7;
        org.eclipse.jetty.server.session.HashSessionManager $r1, $r6;
        java.lang.String $r3, $r4;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: void doInvalidate()>();

        $r1 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $r2 = $r1.<org.eclipse.jetty.server.session.HashSessionManager: java.io.File _storeDir>;

        if $r2 == null goto label1;

        $r3 = virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: java.lang.String getId()>();

        if $r3 == null goto label1;

        $r4 = virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: java.lang.String getId()>();

        $r5 = new java.io.File;

        $r6 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $r7 = $r6.<org.eclipse.jetty.server.session.HashSessionManager: java.io.File _storeDir>;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r7, $r4);

        virtualinvoke $r5.<java.io.File: boolean delete()>();

     label1:
        return;
    }

    synchronized void save(boolean) throws java.lang.Exception
    {
        java.lang.Object[] $r7;
        org.eclipse.jetty.server.session.HashSessionManager $r3;
        java.lang.Boolean $r10;
        java.lang.String $r5, $r9;
        boolean $z0, $z1, $z2, $z3, z4;
        org.eclipse.jetty.server.session.HashedSession r0;
        java.io.FileOutputStream $r6, r13;
        java.io.File $r2, $r4, r12;
        java.lang.Exception $r11;
        org.eclipse.jetty.util.log.Logger $r1, $r8;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        z4 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: boolean isIdled()>();

        if $z0 != 0 goto label9;

        $z1 = r0.<org.eclipse.jetty.server.session.HashedSession: boolean _saveFailed>;

        if $z1 != 0 goto label9;

        $r1 = <org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.util.log.Logger LOG>;

        $z2 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label1;

        $r8 = <org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.util.log.Logger LOG>;

        $r7 = newarray (java.lang.Object)[2];

        $r9 = specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getId()>();

        $r7[0] = $r9;

        $r10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z4);

        $r7[1] = $r10;

        interfaceinvoke $r8.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("Saving {} {}", $r7);

     label1:
        r12 = null;

        r13 = null;

     label2:
        $r2 = new java.io.File;

        $r3 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $r4 = $r3.<org.eclipse.jetty.server.session.HashSessionManager: java.io.File _storeDir>;

        $r5 = specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getId()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        r12 = $r2;

        $z3 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z3 == 0 goto label3;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label3:
        virtualinvoke $r2.<java.io.File: boolean createNewFile()>();

        $r6 = new java.io.FileOutputStream;

        specialinvoke $r6.<java.io.FileOutputStream: void <init>(java.io.File)>($r2);

        r13 = $r6;

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void willPassivate()>();

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void save(java.io.OutputStream)>($r6);

        staticinvoke <org.eclipse.jetty.util.IO: void close(java.io.OutputStream)>($r6);

        if z4 == 0 goto label4;

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void didActivate()>();

        goto label5;

     label4:
        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void clearAttributes()>();

     label5:
        goto label9;

     label6:
        $r11 := @caughtexception;

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void saveFailed()>();

        if r13 == null goto label7;

        staticinvoke <org.eclipse.jetty.util.IO: void close(java.io.OutputStream)>(r13);

     label7:
        if r12 == null goto label8;

        virtualinvoke r12.<java.io.File: boolean delete()>();

     label8:
        throw $r11;

     label9:
        return;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    public synchronized void save(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        org.eclipse.jetty.server.session.HashedSession r2;
        java.util.Enumeration $r6;
        long $l0, $l1;
        java.io.DataOutputStream $r0;
        int $i2, $i3;
        java.io.ObjectOutputStream $r5;
        java.lang.Object $r7, $r9;
        java.lang.String $r3, $r4, r8;
        boolean $z0;

        r2 := @this: org.eclipse.jetty.server.session.HashedSession;

        r1 := @parameter0: java.io.OutputStream;

        $r0 = new java.io.DataOutputStream;

        specialinvoke $r0.<java.io.DataOutputStream: void <init>(java.io.OutputStream)>(r1);

        $r3 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: java.lang.String getClusterId()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r3);

        $r4 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: java.lang.String getNodeId()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeUTF(java.lang.String)>($r4);

        $l0 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: long getCreationTime()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeLong(long)>($l0);

        $l1 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: long getAccessed()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeLong(long)>($l1);

        $i2 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: int getRequests()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeInt(int)>($i2);

        $i3 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: int getAttributes()>();

        virtualinvoke $r0.<java.io.DataOutputStream: void writeInt(int)>($i3);

        $r5 = new java.io.ObjectOutputStream;

        specialinvoke $r5.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r0);

        $r6 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: java.util.Enumeration getAttributeNames()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Enumeration: java.lang.Object nextElement()>();

        r8 = (java.lang.String) $r7;

        virtualinvoke $r5.<java.io.ObjectOutputStream: void writeUTF(java.lang.String)>(r8);

        $r9 = virtualinvoke r2.<org.eclipse.jetty.server.session.HashedSession: java.lang.Object doGet(java.lang.String)>(r8);

        virtualinvoke $r5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>($r9);

        goto label1;

     label2:
        virtualinvoke $r5.<java.io.ObjectOutputStream: void close()>();

        return;
    }

    public synchronized void deIdle()
    {
        byte $b2;
        boolean $z0, $z1, $z2, $z3;
        java.io.FileNotFoundException $r6;
        java.lang.Exception $r18;
        java.lang.StringBuilder $r11, $r13, $r15, $r19, $r21, $r23;
        java.lang.Object[] $r17;
        long $l0, $l1;
        org.eclipse.jetty.server.session.HashSessionManager $r3, $r9, $r10;
        java.lang.String $r5, $r7, $r14, $r16, $r22, $r24;
        org.eclipse.jetty.server.session.HashedSession r0;
        java.io.FileInputStream $r8, r25;
        java.io.File $r2, $r4;
        org.eclipse.jetty.util.log.Logger $r1, $r12, $r20;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: boolean isIdled()>();

        if $z0 == 0 goto label8;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: boolean access(long)>($l0);

        $r1 = <org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.util.log.Logger LOG>;

        $z1 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r12 = <org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.util.log.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("De-idling ");

        $r14 = specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getId()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        $r17 = newarray (java.lang.Object)[0];

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r16, $r17);

     label1:
        r25 = null;

     label2:
        $r2 = new java.io.File;

        $r3 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $r4 = $r3.<org.eclipse.jetty.server.session.HashSessionManager: java.io.File _storeDir>;

        $r5 = specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getId()>();

        specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r4, $r5);

        $z2 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z2 == 0 goto label3;

        $z3 = virtualinvoke $r2.<java.io.File: boolean canRead()>();

        if $z3 != 0 goto label4;

     label3:
        $r6 = new java.io.FileNotFoundException;

        $r7 = virtualinvoke $r2.<java.io.File: java.lang.String getName()>();

        specialinvoke $r6.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        $r8 = new java.io.FileInputStream;

        specialinvoke $r8.<java.io.FileInputStream: void <init>(java.io.File)>($r2);

        r25 = $r8;

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _idled> = 0;

        $r9 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        virtualinvoke $r9.<org.eclipse.jetty.server.session.HashSessionManager: org.eclipse.jetty.server.session.HashedSession restoreSession(java.io.InputStream,org.eclipse.jetty.server.session.HashedSession)>($r8, r0);

        staticinvoke <org.eclipse.jetty.util.IO: void close(java.io.InputStream)>($r8);

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void didActivate()>();

        $r10 = r0.<org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.server.session.HashSessionManager _hashSessionManager>;

        $l1 = $r10.<org.eclipse.jetty.server.session.HashSessionManager: long _savePeriodMs>;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label5;

        virtualinvoke $r2.<java.io.File: boolean delete()>();

     label5:
        goto label8;

     label6:
        $r18 := @caughtexception;

        $r20 = <org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.util.log.Logger LOG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem de-idling session ");

        $r22 = specialinvoke r0.<org.eclipse.jetty.server.session.AbstractSession: java.lang.String getId()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r24, $r18);

        if r25 == null goto label7;

        staticinvoke <org.eclipse.jetty.util.IO: void close(java.io.InputStream)>(r25);

     label7:
        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void invalidate()>();

     label8:
        return;

        catch java.lang.Exception from label2 to label5 with label6;
    }

    public synchronized void idle() throws java.lang.Exception
    {
        org.eclipse.jetty.server.session.HashedSession r0;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        virtualinvoke r0.<org.eclipse.jetty.server.session.HashedSession: void save(boolean)>(0);

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _idled> = 1;

        return;
    }

    public synchronized boolean isIdled()
    {
        org.eclipse.jetty.server.session.HashedSession r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        $z0 = r0.<org.eclipse.jetty.server.session.HashedSession: boolean _idled>;

        return $z0;
    }

    public synchronized boolean isSaveFailed()
    {
        org.eclipse.jetty.server.session.HashedSession r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        $z0 = r0.<org.eclipse.jetty.server.session.HashedSession: boolean _saveFailed>;

        return $z0;
    }

    public synchronized void saveFailed()
    {
        org.eclipse.jetty.server.session.HashedSession r0;

        r0 := @this: org.eclipse.jetty.server.session.HashedSession;

        r0.<org.eclipse.jetty.server.session.HashedSession: boolean _saveFailed> = 1;

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/server/session/HashedSession;");

        <org.eclipse.jetty.server.session.HashedSession: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
