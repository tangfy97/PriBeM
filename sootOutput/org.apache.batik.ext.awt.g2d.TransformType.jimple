public class org.apache.batik.ext.awt.g2d.TransformType extends java.lang.Object
{
    public static final int TRANSFORM_TRANSLATE;
    public static final int TRANSFORM_ROTATE;
    public static final int TRANSFORM_SCALE;
    public static final int TRANSFORM_SHEAR;
    public static final int TRANSFORM_GENERAL;
    public static final java.lang.String TRANSLATE_STRING;
    public static final java.lang.String ROTATE_STRING;
    public static final java.lang.String SCALE_STRING;
    public static final java.lang.String SHEAR_STRING;
    public static final java.lang.String GENERAL_STRING;
    public static final org.apache.batik.ext.awt.g2d.TransformType TRANSLATE;
    public static final org.apache.batik.ext.awt.g2d.TransformType ROTATE;
    public static final org.apache.batik.ext.awt.g2d.TransformType SCALE;
    public static final org.apache.batik.ext.awt.g2d.TransformType SHEAR;
    public static final org.apache.batik.ext.awt.g2d.TransformType GENERAL;
    private java.lang.String desc;
    private int val;

    private void <init>(int, java.lang.String)
    {
        int i0;
        java.lang.String r1;
        org.apache.batik.ext.awt.g2d.TransformType r0;

        r0 := @this: org.apache.batik.ext.awt.g2d.TransformType;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.g2d.TransformType: java.lang.String desc> = r1;

        r0.<org.apache.batik.ext.awt.g2d.TransformType: int val> = i0;

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.batik.ext.awt.g2d.TransformType r0;

        r0 := @this: org.apache.batik.ext.awt.g2d.TransformType;

        $r1 = r0.<org.apache.batik.ext.awt.g2d.TransformType: java.lang.String desc>;

        return $r1;
    }

    public int toInt()
    {
        int $i0;
        org.apache.batik.ext.awt.g2d.TransformType r0;

        r0 := @this: org.apache.batik.ext.awt.g2d.TransformType;

        $i0 = r0.<org.apache.batik.ext.awt.g2d.TransformType: int val>;

        return $i0;
    }

    public java.lang.Object readResolve()
    {
        java.lang.Error $r6;
        java.lang.StringBuffer $r7, $r8, $r9;
        int $i0, $i1;
        java.lang.String $r10;
        org.apache.batik.ext.awt.g2d.TransformType r0, $r1, $r2, $r3, $r4, $r5;

        r0 := @this: org.apache.batik.ext.awt.g2d.TransformType;

        $i0 = r0.<org.apache.batik.ext.awt.g2d.TransformType: int val>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            case 4: goto label5;
            default: goto label6;
        };

     label1:
        $r5 = <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType TRANSLATE>;

        return $r5;

     label2:
        $r4 = <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType ROTATE>;

        return $r4;

     label3:
        $r3 = <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType SCALE>;

        return $r3;

     label4:
        $r2 = <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType SHEAR>;

        return $r2;

     label5:
        $r1 = <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType GENERAL>;

        return $r1;

     label6:
        $r6 = new java.lang.Error;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown TransformType value:");

        $i1 = r0.<org.apache.batik.ext.awt.g2d.TransformType: int val>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.Error: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    static void <clinit>()
    {
        org.apache.batik.ext.awt.g2d.TransformType $r0, $r1, $r2, $r3, $r4;

        <org.apache.batik.ext.awt.g2d.TransformType: java.lang.String GENERAL_STRING> = "general";

        <org.apache.batik.ext.awt.g2d.TransformType: java.lang.String SHEAR_STRING> = "shear";

        <org.apache.batik.ext.awt.g2d.TransformType: java.lang.String SCALE_STRING> = "scale";

        <org.apache.batik.ext.awt.g2d.TransformType: java.lang.String ROTATE_STRING> = "rotate";

        <org.apache.batik.ext.awt.g2d.TransformType: java.lang.String TRANSLATE_STRING> = "translate";

        <org.apache.batik.ext.awt.g2d.TransformType: int TRANSFORM_GENERAL> = 4;

        <org.apache.batik.ext.awt.g2d.TransformType: int TRANSFORM_SHEAR> = 3;

        <org.apache.batik.ext.awt.g2d.TransformType: int TRANSFORM_SCALE> = 2;

        <org.apache.batik.ext.awt.g2d.TransformType: int TRANSFORM_ROTATE> = 1;

        <org.apache.batik.ext.awt.g2d.TransformType: int TRANSFORM_TRANSLATE> = 0;

        $r0 = new org.apache.batik.ext.awt.g2d.TransformType;

        specialinvoke $r0.<org.apache.batik.ext.awt.g2d.TransformType: void <init>(int,java.lang.String)>(0, "translate");

        <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType TRANSLATE> = $r0;

        $r1 = new org.apache.batik.ext.awt.g2d.TransformType;

        specialinvoke $r1.<org.apache.batik.ext.awt.g2d.TransformType: void <init>(int,java.lang.String)>(1, "rotate");

        <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType ROTATE> = $r1;

        $r2 = new org.apache.batik.ext.awt.g2d.TransformType;

        specialinvoke $r2.<org.apache.batik.ext.awt.g2d.TransformType: void <init>(int,java.lang.String)>(2, "scale");

        <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType SCALE> = $r2;

        $r3 = new org.apache.batik.ext.awt.g2d.TransformType;

        specialinvoke $r3.<org.apache.batik.ext.awt.g2d.TransformType: void <init>(int,java.lang.String)>(3, "shear");

        <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType SHEAR> = $r3;

        $r4 = new org.apache.batik.ext.awt.g2d.TransformType;

        specialinvoke $r4.<org.apache.batik.ext.awt.g2d.TransformType: void <init>(int,java.lang.String)>(4, "general");

        <org.apache.batik.ext.awt.g2d.TransformType: org.apache.batik.ext.awt.g2d.TransformType GENERAL> = $r4;

        return;
    }
}
