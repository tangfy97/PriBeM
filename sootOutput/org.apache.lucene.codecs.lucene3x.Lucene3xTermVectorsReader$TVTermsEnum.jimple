class org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum extends org.apache.lucene.index.TermsEnum
{
    private boolean unicodeSortOrder;
    private final org.apache.lucene.store.IndexInput origTVF;
    private final org.apache.lucene.store.IndexInput tvf;
    private int numTerms;
    private int currentTerm;
    private boolean storePositions;
    private boolean storeOffsets;
    private org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings;
    final org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader this$0;

    public void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r2, $r3, $r4;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader r1;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        r1 := @parameter0: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader this$0> = r1;

        specialinvoke r0.<org.apache.lucene.index.TermsEnum: void <init>()>();

        $r2 = staticinvoke <org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader: org.apache.lucene.store.IndexInput access$400(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader)>(r1);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput origTVF> = $r2;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput origTVF>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.store.IndexInput: org.apache.lucene.store.IndexInput clone()>();

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf> = $r4;

        return;
    }

    public boolean canReuse(org.apache.lucene.store.IndexInput)
    {
        org.apache.lucene.store.IndexInput r0, $r2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r1;
        boolean $z0;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        r0 := @parameter0: org.apache.lucene.store.IndexInput;

        $r2 = r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput origTVF>;

        if r0 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void reset(int, long, boolean, boolean, boolean) throws java.io.IOException
    {
        org.apache.lucene.store.IndexInput $r1;
        long l1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum$1 $r4;
        int i0, $i3;
        boolean z0, z1, z2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        i0 := @parameter0: int;

        l1 := @parameter1: long;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int numTerms> = i0;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean storePositions> = z0;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean storeOffsets> = z1;

        $i3 = (int) -1;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm> = $i3;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>(l1);

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean unicodeSortOrder> = z2;

        specialinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: void readVectors()>();

        if z2 == 0 goto label1;

        $r3 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $r4 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum$1;

        specialinvoke $r4.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum$1: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum)>(r0);

        staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>($r3, $r4);

     label1:
        return;
    }

    private void readVectors() throws java.io.IOException
    {
        byte[] $r7;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;
        int[] r14, r15, r16;
        boolean $z0, $z1;
        org.apache.lucene.util.BytesRef $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, i16, i17, i18, i19, $i21;
        org.apache.lucene.store.IndexInput $r5, $r6, $r8, $r9, $r11, $r12, $r13;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r1, $r10;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings $r18;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int numTerms>;

        $r1 = newarray (org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings)[$i0];

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings> = $r1;

        $r17 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r17.<org.apache.lucene.util.BytesRef: void <init>()>();

        i14 = 0;

     label1:
        $i1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int numTerms>;

        if i14 >= $i1 goto label9;

        $r18 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings;

        specialinvoke $r18.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: void <init>()>();

        $r19 = new org.apache.lucene.util.BytesRef;

        specialinvoke $r19.<org.apache.lucene.util.BytesRef: void <init>()>();

        virtualinvoke $r19.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>($r17);

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $i2 = virtualinvoke $r5.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r6 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $i3 = virtualinvoke $r6.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i4 = $i2 + $i3;

        $r19.<org.apache.lucene.util.BytesRef: int length> = $i4;

        $i5 = $r19.<org.apache.lucene.util.BytesRef: int length>;

        virtualinvoke $r19.<org.apache.lucene.util.BytesRef: void grow(int)>($i5);

        $r8 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $r7 = $r19.<org.apache.lucene.util.BytesRef: byte[] bytes>;

        virtualinvoke $r8.<org.apache.lucene.store.IndexInput: void readBytes(byte[],int,int)>($r7, $i2, $i3);

        $r18.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: org.apache.lucene.util.BytesRef term> = $r19;

        $r9 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $i6 = virtualinvoke $r9.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $r18.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: int freq> = $i6;

        $z0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean storePositions>;

        if $z0 == 0 goto label5;

        r14 = newarray (int)[$i6];

        i15 = 0;

        i16 = 0;

     label2:
        if i16 >= $i6 goto label4;

        $r13 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $i12 = virtualinvoke $r13.<org.apache.lucene.store.IndexInput: int readVInt()>();

        i17 = $i12;

        $i21 = (int) -1;

        if $i12 != $i21 goto label3;

        i17 = 0;

     label3:
        $i13 = i15 + i17;

        i15 = $i13;

        r14[i16] = $i13;

        i16 = i16 + 1;

        goto label2;

     label4:
        $r18.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: int[] positions> = r14;

     label5:
        $z1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean storeOffsets>;

        if $z1 == 0 goto label8;

        r15 = newarray (int)[$i6];

        r16 = newarray (int)[$i6];

        i18 = 0;

        i19 = 0;

     label6:
        if i19 >= $i6 goto label7;

        $r11 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $i7 = virtualinvoke $r11.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i8 = i18 + $i7;

        r15[i19] = $i8;

        $i9 = r15[i19];

        $r12 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.store.IndexInput tvf>;

        $i10 = virtualinvoke $r12.<org.apache.lucene.store.IndexInput: int readVInt()>();

        $i11 = $i9 + $i10;

        r16[i19] = $i11;

        i18 = $i11;

        i19 = i19 + 1;

        goto label6;

     label7:
        $r18.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: int[] startOffsets> = r15;

        $r18.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: int[] endOffsets> = r16;

     label8:
        virtualinvoke $r17.<org.apache.lucene.util.BytesRef: void copyBytes(org.apache.lucene.util.BytesRef)>($r19);

        $r10 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $r10[i14] = $r18;

        i14 = i14 + 1;

        goto label1;

     label9:
        return;
    }

    public org.apache.lucene.index.TermsEnum$SeekStatus seekCeil(org.apache.lucene.util.BytesRef, boolean) throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef r4, $r7;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r2, $r5;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.index.TermsEnum$SeekStatus $r3, $r8, $r9;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings $r6;
        int $i0, $i1, $i2, i3;
        java.util.Comparator $r1;
        boolean z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        r4 := @parameter0: org.apache.lucene.util.BytesRef;

        z0 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: java.util.Comparator getComparator()>();

        i3 = 0;

     label1:
        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int numTerms>;

        if i3 >= $i0 goto label4;

        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $r6 = $r5[i3];

        $r7 = $r6.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: org.apache.lucene.util.BytesRef term>;

        $i2 = interfaceinvoke $r1.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(r4, $r7);

        if $i2 >= 0 goto label2;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm> = i3;

        $r9 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus NOT_FOUND>;

        return $r9;

     label2:
        if $i2 != 0 goto label3;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm> = i3;

        $r8 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus FOUND>;

        return $r8;

     label3:
        i3 = i3 + 1;

        goto label1;

     label4:
        $r2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $i1 = lengthof $r2;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm> = $i1;

        $r3 = <org.apache.lucene.index.TermsEnum$SeekStatus: org.apache.lucene.index.TermsEnum$SeekStatus END>;

        return $r3;
    }

    public void seekExact(long)
    {
        java.lang.UnsupportedOperationException $r0;
        long l0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r1;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        l0 := @parameter0: long;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public org.apache.lucene.util.BytesRef next() throws java.io.IOException
    {
        org.apache.lucene.util.BytesRef $r1;
        int $i0, $i1, $i2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm> = $i1;

        $i2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int numTerms>;

        if $i1 < $i2 goto label1;

        return null;

     label1:
        $r1 = virtualinvoke r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.util.BytesRef term()>();

        return $r1;
    }

    public org.apache.lucene.util.BytesRef term()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings $r2;
        org.apache.lucene.util.BytesRef $r3;
        int $i0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm>;

        $r2 = $r1[$i0];

        $r3 = $r2.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: org.apache.lucene.util.BytesRef term>;

        return $r3;
    }

    public long ord()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r1;

        r1 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public int docFreq()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        return 1;
    }

    public long totalTermFreq()
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings $r2;
        int $i0, $i1;
        long $l2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        $r1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $i0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm>;

        $r2 = $r1[$i0];

        $i1 = $r2.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings: int freq>;

        $l2 = (long) $i1;

        return $l2;
    }

    public org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r5;
        org.apache.lucene.index.DocsEnum r0;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r3;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsEnum $r1, r4;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings $r6;
        int i0, $i1;
        org.apache.lucene.util.Bits r2;
        boolean $z0;

        r3 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        r2 := @parameter0: org.apache.lucene.util.Bits;

        r0 := @parameter1: org.apache.lucene.index.DocsEnum;

        i0 := @parameter2: int;

        if r0 == null goto label1;

        $z0 = r0 instanceof org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsEnum;

        if $z0 == 0 goto label1;

        r4 = (org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsEnum) r0;

        goto label2;

     label1:
        $r1 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsEnum;

        specialinvoke $r1.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsEnum: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$1)>(null);

        r4 = $r1;

     label2:
        $r5 = r3.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $i1 = r3.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm>;

        $r6 = $r5[$i1];

        virtualinvoke r4.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsEnum: void reset(org.apache.lucene.util.Bits,org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings)>(r2, $r6);

        return r4;
    }

    public org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits, org.apache.lucene.index.DocsAndPositionsEnum, int) throws java.io.IOException
    {
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsAndPositionsEnum $r2, r4;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] $r5;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;
        org.apache.lucene.index.DocsAndPositionsEnum r1;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings $r6;
        int i0, $i1;
        org.apache.lucene.util.Bits r3;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        r3 := @parameter0: org.apache.lucene.util.Bits;

        r1 := @parameter1: org.apache.lucene.index.DocsAndPositionsEnum;

        i0 := @parameter2: int;

        $z0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean storePositions>;

        if $z0 != 0 goto label1;

        $z2 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean storeOffsets>;

        if $z2 != 0 goto label1;

        return null;

     label1:
        if r1 == null goto label2;

        $z1 = r1 instanceof org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsAndPositionsEnum;

        if $z1 == 0 goto label2;

        r4 = (org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsAndPositionsEnum) r1;

        goto label3;

     label2:
        $r2 = new org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsAndPositionsEnum;

        specialinvoke $r2.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsAndPositionsEnum: void <init>(org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$1)>(null);

        r4 = $r2;

     label3:
        $r5 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings[] termAndPostings>;

        $i1 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: int currentTerm>;

        $r6 = $r5[$i1];

        virtualinvoke r4.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVDocsAndPositionsEnum: void reset(org.apache.lucene.util.Bits,org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TermAndPostings)>(r3, $r6);

        return r4;
    }

    public java.util.Comparator getComparator()
    {
        java.util.Comparator $r1, $r2;
        org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum;

        $z0 = r0.<org.apache.lucene.codecs.lucene3x.Lucene3xTermVectorsReader$TVTermsEnum: boolean unicodeSortOrder>;

        if $z0 == 0 goto label1;

        $r2 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUnicodeComparator()>();

        return $r2;

     label1:
        $r1 = staticinvoke <org.apache.lucene.util.BytesRef: java.util.Comparator getUTF8SortedAsUTF16Comparator()>();

        return $r1;
    }
}
