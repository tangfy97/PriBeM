public class org.apache.lucene.queries.function.FunctionQuery$AllScorer extends org.apache.lucene.search.Scorer
{
    final org.apache.lucene.index.IndexReader reader;
    final org.apache.lucene.queries.function.FunctionQuery$FunctionWeight weight;
    final int maxDoc;
    final float qWeight;
    int doc;
    final org.apache.lucene.queries.function.FunctionValues vals;
    final org.apache.lucene.util.Bits acceptDocs;
    final org.apache.lucene.queries.function.FunctionQuery this$0;

    public void <init>(org.apache.lucene.queries.function.FunctionQuery, org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits, org.apache.lucene.queries.function.FunctionQuery$FunctionWeight, float) throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;
        org.apache.lucene.queries.function.FunctionQuery r1;
        org.apache.lucene.queries.function.ValueSource $r9;
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight r2, $r7;
        java.util.Map $r8;
        int $i0, $i2;
        float f0;
        org.apache.lucene.queries.function.FunctionValues $r10;
        org.apache.lucene.util.Bits r6;
        org.apache.lucene.index.AtomicReaderContext r3;
        org.apache.lucene.index.AtomicReader $r4;
        org.apache.lucene.index.IndexReader $r5;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        r1 := @parameter0: org.apache.lucene.queries.function.FunctionQuery;

        r3 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        r6 := @parameter2: org.apache.lucene.util.Bits;

        r2 := @parameter3: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight;

        f0 := @parameter4: float;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.Scorer: void <init>(org.apache.lucene.search.Weight)>(r2);

        $i2 = (int) -1;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc> = $i2;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight weight> = r2;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: float qWeight> = f0;

        $r4 = virtualinvoke r3.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.index.IndexReader reader> = $r4;

        $r5 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.index.IndexReader reader>;

        $i0 = virtualinvoke $r5.<org.apache.lucene.index.IndexReader: int maxDoc()>();

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int maxDoc> = $i0;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.util.Bits acceptDocs> = r6;

        $r9 = r1.<org.apache.lucene.queries.function.FunctionQuery: org.apache.lucene.queries.function.ValueSource func>;

        $r7 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight weight>;

        $r8 = $r7.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: java.util.Map context>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.queries.function.ValueSource: org.apache.lucene.queries.function.FunctionValues getValues(java.util.Map,org.apache.lucene.index.AtomicReaderContext)>($r8, r3);

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionValues vals> = $r10;

        return;
    }

    public int docID()
    {
        int $i0;
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        $i0 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc>;

        return $i0;
    }

    public int nextDoc() throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.apache.lucene.util.Bits $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

     label1:
        $i0 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc>;

        $i1 = $i0 + 1;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc> = $i1;

        $i3 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc>;

        $i2 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int maxDoc>;

        if $i3 < $i2 goto label2;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc> = 2147483647;

        return 2147483647;

     label2:
        $r1 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.util.Bits acceptDocs>;

        if $r1 == null goto label3;

        $r2 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.util.Bits acceptDocs>;

        $i5 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc>;

        $z0 = interfaceinvoke $r2.<org.apache.lucene.util.Bits: boolean get(int)>($i5);

        if $z0 != 0 goto label3;

        goto label1;

     label3:
        $i4 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc>;

        return $i4;
    }

    public int advance(int) throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        i0 := @parameter0: int;

        $i1 = i0 - 1;

        r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc> = $i1;

        $i2 = virtualinvoke r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int nextDoc()>();

        return $i2;
    }

    public float score() throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;
        byte $b1;
        int $i0, $i2;
        float $f0, $f1, f2, $f3;
        org.apache.lucene.queries.function.FunctionValues $r1;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        $f0 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: float qWeight>;

        $r1 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionValues vals>;

        $i0 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int doc>;

        $f1 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>($i0);

        f2 = $f0 * $f1;

        $b1 = f2 cmpl #-InfinityF;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $f3 = f2;

        goto label2;

     label1:
        $f3 = -3.4028235E38F;

     label2:
        return $f3;
    }

    public long cost()
    {
        int $i0;
        long $l1;
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        $i0 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: int maxDoc>;

        $l1 = (long) $i0;

        return $l1;
    }

    public int freq() throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        return 1;
    }

    public org.apache.lucene.search.Explanation explain(int) throws java.io.IOException
    {
        org.apache.lucene.queries.function.FunctionQuery $r5, $r13;
        org.apache.lucene.search.ComplexExplanation $r2;
        int i0;
        org.apache.lucene.queries.function.FunctionValues $r1, $r10;
        java.lang.String $r9;
        org.apache.lucene.search.Explanation $r11, $r12, $r14;
        org.apache.lucene.queries.function.FunctionQuery$AllScorer r0;
        org.apache.lucene.queries.function.ValueSource $r6;
        org.apache.lucene.queries.function.FunctionQuery$FunctionWeight $r15;
        float $f0, $f1, f2, $f3, $f4;
        java.lang.StringBuilder $r3, $r4, $r7, $r8;

        r0 := @this: org.apache.lucene.queries.function.FunctionQuery$AllScorer;

        i0 := @parameter0: int;

        $f0 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: float qWeight>;

        $r1 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionValues vals>;

        $f1 = virtualinvoke $r1.<org.apache.lucene.queries.function.FunctionValues: float floatVal(int)>(i0);

        f2 = $f0 * $f1;

        $r2 = new org.apache.lucene.search.ComplexExplanation;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FunctionQuery(");

        $r5 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionQuery this$0>;

        $r6 = $r5.<org.apache.lucene.queries.function.FunctionQuery: org.apache.lucene.queries.function.ValueSource func>;

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("), product of:");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.lucene.search.ComplexExplanation: void <init>(boolean,float,java.lang.String)>(1, f2, $r9);

        $r10 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionValues vals>;

        $r11 = virtualinvoke $r10.<org.apache.lucene.queries.function.FunctionValues: org.apache.lucene.search.Explanation explain(int)>(i0);

        virtualinvoke $r2.<org.apache.lucene.search.Explanation: void addDetail(org.apache.lucene.search.Explanation)>($r11);

        $r12 = new org.apache.lucene.search.Explanation;

        $r13 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionQuery this$0>;

        $f3 = virtualinvoke $r13.<org.apache.lucene.queries.function.FunctionQuery: float getBoost()>();

        specialinvoke $r12.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>($f3, "boost");

        virtualinvoke $r2.<org.apache.lucene.search.Explanation: void addDetail(org.apache.lucene.search.Explanation)>($r12);

        $r14 = new org.apache.lucene.search.Explanation;

        $r15 = r0.<org.apache.lucene.queries.function.FunctionQuery$AllScorer: org.apache.lucene.queries.function.FunctionQuery$FunctionWeight weight>;

        $f4 = $r15.<org.apache.lucene.queries.function.FunctionQuery$FunctionWeight: float queryNorm>;

        specialinvoke $r14.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>($f4, "queryNorm");

        virtualinvoke $r2.<org.apache.lucene.search.Explanation: void addDetail(org.apache.lucene.search.Explanation)>($r14);

        return $r2;
    }
}
