public class org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler extends java.lang.Object implements org.apache.batik.css.engine.CSSNavigableDocumentListener, org.apache.batik.css.engine.CSSEngine$MainPropertyReceiver
{
    protected boolean[] mainPropertiesChanged;
    protected org.apache.batik.css.engine.StyleDeclaration declaration;
    private final org.apache.batik.css.engine.CSSEngine this$0;

    protected void <init>(org.apache.batik.css.engine.CSSEngine)
    {
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        org.apache.batik.css.engine.CSSEngine r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.apache.batik.css.engine.CSSEngine;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0> = r1;

        return;
    }

    public void nodeInserted(org.w3c.dom.Node)
    {
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        org.apache.batik.css.engine.CSSEngine $r2;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: void handleNodeInserted(org.w3c.dom.Node)>(r1);

        return;
    }

    public void nodeToBeRemoved(org.w3c.dom.Node)
    {
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        org.apache.batik.css.engine.CSSEngine $r2;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: void handleNodeRemoved(org.w3c.dom.Node)>(r1);

        return;
    }

    public void subtreeModified(org.w3c.dom.Node)
    {
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        org.apache.batik.css.engine.CSSEngine $r2;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: void handleSubtreeModified(org.w3c.dom.Node)>(r1);

        return;
    }

    public void characterDataModified(org.w3c.dom.Node)
    {
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        org.apache.batik.css.engine.CSSEngine $r2;
        org.w3c.dom.Node r1;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.w3c.dom.Node;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: void handleCharacterDataModified(org.w3c.dom.Node)>(r1);

        return;
    }

    public void attrModified(org.w3c.dom.Element, org.w3c.dom.Attr, short, java.lang.String, java.lang.String)
    {
        short s0;
        org.w3c.dom.Element r1;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        java.lang.String r3, r4;
        org.w3c.dom.Attr r2;
        org.apache.batik.css.engine.CSSEngine $r5;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.w3c.dom.Attr;

        s0 := @parameter2: short;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: java.lang.String;

        $r5 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r5.<org.apache.batik.css.engine.CSSEngine: void handleAttrModified(org.w3c.dom.Element,org.w3c.dom.Attr,short,java.lang.String,java.lang.String)>(r1, r2, s0, r3, r4);

        return;
    }

    public void overrideStyleTextChanged(org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        org.apache.batik.css.engine.CSSStylableElement r0;
        org.apache.batik.css.engine.CSSEngine $r4, $r7, $r9;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r3;
        int $i0, $i1, $i2, $i3, $i4, i5, i6;
        java.lang.String r6;
        org.apache.batik.css.engine.StyleDeclaration $r2, $r8;
        boolean[] r5;
        org.apache.batik.css.engine.StyleDeclarationProvider $r1;

        r3 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r0 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r6 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleDeclarationProvider getOverrideStyleDeclarationProvider()>();

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.engine.StyleDeclarationProvider: org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()>();

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        $r4 = r3.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $i1 = virtualinvoke $r4.<org.apache.batik.css.engine.CSSEngine: int getNumberOfProperties()>();

        r5 = newarray (boolean)[$i1];

        i5 = 0;

        goto label2;

     label1:
        $i2 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i5);

        r5[$i2] = 1;

        i5 = i5 + 1;

     label2:
        if i5 < $i0 goto label1;

        $r7 = r3.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $r8 = virtualinvoke $r7.<org.apache.batik.css.engine.CSSEngine: org.apache.batik.css.engine.StyleDeclaration parseStyleDeclaration(org.apache.batik.css.engine.CSSStylableElement,java.lang.String)>(r0, r6);

        interfaceinvoke $r1.<org.apache.batik.css.engine.StyleDeclarationProvider: void setStyleDeclaration(org.apache.batik.css.engine.StyleDeclaration)>($r8);

        $i3 = virtualinvoke $r8.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        i6 = 0;

        goto label4;

     label3:
        $i4 = virtualinvoke $r8.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i6);

        r5[$i4] = 1;

        i6 = i6 + 1;

     label4:
        if i6 < $i3 goto label3;

        $r9 = r3.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r9.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r0, null, r5, 1);

        return;
    }

    public void overrideStylePropertyRemoved(org.apache.batik.css.engine.CSSStylableElement, java.lang.String)
    {
        org.apache.batik.css.engine.CSSStylableElement r0;
        org.apache.batik.css.engine.CSSEngine $r5, $r8;
        short $s3;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r3;
        int[] $r7;
        org.apache.batik.css.engine.StyleMap $r6;
        int $i0, $i1, $i2, i4, $i5, $i7;
        java.lang.String r4;
        org.apache.batik.css.engine.StyleDeclaration $r2;
        org.apache.batik.css.engine.StyleDeclarationProvider $r1;

        r3 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r0 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r4 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleDeclarationProvider getOverrideStyleDeclarationProvider()>();

        $r2 = interfaceinvoke $r1.<org.apache.batik.css.engine.StyleDeclarationProvider: org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()>();

        $r5 = r3.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $i0 = virtualinvoke $r5.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r4);

        $i1 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        i4 = 0;

        goto label3;

     label1:
        $i2 = virtualinvoke $r2.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i4);

        if $i0 != $i2 goto label2;

        virtualinvoke $r2.<org.apache.batik.css.engine.StyleDeclaration: void remove(int)>(i4);

        $r6 = interfaceinvoke r0.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleMap getComputedStyleMap(java.lang.String)>(null);

        if $r6 == null goto label4;

        $s3 = virtualinvoke $r6.<org.apache.batik.css.engine.StyleMap: short getOrigin(int)>($i0);

        $i5 = (int) $s3;

        $i7 = (int) -24576;

        if $i5 != $i7 goto label4;

        $r8 = r3.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $r7 = newarray (int)[1];

        $r7[0] = $i0;

        virtualinvoke $r8.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r0, $r7, null, 1);

        goto label4;

     label2:
        i4 = i4 + 1;

     label3:
        if i4 < $i1 goto label1;

     label4:
        return;
    }

    public void overrideStylePropertyChanged(org.apache.batik.css.engine.CSSStylableElement, java.lang.String, java.lang.String, java.lang.String)
    {
        org.apache.batik.css.engine.StyleDeclaration $r6;
        boolean[] $r9;
        org.apache.batik.css.engine.CSSStylableElement r1;
        org.apache.batik.css.engine.CSSEngine $r7, $r8;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r2;
        org.apache.batik.css.engine.StyleDeclarationProvider $r5;
        int $i0;
        java.lang.String r0, r3, r4;
        boolean $z0;

        r2 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: org.apache.batik.css.engine.CSSStylableElement;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        r0 := @parameter3: java.lang.String;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r5 = interfaceinvoke r1.<org.apache.batik.css.engine.CSSStylableElement: org.apache.batik.css.engine.StyleDeclarationProvider getOverrideStyleDeclarationProvider()>();

        $r6 = interfaceinvoke $r5.<org.apache.batik.css.engine.StyleDeclarationProvider: org.apache.batik.css.engine.StyleDeclaration getStyleDeclaration()>();

        r2.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration> = $r6;

        $r7 = r2.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        virtualinvoke $r7.<org.apache.batik.css.engine.CSSEngine: void setMainProperties(org.apache.batik.css.engine.CSSStylableElement,org.apache.batik.css.engine.CSSEngine$MainPropertyReceiver,java.lang.String,java.lang.String,boolean)>(r1, r2, r3, r4, $z0);

        r2.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration> = null;

        $r8 = r2.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $r9 = r2.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: boolean[] mainPropertiesChanged>;

        virtualinvoke $r8.<org.apache.batik.css.engine.CSSEngine: void invalidateProperties(org.w3c.dom.Node,int[],boolean[],boolean)>(r1, null, $r9, 1);

        return;
    }

    public void setMainProperty(java.lang.String, org.apache.batik.css.engine.value.Value, boolean)
    {
        org.apache.batik.css.engine.CSSEngine $r2;
        org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler r0;
        int $i0, $i1, $i2, $i3, i4, $i6;
        java.lang.String r1;
        boolean z0;
        org.apache.batik.css.engine.StyleDeclaration $r3, $r4, $r5, $r7, $r8;
        org.apache.batik.css.engine.value.Value r6;

        r0 := @this: org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.batik.css.engine.value.Value;

        z0 := @parameter2: boolean;

        $r2 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.CSSEngine this$0>;

        $i0 = virtualinvoke $r2.<org.apache.batik.css.engine.CSSEngine: int getPropertyIndex(java.lang.String)>(r1);

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        return;

     label1:
        i4 = 0;

        goto label4;

     label2:
        $r4 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i2 = virtualinvoke $r4.<org.apache.batik.css.engine.StyleDeclaration: int getIndex(int)>(i4);

        if $i0 != $i2 goto label3;

        goto label5;

     label3:
        i4 = i4 + 1;

     label4:
        $r3 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i1 = virtualinvoke $r3.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        if i4 < $i1 goto label2;

     label5:
        $r5 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration>;

        $i3 = virtualinvoke $r5.<org.apache.batik.css.engine.StyleDeclaration: int size()>();

        if i4 >= $i3 goto label6;

        $r8 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration>;

        virtualinvoke $r8.<org.apache.batik.css.engine.StyleDeclaration: void put(int,org.apache.batik.css.engine.value.Value,int,boolean)>(i4, r6, $i0, z0);

        goto label7;

     label6:
        $r7 = r0.<org.apache.batik.css.engine.CSSEngine$CSSNavigableDocumentHandler: org.apache.batik.css.engine.StyleDeclaration declaration>;

        virtualinvoke $r7.<org.apache.batik.css.engine.StyleDeclaration: void append(org.apache.batik.css.engine.value.Value,int,boolean)>(r6, $i0, z0);

     label7:
        return;
    }
}
