public class org.jdesktop.swingx.tree.DefaultXTreeCellRenderer extends javax.swing.tree.DefaultTreeCellRenderer
{

    public void <init>()
    {
        org.jdesktop.swingx.tree.DefaultXTreeCellRenderer r0;

        r0 := @this: org.jdesktop.swingx.tree.DefaultXTreeCellRenderer;

        specialinvoke r0.<javax.swing.tree.DefaultTreeCellRenderer: void <init>()>();

        return;
    }

    public void updateUI()
    {
        org.jdesktop.swingx.tree.DefaultXTreeCellRenderer r0;

        r0 := @this: org.jdesktop.swingx.tree.DefaultXTreeCellRenderer;

        specialinvoke r0.<javax.swing.tree.DefaultTreeCellRenderer: void updateUI()>();

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void updateIcons()>();

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void updateColors()>();

        return;
    }

    protected void updateColors()
    {
        java.awt.Color $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10;
        org.jdesktop.swingx.tree.DefaultXTreeCellRenderer r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r0 := @this: org.jdesktop.swingx.tree.DefaultXTreeCellRenderer;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.awt.Color getTextSelectionColor()>();

        $z0 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r10 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionForeground");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setTextSelectionColor(java.awt.Color)>($r10);

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.awt.Color getTextNonSelectionColor()>();

        $z1 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $r9 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.textForeground");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setTextNonSelectionColor(java.awt.Color)>($r9);

     label2:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.awt.Color getBackgroundSelectionColor()>();

        $z2 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r8 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBackground");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setBackgroundSelectionColor(java.awt.Color)>($r8);

     label3:
        $r4 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.awt.Color getBackgroundNonSelectionColor()>();

        $z3 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r4);

        if $z3 == 0 goto label4;

        $r7 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.textBackground");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setBackgroundNonSelectionColor(java.awt.Color)>($r7);

     label4:
        $r5 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: java.awt.Color getBorderSelectionColor()>();

        $z4 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r5);

        if $z4 == 0 goto label5;

        $r6 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.selectionBorderColor");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setBorderSelectionColor(java.awt.Color)>($r6);

     label5:
        return;
    }

    protected void updateIcons()
    {
        javax.swing.Icon $r1, $r2, $r3, $r4, $r5, $r6;
        org.jdesktop.swingx.tree.DefaultXTreeCellRenderer r0;
        boolean $z0, $z1, $z2;

        r0 := @this: org.jdesktop.swingx.tree.DefaultXTreeCellRenderer;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: javax.swing.Icon getLeafIcon()>();

        $z0 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r1);

        if $z0 == 0 goto label1;

        $r6 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("Tree.leafIcon");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setLeafIcon(javax.swing.Icon)>($r6);

     label1:
        $r2 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: javax.swing.Icon getClosedIcon()>();

        $z1 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        $r5 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("Tree.closedIcon");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setClosedIcon(javax.swing.Icon)>($r5);

     label2:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: javax.swing.Icon getOpenIcon()>();

        $z2 = staticinvoke <org.jdesktop.swingx.SwingXUtilities: boolean isUIInstallable(java.lang.Object)>($r3);

        if $z2 == 0 goto label3;

        $r4 = staticinvoke <javax.swing.UIManager: javax.swing.Icon getIcon(java.lang.Object)>("Tree.openIcon");

        virtualinvoke r0.<org.jdesktop.swingx.tree.DefaultXTreeCellRenderer: void setOpenIcon(javax.swing.Icon)>($r4);

     label3:
        return;
    }
}
