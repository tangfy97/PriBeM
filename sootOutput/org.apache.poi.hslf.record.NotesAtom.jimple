public final class org.apache.poi.hslf.record.NotesAtom extends org.apache.poi.hslf.record.RecordAtom
{
    private byte[] _header;
    private static long _type;
    private int slideID;
    private boolean followMasterObjects;
    private boolean followMasterScheme;
    private boolean followMasterBackground;
    private byte[] reserved;

    public int getSlideID()
    {
        int $i0;
        org.apache.poi.hslf.record.NotesAtom r0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        $i0 = r0.<org.apache.poi.hslf.record.NotesAtom: int slideID>;

        return $i0;
    }

    public void setSlideID(int)
    {
        int i0;
        org.apache.poi.hslf.record.NotesAtom r0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.record.NotesAtom: int slideID> = i0;

        return;
    }

    public boolean getFollowMasterObjects()
    {
        org.apache.poi.hslf.record.NotesAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        $z0 = r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterObjects>;

        return $z0;
    }

    public boolean getFollowMasterScheme()
    {
        org.apache.poi.hslf.record.NotesAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        $z0 = r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterScheme>;

        return $z0;
    }

    public boolean getFollowMasterBackground()
    {
        org.apache.poi.hslf.record.NotesAtom r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        $z0 = r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterBackground>;

        return $z0;
    }

    public void setFollowMasterObjects(boolean)
    {
        org.apache.poi.hslf.record.NotesAtom r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterObjects> = z0;

        return;
    }

    public void setFollowMasterScheme(boolean)
    {
        org.apache.poi.hslf.record.NotesAtom r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterScheme> = z0;

        return;
    }

    public void setFollowMasterBackground(boolean)
    {
        org.apache.poi.hslf.record.NotesAtom r0;
        boolean z0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        z0 := @parameter0: boolean;

        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterBackground> = z0;

        return;
    }

    protected void <init>(byte[], int, int)
    {
        byte[] $r1, r2, $r3, $r4, $r5, $r6;
        org.apache.poi.hslf.record.NotesAtom r0;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i11 := @parameter2: int;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordAtom: void <init>()>();

        if i11 >= 8 goto label1;

        i11 = 8;

     label1:
        $r1 = newarray (byte)[8];

        r0.<org.apache.poi.hslf.record.NotesAtom: byte[] _header> = $r1;

        $r3 = r0.<org.apache.poi.hslf.record.NotesAtom: byte[] _header>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, i0, $r3, 0, 8);

        $i1 = i0 + 8;

        $i2 = staticinvoke <org.apache.poi.util.LittleEndian: int getInt(byte[],int)>(r2, $i1);

        r0.<org.apache.poi.hslf.record.NotesAtom: int slideID> = $i2;

        $i3 = i0 + 12;

        $i4 = staticinvoke <org.apache.poi.util.LittleEndian: int getUShort(byte[],int)>(r2, $i3);

        $i5 = $i4 & 4;

        if $i5 != 4 goto label2;

        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterBackground> = 1;

        goto label3;

     label2:
        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterBackground> = 0;

     label3:
        $i6 = $i4 & 2;

        if $i6 != 2 goto label4;

        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterScheme> = 1;

        goto label5;

     label4:
        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterScheme> = 0;

     label5:
        $i7 = $i4 & 1;

        if $i7 != 1 goto label6;

        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterObjects> = 1;

        goto label7;

     label6:
        r0.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterObjects> = 0;

     label7:
        $i8 = i11 - 14;

        $r4 = newarray (byte)[$i8];

        r0.<org.apache.poi.hslf.record.NotesAtom: byte[] reserved> = $r4;

        $i10 = i0 + 14;

        $r6 = r0.<org.apache.poi.hslf.record.NotesAtom: byte[] reserved>;

        $r5 = r0.<org.apache.poi.hslf.record.NotesAtom: byte[] reserved>;

        $i9 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r2, $i10, $r6, 0, $i9);

        return;
    }

    public long getRecordType()
    {
        long $l0;
        org.apache.poi.hslf.record.NotesAtom r0;

        r0 := @this: org.apache.poi.hslf.record.NotesAtom;

        $l0 = <org.apache.poi.hslf.record.NotesAtom: long _type>;

        return $l0;
    }

    public void writeOut(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2, $r3;
        org.apache.poi.hslf.record.NotesAtom r1;
        short s3;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2;

        r1 := @this: org.apache.poi.hslf.record.NotesAtom;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.apache.poi.hslf.record.NotesAtom: byte[] _header>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r2);

        $i0 = r1.<org.apache.poi.hslf.record.NotesAtom: int slideID>;

        staticinvoke <org.apache.poi.hslf.record.NotesAtom: void writeLittleEndian(int,java.io.OutputStream)>($i0, r0);

        s3 = 0;

        $z0 = r1.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterObjects>;

        if $z0 == 0 goto label1;

        s3 = (short) 1;

     label1:
        $z1 = r1.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterScheme>;

        if $z1 == 0 goto label2;

        $i2 = s3 + 2;

        s3 = (short) $i2;

     label2:
        $z2 = r1.<org.apache.poi.hslf.record.NotesAtom: boolean followMasterBackground>;

        if $z2 == 0 goto label3;

        $i1 = s3 + 4;

        s3 = (short) $i1;

     label3:
        staticinvoke <org.apache.poi.hslf.record.NotesAtom: void writeLittleEndian(short,java.io.OutputStream)>(s3, r0);

        $r3 = r1.<org.apache.poi.hslf.record.NotesAtom: byte[] reserved>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r3);

        return;
    }

    static void <clinit>()
    {
        <org.apache.poi.hslf.record.NotesAtom: long _type> = 1009L;

        return;
    }
}
