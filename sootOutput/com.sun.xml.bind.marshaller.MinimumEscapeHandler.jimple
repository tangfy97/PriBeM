public class com.sun.xml.bind.marshaller.MinimumEscapeHandler extends java.lang.Object implements com.sun.xml.bind.marshaller.CharacterEscapeHandler
{
    public static final com.sun.xml.bind.marshaller.CharacterEscapeHandler theInstance;

    private void <init>()
    {
        com.sun.xml.bind.marshaller.MinimumEscapeHandler r0;

        r0 := @this: com.sun.xml.bind.marshaller.MinimumEscapeHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void escape(char[], int, int, boolean, java.io.Writer) throws java.io.IOException
    {
        int i0, i1, $i2, $i5, i6, i7, $i8, $i9, $i10, $i11, $i12, $i13;
        boolean z0;
        char c3, $c4;
        java.io.Writer r0;
        char[] r1;
        com.sun.xml.bind.marshaller.MinimumEscapeHandler r2;

        r2 := @this: com.sun.xml.bind.marshaller.MinimumEscapeHandler;

        r1 := @parameter0: char[];

        i6 := @parameter1: int;

        i0 := @parameter2: int;

        z0 := @parameter3: boolean;

        r0 := @parameter4: java.io.Writer;

        i1 = i6 + i0;

        i7 = i6;

     label01:
        if i7 >= i1 goto label09;

        c3 = r1[i7];

        $i8 = (int) c3;

        if $i8 == 38 goto label02;

        $i9 = (int) c3;

        if $i9 == 60 goto label02;

        $i10 = (int) c3;

        if $i10 == 62 goto label02;

        $i11 = (int) c3;

        if $i11 == 13 goto label02;

        $i12 = (int) c3;

        if $i12 != 34 goto label08;

        if z0 == 0 goto label08;

     label02:
        if i7 == i6 goto label03;

        $i5 = i7 - i6;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i6, $i5);

     label03:
        i6 = i7 + 1;

        $c4 = r1[i7];

        $i13 = (int) $c4;

        lookupswitch($i13)
        {
            case 34: goto label07;
            case 38: goto label04;
            case 60: goto label05;
            case 62: goto label06;
            default: goto label08;
        };

     label04:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&amp;");

        goto label08;

     label05:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&lt;");

        goto label08;

     label06:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&gt;");

        goto label08;

     label07:
        virtualinvoke r0.<java.io.Writer: void write(java.lang.String)>("&quot;");

     label08:
        i7 = i7 + 1;

        goto label01;

     label09:
        if i6 == i1 goto label10;

        $i2 = i1 - i6;

        virtualinvoke r0.<java.io.Writer: void write(char[],int,int)>(r1, i6, $i2);

     label10:
        return;
    }

    static void <clinit>()
    {
        com.sun.xml.bind.marshaller.MinimumEscapeHandler $r0;

        $r0 = new com.sun.xml.bind.marshaller.MinimumEscapeHandler;

        specialinvoke $r0.<com.sun.xml.bind.marshaller.MinimumEscapeHandler: void <init>()>();

        <com.sun.xml.bind.marshaller.MinimumEscapeHandler: com.sun.xml.bind.marshaller.CharacterEscapeHandler theInstance> = $r0;

        return;
    }
}
