public class org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit extends org.apache.batik.css.parser.CSSLexicalUnit
{
    protected float value;
    protected java.lang.String dimension;

    public void <init>(float, java.lang.String, org.w3c.css.sac.LexicalUnit)
    {
        org.w3c.css.sac.LexicalUnit r1;
        float f0;
        org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit r0;
        java.lang.String r2;

        r0 := @this: org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit;

        f0 := @parameter0: float;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: org.w3c.css.sac.LexicalUnit;

        specialinvoke r0.<org.apache.batik.css.parser.CSSLexicalUnit: void <init>(short,org.w3c.css.sac.LexicalUnit)>(42, r1);

        r0.<org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit: float value> = f0;

        r0.<org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit: java.lang.String dimension> = r2;

        return;
    }

    public float getFloatValue()
    {
        float $f0;
        org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit r0;

        r0 := @this: org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit;

        $f0 = r0.<org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit: float value>;

        return $f0;
    }

    public java.lang.String getDimensionUnitText()
    {
        org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit r0;
        java.lang.String $r1;

        r0 := @this: org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit;

        $r1 = r0.<org.apache.batik.css.parser.CSSLexicalUnit$DimensionLexicalUnit: java.lang.String dimension>;

        return $r1;
    }
}
