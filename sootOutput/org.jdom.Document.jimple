public class org.jdom.Document extends java.lang.Object implements org.jdom.Parent
{
    private static final java.lang.String CVS_ID;
    org.jdom.ContentList content;
    protected java.lang.String baseURI;
    private java.util.HashMap propertyMap;

    public void <init>()
    {
        org.jdom.ContentList $r1;
        org.jdom.Document r0;

        r0 := @this: org.jdom.Document;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdom.ContentList;

        specialinvoke $r1.<org.jdom.ContentList: void <init>(org.jdom.Parent)>(r0);

        r0.<org.jdom.Document: org.jdom.ContentList content> = $r1;

        r0.<org.jdom.Document: java.lang.String baseURI> = null;

        r0.<org.jdom.Document: java.util.HashMap propertyMap> = null;

        return;
    }

    public void <init>(java.util.List)
    {
        org.jdom.ContentList $r1;
        org.jdom.Document r0;
        java.util.List r2;

        r0 := @this: org.jdom.Document;

        r2 := @parameter0: java.util.List;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdom.ContentList;

        specialinvoke $r1.<org.jdom.ContentList: void <init>(org.jdom.Parent)>(r0);

        r0.<org.jdom.Document: org.jdom.ContentList content> = $r1;

        r0.<org.jdom.Document: java.lang.String baseURI> = null;

        r0.<org.jdom.Document: java.util.HashMap propertyMap> = null;

        virtualinvoke r0.<org.jdom.Document: org.jdom.Document setContent(java.util.Collection)>(r2);

        return;
    }

    public void <init>(org.jdom.Element)
    {
        org.jdom.Document r0;
        org.jdom.Element r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: org.jdom.Element;

        specialinvoke r0.<org.jdom.Document: void <init>(org.jdom.Element,org.jdom.DocType,java.lang.String)>(r1, null, null);

        return;
    }

    public void <init>(org.jdom.Element, org.jdom.DocType)
    {
        org.jdom.DocType r2;
        org.jdom.Document r0;
        org.jdom.Element r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: org.jdom.Element;

        r2 := @parameter1: org.jdom.DocType;

        specialinvoke r0.<org.jdom.Document: void <init>(org.jdom.Element,org.jdom.DocType,java.lang.String)>(r1, r2, null);

        return;
    }

    public void <init>(org.jdom.Element, org.jdom.DocType, java.lang.String)
    {
        org.jdom.Document r0;
        org.jdom.DocType r3;
        org.jdom.ContentList $r1;
        java.lang.String r4;
        org.jdom.Element r2;

        r0 := @this: org.jdom.Document;

        r2 := @parameter0: org.jdom.Element;

        r3 := @parameter1: org.jdom.DocType;

        r4 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.jdom.ContentList;

        specialinvoke $r1.<org.jdom.ContentList: void <init>(org.jdom.Parent)>(r0);

        r0.<org.jdom.Document: org.jdom.ContentList content> = $r1;

        r0.<org.jdom.Document: java.lang.String baseURI> = null;

        r0.<org.jdom.Document: java.util.HashMap propertyMap> = null;

        if r2 == null goto label1;

        virtualinvoke r0.<org.jdom.Document: org.jdom.Document setRootElement(org.jdom.Element)>(r2);

     label1:
        if r3 == null goto label2;

        virtualinvoke r0.<org.jdom.Document: org.jdom.Document setDocType(org.jdom.DocType)>(r3);

     label2:
        if r4 == null goto label3;

        virtualinvoke r0.<org.jdom.Document: void setBaseURI(java.lang.String)>(r4);

     label3:
        return;
    }

    public org.jdom.Document addContent(int, java.util.Collection)
    {
        org.jdom.Document r0;
        java.util.Collection r1;
        int i0;
        org.jdom.ContentList $r2;

        r0 := @this: org.jdom.Document;

        i0 := @parameter0: int;

        r1 := @parameter1: java.util.Collection;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r2.<org.jdom.ContentList: boolean addAll(int,java.util.Collection)>(i0, r1);

        return r0;
    }

    public org.jdom.Document addContent(int, org.jdom.Content)
    {
        org.jdom.Document r0;
        int i0;
        org.jdom.ContentList $r2;
        org.jdom.Content r1;

        r0 := @this: org.jdom.Document;

        i0 := @parameter0: int;

        r1 := @parameter1: org.jdom.Content;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r2.<org.jdom.ContentList: void add(int,org.jdom.Content)>(i0, r1);

        return r0;
    }

    public org.jdom.Document addContent(java.util.Collection)
    {
        org.jdom.ContentList $r2;
        org.jdom.Document r0;
        java.util.Collection r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r2.<org.jdom.ContentList: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.jdom.Document addContent(org.jdom.Content)
    {
        org.jdom.ContentList $r2;
        org.jdom.Document r0;
        org.jdom.Content r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: org.jdom.Content;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r2.<java.util.AbstractList: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public java.lang.Object clone()
    {
        org.jdom.Comment $r11, r20;
        java.lang.CloneNotSupportedException $r17;
        org.jdom.Document r0, r18;
        org.jdom.DocType $r5, r22;
        int i0, $i1;
        boolean $z0, $z1, $z2, $z3;
        org.jdom.ProcessingInstruction $r8, r21;
        org.jdom.ContentList $r2, $r3, $r7, $r10, $r13, $r16, $r23;
        java.lang.Object $r1, $r4, $r6, $r9, $r12, $r15;
        org.jdom.Element $r14, r19;

        r0 := @this: org.jdom.Document;

        r18 = null;

     label01:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        r18 = (org.jdom.Document) $r1;

     label02:
        goto label04;

     label03:
        $r17 := @caughtexception;

     label04:
        $r2 = new org.jdom.ContentList;

        specialinvoke $r2.<org.jdom.ContentList: void <init>(org.jdom.Parent)>(r18);

        r18.<org.jdom.Document: org.jdom.ContentList content> = $r2;

        i0 = 0;

        goto label10;

     label05:
        $r3 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $r4 = virtualinvoke $r3.<org.jdom.ContentList: java.lang.Object get(int)>(i0);

        $z0 = $r4 instanceof org.jdom.Element;

        if $z0 == 0 goto label06;

        $r14 = (org.jdom.Element) $r4;

        $r15 = virtualinvoke $r14.<org.jdom.Element: java.lang.Object clone()>();

        r19 = (org.jdom.Element) $r15;

        $r16 = r18.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r16.<java.util.AbstractList: boolean add(java.lang.Object)>(r19);

        goto label09;

     label06:
        $z1 = $r4 instanceof org.jdom.Comment;

        if $z1 == 0 goto label07;

        $r11 = (org.jdom.Comment) $r4;

        $r12 = virtualinvoke $r11.<org.jdom.Content: java.lang.Object clone()>();

        r20 = (org.jdom.Comment) $r12;

        $r13 = r18.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r13.<java.util.AbstractList: boolean add(java.lang.Object)>(r20);

        goto label09;

     label07:
        $z2 = $r4 instanceof org.jdom.ProcessingInstruction;

        if $z2 == 0 goto label08;

        $r8 = (org.jdom.ProcessingInstruction) $r4;

        $r9 = virtualinvoke $r8.<org.jdom.ProcessingInstruction: java.lang.Object clone()>();

        r21 = (org.jdom.ProcessingInstruction) $r9;

        $r10 = r18.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r10.<java.util.AbstractList: boolean add(java.lang.Object)>(r21);

        goto label09;

     label08:
        $z3 = $r4 instanceof org.jdom.DocType;

        if $z3 == 0 goto label09;

        $r5 = (org.jdom.DocType) $r4;

        $r6 = virtualinvoke $r5.<org.jdom.Content: java.lang.Object clone()>();

        r22 = (org.jdom.DocType) $r6;

        $r7 = r18.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r7.<java.util.AbstractList: boolean add(java.lang.Object)>(r22);

     label09:
        i0 = i0 + 1;

     label10:
        $r23 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i1 = virtualinvoke $r23.<org.jdom.ContentList: int size()>();

        if i0 < $i1 goto label05;

        return r18;

        catch java.lang.CloneNotSupportedException from label01 to label02 with label03;
    }

    public java.util.List cloneContent()
    {
        org.jdom.Document r0;
        int $i0, i1;
        java.lang.Object $r3;
        org.jdom.Content $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.jdom.Document;

        $i0 = virtualinvoke r0.<org.jdom.Document: int getContentSize()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>(int)>($i0);

        i1 = 0;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<org.jdom.Document: org.jdom.Content getContent(int)>(i1);

        $r3 = virtualinvoke $r2.<org.jdom.Content: java.lang.Object clone()>();

        interfaceinvoke $r1.<java.util.List: boolean add(java.lang.Object)>($r3);

        i1 = i1 + 1;

     label2:
        if i1 < $i0 goto label1;

        return $r1;
    }

    public org.jdom.Element detachRootElement()
    {
        org.jdom.Document r0;
        int $i0;
        org.jdom.ContentList $r1;
        org.jdom.Content $r2;
        org.jdom.Element $r3;

        r0 := @this: org.jdom.Document;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int indexOfFirstElement()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<org.jdom.Document: org.jdom.Content removeContent(int)>($i0);

        $r3 = (org.jdom.Element) $r2;

        return $r3;
    }

    public final boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.jdom.Document r1;
        boolean $z0;

        r1 := @this: org.jdom.Document;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        return $z0;
    }

    public final java.lang.String getBaseURI()
    {
        org.jdom.Document r0;
        java.lang.String $r1;

        r0 := @this: org.jdom.Document;

        $r1 = r0.<org.jdom.Document: java.lang.String baseURI>;

        return $r1;
    }

    public java.util.List getContent()
    {
        java.lang.IllegalStateException $r2;
        org.jdom.Document r0;
        org.jdom.ContentList $r1;
        boolean $z0;

        r0 := @this: org.jdom.Document;

        $z0 = virtualinvoke r0.<org.jdom.Document: boolean hasRootElement()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Root element not set");

        throw $r2;

     label1:
        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        return $r1;
    }

    public org.jdom.Content getContent(int)
    {
        org.jdom.Document r0;
        int i0;
        org.jdom.ContentList $r1;
        java.lang.Object $r2;
        org.jdom.Content $r3;

        r0 := @this: org.jdom.Document;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $r2 = virtualinvoke $r1.<org.jdom.ContentList: java.lang.Object get(int)>(i0);

        $r3 = (org.jdom.Content) $r2;

        return $r3;
    }

    public java.util.List getContent(org.jdom.filter.Filter)
    {
        org.jdom.filter.Filter r1;
        java.lang.IllegalStateException $r4;
        org.jdom.Document r0;
        java.util.List $r3;
        org.jdom.ContentList $r2;
        boolean $z0;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: org.jdom.filter.Filter;

        $z0 = virtualinvoke r0.<org.jdom.Document: boolean hasRootElement()>();

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Root element not set");

        throw $r4;

     label1:
        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.util.List getView(org.jdom.filter.Filter)>(r1);

        return $r3;
    }

    public int getContentSize()
    {
        int $i0;
        org.jdom.ContentList $r1;
        org.jdom.Document r0;

        r0 := @this: org.jdom.Document;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int size()>();

        return $i0;
    }

    public java.util.Iterator getDescendants()
    {
        org.jdom.Document r1;
        org.jdom.DescendantIterator $r0;

        r1 := @this: org.jdom.Document;

        $r0 = new org.jdom.DescendantIterator;

        specialinvoke $r0.<org.jdom.DescendantIterator: void <init>(org.jdom.Parent)>(r1);

        return $r0;
    }

    public java.util.Iterator getDescendants(org.jdom.filter.Filter)
    {
        org.jdom.filter.Filter r3;
        org.jdom.Document r2;
        org.jdom.FilterIterator $r0;
        org.jdom.DescendantIterator $r1;

        r2 := @this: org.jdom.Document;

        r3 := @parameter0: org.jdom.filter.Filter;

        $r0 = new org.jdom.FilterIterator;

        $r1 = new org.jdom.DescendantIterator;

        specialinvoke $r1.<org.jdom.DescendantIterator: void <init>(org.jdom.Parent)>(r2);

        specialinvoke $r0.<org.jdom.FilterIterator: void <init>(java.util.Iterator,org.jdom.filter.Filter)>($r1, r3);

        return $r0;
    }

    public org.jdom.DocType getDocType()
    {
        org.jdom.Document r0;
        int $i0;
        org.jdom.DocType $r4;
        org.jdom.ContentList $r1, $r2;
        java.lang.Object $r3;

        r0 := @this: org.jdom.Document;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int indexOfDocType()>();

        if $i0 >= 0 goto label1;

        return null;

     label1:
        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object get(int)>($i0);

        $r4 = (org.jdom.DocType) $r3;

        return $r4;
    }

    public org.jdom.Document getDocument()
    {
        org.jdom.Document r0;

        r0 := @this: org.jdom.Document;

        return r0;
    }

    public org.jdom.Parent getParent()
    {
        org.jdom.Document r0;

        r0 := @this: org.jdom.Document;

        return null;
    }

    public java.lang.Object getProperty(java.lang.String)
    {
        org.jdom.Document r0;
        java.util.HashMap $r1, $r3;
        java.lang.Object $r4;
        java.lang.String r2;

        r0 := @this: org.jdom.Document;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.jdom.Document: java.util.HashMap propertyMap>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.jdom.Document: java.util.HashMap propertyMap>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r2);

        return $r4;
    }

    public org.jdom.Element getRootElement()
    {
        java.lang.IllegalStateException $r5;
        org.jdom.Document r0;
        int $i0;
        org.jdom.ContentList $r1, $r2;
        java.lang.Object $r3;
        org.jdom.Element $r4;

        r0 := @this: org.jdom.Document;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int indexOfFirstElement()>();

        if $i0 >= 0 goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Root element not set");

        throw $r5;

     label1:
        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $r3 = virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object get(int)>($i0);

        $r4 = (org.jdom.Element) $r3;

        return $r4;
    }

    public boolean hasRootElement()
    {
        org.jdom.Document r0;
        int $i0;
        org.jdom.ContentList $r1;
        boolean $z0;

        r0 := @this: org.jdom.Document;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int indexOfFirstElement()>();

        if $i0 >= 0 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        return $z0;
    }

    public final int hashCode()
    {
        int $i0;
        org.jdom.Document r0;

        r0 := @this: org.jdom.Document;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public int indexOf(org.jdom.Content)
    {
        org.jdom.Document r0;
        int $i0;
        org.jdom.ContentList $r2;
        org.jdom.Content r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: org.jdom.Content;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r2.<java.util.AbstractList: int indexOf(java.lang.Object)>(r1);

        return $i0;
    }

    public java.util.List removeContent()
    {
        org.jdom.Document r1;
        org.jdom.ContentList $r2, $r3;
        java.util.ArrayList $r0;

        r1 := @this: org.jdom.Document;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.jdom.Document: org.jdom.ContentList content>;

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r2);

        $r3 = r1.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r3.<org.jdom.ContentList: void clear()>();

        return $r0;
    }

    public org.jdom.Content removeContent(int)
    {
        org.jdom.Document r0;
        int i0;
        org.jdom.ContentList $r1;
        java.lang.Object $r2;
        org.jdom.Content $r3;

        r0 := @this: org.jdom.Document;

        i0 := @parameter0: int;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $r2 = virtualinvoke $r1.<org.jdom.ContentList: java.lang.Object remove(int)>(i0);

        $r3 = (org.jdom.Content) $r2;

        return $r3;
    }

    public boolean removeContent(org.jdom.Content)
    {
        org.jdom.Document r0;
        org.jdom.ContentList $r2;
        org.jdom.Content r1;
        boolean $z0;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: org.jdom.Content;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $z0 = virtualinvoke $r2.<java.util.AbstractCollection: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.List removeContent(org.jdom.filter.Filter)
    {
        org.jdom.filter.Filter r2;
        java.util.Iterator $r5;
        org.jdom.Content r7;
        java.util.ArrayList $r0;
        org.jdom.Document r1;
        java.util.List $r4;
        org.jdom.ContentList $r3;
        java.lang.Object $r6;
        boolean $z0;

        r1 := @this: org.jdom.Document;

        r2 := @parameter0: org.jdom.filter.Filter;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r3 = r1.<org.jdom.Document: org.jdom.ContentList content>;

        $r4 = virtualinvoke $r3.<org.jdom.ContentList: java.util.List getView(org.jdom.filter.Filter)>(r2);

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.jdom.Content) $r6;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r7);

        interfaceinvoke $r5.<java.util.Iterator: void remove()>();

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return $r0;
    }

    public final void setBaseURI(java.lang.String)
    {
        org.jdom.Document r0;
        java.lang.String r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: java.lang.String;

        r0.<org.jdom.Document: java.lang.String baseURI> = r1;

        return;
    }

    public org.jdom.Document setContent(int, java.util.Collection)
    {
        org.jdom.Document r0;
        java.util.Collection r2;
        int i0;
        org.jdom.ContentList $r1, $r3;

        r0 := @this: org.jdom.Document;

        i0 := @parameter0: int;

        r2 := @parameter1: java.util.Collection;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r1.<org.jdom.ContentList: java.lang.Object remove(int)>(i0);

        $r3 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r3.<org.jdom.ContentList: boolean addAll(int,java.util.Collection)>(i0, r2);

        return r0;
    }

    public org.jdom.Document setContent(int, org.jdom.Content)
    {
        org.jdom.Document r0;
        int i0;
        org.jdom.ContentList $r2;
        org.jdom.Content r1;

        r0 := @this: org.jdom.Document;

        i0 := @parameter0: int;

        r1 := @parameter1: org.jdom.Content;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r2.<org.jdom.ContentList: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.jdom.Document setContent(java.util.Collection)
    {
        org.jdom.ContentList $r2;
        org.jdom.Document r0;
        java.util.Collection r1;

        r0 := @this: org.jdom.Document;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r2.<org.jdom.ContentList: void clearAndSet(java.util.Collection)>(r1);

        return r0;
    }

    public org.jdom.Document setContent(org.jdom.Content)
    {
        org.jdom.Document r0;
        org.jdom.ContentList $r1, $r3;
        org.jdom.Content r2;

        r0 := @this: org.jdom.Document;

        r2 := @parameter0: org.jdom.Content;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r1.<org.jdom.ContentList: void clear()>();

        $r3 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r3.<java.util.AbstractList: boolean add(java.lang.Object)>(r2);

        return r0;
    }

    public org.jdom.Document setDocType(org.jdom.DocType)
    {
        org.jdom.Parent $r1;
        org.jdom.Document r2;
        org.jdom.DocType r0;
        int $i0, $i1;
        org.jdom.ContentList $r3, $r4, $r5, $r7, $r8;
        org.jdom.IllegalAddException $r6;

        r2 := @this: org.jdom.Document;

        r0 := @parameter0: org.jdom.DocType;

        if r0 != null goto label2;

        $r7 = r2.<org.jdom.Document: org.jdom.ContentList content>;

        $i1 = virtualinvoke $r7.<org.jdom.ContentList: int indexOfDocType()>();

        if $i1 < 0 goto label1;

        $r8 = r2.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r8.<org.jdom.ContentList: java.lang.Object remove(int)>($i1);

     label1:
        return r2;

     label2:
        $r1 = virtualinvoke r0.<org.jdom.Content: org.jdom.Parent getParent()>();

        if $r1 == null goto label3;

        $r6 = new org.jdom.IllegalAddException;

        specialinvoke $r6.<org.jdom.IllegalAddException: void <init>(org.jdom.DocType,java.lang.String)>(r0, "The DocType already is attached to a document");

        throw $r6;

     label3:
        $r3 = r2.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r3.<org.jdom.ContentList: int indexOfDocType()>();

        if $i0 >= 0 goto label4;

        $r5 = r2.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r5.<org.jdom.ContentList: void add(int,org.jdom.Content)>(0, r0);

        goto label5;

     label4:
        $r4 = r2.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r4.<org.jdom.ContentList: java.lang.Object set(int,java.lang.Object)>($i0, r0);

     label5:
        return r2;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        org.jdom.Document r0;
        java.util.HashMap $r1, $r4, $r5;
        java.lang.Object r3;
        java.lang.String r2;

        r0 := @this: org.jdom.Document;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.Object;

        $r1 = r0.<org.jdom.Document: java.util.HashMap propertyMap>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.jdom.Document: java.util.HashMap propertyMap> = $r5;

     label1:
        $r4 = r0.<org.jdom.Document: java.util.HashMap propertyMap>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    public org.jdom.Document setRootElement(org.jdom.Element)
    {
        org.jdom.Document r0;
        int $i0;
        org.jdom.ContentList $r1, $r3, $r4;
        org.jdom.Element r2;

        r0 := @this: org.jdom.Document;

        r2 := @parameter0: org.jdom.Element;

        $r1 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        $i0 = virtualinvoke $r1.<org.jdom.ContentList: int indexOfFirstElement()>();

        if $i0 >= 0 goto label1;

        $r4 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r4.<java.util.AbstractList: boolean add(java.lang.Object)>(r2);

        goto label2;

     label1:
        $r3 = r0.<org.jdom.Document: org.jdom.ContentList content>;

        virtualinvoke $r3.<org.jdom.ContentList: java.lang.Object set(int,java.lang.Object)>($i0, r2);

     label2:
        return r0;
    }

    public java.lang.String toString()
    {
        org.jdom.Document r2;
        java.lang.StringBuffer $r0, $r1, $r6, $r9;
        org.jdom.DocType $r3;
        java.lang.String $r5, $r7, $r8;
        org.jdom.Element $r4;

        r2 := @this: org.jdom.Document;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[Document: ");

        $r3 = virtualinvoke r2.<org.jdom.Document: org.jdom.DocType getDocType()>();

        if $r3 == null goto label1;

        $r8 = virtualinvoke $r3.<org.jdom.DocType: java.lang.String toString()>();

        $r9 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label2;

     label1:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" No DOCTYPE declaration, ");

     label2:
        $r4 = virtualinvoke r2.<org.jdom.Document: org.jdom.Element getRootElement()>();

        if $r4 == null goto label3;

        $r6 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Root is ");

        $r7 = virtualinvoke $r4.<org.jdom.Element: java.lang.String toString()>();

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        goto label4;

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" No root element");

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    public static void <clinit>()
    {
        <org.jdom.Document: java.lang.String CVS_ID> = "@(#) $RCSfile: Document.java,v $ $Revision: 1.84 $ $Date: 2004/08/31 21:47:51 $ $Name: jdom_1_0 $";

        return;
    }
}
