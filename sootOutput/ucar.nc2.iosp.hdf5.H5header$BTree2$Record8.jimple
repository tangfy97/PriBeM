class ucar.nc2.iosp.hdf5.H5header$BTree2$Record8 extends java.lang.Object
{
    byte flags;
    int creationOrder;
    int nameHash;
    byte[] heapId;
    final ucar.nc2.iosp.hdf5.H5header$BTree2 this$1;

    void <init>(ucar.nc2.iosp.hdf5.H5header$BTree2) throws java.io.IOException
    {
        byte[] $r2, $r5, $r18;
        ucar.unidata.io.RandomAccessFile $r4, $r7, $r9, $r11;
        ucar.nc2.iosp.hdf5.H5header$BTree2$Record8 r0;
        byte $b0;
        int $i1, $i2, $i3;
        java.lang.String $r19, $r21;
        boolean $z0;
        java.io.PrintStream $r13;
        ucar.nc2.iosp.hdf5.H5header$BTree2 r1;
        ucar.nc2.iosp.hdf5.H5header $r3, $r6, $r8, $r10, $r12;
        java.lang.StringBuilder $r14, $r15, $r16, $r17, $r20;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$BTree2$Record8;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header$BTree2;

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: ucar.nc2.iosp.hdf5.H5header$BTree2 this$1> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = newarray (byte)[8];

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: byte[] heapId> = $r2;

        $r3 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r4 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r3);

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: byte[] heapId>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: int read(byte[])>($r5);

        $r6 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r7 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r6);

        $b0 = virtualinvoke $r7.<ucar.unidata.io.RandomAccessFile: byte readByte()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: byte flags> = $b0;

        $r8 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r9 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r8);

        $i1 = virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: int creationOrder> = $i1;

        $r10 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r11 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.unidata.io.RandomAccessFile access$1400(ucar.nc2.iosp.hdf5.H5header)>($r10);

        $i2 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: int nameHash> = $i2;

        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$2200()>();

        if $z0 == 0 goto label1;

        $r12 = r1.<ucar.nc2.iosp.hdf5.H5header$BTree2: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r13 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r12);

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  record8 creationOrder=");

        $i3 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: int creationOrder>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" heapId=");

        $r18 = r0.<ucar.nc2.iosp.hdf5.H5header$BTree2$Record8: byte[] heapId>;

        $r19 = staticinvoke <ucar.nc2.util.Misc: java.lang.String showBytes(byte[])>($r18);

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r21);

     label1:
        return;
    }
}
