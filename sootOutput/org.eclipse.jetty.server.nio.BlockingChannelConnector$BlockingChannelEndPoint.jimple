class org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint extends org.eclipse.jetty.io.nio.ChannelEndPoint implements java.lang.Runnable, org.eclipse.jetty.io.ConnectedEndPoint
{
    private org.eclipse.jetty.io.Connection _connection;
    private int _timeout;
    private volatile long _idleTimestamp;
    final org.eclipse.jetty.server.nio.BlockingChannelConnector this$0;

    void <init>(org.eclipse.jetty.server.nio.BlockingChannelConnector, java.nio.channels.ByteChannel) throws java.io.IOException
    {
        org.eclipse.jetty.server.nio.BlockingChannelConnector r1;
        org.eclipse.jetty.server.BlockingHttpConnection $r3;
        int $i0;
        java.nio.channels.ByteChannel r2;
        org.eclipse.jetty.server.Server $r4;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.server.nio.BlockingChannelConnector;

        r2 := @parameter1: java.nio.channels.ByteChannel;

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0> = r1;

        $i0 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: int access$200(org.eclipse.jetty.server.nio.BlockingChannelConnector)>(r1);

        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void <init>(java.nio.channels.ByteChannel,int)>(r2, $i0);

        $r3 = new org.eclipse.jetty.server.BlockingHttpConnection;

        $r4 = virtualinvoke r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.server.Server getServer()>();

        specialinvoke $r3.<org.eclipse.jetty.server.BlockingHttpConnection: void <init>(org.eclipse.jetty.server.Connector,org.eclipse.jetty.io.EndPoint,org.eclipse.jetty.server.Server)>(r1, r0, $r4);

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection> = $r3;

        return;
    }

    public org.eclipse.jetty.io.Connection getConnection()
    {
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.io.Connection $r1;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        return $r1;
    }

    public void setConnection(org.eclipse.jetty.io.Connection)
    {
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.io.Connection r1;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Connection;

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection> = r1;

        return;
    }

    public void checkIdleTimestamp(long)
    {
        long $l0, l3, $l5, $l6, $l7;
        byte $b1, $b8;
        int $i2, $i4, $i9;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        l3 := @parameter0: long;

        $l0 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: long _idleTimestamp>;

        $b1 = $l0 cmp 0L;

        if $b1 == 0 goto label1;

        $i2 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout>;

        if $i2 <= 0 goto label1;

        $l6 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: long _idleTimestamp>;

        $i4 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout>;

        $l5 = (long) $i4;

        $l7 = $l6 + $l5;

        $b8 = l3 cmp $l7;

        $i9 = (int) $b8;

        if $i9 <= 0 goto label1;

        virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: void idleExpired()>();

     label1:
        return;
    }

    protected void idleExpired()
    {
        java.io.IOException $r1;
        org.eclipse.jetty.util.log.Logger $r2;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

     label1:
        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r1);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    void dispatch() throws java.io.IOException
    {
        java.lang.Object[] $r4;
        org.eclipse.jetty.server.nio.BlockingChannelConnector $r1;
        org.eclipse.jetty.io.Connection $r5;
        org.eclipse.jetty.util.log.Logger $r3;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.util.thread.ThreadPool $r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r2 = virtualinvoke $r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        $z0 = interfaceinvoke $r2.<org.eclipse.jetty.util.thread.ThreadPool: boolean dispatch(java.lang.Runnable)>(r0);

        if $z0 != 0 goto label1;

        $r3 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        $r4 = newarray (java.lang.Object)[1];

        $r5 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        $r4[0] = $r5;

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Object[])>("dispatch failed for  {}", $r4);

        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label1:
        return;
    }

    public int fill(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        int $i1;
        long $l0;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: long _idleTimestamp> = $l0;

        $i1 = specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int fill(org.eclipse.jetty.io.Buffer)>(r1);

        return $i1;
    }

    public int flush(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        int $i1;
        long $l0;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: long _idleTimestamp> = $l0;

        $i1 = specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r1);

        return $i1;
    }

    public int flush(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        int $i1;
        long $l0;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.io.Buffer r1, r2, r3;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r2 := @parameter1: org.eclipse.jetty.io.Buffer;

        r3 := @parameter2: org.eclipse.jetty.io.Buffer;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: long _idleTimestamp> = $l0;

        $i1 = specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer,org.eclipse.jetty.io.Buffer)>(r1, r2, r3);

        return $i1;
    }

    public void run()
    {
        byte $b8, $b22, $b30, $b38, $b46;
        org.eclipse.jetty.util.thread.ThreadPool $r18;
        long $l1, $l5, $l6, $l7, $l9, $l15, $l19, $l20, $l21, $l23, $l27, $l28, $l29, $l31, $l35, $l36, $l37, $l39, $l43, $l44, $l45;
        java.io.IOException $r20, $r33, $r35, $r49, $r51, $r65, $r67, $r81;
        org.eclipse.jetty.io.Connection $r1, $r5, $r15, $r23, $r37, $r53, $r69, $r83, $r84;
        int $i0, $i2, $i3, $i4, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i24, $i25, $i26, $i32, $i33, $i34, $i40, $i41, $i42, $i47, $i48, $i49, $i50, $i51;
        org.eclipse.jetty.util.log.Logger $r21, $r34, $r36, $r48, $r50, $r52, $r64, $r66, $r68, $r80, $r82;
        org.eclipse.jetty.io.EofException $r79;
        org.eclipse.jetty.server.Server $r17;
        java.util.Set $r4, $r8, $r26, $r40, $r56, $r72;
        java.lang.Throwable $r22, $r47;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.net.Socket $r9, $r10, $r11, $r13, $r14, $r27, $r28, $r29, $r31, $r32, $r41, $r42, $r43, $r45, $r46, $r57, $r58, $r59, $r61, $r62, $r73, $r74, $r75, $r77, $r78;
        org.eclipse.jetty.server.nio.BlockingChannelConnector $r2, $r3, $r6, $r7, $r16, $r19, $r24, $r25, $r38, $r39, $r54, $r55, $r70, $r71;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r0;
        org.eclipse.jetty.http.HttpException $r63;
        java.io.InputStream $r12, $r30, $r44, $r60, $r76;

        r0 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

     label01:
        $i0 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout> = $i0;

        $r2 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r1 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: void access$300(org.eclipse.jetty.server.nio.BlockingChannelConnector,org.eclipse.jetty.io.Connection)>($r2, $r1);

        $r3 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r4 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r3);

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r0);

     label02:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: boolean isOpen()>();

        if $z0 == 0 goto label06;

        $l9 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: long _idleTimestamp> = $l9;

        $r15 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        $z3 = interfaceinvoke $r15.<org.eclipse.jetty.io.Connection: boolean isIdle()>();

        if $z3 == 0 goto label04;

        $r16 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r17 = virtualinvoke $r16.<org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.server.Server getServer()>();

        $r18 = virtualinvoke $r17.<org.eclipse.jetty.server.Server: org.eclipse.jetty.util.thread.ThreadPool getThreadPool()>();

        $z4 = interfaceinvoke $r18.<org.eclipse.jetty.util.thread.ThreadPool: boolean isLowOnThreads()>();

        if $z4 == 0 goto label05;

        $r19 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $i13 = virtualinvoke $r19.<org.eclipse.jetty.server.nio.BlockingChannelConnector: int getLowResourcesMaxIdleTime()>();

        if $i13 < 0 goto label03;

        $i14 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout>;

        if $i14 == $i13 goto label03;

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout> = $i13;

     label03:
        goto label05;

     label04:
        $i10 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout>;

        $i11 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        if $i10 == $i11 goto label05;

        $i12 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int _timeout> = $i12;

     label05:
        $r83 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        $r84 = interfaceinvoke $r83.<org.eclipse.jetty.io.Connection: org.eclipse.jetty.io.Connection handle()>();

        r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection> = $r84;

        goto label02;

     label06:
        $r6 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r5 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: void access$400(org.eclipse.jetty.server.nio.BlockingChannelConnector,org.eclipse.jetty.io.Connection)>($r6, $r5);

        $r7 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r8 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r7);

        interfaceinvoke $r8.<java.util.Set: boolean remove(java.lang.Object)>(r0);

     label07:
        $r9 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z1 = virtualinvoke $r9.<java.net.Socket: boolean isClosed()>();

        if $z1 != 0 goto label10;

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i2 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        $r10 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $i3 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        virtualinvoke $r10.<java.net.Socket: void setSoTimeout(int)>($i3);

     label08:
        $r11 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r12 = virtualinvoke $r11.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i4 = virtualinvoke $r12.<java.io.InputStream: int read()>();

        if $i4 < 0 goto label09;

        $l5 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l7 = $l5 - $l1;

        $l6 = (long) $i2;

        $b8 = $l7 cmp $l6;

        $i47 = (int) $b8;

        if $i47 < 0 goto label08;

     label09:
        $r13 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z2 = virtualinvoke $r13.<java.net.Socket: boolean isClosed()>();

        if $z2 != 0 goto label10;

        $r14 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r14.<java.net.Socket: void close()>();

     label10:
        goto label50;

     label11:
        $r81 := @caughtexception;

        $r82 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r82.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r81);

        goto label50;

     label12:
        $r79 := @caughtexception;

        $r80 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r80.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("EOF", $r79);

     label13:
        virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: void close()>();

     label14:
        goto label16;

     label15:
        $r67 := @caughtexception;

        $r68 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r68.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r67);

     label16:
        $r70 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r69 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: void access$400(org.eclipse.jetty.server.nio.BlockingChannelConnector,org.eclipse.jetty.io.Connection)>($r70, $r69);

        $r71 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r72 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r71);

        interfaceinvoke $r72.<java.util.Set: boolean remove(java.lang.Object)>(r0);

     label17:
        $r73 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z11 = virtualinvoke $r73.<java.net.Socket: boolean isClosed()>();

        if $z11 != 0 goto label20;

        $l39 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i40 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        $r74 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $i41 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        virtualinvoke $r74.<java.net.Socket: void setSoTimeout(int)>($i41);

     label18:
        $r75 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r76 = virtualinvoke $r75.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i42 = virtualinvoke $r76.<java.io.InputStream: int read()>();

        if $i42 < 0 goto label19;

        $l43 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l45 = $l43 - $l39;

        $l44 = (long) $i40;

        $b46 = $l45 cmp $l44;

        $i48 = (int) $b46;

        if $i48 < 0 goto label18;

     label19:
        $r77 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z12 = virtualinvoke $r77.<java.net.Socket: boolean isClosed()>();

        if $z12 != 0 goto label20;

        $r78 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r78.<java.net.Socket: void close()>();

     label20:
        goto label50;

     label21:
        $r65 := @caughtexception;

        $r66 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r66.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r65);

        goto label50;

     label22:
        $r63 := @caughtexception;

        $r64 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r64.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("BAD", $r63);

     label23:
        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label24:
        goto label26;

     label25:
        $r51 := @caughtexception;

        $r52 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r52.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r51);

     label26:
        $r54 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r53 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: void access$400(org.eclipse.jetty.server.nio.BlockingChannelConnector,org.eclipse.jetty.io.Connection)>($r54, $r53);

        $r55 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r56 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r55);

        interfaceinvoke $r56.<java.util.Set: boolean remove(java.lang.Object)>(r0);

     label27:
        $r57 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z9 = virtualinvoke $r57.<java.net.Socket: boolean isClosed()>();

        if $z9 != 0 goto label30;

        $l31 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i32 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        $r58 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $i33 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        virtualinvoke $r58.<java.net.Socket: void setSoTimeout(int)>($i33);

     label28:
        $r59 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r60 = virtualinvoke $r59.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i34 = virtualinvoke $r60.<java.io.InputStream: int read()>();

        if $i34 < 0 goto label29;

        $l35 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l37 = $l35 - $l31;

        $l36 = (long) $i32;

        $b38 = $l37 cmp $l36;

        $i49 = (int) $b38;

        if $i49 < 0 goto label28;

     label29:
        $r61 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z10 = virtualinvoke $r61.<java.net.Socket: boolean isClosed()>();

        if $z10 != 0 goto label30;

        $r62 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r62.<java.net.Socket: void close()>();

     label30:
        goto label50;

     label31:
        $r49 := @caughtexception;

        $r50 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r50.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r49);

        goto label50;

     label32:
        $r47 := @caughtexception;

        $r48 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r48.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.String,java.lang.Throwable)>("handle failed", $r47);

     label33:
        specialinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label34:
        goto label36;

     label35:
        $r35 := @caughtexception;

        $r36 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r36.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r35);

     label36:
        $r38 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r37 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: void access$400(org.eclipse.jetty.server.nio.BlockingChannelConnector,org.eclipse.jetty.io.Connection)>($r38, $r37);

        $r39 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r40 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r39);

        interfaceinvoke $r40.<java.util.Set: boolean remove(java.lang.Object)>(r0);

     label37:
        $r41 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z7 = virtualinvoke $r41.<java.net.Socket: boolean isClosed()>();

        if $z7 != 0 goto label40;

        $l23 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i24 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        $r42 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $i25 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        virtualinvoke $r42.<java.net.Socket: void setSoTimeout(int)>($i25);

     label38:
        $r43 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r44 = virtualinvoke $r43.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i26 = virtualinvoke $r44.<java.io.InputStream: int read()>();

        if $i26 < 0 goto label39;

        $l27 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l29 = $l27 - $l23;

        $l28 = (long) $i24;

        $b30 = $l29 cmp $l28;

        $i50 = (int) $b30;

        if $i50 < 0 goto label38;

     label39:
        $r45 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z8 = virtualinvoke $r45.<java.net.Socket: boolean isClosed()>();

        if $z8 != 0 goto label40;

        $r46 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r46.<java.net.Socket: void close()>();

     label40:
        goto label50;

     label41:
        $r33 := @caughtexception;

        $r34 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r34.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r33);

        goto label50;

     label42:
        $r22 := @caughtexception;

     label43:
        $r24 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r23 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: void access$400(org.eclipse.jetty.server.nio.BlockingChannelConnector,org.eclipse.jetty.io.Connection)>($r24, $r23);

        $r25 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.server.nio.BlockingChannelConnector this$0>;

        $r26 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: java.util.Set access$000(org.eclipse.jetty.server.nio.BlockingChannelConnector)>($r25);

        interfaceinvoke $r26.<java.util.Set: boolean remove(java.lang.Object)>(r0);

     label44:
        $r27 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z5 = virtualinvoke $r27.<java.net.Socket: boolean isClosed()>();

        if $z5 != 0 goto label47;

        $l15 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $i16 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        $r28 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $i17 = virtualinvoke r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: int getMaxIdleTime()>();

        virtualinvoke $r28.<java.net.Socket: void setSoTimeout(int)>($i17);

     label45:
        $r29 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r30 = virtualinvoke $r29.<java.net.Socket: java.io.InputStream getInputStream()>();

        $i18 = virtualinvoke $r30.<java.io.InputStream: int read()>();

        if $i18 < 0 goto label46;

        $l19 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l21 = $l19 - $l15;

        $l20 = (long) $i16;

        $b22 = $l21 cmp $l20;

        $i51 = (int) $b22;

        if $i51 < 0 goto label45;

     label46:
        $r31 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $z6 = virtualinvoke $r31.<java.net.Socket: boolean isClosed()>();

        if $z6 != 0 goto label47;

        $r32 = r0.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r32.<java.net.Socket: void close()>();

     label47:
        goto label49;

     label48:
        $r20 := @caughtexception;

        $r21 = staticinvoke <org.eclipse.jetty.server.nio.BlockingChannelConnector: org.eclipse.jetty.util.log.Logger access$100()>();

        interfaceinvoke $r21.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r20);

     label49:
        throw $r22;

     label50:
        return;

        catch java.io.IOException from label07 to label10 with label11;
        catch org.eclipse.jetty.io.EofException from label01 to label06 with label12;
        catch java.io.IOException from label13 to label14 with label15;
        catch java.io.IOException from label17 to label20 with label21;
        catch org.eclipse.jetty.http.HttpException from label01 to label06 with label22;
        catch java.io.IOException from label23 to label24 with label25;
        catch java.io.IOException from label27 to label30 with label31;
        catch java.lang.Throwable from label01 to label06 with label32;
        catch java.io.IOException from label33 to label34 with label35;
        catch java.io.IOException from label37 to label40 with label41;
        catch java.lang.Throwable from label12 to label16 with label42;
        catch java.lang.Throwable from label22 to label26 with label42;
        catch java.lang.Throwable from label32 to label36 with label42;
        catch java.io.IOException from label44 to label47 with label48;
        catch java.lang.Throwable from label42 to label43 with label42;
    }

    public java.lang.String toString()
    {
        java.net.Socket $r3, $r5;
        java.lang.Object[] $r0;
        java.net.SocketAddress $r4, $r6;
        java.lang.Integer $r2;
        int $i0;
        java.lang.Boolean $r7, $r8, $r9;
        java.lang.String $r11;
        org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint r1;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.io.Connection $r10;

        r1 := @this: org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint;

        $r0 = newarray (java.lang.Object)[7];

        $i0 = virtualinvoke r1.<java.lang.Object: int hashCode()>();

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0);

        $r0[0] = $r2;

        $r3 = r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r4 = virtualinvoke $r3.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r0[1] = $r4;

        $r5 = r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: java.net.Socket _socket>;

        $r6 = virtualinvoke $r5.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

        $r0[2] = $r6;

        $z0 = virtualinvoke r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: boolean isOpen()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r0[3] = $r7;

        $z1 = virtualinvoke r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: boolean isInputShutdown()>();

        $r8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r0[4] = $r8;

        $z2 = virtualinvoke r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: boolean isOutputShutdown()>();

        $r9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $r0[5] = $r9;

        $r10 = r1.<org.eclipse.jetty.server.nio.BlockingChannelConnector$BlockingChannelEndPoint: org.eclipse.jetty.io.Connection _connection>;

        $r0[6] = $r10;

        $r11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("BCEP@%x{l(%s)<->r(%s),open=%b,ishut=%b,oshut=%b}-{%s}", $r0);

        return $r11;
    }
}
