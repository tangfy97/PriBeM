class org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish extends java.lang.Object implements org.eclipse.jetty.continuation.ContinuationListener
{
    private org.eclipse.jetty.http.gzip.CompressedResponseWrapper wrappedResponse;
    final org.eclipse.jetty.servlets.GzipFilter this$0;

    public void <init>(org.eclipse.jetty.servlets.GzipFilter, org.eclipse.jetty.http.gzip.CompressedResponseWrapper)
    {
        org.eclipse.jetty.http.gzip.CompressedResponseWrapper r2;
        org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish r0;
        org.eclipse.jetty.servlets.GzipFilter r1;

        r0 := @this: org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish;

        r1 := @parameter0: org.eclipse.jetty.servlets.GzipFilter;

        r2 := @parameter1: org.eclipse.jetty.http.gzip.CompressedResponseWrapper;

        r0.<org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish: org.eclipse.jetty.servlets.GzipFilter this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish: org.eclipse.jetty.http.gzip.CompressedResponseWrapper wrappedResponse> = r2;

        return;
    }

    public void onComplete(org.eclipse.jetty.continuation.Continuation)
    {
        org.eclipse.jetty.http.gzip.CompressedResponseWrapper $r1;
        org.eclipse.jetty.continuation.Continuation r4;
        org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish r0;
        java.io.IOException $r2;
        org.eclipse.jetty.util.log.Logger $r3;

        r0 := @this: org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish;

        r4 := @parameter0: org.eclipse.jetty.continuation.Continuation;

     label1:
        $r1 = r0.<org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish: org.eclipse.jetty.http.gzip.CompressedResponseWrapper wrappedResponse>;

        virtualinvoke $r1.<org.eclipse.jetty.http.gzip.CompressedResponseWrapper: void finish()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = staticinvoke <org.eclipse.jetty.servlets.GzipFilter: org.eclipse.jetty.util.log.Logger access$000()>();

        interfaceinvoke $r3.<org.eclipse.jetty.util.log.Logger: void warn(java.lang.Throwable)>($r2);

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void onTimeout(org.eclipse.jetty.continuation.Continuation)
    {
        org.eclipse.jetty.continuation.Continuation r1;
        org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish r0;

        r0 := @this: org.eclipse.jetty.servlets.GzipFilter$ContinuationListenerWaitingForWrappedResponseToFinish;

        r1 := @parameter0: org.eclipse.jetty.continuation.Continuation;

        return;
    }
}
