class org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1 extends java.lang.Object implements org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$RandomizerMutationComponent
{
    final java.lang.String val$s;
    final org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator this$1;

    void <init>(org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator, java.lang.String)
    {
        java.lang.String r2;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1 r0;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator;

        r2 := @parameter1: java.lang.String;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator this$1> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: java.lang.String val$s> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r2;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector r3;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r6;
        java.lang.String $r4;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r5;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator $r1;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1;

        r3 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator this$1>;

        $r2 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r5 = $r2.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.NindoAutomaton a>;

        $r4 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkCharacters(java.lang.String,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r4, r3);

        return $r6;
    }

    public void apply()
    {
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator $r2, $r6;
        org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor $r8;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1 r0;
        java.lang.String $r3, $r7;
        org.waveprotocol.wave.model.document.operation.NindoAutomaton $r4;
        org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator $r1, $r5;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1;

        $r1 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator this$1>;

        $r2 = $r1.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r4 = $r2.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.NindoAutomaton a>;

        $r3 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.NindoAutomaton: void doCharacters(java.lang.String)>($r3);

        $r5 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator this$1>;

        $r6 = $r5.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator: org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator this$0>;

        $r8 = $r6.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator: org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor targetDoc>;

        $r7 = r0.<org.waveprotocol.wave.model.testing.RandomNindoGenerator$Generator$CharactersGenerator$1: java.lang.String val$s>;

        interfaceinvoke $r8.<org.waveprotocol.wave.model.document.operation.Nindo$NindoCursor: void characters(java.lang.String)>($r7);

        return;
    }
}
