public class org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser extends java.lang.Object implements org.fife.ui.rsyntaxtextarea.folding.FoldParser
{
    private boolean foldableMultiLineComments;
    private final boolean java;
    private static final char[] KEYWORD_IMPORT;
    protected static final char[] C_MLC_END;

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>(boolean,boolean)>(1, 0);

        return;
    }

    public void <init>(boolean, boolean)
    {
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r0;
        boolean z0, z1;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        z0 := @parameter0: boolean;

        z1 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean foldableMultiLineComments> = z0;

        r0.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean java> = z1;

        return;
    }

    public boolean getFoldableMultiLineComments()
    {
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r0;
        boolean $z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        $z0 = r0.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean foldableMultiLineComments>;

        return $z0;
    }

    public java.util.List getFolds(org.fife.ui.rsyntaxtextarea.RSyntaxTextArea)
    {
        javax.swing.text.BadLocationException $r12;
        java.util.ArrayList $r17;
        char[] $r3, $r7, $r8;
        org.fife.ui.rsyntaxtextarea.Token r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, z15;
        org.fife.ui.rsyntaxtextarea.RSyntaxTextArea r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, i12, i13, i14, i15, i16, $i18, $i20, $i22, $i24, $i26, $i28, $i30, $i32, $i34, $i36, $i38, $i40, $i42, $i44, $i46, $i48;
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r2;
        org.fife.ui.rsyntaxtextarea.folding.Fold $r4, $r9, r13, r15, r16, $r18, $r19, $r20, $r21;

        r2 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        r1 := @parameter0: org.fife.ui.rsyntaxtextarea.RSyntaxTextArea;

        $r17 = new java.util.ArrayList;

        specialinvoke $r17.<java.util.ArrayList: void <init>()>();

        r13 = null;

        $i0 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: int getLineCount()>();

        z15 = 0;

        i10 = 0;

        $i18 = (int) -1;

        i11 = $i18;

        $i20 = (int) -1;

        i12 = $i20;

        $i22 = (int) -1;

        i13 = $i22;

        $i24 = (int) -1;

        i14 = $i24;

     label01:
        i15 = 0;

     label02:
        if i15 >= $i0 goto label24;

        r14 = virtualinvoke r1.<org.fife.ui.rsyntaxtextarea.RSyntaxTextArea: org.fife.ui.rsyntaxtextarea.Token getTokenListForLine(int)>(i15);

     label03:
        if r14 == null goto label23;

        $z0 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isPaintable()>();

        if $z0 == 0 goto label23;

        $z1 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean getFoldableMultiLineComments()>();

        if $z1 == 0 goto label11;

        $z11 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isComment()>();

        if $z11 == 0 goto label11;

        $z12 = r2.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean java>;

        if $z12 == 0 goto label07;

        $i26 = (int) -1;

        if i11 <= $i26 goto label07;

        if i12 <= i11 goto label06;

        if r13 != null goto label04;

        $r18 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        specialinvoke $r18.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(2, r1, i13);

        r15 = $r18;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label05;

     label04:
        r15 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(2, i13);

     label05:
        virtualinvoke r15.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i14);

     label06:
        $i28 = (int) -1;

        i14 = $i28;

        $i30 = (int) -1;

        i13 = $i30;

        $i32 = (int) -1;

        i12 = $i32;

        $i34 = (int) -1;

        i11 = $i34;

     label07:
        if z15 == 0 goto label10;

        $r8 = <org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: char[] C_MLC_END>;

        $z14 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r8);

        if $z14 == 0 goto label22;

        $i8 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        $i7 = r14.<org.fife.ui.rsyntaxtextarea.Token: int textCount>;

        $i9 = $i8 + $i7;

        i16 = $i9 - 1;

        if r13 != null goto label08;

        $r19 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        specialinvoke $r19.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(1, r1, i10);

        virtualinvoke $r19.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i16);

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r19);

        r13 = null;

        goto label09;

     label08:
        $r9 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(1, i10);

        virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i16);

        r13 = virtualinvoke $r9.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

     label09:
        z15 = 0;

        i10 = 0;

        goto label22;

     label10:
        $i6 = r14.<org.fife.ui.rsyntaxtextarea.Token: int type>;

        if $i6 == 1 goto label22;

        $r7 = <org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: char[] C_MLC_END>;

        $z13 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean endsWith(char[])>($r7);

        if $z13 != 0 goto label22;

        z15 = 1;

        i10 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        goto label22;

     label11:
        $z2 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean isLeftCurly(org.fife.ui.rsyntaxtextarea.Token)>(r14);

        if $z2 == 0 goto label17;

        $z10 = r2.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean java>;

        if $z10 == 0 goto label15;

        $i36 = (int) -1;

        if i11 <= $i36 goto label15;

        if i12 <= i11 goto label14;

        if r13 != null goto label12;

        $r20 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        specialinvoke $r20.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(2, r1, i13);

        r16 = $r20;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r20);

        goto label13;

     label12:
        r16 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(2, i13);

     label13:
        virtualinvoke r16.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>(i14);

     label14:
        $i38 = (int) -1;

        i14 = $i38;

        $i40 = (int) -1;

        i13 = $i40;

        $i42 = (int) -1;

        i12 = $i42;

        $i44 = (int) -1;

        i11 = $i44;

     label15:
        if r13 != null goto label16;

        $r21 = new org.fife.ui.rsyntaxtextarea.folding.Fold;

        $i5 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        specialinvoke $r21.<org.fife.ui.rsyntaxtextarea.folding.Fold: void <init>(int,org.fife.ui.rsyntaxtextarea.RSyntaxTextArea,int)>(0, r1, $i5);

        r13 = $r21;

        interfaceinvoke $r17.<java.util.List: boolean add(java.lang.Object)>($r21);

        goto label22;

     label16:
        $i4 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        r13 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold createChild(int,int)>(0, $i4);

        goto label22;

     label17:
        $z3 = virtualinvoke r2.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean isRightCurly(org.fife.ui.rsyntaxtextarea.Token)>(r14);

        if $z3 == 0 goto label19;

        if r13 == null goto label22;

        $i1 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: void setEndOffset(int)>($i1);

        $r4 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: org.fife.ui.rsyntaxtextarea.folding.Fold getParent()>();

        $z8 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean isOnSingleLine()>();

        if $z8 == 0 goto label18;

        $z9 = virtualinvoke r13.<org.fife.ui.rsyntaxtextarea.folding.Fold: boolean removeFromParent()>();

        if $z9 != 0 goto label18;

        $i2 = interfaceinvoke $r17.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        interfaceinvoke $r17.<java.util.List: java.lang.Object remove(int)>($i3);

     label18:
        r13 = $r4;

        goto label22;

     label19:
        $z4 = r2.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean java>;

        if $z4 == 0 goto label22;

        $r3 = <org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: char[] KEYWORD_IMPORT>;

        $z5 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean is(int,char[])>(6, $r3);

        if $z5 == 0 goto label21;

        $i46 = (int) -1;

        if i11 != $i46 goto label20;

        i11 = i15;

        i13 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

        i14 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

     label20:
        i12 = i15;

        goto label22;

     label21:
        $i48 = (int) -1;

        if i11 <= $i48 goto label22;

        $z6 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isIdentifier()>();

        if $z6 == 0 goto label22;

        $z7 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(char)>(59);

        if $z7 == 0 goto label22;

        i14 = r14.<org.fife.ui.rsyntaxtextarea.Token: int offset>;

     label22:
        r14 = virtualinvoke r14.<org.fife.ui.rsyntaxtextarea.Token: org.fife.ui.rsyntaxtextarea.Token getNextToken()>();

        goto label03;

     label23:
        i15 = i15 + 1;

        goto label02;

     label24:
        goto label26;

     label25:
        $r12 := @caughtexception;

        virtualinvoke $r12.<javax.swing.text.BadLocationException: void printStackTrace()>();

     label26:
        return $r17;

        catch javax.swing.text.BadLocationException from label01 to label24 with label25;
    }

    public boolean isLeftCurly(org.fife.ui.rsyntaxtextarea.Token)
    {
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r1;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isLeftCurly()>();

        return $z0;
    }

    public boolean isRightCurly(org.fife.ui.rsyntaxtextarea.Token)
    {
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r1;
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;

        r1 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isRightCurly()>();

        return $z0;
    }

    public void setFoldableMultiLineComments(boolean)
    {
        org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser r0;
        boolean z0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser;

        z0 := @parameter0: boolean;

        r0.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: boolean foldableMultiLineComments> = z0;

        return;
    }

    static void <clinit>()
    {
        char[] $r1, $r3;
        java.lang.String $r0, $r2;

        $r0 = "import";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: char[] KEYWORD_IMPORT> = $r1;

        $r2 = "*/";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: char[] C_MLC_END> = $r3;

        return;
    }
}
