abstract class org.apache.poi.util.BinaryTree$BinaryTreeIterator extends java.lang.Object implements java.util.Iterator
{
    private int _expected_modifications;
    protected org.apache.poi.util.BinaryTree$Node _last_returned_node;
    private org.apache.poi.util.BinaryTree$Node _next_node;
    private int _type;
    final org.apache.poi.util.BinaryTree this$0;

    void <init>(org.apache.poi.util.BinaryTree, int)
    {
        org.apache.poi.util.BinaryTree r1;
        org.apache.poi.util.BinaryTree$Node $r3, $r4;
        org.apache.poi.util.BinaryTree$Node[] $r2;
        org.apache.poi.util.BinaryTree$BinaryTreeIterator r0;
        int i0, $i1, $i2, $i3;

        r0 := @this: org.apache.poi.util.BinaryTree$BinaryTreeIterator;

        r1 := @parameter0: org.apache.poi.util.BinaryTree;

        i0 := @parameter1: int;

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _type> = i0;

        $i1 = r1.<org.apache.poi.util.BinaryTree: int _modifications>;

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _expected_modifications> = $i1;

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _last_returned_node> = null;

        $r2 = r1.<org.apache.poi.util.BinaryTree: org.apache.poi.util.BinaryTree$Node[] _root>;

        $i2 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _type>;

        $r3 = $r2[$i2];

        $i3 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _type>;

        $r4 = staticinvoke <org.apache.poi.util.BinaryTree: org.apache.poi.util.BinaryTree$Node leastNode(org.apache.poi.util.BinaryTree$Node,int)>($r3, $i3);

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _next_node> = $r4;

        return;
    }

    protected abstract java.lang.Object doGetNext();

    public boolean hasNext()
    {
        org.apache.poi.util.BinaryTree$BinaryTreeIterator r0;
        org.apache.poi.util.BinaryTree$Node $r1;
        boolean $z0;

        r0 := @this: org.apache.poi.util.BinaryTree$BinaryTreeIterator;

        $r1 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _next_node>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object next() throws java.util.NoSuchElementException, java.util.ConcurrentModificationException
    {
        org.apache.poi.util.BinaryTree $r2;
        org.apache.poi.util.BinaryTree$Node $r1, $r3, $r4, $r5;
        org.apache.poi.util.BinaryTree$BinaryTreeIterator r0;
        int $i0, $i1, $i2;
        java.lang.Object $r6;
        java.util.NoSuchElementException $r8;
        java.util.ConcurrentModificationException $r7;

        r0 := @this: org.apache.poi.util.BinaryTree$BinaryTreeIterator;

        $r1 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _next_node>;

        if $r1 != null goto label1;

        $r8 = new java.util.NoSuchElementException;

        specialinvoke $r8.<java.util.NoSuchElementException: void <init>()>();

        throw $r8;

     label1:
        $r2 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree this$0>;

        $i1 = $r2.<org.apache.poi.util.BinaryTree: int _modifications>;

        $i0 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _expected_modifications>;

        if $i1 == $i0 goto label2;

        $r7 = new java.util.ConcurrentModificationException;

        specialinvoke $r7.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r7;

     label2:
        $r3 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _next_node>;

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _last_returned_node> = $r3;

        $r4 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _next_node>;

        $i2 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _type>;

        $r5 = staticinvoke <org.apache.poi.util.BinaryTree: org.apache.poi.util.BinaryTree$Node nextGreater(org.apache.poi.util.BinaryTree$Node,int)>($r4, $i2);

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _next_node> = $r5;

        $r6 = virtualinvoke r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: java.lang.Object doGetNext()>();

        return $r6;
    }

    public void remove() throws java.lang.IllegalStateException, java.util.ConcurrentModificationException
    {
        java.lang.IllegalStateException $r6;
        org.apache.poi.util.BinaryTree $r2, $r4;
        org.apache.poi.util.BinaryTree$Node $r1, $r3;
        org.apache.poi.util.BinaryTree$BinaryTreeIterator r0;
        int $i0, $i1, $i2, $i3;
        java.util.ConcurrentModificationException $r5;

        r0 := @this: org.apache.poi.util.BinaryTree$BinaryTreeIterator;

        $r1 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _last_returned_node>;

        if $r1 != null goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label1:
        $r2 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree this$0>;

        $i1 = $r2.<org.apache.poi.util.BinaryTree: int _modifications>;

        $i0 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _expected_modifications>;

        if $i1 == $i0 goto label2;

        $r5 = new java.util.ConcurrentModificationException;

        specialinvoke $r5.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r5;

     label2:
        $r4 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree this$0>;

        $r3 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _last_returned_node>;

        virtualinvoke $r4.<org.apache.poi.util.BinaryTree: void doRedBlackDelete(org.apache.poi.util.BinaryTree$Node)>($r3);

        $i2 = r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _expected_modifications>;

        $i3 = $i2 + 1;

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: int _expected_modifications> = $i3;

        r0.<org.apache.poi.util.BinaryTree$BinaryTreeIterator: org.apache.poi.util.BinaryTree$Node _last_returned_node> = null;

        return;
    }
}
