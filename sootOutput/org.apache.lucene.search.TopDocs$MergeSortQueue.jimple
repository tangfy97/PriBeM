class org.apache.lucene.search.TopDocs$MergeSortQueue extends org.apache.lucene.util.PriorityQueue
{
    final org.apache.lucene.search.ScoreDoc[][] shardHits;
    final org.apache.lucene.search.FieldComparator[] comparators;
    final int[] reverseMul;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.search.Sort, org.apache.lucene.search.TopDocs[]) throws java.io.IOException
    {
        org.apache.lucene.search.ScoreDoc r12;
        org.apache.lucene.search.SortField[] $r4;
        org.apache.lucene.search.TopDocs$MergeSortQueue r0;
        org.apache.lucene.search.FieldDoc r13;
        byte $b11;
        int[] $r6, $r9;
        org.apache.lucene.search.ScoreDoc[] r27;
        org.apache.lucene.search.SortField r28;
        boolean $z0, $z1;
        org.apache.lucene.search.Sort r3;
        org.apache.lucene.search.ScoreDoc[][] $r2, $r11;
        org.apache.lucene.search.FieldComparator[] $r5, $r7;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r22, $r23, $r24, $r25;
        java.lang.Object[] $r14;
        org.apache.lucene.search.FieldComparator $r8;
        org.apache.lucene.search.TopDocs[] r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10;
        java.lang.String $r20, $r26;
        org.apache.lucene.search.TopDocs $r10;
        java.lang.IllegalArgumentException $r15, $r21;

        r0 := @this: org.apache.lucene.search.TopDocs$MergeSortQueue;

        r3 := @parameter0: org.apache.lucene.search.Sort;

        r1 := @parameter1: org.apache.lucene.search.TopDocs[];

        $i0 = lengthof r1;

        specialinvoke r0.<org.apache.lucene.util.PriorityQueue: void <init>(int)>($i0);

        $i1 = lengthof r1;

        $r2 = newarray (org.apache.lucene.search.ScoreDoc[])[$i1];

        r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.ScoreDoc[][] shardHits> = $r2;

        i8 = 0;

     label01:
        $i2 = lengthof r1;

        if i8 >= $i2 goto label06;

        $r10 = r1[i8];

        r27 = $r10.<org.apache.lucene.search.TopDocs: org.apache.lucene.search.ScoreDoc[] scoreDocs>;

        if r27 == null goto label05;

        $r11 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.ScoreDoc[][] shardHits>;

        $r11[i8] = r27;

        i9 = 0;

     label02:
        $i7 = lengthof r27;

        if i9 >= $i7 goto label05;

        r12 = r27[i9];

        $z1 = r12 instanceof org.apache.lucene.search.FieldDoc;

        if $z1 != 0 goto label03;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shard ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" was not sorted by the provided Sort (expected FieldDoc but got ScoreDoc)");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26);

        throw $r21;

     label03:
        r13 = (org.apache.lucene.search.FieldDoc) r12;

        $r14 = r13.<org.apache.lucene.search.FieldDoc: java.lang.Object[] fields>;

        if $r14 != null goto label04;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("shard ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" did not set sort field values (FieldDoc.fields is null); you must pass fillFields=true to IndexSearcher.search on each shard");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label04:
        i9 = i9 + 1;

        goto label02;

     label05:
        i8 = i8 + 1;

        goto label01;

     label06:
        $r4 = virtualinvoke r3.<org.apache.lucene.search.Sort: org.apache.lucene.search.SortField[] getSort()>();

        $i3 = lengthof $r4;

        $r5 = newarray (org.apache.lucene.search.FieldComparator)[$i3];

        r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.FieldComparator[] comparators> = $r5;

        $i4 = lengthof $r4;

        $r6 = newarray (int)[$i4];

        r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: int[] reverseMul> = $r6;

        i10 = 0;

     label07:
        $i5 = lengthof $r4;

        if i10 >= $i5 goto label10;

        r28 = $r4[i10];

        $r7 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        $r8 = virtualinvoke r28.<org.apache.lucene.search.SortField: org.apache.lucene.search.FieldComparator getComparator(int,int)>(1, i10);

        $r7[i10] = $r8;

        $r9 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: int[] reverseMul>;

        $i6 = i10;

        $z0 = virtualinvoke r28.<org.apache.lucene.search.SortField: boolean getReverse()>();

        if $z0 == 0 goto label08;

        $b11 = -1;

        goto label09;

     label08:
        $b11 = 1;

     label09:
        $r9[$i6] = $b11;

        i10 = i10 + 1;

        goto label07;

     label10:
        return;
    }

    public boolean lessThan(org.apache.lucene.search.TopDocs$ShardRef, org.apache.lucene.search.TopDocs$ShardRef)
    {
        org.apache.lucene.search.ScoreDoc $r4, $r8;
        org.apache.lucene.search.TopDocs$MergeSortQueue r0;
        org.apache.lucene.search.FieldDoc $r17, $r18;
        int[] $r12;
        org.apache.lucene.search.ScoreDoc[] $r3, $r7;
        org.apache.lucene.search.TopDocs$ShardRef r1, r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.lucene.search.ScoreDoc[][] $r2, $r6;
        org.apache.lucene.search.FieldComparator[] $r10, $r20;
        java.lang.Object[] $r13, $r14;
        org.apache.lucene.search.FieldComparator r11;
        java.lang.AssertionError $r9, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i16;
        java.lang.Object $r15, $r16;

        r0 := @this: org.apache.lucene.search.TopDocs$MergeSortQueue;

        r1 := @parameter0: org.apache.lucene.search.TopDocs$ShardRef;

        r5 := @parameter1: org.apache.lucene.search.TopDocs$ShardRef;

        $z0 = <org.apache.lucene.search.TopDocs$MergeSortQueue: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        if r1 != r5 goto label01;

        $r19 = new java.lang.AssertionError;

        specialinvoke $r19.<java.lang.AssertionError: void <init>()>();

        throw $r19;

     label01:
        $r2 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.ScoreDoc[][] shardHits>;

        $i0 = r1.<org.apache.lucene.search.TopDocs$ShardRef: int shardIndex>;

        $r3 = $r2[$i0];

        $i1 = r1.<org.apache.lucene.search.TopDocs$ShardRef: int hitIndex>;

        $r4 = $r3[$i1];

        $r17 = (org.apache.lucene.search.FieldDoc) $r4;

        $r6 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.ScoreDoc[][] shardHits>;

        $i2 = r5.<org.apache.lucene.search.TopDocs$ShardRef: int shardIndex>;

        $r7 = $r6[$i2];

        $i3 = r5.<org.apache.lucene.search.TopDocs$ShardRef: int hitIndex>;

        $r8 = $r7[$i3];

        $r18 = (org.apache.lucene.search.FieldDoc) $r8;

        i15 = 0;

     label02:
        $r20 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        $i16 = lengthof $r20;

        if i15 >= $i16 goto label06;

        $r10 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: org.apache.lucene.search.FieldComparator[] comparators>;

        r11 = $r10[i15];

        $r12 = r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: int[] reverseMul>;

        $i12 = $r12[i15];

        $r13 = $r17.<org.apache.lucene.search.FieldDoc: java.lang.Object[] fields>;

        $r16 = $r13[i15];

        $r14 = $r18.<org.apache.lucene.search.FieldDoc: java.lang.Object[] fields>;

        $r15 = $r14[i15];

        $i13 = virtualinvoke r11.<org.apache.lucene.search.FieldComparator: int compareValues(java.lang.Object,java.lang.Object)>($r16, $r15);

        i14 = $i12 * $i13;

        if i14 == 0 goto label05;

        if i14 >= 0 goto label03;

        $z2 = 1;

        goto label04;

     label03:
        $z2 = 0;

     label04:
        return $z2;

     label05:
        i15 = i15 + 1;

        goto label02;

     label06:
        $i5 = r1.<org.apache.lucene.search.TopDocs$ShardRef: int shardIndex>;

        $i4 = r5.<org.apache.lucene.search.TopDocs$ShardRef: int shardIndex>;

        if $i5 >= $i4 goto label07;

        return 1;

     label07:
        $i7 = r1.<org.apache.lucene.search.TopDocs$ShardRef: int shardIndex>;

        $i6 = r5.<org.apache.lucene.search.TopDocs$ShardRef: int shardIndex>;

        if $i7 <= $i6 goto label08;

        return 0;

     label08:
        $z1 = <org.apache.lucene.search.TopDocs$MergeSortQueue: boolean $assertionsDisabled>;

        if $z1 != 0 goto label09;

        $i11 = r1.<org.apache.lucene.search.TopDocs$ShardRef: int hitIndex>;

        $i10 = r5.<org.apache.lucene.search.TopDocs$ShardRef: int hitIndex>;

        if $i11 != $i10 goto label09;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label09:
        $i9 = r1.<org.apache.lucene.search.TopDocs$ShardRef: int hitIndex>;

        $i8 = r5.<org.apache.lucene.search.TopDocs$ShardRef: int hitIndex>;

        if $i9 >= $i8 goto label10;

        $z3 = 1;

        goto label11;

     label10:
        $z3 = 0;

     label11:
        return $z3;
    }

    public volatile boolean lessThan(java.lang.Object, java.lang.Object)
    {
        org.apache.lucene.search.TopDocs$ShardRef $r3, $r4;
        java.lang.Object r1, r2;
        org.apache.lucene.search.TopDocs$MergeSortQueue r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.TopDocs$MergeSortQueue;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.apache.lucene.search.TopDocs$ShardRef) r1;

        $r3 = (org.apache.lucene.search.TopDocs$ShardRef) r2;

        $z0 = virtualinvoke r0.<org.apache.lucene.search.TopDocs$MergeSortQueue: boolean lessThan(org.apache.lucene.search.TopDocs$ShardRef,org.apache.lucene.search.TopDocs$ShardRef)>($r4, $r3);

        return $z0;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/TopDocs;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.TopDocs$MergeSortQueue: boolean $assertionsDisabled> = $z1;

        return;
    }
}
