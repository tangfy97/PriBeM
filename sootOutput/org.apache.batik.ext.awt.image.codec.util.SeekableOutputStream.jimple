public class org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream extends java.io.OutputStream
{
    private java.io.RandomAccessFile file;

    public void <init>(java.io.RandomAccessFile)
    {
        java.io.RandomAccessFile r1;
        java.lang.IllegalArgumentException $r2;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        r1 := @parameter0: java.io.RandomAccessFile;

        specialinvoke r0.<java.io.OutputStream: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("SeekableOutputStream0");

        throw $r2;

     label1:
        r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file> = r1;

        return;
    }

    public void write(int) throws java.io.IOException
    {
        int i0;
        java.io.RandomAccessFile $r1;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void write(int)>(i0);

        return;
    }

    public void write(byte[]) throws java.io.IOException
    {
        byte[] r1;
        java.io.RandomAccessFile $r2;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        r1 := @parameter0: byte[];

        $r2 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int) throws java.io.IOException
    {
        byte[] r1;
        java.io.RandomAccessFile $r2;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;
        int i0, i1;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void write(byte[],int,int)>(r1, i0, i1);

        return;
    }

    public void flush() throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;
        java.io.FileDescriptor $r2;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        $r2 = virtualinvoke $r1.<java.io.RandomAccessFile: java.io.FileDescriptor getFD()>();

        virtualinvoke $r2.<java.io.FileDescriptor: void sync()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void close()>();

        return;
    }

    public long getFilePointer() throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        long $l0;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        $l0 = virtualinvoke $r1.<java.io.RandomAccessFile: long getFilePointer()>();

        return $l0;
    }

    public void seek(long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        long l0;
        org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream r0;

        r0 := @this: org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.batik.ext.awt.image.codec.util.SeekableOutputStream: java.io.RandomAccessFile file>;

        virtualinvoke $r1.<java.io.RandomAccessFile: void seek(long)>(l0);

        return;
    }
}
