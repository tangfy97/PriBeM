public class org.springframework.scheduling.config.SchedulerBeanDefinitionParser extends org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser
{

    public void <init>()
    {
        org.springframework.scheduling.config.SchedulerBeanDefinitionParser r0;

        r0 := @this: org.springframework.scheduling.config.SchedulerBeanDefinitionParser;

        specialinvoke r0.<org.springframework.beans.factory.xml.AbstractSingleBeanDefinitionParser: void <init>()>();

        return;
    }

    protected java.lang.String getBeanClassName(org.w3c.dom.Element)
    {
        org.springframework.scheduling.config.SchedulerBeanDefinitionParser r0;
        org.w3c.dom.Element r1;

        r0 := @this: org.springframework.scheduling.config.SchedulerBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        return "org.springframework.scheduling.concurrent.ThreadPoolTaskScheduler";
    }

    protected void doParse(org.w3c.dom.Element, org.springframework.beans.factory.support.BeanDefinitionBuilder)
    {
        org.w3c.dom.Element r0;
        org.springframework.beans.factory.support.BeanDefinitionBuilder r2;
        org.springframework.scheduling.config.SchedulerBeanDefinitionParser r3;
        java.lang.String $r1;
        boolean $z0;

        r3 := @this: org.springframework.scheduling.config.SchedulerBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("pool-size");

        $z0 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("poolSize", $r1);

     label1:
        return;
    }
}
