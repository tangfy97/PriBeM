public class com.hp.hpl.jena.sparql.core.DatasetGraphWrapper extends java.lang.Object implements com.hp.hpl.jena.sparql.core.DatasetGraph, org.apache.jena.atlas.lib.Sync
{
    private final com.hp.hpl.jena.sparql.core.DatasetGraph dsg;

    public final com.hp.hpl.jena.sparql.core.DatasetGraph getWrapped()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        return $r1;
    }

    public void <init>(com.hp.hpl.jena.sparql.core.DatasetGraph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.DatasetGraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg> = r1;

        return;
    }

    public boolean containsGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean containsGraph(com.hp.hpl.jena.graph.Node)>(r1);

        return $z0;
    }

    public com.hp.hpl.jena.graph.Graph getDefaultGraph()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.graph.Graph $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getDefaultGraph()>();

        return $r2;
    }

    public com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.graph.Graph $r3;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.graph.Graph getGraph(com.hp.hpl.jena.graph.Node)>(r1);

        return $r3;
    }

    public void addGraph(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r3;
        com.hp.hpl.jena.graph.Graph r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Graph;

        $r3 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.core.DatasetGraph: void addGraph(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Graph)>(r1, r2);

        return;
    }

    public void removeGraph(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: void removeGraph(com.hp.hpl.jena.graph.Node)>(r1);

        return;
    }

    public void setDefaultGraph(com.hp.hpl.jena.graph.Graph)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.graph.Graph r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Graph;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: void setDefaultGraph(com.hp.hpl.jena.graph.Graph)>(r1);

        return;
    }

    public com.hp.hpl.jena.shared.Lock getLock()
    {
        com.hp.hpl.jena.shared.Lock $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.shared.Lock getLock()>();

        return $r2;
    }

    public java.util.Iterator listGraphNodes()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        java.util.Iterator $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator listGraphNodes()>();

        return $r2;
    }

    public void add(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: void add(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return;
    }

    public void delete(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: void delete(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return;
    }

    public void add(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraph: void add(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return;
    }

    public void delete(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraph: void delete(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return;
    }

    public void deleteAny(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraph: void deleteAny(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Iterator find()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        java.util.Iterator $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator find()>();

        return $r2;
    }

    public java.util.Iterator find(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        java.util.Iterator $r3;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.sparql.core.Quad r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator find(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return $r3;
    }

    public java.util.Iterator find(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        java.util.Iterator $r6;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator find(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return $r6;
    }

    public java.util.Iterator findNG(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        java.util.Iterator $r6;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraph: java.util.Iterator findNG(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return $r6;
    }

    public boolean contains(com.hp.hpl.jena.sparql.core.Quad)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r2;
        com.hp.hpl.jena.sparql.core.Quad r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.sparql.core.Quad;

        $r2 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean contains(com.hp.hpl.jena.sparql.core.Quad)>(r1);

        return $z0;
    }

    public boolean contains(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.graph.Node r1, r2, r3, r4;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        r3 := @parameter2: com.hp.hpl.jena.graph.Node;

        r4 := @parameter3: com.hp.hpl.jena.graph.Node;

        $r5 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $z0 = interfaceinvoke $r5.<com.hp.hpl.jena.sparql.core.DatasetGraph: boolean contains(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3, r4);

        return $z0;
    }

    public com.hp.hpl.jena.sparql.util.Context getContext()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;
        com.hp.hpl.jena.sparql.util.Context $r2;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: com.hp.hpl.jena.sparql.util.Context getContext()>();

        return $r2;
    }

    public long size()
    {
        long $l0;
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $l0 = interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: long size()>();

        return $l0;
    }

    public void close()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        interfaceinvoke $r1.<com.hp.hpl.jena.sparql.core.DatasetGraph: void close()>();

        return;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        java.lang.String $r2;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        return $r2;
    }

    public void sync()
    {
        com.hp.hpl.jena.sparql.core.DatasetGraphWrapper r0;
        com.hp.hpl.jena.sparql.core.DatasetGraph $r1;

        r0 := @this: com.hp.hpl.jena.sparql.core.DatasetGraphWrapper;

        $r1 = r0.<com.hp.hpl.jena.sparql.core.DatasetGraphWrapper: com.hp.hpl.jena.sparql.core.DatasetGraph dsg>;

        staticinvoke <com.hp.hpl.jena.sparql.SystemARQ: void sync(com.hp.hpl.jena.sparql.core.DatasetGraph)>($r1);

        return;
    }
}
