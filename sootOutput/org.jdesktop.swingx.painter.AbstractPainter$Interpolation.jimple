public final enum class org.jdesktop.swingx.painter.AbstractPainter$Interpolation extends java.lang.Enum
{
    public static final enum org.jdesktop.swingx.painter.AbstractPainter$Interpolation Bicubic;
    public static final enum org.jdesktop.swingx.painter.AbstractPainter$Interpolation Bilinear;
    public static final enum org.jdesktop.swingx.painter.AbstractPainter$Interpolation NearestNeighbor;
    private java.lang.Object value;
    private static final org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] $VALUES;

    public static org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] values()
    {
        java.lang.Object $r1;
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] $r0, $r2;

        $r0 = <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.jdesktop.swingx.painter.AbstractPainter$Interpolation[]) $r1;

        return $r2;
    }

    public static org.jdesktop.swingx.painter.AbstractPainter$Interpolation valueOf(java.lang.String)
    {
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jdesktop/swingx/painter/AbstractPainter$Interpolation;", r0);

        $r2 = (org.jdesktop.swingx.painter.AbstractPainter$Interpolation) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.Object)
    {
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation r0;
        int i0;
        java.lang.Object r2;
        java.lang.String r1;

        r0 := @this: org.jdesktop.swingx.painter.AbstractPainter$Interpolation;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.Object;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.jdesktop.swingx.painter.AbstractPainter$Interpolation: java.lang.Object value> = r2;

        return;
    }

    private void configureGraphics(java.awt.Graphics2D)
    {
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation r1;
        java.awt.Graphics2D r0;
        java.awt.RenderingHints$Key $r3;
        java.lang.Object $r2;

        r1 := @this: org.jdesktop.swingx.painter.AbstractPainter$Interpolation;

        r0 := @parameter0: java.awt.Graphics2D;

        $r3 = <java.awt.RenderingHints: java.awt.RenderingHints$Key KEY_INTERPOLATION>;

        $r2 = r1.<org.jdesktop.swingx.painter.AbstractPainter$Interpolation: java.lang.Object value>;

        virtualinvoke r0.<java.awt.Graphics2D: void setRenderingHint(java.awt.RenderingHints$Key,java.lang.Object)>($r3, $r2);

        return;
    }

    static void access$000(org.jdesktop.swingx.painter.AbstractPainter$Interpolation, java.awt.Graphics2D)
    {
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation r0;
        java.awt.Graphics2D r1;

        r0 := @parameter0: org.jdesktop.swingx.painter.AbstractPainter$Interpolation;

        r1 := @parameter1: java.awt.Graphics2D;

        specialinvoke r0.<org.jdesktop.swingx.painter.AbstractPainter$Interpolation: void configureGraphics(java.awt.Graphics2D)>(r1);

        return;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] $r6;
        org.jdesktop.swingx.painter.AbstractPainter$Interpolation $r0, $r2, $r4, $r7, $r8, $r9;
        java.lang.Object $r1, $r3, $r5;

        $r0 = new org.jdesktop.swingx.painter.AbstractPainter$Interpolation;

        $r1 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BICUBIC>;

        specialinvoke $r0.<org.jdesktop.swingx.painter.AbstractPainter$Interpolation: void <init>(java.lang.String,int,java.lang.Object)>("Bicubic", 0, $r1);

        <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation Bicubic> = $r0;

        $r2 = new org.jdesktop.swingx.painter.AbstractPainter$Interpolation;

        $r3 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_BILINEAR>;

        specialinvoke $r2.<org.jdesktop.swingx.painter.AbstractPainter$Interpolation: void <init>(java.lang.String,int,java.lang.Object)>("Bilinear", 1, $r3);

        <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation Bilinear> = $r2;

        $r4 = new org.jdesktop.swingx.painter.AbstractPainter$Interpolation;

        $r5 = <java.awt.RenderingHints: java.lang.Object VALUE_INTERPOLATION_NEAREST_NEIGHBOR>;

        specialinvoke $r4.<org.jdesktop.swingx.painter.AbstractPainter$Interpolation: void <init>(java.lang.String,int,java.lang.Object)>("NearestNeighbor", 2, $r5);

        <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation NearestNeighbor> = $r4;

        $r6 = newarray (org.jdesktop.swingx.painter.AbstractPainter$Interpolation)[3];

        $r7 = <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation Bicubic>;

        $r6[0] = $r7;

        $r8 = <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation Bilinear>;

        $r6[1] = $r8;

        $r9 = <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation NearestNeighbor>;

        $r6[2] = $r9;

        <org.jdesktop.swingx.painter.AbstractPainter$Interpolation: org.jdesktop.swingx.painter.AbstractPainter$Interpolation[] $VALUES> = $r6;

        return;
    }
}
