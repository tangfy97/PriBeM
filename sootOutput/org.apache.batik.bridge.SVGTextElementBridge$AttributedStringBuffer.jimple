public class org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer extends java.lang.Object
{
    protected java.util.List strings;
    protected java.util.List attributes;
    protected int count;
    protected int length;

    public void <init>()
    {
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        java.util.ArrayList $r1, $r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List attributes> = $r2;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count> = 0;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length> = 0;

        return;
    }

    public boolean isEmpty()
    {
        int $i0;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        if $i0 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int length()
    {
        int $i0;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length>;

        return $i0;
    }

    public void append(java.lang.String, java.util.Map)
    {
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r1;
        java.util.List $r2, $r4;
        java.util.Map r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String r0;

        r1 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.Map;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return;

     label1:
        $r2 = r1.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r0);

        $r4 = r1.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List attributes>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r3);

        $i1 = r1.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        $i2 = $i1 + 1;

        r1.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count> = $i2;

        $i3 = r1.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length>;

        $i4 = virtualinvoke r0.<java.lang.String: int length()>();

        $i5 = $i3 + $i4;

        r1.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length> = $i5;

        return;
    }

    public int getLastChar()
    {
        char $c5;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        java.util.List $r1;
        int $i0, $i1, $i2, $i3, $i4, $i7, $i8;
        java.lang.Object $r2;
        java.lang.String r3;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        if $i0 != 0 goto label1;

        $i7 = (int) -1;

        return $i7;

     label1:
        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $i1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        $i2 = $i1 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i2);

        r3 = (java.lang.String) $r2;

        $i3 = virtualinvoke r3.<java.lang.String: int length()>();

        $i4 = $i3 - 1;

        $c5 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i4);

        $i8 = (int) $c5;

        return $i8;
    }

    public void stripFirst()
    {
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, $i8;
        java.lang.String r3, $r5;
        char $c2;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        java.util.List $r1, $r4, $r6, $r7;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (java.lang.String) $r2;

        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        $i1 = $i0 - 1;

        $c2 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i1);

        $i8 = (int) $c2;

        if $i8 == 32 goto label1;

        return;

     label1:
        $i3 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length>;

        $i4 = $i3 - 1;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length> = $i4;

        $i5 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i5 != 1 goto label2;

        $r6 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List attributes>;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>(0);

        $r7 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>(0);

        $i6 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        $i7 = $i6 - 1;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count> = $i7;

        return;

     label2:
        $r4 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int)>(1);

        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, $r5);

        return;
    }

    public void stripLast()
    {
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        java.lang.String r3, $r5;
        char $c4;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        java.util.List $r1, $r4, $r6, $r7;
        java.lang.Object $r2;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        $i1 = $i0 - 1;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        r3 = (java.lang.String) $r2;

        $i2 = virtualinvoke r3.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke r3.<java.lang.String: char charAt(int)>($i3);

        $i15 = (int) $c4;

        if $i15 == 32 goto label1;

        return;

     label1:
        $i5 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length>;

        $i6 = $i5 - 1;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int length> = $i6;

        $i7 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i7 != 1 goto label2;

        $r6 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List attributes>;

        $i12 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        $i13 = $i12 - 1;

        r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count> = $i13;

        interfaceinvoke $r6.<java.util.List: java.lang.Object remove(int)>($i13);

        $r7 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $i14 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        interfaceinvoke $r7.<java.util.List: java.lang.Object remove(int)>($i14);

        return;

     label2:
        $r4 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $i8 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        $i9 = $i8 - 1;

        $i10 = virtualinvoke r3.<java.lang.String: int length()>();

        $i11 = $i10 - 1;

        $r5 = virtualinvoke r3.<java.lang.String: java.lang.String substring(int,int)>(0, $i11);

        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i9, $r5);

        return;
    }

    public java.text.AttributedString toAttributedString()
    {
        java.util.Map $r7, r23;
        boolean $z0, $z1, $z2;
        java.util.Collection $r26;
        java.util.Set $r24;
        java.text.AttributedString $r1, $r14;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        java.util.List $r2, $r4, $r9, $r10, $r16, $r18;
        java.text.AttributedCharacterIterator$Attribute r29;
        java.lang.StringBuffer $r8;
        int $i0, $i1, $i2, $i3, i4, i5;
        java.lang.String $r5, $r13, $r15, r21;
        java.util.Iterator $r11, $r17, $r19, $r25, $r27;
        java.lang.Object $r3, $r6, $r12, $r20, $r22, $r28, $r30;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return null;

     label2:
        $r1 = new java.text.AttributedString;

        $r2 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (java.lang.String) $r3;

        $r4 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List attributes>;

        $r6 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.util.Map) $r6;

        specialinvoke $r1.<java.text.AttributedString: void <init>(java.lang.String,java.util.Map)>($r5, $r7);

        return $r1;

     label3:
        $r8 = new java.lang.StringBuffer;

        $r9 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        $i2 = $i1 * 5;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r10 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

     label5:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r14 = new java.text.AttributedString;

        $r15 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r14.<java.text.AttributedString: void <init>(java.lang.String)>($r15);

        $r16 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r17 = interfaceinvoke $r16.<java.util.List: java.util.Iterator iterator()>();

        $r18 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List attributes>;

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

        i5 = 0;

        goto label9;

     label6:
        $r20 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.lang.String) $r20;

        $i3 = virtualinvoke r21.<java.lang.String: int length()>();

        i4 = i5 + $i3;

        $r22 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r23 = (java.util.Map) $r22;

        $r24 = interfaceinvoke r23.<java.util.Map: java.util.Set keySet()>();

        $r25 = interfaceinvoke $r24.<java.util.Set: java.util.Iterator iterator()>();

        $r26 = interfaceinvoke r23.<java.util.Map: java.util.Collection values()>();

        $r27 = interfaceinvoke $r26.<java.util.Collection: java.util.Iterator iterator()>();

        goto label8;

     label7:
        $r28 = interfaceinvoke $r25.<java.util.Iterator: java.lang.Object next()>();

        r29 = (java.text.AttributedCharacterIterator$Attribute) $r28;

        $r30 = interfaceinvoke $r27.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r14.<java.text.AttributedString: void addAttribute(java.text.AttributedCharacterIterator$Attribute,java.lang.Object,int,int)>(r29, $r30, i5, i4);

     label8:
        $z2 = interfaceinvoke $r25.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label7;

        i5 = i4;

     label9:
        $z1 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label6;

        return $r14;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r7;
        org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer r0;
        java.util.List $r1, $r5, $r6;
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i2;
        java.lang.Object $r2, $r8;
        java.lang.String $r3, $r9, $r10;
        boolean $z0;

        r0 := @this: org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer;

        $i0 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: int count>;

        lookupswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            default: goto label3;
        };

     label1:
        return "";

     label2:
        $r1 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (java.lang.String) $r2;

        return $r3;

     label3:
        $r4 = new java.lang.StringBuffer;

        $r5 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $i1 = interfaceinvoke $r5.<java.util.List: int size()>();

        $i2 = $i1 * 5;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r6 = r0.<org.apache.batik.bridge.SVGTextElementBridge$AttributedStringBuffer: java.util.List strings>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

        goto label5;

     label4:
        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        $r9 = (java.lang.String) $r8;

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

     label5:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label4;

        $r10 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r10;
    }
}
