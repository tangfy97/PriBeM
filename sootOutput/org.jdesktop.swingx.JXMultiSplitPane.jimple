public class org.jdesktop.swingx.JXMultiSplitPane extends javax.swing.JPanel
{
    private javax.accessibility.AccessibleContext accessibleContext;
    private boolean continuousLayout;
    private org.jdesktop.swingx.JXMultiSplitPane$DividerPainter dividerPainter;
    private org.jdesktop.swingx.painter.Painter backgroundPainter;
    private boolean dragUnderway;
    private org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider;
    private java.awt.Rectangle initialDividerBounds;
    private boolean oldFloatingDividers;
    private int dragOffsetX;
    private int dragOffsetY;
    private int dragMin;
    private int dragMax;

    public void <init>()
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout $r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = new org.jdesktop.swingx.MultiSplitLayout;

        specialinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: void <init>()>();

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void <init>(org.jdesktop.swingx.MultiSplitLayout)>($r1);

        return;
    }

    public void <init>(org.jdesktop.swingx.MultiSplitLayout)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout r1;
        int $i1, $i3;
        org.jdesktop.swingx.JXMultiSplitPane$InputHandler $r5;
        org.jdesktop.swingx.JXMultiSplitPane$DefaultDividerPainter $r4;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r1 := @parameter0: org.jdesktop.swingx.MultiSplitLayout;

        specialinvoke r0.<javax.swing.JPanel: void <init>(java.awt.LayoutManager)>(r1);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: javax.accessibility.AccessibleContext accessibleContext> = null;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean continuousLayout> = 1;

        $r4 = new org.jdesktop.swingx.JXMultiSplitPane$DefaultDividerPainter;

        specialinvoke $r4.<org.jdesktop.swingx.JXMultiSplitPane$DefaultDividerPainter: void <init>(org.jdesktop.swingx.JXMultiSplitPane,org.jdesktop.swingx.JXMultiSplitPane$1)>(r0, null);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter dividerPainter> = $r4;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway> = 0;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider> = null;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Rectangle initialDividerBounds> = null;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean oldFloatingDividers> = 1;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetX> = 0;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetY> = 0;

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i1;

        $i3 = (int) -1;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i3;

        $r5 = new org.jdesktop.swingx.JXMultiSplitPane$InputHandler;

        specialinvoke $r5.<org.jdesktop.swingx.JXMultiSplitPane$InputHandler: void <init>(org.jdesktop.swingx.JXMultiSplitPane,org.jdesktop.swingx.JXMultiSplitPane$1)>(r0, null);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void addMouseListener(java.awt.event.MouseListener)>($r5);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r5);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void addKeyListener(java.awt.event.KeyListener)>($r5);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void setFocusable(boolean)>(1);

        return;
    }

    public final org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()
    {
        java.awt.LayoutManager $r1;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout $r2;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.LayoutManager getLayout()>();

        $r2 = (org.jdesktop.swingx.MultiSplitLayout) $r1;

        return $r2;
    }

    public final void setModel(org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r2;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout $r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r2 := @parameter0: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: void setModel(org.jdesktop.swingx.MultiSplitLayout$Node)>(r2);

        return;
    }

    public final void setDividerSize(int)
    {
        int i0;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout $r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: void setDividerSize(int)>(i0);

        return;
    }

    public final int getDividerSize()
    {
        int $i0;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout $r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        $i0 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getDividerSize()>();

        return $i0;
    }

    public void setContinuousLayout(boolean)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        z1 := @parameter0: boolean;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean isContinuousLayout()>();

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean continuousLayout> = z1;

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean isContinuousLayout()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void firePropertyChange(java.lang.String,boolean,boolean)>("continuousLayout", $z0, $z2);

        return;
    }

    public boolean isContinuousLayout()
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $z0 = r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean continuousLayout>;

        return $z0;
    }

    public org.jdesktop.swingx.MultiSplitLayout$Divider activeDivider()
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout$Divider $r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        return $r1;
    }

    public org.jdesktop.swingx.JXMultiSplitPane$DividerPainter getDividerPainter()
    {
        org.jdesktop.swingx.JXMultiSplitPane$DividerPainter $r1;
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter dividerPainter>;

        return $r1;
    }

    public void setDividerPainter(org.jdesktop.swingx.JXMultiSplitPane$DividerPainter)
    {
        org.jdesktop.swingx.JXMultiSplitPane$DividerPainter $r1, r2, $r3;
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r2 := @parameter0: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter getDividerPainter()>();

        r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter dividerPainter> = r2;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter getDividerPainter()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("dividerPainter", $r1, $r3);

        return;
    }

    protected void paintComponent(java.awt.Graphics)
    {
        java.lang.Throwable $r7;
        java.awt.Insets $r5;
        java.awt.Graphics2D r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.painter.Painter $r1, $r6;
        java.awt.Graphics r2, $r3;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r2 := @parameter0: java.awt.Graphics;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.painter.Painter backgroundPainter>;

        if $r1 == null goto label6;

        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.Graphics create()>();

        r4 = (java.awt.Graphics2D) $r3;

     label1:
        $r5 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Insets getInsets()>();

        $i1 = $r5.<java.awt.Insets: int left>;

        $i0 = $r5.<java.awt.Insets: int top>;

        virtualinvoke r4.<java.awt.Graphics2D: void translate(int,int)>($i1, $i0);

        $r6 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.painter.Painter backgroundPainter>;

        $i2 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: int getWidth()>();

        $i3 = $r5.<java.awt.Insets: int left>;

        $i5 = $i2 - $i3;

        $i4 = $r5.<java.awt.Insets: int right>;

        $i6 = $i5 - $i4;

        $i7 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: int getHeight()>();

        $i8 = $r5.<java.awt.Insets: int top>;

        $i10 = $i7 - $i8;

        $i9 = $r5.<java.awt.Insets: int bottom>;

        $i11 = $i10 - $i9;

        interfaceinvoke $r6.<org.jdesktop.swingx.painter.Painter: void paint(java.awt.Graphics2D,java.lang.Object,int,int)>(r4, r0, $i6, $i11);

     label2:
        virtualinvoke r4.<java.awt.Graphics2D: void dispose()>();

        goto label5;

     label3:
        $r7 := @caughtexception;

     label4:
        virtualinvoke r4.<java.awt.Graphics2D: void dispose()>();

        throw $r7;

     label5:
        goto label7;

     label6:
        specialinvoke r0.<javax.swing.JPanel: void paintComponent(java.awt.Graphics)>(r2);

     label7:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setBackgroundPainter(org.jdesktop.swingx.painter.Painter)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.painter.Painter $r1, r2, $r3;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r2 := @parameter0: org.jdesktop.swingx.painter.Painter;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.painter.Painter getBackgroundPainter()>();

        r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.painter.Painter backgroundPainter> = r2;

        if r2 == null goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void setOpaque(boolean)>(0);

     label1:
        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.painter.Painter getBackgroundPainter()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void firePropertyChange(java.lang.String,java.lang.Object,java.lang.Object)>("backgroundPainter", $r1, $r3);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void repaint()>();

        return;
    }

    public org.jdesktop.swingx.painter.Painter getBackgroundPainter()
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.painter.Painter $r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.painter.Painter backgroundPainter>;

        return $r1;
    }

    protected void paintChildren(java.awt.Graphics)
    {
        java.lang.Throwable $r12;
        java.awt.Rectangle $r3, $r9;
        java.awt.Graphics2D $r11;
        org.jdesktop.swingx.MultiSplitLayout $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1;
        java.util.Iterator $r6;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout$Divider r8;
        java.util.List $r5;
        org.jdesktop.swingx.JXMultiSplitPane$DividerPainter $r2;
        java.awt.Graphics r1, $r10;
        java.lang.Object $r7;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r1 := @parameter0: java.awt.Graphics;

        specialinvoke r0.<javax.swing.JPanel: void paintChildren(java.awt.Graphics)>(r1);

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.JXMultiSplitPane$DividerPainter getDividerPainter()>();

        $r3 = virtualinvoke r1.<java.awt.Graphics: java.awt.Rectangle getClipBounds()>();

        if $r2 == null goto label7;

        if $r3 == null goto label7;

        $r4 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        $z0 = virtualinvoke $r4.<org.jdesktop.swingx.MultiSplitLayout: boolean hasModel()>();

        if $z0 == 0 goto label7;

        $r5 = virtualinvoke $r4.<org.jdesktop.swingx.MultiSplitLayout: java.util.List dividersThatOverlap(java.awt.Rectangle)>($r3);

        $r6 = interfaceinvoke $r5.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.jdesktop.swingx.MultiSplitLayout$Divider) $r7;

        $r9 = virtualinvoke r8.<org.jdesktop.swingx.MultiSplitLayout$Divider: java.awt.Rectangle getBounds()>();

        $i3 = $r9.<java.awt.Rectangle: int x>;

        $i2 = $r9.<java.awt.Rectangle: int y>;

        $i1 = $r9.<java.awt.Rectangle: int width>;

        $i0 = $r9.<java.awt.Rectangle: int height>;

        $r10 = virtualinvoke r1.<java.awt.Graphics: java.awt.Graphics create(int,int,int,int)>($i3, $i2, $i1, $i0);

     label2:
        $r11 = (java.awt.Graphics2D) $r10;

        $i5 = $r9.<java.awt.Rectangle: int width>;

        $i4 = $r9.<java.awt.Rectangle: int height>;

        virtualinvoke $r2.<org.jdesktop.swingx.JXMultiSplitPane$DividerPainter: void paint(java.awt.Graphics2D,java.lang.Object,int,int)>($r11, r8, $i5, $i4);

     label3:
        virtualinvoke $r10.<java.awt.Graphics: void dispose()>();

        goto label6;

     label4:
        $r12 := @caughtexception;

     label5:
        virtualinvoke $r10.<java.awt.Graphics: void dispose()>();

        throw $r12;

     label6:
        goto label1;

     label7:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void startDrag(int, int)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node $r3, $r4;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        boolean $z0, $z1, $z2;
        java.awt.Dimension $r14, $r15, $r16, $r17, $r18, $r19;
        java.awt.Rectangle $r5, $r6, $r7, $r8, $r9, $r12, $r21;
        org.jdesktop.swingx.MultiSplitLayout $r1, $r22, $r23;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61;
        org.jdesktop.swingx.MultiSplitLayout$Divider $r2, $r10, $r11, $r13, $r20;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean requestFocusInWindow()>();

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: org.jdesktop.swingx.MultiSplitLayout$Divider dividerAt(int,int)>(i0, i1);

        if $r2 == null goto label10;

        $r3 = virtualinvoke $r2.<org.jdesktop.swingx.MultiSplitLayout$Divider: org.jdesktop.swingx.MultiSplitLayout$Node previousSibling()>();

        $r4 = virtualinvoke $r2.<org.jdesktop.swingx.MultiSplitLayout$Divider: org.jdesktop.swingx.MultiSplitLayout$Node nextSibling()>();

        if $r3 == null goto label01;

        if $r4 != null goto label02;

     label01:
        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway> = 0;

        goto label09;

     label02:
        $r5 = virtualinvoke $r2.<org.jdesktop.swingx.MultiSplitLayout$Divider: java.awt.Rectangle getBounds()>();

        r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Rectangle initialDividerBounds> = $r5;

        $r6 = r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Rectangle initialDividerBounds>;

        $i2 = $r6.<java.awt.Rectangle: int x>;

        $i3 = i0 - $i2;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetX> = $i3;

        $r7 = r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Rectangle initialDividerBounds>;

        $i4 = $r7.<java.awt.Rectangle: int y>;

        $i5 = i1 - $i4;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetY> = $i5;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider> = $r2;

        $r8 = virtualinvoke $r3.<org.jdesktop.swingx.MultiSplitLayout$Node: java.awt.Rectangle getBounds()>();

        $r9 = virtualinvoke $r4.<org.jdesktop.swingx.MultiSplitLayout$Node: java.awt.Rectangle getBounds()>();

        $r10 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $z0 = virtualinvoke $r10.<org.jdesktop.swingx.MultiSplitLayout$Divider: boolean isVertical()>();

        if $z0 == 0 goto label03;

        $i50 = $r8.<java.awt.Rectangle: int x>;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i50;

        $i52 = $r9.<java.awt.Rectangle: int x>;

        $i51 = $r9.<java.awt.Rectangle: int width>;

        $i53 = $i52 + $i51;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i53;

        $i54 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $r20 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $r21 = virtualinvoke $r20.<org.jdesktop.swingx.MultiSplitLayout$Divider: java.awt.Rectangle getBounds()>();

        $i55 = $r21.<java.awt.Rectangle: int width>;

        $i56 = $i54 - $i55;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i56;

        $i57 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getLayoutMode()>();

        if $i57 != 2 goto label04;

        $i58 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i59 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getUserMinSize()>();

        $i60 = $i58 - $i59;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i60;

        goto label04;

     label03:
        $i6 = $r8.<java.awt.Rectangle: int y>;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i6;

        $i8 = $r9.<java.awt.Rectangle: int y>;

        $i7 = $r9.<java.awt.Rectangle: int height>;

        $i9 = $i8 + $i7;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i9;

        $i10 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $r11 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $r12 = virtualinvoke $r11.<org.jdesktop.swingx.MultiSplitLayout$Divider: java.awt.Rectangle getBounds()>();

        $i11 = $r12.<java.awt.Rectangle: int height>;

        $i12 = $i10 - $i11;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i12;

        $i13 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getLayoutMode()>();

        if $i13 != 2 goto label04;

        $i47 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i48 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getUserMinSize()>();

        $i49 = $i47 - $i48;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i49;

     label04:
        $i61 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getLayoutMode()>();

        if $i61 != 2 goto label05;

        $i44 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i45 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: int getUserMinSize()>();

        $i46 = $i44 + $i45;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i46;

        goto label08;

     label05:
        $r13 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $z1 = virtualinvoke $r13.<org.jdesktop.swingx.MultiSplitLayout$Divider: boolean isVertical()>();

        if $z1 == 0 goto label07;

        $i29 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i30 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $r17 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Dimension getMinNodeSize(org.jdesktop.swingx.MultiSplitLayout,org.jdesktop.swingx.MultiSplitLayout$Node)>($r1, $r3);

        $i31 = $r17.<java.awt.Dimension: int width>;

        $i32 = $i30 + $i31;

        $i33 = staticinvoke <java.lang.Math: int max(int,int)>($i29, $i32);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i33;

        $i34 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i35 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $r18 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Dimension getMinNodeSize(org.jdesktop.swingx.MultiSplitLayout,org.jdesktop.swingx.MultiSplitLayout$Node)>($r1, $r4);

        $i36 = $r18.<java.awt.Dimension: int width>;

        $i37 = $i35 - $i36;

        $i38 = staticinvoke <java.lang.Math: int min(int,int)>($i34, $i37);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i38;

        $r19 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Dimension getMaxNodeSize(org.jdesktop.swingx.MultiSplitLayout,org.jdesktop.swingx.MultiSplitLayout$Node)>($r1, $r3);

        if $r19 == null goto label06;

        $i42 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i40 = $r8.<java.awt.Rectangle: int x>;

        $i39 = $r19.<java.awt.Dimension: int width>;

        $i41 = $i40 + $i39;

        $i43 = staticinvoke <java.lang.Math: int min(int,int)>($i42, $i41);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i43;

     label06:
        goto label08;

     label07:
        $i14 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i15 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $r14 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Dimension getMinNodeSize(org.jdesktop.swingx.MultiSplitLayout,org.jdesktop.swingx.MultiSplitLayout$Node)>($r1, $r3);

        $i16 = $r14.<java.awt.Dimension: int height>;

        $i17 = $i15 + $i16;

        $i18 = staticinvoke <java.lang.Math: int max(int,int)>($i14, $i17);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i18;

        $i19 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i20 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $r15 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Dimension getMinNodeSize(org.jdesktop.swingx.MultiSplitLayout,org.jdesktop.swingx.MultiSplitLayout$Node)>($r1, $r4);

        $i21 = $r15.<java.awt.Dimension: int height>;

        $i22 = $i20 - $i21;

        $i23 = staticinvoke <java.lang.Math: int min(int,int)>($i19, $i22);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i23;

        $r16 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Dimension getMaxNodeSize(org.jdesktop.swingx.MultiSplitLayout,org.jdesktop.swingx.MultiSplitLayout$Node)>($r1, $r3);

        if $r16 == null goto label08;

        $i27 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i25 = $r8.<java.awt.Rectangle: int y>;

        $i24 = $r16.<java.awt.Dimension: int height>;

        $i26 = $i25 + $i24;

        $i28 = staticinvoke <java.lang.Math: int min(int,int)>($i27, $i26);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i28;

     label08:
        $r22 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        $z2 = virtualinvoke $r22.<org.jdesktop.swingx.MultiSplitLayout: boolean getFloatingDividers()>();

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean oldFloatingDividers> = $z2;

        $r23 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        virtualinvoke $r23.<org.jdesktop.swingx.MultiSplitLayout: void setFloatingDividers(boolean)>(0);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway> = 1;

     label09:
        goto label11;

     label10:
        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway> = 0;

     label11:
        return;
    }

    protected java.awt.Dimension getMaxNodeSize(org.jdesktop.swingx.MultiSplitLayout, org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        org.jdesktop.swingx.MultiSplitLayout$Node r2;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout r1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r1 := @parameter0: org.jdesktop.swingx.MultiSplitLayout;

        r2 := @parameter1: org.jdesktop.swingx.MultiSplitLayout$Node;

        return null;
    }

    protected java.awt.Dimension getMinNodeSize(org.jdesktop.swingx.MultiSplitLayout, org.jdesktop.swingx.MultiSplitLayout$Node)
    {
        java.awt.Dimension $r2;
        org.jdesktop.swingx.JXMultiSplitPane r3;
        org.jdesktop.swingx.MultiSplitLayout r0;
        org.jdesktop.swingx.MultiSplitLayout$Node r1;

        r3 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r0 := @parameter0: org.jdesktop.swingx.MultiSplitLayout;

        r1 := @parameter1: org.jdesktop.swingx.MultiSplitLayout$Node;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.MultiSplitLayout: java.awt.Dimension minimumNodeSize(org.jdesktop.swingx.MultiSplitLayout$Node)>(r1);

        return $r2;
    }

    private void repaintDragLimits()
    {
        java.awt.Rectangle $r2;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout$Divider $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout$Divider: java.awt.Rectangle getBounds()>();

        $r3 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $z0 = virtualinvoke $r3.<org.jdesktop.swingx.MultiSplitLayout$Divider: boolean isVertical()>();

        if $z0 == 0 goto label1;

        $i4 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $r2.<java.awt.Rectangle: int x> = $i4;

        $i6 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i5 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i7 = $i6 - $i5;

        $r2.<java.awt.Rectangle: int width> = $i7;

        goto label2;

     label1:
        $i0 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $r2.<java.awt.Rectangle: int y> = $i0;

        $i2 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i3 = $i2 - $i1;

        $r2.<java.awt.Rectangle: int height> = $i3;

     label2:
        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void repaint(java.awt.Rectangle)>($r2);

        return;
    }

    private void updateDrag(int, int)
    {
        java.awt.Rectangle $r2, $r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17;
        boolean $z0, $z1, $z2;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout$Divider $r1, $r4, $r5;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        i9 := @parameter0: int;

        i0 := @parameter1: int;

        $z0 = r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway>;

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout$Divider: java.awt.Rectangle getBounds()>();

        $r3 = new java.awt.Rectangle;

        specialinvoke $r3.<java.awt.Rectangle: void <init>(java.awt.Rectangle)>($r2);

        $r4 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $z1 = virtualinvoke $r4.<org.jdesktop.swingx.MultiSplitLayout$Divider: boolean isVertical()>();

        if $z1 == 0 goto label2;

        $i10 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetX>;

        $i11 = i9 - $i10;

        $r3.<java.awt.Rectangle: int x> = $i11;

        $i13 = $r3.<java.awt.Rectangle: int x>;

        $i12 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i14 = staticinvoke <java.lang.Math: int max(int,int)>($i13, $i12);

        $r3.<java.awt.Rectangle: int x> = $i14;

        $i16 = $r3.<java.awt.Rectangle: int x>;

        $i15 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i17 = staticinvoke <java.lang.Math: int min(int,int)>($i16, $i15);

        $r3.<java.awt.Rectangle: int x> = $i17;

        goto label3;

     label2:
        $i1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetY>;

        $i2 = i0 - $i1;

        $r3.<java.awt.Rectangle: int y> = $i2;

        $i4 = $r3.<java.awt.Rectangle: int y>;

        $i3 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin>;

        $i5 = staticinvoke <java.lang.Math: int max(int,int)>($i4, $i3);

        $r3.<java.awt.Rectangle: int y> = $i5;

        $i7 = $r3.<java.awt.Rectangle: int y>;

        $i6 = r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax>;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i6);

        $r3.<java.awt.Rectangle: int y> = $i8;

     label3:
        $r5 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        virtualinvoke $r5.<org.jdesktop.swingx.MultiSplitLayout$Divider: void setBounds(java.awt.Rectangle)>($r3);

        $z2 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean isContinuousLayout()>();

        if $z2 == 0 goto label4;

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void revalidate()>();

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void repaintDragLimits()>();

        goto label5;

     label4:
        $r6 = virtualinvoke $r2.<java.awt.Rectangle: java.awt.Rectangle union(java.awt.Rectangle)>($r3);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void repaint(java.awt.Rectangle)>($r6);

     label5:
        return;
    }

    private void clearDragState()
    {
        int $i1, $i3;
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider> = null;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Rectangle initialDividerBounds> = null;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean oldFloatingDividers> = 1;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetY> = 0;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragOffsetX> = 0;

        $i1 = (int) -1;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMax> = $i1;

        $i3 = (int) -1;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: int dragMin> = $i3;

        r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway> = 0;

        return;
    }

    private void finishDrag(int, int)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        java.awt.Cursor $r1;
        int i0, i1;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $z0 = r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void clearDragState()>();

        $z1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean isContinuousLayout()>();

        if $z1 != 0 goto label1;

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void revalidate()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void repaint()>();

     label1:
        $r1 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void setCursor(java.awt.Cursor)>($r1);

        return;
    }

    private void cancelDrag()
    {
        java.awt.Rectangle $r1;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        org.jdesktop.swingx.MultiSplitLayout $r3;
        java.awt.Cursor $r4;
        org.jdesktop.swingx.MultiSplitLayout$Divider $r2;
        boolean $z0, $z1;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $z0 = r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway>;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout$Divider dragDivider>;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: java.awt.Rectangle initialDividerBounds>;

        virtualinvoke $r2.<org.jdesktop.swingx.MultiSplitLayout$Divider: void setBounds(java.awt.Rectangle)>($r1);

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        $z1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean oldFloatingDividers>;

        virtualinvoke $r3.<org.jdesktop.swingx.MultiSplitLayout: void setFloatingDividers(boolean)>($z1);

        $r4 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(0);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void setCursor(java.awt.Cursor)>($r4);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void repaint()>();

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void revalidate()>();

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void clearDragState()>();

     label1:
        return;
    }

    private void updateCursor(int, int, boolean)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        java.awt.Cursor $r3;
        org.jdesktop.swingx.MultiSplitLayout$Divider $r2;
        byte b2, $b3;
        org.jdesktop.swingx.MultiSplitLayout $r1;
        int i0, i1;
        boolean $z0, z1, $z2;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        z1 := @parameter2: boolean;

        $z0 = r0.<org.jdesktop.swingx.JXMultiSplitPane: boolean dragUnderway>;

        if $z0 == 0 goto label1;

        return;

     label1:
        b2 = 0;

        if z1 == 0 goto label4;

        $r1 = virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: org.jdesktop.swingx.MultiSplitLayout getMultiSplitLayout()>();

        $r2 = virtualinvoke $r1.<org.jdesktop.swingx.MultiSplitLayout: org.jdesktop.swingx.MultiSplitLayout$Divider dividerAt(int,int)>(i0, i1);

        if $r2 == null goto label4;

        $z2 = virtualinvoke $r2.<org.jdesktop.swingx.MultiSplitLayout$Divider: boolean isVertical()>();

        if $z2 == 0 goto label2;

        $b3 = 11;

        goto label3;

     label2:
        $b3 = 8;

     label3:
        b2 = $b3;

     label4:
        $r3 = staticinvoke <java.awt.Cursor: java.awt.Cursor getPredefinedCursor(int)>(b2);

        virtualinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void setCursor(java.awt.Cursor)>($r3);

        return;
    }

    public javax.accessibility.AccessibleContext getAccessibleContext()
    {
        org.jdesktop.swingx.JXMultiSplitPane$AccessibleMultiSplitPane $r3;
        org.jdesktop.swingx.JXMultiSplitPane r0;
        javax.accessibility.AccessibleContext $r1, $r2;

        r0 := @this: org.jdesktop.swingx.JXMultiSplitPane;

        $r1 = r0.<org.jdesktop.swingx.JXMultiSplitPane: javax.accessibility.AccessibleContext accessibleContext>;

        if $r1 != null goto label1;

        $r3 = new org.jdesktop.swingx.JXMultiSplitPane$AccessibleMultiSplitPane;

        specialinvoke $r3.<org.jdesktop.swingx.JXMultiSplitPane$AccessibleMultiSplitPane: void <init>(org.jdesktop.swingx.JXMultiSplitPane)>(r0);

        r0.<org.jdesktop.swingx.JXMultiSplitPane: javax.accessibility.AccessibleContext accessibleContext> = $r3;

     label1:
        $r2 = r0.<org.jdesktop.swingx.JXMultiSplitPane: javax.accessibility.AccessibleContext accessibleContext>;

        return $r2;
    }

    static void access$200(org.jdesktop.swingx.JXMultiSplitPane, int, int, boolean)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;
        int i0, i1;
        boolean z0;

        r0 := @parameter0: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        z0 := @parameter3: boolean;

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void updateCursor(int,int,boolean)>(i0, i1, z0);

        return;
    }

    static void access$300(org.jdesktop.swingx.JXMultiSplitPane, int, int)
    {
        int i0, i1;
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void startDrag(int,int)>(i0, i1);

        return;
    }

    static void access$400(org.jdesktop.swingx.JXMultiSplitPane, int, int)
    {
        int i0, i1;
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void finishDrag(int,int)>(i0, i1);

        return;
    }

    static void access$500(org.jdesktop.swingx.JXMultiSplitPane, int, int)
    {
        int i0, i1;
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXMultiSplitPane;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void updateDrag(int,int)>(i0, i1);

        return;
    }

    static void access$600(org.jdesktop.swingx.JXMultiSplitPane)
    {
        org.jdesktop.swingx.JXMultiSplitPane r0;

        r0 := @parameter0: org.jdesktop.swingx.JXMultiSplitPane;

        specialinvoke r0.<org.jdesktop.swingx.JXMultiSplitPane: void cancelDrag()>();

        return;
    }
}
