public class org.apache.log4j.net.SocketNode extends java.lang.Object implements java.lang.Runnable
{
    java.net.Socket socket;
    org.apache.log4j.spi.LoggerRepository hierarchy;
    java.io.ObjectInputStream ois;
    static org.apache.log4j.Logger logger;
    static java.lang.Class class$org$apache$log4j$net$SocketNode;

    public void <init>(java.net.Socket, org.apache.log4j.spi.LoggerRepository)
    {
        java.net.Socket r1;
        java.io.BufferedInputStream $r4;
        java.io.ObjectInputStream $r3;
        java.io.InterruptedIOException $r18;
        org.apache.log4j.Logger $r8, $r14, $r21;
        java.lang.StringBuffer $r7, $r9, $r10, $r13, $r15, $r16, $r20, $r22, $r23;
        java.lang.Thread $r19;
        java.lang.String $r11, $r17, $r24;
        java.io.IOException $r12;
        java.lang.RuntimeException $r6;
        org.apache.log4j.spi.LoggerRepository r2;
        org.apache.log4j.net.SocketNode r0;
        java.io.InputStream $r5;

        r0 := @this: org.apache.log4j.net.SocketNode;

        r1 := @parameter0: java.net.Socket;

        r2 := @parameter1: org.apache.log4j.spi.LoggerRepository;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket> = r1;

        r0.<org.apache.log4j.net.SocketNode: org.apache.log4j.spi.LoggerRepository hierarchy> = r2;

     label1:
        $r3 = new java.io.ObjectInputStream;

        $r4 = new java.io.BufferedInputStream;

        $r5 = virtualinvoke r1.<java.net.Socket: java.io.InputStream getInputStream()>();

        specialinvoke $r4.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r5);

        specialinvoke $r3.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r4);

        r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois> = $r3;

     label2:
        goto label6;

     label3:
        $r18 := @caughtexception;

        $r19 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r19.<java.lang.Thread: void interrupt()>();

        $r21 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not open ObjectInputStream to ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r21.<org.apache.log4j.Category: void error(java.lang.Object,java.lang.Throwable)>($r24, $r18);

        goto label6;

     label4:
        $r12 := @caughtexception;

        $r14 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not open ObjectInputStream to ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r14.<org.apache.log4j.Category: void error(java.lang.Object,java.lang.Throwable)>($r17, $r12);

        goto label6;

     label5:
        $r6 := @caughtexception;

        $r8 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not open ObjectInputStream to ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r8.<org.apache.log4j.Category: void error(java.lang.Object,java.lang.Throwable)>($r11, $r6);

     label6:
        return;

        catch java.io.InterruptedIOException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.RuntimeException from label1 to label2 with label5;
    }

    public void run()
    {
        java.lang.Thread $r7, $r16, $r26, $r41, $r46, $r57, $r67, $r77;
        org.apache.log4j.Level $r86, $r87;
        java.lang.Exception $r8, $r17, $r20, $r27, $r42, $r58, $r68, $r78;
        org.apache.log4j.net.SocketNode r0;
        java.lang.Throwable $r11;
        java.io.InterruptedIOException $r6, $r15, $r25, $r40, $r45, $r56, $r66, $r76;
        java.net.SocketException $r61;
        java.lang.StringBuffer $r31, $r33, $r34, $r47, $r49, $r50;
        java.lang.String $r35, $r51, $r84;
        java.io.IOException $r5, $r14, $r24, $r30, $r39, $r55, $r65, $r75;
        java.io.ObjectInputStream $r1, $r2, $r4, $r12, $r13, $r22, $r23, $r37, $r38, $r53, $r54, $r63, $r64, $r73, $r74, $r80;
        org.apache.log4j.Logger $r9, $r18, $r21, $r28, $r32, $r36, $r43, $r48, $r52, $r59, $r62, $r69, $r72, $r79, $r85;
        boolean $z0;
        java.io.EOFException $r71;
        java.net.Socket $r3, $r10, $r19, $r29, $r44, $r60, $r70, $r88, $r89, $r90, $r91, $r92, $r93, $r94;
        org.apache.log4j.spi.LoggingEvent $r82;
        java.lang.Object $r81;
        org.apache.log4j.spi.LoggerRepository $r83;

        r0 := @this: org.apache.log4j.net.SocketNode;

     label01:
        $r1 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r1 == null goto label03;

     label02:
        $r80 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        $r81 = virtualinvoke $r80.<java.io.ObjectInputStream: java.lang.Object readObject()>();

        $r82 = (org.apache.log4j.spi.LoggingEvent) $r81;

        $r83 = r0.<org.apache.log4j.net.SocketNode: org.apache.log4j.spi.LoggerRepository hierarchy>;

        $r84 = virtualinvoke $r82.<org.apache.log4j.spi.LoggingEvent: java.lang.String getLoggerName()>();

        $r85 = interfaceinvoke $r83.<org.apache.log4j.spi.LoggerRepository: org.apache.log4j.Logger getLogger(java.lang.String)>($r84);

        $r86 = virtualinvoke $r82.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $r87 = virtualinvoke $r85.<org.apache.log4j.Category: org.apache.log4j.Level getEffectiveLevel()>();

        $z0 = virtualinvoke $r86.<org.apache.log4j.Priority: boolean isGreaterOrEqual(org.apache.log4j.Priority)>($r87);

        if $z0 == 0 goto label02;

        virtualinvoke $r85.<org.apache.log4j.Category: void callAppenders(org.apache.log4j.spi.LoggingEvent)>($r82);

        goto label02;

     label03:
        $r2 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r2 == null goto label07;

     label04:
        $r4 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r4.<java.io.ObjectInputStream: void close()>();

     label05:
        goto label07;

     label06:
        $r78 := @caughtexception;

        $r79 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r79.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r78);

     label07:
        $r88 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r88 == null goto label73;

     label08:
        $r3 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r3.<java.net.Socket: void close()>();

     label09:
        goto label73;

     label10:
        $r76 := @caughtexception;

        $r77 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r77.<java.lang.Thread: void interrupt()>();

        goto label73;

     label11:
        $r75 := @caughtexception;

        goto label73;

     label12:
        $r71 := @caughtexception;

        $r72 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r72.<org.apache.log4j.Category: void info(java.lang.Object)>("Caught java.io.EOFException closing conneciton.");

     label13:
        $r73 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r73 == null goto label17;

     label14:
        $r74 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r74.<java.io.ObjectInputStream: void close()>();

     label15:
        goto label17;

     label16:
        $r68 := @caughtexception;

        $r69 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r69.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r68);

     label17:
        $r89 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r89 == null goto label73;

     label18:
        $r70 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r70.<java.net.Socket: void close()>();

     label19:
        goto label73;

     label20:
        $r66 := @caughtexception;

        $r67 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r67.<java.lang.Thread: void interrupt()>();

        goto label73;

     label21:
        $r65 := @caughtexception;

        goto label73;

     label22:
        $r61 := @caughtexception;

        $r62 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r62.<org.apache.log4j.Category: void info(java.lang.Object)>("Caught java.net.SocketException closing conneciton.");

     label23:
        $r63 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r63 == null goto label27;

     label24:
        $r64 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r64.<java.io.ObjectInputStream: void close()>();

     label25:
        goto label27;

     label26:
        $r58 := @caughtexception;

        $r59 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r59.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r58);

     label27:
        $r90 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r90 == null goto label73;

     label28:
        $r60 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r60.<java.net.Socket: void close()>();

     label29:
        goto label73;

     label30:
        $r56 := @caughtexception;

        $r57 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r57.<java.lang.Thread: void interrupt()>();

        goto label73;

     label31:
        $r55 := @caughtexception;

        goto label73;

     label32:
        $r45 := @caughtexception;

        $r46 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r46.<java.lang.Thread: void interrupt()>();

        $r48 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        $r47 = new java.lang.StringBuffer;

        specialinvoke $r47.<java.lang.StringBuffer: void <init>()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught java.io.InterruptedIOException: ");

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r45);

        $r51 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r48.<org.apache.log4j.Category: void info(java.lang.Object)>($r51);

        $r52 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r52.<org.apache.log4j.Category: void info(java.lang.Object)>("Closing connection.");

     label33:
        $r53 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r53 == null goto label37;

     label34:
        $r54 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r54.<java.io.ObjectInputStream: void close()>();

     label35:
        goto label37;

     label36:
        $r42 := @caughtexception;

        $r43 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r43.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r42);

     label37:
        $r91 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r91 == null goto label73;

     label38:
        $r44 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r44.<java.net.Socket: void close()>();

     label39:
        goto label73;

     label40:
        $r40 := @caughtexception;

        $r41 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r41.<java.lang.Thread: void interrupt()>();

        goto label73;

     label41:
        $r39 := @caughtexception;

        goto label73;

     label42:
        $r30 := @caughtexception;

        $r32 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught java.io.IOException: ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r30);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r32.<org.apache.log4j.Category: void info(java.lang.Object)>($r35);

        $r36 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r36.<org.apache.log4j.Category: void info(java.lang.Object)>("Closing connection.");

     label43:
        $r37 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r37 == null goto label47;

     label44:
        $r38 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r38.<java.io.ObjectInputStream: void close()>();

     label45:
        goto label47;

     label46:
        $r27 := @caughtexception;

        $r28 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r28.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r27);

     label47:
        $r92 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r92 == null goto label73;

     label48:
        $r29 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r29.<java.net.Socket: void close()>();

     label49:
        goto label73;

     label50:
        $r25 := @caughtexception;

        $r26 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r26.<java.lang.Thread: void interrupt()>();

        goto label73;

     label51:
        $r24 := @caughtexception;

        goto label73;

     label52:
        $r20 := @caughtexception;

        $r21 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r21.<org.apache.log4j.Category: void error(java.lang.Object,java.lang.Throwable)>("Unexpected exception. Closing conneciton.", $r20);

     label53:
        $r22 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r22 == null goto label57;

     label54:
        $r23 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r23.<java.io.ObjectInputStream: void close()>();

     label55:
        goto label57;

     label56:
        $r17 := @caughtexception;

        $r18 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r18.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r17);

     label57:
        $r93 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r93 == null goto label73;

     label58:
        $r19 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r19.<java.net.Socket: void close()>();

     label59:
        goto label73;

     label60:
        $r15 := @caughtexception;

        $r16 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r16.<java.lang.Thread: void interrupt()>();

        goto label73;

     label61:
        $r14 := @caughtexception;

        goto label73;

     label62:
        $r11 := @caughtexception;

     label63:
        $r12 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        if $r12 == null goto label67;

     label64:
        $r13 = r0.<org.apache.log4j.net.SocketNode: java.io.ObjectInputStream ois>;

        virtualinvoke $r13.<java.io.ObjectInputStream: void close()>();

     label65:
        goto label67;

     label66:
        $r8 := @caughtexception;

        $r9 = <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger>;

        virtualinvoke $r9.<org.apache.log4j.Category: void info(java.lang.Object,java.lang.Throwable)>("Could not close connection.", $r8);

     label67:
        $r94 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        if $r94 == null goto label72;

     label68:
        $r10 = r0.<org.apache.log4j.net.SocketNode: java.net.Socket socket>;

        virtualinvoke $r10.<java.net.Socket: void close()>();

     label69:
        goto label72;

     label70:
        $r6 := @caughtexception;

        $r7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r7.<java.lang.Thread: void interrupt()>();

        goto label72;

     label71:
        $r5 := @caughtexception;

     label72:
        throw $r11;

     label73:
        return;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.io.InterruptedIOException from label08 to label09 with label10;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.io.EOFException from label01 to label03 with label12;
        catch java.lang.Exception from label14 to label15 with label16;
        catch java.io.InterruptedIOException from label18 to label19 with label20;
        catch java.io.IOException from label18 to label19 with label21;
        catch java.net.SocketException from label01 to label03 with label22;
        catch java.lang.Exception from label24 to label25 with label26;
        catch java.io.InterruptedIOException from label28 to label29 with label30;
        catch java.io.IOException from label28 to label29 with label31;
        catch java.io.InterruptedIOException from label01 to label03 with label32;
        catch java.lang.Exception from label34 to label35 with label36;
        catch java.io.InterruptedIOException from label38 to label39 with label40;
        catch java.io.IOException from label38 to label39 with label41;
        catch java.io.IOException from label01 to label03 with label42;
        catch java.lang.Exception from label44 to label45 with label46;
        catch java.io.InterruptedIOException from label48 to label49 with label50;
        catch java.io.IOException from label48 to label49 with label51;
        catch java.lang.Exception from label01 to label03 with label52;
        catch java.lang.Exception from label54 to label55 with label56;
        catch java.io.InterruptedIOException from label58 to label59 with label60;
        catch java.io.IOException from label58 to label59 with label61;
        catch java.lang.Throwable from label01 to label03 with label62;
        catch java.lang.Throwable from label12 to label13 with label62;
        catch java.lang.Throwable from label22 to label23 with label62;
        catch java.lang.Throwable from label32 to label33 with label62;
        catch java.lang.Throwable from label42 to label43 with label62;
        catch java.lang.Throwable from label52 to label53 with label62;
        catch java.lang.Exception from label64 to label65 with label66;
        catch java.io.InterruptedIOException from label68 to label69 with label70;
        catch java.io.IOException from label68 to label69 with label71;
        catch java.lang.Throwable from label62 to label63 with label62;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.apache.log4j.Logger $r1;
        java.lang.Class $r0, $r2;

        $r0 = <org.apache.log4j.net.SocketNode: java.lang.Class class$org$apache$log4j$net$SocketNode>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <org.apache.log4j.net.SocketNode: java.lang.Class class$(java.lang.String)>("org.apache.log4j.net.SocketNode");

        <org.apache.log4j.net.SocketNode: java.lang.Class class$org$apache$log4j$net$SocketNode> = $r2;

        goto label2;

     label1:
        $r2 = <org.apache.log4j.net.SocketNode: java.lang.Class class$org$apache$log4j$net$SocketNode>;

     label2:
        $r1 = staticinvoke <org.apache.log4j.Logger: org.apache.log4j.Logger getLogger(java.lang.Class)>($r2);

        <org.apache.log4j.net.SocketNode: org.apache.log4j.Logger logger> = $r1;

        return;
    }
}
