public abstract class com.hp.hpl.jena.sparql.lang.UpdateParser extends java.lang.Object
{

    public void <init>()
    {
        com.hp.hpl.jena.sparql.lang.UpdateParser r0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.UpdateParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void parse(com.hp.hpl.jena.sparql.modify.UpdateSink, java.lang.String) throws com.hp.hpl.jena.query.QueryParseException
    {
        com.hp.hpl.jena.sparql.modify.UpdateSink r1;
        com.hp.hpl.jena.sparql.lang.UpdateParser r0;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.lang.UpdateParser;

        r1 := @parameter0: com.hp.hpl.jena.sparql.modify.UpdateSink;

        r2 := @parameter1: java.lang.String;

        $z0 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("\ufeff");

        if $z0 == 0 goto label1;

        r2 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

     label1:
        virtualinvoke r0.<com.hp.hpl.jena.sparql.lang.UpdateParser: void parse$(com.hp.hpl.jena.sparql.modify.UpdateSink,java.lang.String)>(r1, r2);

        return;
    }

    protected abstract void parse$(com.hp.hpl.jena.sparql.modify.UpdateSink, java.lang.String) throws com.hp.hpl.jena.query.QueryParseException;

    public void parse(com.hp.hpl.jena.sparql.modify.UpdateSink, java.io.InputStream) throws com.hp.hpl.jena.query.QueryParseException
    {
        com.hp.hpl.jena.sparql.modify.UpdateSink r3;
        com.hp.hpl.jena.sparql.lang.UpdateParser r2;
        org.apache.jena.atlas.io.PeekReader $r1;
        java.io.InputStream r0;

        r2 := @this: com.hp.hpl.jena.sparql.lang.UpdateParser;

        r3 := @parameter0: com.hp.hpl.jena.sparql.modify.UpdateSink;

        r0 := @parameter1: java.io.InputStream;

        $r1 = staticinvoke <org.apache.jena.atlas.io.PeekReader: org.apache.jena.atlas.io.PeekReader makeUTF8(java.io.InputStream)>(r0);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.lang.UpdateParser: void parse$(com.hp.hpl.jena.sparql.modify.UpdateSink,org.apache.jena.atlas.io.PeekReader)>(r3, $r1);

        return;
    }

    protected abstract void parse$(com.hp.hpl.jena.sparql.modify.UpdateSink, org.apache.jena.atlas.io.PeekReader) throws com.hp.hpl.jena.query.QueryParseException;

    public static boolean canParse(com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.sparql.lang.UpdateParserRegistry $r0;
        com.hp.hpl.jena.query.Syntax r1;
        boolean $z0;

        r1 := @parameter0: com.hp.hpl.jena.query.Syntax;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.lang.UpdateParserRegistry: com.hp.hpl.jena.sparql.lang.UpdateParserRegistry get()>();

        $z0 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.lang.UpdateParserRegistry: boolean containsFactory(com.hp.hpl.jena.query.Syntax)>(r1);

        return $z0;
    }

    public static com.hp.hpl.jena.sparql.lang.UpdateParser createParser(com.hp.hpl.jena.query.Syntax)
    {
        com.hp.hpl.jena.sparql.lang.UpdateParserRegistry $r0;
        com.hp.hpl.jena.sparql.lang.UpdateParser $r2;
        com.hp.hpl.jena.query.Syntax r1;

        r1 := @parameter0: com.hp.hpl.jena.query.Syntax;

        $r0 = staticinvoke <com.hp.hpl.jena.sparql.lang.UpdateParserRegistry: com.hp.hpl.jena.sparql.lang.UpdateParserRegistry get()>();

        $r2 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.lang.UpdateParserRegistry: com.hp.hpl.jena.sparql.lang.UpdateParser createParser(com.hp.hpl.jena.query.Syntax)>(r1);

        return $r2;
    }
}
