public class org.codehaus.groovy.control.Janitor extends java.lang.Object implements org.codehaus.groovy.control.HasCleanup
{
    private final java.util.Set pending;

    public void <init>()
    {
        java.util.HashSet $r1;
        org.codehaus.groovy.control.Janitor r0;

        r0 := @this: org.codehaus.groovy.control.Janitor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashSet;

        specialinvoke $r1.<java.util.HashSet: void <init>()>();

        r0.<org.codehaus.groovy.control.Janitor: java.util.Set pending> = $r1;

        return;
    }

    public void register(org.codehaus.groovy.control.HasCleanup)
    {
        java.util.Set $r2;
        org.codehaus.groovy.control.Janitor r0;
        org.codehaus.groovy.control.HasCleanup r1;

        r0 := @this: org.codehaus.groovy.control.Janitor;

        r1 := @parameter0: org.codehaus.groovy.control.HasCleanup;

        $r2 = r0.<org.codehaus.groovy.control.Janitor: java.util.Set pending>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>(r1);

        return;
    }

    public void cleanup()
    {
        java.util.Iterator $r2;
        java.util.Set $r1, $r3;
        org.codehaus.groovy.control.Janitor r0;
        java.lang.Exception $r6;
        org.codehaus.groovy.control.HasCleanup r5;
        java.lang.Object $r4;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.control.Janitor;

        $r1 = r0.<org.codehaus.groovy.control.Janitor: java.util.Set pending>;

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.groovy.control.HasCleanup) $r4;

     label2:
        interfaceinvoke r5.<org.codehaus.groovy.control.HasCleanup: void cleanup()>();

     label3:
        goto label5;

     label4:
        $r6 := @caughtexception;

     label5:
        goto label1;

     label6:
        $r3 = r0.<org.codehaus.groovy.control.Janitor: java.util.Set pending>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
