final class com.mycila.inject.internal.cglib.core.EmitUtils$6 extends java.lang.Object implements com.mycila.inject.internal.cglib.core.ProcessSwitchCallback
{
    private final java.util.Map val$buckets;
    private final boolean val$skipEquals;
    private final com.mycila.inject.internal.cglib.core.CodeEmitter val$e;
    private final com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback;
    private final com.mycila.inject.internal.asm.Label val$end;
    private final com.mycila.inject.internal.asm.Label val$def;

    void <init>(java.util.Map, boolean, com.mycila.inject.internal.cglib.core.CodeEmitter, com.mycila.inject.internal.cglib.core.ObjectSwitchCallback, com.mycila.inject.internal.asm.Label, com.mycila.inject.internal.asm.Label)
    {
        com.mycila.inject.internal.cglib.core.ObjectSwitchCallback r3;
        java.util.Map r1;
        com.mycila.inject.internal.asm.Label r4, r5;
        com.mycila.inject.internal.cglib.core.EmitUtils$6 r0;
        com.mycila.inject.internal.cglib.core.CodeEmitter r2;
        boolean z0;

        r0 := @this: com.mycila.inject.internal.cglib.core.EmitUtils$6;

        r1 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        r2 := @parameter2: com.mycila.inject.internal.cglib.core.CodeEmitter;

        r3 := @parameter3: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback;

        r4 := @parameter4: com.mycila.inject.internal.asm.Label;

        r5 := @parameter5: com.mycila.inject.internal.asm.Label;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: java.util.Map val$buckets> = r1;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: boolean val$skipEquals> = z0;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e> = r2;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback> = r3;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.asm.Label val$end> = r4;

        r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.asm.Label val$def> = r5;

        return;
    }

    public void processCase(int, com.mycila.inject.internal.asm.Label) throws java.lang.Exception
    {
        java.lang.Integer $r1;
        java.util.Map $r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        com.mycila.inject.internal.cglib.core.EmitUtils$6 r0;
        java.util.List r4;
        com.mycila.inject.internal.cglib.core.ObjectSwitchCallback $r15, $r22;
        com.mycila.inject.internal.asm.Type $r10;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r8, $r9, $r13, $r16, $r17, $r19, $r20, $r21, $r26;
        int i0, $i1;
        java.lang.String r7, $r25;
        java.util.Iterator $r5;
        com.mycila.inject.internal.cglib.core.Signature $r11;
        com.mycila.inject.internal.asm.Label $r12, $r14, $r18, $r24, r27, r28;
        java.lang.Object $r3, $r6, $r23;

        r0 := @this: com.mycila.inject.internal.cglib.core.EmitUtils$6;

        i0 := @parameter0: int;

        r27 := @parameter1: com.mycila.inject.internal.asm.Label;

        $r2 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: java.util.Map val$buckets>;

        $r1 = new java.lang.Integer;

        specialinvoke $r1.<java.lang.Integer: void <init>(int)>(i0);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r4 = (java.util.List) $r3;

        r28 = null;

        $z0 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: boolean val$skipEquals>;

        if $z0 == 0 goto label2;

        $i1 = interfaceinvoke r4.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $z3 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: boolean val$skipEquals>;

        if $z3 == 0 goto label1;

        $r26 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r26.<com.mycila.inject.internal.cglib.core.CodeEmitter: void pop()>();

     label1:
        $r22 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback>;

        $r23 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        $r25 = (java.lang.String) $r23;

        $r24 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.asm.Label val$end>;

        interfaceinvoke $r22.<com.mycila.inject.internal.cglib.core.ObjectSwitchCallback: void processCase(java.lang.Object,com.mycila.inject.internal.asm.Label)>($r25, $r24);

        goto label8;

     label2:
        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z4 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label8;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        if r28 == null goto label4;

        $r21 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r21.<com.mycila.inject.internal.cglib.core.CodeEmitter: void mark(com.mycila.inject.internal.asm.Label)>(r28);

     label4:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r20 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r20.<com.mycila.inject.internal.cglib.core.CodeEmitter: void dup()>();

     label5:
        $r8 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r8.<com.mycila.inject.internal.cglib.core.CodeEmitter: void push(java.lang.String)>(r7);

        $r9 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r10 = <com.mycila.inject.internal.cglib.core.Constants: com.mycila.inject.internal.asm.Type TYPE_OBJECT>;

        $r11 = staticinvoke <com.mycila.inject.internal.cglib.core.EmitUtils: com.mycila.inject.internal.cglib.core.Signature access$100()>();

        virtualinvoke $r9.<com.mycila.inject.internal.cglib.core.CodeEmitter: void invoke_virtual(com.mycila.inject.internal.asm.Type,com.mycila.inject.internal.cglib.core.Signature)>($r10, $r11);

        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r17 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r16 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r18 = virtualinvoke $r16.<com.mycila.inject.internal.cglib.core.CodeEmitter: com.mycila.inject.internal.asm.Label make_label()>();

        r28 = $r18;

        virtualinvoke $r17.<com.mycila.inject.internal.cglib.core.CodeEmitter: void if_jump(int,com.mycila.inject.internal.asm.Label)>(153, $r18);

        $r19 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r19.<com.mycila.inject.internal.cglib.core.CodeEmitter: void pop()>();

        goto label7;

     label6:
        $r13 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        $r12 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.asm.Label val$def>;

        virtualinvoke $r13.<com.mycila.inject.internal.cglib.core.CodeEmitter: void if_jump(int,com.mycila.inject.internal.asm.Label)>(153, $r12);

     label7:
        $r15 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.ObjectSwitchCallback val$callback>;

        $r14 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.asm.Label val$end>;

        interfaceinvoke $r15.<com.mycila.inject.internal.cglib.core.ObjectSwitchCallback: void processCase(java.lang.Object,com.mycila.inject.internal.asm.Label)>(r7, $r14);

        goto label3;

     label8:
        return;
    }

    public void processDefault()
    {
        com.mycila.inject.internal.cglib.core.EmitUtils$6 r0;
        com.mycila.inject.internal.cglib.core.CodeEmitter $r1;

        r0 := @this: com.mycila.inject.internal.cglib.core.EmitUtils$6;

        $r1 = r0.<com.mycila.inject.internal.cglib.core.EmitUtils$6: com.mycila.inject.internal.cglib.core.CodeEmitter val$e>;

        virtualinvoke $r1.<com.mycila.inject.internal.cglib.core.CodeEmitter: void pop()>();

        return;
    }
}
