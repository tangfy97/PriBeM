class org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1 extends org.apache.lucene.queries.function.FunctionValues
{
    private final org.apache.lucene.spatial.util.ShapeFieldCache cache;
    private final com.spatial4j.core.shape.Point 'from';
    private final com.spatial4j.core.distance.DistanceCalculator calculator;
    private final double nullValue;
    final org.apache.lucene.index.AtomicReaderContext val$readerContext;
    final org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0;

    void <init>(org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource, org.apache.lucene.index.AtomicReaderContext) throws java.io.IOException
    {
        org.apache.lucene.spatial.util.ShapeFieldCacheProvider $r4;
        com.spatial4j.core.distance.DistanceCalculator $r12;
        org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource r1, $r3, $r8, $r10, $r13;
        com.spatial4j.core.shape.Point $r9;
        boolean $z0;
        double $d0;
        com.spatial4j.core.context.SpatialContext $r11, $r14;
        org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1 r0;
        org.apache.lucene.spatial.util.ShapeFieldCache $r7;
        org.apache.lucene.index.AtomicReaderContext r2, $r5;
        org.apache.lucene.index.AtomicReader $r6;

        r0 := @this: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1;

        r1 := @parameter0: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0> = r1;

        r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.index.AtomicReaderContext val$readerContext> = r2;

        specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues: void <init>()>();

        $r3 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0>;

        $r4 = staticinvoke <org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource: org.apache.lucene.spatial.util.ShapeFieldCacheProvider access$000(org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource)>($r3);

        $r5 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.index.AtomicReaderContext val$readerContext>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r7 = virtualinvoke $r4.<org.apache.lucene.spatial.util.ShapeFieldCacheProvider: org.apache.lucene.spatial.util.ShapeFieldCache getCache(org.apache.lucene.index.AtomicReader)>($r6);

        r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCache cache> = $r7;

        $r8 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0>;

        $r9 = staticinvoke <org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource: com.spatial4j.core.shape.Point access$100(org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource)>($r8);

        r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: com.spatial4j.core.shape.Point 'from'> = $r9;

        $r10 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0>;

        $r11 = staticinvoke <org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource: com.spatial4j.core.context.SpatialContext access$200(org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource)>($r10);

        $r12 = virtualinvoke $r11.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator getDistCalc()>();

        r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: com.spatial4j.core.distance.DistanceCalculator calculator> = $r12;

        $r13 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0>;

        $r14 = staticinvoke <org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource: com.spatial4j.core.context.SpatialContext access$200(org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource)>($r13);

        $z0 = virtualinvoke $r14.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z0 == 0 goto label1;

        $d0 = 180.0;

        goto label2;

     label1:
        $d0 = 1.7976931348623157E308;

     label2:
        r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: double nullValue> = $d0;

        return;
    }

    public float floatVal(int)
    {
        org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1 r0;
        int i0;
        float $f0;
        double $d0;

        r0 := @this: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1;

        i0 := @parameter0: int;

        $d0 = virtualinvoke r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: double doubleVal(int)>(i0);

        $f0 = (float) $d0;

        return $f0;
    }

    public double doubleVal(int)
    {
        com.spatial4j.core.distance.DistanceCalculator $r3, $r7;
        int i0, $i1, i2;
        com.spatial4j.core.shape.Point $r4, $r6, $r8, $r10;
        double $d0, $d1, d2;
        java.util.List $r2;
        org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1 r0;
        org.apache.lucene.spatial.util.ShapeFieldCache $r1;
        java.lang.Object $r5, $r9;

        r0 := @this: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCache cache>;

        $r2 = virtualinvoke $r1.<org.apache.lucene.spatial.util.ShapeFieldCache: java.util.List getShapes(int)>(i0);

        if $r2 == null goto label3;

        $r3 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: com.spatial4j.core.distance.DistanceCalculator calculator>;

        $r4 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: com.spatial4j.core.shape.Point 'from'>;

        $r5 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        $r6 = (com.spatial4j.core.shape.Point) $r5;

        d2 = interfaceinvoke $r3.<com.spatial4j.core.distance.DistanceCalculator: double distance(com.spatial4j.core.shape.Point,com.spatial4j.core.shape.Point)>($r4, $r6);

        i2 = 1;

     label1:
        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i2 >= $i1 goto label2;

        $r7 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: com.spatial4j.core.distance.DistanceCalculator calculator>;

        $r8 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: com.spatial4j.core.shape.Point 'from'>;

        $r9 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i2);

        $r10 = (com.spatial4j.core.shape.Point) $r9;

        $d1 = interfaceinvoke $r7.<com.spatial4j.core.distance.DistanceCalculator: double distance(com.spatial4j.core.shape.Point,com.spatial4j.core.shape.Point)>($r8, $r10);

        d2 = staticinvoke <java.lang.Math: double min(double,double)>(d2, $d1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return d2;

     label3:
        $d0 = r0.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: double nullValue>;

        return $d0;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource $r2;
        org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1 r1;
        int i0;
        float $f0;
        java.lang.StringBuilder $r0, $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r1 := @this: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource this$0>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource: java.lang.String description()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $f0 = virtualinvoke r1.<org.apache.lucene.spatial.util.ShapeFieldCacheDistanceValueSource$1: float floatVal(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
