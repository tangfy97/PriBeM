public class org.eclipse.jdt.internal.compiler.lookup.PackageBinding extends org.eclipse.jdt.internal.compiler.lookup.Binding implements org.eclipse.jdt.internal.compiler.lookup.TypeConstants
{
    public long tagBits;
    public char[][] compoundName;
    org.eclipse.jdt.internal.compiler.lookup.PackageBinding parent;
    public org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment;
    org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes;
    org.eclipse.jdt.internal.compiler.util.HashtableOfPackage knownPackages;

    protected void <init>()
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits> = 0L;

        return;
    }

    public void <init>(char[], org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        char[] r2;
        char[][] $r1;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r2 := @parameter0: char[];

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;

        $r1 = newarray (char[])[1];

        $r1[0] = r2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.PackageBinding,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)>($r1, null, r3);

        return;
    }

    public void <init>(char[][], org.eclipse.jdt.internal.compiler.lookup.PackageBinding, org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfPackage $r4;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, r2;
        char[][] r1;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[][];

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.Binding: void <init>()>();

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits> = 0L;

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName> = r1;

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding parent> = r2;

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment> = r3;

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes> = null;

        $r4 = new org.eclipse.jdt.internal.compiler.util.HashtableOfPackage;

        specialinvoke $r4.<org.eclipse.jdt.internal.compiler.util.HashtableOfPackage: void <init>(int)>(3);

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfPackage knownPackages> = $r4;

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        char[][] $r2;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment;

        $r2 = <org.eclipse.jdt.core.compiler.CharOperation: char[][] NO_CHAR_CHAR>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.PackageBinding,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)>($r2, null, r1);

        return;
    }

    private void addNotFoundPackage(char[])
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfPackage $r3;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        char[] r1;
        org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[];

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfPackage knownPackages>;

        $r2 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding TheNotFoundPackage>;

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.util.HashtableOfPackage: org.eclipse.jdt.internal.compiler.lookup.PackageBinding put(char[],org.eclipse.jdt.internal.compiler.lookup.PackageBinding)>(r1, $r2);

        return;
    }

    private void addNotFoundType(char[])
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType $r1, $r4, $r5;
        char[] r2;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes>;

        if $r1 != null goto label1;

        $r5 = new org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: void <init>(int)>(25);

        r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes> = $r5;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes>;

        $r3 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding TheNotFoundType>;

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding put(char[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r2, $r3);

        return;
    }

    void addPackage(org.eclipse.jdt.internal.compiler.lookup.PackageBinding)
    {
        long $l0, $l1;
        char[][] $r2, $r3;
        org.eclipse.jdt.internal.compiler.util.HashtableOfPackage $r5;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, r1;
        byte $b2;
        int $i3, $i4;
        char[] $r4;

        r1 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void clearMissingTagBit()>();

     label1:
        $r5 = r1.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfPackage knownPackages>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $i3 = lengthof $r2;

        $i4 = $i3 - 1;

        $r4 = $r3[$i4];

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.util.HashtableOfPackage: org.eclipse.jdt.internal.compiler.lookup.PackageBinding put(char[],org.eclipse.jdt.internal.compiler.lookup.PackageBinding)>($r4, r0);

        return;
    }

    void addType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType $r2, $r6, $r7;
        long $l0, $l1;
        char[][] $r3, $r4;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r1;
        byte $b2;
        int $i3, $i4;
        char[] $r5;

        r1 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label1;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void clearMissingTagBit()>();

     label1:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes>;

        if $r2 != null goto label2;

        $r7 = new org.eclipse.jdt.internal.compiler.util.HashtableOfType;

        specialinvoke $r7.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: void <init>(int)>(25);

        r1.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes> = $r7;

     label2:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[][] compoundName>;

        $i3 = lengthof $r3;

        $i4 = $i3 - 1;

        $r5 = $r4[$i4];

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding put(char[],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>($r5, r0);

        return;
    }

    void clearMissingTagBit()
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, $r1, r2;
        long $l0, $l1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r2 = r0;

     label1:
        $l0 = r2.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits>;

        $l1 = $l0 & -129L;

        r2.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits> = $l1;

        $r1 = r2.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding parent>;

        r2 = $r1;

        if $r1 != null goto label1;

        return;
    }

    public char[] computeUniqueKey(boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        char[] $r2;
        char[][] $r1;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r1, 47);

        return $r2;
    }

    private org.eclipse.jdt.internal.compiler.lookup.PackageBinding findPackage(char[])
    {
        char[][] $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, $r6;
        char[] r1;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r3, $r7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[];

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $z0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: boolean isPackage(char[][],char[])>($r2, r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[][] arrayConcat(char[][],char[])>($r4, r1);

        $r6 = new org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.PackageBinding,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment)>($r5, r0, $r7);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void addPackage(org.eclipse.jdt.internal.compiler.lookup.PackageBinding)>($r6);

        return $r6;
    }

    org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage(char[])
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, $r2, $r3;
        char[] r1;
        org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[];

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage0(char[])>(r1);

        if $r2 == null goto label2;

        $r4 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding TheNotFoundPackage>;

        if $r2 != $r4 goto label1;

        return null;

     label1:
        return $r2;

     label2:
        $r3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding findPackage(char[])>(r1);

        if $r3 == null goto label3;

        return $r3;

     label3:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void addNotFoundPackage(char[])>(r1);

        return null;
    }

    org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage0(char[])
    {
        org.eclipse.jdt.internal.compiler.util.HashtableOfPackage $r2;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, $r3;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[];

        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfPackage knownPackages>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.util.HashtableOfPackage: org.eclipse.jdt.internal.compiler.lookup.PackageBinding get(char[])>(r1);

        return $r3;
    }

    org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getType(char[])
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r5, $r9, r10;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r3, $r6;
        char[][] $r7;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        char[] r1;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r4, $r8;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[];

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getType0(char[])>(r1);

        r10 = $r2;

        if $r2 != null goto label1;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding askForType(org.eclipse.jdt.internal.compiler.lookup.PackageBinding,char[])>(r0, r1);

        r10 = $r9;

        if $r9 != null goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void addNotFoundType(char[])>(r1);

        return null;

     label1:
        $r3 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding TheNotFoundType>;

        if r10 != $r3 goto label2;

        return null;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        $r5 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment,boolean)>(r10, $r4, 0);

        $z0 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z0 == 0 goto label3;

        $r6 = new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        $r7 = newarray (char[])[1];

        $r7[0] = r1;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r7, $r5, 4);

        return $r6;

     label3:
        return $r5;
    }

    org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getType0(char[])
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.util.HashtableOfType $r1, $r3;
        char[] r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r2 := @parameter0: char[];

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.util.HashtableOfType knownTypes>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.util.HashtableOfType: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding get(char[])>(r2);

        return $r4;
    }

    public org.eclipse.jdt.internal.compiler.lookup.Binding getTypeOrPackage(char[])
    {
        long $l0, $l1;
        char[][] $r8, $r14;
        byte $b2;
        org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment $r5, $r11;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r6, $r12, r15;
        org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding $r9;
        org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding $r4, $r7, $r10, $r13;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0, $r3, $r16;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        r1 := @parameter0: char[];

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding getType0(char[])>(r1);

        r15 = $r2;

        if $r2 == null goto label2;

        $r10 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding TheNotFoundType>;

        if $r2 == $r10 goto label2;

        $l0 = $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 != 0 goto label2;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        $r12 = staticinvoke <org.eclipse.jdt.internal.compiler.lookup.BinaryTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment,boolean)>($r2, $r11, 0);

        $z1 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z1 == 0 goto label1;

        $r13 = new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        $r14 = newarray (char[])[1];

        $r14[0] = r1;

        specialinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r14, $r12, 4);

        return $r13;

     label1:
        return $r12;

     label2:
        $r16 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding getPackage0(char[])>(r1);

        if $r16 == null goto label3;

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemPackageBinding TheNotFoundPackage>;

        if $r16 == $r9 goto label3;

        return $r16;

     label3:
        if $r2 != null goto label6;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment environment>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding askForType(org.eclipse.jdt.internal.compiler.lookup.PackageBinding,char[])>(r0, r1);

        r15 = $r6;

        if $r6 == null goto label5;

        $z0 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z0 == 0 goto label4;

        $r7 = new org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding;

        $r8 = newarray (char[])[1];

        $r8[0] = r1;

        specialinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding: void <init>(char[][],org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,int)>($r8, $r6, 4);

        return $r7;

     label4:
        return $r6;

     label5:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void addNotFoundType(char[])>(r1);

     label6:
        if $r16 != null goto label9;

        $r3 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: org.eclipse.jdt.internal.compiler.lookup.PackageBinding findPackage(char[])>(r1);

        if $r3 == null goto label7;

        return $r3;

     label7:
        if r15 == null goto label8;

        $r4 = <org.eclipse.jdt.internal.compiler.lookup.LookupEnvironment: org.eclipse.jdt.internal.compiler.lookup.ProblemReferenceBinding TheNotFoundType>;

        if r15 == $r4 goto label8;

        return r15;

     label8:
        specialinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: void addNotFoundPackage(char[])>(r1);

     label9:
        return null;
    }

    public final int kind()
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        return 16;
    }

    public int problemId()
    {
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        byte $b2;
        long $l0, $l1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public char[] readableName()
    {
        char[] $r2;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        char[][] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concatWith(char[][],char)>($r1, 46);

        return $r2;
    }

    public java.lang.String toString()
    {
        long $l0, $l1;
        char[][] $r1, $r2, $r4, $r9;
        org.eclipse.jdt.internal.compiler.lookup.PackageBinding r0;
        byte $b2;
        java.lang.StringBuffer $r3, $r5, $r6, $r8;
        java.lang.String $r7, r10, $r11;

        r0 := @this: org.eclipse.jdt.internal.compiler.lookup.PackageBinding;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r1 = <org.eclipse.jdt.core.compiler.CharOperation: char[][] NO_CHAR_CHAR>;

        if $r2 != $r1 goto label1;

        r10 = "The Default Package";

        goto label4;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("package ");

        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        if $r4 == null goto label2;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: char[][] compoundName>;

        $r11 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: java.lang.String toString(char[][])>($r9);

        goto label3;

     label2:
        $r11 = "UNNAMED";

     label3:
        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        r10 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label4:
        $l0 = r0.<org.eclipse.jdt.internal.compiler.lookup.PackageBinding: long tagBits>;

        $l1 = $l0 & 128L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label5;

        $r6 = new java.lang.StringBuffer;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r10);

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(java.lang.String)>($r7);

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[MISSING]");

        r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

     label5:
        return r10;
    }
}
