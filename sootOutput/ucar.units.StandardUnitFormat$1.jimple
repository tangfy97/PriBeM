final class ucar.units.StandardUnitFormat$1 extends java.lang.Object implements java.util.Comparator
{

    void <init>()
    {
        ucar.units.StandardUnitFormat$1 r0;

        r0 := @this: ucar.units.StandardUnitFormat$1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public int compare(ucar.units.Factor, ucar.units.Factor)
    {
        ucar.units.StandardUnitFormat$1 r4;
        ucar.units.Factor r0, r1;
        int $i0, $i1, i2;
        java.lang.String $r2, $r3;

        r4 := @this: ucar.units.StandardUnitFormat$1;

        r1 := @parameter0: ucar.units.Factor;

        r0 := @parameter1: ucar.units.Factor;

        $i0 = virtualinvoke r0.<ucar.units.Factor: int getExponent()>();

        $i1 = virtualinvoke r1.<ucar.units.Factor: int getExponent()>();

        i2 = $i0 - $i1;

        if i2 != 0 goto label1;

        $r2 = virtualinvoke r1.<ucar.units.Factor: java.lang.String getID()>();

        $r3 = virtualinvoke r0.<ucar.units.Factor: java.lang.String getID()>();

        i2 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

     label1:
        return i2;
    }

    public volatile int compare(java.lang.Object, java.lang.Object)
    {
        ucar.units.StandardUnitFormat$1 r0;
        int $i0;
        java.lang.Object r1, r2;
        ucar.units.Factor $r3, $r4;

        r0 := @this: ucar.units.StandardUnitFormat$1;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (ucar.units.Factor) r1;

        $r3 = (ucar.units.Factor) r2;

        $i0 = virtualinvoke r0.<ucar.units.StandardUnitFormat$1: int compare(ucar.units.Factor,ucar.units.Factor)>($r4, $r3);

        return $i0;
    }
}
