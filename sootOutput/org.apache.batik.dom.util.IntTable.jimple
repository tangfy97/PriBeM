public class org.apache.batik.dom.util.IntTable extends java.lang.Object implements java.io.Serializable
{
    protected static final int INITIAL_CAPACITY;
    protected org.apache.batik.dom.util.IntTable$Entry[] table;
    protected int count;

    public void <init>()
    {
        org.apache.batik.dom.util.IntTable r0;
        org.apache.batik.dom.util.IntTable$Entry[] $r1;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.batik.dom.util.IntTable$Entry)[11];

        r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table> = $r1;

        return;
    }

    public void <init>(int)
    {
        org.apache.batik.dom.util.IntTable r0;
        int i0;
        org.apache.batik.dom.util.IntTable$Entry[] $r1;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.apache.batik.dom.util.IntTable$Entry)[i0];

        r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table> = $r1;

        return;
    }

    public void <init>(org.apache.batik.dom.util.IntTable)
    {
        org.apache.batik.dom.util.IntTable r0, r1;
        org.apache.batik.dom.util.IntTable$Entry $r5, $r8, r10, r11, r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7;
        java.lang.Object $r6, $r9;
        org.apache.batik.dom.util.IntTable$Entry[] $r2, $r3, $r4, $r7, $r13;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        r1 := @parameter0: org.apache.batik.dom.util.IntTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i0 = r1.<org.apache.batik.dom.util.IntTable: int count>;

        r0.<org.apache.batik.dom.util.IntTable: int count> = $i0;

        $r2 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i1 = lengthof $r2;

        $r3 = newarray (org.apache.batik.dom.util.IntTable$Entry)[$i1];

        r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table> = $r3;

        i6 = 0;

        goto label5;

     label1:
        $r4 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        r10 = $r4[i6];

        if r10 == null goto label4;

        $r5 = new org.apache.batik.dom.util.IntTable$Entry;

        $i3 = r10.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        $r6 = r10.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $i2 = r10.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        specialinvoke $r5.<org.apache.batik.dom.util.IntTable$Entry: void <init>(int,java.lang.Object,int,org.apache.batik.dom.util.IntTable$Entry)>($i3, $r6, $i2, null);

        r11 = $r5;

        $r7 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r7[i6] = $r5;

        r12 = r10.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

        goto label3;

     label2:
        $r8 = new org.apache.batik.dom.util.IntTable$Entry;

        $i5 = r12.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        $r9 = r12.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $i4 = r12.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        specialinvoke $r8.<org.apache.batik.dom.util.IntTable$Entry: void <init>(int,java.lang.Object,int,org.apache.batik.dom.util.IntTable$Entry)>($i5, $r9, $i4, null);

        r11.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next> = $r8;

        r11 = r11.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

        r12 = r12.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

     label3:
        if r12 != null goto label2;

     label4:
        i6 = i6 + 1;

     label5:
        $r13 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i7 = lengthof $r13;

        if i6 < $i7 goto label1;

        return;
    }

    public int size()
    {
        org.apache.batik.dom.util.IntTable r0;
        int $i0;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        $i0 = r0.<org.apache.batik.dom.util.IntTable: int count>;

        return $i0;
    }

    protected org.apache.batik.dom.util.IntTable$Entry find(java.lang.Object)
    {
        org.apache.batik.dom.util.IntTable r0;
        java.lang.Object r1;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        r1 := @parameter0: java.lang.Object;

        return null;
    }

    public int get(java.lang.Object)
    {
        org.apache.batik.dom.util.IntTable r1;
        org.apache.batik.dom.util.IntTable$Entry r7;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0;
        java.lang.Object r0, $r4, $r5, $r6;
        org.apache.batik.dom.util.IntTable$Entry[] $r2, $r3;

        r1 := @this: org.apache.batik.dom.util.IntTable;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i6 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i6 = $i0 & 2147483647;

     label2:
        i1 = $i6;

        $r2 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i2 = lengthof $r2;

        $i5 = $i6 % $i2;

        $r3 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        r7 = $r3[$i5];

        goto label7;

     label3:
        $i3 = r7.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        if $i3 != i1 goto label6;

        $r4 = r7.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r4 != null goto label4;

        if r0 == null goto label5;

     label4:
        $r5 = r7.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r5 == null goto label6;

        $r6 = r7.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label6;

     label5:
        $i4 = r7.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        return $i4;

     label6:
        r7 = r7.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

     label7:
        if r7 != null goto label3;

        return 0;
    }

    public int put(java.lang.Object, int)
    {
        org.apache.batik.dom.util.IntTable r1;
        org.apache.batik.dom.util.IntTable$Entry $r8, $r10, r13;
        int $i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, i14;
        boolean $z0;
        java.lang.Object r0, $r4, $r5, $r6;
        org.apache.batik.dom.util.IntTable$Entry[] $r2, $r3, $r7, $r9, $r11, $r12;

        r1 := @this: org.apache.batik.dom.util.IntTable;

        r0 := @parameter0: java.lang.Object;

        i4 := @parameter1: int;

        if r0 != null goto label1;

        $i12 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i12 = $i0 & 2147483647;

     label2:
        i1 = $i12;

        $r2 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i2 = lengthof $r2;

        $i11 = $i12 % $i2;

        i13 = $i11;

        $r3 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        r13 = $r3[$i11];

        goto label7;

     label3:
        $i3 = r13.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        if $i3 != i1 goto label6;

        $r4 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r4 != null goto label4;

        if r0 == null goto label5;

     label4:
        $r5 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r5 == null goto label6;

        $r6 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label6;

     label5:
        $i5 = r13.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        r13.<org.apache.batik.dom.util.IntTable$Entry: int value> = i4;

        return $i5;

     label6:
        r13 = r13.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

     label7:
        if r13 != null goto label3;

        $r7 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        i14 = lengthof $r7;

        $i6 = r1.<org.apache.batik.dom.util.IntTable: int count>;

        $i7 = $i6 + 1;

        r1.<org.apache.batik.dom.util.IntTable: int count> = $i7;

        $i8 = i14 >> 2;

        $i9 = i14 - $i8;

        if $i6 < $i9 goto label8;

        virtualinvoke r1.<org.apache.batik.dom.util.IntTable: void rehash()>();

        $r12 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i10 = lengthof $r12;

        i13 = i1 % $i10;

     label8:
        $r11 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r8 = new org.apache.batik.dom.util.IntTable$Entry;

        $r9 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r10 = $r9[i13];

        specialinvoke $r8.<org.apache.batik.dom.util.IntTable$Entry: void <init>(int,java.lang.Object,int,org.apache.batik.dom.util.IntTable$Entry)>(i1, r0, i4, $r10);

        $r11[i13] = $r8;

        return 0;
    }

    public int inc(java.lang.Object)
    {
        org.apache.batik.dom.util.IntTable r1;
        org.apache.batik.dom.util.IntTable$Entry $r8, $r10, r13;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        boolean $z0;
        java.lang.Object r0, $r4, $r5, $r6;
        org.apache.batik.dom.util.IntTable$Entry[] $r2, $r3, $r7, $r9, $r11, $r12;

        r1 := @this: org.apache.batik.dom.util.IntTable;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i13 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i13 = $i0 & 2147483647;

     label2:
        i1 = $i13;

        $r2 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i2 = lengthof $r2;

        $i12 = $i13 % $i2;

        i14 = $i12;

        $r3 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        r13 = $r3[$i12];

        goto label7;

     label3:
        $i3 = r13.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        if $i3 != i1 goto label6;

        $r4 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r4 != null goto label4;

        if r0 == null goto label5;

     label4:
        $r5 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r5 == null goto label6;

        $r6 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label6;

     label5:
        $i4 = r13.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        $i5 = $i4 + 1;

        r13.<org.apache.batik.dom.util.IntTable$Entry: int value> = $i5;

        return $i4;

     label6:
        r13 = r13.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

     label7:
        if r13 != null goto label3;

        $r7 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        i6 = lengthof $r7;

        $i7 = r1.<org.apache.batik.dom.util.IntTable: int count>;

        $i8 = $i7 + 1;

        r1.<org.apache.batik.dom.util.IntTable: int count> = $i8;

        $i9 = i6 >> 2;

        $i10 = i6 - $i9;

        if $i7 < $i10 goto label8;

        virtualinvoke r1.<org.apache.batik.dom.util.IntTable: void rehash()>();

        $r12 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i11 = lengthof $r12;

        i14 = i1 % $i11;

     label8:
        $r11 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r8 = new org.apache.batik.dom.util.IntTable$Entry;

        $r9 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r10 = $r9[i14];

        specialinvoke $r8.<org.apache.batik.dom.util.IntTable$Entry: void <init>(int,java.lang.Object,int,org.apache.batik.dom.util.IntTable$Entry)>(i1, r0, 1, $r10);

        $r11[i14] = $r8;

        return 0;
    }

    public int dec(java.lang.Object)
    {
        org.apache.batik.dom.util.IntTable r1;
        org.apache.batik.dom.util.IntTable$Entry $r10, r13, $r14;
        int $i0, i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, $i16;
        boolean $z0;
        java.lang.Object r0, $r4, $r5, $r6;
        org.apache.batik.dom.util.IntTable$Entry[] $r2, $r3, $r7, $r9, $r11, $r12;

        r1 := @this: org.apache.batik.dom.util.IntTable;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i13 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i13 = $i0 & 2147483647;

     label2:
        i1 = $i13;

        $r2 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i2 = lengthof $r2;

        $i12 = $i13 % $i2;

        i14 = $i12;

        $r3 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        r13 = $r3[$i12];

        goto label7;

     label3:
        $i3 = r13.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        if $i3 != i1 goto label6;

        $r4 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r4 != null goto label4;

        if r0 == null goto label5;

     label4:
        $r5 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r5 == null goto label6;

        $r6 = r13.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label6;

     label5:
        $i4 = r13.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        $i5 = $i4 - 1;

        r13.<org.apache.batik.dom.util.IntTable$Entry: int value> = $i5;

        return $i4;

     label6:
        r13 = r13.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

     label7:
        if r13 != null goto label3;

        $r7 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        i6 = lengthof $r7;

        $i7 = r1.<org.apache.batik.dom.util.IntTable: int count>;

        $i8 = $i7 + 1;

        r1.<org.apache.batik.dom.util.IntTable: int count> = $i8;

        $i9 = i6 >> 2;

        $i10 = i6 - $i9;

        if $i7 < $i10 goto label8;

        virtualinvoke r1.<org.apache.batik.dom.util.IntTable: void rehash()>();

        $r12 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i11 = lengthof $r12;

        i14 = i1 % $i11;

     label8:
        $r11 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r14 = new org.apache.batik.dom.util.IntTable$Entry;

        $r9 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r10 = $r9[i14];

        $i16 = (int) -1;

        specialinvoke $r14.<org.apache.batik.dom.util.IntTable$Entry: void <init>(int,java.lang.Object,int,org.apache.batik.dom.util.IntTable$Entry)>(i1, r0, $i16, $r10);

        $r11[i14] = $r14;

        return 0;
    }

    public int remove(java.lang.Object)
    {
        org.apache.batik.dom.util.IntTable r1;
        org.apache.batik.dom.util.IntTable$Entry $r7, $r8, r10, r11;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        boolean $z0;
        java.lang.Object r0, $r4, $r5, $r6;
        org.apache.batik.dom.util.IntTable$Entry[] $r2, $r3, $r9;

        r1 := @this: org.apache.batik.dom.util.IntTable;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        $i8 = 0;

        goto label2;

     label1:
        $i0 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        $i8 = $i0 & 2147483647;

     label2:
        i1 = $i8;

        $r2 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i2 = lengthof $r2;

        $i7 = $i8 % $i2;

        r10 = null;

        $r3 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        r11 = $r3[$i7];

        goto label9;

     label3:
        $i3 = r11.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        if $i3 != i1 goto label8;

        $r4 = r11.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r4 != null goto label4;

        if r0 == null goto label5;

     label4:
        $r5 = r11.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        if $r5 == null goto label8;

        $r6 = r11.<org.apache.batik.dom.util.IntTable$Entry: java.lang.Object key>;

        $z0 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label8;

     label5:
        $i6 = r11.<org.apache.batik.dom.util.IntTable$Entry: int value>;

        if r10 != null goto label6;

        $r9 = r1.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r8 = r11.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

        $r9[$i7] = $r8;

        goto label7;

     label6:
        $r7 = r11.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

        r10.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next> = $r7;

     label7:
        $i4 = r1.<org.apache.batik.dom.util.IntTable: int count>;

        $i5 = $i4 - 1;

        r1.<org.apache.batik.dom.util.IntTable: int count> = $i5;

        return $i6;

     label8:
        r10 = r11;

        r11 = r11.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

     label9:
        if r11 != null goto label3;

        return 0;
    }

    public void clear()
    {
        org.apache.batik.dom.util.IntTable r0;
        int $i0, i1;
        org.apache.batik.dom.util.IntTable$Entry[] $r1, $r2;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r2[i1] = null;

        i1 = i1 + 1;

     label2:
        $r1 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i0 = lengthof $r1;

        if i1 < $i0 goto label1;

        r0.<org.apache.batik.dom.util.IntTable: int count> = 0;

        return;
    }

    protected void rehash()
    {
        org.apache.batik.dom.util.IntTable r0;
        org.apache.batik.dom.util.IntTable$Entry r3, $r6, r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i9;
        org.apache.batik.dom.util.IntTable$Entry[] r1, $r2, $r4, $r5, $r7;

        r0 := @this: org.apache.batik.dom.util.IntTable;

        r1 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i0 = lengthof r1;

        $i1 = $i0 * 2;

        $i2 = $i1 + 1;

        $r2 = newarray (org.apache.batik.dom.util.IntTable$Entry)[$i2];

        r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table> = $r2;

        $i3 = lengthof r1;

        i7 = $i3 - 1;

        goto label4;

     label1:
        r8 = r1[i7];

        goto label3;

     label2:
        r3 = r8;

        r8 = r8.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next>;

        $i5 = r3.<org.apache.batik.dom.util.IntTable$Entry: int hash>;

        $r4 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $i4 = lengthof $r4;

        i6 = $i5 % $i4;

        $r5 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r6 = $r5[i6];

        r3.<org.apache.batik.dom.util.IntTable$Entry: org.apache.batik.dom.util.IntTable$Entry next> = $r6;

        $r7 = r0.<org.apache.batik.dom.util.IntTable: org.apache.batik.dom.util.IntTable$Entry[] table>;

        $r7[i6] = r3;

     label3:
        if r8 != null goto label2;

        $i9 = (int) -1;

        i7 = i7 + $i9;

     label4:
        if i7 >= 0 goto label1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.dom.util.IntTable: int INITIAL_CAPACITY> = 11;

        return;
    }
}
