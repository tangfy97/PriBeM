public abstract class org.apache.batik.util.io.NormalizingReader extends java.io.Reader
{

    public void <init>()
    {
        org.apache.batik.util.io.NormalizingReader r0;

        r0 := @this: org.apache.batik.util.io.NormalizingReader;

        specialinvoke r0.<java.io.Reader: void <init>()>();

        return;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.batik.util.io.NormalizingReader r0;
        char $c3;
        int i0, $i1, i2, $i4, $i5, i6, i7, $i9, $i11, $i13;
        char[] r1;

        r0 := @this: org.apache.batik.util.io.NormalizingReader;

        r1 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 != 0 goto label1;

        return 0;

     label1:
        $i1 = virtualinvoke r0.<java.io.Reader: int read()>();

        i6 = $i1;

        $i9 = (int) -1;

        if $i1 != $i9 goto label2;

        $i11 = (int) -1;

        return $i11;

     label2:
        i7 = 0;

     label3:
        $i4 = i7 + i2;

        $c3 = (char) i6;

        r1[$i4] = $c3;

        i7 = i7 + 1;

        $i5 = virtualinvoke r0.<java.io.Reader: int read()>();

        i6 = $i5;

        $i13 = (int) -1;

        if $i5 == $i13 goto label4;

        if i7 < i0 goto label3;

     label4:
        return i7;
    }

    public abstract int getLine();

    public abstract int getColumn();
}
