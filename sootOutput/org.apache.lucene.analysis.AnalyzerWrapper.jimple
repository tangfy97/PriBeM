public abstract class org.apache.lucene.analysis.AnalyzerWrapper extends org.apache.lucene.analysis.Analyzer
{

    protected void <init>()
    {
        org.apache.lucene.analysis.Analyzer$PerFieldReuseStrategy $r1;
        org.apache.lucene.analysis.AnalyzerWrapper r0;

        r0 := @this: org.apache.lucene.analysis.AnalyzerWrapper;

        $r1 = new org.apache.lucene.analysis.Analyzer$PerFieldReuseStrategy;

        specialinvoke $r1.<org.apache.lucene.analysis.Analyzer$PerFieldReuseStrategy: void <init>()>();

        specialinvoke r0.<org.apache.lucene.analysis.Analyzer: void <init>(org.apache.lucene.analysis.Analyzer$ReuseStrategy)>($r1);

        return;
    }

    protected abstract org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String);

    protected abstract org.apache.lucene.analysis.Analyzer$TokenStreamComponents wrapComponents(java.lang.String, org.apache.lucene.analysis.Analyzer$TokenStreamComponents);

    protected final org.apache.lucene.analysis.Analyzer$TokenStreamComponents createComponents(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.AnalyzerWrapper r0;
        org.apache.lucene.analysis.Analyzer $r2;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents $r4, $r5;
        java.lang.String r1;
        java.io.Reader r3;

        r0 := @this: org.apache.lucene.analysis.AnalyzerWrapper;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.Reader;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<org.apache.lucene.analysis.Analyzer: org.apache.lucene.analysis.Analyzer$TokenStreamComponents createComponents(java.lang.String,java.io.Reader)>(r1, r3);

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: org.apache.lucene.analysis.Analyzer$TokenStreamComponents wrapComponents(java.lang.String,org.apache.lucene.analysis.Analyzer$TokenStreamComponents)>(r1, $r4);

        return $r5;
    }

    public final int getPositionIncrementGap(java.lang.String)
    {
        org.apache.lucene.analysis.AnalyzerWrapper r0;
        org.apache.lucene.analysis.Analyzer $r2;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.analysis.AnalyzerWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<org.apache.lucene.analysis.Analyzer: int getPositionIncrementGap(java.lang.String)>(r1);

        return $i0;
    }

    public final int getOffsetGap(java.lang.String)
    {
        org.apache.lucene.analysis.AnalyzerWrapper r0;
        org.apache.lucene.analysis.Analyzer $r2;
        int $i0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.analysis.AnalyzerWrapper;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)>(r1);

        $i0 = virtualinvoke $r2.<org.apache.lucene.analysis.Analyzer: int getOffsetGap(java.lang.String)>(r1);

        return $i0;
    }

    public final java.io.Reader initReader(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.AnalyzerWrapper r0;
        org.apache.lucene.analysis.Analyzer $r2;
        java.lang.String r1;
        java.io.Reader r3, $r4;

        r0 := @this: org.apache.lucene.analysis.AnalyzerWrapper;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.io.Reader;

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.AnalyzerWrapper: org.apache.lucene.analysis.Analyzer getWrappedAnalyzer(java.lang.String)>(r1);

        $r4 = virtualinvoke $r2.<org.apache.lucene.analysis.Analyzer: java.io.Reader initReader(java.lang.String,java.io.Reader)>(r1, r3);

        return $r4;
    }
}
