public class org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder extends java.lang.Object implements org.apache.neethi.builders.AssertionBuilder
{

    public void <init>()
    {
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r0;

        r0 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.neethi.Assertion build(org.w3c.dom.Element, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException
    {
        org.apache.neethi.PolicyBuilder $r5;
        java.util.HashMap $r1, $r21, $r22;
        org.w3c.dom.Attr r11;
        org.w3c.dom.Node $r10, r18;
        int $i0, i1, i2, i3;
        org.w3c.dom.NamedNodeMap $r2;
        java.lang.String $r13, $r14, $r15, $r16, $r17;
        boolean $z0, $z1, $z2, $z3;
        org.apache.neethi.AssertionBuilderFactory r4;
        org.apache.neethi.Assertion $r8, $r9;
        org.apache.neethi.Policy $r6;
        org.apache.neethi.builders.xml.XmlPrimitiveAssertion $r3;
        org.w3c.dom.Element r0, r19, r20;
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r7;
        javax.xml.namespace.QName $r12;

        r7 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.neethi.AssertionBuilderFactory;

        r18 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Node getFirstChild()>();

        i1 = 0;

        i2 = 0;

        r19 = null;

     label01:
        if r18 == null goto label03;

        $z2 = r18 instanceof org.w3c.dom.Element;

        if $z2 == 0 goto label02;

        i1 = i1 + 1;

        r20 = (org.w3c.dom.Element) r18;

        $r16 = interfaceinvoke r20.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r17 = interfaceinvoke r20.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $z3 = staticinvoke <org.apache.neethi.Constants: boolean isPolicyElement(java.lang.String,java.lang.String)>($r16, $r17);

        if $z3 == 0 goto label02;

        r19 = r20;

        i2 = i2 + 1;

     label02:
        r18 = interfaceinvoke r18.<org.w3c.dom.Node: org.w3c.dom.Node getNextSibling()>();

        goto label01;

     label03:
        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r2 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        if $r2 == null goto label05;

        i3 = 0;

     label04:
        $i0 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i3 >= $i0 goto label05;

        $r10 = interfaceinvoke $r2.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i3);

        r11 = (org.w3c.dom.Attr) $r10;

        $r12 = new javax.xml.namespace.QName;

        $r13 = interfaceinvoke r11.<org.w3c.dom.Attr: java.lang.String getNamespaceURI()>();

        $r14 = interfaceinvoke r11.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        specialinvoke $r12.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r13, $r14);

        $r15 = interfaceinvoke r11.<org.w3c.dom.Attr: java.lang.String getValue()>();

        interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r15);

        i3 = i3 + 1;

        goto label04;

     label05:
        if i1 != 0 goto label08;

        $z1 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label06;

        $r21 = null;

        goto label07;

     label06:
        $r21 = $r1;

     label07:
        $r9 = virtualinvoke r7.<org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: org.apache.neethi.Assertion newPrimitiveAssertion(org.w3c.dom.Element,java.util.Map)>(r0, $r21);

        return $r9;

     label08:
        if i2 != 1 goto label11;

        if i1 != 1 goto label11;

        $r5 = interfaceinvoke r4.<org.apache.neethi.AssertionBuilderFactory: org.apache.neethi.PolicyBuilder getPolicyEngine()>();

        $r6 = virtualinvoke $r5.<org.apache.neethi.PolicyBuilder: org.apache.neethi.Policy getPolicy(org.w3c.dom.Element)>(r19);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 == 0 goto label09;

        $r22 = null;

        goto label10;

     label09:
        $r22 = $r1;

     label10:
        $r8 = virtualinvoke r7.<org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: org.apache.neethi.Assertion newPolicyContainingAssertion(org.w3c.dom.Element,java.util.Map,org.apache.neethi.Policy)>(r0, $r22, $r6);

        return $r8;

     label11:
        $r3 = new org.apache.neethi.builders.xml.XmlPrimitiveAssertion;

        specialinvoke $r3.<org.apache.neethi.builders.xml.XmlPrimitiveAssertion: void <init>(org.w3c.dom.Element)>(r0);

        return $r3;
    }

    protected javax.xml.namespace.QName getQName(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r9;
        java.lang.String $r1, $r3, $r4, $r5, $r7, $r8;
        javax.xml.namespace.QName $r2, $r6;

        r9 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getPrefix()>();

        if $r1 != null goto label1;

        $r6 = new javax.xml.namespace.QName;

        $r7 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r8 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>($r7, $r8);

        return $r6;

     label1:
        $r2 = new javax.xml.namespace.QName;

        $r3 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $r4 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r5 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getPrefix()>();

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r3, $r4, $r5);

        return $r2;
    }

    public org.apache.neethi.Assertion newPrimitiveAssertion(org.w3c.dom.Element, java.util.Map)
    {
        org.apache.neethi.builders.PrimitiveAssertion $r0;
        org.w3c.dom.Element r2;
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r1;
        java.util.Map r4;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        boolean $z0, $z1;

        r1 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        r2 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: java.util.Map;

        $r0 = new org.apache.neethi.builders.PrimitiveAssertion;

        $r3 = virtualinvoke r1.<org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: javax.xml.namespace.QName getQName(org.w3c.dom.Element)>(r2);

        $z0 = staticinvoke <org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: boolean isOptional(org.w3c.dom.Element)>(r2);

        $z1 = staticinvoke <org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: boolean isIgnorable(org.w3c.dom.Element)>(r2);

        $r5 = interfaceinvoke r2.<org.w3c.dom.Element: java.lang.String getTextContent()>();

        specialinvoke $r0.<org.apache.neethi.builders.PrimitiveAssertion: void <init>(javax.xml.namespace.QName,boolean,boolean,java.util.Map,java.lang.String)>($r3, $z0, $z1, r4, $r5);

        return $r0;
    }

    public org.apache.neethi.Assertion newPolicyContainingAssertion(org.w3c.dom.Element, java.util.Map, org.apache.neethi.Policy)
    {
        org.apache.neethi.builders.PolicyContainingPrimitiveAssertion $r0;
        org.apache.neethi.Policy r4;
        org.w3c.dom.Element r2;
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r1;
        java.util.Map r5;
        javax.xml.namespace.QName $r3;
        boolean $z0, $z1;

        r1 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        r2 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: java.util.Map;

        r4 := @parameter2: org.apache.neethi.Policy;

        $r0 = new org.apache.neethi.builders.PolicyContainingPrimitiveAssertion;

        $r3 = virtualinvoke r1.<org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: javax.xml.namespace.QName getQName(org.w3c.dom.Element)>(r2);

        $z0 = staticinvoke <org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: boolean isOptional(org.w3c.dom.Element)>(r2);

        $z1 = staticinvoke <org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: boolean isIgnorable(org.w3c.dom.Element)>(r2);

        specialinvoke $r0.<org.apache.neethi.builders.PolicyContainingPrimitiveAssertion: void <init>(javax.xml.namespace.QName,boolean,boolean,org.apache.neethi.Policy)>($r3, $z0, $z1, r4);

        return $r0;
    }

    public static boolean isOptional(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        java.lang.String $r2;
        org.w3c.dom.Attr $r1, r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://schemas.xmlsoap.org/ws/2004/09/policy", "Optional");

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/ns/ws-policy", "Optional");

     label1:
        if r3 != null goto label2;

        r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/2006/07/ws-policy", "Optional");

     label2:
        if r3 != null goto label3;

        $z0 = 0;

        goto label4;

     label3:
        $r2 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

     label4:
        return $z0;
    }

    public static boolean isIgnorable(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        java.lang.String $r2;
        org.w3c.dom.Attr $r1, r3;
        boolean $z0;

        r0 := @parameter0: org.w3c.dom.Element;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/ns/ws-policy", "Ignorable");

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.Attr getAttributeNodeNS(java.lang.String,java.lang.String)>("http://www.w3.org/2006/07/ws-policy", "Ignorable");

     label1:
        if r3 != null goto label2;

        $z0 = 0;

        goto label3;

     label2:
        $r2 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $z0 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r2);

     label3:
        return $z0;
    }

    public javax.xml.namespace.QName[] getKnownElements()
    {
        javax.xml.namespace.QName $r1;
        javax.xml.namespace.QName[] $r0;
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r2;

        r2 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        $r0 = newarray (javax.xml.namespace.QName)[1];

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String)>("UnknownElement");

        $r0[0] = $r1;

        return $r0;
    }

    public volatile org.apache.neethi.Assertion build(java.lang.Object, org.apache.neethi.AssertionBuilderFactory) throws java.lang.IllegalArgumentException
    {
        org.apache.neethi.AssertionBuilderFactory r2;
        org.w3c.dom.Element $r3;
        org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder r0;
        java.lang.Object r1;
        org.apache.neethi.Assertion $r4;

        r0 := @this: org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.neethi.AssertionBuilderFactory;

        $r3 = (org.w3c.dom.Element) r1;

        $r4 = virtualinvoke r0.<org.apache.neethi.builders.xml.XMLPrimitiveAssertionBuilder: org.apache.neethi.Assertion build(org.w3c.dom.Element,org.apache.neethi.AssertionBuilderFactory)>($r3, r2);

        return $r4;
    }
}
