public abstract class org.jdesktop.swingx.plaf.PromptTextUI extends javax.swing.plaf.TextUI
{
    static final org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler focusHandler;
    protected final javax.swing.plaf.TextUI delegate;
    protected javax.swing.text.JTextComponent promptComponent;

    public void <init>(javax.swing.plaf.TextUI)
    {
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        javax.swing.plaf.TextUI r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.plaf.TextUI;

        specialinvoke r0.<javax.swing.plaf.TextUI: void <init>()>();

        r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate> = r1;

        return;
    }

    protected abstract javax.swing.text.JTextComponent createPromptComponent();

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler $r4;
        javax.swing.text.JTextComponent r3;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        virtualinvoke $r2.<javax.swing.plaf.TextUI: void installUI(javax.swing.JComponent)>(r1);

        r3 = (javax.swing.text.JTextComponent) r1;

        $r4 = <org.jdesktop.swingx.plaf.PromptTextUI: org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler focusHandler>;

        virtualinvoke r3.<javax.swing.text.JTextComponent: void addFocusListener(java.awt.event.FocusListener)>($r4);

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler $r3;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        virtualinvoke $r2.<javax.swing.plaf.TextUI: void uninstallUI(javax.swing.JComponent)>(r1);

        $r3 = <org.jdesktop.swingx.plaf.PromptTextUI: org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler focusHandler>;

        virtualinvoke r1.<javax.swing.JComponent: void removeFocusListener(java.awt.event.FocusListener)>($r3);

        r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent> = null;

        return;
    }

    public javax.swing.text.JTextComponent getPromptComponent(javax.swing.text.JTextComponent)
    {
        java.awt.Color $r6, $r12, $r25, $r27, $r39, $r45;
        java.lang.Integer $r9, $r53;
        javax.swing.border.Border $r20, $r23, $r33;
        org.jdesktop.swingx.plaf.PromptTextUI$PainterHighlighter $r13;
        javax.swing.text.BadLocationException $r50;
        java.lang.String $r4, $r43;
        org.jdesktop.swingx.painter.Painter $r15;
        org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior $r36, $r37, $r46, $r47;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Font $r8, $r10, $r35;
        javax.swing.text.Highlighter $r41, $r52;
        javax.swing.text.DefaultHighlighter$DefaultHighlightPainter $r44;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        java.awt.Rectangle $r19;
        java.awt.Insets $r21, $r30;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        javax.swing.text.JTextComponent $r1, r2, $r3, $r5, $r7, $r11, $r14, $r16, $r17, $r18, $r22, $r24, $r26, $r28, $r29, $r31, $r32, $r34, $r38, $r40, $r42, $r48, $r49, $r51;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r2 := @parameter0: javax.swing.text.JTextComponent;

        $r1 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        if $r1 != null goto label01;

        $r49 = virtualinvoke r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent createPromptComponent()>();

        r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent> = $r49;

     label01:
        $z0 = virtualinvoke r2.<javax.swing.text.JTextComponent: boolean isFocusOwner()>();

        if $z0 == 0 goto label02;

        $r46 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior getFocusBehavior(javax.swing.text.JTextComponent)>(r2);

        $r47 = <org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior: org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior HIDE_PROMPT>;

        if $r46 != $r47 goto label02;

        $r48 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        virtualinvoke $r48.<javax.swing.text.JTextComponent: void setText(java.lang.String)>(null);

        goto label03;

     label02:
        $r3 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r4 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: java.lang.String getPrompt(javax.swing.text.JTextComponent)>(r2);

        virtualinvoke $r3.<javax.swing.text.JTextComponent: void setText(java.lang.String)>($r4);

     label03:
        $r51 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r52 = virtualinvoke $r51.<javax.swing.text.JTextComponent: javax.swing.text.Highlighter getHighlighter()>();

        interfaceinvoke $r52.<javax.swing.text.Highlighter: void removeAllHighlights()>();

        $z4 = virtualinvoke r2.<javax.swing.text.JTextComponent: boolean isFocusOwner()>();

        if $z4 == 0 goto label07;

        $r36 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior getFocusBehavior(javax.swing.text.JTextComponent)>(r2);

        $r37 = <org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior: org.jdesktop.swingx.prompt.PromptSupport$FocusBehavior HIGHLIGHT_PROMPT>;

        if $r36 != $r37 goto label07;

        $r38 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r39 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Color getSelectedTextColor()>();

        virtualinvoke $r38.<javax.swing.text.JTextComponent: void setForeground(java.awt.Color)>($r39);

     label04:
        $r40 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r41 = virtualinvoke $r40.<javax.swing.text.JTextComponent: javax.swing.text.Highlighter getHighlighter()>();

        $r42 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r43 = virtualinvoke $r42.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $i5 = virtualinvoke $r43.<java.lang.String: int length()>();

        $r44 = new javax.swing.text.DefaultHighlighter$DefaultHighlightPainter;

        $r45 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Color getSelectionColor()>();

        specialinvoke $r44.<javax.swing.text.DefaultHighlighter$DefaultHighlightPainter: void <init>(java.awt.Color)>($r45);

        interfaceinvoke $r41.<javax.swing.text.Highlighter: java.lang.Object addHighlight(int,int,javax.swing.text.Highlighter$HighlightPainter)>(0, $i5, $r44);

     label05:
        goto label08;

     label06:
        $r50 := @caughtexception;

        virtualinvoke $r50.<javax.swing.text.BadLocationException: void printStackTrace()>();

        goto label08;

     label07:
        $r5 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r6 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: java.awt.Color getForeground(javax.swing.text.JTextComponent)>(r2);

        virtualinvoke $r5.<javax.swing.text.JTextComponent: void setForeground(java.awt.Color)>($r6);

     label08:
        $r53 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: java.lang.Integer getFontStyle(javax.swing.text.JTextComponent)>(r2);

        if $r53 != null goto label09;

        $r34 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r35 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Font getFont()>();

        virtualinvoke $r34.<javax.swing.text.JTextComponent: void setFont(java.awt.Font)>($r35);

        goto label10;

     label09:
        $r7 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r8 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Font getFont()>();

        $r9 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: java.lang.Integer getFontStyle(javax.swing.text.JTextComponent)>(r2);

        $i0 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r10 = virtualinvoke $r8.<java.awt.Font: java.awt.Font deriveFont(int)>($i0);

        virtualinvoke $r7.<javax.swing.text.JTextComponent: void setFont(java.awt.Font)>($r10);

     label10:
        $r11 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r12 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: java.awt.Color getBackground(javax.swing.text.JTextComponent)>(r2);

        virtualinvoke $r11.<javax.swing.text.JTextComponent: void setBackground(java.awt.Color)>($r12);

        $r14 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r13 = new org.jdesktop.swingx.plaf.PromptTextUI$PainterHighlighter;

        $r15 = staticinvoke <org.jdesktop.swingx.prompt.PromptSupport: org.jdesktop.swingx.painter.Painter getBackgroundPainter(javax.swing.text.JTextComponent)>(r2);

        specialinvoke $r13.<org.jdesktop.swingx.plaf.PromptTextUI$PainterHighlighter: void <init>(org.jdesktop.swingx.plaf.PromptTextUI,org.jdesktop.swingx.painter.Painter)>(r0, $r15);

        virtualinvoke $r14.<javax.swing.text.JTextComponent: void setHighlighter(javax.swing.text.Highlighter)>($r13);

        $r16 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $z1 = virtualinvoke r2.<javax.swing.text.JTextComponent: boolean isEnabled()>();

        virtualinvoke $r16.<javax.swing.text.JTextComponent: void setEnabled(boolean)>($z1);

        $r17 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $z2 = virtualinvoke r2.<javax.swing.text.JTextComponent: boolean isOpaque()>();

        virtualinvoke $r17.<javax.swing.text.JTextComponent: void setOpaque(boolean)>($z2);

        $r18 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r19 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Rectangle getBounds()>();

        virtualinvoke $r18.<javax.swing.text.JTextComponent: void setBounds(java.awt.Rectangle)>($r19);

        $r20 = virtualinvoke r2.<javax.swing.text.JTextComponent: javax.swing.border.Border getBorder()>();

        if $r20 != null goto label11;

        $r32 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r33 = virtualinvoke r2.<javax.swing.text.JTextComponent: javax.swing.border.Border getBorder()>();

        virtualinvoke $r32.<javax.swing.text.JTextComponent: void setBorder(javax.swing.border.Border)>($r33);

        goto label12;

     label11:
        $r21 = interfaceinvoke $r20.<javax.swing.border.Border: java.awt.Insets getBorderInsets(java.awt.Component)>(r2);

        $r22 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $i4 = $r21.<java.awt.Insets: int top>;

        $i3 = $r21.<java.awt.Insets: int left>;

        $i2 = $r21.<java.awt.Insets: int bottom>;

        $i1 = $r21.<java.awt.Insets: int right>;

        $r23 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>($i4, $i3, $i2, $i1);

        virtualinvoke $r22.<javax.swing.text.JTextComponent: void setBorder(javax.swing.border.Border)>($r23);

     label12:
        $r24 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r25 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Color getSelectedTextColor()>();

        virtualinvoke $r24.<javax.swing.text.JTextComponent: void setSelectedTextColor(java.awt.Color)>($r25);

        $r26 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r27 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Color getSelectionColor()>();

        virtualinvoke $r26.<javax.swing.text.JTextComponent: void setSelectionColor(java.awt.Color)>($r27);

        $r28 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $z3 = virtualinvoke r2.<javax.swing.text.JTextComponent: boolean isEditable()>();

        virtualinvoke $r28.<javax.swing.text.JTextComponent: void setEditable(boolean)>($z3);

        $r29 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        $r30 = virtualinvoke r2.<javax.swing.text.JTextComponent: java.awt.Insets getMargin()>();

        virtualinvoke $r29.<javax.swing.text.JTextComponent: void setMargin(java.awt.Insets)>($r30);

        $r31 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent promptComponent>;

        return $r31;

        catch javax.swing.text.BadLocationException from label04 to label05 with label06;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        javax.swing.text.JTextComponent r1, $r5;
        java.awt.Dimension $r4, $r6;
        javax.swing.plaf.TextUI $r3;
        org.jdesktop.swingx.plaf.PromptTextUI r2;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r0 := @parameter0: javax.swing.JComponent;

        r1 = (javax.swing.text.JTextComponent) r0;

        $z0 = virtualinvoke r2.<org.jdesktop.swingx.plaf.PromptTextUI: boolean shouldPaintPrompt(javax.swing.text.JTextComponent)>(r1);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r2.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent getPromptComponent(javax.swing.text.JTextComponent)>(r1);

        $r6 = virtualinvoke $r5.<javax.swing.text.JTextComponent: java.awt.Dimension getPreferredSize()>();

        return $r6;

     label1:
        $r3 = r2.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r4 = virtualinvoke $r3.<javax.swing.plaf.TextUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r0);

        return $r4;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        javax.swing.plaf.TextUI $r4;
        org.jdesktop.swingx.plaf.PromptTextUI r2;
        java.awt.Graphics r3;
        javax.swing.text.JTextComponent r1;
        boolean $z0;

        r2 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r3 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JComponent;

        r1 = (javax.swing.text.JTextComponent) r0;

        $z0 = virtualinvoke r2.<org.jdesktop.swingx.plaf.PromptTextUI: boolean shouldPaintPrompt(javax.swing.text.JTextComponent)>(r1);

        if $z0 == 0 goto label1;

        virtualinvoke r2.<org.jdesktop.swingx.plaf.PromptTextUI: void paintPromptComponent(java.awt.Graphics,javax.swing.text.JTextComponent)>(r3, r1);

        goto label2;

     label1:
        $r4 = r2.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        virtualinvoke $r4.<javax.swing.plaf.TextUI: void paint(java.awt.Graphics,javax.swing.JComponent)>(r3, r0);

     label2:
        return;
    }

    protected void paintPromptComponent(java.awt.Graphics, javax.swing.text.JTextComponent)
    {
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        java.awt.Graphics r3;
        javax.swing.text.Caret $r4, $r5;
        javax.swing.text.JTextComponent r1, $r2;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r3 := @parameter0: java.awt.Graphics;

        r1 := @parameter1: javax.swing.text.JTextComponent;

        $r2 = virtualinvoke r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent getPromptComponent(javax.swing.text.JTextComponent)>(r1);

        virtualinvoke $r2.<javax.swing.text.JTextComponent: void paint(java.awt.Graphics)>(r3);

        $r4 = virtualinvoke r1.<javax.swing.text.JTextComponent: javax.swing.text.Caret getCaret()>();

        if $r4 == null goto label1;

        $r5 = virtualinvoke r1.<javax.swing.text.JTextComponent: javax.swing.text.Caret getCaret()>();

        interfaceinvoke $r5.<javax.swing.text.Caret: void paint(java.awt.Graphics)>(r3);

     label1:
        return;
    }

    public boolean shouldPaintPrompt(javax.swing.text.JTextComponent)
    {
        int $i0;
        org.jdesktop.swingx.plaf.PromptTextUI r3;
        java.lang.String $r1, $r2;
        javax.swing.text.JTextComponent r0;
        boolean $z0;

        r3 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r0 := @parameter0: javax.swing.text.JTextComponent;

        $r1 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<javax.swing.text.JTextComponent: java.lang.String getText()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public void update(java.awt.Graphics, javax.swing.JComponent)
    {
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        java.awt.Graphics r1;
        javax.swing.JComponent r2;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        specialinvoke r0.<javax.swing.plaf.TextUI: void update(java.awt.Graphics,javax.swing.JComponent)>(r1, r2);

        return;
    }

    public java.awt.Rectangle modelToView(javax.swing.text.JTextComponent, int, javax.swing.text.Position$Bias) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle $r4, $r7;
        javax.swing.text.JTextComponent r1, $r5;
        javax.swing.plaf.TextUI $r3, $r6;
        javax.swing.text.Position$Bias r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        i0 := @parameter1: int;

        r2 := @parameter2: javax.swing.text.Position$Bias;

        $z0 = virtualinvoke r0.<org.jdesktop.swingx.plaf.PromptTextUI: boolean shouldPaintPrompt(javax.swing.text.JTextComponent)>(r1);

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.text.JTextComponent getPromptComponent(javax.swing.text.JTextComponent)>(r1);

        $r6 = virtualinvoke $r5.<javax.swing.text.JTextComponent: javax.swing.plaf.TextUI getUI()>();

        $r7 = virtualinvoke $r6.<javax.swing.plaf.TextUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int,javax.swing.text.Position$Bias)>(r1, i0, r2);

        return $r7;

     label1:
        $r3 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r4 = virtualinvoke $r3.<javax.swing.plaf.TextUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int,javax.swing.text.Position$Bias)>(r1, i0, r2);

        return $r4;
    }

    public java.awt.Rectangle modelToView(javax.swing.text.JTextComponent, int) throws javax.swing.text.BadLocationException
    {
        java.awt.Rectangle $r3;
        javax.swing.text.Position$Bias $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        i0 := @parameter1: int;

        $r2 = <javax.swing.text.Position$Bias: javax.swing.text.Position$Bias Forward>;

        $r3 = virtualinvoke r0.<org.jdesktop.swingx.plaf.PromptTextUI: java.awt.Rectangle modelToView(javax.swing.text.JTextComponent,int,javax.swing.text.Position$Bias)>(r1, i0, $r2);

        return $r3;
    }

    public boolean contains(javax.swing.JComponent, int, int)
    {
        javax.swing.JComponent r1;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0, i1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $z0 = virtualinvoke $r2.<javax.swing.plaf.TextUI: boolean contains(javax.swing.JComponent,int,int)>(r1, i0, i1);

        return $z0;
    }

    public void damageRange(javax.swing.text.JTextComponent, int, int, javax.swing.text.Position$Bias, javax.swing.text.Position$Bias)
    {
        javax.swing.plaf.TextUI $r4;
        javax.swing.text.Position$Bias r2, r3;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0, i1;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: javax.swing.text.Position$Bias;

        r3 := @parameter4: javax.swing.text.Position$Bias;

        $r4 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        virtualinvoke $r4.<javax.swing.plaf.TextUI: void damageRange(javax.swing.text.JTextComponent,int,int,javax.swing.text.Position$Bias,javax.swing.text.Position$Bias)>(r1, i0, i1, r2, r3);

        return;
    }

    public void damageRange(javax.swing.text.JTextComponent, int, int)
    {
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0, i1;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        virtualinvoke $r2.<javax.swing.plaf.TextUI: void damageRange(javax.swing.text.JTextComponent,int,int)>(r1, i0, i1);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $z0 = virtualinvoke $r2.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    public javax.accessibility.Accessible getAccessibleChild(javax.swing.JComponent, int)
    {
        javax.swing.JComponent r1;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0;
        javax.accessibility.Accessible $r3;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.plaf.TextUI: javax.accessibility.Accessible getAccessibleChild(javax.swing.JComponent,int)>(r1, i0);

        return $r3;
    }

    public int getAccessibleChildrenCount(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int $i0;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $i0 = virtualinvoke $r2.<javax.swing.plaf.TextUI: int getAccessibleChildrenCount(javax.swing.JComponent)>(r1);

        return $i0;
    }

    public javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent)
    {
        javax.swing.text.EditorKit $r3;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.plaf.TextUI: javax.swing.text.EditorKit getEditorKit(javax.swing.text.JTextComponent)>(r1);

        return $r3;
    }

    public java.awt.Dimension getMaximumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.Dimension $r3;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.plaf.TextUI: java.awt.Dimension getMaximumSize(javax.swing.JComponent)>(r1);

        return $r3;
    }

    public java.awt.Dimension getMinimumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.Dimension $r3;
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.plaf.TextUI: java.awt.Dimension getMinimumSize(javax.swing.JComponent)>(r1);

        return $r3;
    }

    public int getNextVisualPositionFrom(javax.swing.text.JTextComponent, int, javax.swing.text.Position$Bias, int, javax.swing.text.Position$Bias[]) throws javax.swing.text.BadLocationException
    {
        javax.swing.text.Position$Bias[] r3;
        javax.swing.text.JTextComponent r1;
        javax.swing.plaf.TextUI $r4;
        javax.swing.text.Position$Bias r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int i0, i1, $i2;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        i0 := @parameter1: int;

        r2 := @parameter2: javax.swing.text.Position$Bias;

        i1 := @parameter3: int;

        r3 := @parameter4: javax.swing.text.Position$Bias[];

        $r4 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $i2 = virtualinvoke $r4.<javax.swing.plaf.TextUI: int getNextVisualPositionFrom(javax.swing.text.JTextComponent,int,javax.swing.text.Position$Bias,int,javax.swing.text.Position$Bias[])>(r1, i0, r2, i1, r3);

        return $i2;
    }

    public javax.swing.text.View getRootView(javax.swing.text.JTextComponent)
    {
        javax.swing.plaf.TextUI $r2;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        javax.swing.text.View $r3;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        $r2 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r3 = virtualinvoke $r2.<javax.swing.plaf.TextUI: javax.swing.text.View getRootView(javax.swing.text.JTextComponent)>(r1);

        return $r3;
    }

    public java.lang.String getToolTipText(javax.swing.text.JTextComponent, java.awt.Point)
    {
        javax.swing.plaf.TextUI $r3;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        java.awt.Point r2;
        java.lang.String $r4;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        r2 := @parameter1: java.awt.Point;

        $r3 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r4 = virtualinvoke $r3.<javax.swing.plaf.TextUI: java.lang.String getToolTipText(javax.swing.text.JTextComponent,java.awt.Point)>(r1, r2);

        return $r4;
    }

    public int hashCode()
    {
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int $i0;
        javax.swing.plaf.TextUI $r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        $r1 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        java.lang.Object[] $r0;
        javax.swing.plaf.TextUI $r4;
        org.jdesktop.swingx.plaf.PromptTextUI r1;
        java.lang.Class $r2;
        java.lang.String $r3, $r5, $r6;

        r1 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        $r0 = newarray (java.lang.Object)[2];

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r0[0] = $r3;

        $r4 = r1.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>();

        $r0[1] = $r5;

        $r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s (%s)", $r0);

        return $r6;
    }

    public int viewToModel(javax.swing.text.JTextComponent, java.awt.Point, javax.swing.text.Position$Bias[])
    {
        javax.swing.plaf.TextUI $r4;
        javax.swing.text.Position$Bias[] r3;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int $i0;
        java.awt.Point r2;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        r2 := @parameter1: java.awt.Point;

        r3 := @parameter2: javax.swing.text.Position$Bias[];

        $r4 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $i0 = virtualinvoke $r4.<javax.swing.plaf.TextUI: int viewToModel(javax.swing.text.JTextComponent,java.awt.Point,javax.swing.text.Position$Bias[])>(r1, r2, r3);

        return $i0;
    }

    public int viewToModel(javax.swing.text.JTextComponent, java.awt.Point)
    {
        javax.swing.plaf.TextUI $r3;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        int $i0;
        java.awt.Point r2;
        javax.swing.text.JTextComponent r1;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r1 := @parameter0: javax.swing.text.JTextComponent;

        r2 := @parameter1: java.awt.Point;

        $r3 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $i0 = virtualinvoke $r3.<javax.swing.plaf.TextUI: int viewToModel(javax.swing.text.JTextComponent,java.awt.Point)>(r1, r2);

        return $i0;
    }

    public int getBaseline(javax.swing.JComponent, int, int)
    {
        java.lang.Object[] $r7;
        java.lang.Integer $r10, $r11, $r13;
        javax.swing.plaf.TextUI $r1, $r9;
        int i0, i1, $i2, $i4;
        java.lang.reflect.Method $r6;
        javax.swing.JComponent r8;
        java.lang.Class[] $r3;
        java.lang.Exception $r14;
        org.jdesktop.swingx.plaf.PromptTextUI r0;
        java.lang.Class $r2, $r4, $r5;
        java.lang.Object $r12;

        r0 := @this: org.jdesktop.swingx.plaf.PromptTextUI;

        r8 := @parameter0: javax.swing.JComponent;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

     label1:
        $r1 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[3];

        $r3[0] = class "Ljavax/swing/JComponent;";

        $r4 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[1] = $r4;

        $r5 = <java.lang.Integer: java.lang.Class TYPE>;

        $r3[2] = $r5;

        $r6 = virtualinvoke $r2.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBaseline", $r3);

        $r9 = r0.<org.jdesktop.swingx.plaf.PromptTextUI: javax.swing.plaf.TextUI delegate>;

        $r7 = newarray (java.lang.Object)[3];

        $r7[0] = r8;

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r7[1] = $r10;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r7[2] = $r11;

        $r12 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r9, $r7);

        $r13 = (java.lang.Integer) $r12;

        $i2 = virtualinvoke $r13.<java.lang.Integer: int intValue()>();

     label2:
        return $i2;

     label3:
        $r14 := @caughtexception;

        $i4 = (int) -2;

        return $i4;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler $r0;

        $r0 = new org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler;

        specialinvoke $r0.<org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler: void <init>(org.jdesktop.swingx.plaf.PromptTextUI$1)>(null);

        <org.jdesktop.swingx.plaf.PromptTextUI: org.jdesktop.swingx.plaf.PromptTextUI$FocusHandler focusHandler> = $r0;

        return;
    }
}
