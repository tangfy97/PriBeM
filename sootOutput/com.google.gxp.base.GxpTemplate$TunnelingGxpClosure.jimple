public abstract class com.google.gxp.base.GxpTemplate$TunnelingGxpClosure extends java.lang.Object implements com.google.gxp.base.GxpClosure
{

    protected void <init>()
    {
        com.google.gxp.base.GxpTemplate$TunnelingGxpClosure r0;

        r0 := @this: com.google.gxp.base.GxpTemplate$TunnelingGxpClosure;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public final void write(java.lang.Appendable, com.google.gxp.base.GxpContext) throws java.io.IOException
    {
        com.google.gxp.base.GxpContext r2;
        java.lang.Appendable r1;
        com.google.gxp.base.GxpTemplate$TunnelingGxpClosure r0;
        java.io.IOException $r5;
        java.lang.RuntimeException $r4, $r6;
        java.lang.Exception $r3;

        r0 := @this: com.google.gxp.base.GxpTemplate$TunnelingGxpClosure;

        r1 := @parameter0: java.lang.Appendable;

        r2 := @parameter1: com.google.gxp.base.GxpContext;

     label1:
        virtualinvoke r0.<com.google.gxp.base.GxpTemplate$TunnelingGxpClosure: void writeImpl(java.lang.Appendable,com.google.gxp.base.GxpContext)>(r1, r2);

     label2:
        goto label6;

     label3:
        $r6 := @caughtexception;

        throw $r6;

     label4:
        $r5 := @caughtexception;

        throw $r5;

     label5:
        $r3 := @caughtexception;

        $r4 = staticinvoke <com.google.gxp.base.GxpRuntimeException: java.lang.RuntimeException wrap(java.lang.Exception)>($r3);

        throw $r4;

     label6:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.io.IOException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    protected abstract void writeImpl(java.lang.Appendable, com.google.gxp.base.GxpContext) throws java.lang.Exception;
}
