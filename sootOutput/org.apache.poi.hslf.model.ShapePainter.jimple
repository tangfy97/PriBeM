public final class org.apache.poi.hslf.model.ShapePainter extends java.lang.Object
{
    protected static final org.apache.poi.util.POILogger logger;

    public void <init>()
    {
        org.apache.poi.hslf.model.ShapePainter r0;

        r0 := @this: org.apache.poi.hslf.model.ShapePainter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static void paint(org.apache.poi.hslf.model.SimpleShape, java.awt.Graphics2D)
    {
        java.awt.Color $r4, $r5;
        java.awt.geom.Rectangle2D $r1;
        byte $b1;
        boolean $z0, $z1;
        java.awt.Shape $r2;
        org.apache.poi.util.POILogger $r10;
        org.apache.poi.hslf.model.SimpleShape r0;
        float $f0, $f1, f2;
        java.lang.StringBuilder $r9, $r11, $r12;
        java.awt.BasicStroke $r16;
        float[] $r7, $r8, $r14, r15;
        java.awt.Graphics2D r6;
        int $i0, $i2;
        java.lang.String $r13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26, d27, d28;
        org.apache.poi.hslf.model.Fill $r3;

        r0 := @parameter0: org.apache.poi.hslf.model.SimpleShape;

        r6 := @parameter1: java.awt.Graphics2D;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: java.awt.geom.Rectangle2D getLogicalAnchor2D()>();

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: java.awt.Shape getOutline()>();

        $z0 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: boolean getFlipVertical()>();

        if $z0 == 0 goto label01;

        $d19 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d20 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d21 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getHeight()>();

        $d22 = $d20 + $d21;

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d19, $d22);

        virtualinvoke r6.<java.awt.Graphics2D: void scale(double,double)>(1.0, -1.0);

        $d23 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d24 = neg $d23;

        $d25 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d26 = neg $d25;

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d24, $d26);

     label01:
        $z1 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: boolean getFlipHorizontal()>();

        if $z1 == 0 goto label02;

        $d10 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d11 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d12 = $d10 + $d11;

        $d13 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getY()>();

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d12, $d13);

        virtualinvoke r6.<java.awt.Graphics2D: void scale(double,double)>(-1.0, 1.0);

        $d14 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d15 = neg $d14;

        $d16 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d17 = neg $d16;

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d15, $d17);

     label02:
        $i0 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: int getRotation()>();

        $d18 = (double) $i0;

        $b1 = $d18 cmpl 0.0;

        if $b1 == 0 goto label03;

        $d1 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getX()>();

        $d2 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getWidth()>();

        $d3 = $d2 / 2.0;

        d27 = $d1 + $d3;

        $d4 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getY()>();

        $d5 = virtualinvoke $r1.<java.awt.geom.Rectangle2D: double getHeight()>();

        $d6 = $d5 / 2.0;

        d28 = $d4 + $d6;

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>(d27, d28);

        $d7 = staticinvoke <java.lang.Math: double toRadians(double)>($d18);

        virtualinvoke r6.<java.awt.Graphics2D: void rotate(double)>($d7);

        $d9 = neg d27;

        $d8 = neg d28;

        virtualinvoke r6.<java.awt.Graphics2D: void translate(double,double)>($d9, $d8);

     label03:
        $r3 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: org.apache.poi.hslf.model.Fill getFill()>();

        $r4 = virtualinvoke $r3.<org.apache.poi.hslf.model.Fill: java.awt.Color getForegroundColor()>();

        if $r4 == null goto label04;

        virtualinvoke r6.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r4);

        virtualinvoke r6.<java.awt.Graphics2D: void fill(java.awt.Shape)>($r2);

     label04:
        $r5 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: java.awt.Color getLineColor()>();

        if $r5 == null goto label10;

        virtualinvoke r6.<java.awt.Graphics2D: void setPaint(java.awt.Paint)>($r5);

        $d0 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: double getLineWidth()>();

        f2 = (float) $d0;

        $i2 = virtualinvoke r0.<org.apache.poi.hslf.model.SimpleShape: int getLineDashing()>();

        lookupswitch($i2)
        {
            case 1: goto label05;
            case 2: goto label06;
            case 6: goto label07;
            default: goto label08;
        };

     label05:
        r15 = null;

        goto label09;

     label06:
        $r8 = newarray (float)[2];

        $r8[0] = f2;

        $r8[1] = f2;

        r15 = $r8;

        goto label09;

     label07:
        $r7 = newarray (float)[2];

        $f0 = f2 * 4.0F;

        $r7[0] = $f0;

        $f1 = f2 * 3.0F;

        $r7[1] = $f1;

        r15 = $r7;

        goto label09;

     label08:
        $r10 = <org.apache.poi.hslf.model.ShapePainter: org.apache.poi.util.POILogger logger>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("unsupported dashing: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r13);

        $r14 = newarray (float)[2];

        $r14[0] = f2;

        $r14[1] = f2;

        r15 = $r14;

     label09:
        $r16 = new java.awt.BasicStroke;

        specialinvoke $r16.<java.awt.BasicStroke: void <init>(float,int,int,float,float[],float)>(f2, 0, 0, 10.0F, r15, 0.0F);

        virtualinvoke r6.<java.awt.Graphics2D: void setStroke(java.awt.Stroke)>($r16);

        virtualinvoke r6.<java.awt.Graphics2D: void draw(java.awt.Shape)>($r2);

     label10:
        return;
    }

    static void <clinit>()
    {
        org.apache.poi.util.POILogger $r0;

        $r0 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>(class "Lorg/apache/poi/hslf/model/ShapePainter;");

        <org.apache.poi.hslf.model.ShapePainter: org.apache.poi.util.POILogger logger> = $r0;

        return;
    }
}
