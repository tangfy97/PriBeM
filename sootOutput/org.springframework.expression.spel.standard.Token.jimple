class org.springframework.expression.spel.standard.Token extends java.lang.Object
{
    org.springframework.expression.spel.standard.TokenKind kind;
    java.lang.String data;
    int startpos;
    int endpos;

    void <init>(org.springframework.expression.spel.standard.TokenKind, int, int)
    {
        org.springframework.expression.spel.standard.Token r0;
        int i0, i1;
        org.springframework.expression.spel.standard.TokenKind r1;

        r0 := @this: org.springframework.expression.spel.standard.Token;

        r1 := @parameter0: org.springframework.expression.spel.standard.TokenKind;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind> = r1;

        r0.<org.springframework.expression.spel.standard.Token: int startpos> = i0;

        r0.<org.springframework.expression.spel.standard.Token: int endpos> = i1;

        return;
    }

    void <init>(org.springframework.expression.spel.standard.TokenKind, char[], int, int)
    {
        org.springframework.expression.spel.standard.Token r0;
        int i0, i1;
        char[] r3;
        java.lang.String $r2;
        org.springframework.expression.spel.standard.TokenKind r1;

        r0 := @this: org.springframework.expression.spel.standard.Token;

        r1 := @parameter0: org.springframework.expression.spel.standard.TokenKind;

        r3 := @parameter1: char[];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        specialinvoke r0.<org.springframework.expression.spel.standard.Token: void <init>(org.springframework.expression.spel.standard.TokenKind,int,int)>(r1, i0, i1);

        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[])>(r3);

        r0.<org.springframework.expression.spel.standard.Token: java.lang.String data> = $r2;

        return;
    }

    public org.springframework.expression.spel.standard.TokenKind getKind()
    {
        org.springframework.expression.spel.standard.TokenKind $r1;
        org.springframework.expression.spel.standard.Token r0;

        r0 := @this: org.springframework.expression.spel.standard.Token;

        $r1 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.springframework.expression.spel.standard.Token r2;
        int $i0, $i1;
        java.lang.String $r4, $r10, $r12;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r6, $r7, $r8, $r9, $r11;
        org.springframework.expression.spel.standard.TokenKind $r3, $r5;

        r2 := @this: org.springframework.expression.spel.standard.Token;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");

        $r3 = r2.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r4 = virtualinvoke $r3.<org.springframework.expression.spel.standard.TokenKind: java.lang.String toString()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r5 = r2.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $z0 = virtualinvoke $r5.<org.springframework.expression.spel.standard.TokenKind: boolean hasPayload()>();

        if $z0 == 0 goto label1;

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r12 = r2.<org.springframework.expression.spel.standard.Token: java.lang.String data>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

     label1:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $i0 = r2.<org.springframework.expression.spel.standard.Token: int startpos>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $i1 = r2.<org.springframework.expression.spel.standard.Token: int endpos>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public boolean isIdentifier()
    {
        org.springframework.expression.spel.standard.TokenKind $r1, $r2;
        org.springframework.expression.spel.standard.Token r0;

        r0 := @this: org.springframework.expression.spel.standard.Token;

        $r2 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r1 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind IDENTIFIER>;

        if $r2 != $r1 goto label1;

        return 1;

     label1:
        return 0;
    }

    public boolean isNumericRelationalOperator()
    {
        org.springframework.expression.spel.standard.Token r0;
        org.springframework.expression.spel.standard.TokenKind $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r0 := @this: org.springframework.expression.spel.standard.Token;

        $r2 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r1 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind GT>;

        if $r2 == $r1 goto label1;

        $r4 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r3 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind GE>;

        if $r4 == $r3 goto label1;

        $r6 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r5 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LT>;

        if $r6 == $r5 goto label1;

        $r8 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r7 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind LE>;

        if $r8 == $r7 goto label1;

        $r10 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r9 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind EQ>;

        if $r10 == $r9 goto label1;

        $r12 = r0.<org.springframework.expression.spel.standard.Token: org.springframework.expression.spel.standard.TokenKind kind>;

        $r11 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind NE>;

        if $r12 == $r11 goto label1;

        return 0;

     label1:
        return 1;
    }

    public java.lang.String stringValue()
    {
        java.lang.String $r1;
        org.springframework.expression.spel.standard.Token r0;

        r0 := @this: org.springframework.expression.spel.standard.Token;

        $r1 = r0.<org.springframework.expression.spel.standard.Token: java.lang.String data>;

        return $r1;
    }

    public org.springframework.expression.spel.standard.Token asInstanceOfToken()
    {
        org.springframework.expression.spel.standard.Token $r0, r1;
        int $i0, $i1;
        org.springframework.expression.spel.standard.TokenKind $r2;

        r1 := @this: org.springframework.expression.spel.standard.Token;

        $r0 = new org.springframework.expression.spel.standard.Token;

        $r2 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind INSTANCEOF>;

        $i1 = r1.<org.springframework.expression.spel.standard.Token: int startpos>;

        $i0 = r1.<org.springframework.expression.spel.standard.Token: int endpos>;

        specialinvoke $r0.<org.springframework.expression.spel.standard.Token: void <init>(org.springframework.expression.spel.standard.TokenKind,int,int)>($r2, $i1, $i0);

        return $r0;
    }

    public org.springframework.expression.spel.standard.Token asMatchesToken()
    {
        org.springframework.expression.spel.standard.Token $r0, r1;
        int $i0, $i1;
        org.springframework.expression.spel.standard.TokenKind $r2;

        r1 := @this: org.springframework.expression.spel.standard.Token;

        $r0 = new org.springframework.expression.spel.standard.Token;

        $r2 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind MATCHES>;

        $i1 = r1.<org.springframework.expression.spel.standard.Token: int startpos>;

        $i0 = r1.<org.springframework.expression.spel.standard.Token: int endpos>;

        specialinvoke $r0.<org.springframework.expression.spel.standard.Token: void <init>(org.springframework.expression.spel.standard.TokenKind,int,int)>($r2, $i1, $i0);

        return $r0;
    }

    public org.springframework.expression.spel.standard.Token asBetweenToken()
    {
        org.springframework.expression.spel.standard.Token $r0, r1;
        int $i0, $i1;
        org.springframework.expression.spel.standard.TokenKind $r2;

        r1 := @this: org.springframework.expression.spel.standard.Token;

        $r0 = new org.springframework.expression.spel.standard.Token;

        $r2 = <org.springframework.expression.spel.standard.TokenKind: org.springframework.expression.spel.standard.TokenKind BETWEEN>;

        $i1 = r1.<org.springframework.expression.spel.standard.Token: int startpos>;

        $i0 = r1.<org.springframework.expression.spel.standard.Token: int endpos>;

        specialinvoke $r0.<org.springframework.expression.spel.standard.Token: void <init>(org.springframework.expression.spel.standard.TokenKind,int,int)>($r2, $i1, $i0);

        return $r0;
    }
}
