class com.hp.hpl.jena.ontology.impl.OntModelImpl$3 extends com.hp.hpl.jena.util.iterator.Filter
{
    final com.hp.hpl.jena.ontology.impl.OntModelImpl this$0;

    void <init>(com.hp.hpl.jena.ontology.impl.OntModelImpl)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl r1;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$3 r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl$3;

        r1 := @parameter0: com.hp.hpl.jena.ontology.impl.OntModelImpl;

        r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl$3: com.hp.hpl.jena.ontology.impl.OntModelImpl this$0> = r1;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.Filter: void <init>()>();

        return;
    }

    public boolean accept(com.hp.hpl.jena.ontology.OntClass)
    {
        com.hp.hpl.jena.ontology.OntClass r0;
        com.hp.hpl.jena.ontology.impl.OntModelImpl$3 r1;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl$3;

        r0 := @parameter0: com.hp.hpl.jena.ontology.OntClass;

        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.ontology.OntClass: boolean isAnon()>();

        return $z0;
    }

    public volatile boolean accept(java.lang.Object)
    {
        com.hp.hpl.jena.ontology.impl.OntModelImpl$3 r0;
        java.lang.Object r1;
        com.hp.hpl.jena.ontology.OntClass $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.OntModelImpl$3;

        r1 := @parameter0: java.lang.Object;

        $r2 = (com.hp.hpl.jena.ontology.OntClass) r1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.OntModelImpl$3: boolean accept(com.hp.hpl.jena.ontology.OntClass)>($r2);

        return $z0;
    }
}
