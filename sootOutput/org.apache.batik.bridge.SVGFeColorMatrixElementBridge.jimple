public class org.apache.batik.bridge.SVGFeColorMatrixElementBridge extends org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge
{

    public void <init>()
    {
        org.apache.batik.bridge.SVGFeColorMatrixElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeColorMatrixElementBridge;

        specialinvoke r0.<org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void <init>()>();

        return;
    }

    public java.lang.String getLocalName()
    {
        org.apache.batik.bridge.SVGFeColorMatrixElementBridge r0;

        r0 := @this: org.apache.batik.bridge.SVGFeColorMatrixElementBridge;

        return "feColorMatrix";
    }

    public org.apache.batik.ext.awt.image.renderable.Filter createFilter(org.apache.batik.bridge.BridgeContext, org.w3c.dom.Element, org.w3c.dom.Element, org.apache.batik.gvt.GraphicsNode, org.apache.batik.ext.awt.image.renderable.Filter, java.awt.geom.Rectangle2D, java.util.Map)
    {
        org.apache.batik.bridge.SVGFeColorMatrixElementBridge r16;
        java.awt.geom.Rectangle2D $r7, r8, $r9;
        java.lang.Error $r11;
        org.apache.batik.ext.awt.image.PadMode $r19;
        java.lang.StringBuffer $r12, $r13, $r14;
        java.util.Map r4;
        int $i0;
        org.apache.batik.ext.awt.image.renderable.ColorMatrixRable r17;
        java.lang.String $r15;
        float[][] $r10;
        org.apache.batik.gvt.GraphicsNode r2;
        org.apache.batik.bridge.BridgeContext r5;
        org.apache.batik.ext.awt.image.renderable.Filter r3, $r6;
        org.apache.batik.ext.awt.image.renderable.PadRable8Bit $r18;
        org.w3c.dom.Element r0, r1;
        float $f0, $f1;

        r16 := @this: org.apache.batik.bridge.SVGFeColorMatrixElementBridge;

        r5 := @parameter0: org.apache.batik.bridge.BridgeContext;

        r0 := @parameter1: org.w3c.dom.Element;

        r1 := @parameter2: org.w3c.dom.Element;

        r2 := @parameter3: org.apache.batik.gvt.GraphicsNode;

        r3 := @parameter4: org.apache.batik.ext.awt.image.renderable.Filter;

        r8 := @parameter5: java.awt.geom.Rectangle2D;

        r4 := @parameter6: java.util.Map;

        $r6 = staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: org.apache.batik.ext.awt.image.renderable.Filter getIn(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, r3, r4, r5);

        if $r6 != null goto label1;

        return null;

     label1:
        $r7 = interfaceinvoke $r6.<org.apache.batik.ext.awt.image.renderable.Filter: java.awt.geom.Rectangle2D getBounds2D()>();

        $r9 = staticinvoke <org.apache.batik.bridge.SVGUtilities: java.awt.geom.Rectangle2D convertFilterPrimitiveRegion(org.w3c.dom.Element,org.w3c.dom.Element,org.apache.batik.gvt.GraphicsNode,java.awt.geom.Rectangle2D,java.awt.geom.Rectangle2D,org.apache.batik.bridge.BridgeContext)>(r0, r1, r2, $r7, r8, r5);

        $i0 = staticinvoke <org.apache.batik.bridge.SVGFeColorMatrixElementBridge: int convertType(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r5);

        tableswitch($i0)
        {
            case 0: goto label4;
            case 1: goto label5;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label6;
        };

     label2:
        $f0 = staticinvoke <org.apache.batik.bridge.SVGFeColorMatrixElementBridge: float convertValuesToHueRotate(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r5);

        r17 = staticinvoke <org.apache.batik.ext.awt.image.renderable.ColorMatrixRable8Bit: org.apache.batik.ext.awt.image.renderable.ColorMatrixRable buildHueRotate(float)>($f0);

        goto label7;

     label3:
        r17 = staticinvoke <org.apache.batik.ext.awt.image.renderable.ColorMatrixRable8Bit: org.apache.batik.ext.awt.image.renderable.ColorMatrixRable buildLuminanceToAlpha()>();

        goto label7;

     label4:
        $r10 = staticinvoke <org.apache.batik.bridge.SVGFeColorMatrixElementBridge: float[][] convertValuesToMatrix(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r5);

        r17 = staticinvoke <org.apache.batik.ext.awt.image.renderable.ColorMatrixRable8Bit: org.apache.batik.ext.awt.image.renderable.ColorMatrixRable buildMatrix(float[][])>($r10);

        goto label7;

     label5:
        $f1 = staticinvoke <org.apache.batik.bridge.SVGFeColorMatrixElementBridge: float convertValuesToSaturate(org.w3c.dom.Element,org.apache.batik.bridge.BridgeContext)>(r0, r5);

        r17 = staticinvoke <org.apache.batik.ext.awt.image.renderable.ColorMatrixRable8Bit: org.apache.batik.ext.awt.image.renderable.ColorMatrixRable buildSaturate(float)>($f1);

        goto label7;

     label6:
        $r11 = new java.lang.Error;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("invalid convertType:");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.Error: void <init>(java.lang.String)>($r15);

        throw $r11;

     label7:
        interfaceinvoke r17.<org.apache.batik.ext.awt.image.renderable.ColorMatrixRable: void setSource(org.apache.batik.ext.awt.image.renderable.Filter)>($r6);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void handleColorInterpolationFilters(org.apache.batik.ext.awt.image.renderable.Filter,org.w3c.dom.Element)>(r17, r0);

        $r18 = new org.apache.batik.ext.awt.image.renderable.PadRable8Bit;

        $r19 = <org.apache.batik.ext.awt.image.PadMode: org.apache.batik.ext.awt.image.PadMode ZERO_PAD>;

        specialinvoke $r18.<org.apache.batik.ext.awt.image.renderable.PadRable8Bit: void <init>(org.apache.batik.ext.awt.image.renderable.Filter,java.awt.geom.Rectangle2D,org.apache.batik.ext.awt.image.PadMode)>(r17, $r9, $r19);

        staticinvoke <org.apache.batik.bridge.AbstractSVGFilterPrimitiveElementBridge: void updateFilterMap(org.w3c.dom.Element,org.apache.batik.ext.awt.image.renderable.Filter,java.util.Map)>(r0, $r18, r4);

        return $r18;
    }

    protected static float[][] convertValuesToMatrix(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r6, $r16;
        float[] $r7, $r8, $r10, $r11, $r12, $r13;
        java.util.StringTokenizer $r3;
        int $i0, $i1, $i2, i3, i4;
        java.lang.String $r1, $r9;
        boolean $z0, $z1;
        float[][] r2;
        org.apache.batik.bridge.BridgeException $r4, $r15;
        org.apache.batik.bridge.BridgeContext r5;
        java.lang.NumberFormatException $r14;
        org.w3c.dom.Element r0;
        float $f0, $f1, $f2;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "values");

        r2 = newmultiarray (float)[4][5];

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label01;

        $r10 = r2[0];

        $r10[0] = 1.0F;

        $r11 = r2[1];

        $r11[1] = 1.0F;

        $r12 = r2[2];

        $r12[2] = 1.0F;

        $r13 = r2[3];

        $r13[3] = 1.0F;

        return r2;

     label01:
        $r3 = new java.util.StringTokenizer;

        specialinvoke $r3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r1, " ,");

        i3 = 0;

     label02:
        goto label04;

     label03:
        $i1 = i3 / 5;

        $r8 = r2[$i1];

        $i2 = i3 % 5;

        $r9 = virtualinvoke $r3.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $f2 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r9);

        $r8[$i2] = $f2;

        i3 = i3 + 1;

     label04:
        if i3 >= 20 goto label05;

        $z1 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label03;

     label05:
        goto label07;

     label06:
        $r14 := @caughtexception;

        $r15 = new org.apache.batik.bridge.BridgeException;

        $r16 = newarray (java.lang.Object)[3];

        $r16[0] = "values";

        $r16[1] = $r1;

        $r16[2] = $r14;

        specialinvoke $r15.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r5, r0, $r14, "attribute.malformed", $r16);

        throw $r15;

     label07:
        if i3 != 20 goto label08;

        $z0 = virtualinvoke $r3.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label09;

     label08:
        $r4 = new org.apache.batik.bridge.BridgeException;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "values";

        $r6[1] = $r1;

        specialinvoke $r4.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r5, r0, "attribute.malformed", $r6);

        throw $r4;

     label09:
        i4 = 0;

        goto label11;

     label10:
        $r7 = r2[i4];

        $f0 = $r7[4];

        $f1 = $f0 * 255.0F;

        $r7[4] = $f1;

        i4 = i4 + 1;

     label11:
        if i4 < 4 goto label10;

        return r2;

        catch java.lang.NumberFormatException from label02 to label05 with label06;
    }

    protected static float convertValuesToSaturate(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r5;
        org.apache.batik.bridge.BridgeException $r3;
        java.lang.NumberFormatException $r2;
        org.apache.batik.bridge.BridgeContext r4;
        org.w3c.dom.Element r0;
        int $i0;
        float $f0;
        java.lang.String $r1;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "values");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 1.0F;

     label1:
        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r1);

        return $f0;

     label2:
        $r2 := @caughtexception;

        $r3 = new org.apache.batik.bridge.BridgeException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = "values";

        $r5[1] = $r1;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r4, r0, $r2, "attribute.malformed", $r5);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    protected static float convertValuesToHueRotate(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r5;
        org.apache.batik.bridge.BridgeException $r3;
        java.lang.NumberFormatException $r2;
        org.apache.batik.bridge.BridgeContext r4;
        org.w3c.dom.Element r0;
        int $i0;
        float $f0, $f1;
        java.lang.String $r1;
        double $d0, $d1;

        r0 := @parameter0: org.w3c.dom.Element;

        r4 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "values");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0.0F;

     label1:
        $f0 = staticinvoke <org.apache.batik.bridge.SVGUtilities: float convertSVGNumber(java.lang.String)>($r1);

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double toRadians(double)>($d0);

        $f1 = (float) $d1;

        return $f1;

     label2:
        $r2 := @caughtexception;

        $r3 = new org.apache.batik.bridge.BridgeException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = "values";

        $r5[1] = $r1;

        specialinvoke $r3.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.Exception,java.lang.String,java.lang.Object[])>(r4, r0, $r2, "attribute.malformed", $r5);

        throw $r3;

        catch java.lang.NumberFormatException from label1 to label2 with label2;
    }

    protected static int convertType(org.w3c.dom.Element, org.apache.batik.bridge.BridgeContext)
    {
        java.lang.Object[] $r8;
        org.apache.batik.bridge.BridgeException $r6;
        org.apache.batik.bridge.BridgeContext r7;
        org.w3c.dom.Element r0;
        int $i0;
        java.lang.String $r1, $r2, $r3, $r4, $r5;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: org.w3c.dom.Element;

        r7 := @parameter1: org.apache.batik.bridge.BridgeContext;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "type");

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $r2 = "hueRotate";

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return 2;

     label2:
        $r3 = "luminanceToAlpha";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z1 == 0 goto label3;

        return 3;

     label3:
        $r4 = "matrix";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label4;

        return 0;

     label4:
        $r5 = "saturate";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        if $z3 == 0 goto label5;

        return 1;

     label5:
        $r6 = new org.apache.batik.bridge.BridgeException;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "type";

        $r8[1] = $r1;

        specialinvoke $r6.<org.apache.batik.bridge.BridgeException: void <init>(org.apache.batik.bridge.BridgeContext,org.w3c.dom.Element,java.lang.String,java.lang.Object[])>(r7, r0, "attribute.malformed", $r8);

        throw $r6;
    }
}
