public class org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor extends org.apache.cxf.interceptor.AbstractInDatabindingInterceptor
{

    public void <init>()
    {
        org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractInDatabindingInterceptor: void <init>(java.lang.String)>("pre-protocol-frontend");

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        javax.ws.rs.client.ClientResponseFilter $r14;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r1;
        org.apache.cxf.jaxrs.model.ProviderInfo r11;
        org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor r7;
        boolean $z0, $z1;
        org.apache.cxf.jaxrs.client.spec.ClientRequestContextImpl $r3;
        java.util.Iterator $r9;
        org.apache.cxf.message.Message r0, $r5;
        java.io.IOException $r15;
        javax.ws.rs.client.ClientException $r16;
        org.apache.cxf.message.Exchange $r4;
        java.util.List $r2;
        org.apache.cxf.jaxrs.client.spec.ClientResponseContextImpl $r6;
        javax.ws.rs.core.Response $r8;
        java.lang.Object $r10, $r12, $r13;

        r7 := @this: org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        if $r1 != null goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getClientResponseFilters()>();

        $z0 = interfaceinvoke $r2.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label7;

        $r3 = new org.apache.cxf.jaxrs.client.spec.ClientRequestContextImpl;

        $r4 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r5 = interfaceinvoke $r4.<org.apache.cxf.message.Exchange: org.apache.cxf.message.Message getInMessage()>();

        specialinvoke $r3.<org.apache.cxf.jaxrs.client.spec.ClientRequestContextImpl: void <init>(org.apache.cxf.message.Message,boolean)>($r5, 1);

        $r6 = new org.apache.cxf.jaxrs.client.spec.ClientResponseContextImpl;

        $r8 = virtualinvoke r7.<org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor: javax.ws.rs.core.Response getResponse(org.apache.cxf.message.Message)>(r0);

        specialinvoke $r6.<org.apache.cxf.jaxrs.client.spec.ClientResponseContextImpl: void <init>(javax.ws.rs.core.Response,org.apache.cxf.message.Message)>($r8, r0);

        $r9 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label7;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r10;

        $r12 = virtualinvoke r11.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        staticinvoke <org.apache.cxf.jaxrs.utils.InjectionUtils: void injectContexts(java.lang.Object,org.apache.cxf.jaxrs.model.AbstractResourceInfo,org.apache.cxf.message.Message)>($r12, r11, r0);

     label3:
        $r13 = virtualinvoke r11.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $r14 = (javax.ws.rs.client.ClientResponseFilter) $r13;

        interfaceinvoke $r14.<javax.ws.rs.client.ClientResponseFilter: void filter(javax.ws.rs.client.ClientRequestContext,javax.ws.rs.client.ClientResponseContext)>($r3, $r6);

     label4:
        goto label6;

     label5:
        $r15 := @caughtexception;

        $r16 = new javax.ws.rs.client.ClientException;

        specialinvoke $r16.<javax.ws.rs.client.ClientException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label6:
        goto label2;

     label7:
        return;

        catch java.io.IOException from label3 to label4 with label5;
    }

    protected javax.ws.rs.core.Response getResponse(org.apache.cxf.message.Message)
    {
        java.lang.Integer $r6;
        java.util.Map r11;
        boolean $z0, $z1;
        java.util.Set $r12;
        java.util.List $r19, $r21;
        javax.ws.rs.core.Response r3, $r14;
        javax.ws.rs.core.Response$ResponseBuilder $r7;
        int $i0, $i1;
        java.lang.String $r4, $r9, r24, $r26;
        org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor r27;
        java.util.Map$Entry r16;
        java.util.Iterator $r13, $r22;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r1;
        java.lang.Object $r2, $r5, $r8, $r10, $r15, $r17, $r18, $r20, $r23, $r25;

        r27 := @this: org.apache.cxf.jaxrs.client.spec.ClientResponseFilterInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Ljavax/ws/rs/core/Response;");

        r3 = (javax.ws.rs.core.Response) $r2;

        if r3 == null goto label1;

        return r3;

     label1:
        $r4 = <org.apache.cxf.message.Message: java.lang.String RESPONSE_CODE>;

        $r5 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (java.lang.Integer) $r5;

        $i0 = virtualinvoke $r6.<java.lang.Integer: int intValue()>();

        $r7 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder status(int)>($i0);

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Class)>(class "Ljava/io/InputStream;");

        virtualinvoke $r7.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r8);

        $r9 = <org.apache.cxf.message.Message: java.lang.String PROTOCOL_HEADERS>;

        $r10 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>($r9);

        r11 = (java.util.Map) $r10;

        $r12 = interfaceinvoke r11.<java.util.Map: java.util.Set entrySet()>();

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r15 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r15;

        $r17 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        if null != $r17 goto label3;

        goto label2;

     label3:
        $r18 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.util.List) $r18;

        $i1 = interfaceinvoke $r19.<java.util.List: int size()>();

        if $i1 <= 0 goto label5;

        $r20 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r21 = (java.util.List) $r20;

        $r22 = interfaceinvoke $r21.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r23;

        $r25 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = (java.lang.String) $r25;

        virtualinvoke $r7.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder header(java.lang.String,java.lang.Object)>($r26, r24);

        goto label4;

     label5:
        goto label2;

     label6:
        $r14 = virtualinvoke $r7.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r14;
    }
}
