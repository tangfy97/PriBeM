public class org.apache.xalan.templates.ElemValueOf extends org.apache.xalan.templates.ElemTemplateElement
{
    private org.apache.xpath.XPath m_selectExpression;
    private boolean m_isDot;
    private boolean m_disableOutputEscaping;

    public void <init>()
    {
        org.apache.xalan.templates.ElemValueOf r0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression> = null;

        r0.<org.apache.xalan.templates.ElemValueOf: boolean m_isDot> = 0;

        r0.<org.apache.xalan.templates.ElemValueOf: boolean m_disableOutputEscaping> = 0;

        return;
    }

    public void setSelect(org.apache.xpath.XPath)
    {
        org.apache.xpath.XPath r0;
        org.apache.xalan.templates.ElemValueOf r1;
        java.lang.String $r2;
        boolean $z0, $z1;

        r1 := @this: org.apache.xalan.templates.ElemValueOf;

        r0 := @parameter0: org.apache.xpath.XPath;

        if null == r0 goto label3;

        $r2 = virtualinvoke r0.<org.apache.xpath.XPath: java.lang.String getPatternString()>();

        if null == $r2 goto label1;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(".");

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        r1.<org.apache.xalan.templates.ElemValueOf: boolean m_isDot> = $z1;

     label3:
        r1.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression> = r0;

        return;
    }

    public org.apache.xpath.XPath getSelect()
    {
        org.apache.xalan.templates.ElemValueOf r0;
        org.apache.xpath.XPath $r1;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        $r1 = r0.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        return $r1;
    }

    public void setDisableOutputEscaping(boolean)
    {
        org.apache.xalan.templates.ElemValueOf r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.templates.ElemValueOf: boolean m_disableOutputEscaping> = z0;

        return;
    }

    public boolean getDisableOutputEscaping()
    {
        org.apache.xalan.templates.ElemValueOf r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        $z0 = r0.<org.apache.xalan.templates.ElemValueOf: boolean m_disableOutputEscaping>;

        return $z0;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemValueOf r0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        return 30;
    }

    public void compose(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.XPath $r4, $r5;
        org.apache.xalan.templates.ElemValueOf r0;
        org.apache.xalan.templates.StylesheetRoot r1;
        java.util.Vector $r3;
        org.apache.xalan.templates.StylesheetRoot$ComposeState $r2, $r6;
        int $i0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void compose(org.apache.xalan.templates.StylesheetRoot)>(r1);

        $r2 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot$ComposeState: java.util.Vector getVariableNames()>();

        $r4 = r0.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        if null == $r4 goto label1;

        $r5 = r0.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        $r6 = virtualinvoke r1.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetRoot$ComposeState getComposeState()>();

        $i0 = virtualinvoke $r6.<org.apache.xalan.templates.StylesheetRoot$ComposeState: int getGlobalsSize()>();

        virtualinvoke $r5.<org.apache.xpath.XPath: void fixupVariables(java.util.Vector,int)>($r3, $i0);

     label1:
        return;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemValueOf r0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        return "value-of";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r11, $r17;
        javax.xml.transform.TransformerException $r14, $r16;
        org.apache.xml.serializer.SerializationHandler $r2;
        org.apache.xalan.trace.TraceManager $r6, $r8, $r10, $r12;
        org.apache.xpath.XPathContext $r1;
        int $i0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        org.apache.xpath.Expression $r5;
        org.apache.xpath.XPath $r4, $r9;
        org.apache.xalan.templates.ElemValueOf r3;
        java.lang.RuntimeException $r13;
        org.xml.sax.SAXException $r15;
        org.apache.xpath.objects.XObject $r7;
        org.apache.xalan.transformer.TransformerImpl r0;

        r3 := @this: org.apache.xalan.templates.ElemValueOf;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label01;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r10.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label01:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushNamespaceContext(org.apache.xml.utils.PrefixResolver)>(r3);

        $i0 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void pushCurrentNodeAndExpression(int,int)>($i0, $i0);

        $z1 = r3.<org.apache.xalan.templates.ElemValueOf: boolean m_disableOutputEscaping>;

        if $z1 == 0 goto label02;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.disable-output-escaping", "");

     label02:
        $r4 = r3.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $z2 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z2 == 0 goto label03;

        $r7 = virtualinvoke $r5.<org.apache.xpath.Expression: org.apache.xpath.objects.XObject execute(org.apache.xpath.XPathContext)>($r1);

        $r8 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        $r9 = r3.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        virtualinvoke $r8.<org.apache.xalan.trace.TraceManager: void fireSelectedEvent(int,org.apache.xalan.templates.ElemTemplateElement,java.lang.String,org.apache.xpath.XPath,org.apache.xpath.objects.XObject)>($i0, r3, "select", $r9, $r7);

        virtualinvoke $r7.<org.apache.xpath.objects.XObject: void dispatchCharactersEvents(org.xml.sax.ContentHandler)>($r2);

        goto label04;

     label03:
        virtualinvoke $r5.<org.apache.xpath.Expression: void executeCharsToContentHandler(org.apache.xpath.XPathContext,org.xml.sax.ContentHandler)>($r1, $r2);

     label04:
        goto label15;

     label05:
        goto label08;

     label06:
        $r17 := @caughtexception;

        goto label17;

     label07:
        throw $r17;

     label08:
        goto label19;

     label09:
        goto label14;

     label10:
        $r15 := @caughtexception;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label11:
        $r13 := @caughtexception;

        $r14 = new javax.xml.transform.TransformerException;

        specialinvoke $r14.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r13);

        virtualinvoke $r14.<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)>(r3);

        throw $r14;

     label12:
        $r11 := @caughtexception;

        goto label21;

     label13:
        throw $r11;

     label14:
        return;

     label15:
        $z3 = r3.<org.apache.xalan.templates.ElemValueOf: boolean m_disableOutputEscaping>;

        if $z3 == 0 goto label16;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.enable-output-escaping", "");

     label16:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNodeAndExpression()>();

        goto label05;

     label17:
        $z6 = r3.<org.apache.xalan.templates.ElemValueOf: boolean m_disableOutputEscaping>;

        if $z6 == 0 goto label18;

        interfaceinvoke $r2.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.enable-output-escaping", "");

     label18:
        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        virtualinvoke $r1.<org.apache.xpath.XPathContext: void popCurrentNodeAndExpression()>();

        goto label07;

     label19:
        $z4 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z4 == 0 goto label20;

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r6.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label20:
        goto label09;

     label21:
        $z5 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z5 == 0 goto label22;

        $r12 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r12.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r3);

     label22:
        goto label13;

        catch java.lang.Throwable from label02 to label06 with label06;
        catch org.xml.sax.SAXException from label01 to label08 with label10;
        catch java.lang.RuntimeException from label01 to label08 with label11;
        catch java.lang.Throwable from label01 to label12 with label12;
        catch org.xml.sax.SAXException from label15 to label17 with label10;
        catch java.lang.RuntimeException from label15 to label17 with label11;
        catch java.lang.Throwable from label15 to label17 with label12;
        catch org.xml.sax.SAXException from label17 to label19 with label10;
        catch java.lang.RuntimeException from label17 to label19 with label11;
        catch java.lang.Throwable from label17 to label19 with label12;
    }

    public org.apache.xalan.templates.ElemTemplateElement appendChild(org.apache.xalan.templates.ElemTemplateElement)
    {
        java.lang.Object[] $r1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        org.apache.xalan.templates.ElemValueOf r0;
        java.lang.String $r3, $r4;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        r2 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getNodeName()>();

        $r1[0] = $r3;

        $r4 = virtualinvoke r0.<org.apache.xalan.templates.ElemValueOf: java.lang.String getNodeName()>();

        $r1[1] = $r4;

        virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_CANNOT_ADD", $r1);

        return null;
    }

    protected void callChildVisitors(org.apache.xalan.templates.XSLTVisitor, boolean)
    {
        org.apache.xpath.Expression $r3;
        org.apache.xalan.templates.XSLTVisitor r1;
        org.apache.xpath.XPath $r2, $r4;
        org.apache.xalan.templates.ElemValueOf r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemValueOf;

        r1 := @parameter0: org.apache.xalan.templates.XSLTVisitor;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPath: org.apache.xpath.Expression getExpression()>();

        $r4 = r0.<org.apache.xalan.templates.ElemValueOf: org.apache.xpath.XPath m_selectExpression>;

        virtualinvoke $r3.<org.apache.xpath.Expression: void callVisitors(org.apache.xpath.ExpressionOwner,org.apache.xpath.XPathVisitor)>($r4, r1);

     label1:
        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void callChildVisitors(org.apache.xalan.templates.XSLTVisitor,boolean)>(r1, z0);

        return;
    }
}
