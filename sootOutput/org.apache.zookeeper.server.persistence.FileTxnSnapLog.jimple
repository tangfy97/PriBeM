public class org.apache.zookeeper.server.persistence.FileTxnSnapLog extends java.lang.Object
{
    private final java.io.File dataDir;
    private final java.io.File snapDir;
    private org.apache.zookeeper.server.persistence.TxnLog txnLog;
    private org.apache.zookeeper.server.persistence.SnapShot snapLog;
    public static final int VERSION;
    public static final java.lang.String version;
    private static final org.slf4j.Logger LOG;

    public void <init>(java.io.File, java.io.File) throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.FileTxnLog $r8;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        java.lang.String $r18, $r25;
        boolean $z0, $z1, $z2, $z3;
        org.slf4j.Logger $r3;
        java.io.IOException $r13, $r20;
        java.io.File r1, r2, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r16, $r19, $r23;
        java.lang.StringBuilder $r14, $r15, $r17, $r21, $r22, $r24;
        org.apache.zookeeper.server.persistence.FileSnap $r10;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        r1 := @parameter0: java.io.File;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Opening datadir:{} snapDir:{}", r1, r2);

        $r4 = new java.io.File;

        specialinvoke $r4.<java.io.File: void <init>(java.io.File,java.lang.String)>(r1, "version-2");

        r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir> = $r4;

        $r5 = new java.io.File;

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>(r2, "version-2");

        r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir> = $r5;

        $r6 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        $z0 = virtualinvoke $r6.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r19 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        $z3 = virtualinvoke $r19.<java.io.File: boolean mkdirs()>();

        if $z3 != 0 goto label1;

        $r20 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create data directory ");

        $r23 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r25);

        throw $r20;

     label1:
        $r7 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        $z1 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $r12 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        $z2 = virtualinvoke $r12.<java.io.File: boolean mkdirs()>();

        if $z2 != 0 goto label2;

        $r13 = new java.io.IOException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create snap directory ");

        $r16 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r13;

     label2:
        $r8 = new org.apache.zookeeper.server.persistence.FileTxnLog;

        $r9 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        specialinvoke $r8.<org.apache.zookeeper.server.persistence.FileTxnLog: void <init>(java.io.File)>($r9);

        r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.TxnLog txnLog> = $r8;

        $r10 = new org.apache.zookeeper.server.persistence.FileSnap;

        $r11 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        specialinvoke $r10.<org.apache.zookeeper.server.persistence.FileSnap: void <init>(java.io.File)>($r11);

        r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.SnapShot snapLog> = $r10;

        return;
    }

    public java.io.File getDataDir()
    {
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        java.io.File $r1;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r1 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        return $r1;
    }

    public java.io.File getSnapDir()
    {
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        java.io.File $r1;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r1 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        return $r1;
    }

    public long restore(org.apache.zookeeper.server.DataTree, java.util.Map, org.apache.zookeeper.server.persistence.FileTxnSnapLog$PlayBackListener) throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.FileTxnLog $r28;
        org.apache.zookeeper.KeeperException$NoNodeException $r18;
        byte $b3, $b4;
        java.util.Map r2;
        boolean $z0;
        org.apache.jute.Record $r9, $r27;
        java.lang.StringBuilder $r12, $r13, $r14, $r15, $r16, $r21, $r22, $r23, $r25, $r29, $r30;
        org.apache.zookeeper.server.persistence.TxnLog$TxnIterator $r6;
        long $l0, $l1, $l2, $l5, $l7, l9;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        int $i6, $i8, $i10;
        java.lang.String $r17, $r24, $r26;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog$PlayBackListener r8;
        org.slf4j.Logger $r11;
        org.apache.zookeeper.txn.TxnHeader $r7;
        java.io.IOException $r31;
        java.io.File $r5;
        org.apache.zookeeper.server.persistence.SnapShot $r3;
        org.apache.zookeeper.server.DataTree r1;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        r1 := @parameter0: org.apache.zookeeper.server.DataTree;

        r2 := @parameter1: java.util.Map;

        r8 := @parameter2: org.apache.zookeeper.server.persistence.FileTxnSnapLog$PlayBackListener;

        $r3 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.SnapShot snapLog>;

        interfaceinvoke $r3.<org.apache.zookeeper.server.persistence.SnapShot: long deserialize(org.apache.zookeeper.server.DataTree,java.util.Map)>(r1, r2);

        $r28 = new org.apache.zookeeper.server.persistence.FileTxnLog;

        $r5 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        specialinvoke $r28.<org.apache.zookeeper.server.persistence.FileTxnLog: void <init>(java.io.File)>($r5);

        $l0 = r1.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid>;

        $l1 = $l0 + 1L;

        $r6 = virtualinvoke $r28.<org.apache.zookeeper.server.persistence.FileTxnLog: org.apache.zookeeper.server.persistence.TxnLog$TxnIterator read(long)>($l1);

        l9 = r1.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid>;

     label1:
        $r7 = interfaceinvoke $r6.<org.apache.zookeeper.server.persistence.TxnLog$TxnIterator: org.apache.zookeeper.txn.TxnHeader getHeader()>();

        if $r7 != null goto label2;

        $l7 = r1.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid>;

        return $l7;

     label2:
        $l2 = virtualinvoke $r7.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $b3 = $l2 cmp l9;

        $i10 = (int) $b3;

        if $i10 >= 0 goto label3;

        $b4 = l9 cmp 0L;

        if $b4 == 0 goto label3;

        $r11 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l9);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(higestZxid) > ");

        $l5 = virtualinvoke $r7.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(next log) for type ");

        $i6 = virtualinvoke $r7.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i6);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.slf4j.Logger: void error(java.lang.String)>($r17);

        goto label4;

     label3:
        l9 = virtualinvoke $r7.<org.apache.zookeeper.txn.TxnHeader: long getZxid()>();

     label4:
        $r27 = interfaceinvoke $r6.<org.apache.zookeeper.server.persistence.TxnLog$TxnIterator: org.apache.jute.Record getTxn()>();

        virtualinvoke r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: void processTransaction(org.apache.zookeeper.txn.TxnHeader,org.apache.zookeeper.server.DataTree,java.util.Map,org.apache.jute.Record)>($r7, r1, r2, $r27);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        $r31 = new java.io.IOException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to process transaction type: ");

        $i8 = virtualinvoke $r7.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" error: ");

        $r24 = virtualinvoke $r18.<org.apache.zookeeper.KeeperException$NoNodeException: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r18);

        throw $r31;

     label7:
        $r9 = interfaceinvoke $r6.<org.apache.zookeeper.server.persistence.TxnLog$TxnIterator: org.apache.jute.Record getTxn()>();

        interfaceinvoke r8.<org.apache.zookeeper.server.persistence.FileTxnSnapLog$PlayBackListener: void onTxnLoaded(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>($r7, $r9);

        $z0 = interfaceinvoke $r6.<org.apache.zookeeper.server.persistence.TxnLog$TxnIterator: boolean next()>();

        if $z0 != 0 goto label1;

        goto label8;

     label8:
        return l9;

        catch org.apache.zookeeper.KeeperException$NoNodeException from label4 to label5 with label6;
    }

    public void processTransaction(org.apache.zookeeper.txn.TxnHeader, org.apache.zookeeper.server.DataTree, java.util.Map, org.apache.jute.Record) throws org.apache.zookeeper.KeeperException$NoNodeException
    {
        java.lang.Integer $r5;
        org.apache.zookeeper.KeeperException$NoNodeException $r21;
        org.apache.zookeeper.txn.CreateSessionTxn $r4, $r28;
        java.lang.Long $r2, $r31;
        java.util.Map r1;
        boolean $z0, $z1;
        org.apache.zookeeper.server.DataTree$ProcessTxnResult r40;
        org.apache.jute.Record r3;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r22, $r24, $r26, $r27, $r29, $r33, $r35, $r37;
        long $l1, $l9, $l11, $l12;
        org.apache.zookeeper.KeeperException$Code $r15, $r41;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r39;
        int $i0, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i10, $i13, $i14;
        java.lang.String $r14, $r16, $r17, $r18, $r19, $r25, $r30, $r36, $r38;
        org.slf4j.Logger $r6, $r9, $r20, $r23, $r32, $r34;
        org.apache.zookeeper.txn.TxnHeader r0;
        org.apache.zookeeper.server.DataTree r7;

        r39 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        r0 := @parameter0: org.apache.zookeeper.txn.TxnHeader;

        r7 := @parameter1: org.apache.zookeeper.server.DataTree;

        r1 := @parameter2: java.util.Map;

        r3 := @parameter3: org.apache.jute.Record;

        $i0 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        lookupswitch($i0)
        {
            case -11: goto label3;
            case -10: goto label1;
            default: goto label5;
        };

     label1:
        $l1 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l1);

        $r4 = (org.apache.zookeeper.txn.CreateSessionTxn) r3;

        $i2 = virtualinvoke $r4.<org.apache.zookeeper.txn.CreateSessionTxn: int getTimeOut()>();

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        interfaceinvoke r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r5);

        $r6 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label2;

        $r23 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("playLog --- create session in log: 0x");

        $l9 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $r25 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l9);

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with timeout: ");

        $r28 = (org.apache.zookeeper.txn.CreateSessionTxn) r3;

        $i10 = virtualinvoke $r28.<org.apache.zookeeper.txn.CreateSessionTxn: int getTimeOut()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r23, 32L, $r30);

     label2:
        r40 = virtualinvoke r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>(r0, r3);

        goto label6;

     label3:
        $l11 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $r31 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l11);

        interfaceinvoke r1.<java.util.Map: java.lang.Object remove(java.lang.Object)>($r31);

        $r32 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r32.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label4;

        $r34 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("playLog --- close session in log: 0x");

        $l12 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: long getClientId()>();

        $r36 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l12);

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r34, 32L, $r38);

     label4:
        r40 = virtualinvoke r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>(r0, r3);

        goto label6;

     label5:
        r40 = virtualinvoke r7.<org.apache.zookeeper.server.DataTree: org.apache.zookeeper.server.DataTree$ProcessTxnResult processTxn(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>(r0, r3);

     label6:
        $i13 = r40.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r41 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code OK>;

        $i14 = virtualinvoke $r41.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        if $i13 == $i14 goto label8;

        $i3 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        if $i3 != 1 goto label7;

        $i6 = r40.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r15 = <org.apache.zookeeper.KeeperException$Code: org.apache.zookeeper.KeeperException$Code NONODE>;

        $i7 = virtualinvoke $r15.<org.apache.zookeeper.KeeperException$Code: int intValue()>();

        if $i6 != $i7 goto label7;

        $r16 = r40.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path>;

        $i8 = virtualinvoke $r16.<java.lang.String: int lastIndexOf(int)>(47);

        $r17 = r40.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path>;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int,int)>(0, $i8);

        $r20 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $r19 = r40.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: java.lang.String path>;

        interfaceinvoke $r20.<org.slf4j.Logger: void error(java.lang.String,java.lang.Object,java.lang.Object)>("Parent {} missing for {}", $r18, $r19);

        $r21 = new org.apache.zookeeper.KeeperException$NoNodeException;

        specialinvoke $r21.<org.apache.zookeeper.KeeperException$NoNodeException: void <init>(java.lang.String)>($r18);

        throw $r21;

     label7:
        $r9 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Ignoring processTxn failure hdr: ");

        $i4 = virtualinvoke r0.<org.apache.zookeeper.txn.TxnHeader: int getType()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : error: ");

        $i5 = r40.<org.apache.zookeeper.server.DataTree$ProcessTxnResult: int err>;

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r9.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label8:
        return;
    }

    public long getLastLoggedZxid()
    {
        org.apache.zookeeper.server.persistence.FileTxnLog $r0;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r1;
        long $l0;
        java.io.File $r2;

        r1 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r0 = new org.apache.zookeeper.server.persistence.FileTxnLog;

        $r2 = r1.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        specialinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnLog: void <init>(java.io.File)>($r2);

        $l0 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileTxnLog: long getLastLoggedZxid()>();

        return $l0;
    }

    public void save(org.apache.zookeeper.server.DataTree, java.util.concurrent.ConcurrentHashMap) throws java.io.IOException
    {
        org.slf4j.Logger $r5;
        java.util.concurrent.ConcurrentHashMap r7;
        long l0;
        java.io.File $r1, $r3;
        org.apache.zookeeper.server.persistence.SnapShot $r8;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r2;
        org.apache.zookeeper.server.DataTree r0;
        java.lang.String $r4, $r6;

        r2 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        r0 := @parameter0: org.apache.zookeeper.server.DataTree;

        r7 := @parameter1: java.util.concurrent.ConcurrentHashMap;

        l0 = r0.<org.apache.zookeeper.server.DataTree: long lastProcessedZxid>;

        $r1 = new java.io.File;

        $r3 = r2.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        $r4 = staticinvoke <org.apache.zookeeper.server.persistence.Util: java.lang.String makeSnapshotName(long)>(l0);

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r4);

        $r5 = <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG>;

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>(l0);

        interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String,java.lang.Object,java.lang.Object)>("Snapshotting: 0x{} to {}", $r6, $r1);

        $r8 = r2.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.SnapShot snapLog>;

        interfaceinvoke $r8.<org.apache.zookeeper.server.persistence.SnapShot: void serialize(org.apache.zookeeper.server.DataTree,java.util.Map,java.io.File)>(r0, r7, $r1);

        return;
    }

    public boolean truncateLog(long) throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.FileTxnLog $r1, $r3;
        long l0;
        java.io.File $r2, $r4, $r6;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        org.apache.zookeeper.server.persistence.FileSnap $r5;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: void close()>();

        $r1 = new org.apache.zookeeper.server.persistence.FileTxnLog;

        $r2 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        specialinvoke $r1.<org.apache.zookeeper.server.persistence.FileTxnLog: void <init>(java.io.File)>($r2);

        $z0 = virtualinvoke $r1.<org.apache.zookeeper.server.persistence.FileTxnLog: boolean truncate(long)>(l0);

        virtualinvoke $r1.<org.apache.zookeeper.server.persistence.FileTxnLog: void close()>();

        $r3 = new org.apache.zookeeper.server.persistence.FileTxnLog;

        $r4 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        specialinvoke $r3.<org.apache.zookeeper.server.persistence.FileTxnLog: void <init>(java.io.File)>($r4);

        r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.TxnLog txnLog> = $r3;

        $r5 = new org.apache.zookeeper.server.persistence.FileSnap;

        $r6 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        specialinvoke $r5.<org.apache.zookeeper.server.persistence.FileSnap: void <init>(java.io.File)>($r6);

        r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.SnapShot snapLog> = $r5;

        return $z0;
    }

    public java.io.File findMostRecentSnapshot() throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r1;
        org.apache.zookeeper.server.persistence.FileSnap $r0;
        java.io.File $r2, $r3;

        r1 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r0 = new org.apache.zookeeper.server.persistence.FileSnap;

        $r2 = r1.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        specialinvoke $r0.<org.apache.zookeeper.server.persistence.FileSnap: void <init>(java.io.File)>($r2);

        $r3 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileSnap: java.io.File findMostRecentSnapshot()>();

        return $r3;
    }

    public java.util.List findNRecentSnapshots(int) throws java.io.IOException
    {
        java.util.List $r3;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r1;
        int i0;
        org.apache.zookeeper.server.persistence.FileSnap $r0;
        java.io.File $r2;

        r1 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        i0 := @parameter0: int;

        $r0 = new org.apache.zookeeper.server.persistence.FileSnap;

        $r2 = r1.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File snapDir>;

        specialinvoke $r0.<org.apache.zookeeper.server.persistence.FileSnap: void <init>(java.io.File)>($r2);

        $r3 = virtualinvoke $r0.<org.apache.zookeeper.server.persistence.FileSnap: java.util.List findNRecentSnapshots(int)>(i0);

        return $r3;
    }

    public java.io.File[] getSnapshotLogs(long)
    {
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        long l0;
        java.io.File[] $r2, $r3;
        java.io.File $r1;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.io.File dataDir>;

        $r2 = virtualinvoke $r1.<java.io.File: java.io.File[] listFiles()>();

        $r3 = staticinvoke <org.apache.zookeeper.server.persistence.FileTxnLog: java.io.File[] getLogFiles(java.io.File[],long)>($r2, l0);

        return $r3;
    }

    public boolean append(org.apache.zookeeper.server.Request) throws java.io.IOException
    {
        org.apache.zookeeper.server.Request r1;
        org.apache.zookeeper.server.persistence.TxnLog $r4;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;
        org.apache.jute.Record $r2;
        org.apache.zookeeper.txn.TxnHeader $r3;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        r1 := @parameter0: org.apache.zookeeper.server.Request;

        $r4 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.TxnLog txnLog>;

        $r3 = r1.<org.apache.zookeeper.server.Request: org.apache.zookeeper.txn.TxnHeader hdr>;

        $r2 = r1.<org.apache.zookeeper.server.Request: org.apache.jute.Record txn>;

        $z0 = interfaceinvoke $r4.<org.apache.zookeeper.server.persistence.TxnLog: boolean append(org.apache.zookeeper.txn.TxnHeader,org.apache.jute.Record)>($r3, $r2);

        return $z0;
    }

    public void commit() throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.TxnLog $r1;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r1 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.TxnLog txnLog>;

        interfaceinvoke $r1.<org.apache.zookeeper.server.persistence.TxnLog: void commit()>();

        return;
    }

    public void rollLog() throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.TxnLog $r1;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r1 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.TxnLog txnLog>;

        interfaceinvoke $r1.<org.apache.zookeeper.server.persistence.TxnLog: void rollLog()>();

        return;
    }

    public void close() throws java.io.IOException
    {
        org.apache.zookeeper.server.persistence.SnapShot $r2;
        org.apache.zookeeper.server.persistence.TxnLog $r1;
        org.apache.zookeeper.server.persistence.FileTxnSnapLog r0;

        r0 := @this: org.apache.zookeeper.server.persistence.FileTxnSnapLog;

        $r1 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.TxnLog txnLog>;

        interfaceinvoke $r1.<org.apache.zookeeper.server.persistence.TxnLog: void close()>();

        $r2 = r0.<org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.apache.zookeeper.server.persistence.SnapShot snapLog>;

        interfaceinvoke $r2.<org.apache.zookeeper.server.persistence.SnapShot: void close()>();

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <org.apache.zookeeper.server.persistence.FileTxnSnapLog: java.lang.String version> = "version-";

        <org.apache.zookeeper.server.persistence.FileTxnSnapLog: int VERSION> = 2;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/persistence/FileTxnSnapLog;");

        <org.apache.zookeeper.server.persistence.FileTxnSnapLog: org.slf4j.Logger LOG> = $r0;

        return;
    }
}
