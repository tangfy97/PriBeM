public class org.apache.lucene.util.BytesRefHash$DirectBytesStartArray extends org.apache.lucene.util.BytesRefHash$BytesStartArray
{
    protected final int initSize;
    private int[] bytesStart;
    private final org.apache.lucene.util.Counter bytesUsed;
    static final boolean $assertionsDisabled;

    public void <init>(int, org.apache.lucene.util.Counter)
    {
        int i0;
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray r0;
        org.apache.lucene.util.Counter r1;

        r0 := @this: org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.lucene.util.Counter;

        specialinvoke r0.<org.apache.lucene.util.BytesRefHash$BytesStartArray: void <init>()>();

        r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: org.apache.lucene.util.Counter bytesUsed> = r1;

        r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int initSize> = i0;

        return;
    }

    public void <init>(int)
    {
        int i0;
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray r0;
        org.apache.lucene.util.Counter $r1;

        r0 := @this: org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.lucene.util.Counter: org.apache.lucene.util.Counter newCounter()>();

        specialinvoke r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: void <init>(int,org.apache.lucene.util.Counter)>(i0, $r1);

        return;
    }

    public int[] clear()
    {
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray r0;

        r0 := @this: org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] bytesStart> = null;

        return null;
    }

    public int[] grow()
    {
        java.lang.AssertionError $r5;
        int[] $r1, $r2, $r3, $r4;
        int $i0, $i1;
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray r0;
        boolean $z0;

        r0 := @this: org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        $z0 = <org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] bytesStart>;

        if $r4 != null goto label1;

        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>()>();

        throw $r5;

     label1:
        $r2 = r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] bytesStart>;

        $r1 = r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] bytesStart>;

        $i0 = lengthof $r1;

        $i1 = $i0 + 1;

        $r3 = staticinvoke <org.apache.lucene.util.ArrayUtil: int[] grow(int[],int)>($r2, $i1);

        r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] bytesStart> = $r3;

        return $r3;
    }

    public int[] init()
    {
        int[] $r1;
        int $i0, $i1;
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray r0;

        r0 := @this: org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        $i0 = r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int initSize>;

        $i1 = staticinvoke <org.apache.lucene.util.ArrayUtil: int oversize(int,int)>($i0, 4);

        $r1 = newarray (int)[$i1];

        r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: int[] bytesStart> = $r1;

        return $r1;
    }

    public org.apache.lucene.util.Counter bytesUsed()
    {
        org.apache.lucene.util.BytesRefHash$DirectBytesStartArray r0;
        org.apache.lucene.util.Counter $r1;

        r0 := @this: org.apache.lucene.util.BytesRefHash$DirectBytesStartArray;

        $r1 = r0.<org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: org.apache.lucene.util.Counter bytesUsed>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/util/BytesRefHash;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.util.BytesRefHash$DirectBytesStartArray: boolean $assertionsDisabled> = $z1;

        return;
    }
}
