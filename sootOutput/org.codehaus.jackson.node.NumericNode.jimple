public abstract class org.codehaus.jackson.node.NumericNode extends org.codehaus.jackson.node.ValueNode
{

    protected void <init>()
    {
        org.codehaus.jackson.node.NumericNode r0;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        specialinvoke r0.<org.codehaus.jackson.node.ValueNode: void <init>()>();

        return;
    }

    public final boolean isNumber()
    {
        org.codehaus.jackson.node.NumericNode r0;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        return 1;
    }

    public abstract org.codehaus.jackson.JsonParser$NumberType getNumberType();

    public abstract java.lang.Number getNumberValue();

    public abstract int getIntValue();

    public abstract long getLongValue();

    public abstract double getDoubleValue();

    public abstract java.math.BigDecimal getDecimalValue();

    public abstract java.math.BigInteger getBigIntegerValue();

    public abstract java.lang.String asText();

    public int asInt()
    {
        int $i0;
        org.codehaus.jackson.node.NumericNode r0;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.node.NumericNode: int getIntValue()>();

        return $i0;
    }

    public int asInt(int)
    {
        int $i0, i1;
        org.codehaus.jackson.node.NumericNode r0;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.node.NumericNode: int getIntValue()>();

        return $i0;
    }

    public long asLong()
    {
        org.codehaus.jackson.node.NumericNode r0;
        long $l0;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        $l0 = virtualinvoke r0.<org.codehaus.jackson.node.NumericNode: long getLongValue()>();

        return $l0;
    }

    public long asLong(long)
    {
        org.codehaus.jackson.node.NumericNode r0;
        long $l0, l1;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        l1 := @parameter0: long;

        $l0 = virtualinvoke r0.<org.codehaus.jackson.node.NumericNode: long getLongValue()>();

        return $l0;
    }

    public double asDouble()
    {
        org.codehaus.jackson.node.NumericNode r0;
        double $d0;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        $d0 = virtualinvoke r0.<org.codehaus.jackson.node.NumericNode: double getDoubleValue()>();

        return $d0;
    }

    public double asDouble(double)
    {
        org.codehaus.jackson.node.NumericNode r0;
        double $d0, d1;

        r0 := @this: org.codehaus.jackson.node.NumericNode;

        d1 := @parameter0: double;

        $d0 = virtualinvoke r0.<org.codehaus.jackson.node.NumericNode: double getDoubleValue()>();

        return $d0;
    }
}
