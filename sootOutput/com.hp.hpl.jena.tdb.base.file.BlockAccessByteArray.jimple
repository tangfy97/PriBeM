public class com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray extends java.lang.Object implements com.hp.hpl.jena.tdb.base.file.BlockAccess
{
    private java.nio.ByteBuffer bytes;
    private long length;
    private long alloc;
    private final java.lang.String label;

    public void <init>(java.lang.String)
    {
        java.lang.String r2;
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(1024);

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes> = $r1;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length> = 0L;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long alloc> = 0L;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.lang.String label> = r2;

        return;
    }

    public java.lang.String getLabel()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.lang.String label>;

        return $r1;
    }

    public com.hp.hpl.jena.tdb.base.block.Block allocate(int)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;
        long l0, $l3, $l4, $l5, $l7;
        java.nio.ByteBuffer $r1;
        com.hp.hpl.jena.tdb.base.block.Block $r2;
        int i1, $i2, $i6;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        i1 := @parameter0: int;

        l0 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long alloc>;

        $r1 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i1);

        $l4 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long alloc>;

        $i2 = i1 + 4;

        $l3 = (long) $i2;

        $l5 = $l4 + $l3;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long alloc> = $l5;

        $r2 = new com.hp.hpl.jena.tdb.base.block.Block;

        $i6 = (int) l0;

        $l7 = (long) $i6;

        specialinvoke $r2.<com.hp.hpl.jena.tdb.base.block.Block: void <init>(long,java.nio.ByteBuffer)>($l7, $r1);

        return $r2;
    }

    public com.hp.hpl.jena.tdb.base.block.Block read(long)
    {
        byte[] $r6;
        long l0, $l2, $l5;
        java.nio.ByteBuffer $r1, $r2, $r3, $r4, $r5;
        byte $b1, $b3, $b6;
        int $i4, $i7, $i8, $i9, $i10, $i11;
        java.lang.String $r12;
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;
        com.hp.hpl.jena.tdb.base.block.Block $r15;
        com.hp.hpl.jena.tdb.base.file.FileException $r14;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i9 = (int) $b1;

        if $i9 < 0 goto label1;

        $l2 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $b3 = l0 cmp $l2;

        $i10 = (int) $b3;

        if $i10 >= 0 goto label1;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i4 = virtualinvoke $r1.<java.nio.ByteBuffer: int capacity()>();

        $l5 = (long) $i4;

        $b6 = l0 cmp $l5;

        $i11 = (int) $b6;

        if $i11 < 0 goto label2;

     label1:
        $r14 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id (read): ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r12);

        throw $r14;

     label2:
        $r2 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i7 = (int) l0;

        virtualinvoke $r2.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i7);

        $r3 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i8 = virtualinvoke $r3.<java.nio.ByteBuffer: int getInt()>();

        $r4 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i8);

        $r5 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $r6 = virtualinvoke $r4.<java.nio.ByteBuffer: byte[] array()>();

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.ByteBuffer get(byte[],int,int)>($r6, 0, $i8);

        $r15 = new com.hp.hpl.jena.tdb.base.block.Block;

        specialinvoke $r15.<com.hp.hpl.jena.tdb.base.block.Block: void <init>(long,java.nio.ByteBuffer)>(l0, $r4);

        return $r15;
    }

    public void write(com.hp.hpl.jena.tdb.base.block.Block)
    {
        byte[] $r22;
        java.nio.ByteBuffer $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        byte $b1, $b5, $b8, $b14, $b25;
        java.lang.Long $r1;
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r7;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r23;
        long $l0, $l2, $l3, $l4, $l7, $l10, $l11, $l12, $l13, $l16, $l17, $l18, $l21, $l22, $l23, $l24;
        int $i6, $i9, $i15, $i19, $i20, i26, $i27, $i28, $i29, $i30, $i31, $i32;
        java.lang.String $r12;
        com.hp.hpl.jena.tdb.base.block.Block r0;
        com.hp.hpl.jena.tdb.base.file.FileException $r24;

        r7 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        r0 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.lang.Long getId()>();

        $l0 = virtualinvoke $r1.<java.lang.Long: long longValue()>();

        $b1 = $l0 cmp 0L;

        $i29 = (int) $b1;

        if $i29 < 0 goto label1;

        $l4 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $b5 = $l0 cmp $l4;

        $i30 = (int) $b5;

        if $i30 <= 0 goto label2;

     label1:
        $r24 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Bad id (write): ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");

        $l2 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long alloc>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $l3 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r24.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r12);

        throw $r24;

     label2:
        $r13 = virtualinvoke r0.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        $i6 = virtualinvoke $r13.<java.nio.ByteBuffer: int capacity()>();

        $l7 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $b8 = $l0 cmp $l7;

        if $b8 != 0 goto label6;

        $r14 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i9 = virtualinvoke $r14.<java.nio.ByteBuffer: int capacity()>();

        $l11 = (long) $i9;

        $l10 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $l13 = $l11 - $l10;

        $l12 = (long) $i6;

        $b14 = $l13 cmp $l12;

        $i31 = (int) $b14;

        if $i31 >= 0 goto label5;

        $r15 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i19 = virtualinvoke $r15.<java.nio.ByteBuffer: int capacity()>();

        i26 = $i19 + 1024;

     label3:
        $r16 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i20 = virtualinvoke $r16.<java.nio.ByteBuffer: int capacity()>();

        $l22 = (long) $i20;

        $l21 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $l24 = $l22 - $l21;

        $l23 = (long) $i6;

        $b25 = $l24 cmp $l23;

        $i32 = (int) $b25;

        if $i32 >= 0 goto label4;

        i26 = i26 + 1024;

        goto label3;

     label4:
        $r17 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i26);

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        $r18 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        virtualinvoke $r17.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>($r18);

     label5:
        $l17 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $i15 = $i6 + 4;

        $l16 = (long) $i15;

        $l18 = $l17 + $l16;

        r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length> = $l18;

     label6:
        $r19 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $i27 = (int) $l0;

        virtualinvoke $r19.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i27);

        $r20 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        virtualinvoke $r20.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i6);

        $r21 = r7.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: java.nio.ByteBuffer bytes>;

        $r22 = virtualinvoke $r13.<java.nio.ByteBuffer: byte[] array()>();

        $i28 = virtualinvoke $r13.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r21.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>($r22, 0, $i28);

        return;
    }

    public void overwrite(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;
        com.hp.hpl.jena.tdb.base.block.Block r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: void write(com.hp.hpl.jena.tdb.base.block.Block)>(r1);

        return;
    }

    public boolean isEmpty()
    {
        byte $b1;
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;
        long $l0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        $l0 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean valid(long)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;
        long l0, $l2;
        byte $b1, $b3;
        int $i4, $i5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i4 = (int) $b1;

        if $i4 < 0 goto label1;

        $l2 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray: long length>;

        $b3 = l0 cmp $l2;

        $i5 = (int) $b3;

        if $i5 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        return;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessByteArray;

        return;
    }
}
