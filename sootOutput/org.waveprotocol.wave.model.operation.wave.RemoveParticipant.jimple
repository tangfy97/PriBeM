public final class org.waveprotocol.wave.model.operation.wave.RemoveParticipant extends org.waveprotocol.wave.model.operation.wave.WaveletOperation
{
    private final org.waveprotocol.wave.model.wave.ParticipantId participant;

    public void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext, org.waveprotocol.wave.model.wave.ParticipantId)
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext r1;
        org.waveprotocol.wave.model.wave.ParticipantId r2;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext;

        r2 := @parameter1: org.waveprotocol.wave.model.wave.ParticipantId;

        specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.WaveletOperation: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext)>(r1);

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "Null participant ID");

        r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant> = r2;

        return;
    }

    public org.waveprotocol.wave.model.wave.ParticipantId getParticipantId()
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        return $r1;
    }

    public void doApply(org.waveprotocol.wave.model.wave.data.WaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r1;
        org.waveprotocol.wave.model.wave.ParticipantId $r2, $r6;
        org.waveprotocol.wave.model.operation.OperationException $r3;
        java.lang.StringBuilder $r4, $r5, $r7;
        java.lang.String $r8;
        org.waveprotocol.wave.model.wave.data.WaveletData r0;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        $r2 = r1.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z0 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveletData: boolean removeParticipant(org.waveprotocol.wave.model.wave.ParticipantId)>($r2);

        if $z0 != 0 goto label1;

        $r3 = new org.waveprotocol.wave.model.operation.OperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to remove non-existent participant ");

        $r6 = r1.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        return;
    }

    public void acceptVisitor(org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor)
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r1;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor r0;

        r1 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r0 := @parameter0: org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor;

        interfaceinvoke r0.<org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor: void visitRemoveParticipant(org.waveprotocol.wave.model.operation.wave.RemoveParticipant)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r3;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7;
        java.lang.String $r6, $r8;

        r2 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("remove participant ");

        $r3 = r2.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r6 = virtualinvoke r2.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: java.lang.String suffixForToString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public java.util.List applyAndReturnReverse(org.waveprotocol.wave.model.wave.data.WaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r0;
        java.util.List $r5;
        int $i0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationContext $r2;
        org.waveprotocol.wave.model.wave.ParticipantId $r4;
        org.waveprotocol.wave.model.wave.data.WaveletData r1;
        org.waveprotocol.wave.model.operation.wave.AddParticipant $r3;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.operation.wave.WaveletOperationContext createReverseContext(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        $i0 = specialinvoke r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: int participantPosition(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: void doApply(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: void update(org.waveprotocol.wave.model.wave.data.WaveletData)>(r1);

        $r3 = new org.waveprotocol.wave.model.operation.wave.AddParticipant;

        $r4 = r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        specialinvoke $r3.<org.waveprotocol.wave.model.operation.wave.AddParticipant: void <init>(org.waveprotocol.wave.model.operation.wave.WaveletOperationContext,org.waveprotocol.wave.model.wave.ParticipantId,int)>($r2, $r4, $i0);

        $r5 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>($r3);

        return $r5;
    }

    public int hashCode()
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r0;
        int $i0;
        org.waveprotocol.wave.model.wave.ParticipantId $r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        $r1 = r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.wave.ParticipantId: int hashCode()>();

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r1, r2;
        java.lang.Object r0;
        org.waveprotocol.wave.model.wave.ParticipantId $r3, $r4;
        boolean $z0, $z1;

        r2 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (org.waveprotocol.wave.model.operation.wave.RemoveParticipant) r0;

        $r4 = r2.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r3 = r1.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>($r3);

        return $z1;
    }

    private int participantPosition(org.waveprotocol.wave.model.wave.data.WaveletData) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r6;
        org.waveprotocol.wave.model.wave.ParticipantId $r7, r11, $r12;
        org.waveprotocol.wave.model.operation.OperationException $r3;
        int i0;
        java.lang.String $r9;
        org.waveprotocol.wave.model.wave.data.WaveletData r0;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        java.util.Set $r1;
        java.lang.StringBuilder $r4, $r5, $r8;
        java.lang.Object $r10;

        r6 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.data.WaveletData;

        i0 = 0;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.model.wave.data.WaveletData: java.util.Set getParticipants()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r10 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.waveprotocol.wave.model.wave.ParticipantId) $r10;

        $r12 = r6.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $z1 = virtualinvoke $r12.<org.waveprotocol.wave.model.wave.ParticipantId: boolean equals(java.lang.Object)>(r11);

        if $z1 == 0 goto label2;

        return i0;

     label2:
        i0 = i0 + 1;

        goto label1;

     label3:
        $r3 = new org.waveprotocol.wave.model.operation.OperationException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to remove non-existent participant ");

        $r7 = r6.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: org.waveprotocol.wave.model.wave.ParticipantId participant>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.waveprotocol.wave.model.operation.OperationException: void <init>(java.lang.String)>($r9);

        throw $r3;
    }

    public volatile java.util.List applyAndReturnReverse(java.lang.Object) throws org.waveprotocol.wave.model.operation.OperationException
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r0;
        java.util.List $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.wave.data.WaveletData $r2;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.data.WaveletData) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: java.util.List applyAndReturnReverse(org.waveprotocol.wave.model.wave.data.WaveletData)>($r2);

        return $r3;
    }

    public volatile void acceptVisitor(org.waveprotocol.wave.model.operation.Visitor)
    {
        org.waveprotocol.wave.model.operation.wave.RemoveParticipant r0;
        org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor $r2;
        org.waveprotocol.wave.model.operation.Visitor r1;

        r0 := @this: org.waveprotocol.wave.model.operation.wave.RemoveParticipant;

        r1 := @parameter0: org.waveprotocol.wave.model.operation.Visitor;

        $r2 = (org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor) r1;

        virtualinvoke r0.<org.waveprotocol.wave.model.operation.wave.RemoveParticipant: void acceptVisitor(org.waveprotocol.wave.model.operation.wave.WaveletOperationVisitor)>($r2);

        return;
    }
}
