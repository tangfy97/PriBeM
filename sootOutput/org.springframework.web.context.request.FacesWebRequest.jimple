public class org.springframework.web.context.request.FacesWebRequest extends org.springframework.web.context.request.FacesRequestAttributes implements org.springframework.web.context.request.NativeWebRequest
{

    public void <init>(javax.faces.context.FacesContext)
    {
        javax.faces.context.FacesContext r1;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        r1 := @parameter0: javax.faces.context.FacesContext;

        specialinvoke r0.<org.springframework.web.context.request.FacesRequestAttributes: void <init>(javax.faces.context.FacesContext)>(r1);

        return;
    }

    public java.lang.Object getNativeRequest()
    {
        javax.faces.context.ExternalContext $r1;
        java.lang.Object $r2;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.Object getRequest()>();

        return $r2;
    }

    public java.lang.Object getNativeResponse()
    {
        javax.faces.context.ExternalContext $r1;
        java.lang.Object $r2;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.Object getResponse()>();

        return $r2;
    }

    public java.lang.Object getNativeRequest(java.lang.Class)
    {
        javax.faces.context.ExternalContext $r2;
        java.lang.Class r0;
        java.lang.Object $r3;
        org.springframework.web.context.request.FacesWebRequest r1;
        boolean $z0;

        r1 := @this: org.springframework.web.context.request.FacesWebRequest;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r3 = virtualinvoke $r2.<javax.faces.context.ExternalContext: java.lang.Object getRequest()>();

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        return null;
    }

    public java.lang.Object getNativeResponse(java.lang.Class)
    {
        javax.faces.context.ExternalContext $r2;
        java.lang.Class r0;
        java.lang.Object $r3;
        org.springframework.web.context.request.FacesWebRequest r1;
        boolean $z0;

        r1 := @this: org.springframework.web.context.request.FacesWebRequest;

        r0 := @parameter0: java.lang.Class;

        if r0 == null goto label1;

        $r2 = virtualinvoke r1.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r3 = virtualinvoke $r2.<javax.faces.context.ExternalContext: java.lang.Object getResponse()>();

        $z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>($r3);

        if $z0 == 0 goto label1;

        return $r3;

     label1:
        return null;
    }

    public java.lang.String getHeader(java.lang.String)
    {
        javax.faces.context.ExternalContext $r1;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r3, $r5;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.lang.String[] getHeaderValues(java.lang.String)
    {
        javax.faces.context.ExternalContext $r1;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String[] $r5;
        java.lang.String r3;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderValuesMap()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public java.util.Iterator getHeaderNames()
    {
        javax.faces.context.ExternalContext $r1;
        java.util.Iterator $r4;
        java.util.Map $r2;
        java.util.Set $r3;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getRequestHeaderMap()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

        return $r4;
    }

    public java.lang.String getParameter(java.lang.String)
    {
        javax.faces.context.ExternalContext $r1;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String r3, $r5;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getRequestParameterMap()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r5 = (java.lang.String) $r4;

        return $r5;
    }

    public java.util.Iterator getParameterNames()
    {
        javax.faces.context.ExternalContext $r1;
        java.util.Iterator $r2;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Iterator getRequestParameterNames()>();

        return $r2;
    }

    public java.lang.String[] getParameterValues(java.lang.String)
    {
        javax.faces.context.ExternalContext $r1;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.String[] $r5;
        java.lang.String r3;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>();

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r5 = (java.lang.String[]) $r4;

        return $r5;
    }

    public java.util.Map getParameterMap()
    {
        javax.faces.context.ExternalContext $r1;
        org.springframework.web.context.request.FacesWebRequest r0;
        java.util.Map $r2;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getRequestParameterValuesMap()>();

        return $r2;
    }

    public java.util.Locale getLocale()
    {
        javax.faces.context.ExternalContext $r2;
        javax.faces.context.FacesContext $r1;
        java.util.Locale $r3;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.FacesContext getFacesContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $r3 = virtualinvoke $r2.<javax.faces.context.ExternalContext: java.util.Locale getRequestLocale()>();

        return $r3;
    }

    public java.lang.String getContextPath()
    {
        javax.faces.context.ExternalContext $r2;
        javax.faces.context.FacesContext $r1;
        java.lang.String $r3;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.FacesContext getFacesContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $r3 = virtualinvoke $r2.<javax.faces.context.ExternalContext: java.lang.String getRequestContextPath()>();

        return $r3;
    }

    public java.lang.String getRemoteUser()
    {
        javax.faces.context.ExternalContext $r2;
        javax.faces.context.FacesContext $r1;
        java.lang.String $r3;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.FacesContext getFacesContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $r3 = virtualinvoke $r2.<javax.faces.context.ExternalContext: java.lang.String getRemoteUser()>();

        return $r3;
    }

    public java.security.Principal getUserPrincipal()
    {
        javax.faces.context.ExternalContext $r2;
        java.security.Principal $r3;
        javax.faces.context.FacesContext $r1;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.FacesContext getFacesContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $r3 = virtualinvoke $r2.<javax.faces.context.ExternalContext: java.security.Principal getUserPrincipal()>();

        return $r3;
    }

    public boolean isUserInRole(java.lang.String)
    {
        javax.faces.context.ExternalContext $r2;
        javax.faces.context.FacesContext $r1;
        java.lang.String r3;
        org.springframework.web.context.request.FacesWebRequest r0;
        boolean $z0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.FacesContext getFacesContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $z0 = virtualinvoke $r2.<javax.faces.context.ExternalContext: boolean isUserInRole(java.lang.String)>(r3);

        return $z0;
    }

    public boolean isSecure()
    {
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        return 0;
    }

    public boolean checkNotModified(long)
    {
        long l0;
        org.springframework.web.context.request.FacesWebRequest r0;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        l0 := @parameter0: long;

        return 0;
    }

    public java.lang.String getDescription(boolean)
    {
        javax.faces.context.ExternalContext $r1;
        java.lang.StringBuilder $r2, $r3, $r7, $r8;
        java.lang.Object $r5;
        java.lang.String $r4, $r6, $r9, $r10;
        org.springframework.web.context.request.FacesWebRequest r0;
        boolean z0, $z1;

        r0 := @this: org.springframework.web.context.request.FacesWebRequest;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("context=");

        $r4 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.String getRequestContextPath()>();

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        if z0 == 0 goto label2;

        $r5 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.Object getSession(boolean)>(0);

        if $r5 == null goto label1;

        $r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";session=");

        $r9 = virtualinvoke r0.<org.springframework.web.context.request.FacesWebRequest: java.lang.String getSessionId()>();

        virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

     label1:
        $r6 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.String getRemoteUser()>();

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasLength(java.lang.String)>($r6);

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";user=");

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label2:
        $r10 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r2, $r4;
        org.springframework.web.context.request.FacesWebRequest r1;

        r1 := @this: org.springframework.web.context.request.FacesWebRequest;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("FacesWebRequest: ");

        $r2 = virtualinvoke r1.<org.springframework.web.context.request.FacesWebRequest: java.lang.String getDescription(boolean)>(1);

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
