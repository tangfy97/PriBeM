final class org.apache.xmlbeans.impl.store.Saver$InputStreamSaver extends java.io.InputStream
{
    private org.apache.xmlbeans.impl.store.Locale _locale;
    private boolean _closed;
    private org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl;
    private org.apache.xmlbeans.impl.store.Saver$TextSaver _textSaver;
    private java.io.OutputStreamWriter _converter;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.xmlbeans.impl.store.Cur, org.apache.xmlbeans.XmlOptions)
    {
        java.lang.IllegalStateException $r10;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl $r4, $r8;
        java.lang.AssertionError $r20;
        java.lang.StringBuffer $r11, $r12, $r13;
        java.io.OutputStreamWriter $r7;
        java.lang.String $r6, $r14, $r15, $r17, $r18, r24;
        boolean $z0, $z1, $z2;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;
        org.apache.xmlbeans.impl.store.Saver$TextSaver $r9;
        java.lang.RuntimeException $r22;
        org.apache.xmlbeans.XmlDocumentProperties $r5;
        org.apache.xmlbeans.XmlOptions $r3, r23;
        org.apache.xmlbeans.impl.store.Locale $r2, $r19;
        java.lang.Object $r16;
        java.io.UnsupportedEncodingException $r21;
        org.apache.xmlbeans.impl.store.Cur r1;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        r1 := @parameter0: org.apache.xmlbeans.impl.store.Cur;

        r23 := @parameter1: org.apache.xmlbeans.XmlOptions;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        $r2 = r1.<org.apache.xmlbeans.impl.store.Cur: org.apache.xmlbeans.impl.store.Locale _locale>;

        r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale> = $r2;

        r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: boolean _closed> = 0;

        $z0 = <org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $r19 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        $z1 = virtualinvoke $r19.<org.apache.xmlbeans.impl.store.Locale: boolean entered()>();

        if $z1 != 0 goto label1;

        $r20 = new java.lang.AssertionError;

        specialinvoke $r20.<java.lang.AssertionError: void <init>()>();

        throw $r20;

     label1:
        $r3 = staticinvoke <org.apache.xmlbeans.XmlOptions: org.apache.xmlbeans.XmlOptions maskNull(org.apache.xmlbeans.XmlOptions)>(r23);

        $r4 = new org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl;

        specialinvoke $r4.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: void <init>(org.apache.xmlbeans.impl.store.Saver$InputStreamSaver,org.apache.xmlbeans.impl.store.Saver$1)>(r0, null);

        r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl> = $r4;

        r24 = null;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.store.Locale: org.apache.xmlbeans.XmlDocumentProperties getDocProps(org.apache.xmlbeans.impl.store.Cur,boolean)>(r1, 0);

        if $r5 == null goto label2;

        $r17 = virtualinvoke $r5.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getEncoding()>();

        if $r17 == null goto label2;

        $r18 = virtualinvoke $r5.<org.apache.xmlbeans.XmlDocumentProperties: java.lang.String getEncoding()>();

        r24 = staticinvoke <org.apache.xmlbeans.impl.common.EncodingMap: java.lang.String getIANA2JavaMapping(java.lang.String)>($r18);

     label2:
        $z2 = virtualinvoke $r3.<org.apache.xmlbeans.XmlOptions: boolean hasOption(java.lang.Object)>("CHARACTER_ENCODING");

        if $z2 == 0 goto label3;

        $r16 = virtualinvoke $r3.<org.apache.xmlbeans.XmlOptions: java.lang.Object get(java.lang.Object)>("CHARACTER_ENCODING");

        r24 = (java.lang.String) $r16;

     label3:
        if r24 == null goto label4;

        $r15 = staticinvoke <org.apache.xmlbeans.impl.common.EncodingMap: java.lang.String getJava2IANAMapping(java.lang.String)>(r24);

        if $r15 == null goto label4;

        r24 = $r15;

     label4:
        if r24 != null goto label5;

        r24 = staticinvoke <org.apache.xmlbeans.impl.common.EncodingMap: java.lang.String getJava2IANAMapping(java.lang.String)>("UTF8");

     label5:
        $r6 = staticinvoke <org.apache.xmlbeans.impl.common.EncodingMap: java.lang.String getIANA2JavaMapping(java.lang.String)>(r24);

        if $r6 != null goto label6;

        $r10 = new java.lang.IllegalStateException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unknown encoding: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r24);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r14);

        throw $r10;

     label6:
        $r7 = new java.io.OutputStreamWriter;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        specialinvoke $r7.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r8, $r6);

        r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: java.io.OutputStreamWriter _converter> = $r7;

     label7:
        goto label9;

     label8:
        $r21 := @caughtexception;

        $r22 = new java.lang.RuntimeException;

        specialinvoke $r22.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r21);

        throw $r22;

     label9:
        $r9 = new org.apache.xmlbeans.impl.store.Saver$TextSaver;

        specialinvoke $r9.<org.apache.xmlbeans.impl.store.Saver$TextSaver: void <init>(org.apache.xmlbeans.impl.store.Cur,org.apache.xmlbeans.XmlOptions,java.lang.String)>(r1, $r3, r24);

        r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$TextSaver _textSaver> = $r9;

        return;

        catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
    }

    public void close() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: boolean _closed> = 1;

        return;
    }

    private void checkClosed() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;
        java.io.IOException $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        $z0 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: boolean _closed>;

        if $z0 == 0 goto label1;

        $r1 = new java.io.IOException;

        specialinvoke $r1.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");

        throw $r1;

     label1:
        return;
    }

    public int read() throws java.io.IOException
    {
        java.lang.Throwable $r9, $r10, $r12;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl $r4, $r7;
        int $i0, $i1;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;
        org.apache.xmlbeans.impl.store.Locale $r1, $r2, $r3, $r5, $r6, $r8, $r11, $r13;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: void checkClosed()>();

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        $r6 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        $i1 = virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int read()>();

     label02:
        $r8 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $i1;

     label03:
        $r12 := @caughtexception;

     label04:
        $r13 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r13.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r12;

     label05:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        entermonitor $r2;

     label06:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        $i0 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int read()>();

     label08:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $i0;

     label10:
        $r10 := @caughtexception;

     label11:
        $r11 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r10;

     label12:
        $r9 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r9;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        java.lang.Throwable $r12, $r13, $r15;
        byte[] r1;
        java.lang.IndexOutOfBoundsException $r2;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl $r6, $r9;
        java.lang.NullPointerException $r11;
        int i0, $i1, i2, $i3, $i4;
        boolean $z0;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;
        org.apache.xmlbeans.impl.store.Locale $r3, $r4, $r5, $r7, $r8, $r10, $r14, $r16;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: void checkClosed()>();

        if r1 != null goto label01;

        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("buf to read into is null");

        throw $r11;

     label01:
        if i0 < 0 goto label02;

        $i1 = lengthof r1;

        if i0 <= $i1 goto label03;

     label02:
        $r2 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Offset is not within buf");

        throw $r2;

     label03:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        $z0 = virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label08;

        $r8 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r8.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label04:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        $i4 = virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int read(byte[],int,int)>(r1, i0, i2);

     label05:
        $r10 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r10.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $i4;

     label06:
        $r15 := @caughtexception;

     label07:
        $r16 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r16.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r15;

     label08:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        entermonitor $r4;

     label09:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label10:
        $r6 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        $i3 = virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int read(byte[],int,int)>(r1, i0, i2);

     label11:
        $r7 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r7.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r4;

     label12:
        return $i3;

     label13:
        $r13 := @caughtexception;

     label14:
        $r14 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r14.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r13;

     label15:
        $r12 := @caughtexception;

        exitmonitor $r4;

     label16:
        throw $r12;

        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Throwable from label10 to label11 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.Throwable from label09 to label12 with label15;
        catch java.lang.Throwable from label13 to label16 with label15;
    }

    private int ensure(int)
    {
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl $r1, $r2, $r5;
        org.apache.xmlbeans.impl.store.Saver$TextSaver $r4;
        int $i0, $i1, i2, i3;
        java.io.OutputStreamWriter $r3;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        i2 := @parameter0: int;

        if i2 > 0 goto label1;

        i2 = 1;

     label1:
        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        i3 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int getAvailable()>();

     label2:
        if i3 >= i2 goto label4;

        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$TextSaver _textSaver>;

        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: java.io.OutputStreamWriter _converter>;

        $i1 = virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Saver$TextSaver: int write(java.io.Writer,int)>($r3, 2048);

        if $i1 >= 2048 goto label3;

        goto label4;

     label3:
        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        i3 = virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int getAvailable()>();

        goto label2;

     label4:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl _outStreamImpl>;

        $i0 = virtualinvoke $r2.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver$OutputStreamImpl: int getAvailable()>();

        return $i0;
    }

    public int available() throws java.io.IOException
    {
        java.lang.Throwable $r7, $r8, $r10;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;
        org.apache.xmlbeans.impl.store.Locale $r1, $r2, $r3, $r4, $r5, $r6, $r9, $r11;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        $r1 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        $z0 = virtualinvoke $r1.<org.apache.xmlbeans.impl.store.Locale: boolean noSync()>();

        if $z0 == 0 goto label05;

        $r5 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r5.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label01:
        $i1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: int ensure(int)>(1024);

     label02:
        $r6 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r6.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        return $i1;

     label03:
        $r10 := @caughtexception;

     label04:
        $r11 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r11.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r10;

     label05:
        $r2 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        entermonitor $r2;

     label06:
        $r3 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r3.<org.apache.xmlbeans.impl.store.Locale: void enter()>();

     label07:
        $i0 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: int ensure(int)>(1024);

     label08:
        $r4 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r4.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        exitmonitor $r2;

     label09:
        return $i0;

     label10:
        $r8 := @caughtexception;

     label11:
        $r9 = r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: org.apache.xmlbeans.impl.store.Locale _locale>;

        virtualinvoke $r9.<org.apache.xmlbeans.impl.store.Locale: void exit()>();

        throw $r8;

     label12:
        $r7 := @caughtexception;

        exitmonitor $r2;

     label13:
        throw $r7;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label10 to label11 with label10;
        catch java.lang.Throwable from label06 to label09 with label12;
        catch java.lang.Throwable from label10 to label13 with label12;
    }

    static int access$100(org.apache.xmlbeans.impl.store.Saver$InputStreamSaver, int)
    {
        int i0, $i1;
        org.apache.xmlbeans.impl.store.Saver$InputStreamSaver r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.store.Saver$InputStreamSaver;

        i0 := @parameter1: int;

        $i1 = specialinvoke r0.<org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: int ensure(int)>(i0);

        return $i1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r1;
        boolean $z0, $z1;

        $r0 = <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver>;

        if $r0 != null goto label1;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.store.Saver");

        <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver> = $r1;

        goto label2;

     label1:
        $r1 = <org.apache.xmlbeans.impl.store.Saver: java.lang.Class class$org$apache$xmlbeans$impl$store$Saver>;

     label2:
        $z0 = virtualinvoke $r1.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        <org.apache.xmlbeans.impl.store.Saver$InputStreamSaver: boolean $assertionsDisabled> = $z1;

        return;
    }
}
