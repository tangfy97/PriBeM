final class org.apache.lucene.util.packed.PackedInts$1 extends org.apache.lucene.util.packed.DirectPackedReader
{
    final org.apache.lucene.store.IndexInput val$in;
    final long val$endPointer;

    void <init>(int, int, org.apache.lucene.store.IndexInput, org.apache.lucene.store.IndexInput, long)
    {
        org.apache.lucene.store.IndexInput r1, r2;
        int i1, i2;
        long l0;
        org.apache.lucene.util.packed.PackedInts$1 r0;

        r0 := @this: org.apache.lucene.util.packed.PackedInts$1;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        r2 := @parameter2: org.apache.lucene.store.IndexInput;

        r1 := @parameter3: org.apache.lucene.store.IndexInput;

        l0 := @parameter4: long;

        r0.<org.apache.lucene.util.packed.PackedInts$1: org.apache.lucene.store.IndexInput val$in> = r1;

        r0.<org.apache.lucene.util.packed.PackedInts$1: long val$endPointer> = l0;

        specialinvoke r0.<org.apache.lucene.util.packed.DirectPackedReader: void <init>(int,int,org.apache.lucene.store.IndexInput)>(i1, i2, r2);

        return;
    }

    public long get(int)
    {
        java.lang.IllegalStateException $r3;
        org.apache.lucene.store.IndexInput $r1;
        long $l1, $l4;
        java.io.IOException $r2;
        org.apache.lucene.util.packed.PackedInts$1 r0;
        int i0, $i2, $i3;

        r0 := @this: org.apache.lucene.util.packed.PackedInts$1;

        i0 := @parameter0: int;

        $l1 = specialinvoke r0.<org.apache.lucene.util.packed.DirectPackedReader: long get(int)>(i0);

        $i2 = r0.<org.apache.lucene.util.packed.PackedInts$1: int valueCount>;

        $i3 = $i2 - 1;

        if i0 != $i3 goto label4;

     label1:
        $r1 = r0.<org.apache.lucene.util.packed.PackedInts$1: org.apache.lucene.store.IndexInput val$in>;

        $l4 = r0.<org.apache.lucene.util.packed.PackedInts$1: long val$endPointer>;

        virtualinvoke $r1.<org.apache.lucene.store.IndexInput: void seek(long)>($l4);

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("failed", $r2);

        throw $r3;

     label4:
        return $l1;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
