public abstract class org.apache.poi.ss.formula.eval.TwoOperandNumericOperation extends org.apache.poi.ss.formula.functions.Fixed2ArgFunction
{
    public static final org.apache.poi.ss.formula.functions.Function AddEval;
    public static final org.apache.poi.ss.formula.functions.Function DivideEval;
    public static final org.apache.poi.ss.formula.functions.Function MultiplyEval;
    public static final org.apache.poi.ss.formula.functions.Function PowerEval;
    public static final org.apache.poi.ss.formula.functions.Function SubtractEval;

    public void <init>()
    {
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation r0;

        r0 := @this: org.apache.poi.ss.formula.eval.TwoOperandNumericOperation;

        specialinvoke r0.<org.apache.poi.ss.formula.functions.Fixed2ArgFunction: void <init>()>();

        return;
    }

    protected final double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval, int, int) throws org.apache.poi.ss.formula.eval.EvaluationException
    {
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation r2;
        org.apache.poi.ss.formula.eval.ValueEval r0, $r1;
        int i0, i1;
        double $d0;

        r2 := @this: org.apache.poi.ss.formula.eval.TwoOperandNumericOperation;

        r0 := @parameter0: org.apache.poi.ss.formula.eval.ValueEval;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: org.apache.poi.ss.formula.eval.ValueEval getSingleValue(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r0, i0, i1);

        $d0 = staticinvoke <org.apache.poi.ss.formula.eval.OperandResolver: double coerceValueToDouble(org.apache.poi.ss.formula.eval.ValueEval)>($r1);

        return $d0;
    }

    public org.apache.poi.ss.formula.eval.ValueEval evaluate(int, int, org.apache.poi.ss.formula.eval.ValueEval, org.apache.poi.ss.formula.eval.ValueEval)
    {
        org.apache.poi.ss.formula.eval.ErrorEval $r3, $r7;
        byte $b2;
        int i0, i1;
        org.apache.poi.ss.formula.eval.EvaluationException $r6;
        double $d0, $d1, $d2;
        boolean $z0, $z1, $z2;
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation r0;
        org.apache.poi.ss.formula.eval.ValueEval r1, r2;
        org.apache.poi.ss.formula.eval.NumberEval $r4, $r5;

        r0 := @this: org.apache.poi.ss.formula.eval.TwoOperandNumericOperation;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.ss.formula.eval.ValueEval;

        r2 := @parameter3: org.apache.poi.ss.formula.eval.ValueEval;

     label1:
        $d0 = virtualinvoke r0.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r1, i0, i1);

        $d1 = virtualinvoke r0.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: double singleOperandEvaluate(org.apache.poi.ss.formula.eval.ValueEval,int,int)>(r2, i0, i1);

        $d2 = virtualinvoke r0.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: double evaluate(double,double)>($d0, $d1);

        $b2 = $d2 cmpl 0.0;

        if $b2 != 0 goto label3;

        $z2 = r0 instanceof org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$SubtractEvalClass;

        if $z2 != 0 goto label3;

        $r5 = <org.apache.poi.ss.formula.eval.NumberEval: org.apache.poi.ss.formula.eval.NumberEval ZERO>;

     label2:
        return $r5;

     label3:
        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z0 != 0 goto label4;

        $z1 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d2);

        if $z1 == 0 goto label6;

     label4:
        $r3 = <org.apache.poi.ss.formula.eval.ErrorEval: org.apache.poi.ss.formula.eval.ErrorEval NUM_ERROR>;

     label5:
        return $r3;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        $r7 = virtualinvoke $r6.<org.apache.poi.ss.formula.eval.EvaluationException: org.apache.poi.ss.formula.eval.ErrorEval getErrorEval()>();

        return $r7;

     label8:
        $r4 = new org.apache.poi.ss.formula.eval.NumberEval;

        specialinvoke $r4.<org.apache.poi.ss.formula.eval.NumberEval: void <init>(double)>($d2);

        return $r4;

        catch org.apache.poi.ss.formula.eval.EvaluationException from label1 to label2 with label7;
        catch org.apache.poi.ss.formula.eval.EvaluationException from label3 to label5 with label7;
    }

    protected abstract double evaluate(double, double) throws org.apache.poi.ss.formula.eval.EvaluationException;

    static void <clinit>()
    {
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$1 $r0;
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$2 $r1;
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$3 $r2;
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$4 $r3;
        org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$SubtractEvalClass $r4;

        $r0 = new org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$1;

        specialinvoke $r0.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$1: void <init>()>();

        <org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: org.apache.poi.ss.formula.functions.Function AddEval> = $r0;

        $r1 = new org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$2;

        specialinvoke $r1.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$2: void <init>()>();

        <org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: org.apache.poi.ss.formula.functions.Function DivideEval> = $r1;

        $r2 = new org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$3;

        specialinvoke $r2.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$3: void <init>()>();

        <org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: org.apache.poi.ss.formula.functions.Function MultiplyEval> = $r2;

        $r3 = new org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$4;

        specialinvoke $r3.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$4: void <init>()>();

        <org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: org.apache.poi.ss.formula.functions.Function PowerEval> = $r3;

        $r4 = new org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$SubtractEvalClass;

        specialinvoke $r4.<org.apache.poi.ss.formula.eval.TwoOperandNumericOperation$SubtractEvalClass: void <init>()>();

        <org.apache.poi.ss.formula.eval.TwoOperandNumericOperation: org.apache.poi.ss.formula.functions.Function SubtractEval> = $r4;

        return;
    }
}
