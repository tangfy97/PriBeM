public class org.apache.velocity.app.event.implement.PrintExceptions extends java.lang.Object implements org.apache.velocity.app.event.MethodExceptionEventHandler, org.apache.velocity.util.RuntimeServicesAware
{
    private static java.lang.String SHOW_MESSAGE;
    private static java.lang.String SHOW_STACK_TRACE;
    private org.apache.velocity.runtime.RuntimeServices rs;

    public void <init>()
    {
        org.apache.velocity.app.event.implement.PrintExceptions r0;

        r0 := @this: org.apache.velocity.app.event.implement.PrintExceptions;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.app.event.implement.PrintExceptions: org.apache.velocity.runtime.RuntimeServices rs> = null;

        return;
    }

    public java.lang.Object methodException(java.lang.Class, java.lang.String, java.lang.Exception) throws java.lang.Exception
    {
        org.apache.velocity.app.event.implement.PrintExceptions r0;
        boolean $z0, $z1;
        java.lang.Exception r6;
        org.apache.velocity.runtime.RuntimeServices $r2, $r4;
        java.lang.StringBuffer $r5, $r9, $r10, $r13, $r15, $r18, $r20, $r21, $r24, $r26, r30;
        java.lang.String $r1, $r3, $r8, $r12, $r14, $r17, $r19, $r23, $r25, $r27, r29, $r31;
        java.lang.Class $r7, $r11, $r16, $r22, r28;

        r0 := @this: org.apache.velocity.app.event.implement.PrintExceptions;

        r28 := @parameter0: java.lang.Class;

        r29 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Exception;

        $r2 = r0.<org.apache.velocity.app.event.implement.PrintExceptions: org.apache.velocity.runtime.RuntimeServices rs>;

        $r1 = <org.apache.velocity.app.event.implement.PrintExceptions: java.lang.String SHOW_MESSAGE>;

        $z0 = interfaceinvoke $r2.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>($r1, 0);

        $r4 = r0.<org.apache.velocity.app.event.implement.PrintExceptions: org.apache.velocity.runtime.RuntimeServices rs>;

        $r3 = <org.apache.velocity.app.event.implement.PrintExceptions: java.lang.String SHOW_STACK_TRACE>;

        $z1 = interfaceinvoke $r4.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>($r3, 0);

        if $z0 == 0 goto label1;

        if $z1 == 0 goto label1;

        $r21 = new java.lang.StringBuffer;

        specialinvoke $r21.<java.lang.StringBuffer: void <init>(int)>(200);

        r30 = $r21;

        $r22 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r23 = virtualinvoke $r22.<java.lang.Class: java.lang.String getName()>();

        $r24 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

        virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r25 = virtualinvoke r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r26 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

        virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r27 = staticinvoke <org.apache.velocity.app.event.implement.PrintExceptions: java.lang.String getStackTrace(java.lang.Throwable)>(r6);

        virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        goto label4;

     label1:
        if $z0 == 0 goto label2;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>(int)>(50);

        r30 = $r15;

        $r16 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r18 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r19 = virtualinvoke r6.<java.lang.Exception: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        goto label4;

     label2:
        if $z1 == 0 goto label3;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>(int)>(200);

        r30 = $r10;

        $r11 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r12 = virtualinvoke $r11.<java.lang.Class: java.lang.String getName()>();

        $r13 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r14 = staticinvoke <org.apache.velocity.app.event.implement.PrintExceptions: java.lang.String getStackTrace(java.lang.Throwable)>(r6);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

        goto label4;

     label3:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>(15);

        r30 = $r5;

        $r7 = virtualinvoke r6.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        $r9 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

     label4:
        $r31 = virtualinvoke r30.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r31;
    }

    private static java.lang.String getStackTrace(java.lang.Throwable)
    {
        java.io.PrintWriter $r1, r5;
        java.lang.Throwable r2, $r4;
        java.io.StringWriter $r0;
        java.lang.String $r3;

        r2 := @parameter0: java.lang.Throwable;

        r5 = null;

     label1:
        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        r5 = $r1;

        virtualinvoke r2.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r1);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

     label2:
        if $r1 == null goto label3;

        virtualinvoke $r1.<java.io.PrintWriter: void close()>();

     label3:
        return $r3;

     label4:
        $r4 := @caughtexception;

     label5:
        if r5 == null goto label6;

        virtualinvoke r5.<java.io.PrintWriter: void close()>();

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void setRuntimeServices(org.apache.velocity.runtime.RuntimeServices)
    {
        org.apache.velocity.runtime.RuntimeServices r1;
        org.apache.velocity.app.event.implement.PrintExceptions r0;

        r0 := @this: org.apache.velocity.app.event.implement.PrintExceptions;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r0.<org.apache.velocity.app.event.implement.PrintExceptions: org.apache.velocity.runtime.RuntimeServices rs> = r1;

        return;
    }

    static void <clinit>()
    {
        <org.apache.velocity.app.event.implement.PrintExceptions: java.lang.String SHOW_MESSAGE> = "eventhandler.methodexception.message";

        <org.apache.velocity.app.event.implement.PrintExceptions: java.lang.String SHOW_STACK_TRACE> = "eventhandler.methodexception.stacktrace";

        return;
    }
}
