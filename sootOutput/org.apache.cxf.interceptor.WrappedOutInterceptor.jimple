public class org.apache.cxf.interceptor.WrappedOutInterceptor extends org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor
{
    private static final java.util.ResourceBundle BUNDLE;
    private final org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor ending;

    public void <init>()
    {
        org.apache.cxf.interceptor.WrappedOutInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.WrappedOutInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.WrappedOutInterceptor: void <init>(java.lang.String)>("marshal");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.WrappedOutInterceptor r0;
        org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor $r2;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.Class $r7;
        java.lang.String r1, $r6, $r8;

        r0 := @this: org.apache.cxf.interceptor.WrappedOutInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>(r1);

        $r2 = new org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-ending");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor: void <init>(org.apache.cxf.interceptor.WrappedOutInterceptor,java.lang.String)>(r0, $r6);

        r0.<org.apache.cxf.interceptor.WrappedOutInterceptor: org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor ending> = $r2;

        $r7 = class "Lorg/apache/cxf/interceptor/BareOutInterceptor;";

        $r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.WrappedOutInterceptor: void addBefore(java.lang.String)>($r8);

        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.InterceptorChain $r19;
        org.apache.cxf.service.Service $r30;
        java.util.Map $r14, $r24;
        javax.xml.stream.XMLStreamException $r31;
        javax.xml.stream.XMLStreamWriter r4;
        boolean $z0, $z1, $z2;
        org.apache.cxf.interceptor.WrappedOutInterceptor r5;
        org.apache.cxf.databinding.DataBinding $r13, $r23;
        org.apache.cxf.service.model.OperationInfo $r7, $r28;
        java.util.List $r8;
        javax.xml.namespace.QName $r10;
        org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor $r20;
        java.lang.Object[] $r34;
        org.apache.cxf.service.model.BindingOperationInfo $r2, $r6, $r27;
        org.apache.cxf.common.i18n.Message $r33;
        org.apache.cxf.interceptor.Fault $r32;
        java.util.ResourceBundle $r35;
        java.lang.String $r15, $r16, $r17, $r18, $r21, $r22, $r25, r37;
        org.apache.cxf.service.model.MessagePartInfo $r29;
        org.apache.cxf.service.model.MessageInfo r36;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.message.Exchange $r1, $r11;
        java.lang.Object $r3, $r9, $r12, $r26;

        r5 := @this: org.apache.cxf.interceptor.WrappedOutInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r2 = interfaceinvoke $r1.<org.apache.cxf.message.Exchange: org.apache.cxf.service.model.BindingOperationInfo getBindingOperationInfo()>();

        if $r2 == null goto label10;

        $z0 = virtualinvoke $r2.<org.apache.cxf.service.model.BindingOperationInfo: boolean isUnwrapped()>();

        if $z0 == 0 goto label10;

        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamWriter;");

        r4 = (javax.xml.stream.XMLStreamWriter) $r3;

        $z1 = virtualinvoke r5.<org.apache.cxf.interceptor.WrappedOutInterceptor: boolean isRequestor(org.apache.cxf.message.Message)>(r0);

        if $z1 == 0 goto label01;

        $r27 = virtualinvoke $r2.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo getWrappedOperation()>();

        $r28 = virtualinvoke $r27.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        r36 = virtualinvoke $r28.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getInput()>();

        goto label02;

     label01:
        $r6 = virtualinvoke $r2.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.BindingOperationInfo getWrappedOperation()>();

        $r7 = virtualinvoke $r6.<org.apache.cxf.service.model.BindingOperationInfo: org.apache.cxf.service.model.OperationInfo getOperationInfo()>();

        r36 = virtualinvoke $r7.<org.apache.cxf.service.model.OperationInfo: org.apache.cxf.service.model.MessageInfo getOutput()>();

     label02:
        $r8 = virtualinvoke r36.<org.apache.cxf.service.model.MessageInfo: java.util.List getMessageParts()>();

        $r9 = interfaceinvoke $r8.<java.util.List: java.lang.Object get(int)>(0);

        $r29 = (org.apache.cxf.service.model.MessagePartInfo) $r9;

        $r10 = virtualinvoke $r29.<org.apache.cxf.service.model.MessagePartInfo: javax.xml.namespace.QName getConcreteName()>();

     label03:
        r37 = null;

        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r12 = interfaceinvoke $r11.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/service/Service;");

        $r30 = (org.apache.cxf.service.Service) $r12;

        $r13 = interfaceinvoke $r30.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r14 = interfaceinvoke $r13.<org.apache.cxf.databinding.DataBinding: java.util.Map getDeclaredNamespaceMappings()>();

        if $r14 == null goto label04;

        $r23 = interfaceinvoke $r30.<org.apache.cxf.service.Service: org.apache.cxf.databinding.DataBinding getDataBinding()>();

        $r24 = interfaceinvoke $r23.<org.apache.cxf.databinding.DataBinding: java.util.Map getDeclaredNamespaceMappings()>();

        $r25 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r26 = interfaceinvoke $r24.<java.util.Map: java.lang.Object get(java.lang.Object)>($r25);

        r37 = (java.lang.String) $r26;

     label04:
        if r37 != null goto label05;

        $r22 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        r37 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: java.lang.String getUniquePrefix(javax.xml.stream.XMLStreamWriter,java.lang.String,boolean)>(r4, $r22, 0);

     label05:
        $r15 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r4.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r37, $r15);

        $r16 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r17 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r4.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>(r37, $r16, $r17);

        $z2 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r37);

        if $z2 == 0 goto label06;

        $r21 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r4.<javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>($r21);

        goto label07;

     label06:
        $r18 = virtualinvoke $r10.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke r4.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>(r37, $r18);

     label07:
        goto label09;

     label08:
        $r31 := @caughtexception;

        $r32 = new org.apache.cxf.interceptor.Fault;

        $r33 = new org.apache.cxf.common.i18n.Message;

        $r35 = <org.apache.cxf.interceptor.WrappedOutInterceptor: java.util.ResourceBundle BUNDLE>;

        $r34 = newarray (java.lang.Object)[0];

        specialinvoke $r33.<org.apache.cxf.common.i18n.Message: void <init>(java.lang.String,java.util.ResourceBundle,java.lang.Object[])>("STAX_WRITE_EXC", $r35, $r34);

        specialinvoke $r32.<org.apache.cxf.interceptor.Fault: void <init>(org.apache.cxf.common.i18n.Message,java.lang.Throwable)>($r33, $r31);

        throw $r32;

     label09:
        $r19 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r20 = r5.<org.apache.cxf.interceptor.WrappedOutInterceptor: org.apache.cxf.interceptor.WrappedOutInterceptor$WrappedOutEndingInterceptor ending>;

        interfaceinvoke $r19.<org.apache.cxf.interceptor.InterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>($r20);

     label10:
        return;

        catch javax.xml.stream.XMLStreamException from label03 to label07 with label08;
    }

    static java.util.ResourceBundle access$000()
    {
        java.util.ResourceBundle $r0;

        $r0 = <org.apache.cxf.interceptor.WrappedOutInterceptor: java.util.ResourceBundle BUNDLE>;

        return $r0;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        $r0 = staticinvoke <org.apache.cxf.common.i18n.BundleUtils: java.util.ResourceBundle getBundle(java.lang.Class)>(class "Lorg/apache/cxf/interceptor/WrappedOutInterceptor;");

        <org.apache.cxf.interceptor.WrappedOutInterceptor: java.util.ResourceBundle BUNDLE> = $r0;

        return;
    }
}
