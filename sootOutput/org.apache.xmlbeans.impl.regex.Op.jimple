class org.apache.xmlbeans.impl.regex.Op extends java.lang.Object
{
    static final int DOT;
    static final int CHAR;
    static final int RANGE;
    static final int NRANGE;
    static final int ANCHOR;
    static final int STRING;
    static final int CLOSURE;
    static final int NONGREEDYCLOSURE;
    static final int QUESTION;
    static final int NONGREEDYQUESTION;
    static final int UNION;
    static final int CAPTURE;
    static final int BACKREFERENCE;
    static final int LOOKAHEAD;
    static final int NEGATIVELOOKAHEAD;
    static final int LOOKBEHIND;
    static final int NEGATIVELOOKBEHIND;
    static final int INDEPENDENT;
    static final int MODIFIER;
    static final int CONDITION;
    static int nofinstances;
    static final boolean COUNT;
    int type;
    org.apache.xmlbeans.impl.regex.Op next;

    static org.apache.xmlbeans.impl.regex.Op createDot()
    {
        org.apache.xmlbeans.impl.regex.Op $r0;

        $r0 = new org.apache.xmlbeans.impl.regex.Op;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op: void <init>(int)>(0);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$CharOp createChar(int)
    {
        org.apache.xmlbeans.impl.regex.Op$CharOp $r0;
        int i0;

        i0 := @parameter0: int;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$CharOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$CharOp: void <init>(int,int)>(1, i0);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$CharOp createAnchor(int)
    {
        org.apache.xmlbeans.impl.regex.Op$CharOp $r0;
        int i0;

        i0 := @parameter0: int;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$CharOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$CharOp: void <init>(int,int)>(5, i0);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$CharOp createCapture(int, org.apache.xmlbeans.impl.regex.Op)
    {
        org.apache.xmlbeans.impl.regex.Op$CharOp $r0;
        int i0;
        org.apache.xmlbeans.impl.regex.Op r1;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$CharOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$CharOp: void <init>(int,int)>(15, i0);

        $r0.<org.apache.xmlbeans.impl.regex.Op$CharOp: org.apache.xmlbeans.impl.regex.Op next> = r1;

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$UnionOp createUnion(int)
    {
        int i0;
        org.apache.xmlbeans.impl.regex.Op$UnionOp $r0;

        i0 := @parameter0: int;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$UnionOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$UnionOp: void <init>(int,int)>(11, i0);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$ChildOp createClosure(int)
    {
        int i0, $i2;
        org.apache.xmlbeans.impl.regex.Op$ModifierOp $r1;

        i0 := @parameter0: int;

        $r1 = new org.apache.xmlbeans.impl.regex.Op$ModifierOp;

        $i2 = (int) -1;

        specialinvoke $r1.<org.apache.xmlbeans.impl.regex.Op$ModifierOp: void <init>(int,int,int)>(7, i0, $i2);

        return $r1;
    }

    static org.apache.xmlbeans.impl.regex.Op$ChildOp createNonGreedyClosure()
    {
        org.apache.xmlbeans.impl.regex.Op$ChildOp $r0;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$ChildOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: void <init>(int)>(8);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$ChildOp createQuestion(boolean)
    {
        org.apache.xmlbeans.impl.regex.Op$ChildOp $r0;
        byte $b0;
        boolean z0;

        z0 := @parameter0: boolean;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$ChildOp;

        if z0 == 0 goto label1;

        $b0 = 10;

        goto label2;

     label1:
        $b0 = 9;

     label2:
        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: void <init>(int)>($b0);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$RangeOp createRange(org.apache.xmlbeans.impl.regex.Token)
    {
        org.apache.xmlbeans.impl.regex.Token r1;
        org.apache.xmlbeans.impl.regex.Op$RangeOp $r0;

        r1 := @parameter0: org.apache.xmlbeans.impl.regex.Token;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$RangeOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$RangeOp: void <init>(int,org.apache.xmlbeans.impl.regex.Token)>(3, r1);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$ChildOp createLook(int, org.apache.xmlbeans.impl.regex.Op, org.apache.xmlbeans.impl.regex.Op)
    {
        org.apache.xmlbeans.impl.regex.Op$ChildOp $r0;
        int i0;
        org.apache.xmlbeans.impl.regex.Op r1, r2;

        i0 := @parameter0: int;

        r2 := @parameter1: org.apache.xmlbeans.impl.regex.Op;

        r1 := @parameter2: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$ChildOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: void <init>(int)>(i0);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: void setChild(org.apache.xmlbeans.impl.regex.Op)>(r1);

        $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: org.apache.xmlbeans.impl.regex.Op next> = r2;

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$CharOp createBackReference(int)
    {
        org.apache.xmlbeans.impl.regex.Op$CharOp $r0;
        int i0;

        i0 := @parameter0: int;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$CharOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$CharOp: void <init>(int,int)>(16, i0);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$StringOp createString(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xmlbeans.impl.regex.Op$StringOp $r0;

        r1 := @parameter0: java.lang.String;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$StringOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$StringOp: void <init>(int,java.lang.String)>(6, r1);

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$ChildOp createIndependent(org.apache.xmlbeans.impl.regex.Op, org.apache.xmlbeans.impl.regex.Op)
    {
        org.apache.xmlbeans.impl.regex.Op$ChildOp $r0;
        org.apache.xmlbeans.impl.regex.Op r1, r2;

        r2 := @parameter0: org.apache.xmlbeans.impl.regex.Op;

        r1 := @parameter1: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$ChildOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: void <init>(int)>(24);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: void setChild(org.apache.xmlbeans.impl.regex.Op)>(r1);

        $r0.<org.apache.xmlbeans.impl.regex.Op$ChildOp: org.apache.xmlbeans.impl.regex.Op next> = r2;

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$ModifierOp createModifier(org.apache.xmlbeans.impl.regex.Op, org.apache.xmlbeans.impl.regex.Op, int, int)
    {
        int i0, i1;
        org.apache.xmlbeans.impl.regex.Op$ModifierOp $r0;
        org.apache.xmlbeans.impl.regex.Op r1, r2;

        r2 := @parameter0: org.apache.xmlbeans.impl.regex.Op;

        r1 := @parameter1: org.apache.xmlbeans.impl.regex.Op;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$ModifierOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ModifierOp: void <init>(int,int,int)>(25, i0, i1);

        virtualinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ModifierOp: void setChild(org.apache.xmlbeans.impl.regex.Op)>(r1);

        $r0.<org.apache.xmlbeans.impl.regex.Op$ModifierOp: org.apache.xmlbeans.impl.regex.Op next> = r2;

        return $r0;
    }

    static org.apache.xmlbeans.impl.regex.Op$ConditionOp createCondition(org.apache.xmlbeans.impl.regex.Op, int, org.apache.xmlbeans.impl.regex.Op, org.apache.xmlbeans.impl.regex.Op, org.apache.xmlbeans.impl.regex.Op)
    {
        int i0;
        org.apache.xmlbeans.impl.regex.Op$ConditionOp $r0;
        org.apache.xmlbeans.impl.regex.Op r1, r2, r3, r4;

        r4 := @parameter0: org.apache.xmlbeans.impl.regex.Op;

        i0 := @parameter1: int;

        r1 := @parameter2: org.apache.xmlbeans.impl.regex.Op;

        r2 := @parameter3: org.apache.xmlbeans.impl.regex.Op;

        r3 := @parameter4: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new org.apache.xmlbeans.impl.regex.Op$ConditionOp;

        specialinvoke $r0.<org.apache.xmlbeans.impl.regex.Op$ConditionOp: void <init>(int,int,org.apache.xmlbeans.impl.regex.Op,org.apache.xmlbeans.impl.regex.Op,org.apache.xmlbeans.impl.regex.Op)>(26, i0, r1, r2, r3);

        $r0.<org.apache.xmlbeans.impl.regex.Op$ConditionOp: org.apache.xmlbeans.impl.regex.Op next> = r4;

        return $r0;
    }

    protected void <init>(int)
    {
        int i0;
        org.apache.xmlbeans.impl.regex.Op r0;

        r0 := @this: org.apache.xmlbeans.impl.regex.Op;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xmlbeans.impl.regex.Op: org.apache.xmlbeans.impl.regex.Op next> = null;

        r0.<org.apache.xmlbeans.impl.regex.Op: int type> = i0;

        return;
    }

    int size()
    {
        org.apache.xmlbeans.impl.regex.Op r0;

        r0 := @this: org.apache.xmlbeans.impl.regex.Op;

        return 0;
    }

    org.apache.xmlbeans.impl.regex.Op elementAt(int)
    {
        java.lang.RuntimeException $r0;
        org.apache.xmlbeans.impl.regex.Op r3;
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0, i1;
        java.lang.String $r5;

        r3 := @this: org.apache.xmlbeans.impl.regex.Op;

        i1 := @parameter0: int;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: type=");

        $i0 = r3.<org.apache.xmlbeans.impl.regex.Op: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    org.apache.xmlbeans.impl.regex.Op getChild()
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0;
        java.lang.RuntimeException $r0;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.regex.Op r3;

        r3 := @this: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: type=");

        $i0 = r3.<org.apache.xmlbeans.impl.regex.Op: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    int getData()
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0;
        java.lang.RuntimeException $r0;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.regex.Op r3;

        r3 := @this: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: type=");

        $i0 = r3.<org.apache.xmlbeans.impl.regex.Op: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    int getData2()
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0;
        java.lang.RuntimeException $r0;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.regex.Op r3;

        r3 := @this: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: type=");

        $i0 = r3.<org.apache.xmlbeans.impl.regex.Op: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    org.apache.xmlbeans.impl.regex.RangeToken getToken()
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0;
        java.lang.RuntimeException $r0;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.regex.Op r3;

        r3 := @this: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: type=");

        $i0 = r3.<org.apache.xmlbeans.impl.regex.Op: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    java.lang.String getString()
    {
        java.lang.StringBuffer $r1, $r2, $r4;
        int $i0;
        java.lang.RuntimeException $r0;
        java.lang.String $r5;
        org.apache.xmlbeans.impl.regex.Op r3;

        r3 := @this: org.apache.xmlbeans.impl.regex.Op;

        $r0 = new java.lang.RuntimeException;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Internal Error: type=");

        $i0 = r3.<org.apache.xmlbeans.impl.regex.Op: int type>;

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    static void <clinit>()
    {
        <org.apache.xmlbeans.impl.regex.Op: boolean COUNT> = 0;

        <org.apache.xmlbeans.impl.regex.Op: int CONDITION> = 26;

        <org.apache.xmlbeans.impl.regex.Op: int MODIFIER> = 25;

        <org.apache.xmlbeans.impl.regex.Op: int INDEPENDENT> = 24;

        <org.apache.xmlbeans.impl.regex.Op: int NEGATIVELOOKBEHIND> = 23;

        <org.apache.xmlbeans.impl.regex.Op: int LOOKBEHIND> = 22;

        <org.apache.xmlbeans.impl.regex.Op: int NEGATIVELOOKAHEAD> = 21;

        <org.apache.xmlbeans.impl.regex.Op: int LOOKAHEAD> = 20;

        <org.apache.xmlbeans.impl.regex.Op: int BACKREFERENCE> = 16;

        <org.apache.xmlbeans.impl.regex.Op: int CAPTURE> = 15;

        <org.apache.xmlbeans.impl.regex.Op: int UNION> = 11;

        <org.apache.xmlbeans.impl.regex.Op: int NONGREEDYQUESTION> = 10;

        <org.apache.xmlbeans.impl.regex.Op: int QUESTION> = 9;

        <org.apache.xmlbeans.impl.regex.Op: int NONGREEDYCLOSURE> = 8;

        <org.apache.xmlbeans.impl.regex.Op: int CLOSURE> = 7;

        <org.apache.xmlbeans.impl.regex.Op: int STRING> = 6;

        <org.apache.xmlbeans.impl.regex.Op: int ANCHOR> = 5;

        <org.apache.xmlbeans.impl.regex.Op: int NRANGE> = 4;

        <org.apache.xmlbeans.impl.regex.Op: int RANGE> = 3;

        <org.apache.xmlbeans.impl.regex.Op: int CHAR> = 1;

        <org.apache.xmlbeans.impl.regex.Op: int DOT> = 0;

        <org.apache.xmlbeans.impl.regex.Op: int nofinstances> = 0;

        return;
    }
}
