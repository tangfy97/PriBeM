public class com.mongodb.util.JSONCallback extends org.bson.BasicBSONCallback
{
    private java.lang.String _lastName;
    private boolean _lastArray;

    public void <init>()
    {
        com.mongodb.util.JSONCallback r0;

        r0 := @this: com.mongodb.util.JSONCallback;

        specialinvoke r0.<org.bson.BasicBSONCallback: void <init>()>();

        r0.<com.mongodb.util.JSONCallback: boolean _lastArray> = 0;

        return;
    }

    public org.bson.BSONObject create()
    {
        com.mongodb.BasicDBObject $r0;
        com.mongodb.util.JSONCallback r1;

        r1 := @this: com.mongodb.util.JSONCallback;

        $r0 = new com.mongodb.BasicDBObject;

        specialinvoke $r0.<com.mongodb.BasicDBObject: void <init>()>();

        return $r0;
    }

    public org.bson.BSONObject create(boolean, java.util.List)
    {
        java.util.List r3;
        com.mongodb.BasicDBObject $r0;
        com.mongodb.BasicDBList $r1;
        com.mongodb.util.JSONCallback r2;
        boolean z0;

        r2 := @this: com.mongodb.util.JSONCallback;

        z0 := @parameter0: boolean;

        r3 := @parameter1: java.util.List;

        if z0 == 0 goto label1;

        $r1 = new com.mongodb.BasicDBList;

        specialinvoke $r1.<com.mongodb.BasicDBList: void <init>()>();

        return $r1;

     label1:
        $r0 = new com.mongodb.BasicDBObject;

        specialinvoke $r0.<com.mongodb.BasicDBObject: void <init>()>();

        return $r0;
    }

    public void objectStart(boolean, java.lang.String)
    {
        java.lang.String r1;
        com.mongodb.util.JSONCallback r0;
        boolean z0;

        r0 := @this: com.mongodb.util.JSONCallback;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r0.<com.mongodb.util.JSONCallback: java.lang.String _lastName> = r1;

        r0.<com.mongodb.util.JSONCallback: boolean _lastArray> = z0;

        specialinvoke r0.<org.bson.BasicBSONCallback: void objectStart(boolean,java.lang.String)>(z0, r1);

        return;
    }

    public java.lang.Object objectDone()
    {
        java.util.Date $r16;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.util.GregorianCalendar $r11;
        java.util.regex.Pattern $r7;
        java.util.SimpleTimeZone $r12;
        java.text.ParsePosition $r14;
        java.text.SimpleDateFormat $r10;
        com.mongodb.util.JSONCallback r0;
        int $i0;
        java.lang.String $r4, $r6, $r9, $r15, $r18, $r21, $r23;
        org.bson.BSONObject r2, $r8, $r17;
        org.bson.types.ObjectId $r19, $r22;
        java.lang.Object $r1, $r3, $r5, $r13, $r20, r24;

        r0 := @this: com.mongodb.util.JSONCallback;

        $r1 = specialinvoke r0.<org.bson.BasicBSONCallback: java.lang.Object objectDone()>();

        r24 = $r1;

        r2 = (org.bson.BSONObject) $r1;

        $z0 = r0.<com.mongodb.util.JSONCallback: boolean _lastArray>;

        if $z0 != 0 goto label7;

        $z1 = interfaceinvoke r2.<org.bson.BSONObject: boolean containsKey(java.lang.String)>("$oid");

        if $z1 == 0 goto label2;

        $r19 = new org.bson.types.ObjectId;

        $r20 = interfaceinvoke r2.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("$oid");

        $r21 = (java.lang.String) $r20;

        specialinvoke $r19.<org.bson.types.ObjectId: void <init>(java.lang.String)>($r21);

        r24 = $r19;

        $z6 = virtualinvoke r0.<com.mongodb.util.JSONCallback: boolean isStackEmpty()>();

        if $z6 != 0 goto label1;

        $r23 = r0.<com.mongodb.util.JSONCallback: java.lang.String _lastName>;

        $r22 = (org.bson.types.ObjectId) $r19;

        virtualinvoke r0.<com.mongodb.util.JSONCallback: void gotObjectId(java.lang.String,org.bson.types.ObjectId)>($r23, $r22);

        goto label7;

     label1:
        virtualinvoke r0.<com.mongodb.util.JSONCallback: void setRoot(java.lang.Object)>($r19);

        goto label7;

     label2:
        $z2 = interfaceinvoke r2.<org.bson.BSONObject: boolean containsKey(java.lang.String)>("$date");

        if $z2 == 0 goto label5;

        $r10 = new java.text.SimpleDateFormat;

        specialinvoke $r10.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ss\'Z\'");

        $r11 = new java.util.GregorianCalendar;

        $r12 = new java.util.SimpleTimeZone;

        specialinvoke $r12.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(0, "GMT");

        specialinvoke $r11.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>($r12);

        virtualinvoke $r10.<java.text.SimpleDateFormat: void setCalendar(java.util.Calendar)>($r11);

        $r13 = interfaceinvoke r2.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("$date");

        $r15 = (java.lang.String) $r13;

        $r14 = new java.text.ParsePosition;

        specialinvoke $r14.<java.text.ParsePosition: void <init>(int)>(0);

        $r16 = virtualinvoke $r10.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String,java.text.ParsePosition)>($r15, $r14);

        r24 = $r16;

        $z5 = virtualinvoke r0.<com.mongodb.util.JSONCallback: boolean isStackEmpty()>();

        if $z5 != 0 goto label3;

        $r17 = virtualinvoke r0.<com.mongodb.util.JSONCallback: org.bson.BSONObject cur()>();

        $r18 = r0.<com.mongodb.util.JSONCallback: java.lang.String _lastName>;

        interfaceinvoke $r17.<org.bson.BSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>($r18, $r16);

        goto label4;

     label3:
        virtualinvoke r0.<com.mongodb.util.JSONCallback: void setRoot(java.lang.Object)>($r16);

     label4:
        goto label7;

     label5:
        $z3 = interfaceinvoke r2.<org.bson.BSONObject: boolean containsKey(java.lang.String)>("$regex");

        if $z3 == 0 goto label7;

        $r3 = interfaceinvoke r2.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("$regex");

        $r4 = (java.lang.String) $r3;

        $r5 = interfaceinvoke r2.<org.bson.BSONObject: java.lang.Object get(java.lang.String)>("$options");

        $r6 = (java.lang.String) $r5;

        $i0 = staticinvoke <org.bson.BSON: int regexFlags(java.lang.String)>($r6);

        $r7 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String,int)>($r4, $i0);

        r24 = $r7;

        $z4 = virtualinvoke r0.<com.mongodb.util.JSONCallback: boolean isStackEmpty()>();

        if $z4 != 0 goto label6;

        $r8 = virtualinvoke r0.<com.mongodb.util.JSONCallback: org.bson.BSONObject cur()>();

        $r9 = r0.<com.mongodb.util.JSONCallback: java.lang.String _lastName>;

        interfaceinvoke $r8.<org.bson.BSONObject: java.lang.Object put(java.lang.String,java.lang.Object)>($r9, $r7);

        goto label7;

     label6:
        virtualinvoke r0.<com.mongodb.util.JSONCallback: void setRoot(java.lang.Object)>($r7);

     label7:
        return r24;
    }
}
