public final class org.apache.velocity.util.SimplePool extends java.lang.Object
{
    private java.lang.Object[] pool;
    private int max;
    private int current;

    public void <init>(int)
    {
        java.lang.Object[] $r1;
        int i0, $i2;
        org.apache.velocity.util.SimplePool r0;

        r0 := @this: org.apache.velocity.util.SimplePool;

        i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.velocity.util.SimplePool: int current> = $i2;

        r0.<org.apache.velocity.util.SimplePool: int max> = i0;

        $r1 = newarray (java.lang.Object)[i0];

        r0.<org.apache.velocity.util.SimplePool: java.lang.Object[] pool> = $r1;

        return;
    }

    public void put(java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.lang.Object[] $r2;
        org.apache.velocity.util.SimplePool r0;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7;
        java.lang.Object r1;

        r0 := @this: org.apache.velocity.util.SimplePool;

        r1 := @parameter0: java.lang.Object;

        $i7 = (int) -1;

        i5 = $i7;

        entermonitor r0;

     label1:
        $i2 = r0.<org.apache.velocity.util.SimplePool: int current>;

        $i0 = r0.<org.apache.velocity.util.SimplePool: int max>;

        $i1 = $i0 - 1;

        if $i2 >= $i1 goto label2;

        $i3 = r0.<org.apache.velocity.util.SimplePool: int current>;

        $i4 = $i3 + 1;

        r0.<org.apache.velocity.util.SimplePool: int current> = $i4;

        i5 = $i4;

     label2:
        if i5 < 0 goto label3;

        $r2 = r0.<org.apache.velocity.util.SimplePool: java.lang.Object[] pool>;

        $r2[i5] = r1;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r3;

     label7:
        return;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.Object get()
    {
        java.lang.Throwable $r4;
        java.lang.Object[] $r1, $r3;
        org.apache.velocity.util.SimplePool r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.Object r2;

        r0 := @this: org.apache.velocity.util.SimplePool;

        entermonitor r0;

     label1:
        $i0 = r0.<org.apache.velocity.util.SimplePool: int current>;

        if $i0 < 0 goto label3;

        $r1 = r0.<org.apache.velocity.util.SimplePool: java.lang.Object[] pool>;

        $i1 = r0.<org.apache.velocity.util.SimplePool: int current>;

        r2 = $r1[$i1];

        $r3 = r0.<org.apache.velocity.util.SimplePool: java.lang.Object[] pool>;

        $i2 = r0.<org.apache.velocity.util.SimplePool: int current>;

        $r3[$i2] = null;

        $i3 = r0.<org.apache.velocity.util.SimplePool: int current>;

        $i4 = $i3 - 1;

        r0.<org.apache.velocity.util.SimplePool: int current> = $i4;

        exitmonitor r0;

     label2:
        return r2;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r4 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r4;

     label7:
        return null;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public int getMax()
    {
        int $i0;
        org.apache.velocity.util.SimplePool r0;

        r0 := @this: org.apache.velocity.util.SimplePool;

        $i0 = r0.<org.apache.velocity.util.SimplePool: int max>;

        return $i0;
    }

    java.lang.Object[] getPool()
    {
        java.lang.Object[] $r1;
        org.apache.velocity.util.SimplePool r0;

        r0 := @this: org.apache.velocity.util.SimplePool;

        $r1 = r0.<org.apache.velocity.util.SimplePool: java.lang.Object[] pool>;

        return $r1;
    }
}
