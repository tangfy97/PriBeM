public final class org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader extends org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader
{
    private static final int BYTE_BUFFER_SIZE;
    private org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder;
    private int minBytesPerChar;
    private int maxBytesPerChar;
    private java.io.InputStream in;
    private int[] decodeResult;
    private java.lang.String encoding;
    private boolean useDeclaredEncoding;
    private boolean rewindDeclaration;
    private char[] cbuf;
    private byte[] bbuf;
    private int cbufPos;
    private int cbufEnd;
    private int bbufPos;
    private int bbufEnd;
    private boolean eofReached;
    private static final int MAX_XML_DECL_CHARS;
    private org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder fastStreamDecoder;
    private org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder javaStreamDecoder;
    private org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder;
    private static java.util.HashMap charsetTable;

    public void <init>()
    {
        byte[] $r3;
        int[] $r1;
        char[] $r2;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder $r4;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int[] decodeResult> = $r1;

        $r2 = newarray (char)[100];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] cbuf> = $r2;

        $r3 = newarray (byte)[8192];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf> = $r3;

        $r4 = new org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder;

        specialinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder: void <init>(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>(r0);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder fastStreamDecoder> = $r4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder javaStreamDecoder> = null;

        return;
    }

    public void <init>(java.io.InputStream, boolean) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.io.InputStream r1;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r1 := @parameter0: java.io.InputStream;

        z0 := @parameter1: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: void <init>(java.io.InputStream,java.lang.String,boolean)>(r1, null, z0);

        return;
    }

    public void <init>(java.io.InputStream, java.lang.String, boolean) throws java.io.IOException
    {
        byte[] $r3;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder $r4;
        int[] $r1;
        char[] $r2;
        java.lang.String r6;
        java.io.InputStream r5;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r5 := @parameter0: java.io.InputStream;

        r6 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void <init>()>();

        $r1 = newarray (int)[2];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int[] decodeResult> = $r1;

        $r2 = newarray (char)[100];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] cbuf> = $r2;

        $r3 = newarray (byte)[8192];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf> = $r3;

        $r4 = new org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder;

        specialinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder: void <init>(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>(r0);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder fastStreamDecoder> = $r4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder javaStreamDecoder> = null;

        virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: void reset(java.io.InputStream,java.lang.String,boolean)>(r5, r6, z0);

        return;
    }

    public void reset(java.io.InputStream, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder $r2;
        java.lang.String r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11;
        java.io.InputStream r1;
        boolean z0, $z1, $z2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r1 := @parameter0: java.io.InputStream;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void resetInput()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream in> = r1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean eofReached> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean rewindDeclaration> = z0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean useDeclaredEncoding> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = 0;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$FastStreamDecoder fastStreamDecoder>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder> = $r2;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int fillByteBuffer(boolean)>(1);

        if r3 == null goto label2;

        $r6 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String getJavaCharset(java.lang.String)>(r3);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding> = $r6;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        $z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("Unicode");

        if $z1 == 0 goto label3;

        $r8 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String guessEncoding()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding> = $r8;

        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        if $r9 == null goto label1;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>("UnicodeLittle");

        if $z2 != 0 goto label3;

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding> = "UnicodeBig";

        goto label3;

     label2:
        $r4 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String guessEncoding()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding> = $r4;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        if $r5 != null goto label3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean useDeclaredEncoding> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding> = "UTF-8";

     label3:
        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: void setEncoding(java.lang.String)>($r11);

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: void processXMLDecl()>();

        return;
    }

    public java.lang.String getEncoding()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.lang.String $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        return $r1;
    }

    public void close() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.io.InputStream $r1, $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean eofReached> = 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 0;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream in>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream in>;

        virtualinvoke $r2.<java.io.InputStream: void close()>();

     label1:
        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.io.InputStream $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLInputReader: void resetInput()>();

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream in>;

        virtualinvoke $r1.<java.io.InputStream: void reset()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 0;

        return;
    }

    public void mark(int) throws java.io.IOException
    {
        int i0;
        java.lang.UnsupportedOperationException $r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r1;

        r1 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        i0 := @parameter0: int;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("mark() not supported");

        throw $r0;
    }

    public boolean markSupported()
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        return 0;
    }

    public int read() throws java.io.IOException
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder $r1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder>;

        $i0 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder: int read()>();

        return $i0;
    }

    public int read(char[]) throws java.io.IOException
    {
        int $i0, $i1;
        char[] r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int read(char[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(char[], int, int) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder $r2;
        int i0, i1, $i2;
        char[] r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder>;

        $i2 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder: int read(char[],int,int)>(r1, i0, i1);

        return $i2;
    }

    public boolean ready() throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder $r1;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder>;

        $z0 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder: boolean ready()>();

        return $z0;
    }

    public long skip(long) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        long l0, $l1;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        l0 := @parameter0: long;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder>;

        $l1 = interfaceinvoke $r1.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder: long skip(long)>(l0);

        return $l1;
    }

    private void setEncoding(java.lang.String) throws java.io.IOException
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder $r9;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder $r2, $r3, $r4;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder $r6, $r7, $r8;
        int $i0, $i1;
        java.lang.String r1;
        java.io.UnsupportedEncodingException $r5;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r1 := @parameter0: java.lang.String;

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding> = r1;

        $r2 = staticinvoke <org.apache.xmlbeans.impl.piccolo.xml.XMLDecoderFactory: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder createDecoder(java.lang.String)>(r1);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder> = $r2;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder>;

        $i0 = interfaceinvoke $r3.<org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder: int minBytesPerChar()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int minBytesPerChar> = $i0;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder>;

        $i1 = interfaceinvoke $r4.<org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder: int maxBytesPerChar()>();

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int maxBytesPerChar> = $i1;

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder javaStreamDecoder>;

        if $r6 != null goto label4;

        $r8 = new org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder;

        specialinvoke $r8.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder: void <init>(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)>(r0);

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder javaStreamDecoder> = $r8;

     label4:
        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$JavaStreamDecoder javaStreamDecoder>;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder> = $r7;

     label5:
        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder activeStreamDecoder>;

        interfaceinvoke $r9.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader$XMLStreamDecoder: void reset()>();

        return;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private int fillByteBuffer(boolean) throws java.io.IOException
    {
        byte[] $r1, $r3, $r4;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i13, $i15;
        boolean z0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.io.InputStream $r2;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        z0 := @parameter0: boolean;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        i2 = $i1 - $i0;

        if i2 <= 0 goto label1;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $i9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i9, $r3, 0, i2);

     label1:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd> = i2;

        i10 = 0;

     label2:
        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        if $i11 >= 8192 goto label5;

        if i10 >= 160 goto label5;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream in>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $i5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        $i3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        $i4 = 8192 - $i3;

        $i6 = virtualinvoke $r2.<java.io.InputStream: int read(byte[],int,int)>($r1, $i5, $i4);

        $i13 = (int) -1;

        if $i6 == $i13 goto label3;

        $i7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        $i8 = $i7 + $i6;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd> = $i8;

     label3:
        i10 = i10 + $i6;

        $i15 = (int) -1;

        if $i6 != $i15 goto label4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean eofReached> = 1;

        goto label5;

     label4:
        if z0 != 0 goto label2;

        goto label5;

     label5:
        return i10;
    }

    private java.lang.String getJavaCharset(java.lang.String)
    {
        java.util.HashMap $r1;
        java.lang.Object $r3;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r5;
        java.lang.String r0, $r2, r4;

        r5 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (java.lang.String) $r3;

        if r4 == null goto label2;

        return r4;

     label2:
        return r0;
    }

    private java.lang.String guessEncoding()
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32;
        byte $b1, $b2, $b3, $b4, $b5, $b6, $b7, $b8, $b9, $b10, $b11, $b12, $b13, $b14, $b15, $b16, $b17, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b30, $b31, $b32;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        int $i0, $i33, $i34, $i36, $i37, $i39, $i40, $i41, $i42, $i43, $i44, $i46, $i47, $i49, $i50, $i51, $i53, $i54, $i56, $i57, $i59, $i60, $i62, $i63, $i64, $i65, $i66, $i67, $i69, $i70, $i72;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        if $i0 >= 4 goto label01;

        return null;

     label01:
        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b1 = $r1[0];

        $i33 = (int) $b1;

        lookupswitch($i33)
        {
            case -17: goto label02;
            case -2: goto label11;
            case -1: goto label14;
            case 0: goto label17;
            case 60: goto label04;
            case 76: goto label28;
            default: goto label30;
        };

     label02:
        $r31 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b31 = $r31[1];

        $i34 = (int) $b31;

        $i36 = (int) -69;

        if $i34 != $i36 goto label03;

        $r32 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b32 = $r32[2];

        $i37 = (int) $b32;

        $i39 = (int) -65;

        if $i37 != $i39 goto label03;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 3;

        return "UTF-8";

     label03:
        return null;

     label04:
        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b5 = $r5[1];

        $i40 = (int) $b5;

        lookupswitch($i40)
        {
            case 0: goto label07;
            case 63: goto label05;
            default: goto label10;
        };

     label05:
        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b6 = $r6[2];

        $i41 = (int) $b6;

        if $i41 != 120 goto label06;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b7 = $r7[3];

        $i42 = (int) $b7;

        if $i42 != 109 goto label06;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean useDeclaredEncoding> = 1;

        return "UTF-8";

     label06:
        return null;

     label07:
        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b8 = $r8[2];

        $i43 = (int) $b8;

        if $i43 != 63 goto label08;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b11 = $r11[3];

        if $b11 != 0 goto label08;

        return "UnicodeLittleUnmarked";

     label08:
        $r9 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b9 = $r9[2];

        if $b9 != 0 goto label09;

        $r10 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b10 = $r10[3];

        if $b10 != 0 goto label09;

        return "UCS-4";

     label09:
        return null;

     label10:
        return null;

     label11:
        $r28 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b28 = $r28[1];

        $i44 = (int) $b28;

        $i46 = (int) -1;

        if $i44 != $i46 goto label13;

        $r29 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b29 = $r29[2];

        if $b29 != 0 goto label12;

        $r30 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b30 = $r30[3];

        if $b30 != 0 goto label12;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 4;

        return "UCS-4";

     label12:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 2;

        return "UnicodeBig";

     label13:
        return null;

     label14:
        $r25 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b25 = $r25[1];

        $i47 = (int) $b25;

        $i49 = (int) -2;

        if $i47 != $i49 goto label16;

        $r26 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b26 = $r26[2];

        if $b26 != 0 goto label15;

        $r27 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b27 = $r27[3];

        if $b27 != 0 goto label15;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 4;

        return "UCS-4";

     label15:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 2;

        return "UnicodeLittle";

     label16:
        return null;

     label17:
        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b12 = $r12[1];

        $i50 = (int) $b12;

        lookupswitch($i50)
        {
            case 0: goto label18;
            case 60: goto label24;
            default: goto label27;
        };

     label18:
        $r17 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b17 = $r17[2];

        $i51 = (int) $b17;

        $i53 = (int) -2;

        if $i51 != $i53 goto label19;

        $r24 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b24 = $r24[3];

        $i54 = (int) $b24;

        $i56 = (int) -1;

        if $i54 != $i56 goto label19;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 4;

        return "UCS-4";

     label19:
        $r18 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b18 = $r18[2];

        $i57 = (int) $b18;

        $i59 = (int) -1;

        if $i57 != $i59 goto label20;

        $r23 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b23 = $r23[3];

        $i60 = (int) $b23;

        $i62 = (int) -2;

        if $i60 != $i62 goto label20;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = 4;

        return "UCS-4";

     label20:
        $r19 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b19 = $r19[2];

        $i63 = (int) $b19;

        if $i63 != 60 goto label21;

        $r22 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b22 = $r22[3];

        if $b22 == 0 goto label22;

     label21:
        $r20 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b20 = $r20[2];

        if $b20 != 0 goto label23;

        $r21 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b21 = $r21[3];

        $i64 = (int) $b21;

        if $i64 != 60 goto label23;

     label22:
        return "UCS-4";

     label23:
        return null;

     label24:
        $r13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b13 = $r13[2];

        if $b13 != 0 goto label25;

        $r16 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b16 = $r16[3];

        $i65 = (int) $b16;

        if $i65 != 63 goto label25;

        return "UnicodeBigUnmarked";

     label25:
        $r14 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b14 = $r14[2];

        if $b14 != 0 goto label26;

        $r15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b15 = $r15[3];

        if $b15 != 0 goto label26;

        return "UCS-4";

     label26:
        return null;

     label27:
        return null;

     label28:
        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b2 = $r2[1];

        $i66 = (int) $b2;

        if $i66 != 111 goto label29;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b3 = $r3[2];

        $i67 = (int) $b3;

        $i69 = (int) -89;

        if $i67 != $i69 goto label29;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $b4 = $r4[3];

        $i70 = (int) $b4;

        $i72 = (int) -108;

        if $i70 != $i72 goto label29;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean useDeclaredEncoding> = 1;

        return "Cp037";

     label29:
        return null;

     label30:
        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean useDeclaredEncoding> = 1;

        return null;
    }

    private void processXMLDecl() throws java.io.IOException
    {
        byte[] $r4;
        int[] $r2, $r6, $r7;
        boolean $z0, $z1, $z2, $z3;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder $r5, $r12;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String $r9, $r10, $r11;
        char[] $r1, $r3, $r8;

        r0 := @this: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        $r5 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder>;

        $r4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        $i6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        $i2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        $i5 = $i2 - $i1;

        $r3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] cbuf>;

        $i4 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos>;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] cbuf>;

        $i3 = lengthof $r1;

        $r2 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int[] decodeResult>;

        interfaceinvoke $r5.<org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder: void decodeXMLDecl(byte[],int,int,char[],int,int,int[])>($r4, $i6, $i5, $r3, $i4, $i3, $r2);

        $i8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        $r6 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int[] decodeResult>;

        $i7 = $r6[0];

        $i9 = $i8 + $i7;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = $i9;

        $r7 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int[] decodeResult>;

        $i10 = $r7[1];

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd> = $i10;

        $r8 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] cbuf>;

        $i11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd>;

        $i12 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int parseXMLDeclaration(char[],int,int)>($r8, 0, $i11);

        if $i12 <= 0 goto label4;

        $r9 = virtualinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String getXMLDeclaredEncoding()>();

        $r10 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String getJavaCharset(java.lang.String)>($r9);

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean rewindDeclaration>;

        if $z0 != 0 goto label1;

        $i15 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos>;

        $i16 = $i15 + $i12;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = $i16;

     label1:
        $z1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean useDeclaredEncoding>;

        if $z1 == 0 goto label4;

        if $r10 == null goto label4;

        $r11 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        $z2 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r11);

        if $z2 != 0 goto label4;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd> = 0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = 0;

        $r12 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder>;

        interfaceinvoke $r12.<org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder: void reset()>();

        $z3 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean rewindDeclaration>;

        if $z3 == 0 goto label2;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = i0;

        goto label3;

     label2:
        $i13 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int minBytesPerChar>;

        $i14 = $i12 * $i13;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = $i14;

     label3:
        specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: void setEncoding(java.lang.String)>($r10);

     label4:
        return;
    }

    static int access$000(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd>;

        return $i0;
    }

    static int access$100(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos>;

        return $i0;
    }

    static char[] access$200(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        char[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: char[] cbuf>;

        return $r1;
    }

    static int access$108(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0, $i1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos>;

        $i1 = $i0 + 1;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = $i1;

        return $i0;
    }

    static int access$102(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader, int)
    {
        int i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        i0 := @parameter1: int;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = i0;

        return i0;
    }

    static int access$002(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader, int)
    {
        int i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        i0 := @parameter1: int;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufEnd> = i0;

        return i0;
    }

    static int access$112(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader, int)
    {
        int i0, $i1, $i2;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos>;

        $i2 = $i1 + i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = $i2;

        return $i2;
    }

    static int access$300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufEnd>;

        return $i0;
    }

    static int access$400(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        return $i0;
    }

    static int access$500(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int maxBytesPerChar>;

        return $i0;
    }

    static int access$600(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader, boolean) throws java.io.IOException
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        boolean z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        z0 := @parameter1: boolean;

        $i0 = specialinvoke r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int fillByteBuffer(boolean)>(z0);

        return $i0;
    }

    static int access$700(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        int $i0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int minBytesPerChar>;

        return $i0;
    }

    static byte[] access$800(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        byte[] $r1;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: byte[] bbuf>;

        return $r1;
    }

    static int[] access$900(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        int[] $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int[] decodeResult>;

        return $r1;
    }

    static org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder access$1000(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: org.apache.xmlbeans.impl.piccolo.xml.XMLDecoder decoder>;

        return $r1;
    }

    static int access$412(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader, int)
    {
        int i0, $i1, $i2;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos>;

        $i2 = $i1 + i0;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int bbufPos> = $i2;

        return $i2;
    }

    static boolean access$1100(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        boolean $z0;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $z0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: boolean eofReached>;

        return $z0;
    }

    static java.io.InputStream access$1200(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.io.InputStream $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.io.InputStream in>;

        return $r1;
    }

    static int access$114(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader, long)
    {
        int $i0, $i4;
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        long l1, $l2, $l3;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        l1 := @parameter1: long;

        $i0 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos>;

        $l2 = (long) $i0;

        $l3 = $l2 + l1;

        $i4 = (int) $l3;

        r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int cbufPos> = $i4;

        return $i4;
    }

    static java.lang.String access$1300(org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader)
    {
        org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader;

        $r1 = r0.<org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.lang.String encoding>;

        return $r1;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, $r99, $r100, $r101, $r102, $r103, $r104, $r105, $r106, $r107, $r108, $r109, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117, $r118, $r119, $r120, $r121, $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149, $r150, $r151, $r152, $r153, $r154, $r155, $r156, $r157, $r158, $r159, $r160, $r161, $r162, $r163, $r164, $r165, $r166, $r167, $r168, $r169, $r170, $r171, $r172, $r173, $r174, $r175, $r176, $r177, $r178, $r179, $r180, $r181, $r182, $r183, $r184, $r185, $r186, $r187, $r188, $r189, $r190, $r191, $r192, $r193, $r194, $r195, $r196, $r197, $r198, $r199, $r200, $r201, $r202, $r203, $r204, $r205, $r206, $r207, $r208, $r209, $r210, $r211, $r212, $r213, $r214, $r215, $r216, $r217, $r218, $r219, $r220, $r221, $r222, $r223, $r224, $r225, $r226, $r227, $r228, $r229, $r230, $r231, $r232, $r233, $r234, $r235, $r236, $r237, $r238, $r239, $r240, $r241, $r242, $r243, $r244, $r245, $r246, $r247, $r248, $r249, $r250, $r251, $r252, $r253, $r254, $r255, $r256, $r257, $r258, $r259, $r260, $r261, $r262, $r263, $r264, $r265, $r266, $r267, $r268, $r269, $r270, $r271, $r272, $r273, $r274, $r275, $r276, $r277, $r278, $r279, $r280, $r281, $r282, $r283, $r284, $r285, $r286, $r287, $r288, $r289, $r290, $r291, $r292, $r293, $r294, $r295, $r296, $r297, $r298, $r299, $r300, $r301, $r302, $r303, $r304, $r305, $r306, $r307, $r308, $r309, $r310, $r311, $r312, $r313, $r314, $r315, $r316, $r317, $r318, $r319, $r320, $r321, $r322, $r323, $r324, $r325, $r326, $r327, $r328;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int MAX_XML_DECL_CHARS> = 100;

        <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: int BYTE_BUFFER_SIZE> = 8192;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>(int)>(31);

        <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable> = $r0;

        $r1 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-US", "Cp037");

        $r2 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r2.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-CA", "Cp037");

        $r3 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-NL", "Cp037");

        $r4 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-WT", "Cp037");

        $r5 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-DK", "Cp277");

        $r6 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-NO", "Cp277");

        $r7 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-FI", "Cp278");

        $r8 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-SE", "Cp278");

        $r9 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r9.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-IT", "Cp280");

        $r10 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r10.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-ES", "Cp284");

        $r11 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r11.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-GB", "Cp285");

        $r12 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-FR", "Cp297");

        $r13 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r13.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-AR1", "Cp420");

        $r14 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-GR", "Cp423");

        $r15 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r15.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-HE", "Cp424");

        $r16 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r16.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-BE", "Cp500");

        $r17 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r17.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-CH", "Cp500");

        $r18 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r18.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-ROECE", "Cp870");

        $r19 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r19.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-YU", "Cp870");

        $r20 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r20.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-IS", "Cp871");

        $r21 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r21.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-TR", "Cp905");

        $r22 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r22.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-CP-AR2", "Cp918");

        $r23 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r23.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF-16", "Unicode");

        $r24 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r24.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-10646-UCS-2", "Unicode");

        $r25 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r25.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ANSI_X3.4-1986", "ASCII");

        $r26 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r26.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ASCII", "ASCII");

        $r27 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r27.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP367", "ASCII");

        $r28 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r28.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSASCII", "ASCII");

        $r29 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r29.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-367", "ASCII");

        $r30 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r30.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM367", "ASCII");

        $r31 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r31.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-6", "ASCII");

        $r32 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r32.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO646-US", "ASCII");

        $r33 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r33.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_646.IRV:1991", "ASCII");

        $r34 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r34.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("US", "ASCII");

        $r35 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("US-ASCII", "ASCII");

        $r36 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r36.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("BIG5", "BIG5");

        $r37 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r37.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSBIG5", "BIG5");

        $r38 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r38.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP037", "CP037");

        $r39 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r39.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM037", "CP037");

        $r40 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r40.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-37", "CP037");

        $r41 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r41.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM037", "CP037");

        $r42 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r42.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP1026", "CP1026");

        $r43 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r43.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM1026", "CP1026");

        $r44 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r44.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1026", "CP1026");

        $r45 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r45.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM1026", "CP1026");

        $r46 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r46.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP1047", "CP1047");

        $r47 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r47.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1047", "CP1047");

        $r48 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r48.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM1047", "CP1047");

        $r49 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r49.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01140", "CP1140");

        $r50 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01140", "CP1140");

        $r51 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r51.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1140", "CP1140");

        $r52 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01140", "CP1140");

        $r53 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r53.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01141", "CP1141");

        $r54 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01141", "CP1141");

        $r55 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r55.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1141", "CP1141");

        $r56 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01141", "CP1141");

        $r57 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r57.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01142", "CP1142");

        $r58 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01142", "CP1142");

        $r59 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r59.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1142", "CP1142");

        $r60 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r60.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01142", "CP1142");

        $r61 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r61.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01143", "CP1143");

        $r62 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r62.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01143", "CP1143");

        $r63 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r63.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1143", "CP1143");

        $r64 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r64.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01143", "CP1143");

        $r65 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r65.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01144", "CP1144");

        $r66 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r66.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01144", "CP1144");

        $r67 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r67.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1144", "CP1144");

        $r68 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r68.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01144", "CP1144");

        $r69 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r69.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01145", "CP1145");

        $r70 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r70.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01145", "CP1145");

        $r71 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r71.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1145", "CP1145");

        $r72 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r72.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01145", "CP1145");

        $r73 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r73.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01146", "CP1146");

        $r74 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r74.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01146", "CP1146");

        $r75 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r75.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1146", "CP1146");

        $r76 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r76.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01146", "CP1146");

        $r77 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r77.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01147", "CP1147");

        $r78 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r78.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01147", "CP1147");

        $r79 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r79.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1147", "CP1147");

        $r80 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r80.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01147", "CP1147");

        $r81 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r81.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01148", "CP1148");

        $r82 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r82.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01148", "CP1148");

        $r83 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r83.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1148", "CP1148");

        $r84 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r84.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01148", "CP1148");

        $r85 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r85.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID01149", "CP1149");

        $r86 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r86.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP01149", "CP1149");

        $r87 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r87.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-1149", "CP1149");

        $r88 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r88.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM01149", "CP1149");

        $r89 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r89.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1250", "CP1250");

        $r90 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r90.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1251", "CP1251");

        $r91 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r91.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1252", "CP1252");

        $r92 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r92.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1253", "CP1253");

        $r93 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r93.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1254", "CP1254");

        $r94 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r94.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1255", "CP1255");

        $r95 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r95.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1256", "CP1256");

        $r96 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r96.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1257", "CP1257");

        $r97 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r97.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-1258", "CP1258");

        $r98 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r98.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP273", "CP273");

        $r99 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r99.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM273", "CP273");

        $r100 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r100.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-273", "CP273");

        $r101 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r101.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM273", "CP273");

        $r102 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r102.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP277", "CP277");

        $r103 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r103.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM277", "CP277");

        $r104 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r104.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-277", "CP277");

        $r105 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r105.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM277", "CP277");

        $r106 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r106.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP278", "CP278");

        $r107 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r107.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM278", "CP278");

        $r108 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r108.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-278", "CP278");

        $r109 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r109.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM278", "CP278");

        $r110 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r110.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP280", "CP280");

        $r111 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r111.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM280", "CP280");

        $r112 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r112.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-280", "CP280");

        $r113 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r113.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM280", "CP280");

        $r114 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r114.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP284", "CP284");

        $r115 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r115.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM284", "CP284");

        $r116 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r116.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-284", "CP284");

        $r117 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r117.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM284", "CP284");

        $r118 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r118.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP285", "CP285");

        $r119 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r119.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM285", "CP285");

        $r120 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r120.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-285", "CP285");

        $r121 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r121.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM285", "CP285");

        $r122 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r122.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP290", "CP290");

        $r123 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r123.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM290", "CP290");

        $r124 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r124.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-JP-KANA", "CP290");

        $r125 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r125.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-290", "CP290");

        $r126 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r126.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM290", "CP290");

        $r127 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r127.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP297", "CP297");

        $r128 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r128.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM297", "CP297");

        $r129 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r129.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-297", "CP297");

        $r130 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r130.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM297", "CP297");

        $r131 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r131.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP420", "CP420");

        $r132 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r132.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM420", "CP420");

        $r133 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r133.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-420", "CP420");

        $r134 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r134.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM420", "CP420");

        $r135 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r135.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP424", "CP424");

        $r136 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r136.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM424", "CP424");

        $r137 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r137.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-424", "CP424");

        $r138 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r138.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM424", "CP424");

        $r139 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r139.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("437", "CP437");

        $r140 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r140.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP437", "CP437");

        $r141 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r141.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSPC8CODEPAGE437", "CP437");

        $r142 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r142.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-437", "CP437");

        $r143 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r143.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM437", "CP437");

        $r144 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r144.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP500", "CP500");

        $r145 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r145.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM500", "CP500");

        $r146 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r146.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-500", "CP500");

        $r147 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r147.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM500", "CP500");

        $r148 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r148.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP775", "CP775");

        $r149 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r149.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSPC775BALTIC", "CP775");

        $r150 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r150.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-775", "CP775");

        $r151 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r151.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM775", "CP775");

        $r152 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r152.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("850", "CP850");

        $r153 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r153.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP850", "CP850");

        $r154 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r154.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSPC850MULTILINGUAL", "CP850");

        $r155 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r155.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-850", "CP850");

        $r156 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r156.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM850", "CP850");

        $r157 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r157.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("852", "CP852");

        $r158 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r158.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP852", "CP852");

        $r159 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r159.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSPCP852", "CP852");

        $r160 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r160.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-852", "CP852");

        $r161 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r161.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM852", "CP852");

        $r162 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r162.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("855", "CP855");

        $r163 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r163.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP855", "CP855");

        $r164 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r164.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM855", "CP855");

        $r165 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r165.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-855", "CP855");

        $r166 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r166.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM855", "CP855");

        $r167 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r167.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("857", "CP857");

        $r168 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r168.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP857", "CP857");

        $r169 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r169.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM857", "CP857");

        $r170 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r170.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-857", "CP857");

        $r171 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r171.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM857", "CP857");

        $r172 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r172.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID00858", "CP858");

        $r173 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r173.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP00858", "CP858");

        $r174 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r174.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-858", "CP858");

        $r175 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r175.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM00858", "CP858");

        $r176 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r176.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("860", "CP860");

        $r177 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r177.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP860", "CP860");

        $r178 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r178.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM860", "CP860");

        $r179 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r179.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-860", "CP860");

        $r180 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r180.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM860", "CP860");

        $r181 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r181.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("861", "CP861");

        $r182 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r182.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP-IS", "CP861");

        $r183 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r183.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP861", "CP861");

        $r184 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r184.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM861", "CP861");

        $r185 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r185.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-861", "CP861");

        $r186 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r186.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM861", "CP861");

        $r187 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r187.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("862", "CP862");

        $r188 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r188.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP862", "CP862");

        $r189 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r189.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSPC862LATINHEBREW", "CP862");

        $r190 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r190.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-862", "CP862");

        $r191 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r191.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM862", "CP862");

        $r192 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r192.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("863", "CP863");

        $r193 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r193.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP863", "CP863");

        $r194 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r194.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM863", "CP863");

        $r195 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r195.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-863", "CP863");

        $r196 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r196.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM863", "CP863");

        $r197 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r197.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP864", "CP864");

        $r198 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r198.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM864", "CP864");

        $r199 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r199.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-864", "CP864");

        $r200 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r200.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM864", "CP864");

        $r201 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r201.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("865", "CP865");

        $r202 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r202.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP865", "CP865");

        $r203 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r203.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM865", "CP865");

        $r204 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r204.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-865", "CP865");

        $r205 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r205.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM865", "CP865");

        $r206 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r206.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("866", "CP866");

        $r207 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r207.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP866", "CP866");

        $r208 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r208.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM866", "CP866");

        $r209 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r209.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-866", "CP866");

        $r210 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r210.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM866", "CP866");

        $r211 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r211.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP-AR", "CP868");

        $r212 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r212.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP868", "CP868");

        $r213 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r213.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM868", "CP868");

        $r214 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r214.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-868", "CP868");

        $r215 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r215.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM868", "CP868");

        $r216 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r216.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP-GR", "CP869");

        $r217 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r217.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP869", "CP869");

        $r218 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r218.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM869", "CP869");

        $r219 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r219.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-869", "CP869");

        $r220 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r220.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM869", "CP869");

        $r221 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r221.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP870", "CP870");

        $r222 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r222.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM870", "CP870");

        $r223 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r223.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-870", "CP870");

        $r224 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r224.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM870", "CP870");

        $r225 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r225.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP871", "CP871");

        $r226 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r226.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM871", "CP871");

        $r227 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r227.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-871", "CP871");

        $r228 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r228.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM871", "CP871");

        $r229 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r229.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP918", "CP918");

        $r230 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r230.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSIBM918", "CP918");

        $r231 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r231.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-918", "CP918");

        $r232 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r232.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM918", "CP918");

        $r233 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r233.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CCSID00924", "CP924");

        $r234 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r234.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP00924", "CP924");

        $r235 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r235.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EBCDIC-LATIN9--EURO", "CP924");

        $r236 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r236.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-924", "CP924");

        $r237 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r237.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM00924", "CP924");

        $r238 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r238.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSEUCPKDFMTJAPANESE", "EUCJIS");

        $r239 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r239.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EUC-JP", "EUCJIS");

        $r240 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r240.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EXTENDED_UNIX_CODE_PACKED_FORMAT_FOR_JAPANESE", "EUCJIS");

        $r241 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r241.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GB18030", "GB18030");

        $r242 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r242.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSGB2312", "GB2312");

        $r243 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r243.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GB2312", "GB2312");

        $r244 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r244.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-2022-CN", "ISO2022CN");

        $r245 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r245.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISO2022KR", "ISO2022KR");

        $r246 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r246.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-2022-KR", "ISO2022KR");

        $r247 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r247.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CP819", "ISO8859_1");

        $r248 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r248.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATIN1", "ISO8859_1");

        $r249 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r249.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM-819", "ISO8859_1");

        $r250 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r250.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("IBM819", "ISO8859_1");

        $r251 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r251.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-1", "ISO8859_1");

        $r252 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r252.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-100", "ISO8859_1");

        $r253 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r253.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-1", "ISO8859_1");

        $r254 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r254.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("L1", "ISO8859_1");

        $r255 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r255.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LATIN1", "ISO8859_1");

        $r256 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r256.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATIN2", "ISO8859_2");

        $r257 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r257.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-2", "ISO8859_2");

        $r258 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r258.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-101", "ISO8859_2");

        $r259 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r259.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-2", "ISO8859_2");

        $r260 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r260.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("L2", "ISO8859_2");

        $r261 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r261.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LATIN2", "ISO8859_2");

        $r262 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r262.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATIN3", "ISO8859_3");

        $r263 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r263.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-3", "ISO8859_3");

        $r264 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r264.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-109", "ISO8859_3");

        $r265 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r265.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-3", "ISO8859_3");

        $r266 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r266.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("L3", "ISO8859_3");

        $r267 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r267.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LATIN3", "ISO8859_3");

        $r268 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r268.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATIN4", "ISO8859_4");

        $r269 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r269.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-4", "ISO8859_4");

        $r270 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r270.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-110", "ISO8859_4");

        $r271 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r271.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-4", "ISO8859_4");

        $r272 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r272.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("L4", "ISO8859_4");

        $r273 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r273.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LATIN4", "ISO8859_4");

        $r274 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r274.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATINCYRILLIC", "ISO8859_5");

        $r275 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r275.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CYRILLIC", "ISO8859_5");

        $r276 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r276.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-5", "ISO8859_5");

        $r277 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r277.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-144", "ISO8859_5");

        $r278 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r278.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-5", "ISO8859_5");

        $r279 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r279.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ARABIC", "ISO8859_6");

        $r280 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r280.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ASMO-708", "ISO8859_6");

        $r281 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r281.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATINARABIC", "ISO8859_6");

        $r282 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r282.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ECMA-114", "ISO8859_6");

        $r283 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r283.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-6", "ISO8859_6");

        $r284 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r284.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-127", "ISO8859_6");

        $r285 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r285.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-6", "ISO8859_6");

        $r286 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r286.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATINGREEK", "ISO8859_7");

        $r287 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r287.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ECMA-118", "ISO8859_7");

        $r288 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r288.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ELOT_928", "ISO8859_7");

        $r289 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r289.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GREEK", "ISO8859_7");

        $r290 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r290.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("GREEK8", "ISO8859_7");

        $r291 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r291.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-7", "ISO8859_7");

        $r292 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r292.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-126", "ISO8859_7");

        $r293 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r293.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-7", "ISO8859_7");

        $r294 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r294.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATINHEBREW", "ISO8859_8");

        $r295 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r295.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("HEBREW", "ISO8859_8");

        $r296 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r296.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-8", "ISO8859_8");

        $r297 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r297.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-8-I", "ISO8859_8");

        $r298 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r298.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-138", "ISO8859_8");

        $r299 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r299.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-8", "ISO8859_8");

        $r300 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r300.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISOLATIN5", "ISO8859_9");

        $r301 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r301.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-8859-9", "ISO8859_9");

        $r302 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r302.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-148", "ISO8859_9");

        $r303 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r303.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO_8859-9", "ISO8859_9");

        $r304 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r304.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("L5", "ISO8859_9");

        $r305 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r305.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("LATIN5", "ISO8859_9");

        $r306 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r306.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISO2022JP", "JIS");

        $r307 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r307.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-2022-JP", "JIS");

        $r308 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r308.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISO13JISC6220JP", "JIS0201");

        $r309 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r309.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("X0201", "JIS0201");

        $r310 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r310.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISO87JISX0208", "JIS0208");

        $r311 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r311.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-87", "JIS0208");

        $r312 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r312.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("X0208", "JIS0208");

        $r313 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r313.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("X0208DBIJIS_X0208-1983", "JIS0208");

        $r314 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r314.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSISO159JISX02121990", "JIS0212");

        $r315 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r315.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("ISO-IR-159", "JIS0212");

        $r316 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r316.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("X0212", "JIS0212");

        $r317 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r317.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSKOI8R", "KOI8_R");

        $r318 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r318.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("KOI8-R", "KOI8_R");

        $r319 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r319.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("EUC-KR", "KSC5601");

        $r320 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r320.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSWINDOWS31J", "MS932");

        $r321 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r321.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("WINDOWS-31J", "MS932");

        $r322 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r322.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("CSSHIFTJIS", "SJIS");

        $r323 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r323.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("MS_KANJI", "SJIS");

        $r324 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r324.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("SHIFT_JIS", "SJIS");

        $r325 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r325.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("TIS-620", "TIS620");

        $r326 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r326.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF-16BE", "UNICODEBIG");

        $r327 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r327.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF-16LE", "UNICODELITTLE");

        $r328 = <org.apache.xmlbeans.impl.piccolo.xml.XMLStreamReader: java.util.HashMap charsetTable>;

        virtualinvoke $r328.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>("UTF-8", "UTF8");

        return;
    }
}
