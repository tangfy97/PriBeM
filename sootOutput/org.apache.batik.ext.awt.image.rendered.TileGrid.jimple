public class org.apache.batik.ext.awt.image.rendered.TileGrid extends java.lang.Object implements org.apache.batik.ext.awt.image.rendered.TileStore
{
    private static final boolean DEBUG;
    private static final boolean COUNT;
    private int xSz;
    private int ySz;
    private int minTileX;
    private int minTileY;
    private org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters;
    private org.apache.batik.ext.awt.image.rendered.TileGenerator source;
    private org.apache.batik.ext.awt.image.rendered.LRUCache cache;
    static int requests;
    static int misses;
    static java.lang.Class class$org$apache$batik$ext$awt$image$rendered$TileGrid;

    public void <init>(int, int, int, int, org.apache.batik.ext.awt.image.rendered.TileGenerator, org.apache.batik.ext.awt.image.rendered.LRUCache)
    {
        org.apache.batik.ext.awt.image.rendered.TileGrid r0;
        org.apache.batik.ext.awt.image.rendered.LRUCache r1;
        org.apache.batik.ext.awt.image.rendered.TileGenerator r2;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] $r3;
        int i0, i1, i2, i3;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileGrid;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        r2 := @parameter4: org.apache.batik.ext.awt.image.rendered.TileGenerator;

        r1 := @parameter5: org.apache.batik.ext.awt.image.rendered.LRUCache;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileGenerator source> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.LRUCache cache> = null;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.LRUCache cache> = r1;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileGenerator source> = r2;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileX> = i0;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileY> = i1;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int xSz> = i2;

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int ySz> = i3;

        $r3 = newarray (org.apache.batik.ext.awt.image.rendered.TileLRUMember[])[i3];

        r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters> = $r3;

        return;
    }

    public void setTile(int, int, java.awt.image.Raster)
    {
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[] r7, r10;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8;
        java.awt.image.Raster r2;
        org.apache.batik.ext.awt.image.rendered.TileGrid r0;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember $r3, $r5, r8, r9;
        org.apache.batik.ext.awt.image.rendered.LRUCache $r6, $r11;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] $r1, $r4;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileGrid;

        i5 := @parameter0: int;

        i6 := @parameter1: int;

        r2 := @parameter2: java.awt.image.Raster;

        $i0 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileX>;

        i7 = i5 - $i0;

        $i1 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileY>;

        i8 = i6 - $i1;

        if i7 < 0 goto label1;

        $i2 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int xSz>;

        if i7 < $i2 goto label2;

     label1:
        return;

     label2:
        if i8 < 0 goto label3;

        $i3 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int ySz>;

        if i8 < $i3 goto label4;

     label3:
        return;

     label4:
        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters>;

        r7 = $r1[i8];

        if r2 != null goto label7;

        if r7 != null goto label5;

        return;

     label5:
        r8 = r7[i7];

        if r8 != null goto label6;

        return;

     label6:
        r7[i7] = null;

        $r6 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r6.<org.apache.batik.ext.awt.image.rendered.LRUCache: void remove(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r8);

        return;

     label7:
        if r7 == null goto label8;

        r9 = r7[i7];

        if r9 != null goto label9;

        $r5 = new org.apache.batik.ext.awt.image.rendered.TileLRUMember;

        specialinvoke $r5.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: void <init>()>();

        r9 = $r5;

        r7[i7] = $r5;

        goto label9;

     label8:
        $i4 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int xSz>;

        r10 = newarray (org.apache.batik.ext.awt.image.rendered.TileLRUMember)[$i4];

        $r3 = new org.apache.batik.ext.awt.image.rendered.TileLRUMember;

        specialinvoke $r3.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: void <init>()>();

        r9 = $r3;

        r10[i7] = $r3;

        $r4 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters>;

        $r4[i8] = r10;

     label9:
        virtualinvoke r9.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: void setRaster(java.awt.image.Raster)>(r2);

        $r11 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r11.<org.apache.batik.ext.awt.image.rendered.LRUCache: void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r9);

        return;
    }

    public java.awt.image.Raster getTileNoCompute(int, int)
    {
        org.apache.batik.ext.awt.image.rendered.TileGrid r0;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[] r2;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember r3;
        org.apache.batik.ext.awt.image.rendered.LRUCache $r5;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] $r1;
        int $i0, $i1, $i2, $i3, i4, i5, i6, i7;
        java.awt.image.Raster $r4;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileGrid;

        i4 := @parameter0: int;

        i5 := @parameter1: int;

        $i0 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileX>;

        i6 = i4 - $i0;

        $i1 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileY>;

        i7 = i5 - $i1;

        if i6 < 0 goto label1;

        $i2 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int xSz>;

        if i6 < $i2 goto label2;

     label1:
        return null;

     label2:
        if i7 < 0 goto label3;

        $i3 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int ySz>;

        if i7 < $i3 goto label4;

     label3:
        return null;

     label4:
        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters>;

        r2 = $r1[i7];

        if r2 != null goto label5;

        return null;

     label5:
        r3 = r2[i6];

        if r3 != null goto label6;

        return null;

     label6:
        $r4 = virtualinvoke r3.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: java.awt.image.Raster retrieveRaster()>();

        if $r4 == null goto label7;

        $r5 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r5.<org.apache.batik.ext.awt.image.rendered.LRUCache: void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r3);

     label7:
        return $r4;
    }

    public java.awt.image.Raster getTile(int, int)
    {
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[] r9, r11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, i10, i11, i12;
        java.awt.image.Raster $r6, r8;
        boolean $z0;
        org.apache.batik.ext.awt.image.rendered.TileGrid r0;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember $r3, $r7, r10;
        org.apache.batik.ext.awt.image.rendered.LRUCache $r4;
        org.apache.batik.ext.awt.image.rendered.TileGenerator $r5;
        org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] $r1, $r2;

        r0 := @this: org.apache.batik.ext.awt.image.rendered.TileGrid;

        i9 := @parameter0: int;

        i10 := @parameter1: int;

        $i0 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileX>;

        i11 = i9 - $i0;

        $i1 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileY>;

        i12 = i10 - $i1;

        if i11 < 0 goto label1;

        $i2 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int xSz>;

        if i11 < $i2 goto label2;

     label1:
        return null;

     label2:
        if i12 < 0 goto label3;

        $i3 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int ySz>;

        if i12 < $i3 goto label4;

     label3:
        return null;

     label4:
        r8 = null;

        $r1 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters>;

        r9 = $r1[i12];

        if r9 == null goto label6;

        r10 = r9[i11];

        if r10 == null goto label5;

        r8 = virtualinvoke r10.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: java.awt.image.Raster retrieveRaster()>();

        goto label7;

     label5:
        $r7 = new org.apache.batik.ext.awt.image.rendered.TileLRUMember;

        specialinvoke $r7.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: void <init>()>();

        r10 = $r7;

        r9[i11] = $r7;

        goto label7;

     label6:
        $i4 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int xSz>;

        r11 = newarray (org.apache.batik.ext.awt.image.rendered.TileLRUMember)[$i4];

        $r2 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileLRUMember[][] rasters>;

        $r2[i12] = r11;

        $r3 = new org.apache.batik.ext.awt.image.rendered.TileLRUMember;

        specialinvoke $r3.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: void <init>()>();

        r10 = $r3;

        r11[i11] = $r3;

     label7:
        if r8 != null goto label9;

        $r5 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.TileGenerator source>;

        $i5 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileX>;

        $i8 = i11 + $i5;

        $i6 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: int minTileY>;

        $i7 = i12 + $i6;

        $r6 = interfaceinvoke $r5.<org.apache.batik.ext.awt.image.rendered.TileGenerator: java.awt.image.Raster genTile(int,int)>($i8, $i7);

        r8 = $r6;

        $z0 = staticinvoke <org.apache.batik.util.HaltingThread: boolean hasBeenHalted()>();

        if $z0 == 0 goto label8;

        return $r6;

     label8:
        virtualinvoke r10.<org.apache.batik.ext.awt.image.rendered.TileLRUMember: void setRaster(java.awt.image.Raster)>($r6);

     label9:
        $r4 = r0.<org.apache.batik.ext.awt.image.rendered.TileGrid: org.apache.batik.ext.awt.image.rendered.LRUCache cache>;

        virtualinvoke $r4.<org.apache.batik.ext.awt.image.rendered.LRUCache: void add(org.apache.batik.ext.awt.image.rendered.LRUCache$LRUObj)>(r10);

        return r8;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.awt.image.rendered.TileGrid: boolean COUNT> = 0;

        <org.apache.batik.ext.awt.image.rendered.TileGrid: boolean DEBUG> = 0;

        return;
    }
}
