public final class org.joda.time.chrono.StrictChronology extends org.joda.time.chrono.AssembledChronology
{
    private static final long serialVersionUID;
    private transient org.joda.time.Chronology iWithUTC;

    public static org.joda.time.chrono.StrictChronology getInstance(org.joda.time.Chronology)
    {
        org.joda.time.Chronology r0;
        org.joda.time.chrono.StrictChronology $r1;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: org.joda.time.Chronology;

        if r0 != null goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Must supply a chronology");

        throw $r2;

     label1:
        $r1 = new org.joda.time.chrono.StrictChronology;

        specialinvoke $r1.<org.joda.time.chrono.StrictChronology: void <init>(org.joda.time.Chronology)>(r0);

        return $r1;
    }

    private void <init>(org.joda.time.Chronology)
    {
        org.joda.time.Chronology r1;
        org.joda.time.chrono.StrictChronology r0;

        r0 := @this: org.joda.time.chrono.StrictChronology;

        r1 := @parameter0: org.joda.time.Chronology;

        specialinvoke r0.<org.joda.time.chrono.AssembledChronology: void <init>(org.joda.time.Chronology,java.lang.Object)>(r1, null);

        return;
    }

    public org.joda.time.Chronology withUTC()
    {
        org.joda.time.DateTimeZone $r2, $r3;
        org.joda.time.Chronology $r1, $r4, $r5, $r7;
        org.joda.time.chrono.StrictChronology r0, $r6;

        r0 := @this: org.joda.time.chrono.StrictChronology;

        $r1 = r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology iWithUTC>;

        if $r1 != null goto label2;

        $r2 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeZone getZone()>();

        $r3 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        if $r2 != $r3 goto label1;

        r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology iWithUTC> = r0;

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>();

        $r5 = virtualinvoke $r4.<org.joda.time.Chronology: org.joda.time.Chronology withUTC()>();

        $r6 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.chrono.StrictChronology getInstance(org.joda.time.Chronology)>($r5);

        r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology iWithUTC> = $r6;

     label2:
        $r7 = r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology iWithUTC>;

        return $r7;
    }

    public org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)
    {
        org.joda.time.DateTimeZone $r0, $r2, r7;
        org.joda.time.Chronology $r3, $r4, $r6;
        org.joda.time.chrono.StrictChronology r1, $r5;

        r1 := @this: org.joda.time.chrono.StrictChronology;

        r7 := @parameter0: org.joda.time.DateTimeZone;

        if r7 != null goto label1;

        r7 = staticinvoke <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>();

     label1:
        $r0 = <org.joda.time.DateTimeZone: org.joda.time.DateTimeZone UTC>;

        if r7 != $r0 goto label2;

        $r6 = virtualinvoke r1.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology withUTC()>();

        return $r6;

     label2:
        $r2 = virtualinvoke r1.<org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeZone getZone()>();

        if r7 != $r2 goto label3;

        return r1;

     label3:
        $r3 = virtualinvoke r1.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>();

        $r4 = virtualinvoke $r3.<org.joda.time.Chronology: org.joda.time.Chronology withZone(org.joda.time.DateTimeZone)>(r7);

        $r5 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.chrono.StrictChronology getInstance(org.joda.time.Chronology)>($r4);

        return $r5;
    }

    protected void assemble(org.joda.time.chrono.AssembledChronology$Fields)
    {
        org.joda.time.DateTimeField $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46;
        org.joda.time.chrono.AssembledChronology$Fields r0;
        org.joda.time.chrono.StrictChronology r47;

        r47 := @this: org.joda.time.chrono.StrictChronology;

        r0 := @parameter0: org.joda.time.chrono.AssembledChronology$Fields;

        $r1 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year>;

        $r2 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r1);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField year> = $r2;

        $r3 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra>;

        $r4 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r3);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfEra> = $r4;

        $r5 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury>;

        $r6 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r5);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField yearOfCentury> = $r6;

        $r7 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra>;

        $r8 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r7);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField centuryOfEra> = $r8;

        $r9 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era>;

        $r10 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r9);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField era> = $r10;

        $r11 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfWeek>;

        $r12 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r11);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfWeek> = $r12;

        $r13 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfMonth>;

        $r14 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r13);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfMonth> = $r14;

        $r15 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfYear>;

        $r16 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r15);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField dayOfYear> = $r16;

        $r17 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField monthOfYear>;

        $r18 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r17);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField monthOfYear> = $r18;

        $r19 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekOfWeekyear>;

        $r20 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r19);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekOfWeekyear> = $r20;

        $r21 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear>;

        $r22 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r21);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyear> = $r22;

        $r23 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury>;

        $r24 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r23);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField weekyearOfCentury> = $r24;

        $r25 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfSecond>;

        $r26 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r25);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfSecond> = $r26;

        $r27 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfDay>;

        $r28 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r27);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField millisOfDay> = $r28;

        $r29 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfMinute>;

        $r30 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r29);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfMinute> = $r30;

        $r31 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfDay>;

        $r32 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r31);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField secondOfDay> = $r32;

        $r33 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfHour>;

        $r34 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r33);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfHour> = $r34;

        $r35 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfDay>;

        $r36 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r35);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField minuteOfDay> = $r36;

        $r37 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfDay>;

        $r38 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r37);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfDay> = $r38;

        $r39 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfHalfday>;

        $r40 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r39);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField hourOfHalfday> = $r40;

        $r41 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfDay>;

        $r42 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r41);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfDay> = $r42;

        $r43 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfHalfday>;

        $r44 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r43);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField clockhourOfHalfday> = $r44;

        $r45 = r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField halfdayOfDay>;

        $r46 = staticinvoke <org.joda.time.chrono.StrictChronology: org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)>($r45);

        r0.<org.joda.time.chrono.AssembledChronology$Fields: org.joda.time.DateTimeField halfdayOfDay> = $r46;

        return;
    }

    private static final org.joda.time.DateTimeField convertField(org.joda.time.DateTimeField)
    {
        org.joda.time.DateTimeField r0, $r1;

        r0 := @parameter0: org.joda.time.DateTimeField;

        $r1 = staticinvoke <org.joda.time.field.StrictDateTimeField: org.joda.time.DateTimeField getInstance(org.joda.time.DateTimeField)>(r0);

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.joda.time.chrono.StrictChronology r0, r2;
        org.joda.time.Chronology $r3, $r4;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.joda.time.chrono.StrictChronology;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.joda.time.chrono.StrictChronology;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.joda.time.chrono.StrictChronology) r1;

        $r3 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>();

        $r4 = virtualinvoke r2.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r4);

        return $z1;
    }

    public int hashCode()
    {
        org.joda.time.chrono.StrictChronology r0;
        org.joda.time.Chronology $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.joda.time.chrono.StrictChronology;

        $r1 = virtualinvoke r0.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>();

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = $i0 * 7;

        $i2 = 352831696 + $i1;

        return $i2;
    }

    public java.lang.String toString()
    {
        org.joda.time.Chronology $r3;
        org.joda.time.chrono.StrictChronology r2;
        java.lang.StringBuffer $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: org.joda.time.chrono.StrictChronology;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("StrictChronology[");

        $r3 = virtualinvoke r2.<org.joda.time.chrono.StrictChronology: org.joda.time.Chronology getBase()>();

        $r4 = virtualinvoke $r3.<org.joda.time.Chronology: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <org.joda.time.chrono.StrictChronology: long serialVersionUID> = 6633006628097111960L;

        return;
    }
}
