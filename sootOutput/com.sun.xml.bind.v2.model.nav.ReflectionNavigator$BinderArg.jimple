class com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg extends java.lang.Object
{
    final java.lang.reflect.TypeVariable[] params;
    final java.lang.reflect.Type[] args;
    static final boolean $assertionsDisabled;

    void <init>(java.lang.reflect.TypeVariable[], java.lang.reflect.Type[])
    {
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg r0;
        java.lang.reflect.TypeVariable[] r1;
        java.lang.reflect.Type[] r2;
        int $i0, $i1;
        java.lang.AssertionError $r3;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg;

        r1 := @parameter0: java.lang.reflect.TypeVariable[];

        r2 := @parameter1: java.lang.reflect.Type[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: java.lang.reflect.TypeVariable[] params> = r1;

        r0.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: java.lang.reflect.Type[] args> = r2;

        $z0 = <com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 == $i0 goto label1;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label1:
        return;
    }

    public void <init>(java.lang.reflect.GenericDeclaration, java.lang.reflect.Type[])
    {
        java.lang.reflect.GenericDeclaration r1;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg r0;
        java.lang.reflect.TypeVariable[] $r2;
        java.lang.reflect.Type[] r3;

        r0 := @this: com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg;

        r1 := @parameter0: java.lang.reflect.GenericDeclaration;

        r3 := @parameter1: java.lang.reflect.Type[];

        $r2 = interfaceinvoke r1.<java.lang.reflect.GenericDeclaration: java.lang.reflect.TypeVariable[] getTypeParameters()>();

        specialinvoke r0.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: void <init>(java.lang.reflect.TypeVariable[],java.lang.reflect.Type[])>($r2, r3);

        return;
    }

    java.lang.reflect.Type replace(java.lang.reflect.TypeVariable)
    {
        java.lang.reflect.TypeVariable r2, $r4;
        java.lang.reflect.Type $r6;
        com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg r0;
        java.lang.reflect.TypeVariable[] $r1, $r3;
        int $i0, i1;
        java.lang.reflect.Type[] $r5;
        boolean $z0;

        r0 := @this: com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg;

        r2 := @parameter0: java.lang.reflect.TypeVariable;

        i1 = 0;

     label1:
        $r1 = r0.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: java.lang.reflect.TypeVariable[] params>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r3 = r0.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: java.lang.reflect.TypeVariable[] params>;

        $r4 = $r3[i1];

        $z0 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z0 == 0 goto label2;

        $r5 = r0.<com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: java.lang.reflect.Type[] args>;

        $r6 = $r5[i1];

        return $r6;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return r2;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lcom/sun/xml/bind/v2/model/nav/ReflectionNavigator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.sun.xml.bind.v2.model.nav.ReflectionNavigator$BinderArg: boolean $assertionsDisabled> = $z1;

        return;
    }
}
