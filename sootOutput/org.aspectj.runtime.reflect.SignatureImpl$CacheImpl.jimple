final class org.aspectj.runtime.reflect.SignatureImpl$CacheImpl extends java.lang.Object implements org.aspectj.runtime.reflect.SignatureImpl$Cache
{
    private java.lang.ref.SoftReference toStringCacheRef;

    public void <init>()
    {
        org.aspectj.runtime.reflect.SignatureImpl$CacheImpl r0;

        r0 := @this: org.aspectj.runtime.reflect.SignatureImpl$CacheImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String[] makeCache()>();

        return;
    }

    public java.lang.String get(int)
    {
        org.aspectj.runtime.reflect.SignatureImpl$CacheImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.aspectj.runtime.reflect.SignatureImpl$CacheImpl;

        i0 := @parameter0: int;

        $r1 = specialinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String[] array()>();

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = $r1[i0];

        return $r2;
    }

    public void set(int, java.lang.String)
    {
        org.aspectj.runtime.reflect.SignatureImpl$CacheImpl r0;
        int i0;
        java.lang.String[] $r1, r3;
        java.lang.String r2;

        r0 := @this: org.aspectj.runtime.reflect.SignatureImpl$CacheImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r1 = specialinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String[] array()>();

        r3 = $r1;

        if $r1 != null goto label1;

        r3 = specialinvoke r0.<org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.String[] makeCache()>();

     label1:
        r3[i0] = r2;

        return;
    }

    private java.lang.String[] array()
    {
        org.aspectj.runtime.reflect.SignatureImpl$CacheImpl r0;
        java.lang.Object $r2;
        java.lang.String[] $r3, $r4;
        java.lang.ref.SoftReference $r1;

        r0 := @this: org.aspectj.runtime.reflect.SignatureImpl$CacheImpl;

        $r1 = r0.<org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.ref.SoftReference toStringCacheRef>;

        $r2 = virtualinvoke $r1.<java.lang.ref.SoftReference: java.lang.Object get()>();

        $r3 = (java.lang.String[]) $r2;

        $r4 = (java.lang.String[]) $r3;

        return $r4;
    }

    private java.lang.String[] makeCache()
    {
        org.aspectj.runtime.reflect.SignatureImpl$CacheImpl r1;
        java.lang.String[] r0;
        java.lang.ref.SoftReference $r2;

        r1 := @this: org.aspectj.runtime.reflect.SignatureImpl$CacheImpl;

        r0 = newarray (java.lang.String)[3];

        $r2 = new java.lang.ref.SoftReference;

        specialinvoke $r2.<java.lang.ref.SoftReference: void <init>(java.lang.Object)>(r0);

        r1.<org.aspectj.runtime.reflect.SignatureImpl$CacheImpl: java.lang.ref.SoftReference toStringCacheRef> = $r2;

        return r0;
    }
}
