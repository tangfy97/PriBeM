public class com.jhlabs.image.ExposureFilter extends com.jhlabs.image.TransferFilter
{
    private float exposure;

    public void <init>()
    {
        com.jhlabs.image.ExposureFilter r0;

        r0 := @this: com.jhlabs.image.ExposureFilter;

        specialinvoke r0.<com.jhlabs.image.TransferFilter: void <init>()>();

        r0.<com.jhlabs.image.ExposureFilter: float exposure> = 1.0F;

        return;
    }

    protected float transferFunction(float)
    {
        com.jhlabs.image.ExposureFilter r0;
        float f0, $f1, $f2, $f3, $f4, $f5;
        double $d0, $d1;

        r0 := @this: com.jhlabs.image.ExposureFilter;

        f0 := @parameter0: float;

        $f2 = neg f0;

        $f1 = r0.<com.jhlabs.image.ExposureFilter: float exposure>;

        $f3 = $f2 * $f1;

        $d0 = (double) $f3;

        $d1 = staticinvoke <java.lang.Math: double exp(double)>($d0);

        $f4 = (float) $d1;

        $f5 = 1.0F - $f4;

        return $f5;
    }

    public void setExposure(float)
    {
        float f0;
        com.jhlabs.image.ExposureFilter r0;

        r0 := @this: com.jhlabs.image.ExposureFilter;

        f0 := @parameter0: float;

        r0.<com.jhlabs.image.ExposureFilter: float exposure> = f0;

        r0.<com.jhlabs.image.TransferFilter: boolean initialized> = 0;

        return;
    }

    public float getExposure()
    {
        float $f0;
        com.jhlabs.image.ExposureFilter r0;

        r0 := @this: com.jhlabs.image.ExposureFilter;

        $f0 = r0.<com.jhlabs.image.ExposureFilter: float exposure>;

        return $f0;
    }

    public java.lang.String toString()
    {
        com.jhlabs.image.ExposureFilter r0;

        r0 := @this: com.jhlabs.image.ExposureFilter;

        return "Colors/Exposure...";
    }
}
