public abstract class com.jhlabs.image.BinaryFilter extends com.jhlabs.image.WholeImageFilter
{
    protected int newColor;
    protected com.jhlabs.math.BinaryFunction blackFunction;
    protected int iterations;
    protected com.jhlabs.image.Colormap colormap;

    public void <init>()
    {
        com.jhlabs.math.BlackFunction $r1;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        specialinvoke r0.<com.jhlabs.image.WholeImageFilter: void <init>()>();

        r0.<com.jhlabs.image.BinaryFilter: int newColor> = -16777216;

        $r1 = new com.jhlabs.math.BlackFunction;

        specialinvoke $r1.<com.jhlabs.math.BlackFunction: void <init>()>();

        r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.math.BinaryFunction blackFunction> = $r1;

        r0.<com.jhlabs.image.BinaryFilter: int iterations> = 1;

        return;
    }

    public void setIterations(int)
    {
        int i0;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.BinaryFilter: int iterations> = i0;

        return;
    }

    public int getIterations()
    {
        int $i0;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        $i0 = r0.<com.jhlabs.image.BinaryFilter: int iterations>;

        return $i0;
    }

    public void setColormap(com.jhlabs.image.Colormap)
    {
        com.jhlabs.image.Colormap r1;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        r1 := @parameter0: com.jhlabs.image.Colormap;

        r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.image.Colormap colormap> = r1;

        return;
    }

    public com.jhlabs.image.Colormap getColormap()
    {
        com.jhlabs.image.Colormap $r1;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        $r1 = r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.image.Colormap colormap>;

        return $r1;
    }

    public void setNewColor(int)
    {
        int i0;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        i0 := @parameter0: int;

        r0.<com.jhlabs.image.BinaryFilter: int newColor> = i0;

        return;
    }

    public int getNewColor()
    {
        int $i0;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        $i0 = r0.<com.jhlabs.image.BinaryFilter: int newColor>;

        return $i0;
    }

    public void setBlackFunction(com.jhlabs.math.BinaryFunction)
    {
        com.jhlabs.math.BinaryFunction r1;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        r1 := @parameter0: com.jhlabs.math.BinaryFunction;

        r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.math.BinaryFunction blackFunction> = r1;

        return;
    }

    public com.jhlabs.math.BinaryFunction getBlackFunction()
    {
        com.jhlabs.math.BinaryFunction $r1;
        com.jhlabs.image.BinaryFilter r0;

        r0 := @this: com.jhlabs.image.BinaryFilter;

        $r1 = r0.<com.jhlabs.image.BinaryFilter: com.jhlabs.math.BinaryFunction blackFunction>;

        return $r1;
    }
}
