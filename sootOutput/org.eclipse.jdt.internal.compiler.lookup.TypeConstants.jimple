public interface  org.eclipse.jdt.internal.compiler.lookup.TypeConstants extends java.lang.Object
{
    public static final char[] JAVA;
    public static final char[] LANG;
    public static final char[] IO;
    public static final char[] UTIL;
    public static final char[] ANNOTATION;
    public static final char[] REFLECT;
    public static final char[] LENGTH;
    public static final char[] CLONE;
    public static final char[] GETCLASS;
    public static final char[] OBJECT;
    public static final char[] MAIN;
    public static final char[] SERIALVERSIONUID;
    public static final char[] SERIALPERSISTENTFIELDS;
    public static final char[] READRESOLVE;
    public static final char[] WRITEREPLACE;
    public static final char[] READOBJECT;
    public static final char[] WRITEOBJECT;
    public static final char[] CharArray_JAVA_LANG_OBJECT;
    public static final char[] CharArray_JAVA_LANG_ENUM;
    public static final char[] CharArray_JAVA_LANG_ANNOTATION_ANNOTATION;
    public static final char[] CharArray_JAVA_IO_OBJECTINPUTSTREAM;
    public static final char[] CharArray_JAVA_IO_OBJECTOUTPUTSTREAM;
    public static final char[] CharArray_JAVA_IO_OBJECTSTREAMFIELD;
    public static final char[] ANONYM_PREFIX;
    public static final char[] ANONYM_SUFFIX;
    public static final char[] WILDCARD_NAME;
    public static final char[] WILDCARD_SUPER;
    public static final char[] WILDCARD_EXTENDS;
    public static final char[] WILDCARD_MINUS;
    public static final char[] WILDCARD_STAR;
    public static final char[] WILDCARD_PLUS;
    public static final char[] WILDCARD_CAPTURE_NAME_PREFIX;
    public static final char[] WILDCARD_CAPTURE_NAME_SUFFIX;
    public static final char[] WILDCARD_CAPTURE;
    public static final char[] BYTE;
    public static final char[] SHORT;
    public static final char[] INT;
    public static final char[] LONG;
    public static final char[] FLOAT;
    public static final char[] DOUBLE;
    public static final char[] CHAR;
    public static final char[] BOOLEAN;
    public static final char[] NULL;
    public static final char[] VOID;
    public static final char[] VALUE;
    public static final char[] VALUES;
    public static final char[] VALUEOF;
    public static final char[] UPPER_SOURCE;
    public static final char[] UPPER_CLASS;
    public static final char[] UPPER_RUNTIME;
    public static final char[] ANNOTATION_PREFIX;
    public static final char[] ANNOTATION_SUFFIX;
    public static final char[] TYPE;
    public static final char[] UPPER_FIELD;
    public static final char[] UPPER_METHOD;
    public static final char[] UPPER_PARAMETER;
    public static final char[] UPPER_CONSTRUCTOR;
    public static final char[] UPPER_LOCAL_VARIABLE;
    public static final char[] UPPER_ANNOTATION_TYPE;
    public static final char[] UPPER_PACKAGE;
    public static final char[][] JAVA_LANG;
    public static final char[][] JAVA_IO;
    public static final char[][] JAVA_LANG_ANNOTATION_ANNOTATION;
    public static final char[][] JAVA_LANG_ASSERTIONERROR;
    public static final char[][] JAVA_LANG_CLASS;
    public static final char[][] JAVA_LANG_CLASSNOTFOUNDEXCEPTION;
    public static final char[][] JAVA_LANG_CLONEABLE;
    public static final char[][] JAVA_LANG_ENUM;
    public static final char[][] JAVA_LANG_EXCEPTION;
    public static final char[][] JAVA_LANG_ERROR;
    public static final char[][] JAVA_LANG_ILLEGALARGUMENTEXCEPTION;
    public static final char[][] JAVA_LANG_ITERABLE;
    public static final char[][] JAVA_LANG_NOCLASSDEFERROR;
    public static final char[][] JAVA_LANG_OBJECT;
    public static final char[][] JAVA_LANG_STRING;
    public static final char[][] JAVA_LANG_STRINGBUFFER;
    public static final char[][] JAVA_LANG_STRINGBUILDER;
    public static final char[][] JAVA_LANG_SYSTEM;
    public static final char[][] JAVA_LANG_RUNTIMEEXCEPTION;
    public static final char[][] JAVA_LANG_THROWABLE;
    public static final char[][] JAVA_LANG_REFLECT_CONSTRUCTOR;
    public static final char[][] JAVA_IO_PRINTSTREAM;
    public static final char[][] JAVA_IO_SERIALIZABLE;
    public static final char[][] JAVA_LANG_BYTE;
    public static final char[][] JAVA_LANG_SHORT;
    public static final char[][] JAVA_LANG_CHARACTER;
    public static final char[][] JAVA_LANG_INTEGER;
    public static final char[][] JAVA_LANG_LONG;
    public static final char[][] JAVA_LANG_FLOAT;
    public static final char[][] JAVA_LANG_DOUBLE;
    public static final char[][] JAVA_LANG_BOOLEAN;
    public static final char[][] JAVA_LANG_VOID;
    public static final char[][] JAVA_UTIL_ITERATOR;
    public static final char[][] JAVA_LANG_DEPRECATED;
    public static final char[][] JAVA_LANG_ANNOTATION_DOCUMENTED;
    public static final char[][] JAVA_LANG_ANNOTATION_INHERITED;
    public static final char[][] JAVA_LANG_OVERRIDE;
    public static final char[][] JAVA_LANG_ANNOTATION_RETENTION;
    public static final char[][] JAVA_LANG_SUPPRESSWARNINGS;
    public static final char[][] JAVA_LANG_ANNOTATION_TARGET;
    public static final char[][] JAVA_LANG_ANNOTATION_RETENTIONPOLICY;
    public static final char[][] JAVA_LANG_ANNOTATION_ELEMENTTYPE;
    public static final char[][] JAVA_LANG_REFLECT_FIELD;
    public static final char[][] JAVA_LANG_REFLECT_METHOD;
    public static final char[][] JAVA_IO_OBJECTSTREAMEXCEPTION;
    public static final char[][] JAVA_IO_EXTERNALIZABLE;
    public static final char[][] JAVA_IO_IOEXCEPTION;
    public static final char[][] JAVA_IO_OBJECTOUTPUTSTREAM;
    public static final char[][] JAVA_IO_OBJECTINPUTSTREAM;
    public static final int CONSTRAINT_EQUAL;
    public static final int CONSTRAINT_EXTENDS;
    public static final int CONSTRAINT_SUPER;
    public static final int OK;
    public static final int UNCHECKED;
    public static final int MISMATCH;
    public static final char[] INIT;
    public static final char[] CLINIT;
    public static final char[] SYNTHETIC_SWITCH_ENUM_TABLE;
    public static final char[] SYNTHETIC_ENUM_VALUES;
    public static final char[] SYNTHETIC_ASSERT_DISABLED;
    public static final char[] SYNTHETIC_CLASS;
    public static final char[] SYNTHETIC_OUTER_LOCAL_PREFIX;
    public static final char[] SYNTHETIC_ENCLOSING_INSTANCE_PREFIX;
    public static final char[] SYNTHETIC_ACCESS_METHOD_PREFIX;
    public static final char[] PACKAGE_INFO_NAME;

    static void <clinit>()
    {
        java.lang.String $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r24, $r26, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r51, $r53, $r58, $r60, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r95, $r97, $r99, $r101, $r103, $r105, $r107, $r109, $r111, $r113, $r125, $r130, $r135, $r140, $r145, $r150, $r155, $r160, $r165, $r170, $r175, $r184, $r189, $r194, $r199, $r204, $r209, $r215, $r220, $r225, $r230, $r235, $r240, $r245, $r250, $r255, $r260, $r265, $r270, $r275, $r280, $r286, $r292, $r297, $r303, $r308, $r314, $r320, $r326, $r332, $r338, $r343, $r348, $r353, $r358, $r363, $r365, $r367, $r369, $r371, $r373, $r375, $r377, $r379, $r381, $r383;
        char[] $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23, $r25, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r49, $r50, $r52, $r54, $r55, $r56, $r57, $r59, $r61, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r117, $r119, $r120, $r122, $r123, $r124, $r126, $r128, $r129, $r131, $r133, $r134, $r136, $r138, $r139, $r141, $r143, $r144, $r146, $r148, $r149, $r151, $r153, $r154, $r156, $r158, $r159, $r161, $r163, $r164, $r166, $r168, $r169, $r171, $r173, $r174, $r176, $r178, $r179, $r180, $r182, $r183, $r185, $r187, $r188, $r190, $r192, $r193, $r195, $r197, $r198, $r200, $r202, $r203, $r205, $r207, $r208, $r210, $r212, $r213, $r214, $r216, $r218, $r219, $r221, $r223, $r224, $r226, $r228, $r229, $r231, $r233, $r234, $r236, $r238, $r239, $r241, $r243, $r244, $r246, $r248, $r249, $r251, $r253, $r254, $r256, $r258, $r259, $r261, $r263, $r264, $r266, $r268, $r269, $r271, $r273, $r274, $r276, $r278, $r279, $r281, $r283, $r284, $r285, $r287, $r289, $r290, $r291, $r293, $r295, $r296, $r298, $r300, $r301, $r302, $r304, $r306, $r307, $r309, $r311, $r312, $r313, $r315, $r317, $r318, $r319, $r321, $r323, $r324, $r325, $r327, $r329, $r330, $r331, $r333, $r335, $r336, $r337, $r339, $r341, $r342, $r344, $r346, $r347, $r349, $r351, $r352, $r354, $r356, $r357, $r359, $r361, $r362, $r364, $r366, $r368, $r370, $r372, $r374, $r376, $r378, $r380, $r382, $r384;
        char[][] $r115, $r118, $r121, $r127, $r132, $r137, $r142, $r147, $r152, $r157, $r162, $r167, $r172, $r177, $r181, $r186, $r191, $r196, $r201, $r206, $r211, $r217, $r222, $r227, $r232, $r237, $r242, $r247, $r252, $r257, $r262, $r267, $r272, $r277, $r282, $r288, $r294, $r299, $r305, $r310, $r316, $r322, $r328, $r334, $r340, $r345, $r350, $r355, $r360;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: int MISMATCH> = 2;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: int UNCHECKED> = 1;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: int OK> = 0;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: int CONSTRAINT_SUPER> = 2;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: int CONSTRAINT_EXTENDS> = 1;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: int CONSTRAINT_EQUAL> = 0;

        $r0 = "java";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA> = $r1;

        $r2 = "lang";

        $r3 = virtualinvoke $r2.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG> = $r3;

        $r4 = "io";

        $r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO> = $r5;

        $r6 = "util";

        $r7 = virtualinvoke $r6.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UTIL> = $r7;

        $r8 = "annotation";

        $r9 = virtualinvoke $r8.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION> = $r9;

        $r10 = "reflect";

        $r11 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] REFLECT> = $r11;

        $r12 = "length";

        $r13 = virtualinvoke $r12.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LENGTH> = $r13;

        $r14 = "clone";

        $r15 = virtualinvoke $r14.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CLONE> = $r15;

        $r16 = "getClass";

        $r17 = virtualinvoke $r16.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] GETCLASS> = $r17;

        $r18 = "Object";

        $r19 = virtualinvoke $r18.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] OBJECT> = $r19;

        $r20 = "main";

        $r21 = virtualinvoke $r20.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] MAIN> = $r21;

        $r22 = "serialVersionUID";

        $r23 = virtualinvoke $r22.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALVERSIONUID> = $r23;

        $r24 = "serialPersistentFields";

        $r25 = virtualinvoke $r24.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SERIALPERSISTENTFIELDS> = $r25;

        $r26 = "readResolve";

        $r27 = virtualinvoke $r26.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] READRESOLVE> = $r27;

        $r28 = "writeReplace";

        $r29 = virtualinvoke $r28.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WRITEREPLACE> = $r29;

        $r30 = "readObject";

        $r31 = virtualinvoke $r30.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] READOBJECT> = $r31;

        $r32 = "writeObject";

        $r33 = virtualinvoke $r32.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WRITEOBJECT> = $r33;

        $r34 = "java.lang.Object";

        $r35 = virtualinvoke $r34.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_OBJECT> = $r35;

        $r36 = "java.lang.Enum";

        $r37 = virtualinvoke $r36.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_ENUM> = $r37;

        $r38 = "java.lang.annotation.Annotation";

        $r39 = virtualinvoke $r38.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_LANG_ANNOTATION_ANNOTATION> = $r39;

        $r40 = "java.io.ObjectInputStream";

        $r41 = virtualinvoke $r40.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTINPUTSTREAM> = $r41;

        $r42 = "java.io.ObjectOutputStream";

        $r43 = virtualinvoke $r42.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTOUTPUTSTREAM> = $r43;

        $r44 = "java.io.ObjectStreamField";

        $r45 = virtualinvoke $r44.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CharArray_JAVA_IO_OBJECTSTREAMFIELD> = $r45;

        $r46 = "new ";

        $r47 = virtualinvoke $r46.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANONYM_PREFIX> = $r47;

        $r48 = "(){}";

        $r49 = virtualinvoke $r48.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANONYM_SUFFIX> = $r49;

        $r50 = newarray (char)[1];

        $r50[0] = 63;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_NAME> = $r50;

        $r51 = " super ";

        $r52 = virtualinvoke $r51.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_SUPER> = $r52;

        $r53 = " extends ";

        $r54 = virtualinvoke $r53.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_EXTENDS> = $r54;

        $r55 = newarray (char)[1];

        $r55[0] = 45;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_MINUS> = $r55;

        $r56 = newarray (char)[1];

        $r56[0] = 42;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_STAR> = $r56;

        $r57 = newarray (char)[1];

        $r57[0] = 43;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_PLUS> = $r57;

        $r58 = "capture#";

        $r59 = virtualinvoke $r58.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_CAPTURE_NAME_PREFIX> = $r59;

        $r60 = "-of ";

        $r61 = virtualinvoke $r60.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_CAPTURE_NAME_SUFFIX> = $r61;

        $r62 = newarray (char)[1];

        $r62[0] = 33;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] WILDCARD_CAPTURE> = $r62;

        $r63 = "byte";

        $r64 = virtualinvoke $r63.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] BYTE> = $r64;

        $r65 = "short";

        $r66 = virtualinvoke $r65.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SHORT> = $r66;

        $r67 = "int";

        $r68 = virtualinvoke $r67.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] INT> = $r68;

        $r69 = "long";

        $r70 = virtualinvoke $r69.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LONG> = $r70;

        $r71 = "float";

        $r72 = virtualinvoke $r71.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] FLOAT> = $r72;

        $r73 = "double";

        $r74 = virtualinvoke $r73.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] DOUBLE> = $r74;

        $r75 = "char";

        $r76 = virtualinvoke $r75.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CHAR> = $r76;

        $r77 = "boolean";

        $r78 = virtualinvoke $r77.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] BOOLEAN> = $r78;

        $r79 = "null";

        $r80 = virtualinvoke $r79.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] NULL> = $r80;

        $r81 = "void";

        $r82 = virtualinvoke $r81.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VOID> = $r82;

        $r83 = "value";

        $r84 = virtualinvoke $r83.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUE> = $r84;

        $r85 = "values";

        $r86 = virtualinvoke $r85.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUES> = $r86;

        $r87 = "valueOf";

        $r88 = virtualinvoke $r87.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUEOF> = $r88;

        $r89 = "SOURCE";

        $r90 = virtualinvoke $r89.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_SOURCE> = $r90;

        $r91 = "CLASS";

        $r92 = virtualinvoke $r91.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_CLASS> = $r92;

        $r93 = "RUNTIME";

        $r94 = virtualinvoke $r93.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_RUNTIME> = $r94;

        $r95 = "@";

        $r96 = virtualinvoke $r95.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION_PREFIX> = $r96;

        $r97 = "()";

        $r98 = virtualinvoke $r97.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION_SUFFIX> = $r98;

        $r99 = "TYPE";

        $r100 = virtualinvoke $r99.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] TYPE> = $r100;

        $r101 = "FIELD";

        $r102 = virtualinvoke $r101.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_FIELD> = $r102;

        $r103 = "METHOD";

        $r104 = virtualinvoke $r103.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_METHOD> = $r104;

        $r105 = "PARAMETER";

        $r106 = virtualinvoke $r105.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_PARAMETER> = $r106;

        $r107 = "CONSTRUCTOR";

        $r108 = virtualinvoke $r107.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_CONSTRUCTOR> = $r108;

        $r109 = "LOCAL_VARIABLE";

        $r110 = virtualinvoke $r109.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_LOCAL_VARIABLE> = $r110;

        $r111 = "ANNOTATION_TYPE";

        $r112 = virtualinvoke $r111.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_ANNOTATION_TYPE> = $r112;

        $r113 = "PACKAGE";

        $r114 = virtualinvoke $r113.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UPPER_PACKAGE> = $r114;

        $r115 = newarray (char[])[2];

        $r116 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r115[0] = $r116;

        $r117 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r115[1] = $r117;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG> = $r115;

        $r118 = newarray (char[])[2];

        $r119 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r118[0] = $r119;

        $r120 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r118[1] = $r120;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO> = $r118;

        $r121 = newarray (char[])[4];

        $r122 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r121[0] = $r122;

        $r123 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r121[1] = $r123;

        $r124 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r121[2] = $r124;

        $r125 = "Annotation";

        $r126 = virtualinvoke $r125.<java.lang.String: char[] toCharArray()>();

        $r121[3] = $r126;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_ANNOTATION> = $r121;

        $r127 = newarray (char[])[3];

        $r128 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r127[0] = $r128;

        $r129 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r127[1] = $r129;

        $r130 = "AssertionError";

        $r131 = virtualinvoke $r130.<java.lang.String: char[] toCharArray()>();

        $r127[2] = $r131;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ASSERTIONERROR> = $r127;

        $r132 = newarray (char[])[3];

        $r133 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r132[0] = $r133;

        $r134 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r132[1] = $r134;

        $r135 = "Class";

        $r136 = virtualinvoke $r135.<java.lang.String: char[] toCharArray()>();

        $r132[2] = $r136;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_CLASS> = $r132;

        $r137 = newarray (char[])[3];

        $r138 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r137[0] = $r138;

        $r139 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r137[1] = $r139;

        $r140 = "ClassNotFoundException";

        $r141 = virtualinvoke $r140.<java.lang.String: char[] toCharArray()>();

        $r137[2] = $r141;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_CLASSNOTFOUNDEXCEPTION> = $r137;

        $r142 = newarray (char[])[3];

        $r143 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r142[0] = $r143;

        $r144 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r142[1] = $r144;

        $r145 = "Cloneable";

        $r146 = virtualinvoke $r145.<java.lang.String: char[] toCharArray()>();

        $r142[2] = $r146;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_CLONEABLE> = $r142;

        $r147 = newarray (char[])[3];

        $r148 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r147[0] = $r148;

        $r149 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r147[1] = $r149;

        $r150 = "Enum";

        $r151 = virtualinvoke $r150.<java.lang.String: char[] toCharArray()>();

        $r147[2] = $r151;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ENUM> = $r147;

        $r152 = newarray (char[])[3];

        $r153 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r152[0] = $r153;

        $r154 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r152[1] = $r154;

        $r155 = "Exception";

        $r156 = virtualinvoke $r155.<java.lang.String: char[] toCharArray()>();

        $r152[2] = $r156;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_EXCEPTION> = $r152;

        $r157 = newarray (char[])[3];

        $r158 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r157[0] = $r158;

        $r159 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r157[1] = $r159;

        $r160 = "Error";

        $r161 = virtualinvoke $r160.<java.lang.String: char[] toCharArray()>();

        $r157[2] = $r161;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ERROR> = $r157;

        $r162 = newarray (char[])[3];

        $r163 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r162[0] = $r163;

        $r164 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r162[1] = $r164;

        $r165 = "IllegalArgumentException";

        $r166 = virtualinvoke $r165.<java.lang.String: char[] toCharArray()>();

        $r162[2] = $r166;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ILLEGALARGUMENTEXCEPTION> = $r162;

        $r167 = newarray (char[])[3];

        $r168 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r167[0] = $r168;

        $r169 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r167[1] = $r169;

        $r170 = "Iterable";

        $r171 = virtualinvoke $r170.<java.lang.String: char[] toCharArray()>();

        $r167[2] = $r171;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ITERABLE> = $r167;

        $r172 = newarray (char[])[3];

        $r173 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r172[0] = $r173;

        $r174 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r172[1] = $r174;

        $r175 = "NoClassDefError";

        $r176 = virtualinvoke $r175.<java.lang.String: char[] toCharArray()>();

        $r172[2] = $r176;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_NOCLASSDEFERROR> = $r172;

        $r177 = newarray (char[])[3];

        $r178 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r177[0] = $r178;

        $r179 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r177[1] = $r179;

        $r180 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] OBJECT>;

        $r177[2] = $r180;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_OBJECT> = $r177;

        $r181 = newarray (char[])[3];

        $r182 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r181[0] = $r182;

        $r183 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r181[1] = $r183;

        $r184 = "String";

        $r185 = virtualinvoke $r184.<java.lang.String: char[] toCharArray()>();

        $r181[2] = $r185;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_STRING> = $r181;

        $r186 = newarray (char[])[3];

        $r187 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r186[0] = $r187;

        $r188 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r186[1] = $r188;

        $r189 = "StringBuffer";

        $r190 = virtualinvoke $r189.<java.lang.String: char[] toCharArray()>();

        $r186[2] = $r190;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_STRINGBUFFER> = $r186;

        $r191 = newarray (char[])[3];

        $r192 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r191[0] = $r192;

        $r193 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r191[1] = $r193;

        $r194 = "StringBuilder";

        $r195 = virtualinvoke $r194.<java.lang.String: char[] toCharArray()>();

        $r191[2] = $r195;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_STRINGBUILDER> = $r191;

        $r196 = newarray (char[])[3];

        $r197 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r196[0] = $r197;

        $r198 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r196[1] = $r198;

        $r199 = "System";

        $r200 = virtualinvoke $r199.<java.lang.String: char[] toCharArray()>();

        $r196[2] = $r200;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_SYSTEM> = $r196;

        $r201 = newarray (char[])[3];

        $r202 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r201[0] = $r202;

        $r203 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r201[1] = $r203;

        $r204 = "RuntimeException";

        $r205 = virtualinvoke $r204.<java.lang.String: char[] toCharArray()>();

        $r201[2] = $r205;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_RUNTIMEEXCEPTION> = $r201;

        $r206 = newarray (char[])[3];

        $r207 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r206[0] = $r207;

        $r208 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r206[1] = $r208;

        $r209 = "Throwable";

        $r210 = virtualinvoke $r209.<java.lang.String: char[] toCharArray()>();

        $r206[2] = $r210;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_THROWABLE> = $r206;

        $r211 = newarray (char[])[4];

        $r212 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r211[0] = $r212;

        $r213 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r211[1] = $r213;

        $r214 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] REFLECT>;

        $r211[2] = $r214;

        $r215 = "Constructor";

        $r216 = virtualinvoke $r215.<java.lang.String: char[] toCharArray()>();

        $r211[3] = $r216;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_REFLECT_CONSTRUCTOR> = $r211;

        $r217 = newarray (char[])[3];

        $r218 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r217[0] = $r218;

        $r219 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r217[1] = $r219;

        $r220 = "PrintStream";

        $r221 = virtualinvoke $r220.<java.lang.String: char[] toCharArray()>();

        $r217[2] = $r221;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_PRINTSTREAM> = $r217;

        $r222 = newarray (char[])[3];

        $r223 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r222[0] = $r223;

        $r224 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r222[1] = $r224;

        $r225 = "Serializable";

        $r226 = virtualinvoke $r225.<java.lang.String: char[] toCharArray()>();

        $r222[2] = $r226;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_SERIALIZABLE> = $r222;

        $r227 = newarray (char[])[3];

        $r228 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r227[0] = $r228;

        $r229 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r227[1] = $r229;

        $r230 = "Byte";

        $r231 = virtualinvoke $r230.<java.lang.String: char[] toCharArray()>();

        $r227[2] = $r231;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_BYTE> = $r227;

        $r232 = newarray (char[])[3];

        $r233 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r232[0] = $r233;

        $r234 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r232[1] = $r234;

        $r235 = "Short";

        $r236 = virtualinvoke $r235.<java.lang.String: char[] toCharArray()>();

        $r232[2] = $r236;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_SHORT> = $r232;

        $r237 = newarray (char[])[3];

        $r238 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r237[0] = $r238;

        $r239 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r237[1] = $r239;

        $r240 = "Character";

        $r241 = virtualinvoke $r240.<java.lang.String: char[] toCharArray()>();

        $r237[2] = $r241;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_CHARACTER> = $r237;

        $r242 = newarray (char[])[3];

        $r243 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r242[0] = $r243;

        $r244 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r242[1] = $r244;

        $r245 = "Integer";

        $r246 = virtualinvoke $r245.<java.lang.String: char[] toCharArray()>();

        $r242[2] = $r246;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_INTEGER> = $r242;

        $r247 = newarray (char[])[3];

        $r248 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r247[0] = $r248;

        $r249 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r247[1] = $r249;

        $r250 = "Long";

        $r251 = virtualinvoke $r250.<java.lang.String: char[] toCharArray()>();

        $r247[2] = $r251;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_LONG> = $r247;

        $r252 = newarray (char[])[3];

        $r253 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r252[0] = $r253;

        $r254 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r252[1] = $r254;

        $r255 = "Float";

        $r256 = virtualinvoke $r255.<java.lang.String: char[] toCharArray()>();

        $r252[2] = $r256;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_FLOAT> = $r252;

        $r257 = newarray (char[])[3];

        $r258 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r257[0] = $r258;

        $r259 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r257[1] = $r259;

        $r260 = "Double";

        $r261 = virtualinvoke $r260.<java.lang.String: char[] toCharArray()>();

        $r257[2] = $r261;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_DOUBLE> = $r257;

        $r262 = newarray (char[])[3];

        $r263 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r262[0] = $r263;

        $r264 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r262[1] = $r264;

        $r265 = "Boolean";

        $r266 = virtualinvoke $r265.<java.lang.String: char[] toCharArray()>();

        $r262[2] = $r266;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_BOOLEAN> = $r262;

        $r267 = newarray (char[])[3];

        $r268 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r267[0] = $r268;

        $r269 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r267[1] = $r269;

        $r270 = "Void";

        $r271 = virtualinvoke $r270.<java.lang.String: char[] toCharArray()>();

        $r267[2] = $r271;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_VOID> = $r267;

        $r272 = newarray (char[])[3];

        $r273 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r272[0] = $r273;

        $r274 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] UTIL>;

        $r272[1] = $r274;

        $r275 = "Iterator";

        $r276 = virtualinvoke $r275.<java.lang.String: char[] toCharArray()>();

        $r272[2] = $r276;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_UTIL_ITERATOR> = $r272;

        $r277 = newarray (char[])[3];

        $r278 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r277[0] = $r278;

        $r279 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r277[1] = $r279;

        $r280 = "Deprecated";

        $r281 = virtualinvoke $r280.<java.lang.String: char[] toCharArray()>();

        $r277[2] = $r281;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_DEPRECATED> = $r277;

        $r282 = newarray (char[])[4];

        $r283 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r282[0] = $r283;

        $r284 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r282[1] = $r284;

        $r285 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r282[2] = $r285;

        $r286 = "Documented";

        $r287 = virtualinvoke $r286.<java.lang.String: char[] toCharArray()>();

        $r282[3] = $r287;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_DOCUMENTED> = $r282;

        $r288 = newarray (char[])[4];

        $r289 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r288[0] = $r289;

        $r290 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r288[1] = $r290;

        $r291 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r288[2] = $r291;

        $r292 = "Inherited";

        $r293 = virtualinvoke $r292.<java.lang.String: char[] toCharArray()>();

        $r288[3] = $r293;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_INHERITED> = $r288;

        $r294 = newarray (char[])[3];

        $r295 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r294[0] = $r295;

        $r296 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r294[1] = $r296;

        $r297 = "Override";

        $r298 = virtualinvoke $r297.<java.lang.String: char[] toCharArray()>();

        $r294[2] = $r298;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_OVERRIDE> = $r294;

        $r299 = newarray (char[])[4];

        $r300 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r299[0] = $r300;

        $r301 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r299[1] = $r301;

        $r302 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r299[2] = $r302;

        $r303 = "Retention";

        $r304 = virtualinvoke $r303.<java.lang.String: char[] toCharArray()>();

        $r299[3] = $r304;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_RETENTION> = $r299;

        $r305 = newarray (char[])[3];

        $r306 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r305[0] = $r306;

        $r307 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r305[1] = $r307;

        $r308 = "SuppressWarnings";

        $r309 = virtualinvoke $r308.<java.lang.String: char[] toCharArray()>();

        $r305[2] = $r309;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_SUPPRESSWARNINGS> = $r305;

        $r310 = newarray (char[])[4];

        $r311 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r310[0] = $r311;

        $r312 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r310[1] = $r312;

        $r313 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r310[2] = $r313;

        $r314 = "Target";

        $r315 = virtualinvoke $r314.<java.lang.String: char[] toCharArray()>();

        $r310[3] = $r315;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_TARGET> = $r310;

        $r316 = newarray (char[])[4];

        $r317 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r316[0] = $r317;

        $r318 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r316[1] = $r318;

        $r319 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r316[2] = $r319;

        $r320 = "RetentionPolicy";

        $r321 = virtualinvoke $r320.<java.lang.String: char[] toCharArray()>();

        $r316[3] = $r321;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_RETENTIONPOLICY> = $r316;

        $r322 = newarray (char[])[4];

        $r323 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r322[0] = $r323;

        $r324 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r322[1] = $r324;

        $r325 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] ANNOTATION>;

        $r322[2] = $r325;

        $r326 = "ElementType";

        $r327 = virtualinvoke $r326.<java.lang.String: char[] toCharArray()>();

        $r322[3] = $r327;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_ANNOTATION_ELEMENTTYPE> = $r322;

        $r328 = newarray (char[])[4];

        $r329 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r328[0] = $r329;

        $r330 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r328[1] = $r330;

        $r331 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] REFLECT>;

        $r328[2] = $r331;

        $r332 = "Field";

        $r333 = virtualinvoke $r332.<java.lang.String: char[] toCharArray()>();

        $r328[3] = $r333;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_REFLECT_FIELD> = $r328;

        $r334 = newarray (char[])[4];

        $r335 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r334[0] = $r335;

        $r336 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] LANG>;

        $r334[1] = $r336;

        $r337 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] REFLECT>;

        $r334[2] = $r337;

        $r338 = "Method";

        $r339 = virtualinvoke $r338.<java.lang.String: char[] toCharArray()>();

        $r334[3] = $r339;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_REFLECT_METHOD> = $r334;

        $r340 = newarray (char[])[3];

        $r341 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r340[0] = $r341;

        $r342 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r340[1] = $r342;

        $r343 = "ObjectStreamException";

        $r344 = virtualinvoke $r343.<java.lang.String: char[] toCharArray()>();

        $r340[2] = $r344;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_OBJECTSTREAMEXCEPTION> = $r340;

        $r345 = newarray (char[])[3];

        $r346 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r345[0] = $r346;

        $r347 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r345[1] = $r347;

        $r348 = "Externalizable";

        $r349 = virtualinvoke $r348.<java.lang.String: char[] toCharArray()>();

        $r345[2] = $r349;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_EXTERNALIZABLE> = $r345;

        $r350 = newarray (char[])[3];

        $r351 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r350[0] = $r351;

        $r352 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r350[1] = $r352;

        $r353 = "IOException";

        $r354 = virtualinvoke $r353.<java.lang.String: char[] toCharArray()>();

        $r350[2] = $r354;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_IOEXCEPTION> = $r350;

        $r355 = newarray (char[])[3];

        $r356 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r355[0] = $r356;

        $r357 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r355[1] = $r357;

        $r358 = "ObjectOutputStream";

        $r359 = virtualinvoke $r358.<java.lang.String: char[] toCharArray()>();

        $r355[2] = $r359;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_OBJECTOUTPUTSTREAM> = $r355;

        $r360 = newarray (char[])[3];

        $r361 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] JAVA>;

        $r360[0] = $r361;

        $r362 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] IO>;

        $r360[1] = $r362;

        $r363 = "ObjectInputStream";

        $r364 = virtualinvoke $r363.<java.lang.String: char[] toCharArray()>();

        $r360[2] = $r364;

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_IO_OBJECTINPUTSTREAM> = $r360;

        $r365 = "<init>";

        $r366 = virtualinvoke $r365.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] INIT> = $r366;

        $r367 = "<clinit>";

        $r368 = virtualinvoke $r367.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] CLINIT> = $r368;

        $r369 = "$SWITCH_TABLE$";

        $r370 = virtualinvoke $r369.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_SWITCH_ENUM_TABLE> = $r370;

        $r371 = "ENUM$VALUES";

        $r372 = virtualinvoke $r371.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_ENUM_VALUES> = $r372;

        $r373 = "$assertionsDisabled";

        $r374 = virtualinvoke $r373.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_ASSERT_DISABLED> = $r374;

        $r375 = "class$";

        $r376 = virtualinvoke $r375.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_CLASS> = $r376;

        $r377 = "val$";

        $r378 = virtualinvoke $r377.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_OUTER_LOCAL_PREFIX> = $r378;

        $r379 = "this$";

        $r380 = virtualinvoke $r379.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_ENCLOSING_INSTANCE_PREFIX> = $r380;

        $r381 = "access$";

        $r382 = virtualinvoke $r381.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] SYNTHETIC_ACCESS_METHOD_PREFIX> = $r382;

        $r383 = "package-info";

        $r384 = virtualinvoke $r383.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] PACKAGE_INFO_NAME> = $r384;

        return;
    }
}
