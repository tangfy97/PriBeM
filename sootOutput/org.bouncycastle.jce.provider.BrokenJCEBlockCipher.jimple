public class org.bouncycastle.jce.provider.BrokenJCEBlockCipher extends java.lang.Object implements org.bouncycastle.jce.provider.BrokenPBE
{
    private java.lang.Class[] availableSpecs;
    private org.bouncycastle.crypto.BufferedBlockCipher cipher;
    private org.bouncycastle.crypto.params.ParametersWithIV ivParam;
    private int pbeType;
    private int pbeHash;
    private int pbeKeySize;
    private int pbeIvSize;
    private int ivLength;
    private java.security.AlgorithmParameters engineParams;

    protected void <init>(org.bouncycastle.crypto.BlockCipher)
    {
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        java.lang.Class[] $r1;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r2;
        org.bouncycastle.crypto.BlockCipher r3;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r3 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Class)[4];

        $r1[0] = class "Ljavax/crypto/spec/IvParameterSpec;";

        $r1[1] = class "Ljavax/crypto/spec/PBEParameterSpec;";

        $r1[2] = class "Ljavax/crypto/spec/RC2ParameterSpec;";

        $r1[3] = class "Ljavax/crypto/spec/RC5ParameterSpec;";

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.lang.Class[] availableSpecs> = $r1;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeType> = 2;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeHash> = 1;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength> = 0;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams> = null;

        $r2 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        specialinvoke $r2.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>(r3);

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r2;

        return;
    }

    protected void <init>(org.bouncycastle.crypto.BlockCipher, int, int, int, int)
    {
        java.lang.Class[] $r1;
        org.bouncycastle.crypto.BlockCipher r3;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        int i0, i1, i2, i3;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r2;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r3 := @parameter0: org.bouncycastle.crypto.BlockCipher;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        i3 := @parameter4: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.lang.Class)[4];

        $r1[0] = class "Ljavax/crypto/spec/IvParameterSpec;";

        $r1[1] = class "Ljavax/crypto/spec/PBEParameterSpec;";

        $r1[2] = class "Ljavax/crypto/spec/RC2ParameterSpec;";

        $r1[3] = class "Ljavax/crypto/spec/RC5ParameterSpec;";

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.lang.Class[] availableSpecs> = $r1;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeType> = 2;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeHash> = 1;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength> = 0;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams> = null;

        $r2 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        specialinvoke $r2.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>(r3);

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r2;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeType> = i0;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeHash> = i1;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeKeySize> = i2;

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeIvSize> = i3;

        return;
    }

    protected int engineGetBlockSize()
    {
        int $i0;
        org.bouncycastle.crypto.BufferedBlockCipher $r1;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i0 = virtualinvoke $r1.<org.bouncycastle.crypto.BufferedBlockCipher: int getBlockSize()>();

        return $i0;
    }

    protected byte[] engineGetIV()
    {
        byte[] $r3;
        org.bouncycastle.crypto.params.ParametersWithIV $r1, $r2;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r1 == null goto label1;

        $r2 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r3 = virtualinvoke $r2.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        goto label2;

     label1:
        $r3 = null;

     label2:
        return $r3;
    }

    protected int engineGetKeySize(java.security.Key)
    {
        java.security.Key r0;
        byte[] $r1;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r2;
        int $i0;

        r2 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r0 := @parameter0: java.security.Key;

        $r1 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    protected int engineGetOutputSize(int)
    {
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        int i0, $i1;
        org.bouncycastle.crypto.BufferedBlockCipher $r1;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        i0 := @parameter0: int;

        $r1 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i1 = virtualinvoke $r1.<org.bouncycastle.crypto.BufferedBlockCipher: int getOutputSize(int)>(i0);

        return $i1;
    }

    protected java.security.AlgorithmParameters engineGetParameters()
    {
        byte[] $r9;
        org.bouncycastle.crypto.params.ParametersWithIV $r2, $r7;
        int $i0, $i1;
        java.lang.String $r5, $r12, r13;
        org.bouncycastle.crypto.BufferedBlockCipher $r3;
        java.lang.RuntimeException $r11;
        org.bouncycastle.crypto.BlockCipher $r4;
        java.security.AlgorithmParameters $r1, $r6, $r8, $r14;
        java.lang.Exception $r10;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        $r1 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams>;

        if $r1 != null goto label4;

        $r2 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        if $r2 == null goto label4;

        $r3 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r4 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r5 = interfaceinvoke $r4.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        r13 = $r5;

        $i0 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(47);

        if $i0 < 0 goto label1;

        $i1 = virtualinvoke $r5.<java.lang.String: int indexOf(int)>(47);

        r13 = virtualinvoke $r5.<java.lang.String: java.lang.String substring(int,int)>(0, $i1);

     label1:
        $r6 = staticinvoke <java.security.AlgorithmParameters: java.security.AlgorithmParameters getInstance(java.lang.String,java.lang.String)>(r13, "BC");

        r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams> = $r6;

        $r8 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams>;

        $r7 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam>;

        $r9 = virtualinvoke $r7.<org.bouncycastle.crypto.params.ParametersWithIV: byte[] getIV()>();

        virtualinvoke $r8.<java.security.AlgorithmParameters: void init(byte[])>($r9);

     label2:
        goto label4;

     label3:
        $r10 := @caughtexception;

        $r11 = new java.lang.RuntimeException;

        $r12 = virtualinvoke $r10.<java.lang.Exception: java.lang.String toString()>();

        specialinvoke $r11.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label4:
        $r14 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams>;

        return $r14;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    protected void engineSetMode(java.lang.String)
    {
        org.bouncycastle.crypto.modes.CFBBlockCipher $r11, $r17;
        boolean $z0, $z1, $z2, $z3;
        org.bouncycastle.crypto.BufferedBlockCipher $r8, $r12, $r14, $r18, $r20, $r24, $r26, $r30, $r32, $r36, $r39;
        org.bouncycastle.crypto.BlockCipher $r9, $r13, $r19, $r21, $r25, $r31, $r33, $r37, $r40;
        org.bouncycastle.crypto.modes.OFBBlockCipher $r23, $r29;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r7;
        java.lang.StringBuilder $r3, $r4, $r5;
        org.bouncycastle.crypto.modes.CBCBlockCipher $r35;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;
        java.lang.String r0, $r1, $r6, $r15, $r27;
        java.lang.IllegalArgumentException $r2;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r10, $r16, $r22, $r28, $r34, $r38;

        r7 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ECB");

        if $z0 == 0 goto label1;

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength> = 0;

        $r38 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r39 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r40 = virtualinvoke $r39.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r38.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r40);

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r38;

        goto label7;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("CBC");

        if $z1 == 0 goto label2;

        $r32 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r33 = virtualinvoke $r32.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $i10 = interfaceinvoke $r33.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength> = $i10;

        $r34 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r35 = new org.bouncycastle.crypto.modes.CBCBlockCipher;

        $r36 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r37 = virtualinvoke $r36.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r35.<org.bouncycastle.crypto.modes.CBCBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r37);

        specialinvoke $r34.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r35);

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r34;

        goto label7;

     label2:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("OFB");

        if $z2 == 0 goto label4;

        $r20 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r21 = virtualinvoke $r20.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $i5 = interfaceinvoke $r21.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength> = $i5;

        $i6 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i6 == 3 goto label3;

        $r27 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);

        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        $r28 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r29 = new org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r30 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r31 = virtualinvoke $r30.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r29.<org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r31, $i9);

        specialinvoke $r28.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r29);

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r28;

        goto label7;

     label3:
        $r22 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r23 = new org.bouncycastle.crypto.modes.OFBBlockCipher;

        $r24 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r25 = virtualinvoke $r24.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r26 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i7 = virtualinvoke $r26.<org.bouncycastle.crypto.BufferedBlockCipher: int getBlockSize()>();

        $i8 = 8 * $i7;

        specialinvoke $r23.<org.bouncycastle.crypto.modes.OFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r25, $i8);

        specialinvoke $r22.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r23);

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r22;

        goto label7;

     label4:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("CFB");

        if $z3 == 0 goto label6;

        $r8 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r9 = virtualinvoke $r8.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $i0 = interfaceinvoke $r9.<org.bouncycastle.crypto.BlockCipher: int getBlockSize()>();

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength> = $i0;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 == 3 goto label5;

        $r15 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(3);

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r15);

        $r16 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r17 = new org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r18 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r19 = virtualinvoke $r18.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r17.<org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r19, $i4);

        specialinvoke $r16.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r17);

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r16;

        goto label7;

     label5:
        $r10 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r11 = new org.bouncycastle.crypto.modes.CFBBlockCipher;

        $r12 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r13 = virtualinvoke $r12.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r14 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i2 = virtualinvoke $r14.<org.bouncycastle.crypto.BufferedBlockCipher: int getBlockSize()>();

        $i3 = 8 * $i2;

        specialinvoke $r11.<org.bouncycastle.crypto.modes.CFBBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher,int)>($r13, $i3);

        specialinvoke $r10.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r11);

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r10;

        goto label7;

     label6:
        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t support mode ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label7:
        return;
    }

    protected void engineSetPadding(java.lang.String) throws javax.crypto.NoSuchPaddingException
    {
        org.bouncycastle.crypto.modes.CTSBlockCipher $r9;
        javax.crypto.NoSuchPaddingException $r3;
        java.lang.String r0, $r1, $r8;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.crypto.BufferedBlockCipher $r10, $r12, $r13, $r16;
        org.bouncycastle.crypto.BlockCipher $r11, $r14, $r17;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r2;
        org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher $r15;
        java.lang.StringBuilder $r4, $r5, $r6, $r7;

        r2 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.bouncycastle.util.Strings: java.lang.String toUpperCase(java.lang.String)>(r0);

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("NOPADDING");

        if $z0 == 0 goto label1;

        $r12 = new org.bouncycastle.crypto.BufferedBlockCipher;

        $r13 = r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r14 = virtualinvoke $r13.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r12.<org.bouncycastle.crypto.BufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r14);

        r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r12;

        goto label5;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("PKCS5PADDING");

        if $z1 != 0 goto label2;

        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("PKCS7PADDING");

        if $z2 != 0 goto label2;

        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("ISO10126PADDING");

        if $z3 == 0 goto label3;

     label2:
        $r15 = new org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher;

        $r16 = r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r17 = virtualinvoke $r16.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r15.<org.bouncycastle.crypto.paddings.PaddedBufferedBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r17);

        r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r15;

        goto label5;

     label3:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("WITHCTS");

        if $z4 == 0 goto label4;

        $r9 = new org.bouncycastle.crypto.modes.CTSBlockCipher;

        $r10 = r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r11 = virtualinvoke $r10.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        specialinvoke $r9.<org.bouncycastle.crypto.modes.CTSBlockCipher: void <init>(org.bouncycastle.crypto.BlockCipher)>($r11);

        r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher> = $r9;

        goto label5;

     label4:
        $r3 = new javax.crypto.NoSuchPaddingException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Padding ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" unknown.");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<javax.crypto.NoSuchPaddingException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label5:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.spec.AlgorithmParameterSpec, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        byte[] $r4, $r6, $r14, $r17, $r21, $r23, $r25, $r28, $r31, $r33, $r36;
        java.security.SecureRandom $r15, r43;
        org.bouncycastle.crypto.BufferedBlockCipher $r8, $r9, $r37;
        org.bouncycastle.crypto.BlockCipher $r39;
        java.security.InvalidAlgorithmParameterException $r2, $r13;
        javax.crypto.spec.IvParameterSpec $r32;
        java.lang.String $r40;
        org.bouncycastle.jce.provider.JCEPBEKey $r38;
        org.bouncycastle.crypto.params.ParametersWithIV $r11, $r12, $r16, $r18, $r24, $r26, $r29, $r34, $r42;
        javax.crypto.spec.RC5ParameterSpec $r5, r46;
        java.security.spec.AlgorithmParameterSpec r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.bouncycastle.crypto.CipherParameters $r41, r44;
        java.security.Key r0;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r7;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.bouncycastle.crypto.params.KeyParameter $r27, $r30, $r35;
        java.io.PrintStream $r10;
        org.bouncycastle.crypto.params.RC5Parameters $r3;
        java.lang.IllegalArgumentException $r19;
        javax.crypto.spec.RC2ParameterSpec $r22, r45;
        org.bouncycastle.crypto.params.RC2Parameters $r20;

        r7 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        i2 := @parameter0: int;

        r0 := @parameter1: java.security.Key;

        r1 := @parameter2: java.security.spec.AlgorithmParameterSpec;

        r43 := @parameter3: java.security.SecureRandom;

        $z0 = r0 instanceof org.bouncycastle.jce.provider.JCEPBEKey;

        if $z0 == 0 goto label01;

        $r38 = (org.bouncycastle.jce.provider.JCEPBEKey) r0;

        $i8 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeType>;

        $i9 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeHash>;

        $r37 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $r39 = virtualinvoke $r37.<org.bouncycastle.crypto.BufferedBlockCipher: org.bouncycastle.crypto.BlockCipher getUnderlyingCipher()>();

        $r40 = interfaceinvoke $r39.<org.bouncycastle.crypto.BlockCipher: java.lang.String getAlgorithmName()>();

        $i11 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeKeySize>;

        $i10 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeIvSize>;

        $r41 = staticinvoke <org.bouncycastle.jce.provider.BrokenPBE$Util: org.bouncycastle.crypto.CipherParameters makePBEParameters(org.bouncycastle.jce.provider.JCEPBEKey,java.security.spec.AlgorithmParameterSpec,int,int,java.lang.String,int,int)>($r38, r1, $i8, $i9, $r40, $i11, $i10);

        r44 = $r41;

        $i12 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int pbeIvSize>;

        if $i12 == 0 goto label10;

        $r42 = (org.bouncycastle.crypto.params.ParametersWithIV) $r41;

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r42;

        goto label10;

     label01:
        if r1 != null goto label02;

        $r35 = new org.bouncycastle.crypto.params.KeyParameter;

        $r36 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r35.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r36);

        r44 = $r35;

        goto label10;

     label02:
        $z1 = r1 instanceof javax.crypto.spec.IvParameterSpec;

        if $z1 == 0 goto label04;

        $i7 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength>;

        if $i7 == 0 goto label03;

        $r29 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r30 = new org.bouncycastle.crypto.params.KeyParameter;

        $r31 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r30.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r31);

        $r32 = (javax.crypto.spec.IvParameterSpec) r1;

        $r33 = virtualinvoke $r32.<javax.crypto.spec.IvParameterSpec: byte[] getIV()>();

        specialinvoke $r29.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r30, $r33);

        r44 = $r29;

        $r34 = (org.bouncycastle.crypto.params.ParametersWithIV) $r29;

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r34;

        goto label10;

     label03:
        $r27 = new org.bouncycastle.crypto.params.KeyParameter;

        $r28 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        specialinvoke $r27.<org.bouncycastle.crypto.params.KeyParameter: void <init>(byte[])>($r28);

        r44 = $r27;

        goto label10;

     label04:
        $z2 = r1 instanceof javax.crypto.spec.RC2ParameterSpec;

        if $z2 == 0 goto label06;

        r45 = (javax.crypto.spec.RC2ParameterSpec) r1;

        $r20 = new org.bouncycastle.crypto.params.RC2Parameters;

        $r21 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        $r22 = (javax.crypto.spec.RC2ParameterSpec) r1;

        $i5 = virtualinvoke $r22.<javax.crypto.spec.RC2ParameterSpec: int getEffectiveKeyBits()>();

        specialinvoke $r20.<org.bouncycastle.crypto.params.RC2Parameters: void <init>(byte[],int)>($r21, $i5);

        r44 = $r20;

        $r23 = virtualinvoke r45.<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>();

        if $r23 == null goto label05;

        $i6 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength>;

        if $i6 == 0 goto label05;

        $r24 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r25 = virtualinvoke r45.<javax.crypto.spec.RC2ParameterSpec: byte[] getIV()>();

        specialinvoke $r24.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r20, $r25);

        r44 = $r24;

        $r26 = (org.bouncycastle.crypto.params.ParametersWithIV) $r24;

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r26;

     label05:
        goto label10;

     label06:
        $z3 = r1 instanceof javax.crypto.spec.RC5ParameterSpec;

        if $z3 == 0 goto label09;

        r46 = (javax.crypto.spec.RC5ParameterSpec) r1;

        $r3 = new org.bouncycastle.crypto.params.RC5Parameters;

        $r4 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        $r5 = (javax.crypto.spec.RC5ParameterSpec) r1;

        $i0 = virtualinvoke $r5.<javax.crypto.spec.RC5ParameterSpec: int getRounds()>();

        specialinvoke $r3.<org.bouncycastle.crypto.params.RC5Parameters: void <init>(byte[],int)>($r4, $i0);

        r44 = $r3;

        $i1 = virtualinvoke r46.<javax.crypto.spec.RC5ParameterSpec: int getWordSize()>();

        if $i1 == 32 goto label07;

        $r19 = new java.lang.IllegalArgumentException;

        specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can only accept RC5 word size 32 (at the moment...)");

        throw $r19;

     label07:
        $r6 = virtualinvoke r46.<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>();

        if $r6 == null goto label08;

        $i4 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength>;

        if $i4 == 0 goto label08;

        $r16 = new org.bouncycastle.crypto.params.ParametersWithIV;

        $r17 = virtualinvoke r46.<javax.crypto.spec.RC5ParameterSpec: byte[] getIV()>();

        specialinvoke $r16.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>($r3, $r17);

        r44 = $r16;

        $r18 = (org.bouncycastle.crypto.params.ParametersWithIV) $r16;

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r18;

     label08:
        goto label10;

     label09:
        $r2 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("unknown parameter type.");

        throw $r2;

     label10:
        $i13 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength>;

        if $i13 == 0 goto label14;

        $z4 = r44 instanceof org.bouncycastle.crypto.params.ParametersWithIV;

        if $z4 != 0 goto label14;

        if r43 != null goto label11;

        $r15 = new java.security.SecureRandom;

        specialinvoke $r15.<java.security.SecureRandom: void <init>()>();

        r43 = $r15;

     label11:
        if i2 == 1 goto label12;

        if i2 != 3 goto label13;

     label12:
        $i3 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int ivLength>;

        $r14 = newarray (byte)[$i3];

        virtualinvoke r43.<java.security.SecureRandom: void nextBytes(byte[])>($r14);

        $r11 = new org.bouncycastle.crypto.params.ParametersWithIV;

        specialinvoke $r11.<org.bouncycastle.crypto.params.ParametersWithIV: void <init>(org.bouncycastle.crypto.CipherParameters,byte[])>(r44, $r14);

        r44 = $r11;

        $r12 = (org.bouncycastle.crypto.params.ParametersWithIV) $r11;

        r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.params.ParametersWithIV ivParam> = $r12;

        goto label14;

     label13:
        $r13 = new java.security.InvalidAlgorithmParameterException;

        specialinvoke $r13.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("no IV set when one expected");

        throw $r13;

     label14:
        tableswitch(i2)
        {
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label15;
            case 4: goto label16;
            default: goto label17;
        };

     label15:
        $r9 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r9.<org.bouncycastle.crypto.BufferedBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(1, r44);

        goto label18;

     label16:
        $r8 = r7.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r8.<org.bouncycastle.crypto.BufferedBlockCipher: void init(boolean,org.bouncycastle.crypto.CipherParameters)>(0, r44);

        goto label18;

     label17:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>("eeek!");

     label18:
        return;
    }

    protected void engineInit(int, java.security.Key, java.security.AlgorithmParameters, java.security.SecureRandom) throws java.security.InvalidKeyException, java.security.InvalidAlgorithmParameterException
    {
        java.security.InvalidAlgorithmParameterException $r5;
        java.security.SecureRandom r3;
        int i0, $i1, i2;
        java.lang.String $r8, $r10;
        java.security.spec.AlgorithmParameterSpec r14;
        java.lang.Class[] $r4, $r11;
        java.security.AlgorithmParameters r0;
        java.lang.Exception $r13;
        java.security.Key r2;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r1;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.Class $r12;

        r1 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        i0 := @parameter0: int;

        r2 := @parameter1: java.security.Key;

        r0 := @parameter2: java.security.AlgorithmParameters;

        r3 := @parameter3: java.security.SecureRandom;

        r14 = null;

        if r0 == null goto label7;

        i2 = 0;

     label1:
        $r4 = r1.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.lang.Class[] availableSpecs>;

        $i1 = lengthof $r4;

        if i2 == $i1 goto label6;

     label2:
        $r11 = r1.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.lang.Class[] availableSpecs>;

        $r12 = $r11[i2];

        r14 = virtualinvoke r0.<java.security.AlgorithmParameters: java.security.spec.AlgorithmParameterSpec getParameterSpec(java.lang.Class)>($r12);

     label3:
        goto label6;

     label4:
        $r13 := @caughtexception;

        goto label5;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        if r14 != null goto label7;

        $r5 = new java.security.InvalidAlgorithmParameterException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("can\'t handle parameter ");

        $r8 = virtualinvoke r0.<java.security.AlgorithmParameters: java.lang.String toString()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label7:
        r1.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: java.security.AlgorithmParameters engineParams> = r0;

        virtualinvoke r1.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r2, r14, r3);

        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected void engineInit(int, java.security.Key, java.security.SecureRandom) throws java.security.InvalidKeyException
    {
        java.security.Key r1;
        java.security.SecureRandom r2;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        int i0;
        java.lang.String $r5;
        java.lang.IllegalArgumentException $r4;
        java.security.InvalidAlgorithmParameterException $r3;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        i0 := @parameter0: int;

        r1 := @parameter1: java.security.Key;

        r2 := @parameter2: java.security.SecureRandom;

     label1:
        virtualinvoke r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: void engineInit(int,java.security.Key,java.security.spec.AlgorithmParameterSpec,java.security.SecureRandom)>(i0, r1, null, r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = virtualinvoke $r3.<java.security.InvalidAlgorithmParameterException: java.lang.String getMessage()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r4;

     label4:
        return;

        catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
    }

    protected byte[] engineUpdate(byte[], int, int)
    {
        byte[] r2, r4;
        org.bouncycastle.crypto.BufferedBlockCipher $r1, $r3, $r5;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        int i0, $i1, i2;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r2 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        $r1 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i1 = virtualinvoke $r1.<org.bouncycastle.crypto.BufferedBlockCipher: int getUpdateOutputSize(int)>(i0);

        if $i1 <= 0 goto label1;

        r4 = newarray (byte)[$i1];

        $r5 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r5.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r2, i2, i0, r4, 0);

        return r4;

     label1:
        $r3 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r2, i2, i0, null, 0);

        return null;
    }

    protected int engineUpdate(byte[], int, int, byte[], int)
    {
        byte[] r1, r2;
        org.bouncycastle.crypto.BufferedBlockCipher $r3;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        int i0, i1, i2, $i3;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: byte[];

        i2 := @parameter4: int;

        $r3 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i3 = virtualinvoke $r3.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r1, i0, i1, r2, i2);

        return $i3;
    }

    protected byte[] engineDoFinal(byte[], int, int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] r1, r3, r11;
        org.bouncycastle.crypto.InvalidCipherTextException $r5;
        org.bouncycastle.crypto.DataLengthException $r8;
        int i0, $i1, $i2, i3, $i4, i5;
        java.lang.String $r7, $r10;
        javax.crypto.IllegalBlockSizeException $r9;
        org.bouncycastle.crypto.BufferedBlockCipher $r2, $r4;
        javax.crypto.BadPaddingException $r6;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r3 := @parameter0: byte[];

        i3 := @parameter1: int;

        i0 := @parameter2: int;

        i5 = 0;

        $i1 = virtualinvoke r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: int engineGetOutputSize(int)>(i0);

        r1 = newarray (byte)[$i1];

        if i0 == 0 goto label1;

        $r4 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        i5 = virtualinvoke $r4.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r3, i3, i0, r1, 0);

     label1:
        $r2 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i2 = virtualinvoke $r2.<org.bouncycastle.crypto.BufferedBlockCipher: int doFinal(byte[],int)>(r1, i5);

        $i4 = i5 + $i2;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        $r9 = new javax.crypto.IllegalBlockSizeException;

        $r10 = virtualinvoke $r8.<org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke $r9.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $r5 := @caughtexception;

        $r6 = new javax.crypto.BadPaddingException;

        $r7 = virtualinvoke $r5.<org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r6.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label5:
        r11 = newarray (byte)[$i4];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r11, 0, $i4);

        return r11;

        catch org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
        catch org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label4;
    }

    protected int engineDoFinal(byte[], int, int, byte[], int) throws javax.crypto.IllegalBlockSizeException, javax.crypto.BadPaddingException
    {
        byte[] r1, r3;
        org.bouncycastle.crypto.InvalidCipherTextException $r5;
        org.bouncycastle.crypto.DataLengthException $r8;
        int i0, i1, $i2, $i3, $i4, i5, i6;
        java.lang.String $r7, $r10;
        javax.crypto.IllegalBlockSizeException $r9;
        org.bouncycastle.crypto.BufferedBlockCipher $r2, $r4;
        javax.crypto.BadPaddingException $r6;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r3 := @parameter0: byte[];

        i5 := @parameter1: int;

        i0 := @parameter2: int;

        r1 := @parameter3: byte[];

        i1 := @parameter4: int;

        i6 = 0;

        if i0 == 0 goto label1;

        $r4 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        i6 = virtualinvoke $r4.<org.bouncycastle.crypto.BufferedBlockCipher: int processBytes(byte[],int,int,byte[],int)>(r3, i5, i0, r1, i1);

     label1:
        $r2 = r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: org.bouncycastle.crypto.BufferedBlockCipher cipher>;

        $i2 = i1 + i6;

        $i3 = virtualinvoke $r2.<org.bouncycastle.crypto.BufferedBlockCipher: int doFinal(byte[],int)>(r1, $i2);

        $i4 = i6 + $i3;

     label2:
        return $i4;

     label3:
        $r8 := @caughtexception;

        $r9 = new javax.crypto.IllegalBlockSizeException;

        $r10 = virtualinvoke $r8.<org.bouncycastle.crypto.DataLengthException: java.lang.String getMessage()>();

        specialinvoke $r9.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r10);

        throw $r9;

     label4:
        $r5 := @caughtexception;

        $r6 = new javax.crypto.BadPaddingException;

        $r7 = virtualinvoke $r5.<org.bouncycastle.crypto.InvalidCipherTextException: java.lang.String getMessage()>();

        specialinvoke $r6.<javax.crypto.BadPaddingException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch org.bouncycastle.crypto.DataLengthException from label1 to label2 with label3;
        catch org.bouncycastle.crypto.InvalidCipherTextException from label1 to label2 with label4;
    }

    protected byte[] engineWrap(java.security.Key) throws javax.crypto.IllegalBlockSizeException, java.security.InvalidKeyException
    {
        byte[] $r1, $r3;
        javax.crypto.IllegalBlockSizeException $r6;
        java.security.Key r0;
        javax.crypto.BadPaddingException $r5;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r2;
        int $i0;
        java.security.InvalidKeyException $r4;
        java.lang.String $r7;

        r2 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r0 := @parameter0: java.security.Key;

        $r1 = interfaceinvoke r0.<java.security.Key: byte[] getEncoded()>();

        if $r1 != null goto label1;

        $r4 = new java.security.InvalidKeyException;

        specialinvoke $r4.<java.security.InvalidKeyException: void <init>(java.lang.String)>("Cannot wrap key, null encoding.");

        throw $r4;

     label1:
        $i0 = lengthof $r1;

        $r3 = virtualinvoke r2.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: byte[] engineDoFinal(byte[],int,int)>($r1, 0, $i0);

     label2:
        return $r3;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.crypto.IllegalBlockSizeException;

        $r7 = virtualinvoke $r5.<javax.crypto.BadPaddingException: java.lang.String getMessage()>();

        specialinvoke $r6.<javax.crypto.IllegalBlockSizeException: void <init>(java.lang.String)>($r7);

        throw $r6;

        catch javax.crypto.BadPaddingException from label1 to label2 with label3;
    }

    protected java.security.Key engineUnwrap(byte[], java.lang.String, int) throws java.security.InvalidKeyException
    {
        byte[] r1, $r2;
        javax.crypto.spec.SecretKeySpec $r14;
        javax.crypto.IllegalBlockSizeException $r36;
        java.security.spec.X509EncodedKeySpec $r12;
        java.security.KeyFactory $r4;
        org.bouncycastle.jce.provider.BrokenJCEBlockCipher r0;
        java.security.PrivateKey $r11;
        java.security.NoSuchAlgorithmException $r22;
        java.security.InvalidKeyException $r5, $r16, $r23, $r30, $r37, $r40;
        java.lang.StringBuilder $r6, $r7, $r8, $r17, $r18, $r20, $r24, $r25, $r27, $r31, $r32, $r34;
        java.security.spec.InvalidKeySpecException $r15;
        int $i0, i1;
        java.lang.String r3, $r9, $r19, $r21, $r26, $r28, $r33, $r35, $r38, $r41;
        java.security.spec.PKCS8EncodedKeySpec $r10;
        java.security.PublicKey $r13;
        javax.crypto.BadPaddingException $r39;
        java.security.NoSuchProviderException $r29;

        r0 := @this: org.bouncycastle.jce.provider.BrokenJCEBlockCipher;

        r1 := @parameter0: byte[];

        r3 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

     label01:
        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<org.bouncycastle.jce.provider.BrokenJCEBlockCipher: byte[] engineDoFinal(byte[],int,int)>(r1, 0, $i0);

     label02:
        goto label05;

     label03:
        $r39 := @caughtexception;

        $r40 = new java.security.InvalidKeyException;

        $r41 = virtualinvoke $r39.<javax.crypto.BadPaddingException: java.lang.String getMessage()>();

        specialinvoke $r40.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r41);

        throw $r40;

     label04:
        $r36 := @caughtexception;

        $r37 = new java.security.InvalidKeyException;

        $r38 = virtualinvoke $r36.<javax.crypto.IllegalBlockSizeException: java.lang.String getMessage()>();

        specialinvoke $r37.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r38);

        throw $r37;

     label05:
        if i1 != 3 goto label06;

        $r14 = new javax.crypto.spec.SecretKeySpec;

        specialinvoke $r14.<javax.crypto.spec.SecretKeySpec: void <init>(byte[],java.lang.String)>($r2, r3);

        return $r14;

     label06:
        $r4 = staticinvoke <java.security.KeyFactory: java.security.KeyFactory getInstance(java.lang.String,java.lang.String)>(r3, "BC");

        if i1 != 1 goto label08;

        $r12 = new java.security.spec.X509EncodedKeySpec;

        specialinvoke $r12.<java.security.spec.X509EncodedKeySpec: void <init>(byte[])>($r2);

        $r13 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PublicKey generatePublic(java.security.spec.KeySpec)>($r12);

     label07:
        return $r13;

     label08:
        if i1 != 2 goto label10;

        $r10 = new java.security.spec.PKCS8EncodedKeySpec;

        specialinvoke $r10.<java.security.spec.PKCS8EncodedKeySpec: void <init>(byte[])>($r2);

        $r11 = virtualinvoke $r4.<java.security.KeyFactory: java.security.PrivateKey generatePrivate(java.security.spec.KeySpec)>($r10);

     label09:
        return $r11;

     label10:
        goto label14;

     label11:
        $r29 := @caughtexception;

        $r30 = new java.security.InvalidKeyException;

        $r31 = new java.lang.StringBuilder;

        specialinvoke $r31.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown key type ");

        $r33 = virtualinvoke $r29.<java.security.NoSuchProviderException: java.lang.String getMessage()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r30.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r35);

        throw $r30;

     label12:
        $r22 := @caughtexception;

        $r23 = new java.security.InvalidKeyException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown key type ");

        $r26 = virtualinvoke $r22.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r28);

        throw $r23;

     label13:
        $r15 := @caughtexception;

        $r16 = new java.security.InvalidKeyException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown key type ");

        $r19 = virtualinvoke $r15.<java.security.spec.InvalidKeySpecException: java.lang.String getMessage()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r16.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r21);

        throw $r16;

     label14:
        $r5 = new java.security.InvalidKeyException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown key type ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.security.InvalidKeyException: void <init>(java.lang.String)>($r9);

        throw $r5;

        catch javax.crypto.BadPaddingException from label01 to label02 with label03;
        catch javax.crypto.IllegalBlockSizeException from label01 to label02 with label04;
        catch java.security.NoSuchProviderException from label06 to label07 with label11;
        catch java.security.NoSuchProviderException from label08 to label09 with label11;
        catch java.security.NoSuchAlgorithmException from label06 to label07 with label12;
        catch java.security.NoSuchAlgorithmException from label08 to label09 with label12;
        catch java.security.spec.InvalidKeySpecException from label06 to label07 with label13;
        catch java.security.spec.InvalidKeySpecException from label08 to label09 with label13;
    }
}
