class facebook4j.internal.json.UserJSONImpl extends java.lang.Object implements facebook4j.User, java.lang.Comparable, java.io.Serializable
{
    private static final long serialVersionUID;
    private java.lang.String id;
    private java.lang.String name;
    private java.lang.String firstName;
    private java.lang.String middleName;
    private java.lang.String lastName;
    private java.lang.String gender;
    private java.util.Locale locale;
    private java.util.List languages;
    private java.net.URL link;
    private java.lang.String username;
    private java.lang.String thirdPartyId;
    private java.lang.Boolean installed;
    private java.lang.Double timezone;
    private java.util.Date updatedTime;
    private java.lang.Boolean verified;
    private java.lang.String bio;
    private java.lang.String birthday;
    private facebook4j.Cover cover;
    private java.util.List education;
    private java.lang.String email;
    private facebook4j.IdNameEntity hometown;
    private java.util.List interestedIn;
    private facebook4j.IdNameEntity location;
    private java.lang.String political;
    private java.util.List favoriteAthletes;
    private java.util.List favoriteTeams;
    private facebook4j.Picture picture;
    private java.lang.String quotes;
    private java.lang.String relationshipStatus;
    private java.lang.String religion;
    private facebook4j.IdNameEntity significantOther;
    private facebook4j.User$VideoUploadLimits videoUploadLimits;
    private java.net.URL website;
    private java.util.List work;

    void <init>(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.conf.Configuration r1;
        facebook4j.internal.org.json.JSONObject $r3;
        facebook4j.internal.http.HttpResponse r2;
        boolean $z0, $z1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        r2 := @parameter0: facebook4j.internal.http.HttpResponse;

        r1 := @parameter1: facebook4j.conf.Configuration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = interfaceinvoke r1.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label1:
        $r3 = virtualinvoke r2.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        specialinvoke r0.<facebook4j.internal.json.UserJSONImpl: void init(facebook4j.internal.org.json.JSONObject)>($r3);

        $z1 = interfaceinvoke r1.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z1 == 0 goto label2;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>(r0, $r3);

     label2:
        return;
    }

    void <init>(facebook4j.internal.org.json.JSONObject) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.internal.org.json.JSONObject r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        r1 := @parameter0: facebook4j.internal.org.json.JSONObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        specialinvoke r0.<facebook4j.internal.json.UserJSONImpl: void init(facebook4j.internal.org.json.JSONObject)>(r1);

        return;
    }

    private void init(facebook4j.internal.org.json.JSONObject) throws facebook4j.FacebookException
    {
        facebook4j.internal.org.json.JSONObject r1, $r30, $r31, $r33, $r38, $r44, $r49, $r50, $r56, $r62, $r63, $r69;
        facebook4j.internal.json.IdNameEntityJSONImpl $r34, $r42, $r47, $r51, $r57, $r67;
        facebook4j.FacebookException $r74;
        java.lang.StringBuilder $r75, $r77, $r78, $r80;
        java.lang.Double $r13;
        java.util.ArrayList $r27, $r41, $r46, $r53, $r59, $r66;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r10, $r11, $r16, $r17, $r19, $r21, $r35, $r55, $r70, $r76, $r79, $r81, r82, r83, $r84, $r85, $r86;
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.internal.json.UserJSONImpl$EducationJSONImpl $r60;
        facebook4j.internal.org.json.JSONArray $r26, $r40, $r45, $r52, $r58, $r65;
        java.net.URL $r9, $r24, $r37;
        java.util.Date $r14;
        facebook4j.internal.json.UserJSONImpl$WorkJSONImpl $r28;
        java.util.Locale $r72;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13;
        java.util.List $r8, $r18, $r20, $r22, $r23, $r25, $r29, $r43, $r48, $r54, $r61, $r68;
        facebook4j.internal.json.PictureJSONImpl $r36, $r39;
        java.lang.String[] $r71;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12;
        java.lang.Boolean $r12, $r15;
        facebook4j.internal.json.UserJSONImpl$VideoUploadLimitsJSONImpl $r32;
        facebook4j.internal.org.json.JSONException $r73;
        facebook4j.internal.json.CoverJSONImpl $r64;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        r1 := @parameter0: facebook4j.internal.org.json.JSONObject;

     label01:
        $r2 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("id", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String id> = $r2;

        $r3 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("name", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String name> = $r3;

        $r4 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("first_name", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String firstName> = $r4;

        $r5 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("middle_name", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String middleName> = $r5;

        $r6 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("last_name", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String lastName> = $r6;

        $r7 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("gender", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String gender> = $r7;

        $z0 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("locale");

        if $z0 != 0 goto label02;

        $r70 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("locale", r1);

        $r71 = virtualinvoke $r70.<java.lang.String: java.lang.String[] split(java.lang.String)>("_");

        r82 = $r71[0];

        r83 = $r71[1];

        $r72 = new java.util.Locale;

        specialinvoke $r72.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>(r82, r83);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.Locale locale> = $r72;

     label02:
        $z1 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("languages");

        if $z1 != 0 goto label05;

        $r65 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("languages");

        $i6 = virtualinvoke $r65.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r66 = new java.util.ArrayList;

        specialinvoke $r66.<java.util.ArrayList: void <init>(int)>($i6);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List languages> = $r66;

        i7 = 0;

     label03:
        if i7 >= $i6 goto label04;

        $r68 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List languages>;

        $r67 = new facebook4j.internal.json.IdNameEntityJSONImpl;

        $r69 = virtualinvoke $r65.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i7);

        specialinvoke $r67.<facebook4j.internal.json.IdNameEntityJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r69);

        interfaceinvoke $r68.<java.util.List: boolean add(java.lang.Object)>($r67);

        i7 = i7 + 1;

        goto label03;

     label04:
        goto label06;

     label05:
        $r8 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List languages> = $r8;

     label06:
        $r9 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.net.URL getURL(java.lang.String,facebook4j.internal.org.json.JSONObject)>("link", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.net.URL link> = $r9;

        $r10 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("username", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String username> = $r10;

        $r11 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("third_party_id", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String thirdPartyId> = $r11;

        $r12 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.Boolean getBoolean(java.lang.String,facebook4j.internal.org.json.JSONObject)>("installed", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.Boolean installed> = $r12;

        $r13 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.Double getDouble(java.lang.String,facebook4j.internal.org.json.JSONObject)>("timezone", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.Double timezone> = $r13;

        $r14 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.util.Date getISO8601Datetime(java.lang.String,facebook4j.internal.org.json.JSONObject)>("updated_time", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.Date updatedTime> = $r14;

        $r15 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.Boolean getBoolean(java.lang.String,facebook4j.internal.org.json.JSONObject)>("verified", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.Boolean verified> = $r15;

        $r16 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("bio", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String bio> = $r16;

        $r17 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("birthday", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String birthday> = $r17;

        $z2 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("cover");

        if $z2 != 0 goto label07;

        $r63 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("cover");

        $r64 = new facebook4j.internal.json.CoverJSONImpl;

        specialinvoke $r64.<facebook4j.internal.json.CoverJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r63);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.Cover cover> = $r64;

     label07:
        $z3 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("education");

        if $z3 != 0 goto label10;

        $r58 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("education");

        $i5 = virtualinvoke $r58.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r59 = new java.util.ArrayList;

        specialinvoke $r59.<java.util.ArrayList: void <init>(int)>($i5);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List education> = $r59;

        i8 = 0;

     label08:
        if i8 >= $i5 goto label09;

        $r61 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List education>;

        $r60 = new facebook4j.internal.json.UserJSONImpl$EducationJSONImpl;

        $r62 = virtualinvoke $r58.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i8);

        specialinvoke $r60.<facebook4j.internal.json.UserJSONImpl$EducationJSONImpl: void <init>(facebook4j.internal.json.UserJSONImpl,facebook4j.internal.org.json.JSONObject)>(r0, $r62);

        interfaceinvoke $r61.<java.util.List: boolean add(java.lang.Object)>($r60);

        i8 = i8 + 1;

        goto label08;

     label09:
        goto label11;

     label10:
        $r18 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List education> = $r18;

     label11:
        $r19 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("email", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String email> = $r19;

        $z4 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("hometown");

        if $z4 != 0 goto label12;

        $r56 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("hometown");

        $r57 = new facebook4j.internal.json.IdNameEntityJSONImpl;

        specialinvoke $r57.<facebook4j.internal.json.IdNameEntityJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r56);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity hometown> = $r57;

     label12:
        $z5 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("interestedIn");

        if $z5 != 0 goto label15;

        $r52 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("interested_in");

        $i4 = virtualinvoke $r52.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r53 = new java.util.ArrayList;

        specialinvoke $r53.<java.util.ArrayList: void <init>(int)>($i4);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List interestedIn> = $r53;

        i9 = 0;

     label13:
        if i9 >= $i4 goto label14;

        $r54 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List interestedIn>;

        $r55 = virtualinvoke $r52.<facebook4j.internal.org.json.JSONArray: java.lang.String getString(int)>(i9);

        interfaceinvoke $r54.<java.util.List: boolean add(java.lang.Object)>($r55);

        i9 = i9 + 1;

        goto label13;

     label14:
        goto label16;

     label15:
        $r20 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List interestedIn> = $r20;

     label16:
        $z6 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("location");

        if $z6 != 0 goto label17;

        $r50 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("location");

        $r51 = new facebook4j.internal.json.IdNameEntityJSONImpl;

        specialinvoke $r51.<facebook4j.internal.json.IdNameEntityJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r50);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity location> = $r51;

     label17:
        $r21 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("political", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String political> = $r21;

        $z7 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("favorite_athletes");

        if $z7 != 0 goto label20;

        $r45 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("favorite_athletes");

        $i2 = virtualinvoke $r45.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r46 = new java.util.ArrayList;

        specialinvoke $r46.<java.util.ArrayList: void <init>(int)>($i2);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteAthletes> = $r46;

        i10 = 0;

     label18:
        $i3 = virtualinvoke $r45.<facebook4j.internal.org.json.JSONArray: int length()>();

        if i10 >= $i3 goto label19;

        $r48 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteAthletes>;

        $r47 = new facebook4j.internal.json.IdNameEntityJSONImpl;

        $r49 = virtualinvoke $r45.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i10);

        specialinvoke $r47.<facebook4j.internal.json.IdNameEntityJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r49);

        interfaceinvoke $r48.<java.util.List: boolean add(java.lang.Object)>($r47);

        i10 = i10 + 1;

        goto label18;

     label19:
        goto label21;

     label20:
        $r22 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteAthletes> = $r22;

     label21:
        $z8 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("favorite_teams");

        if $z8 != 0 goto label24;

        $r40 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("favorite_teams");

        $i1 = virtualinvoke $r40.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r41 = new java.util.ArrayList;

        specialinvoke $r41.<java.util.ArrayList: void <init>(int)>($i1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteTeams> = $r41;

        i11 = 0;

     label22:
        if i11 >= $i1 goto label23;

        $r43 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteTeams>;

        $r42 = new facebook4j.internal.json.IdNameEntityJSONImpl;

        $r44 = virtualinvoke $r40.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i11);

        specialinvoke $r42.<facebook4j.internal.json.IdNameEntityJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r44);

        interfaceinvoke $r43.<java.util.List: boolean add(java.lang.Object)>($r42);

        i11 = i11 + 1;

        goto label22;

     label23:
        goto label25;

     label24:
        $r23 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteTeams> = $r23;

     label25:
        $z9 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("picture");

        if $z9 != 0 goto label27;

        $r35 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("picture", r1);

        $z12 = virtualinvoke $r35.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z12 == 0 goto label26;

        $r38 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("picture");

        $r39 = new facebook4j.internal.json.PictureJSONImpl;

        specialinvoke $r39.<facebook4j.internal.json.PictureJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r38);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.Picture picture> = $r39;

        goto label27;

     label26:
        $r36 = new facebook4j.internal.json.PictureJSONImpl;

        $r37 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.net.URL getURL(java.lang.String,facebook4j.internal.org.json.JSONObject)>("picture", r1);

        specialinvoke $r36.<facebook4j.internal.json.PictureJSONImpl: void <init>(java.net.URL)>($r37);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.Picture picture> = $r36;

     label27:
        $r84 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("quotes", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String quotes> = $r84;

        $r85 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("relationship_status", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String relationshipStatus> = $r85;

        $r86 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.lang.String getRawString(java.lang.String,facebook4j.internal.org.json.JSONObject)>("religion", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String religion> = $r86;

        $z13 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("significant_other");

        if $z13 != 0 goto label28;

        $r33 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("significant_other");

        $r34 = new facebook4j.internal.json.IdNameEntityJSONImpl;

        specialinvoke $r34.<facebook4j.internal.json.IdNameEntityJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r33);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity significantOther> = $r34;

     label28:
        $z10 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("video_upload_limits");

        if $z10 != 0 goto label29;

        $r31 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONObject getJSONObject(java.lang.String)>("video_upload_limits");

        $r32 = new facebook4j.internal.json.UserJSONImpl$VideoUploadLimitsJSONImpl;

        specialinvoke $r32.<facebook4j.internal.json.UserJSONImpl$VideoUploadLimitsJSONImpl: void <init>(facebook4j.internal.json.UserJSONImpl,facebook4j.internal.org.json.JSONObject)>(r0, $r31);

        r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.User$VideoUploadLimits videoUploadLimits> = $r32;

     label29:
        $r24 = staticinvoke <facebook4j.internal.util.z_F4JInternalParseUtil: java.net.URL getURL(java.lang.String,facebook4j.internal.org.json.JSONObject)>("website", r1);

        r0.<facebook4j.internal.json.UserJSONImpl: java.net.URL website> = $r24;

        $z11 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: boolean isNull(java.lang.String)>("work");

        if $z11 != 0 goto label32;

        $r26 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("work");

        $i0 = virtualinvoke $r26.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>(int)>($i0);

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List work> = $r27;

        i12 = 0;

     label30:
        if i12 >= $i0 goto label31;

        $r29 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List work>;

        $r28 = new facebook4j.internal.json.UserJSONImpl$WorkJSONImpl;

        $r30 = virtualinvoke $r26.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i12);

        specialinvoke $r28.<facebook4j.internal.json.UserJSONImpl$WorkJSONImpl: void <init>(facebook4j.internal.json.UserJSONImpl,facebook4j.internal.org.json.JSONObject)>(r0, $r30);

        interfaceinvoke $r29.<java.util.List: boolean add(java.lang.Object)>($r28);

        i12 = i12 + 1;

        goto label30;

     label31:
        goto label33;

     label32:
        $r25 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        r0.<facebook4j.internal.json.UserJSONImpl: java.util.List work> = $r25;

     label33:
        goto label35;

     label34:
        $r73 := @caughtexception;

        $r74 = new facebook4j.FacebookException;

        $r75 = new java.lang.StringBuilder;

        specialinvoke $r75.<java.lang.StringBuilder: void <init>()>();

        $r76 = virtualinvoke $r73.<facebook4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r79 = virtualinvoke r1.<facebook4j.internal.org.json.JSONObject: java.lang.String toString()>();

        $r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r74.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable)>($r81, $r73);

        throw $r74;

     label35:
        return;

        catch facebook4j.internal.org.json.JSONException from label01 to label33 with label34;
    }

    public java.lang.String getId()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String id>;

        return $r1;
    }

    public java.lang.String getName()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getFirstName()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String firstName>;

        return $r1;
    }

    public java.lang.String getMiddleName()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String middleName>;

        return $r1;
    }

    public java.lang.String getLastName()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String lastName>;

        return $r1;
    }

    public java.lang.String getGender()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String gender>;

        return $r1;
    }

    public java.util.Locale getLocale()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.Locale $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.Locale locale>;

        return $r1;
    }

    public java.util.List getLanguages()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.List $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List languages>;

        return $r1;
    }

    public java.net.URL getLink()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.net.URL $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.net.URL link>;

        return $r1;
    }

    public java.lang.String getUsername()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String username>;

        return $r1;
    }

    public java.lang.String getThirdPartyId()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String thirdPartyId>;

        return $r1;
    }

    public java.lang.Boolean isInstalled()
    {
        java.lang.Boolean $r1;
        facebook4j.internal.json.UserJSONImpl r0;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.Boolean installed>;

        return $r1;
    }

    public java.lang.Double getTimezone()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.Double $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.Double timezone>;

        return $r1;
    }

    public java.util.Date getUpdatedTime()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.Date $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.Date updatedTime>;

        return $r1;
    }

    public java.lang.Boolean isVerified()
    {
        java.lang.Boolean $r1;
        facebook4j.internal.json.UserJSONImpl r0;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.Boolean verified>;

        return $r1;
    }

    public java.lang.String getBio()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String bio>;

        return $r1;
    }

    public java.lang.String getBirthday()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String birthday>;

        return $r1;
    }

    public facebook4j.Cover getCover()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.Cover $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.Cover cover>;

        return $r1;
    }

    public java.util.List getEducation()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.List $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List education>;

        return $r1;
    }

    public java.lang.String getEmail()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String email>;

        return $r1;
    }

    public facebook4j.IdNameEntity getHometown()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.IdNameEntity $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity hometown>;

        return $r1;
    }

    public java.util.List getInterestedIn()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.List $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List interestedIn>;

        return $r1;
    }

    public facebook4j.IdNameEntity getLocation()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.IdNameEntity $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity location>;

        return $r1;
    }

    public java.lang.String getPolitical()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String political>;

        return $r1;
    }

    public java.util.List getFavoriteAthletes()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.List $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteAthletes>;

        return $r1;
    }

    public java.util.List getFavoriteTeams()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.List $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteTeams>;

        return $r1;
    }

    public facebook4j.Picture getPicture()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.Picture $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.Picture picture>;

        return $r1;
    }

    public java.lang.String getQuotes()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String quotes>;

        return $r1;
    }

    public java.lang.String getRelationshipStatus()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String relationshipStatus>;

        return $r1;
    }

    public java.lang.String getReligion()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.lang.String $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String religion>;

        return $r1;
    }

    public facebook4j.IdNameEntity getSignificantOther()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.IdNameEntity $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity significantOther>;

        return $r1;
    }

    public facebook4j.User$VideoUploadLimits getVideoUploadLimits()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        facebook4j.User$VideoUploadLimits $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: facebook4j.User$VideoUploadLimits videoUploadLimits>;

        return $r1;
    }

    public java.net.URL getWebsite()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.net.URL $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.net.URL website>;

        return $r1;
    }

    public java.util.List getWork()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        java.util.List $r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.util.List work>;

        return $r1;
    }

    static facebook4j.ResponseList createUserList(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.UserJSONImpl $r7;
        facebook4j.conf.Configuration r0;
        facebook4j.internal.http.HttpResponse r1;
        facebook4j.internal.json.ResponseListImpl $r4;
        facebook4j.User[] $r5;
        facebook4j.internal.org.json.JSONObject $r2, $r6;
        facebook4j.internal.org.json.JSONException $r8;
        facebook4j.FacebookException $r9;
        int $i0, i1;
        facebook4j.internal.org.json.JSONArray $r3;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: facebook4j.internal.http.HttpResponse;

        r0 := @parameter1: facebook4j.conf.Configuration;

     label1:
        $z0 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label2:
        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = virtualinvoke $r2.<facebook4j.internal.org.json.JSONObject: facebook4j.internal.org.json.JSONArray getJSONArray(java.lang.String)>("data");

        $i0 = virtualinvoke $r3.<facebook4j.internal.org.json.JSONArray: int length()>();

        $r4 = new facebook4j.internal.json.ResponseListImpl;

        $r5 = newarray (facebook4j.User)[0];

        specialinvoke $r4.<facebook4j.internal.json.ResponseListImpl: void <init>(int,facebook4j.internal.org.json.JSONObject,java.lang.Object[])>($i0, $r2, $r5);

        i1 = 0;

     label3:
        if i1 >= $i0 goto label5;

        $r6 = virtualinvoke $r3.<facebook4j.internal.org.json.JSONArray: facebook4j.internal.org.json.JSONObject getJSONObject(int)>(i1);

        $r7 = new facebook4j.internal.json.UserJSONImpl;

        specialinvoke $r7.<facebook4j.internal.json.UserJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r6);

        $z2 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z2 == 0 goto label4;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r7, $r6);

     label4:
        interfaceinvoke $r4.<facebook4j.ResponseList: boolean add(java.lang.Object)>($r7);

        i1 = i1 + 1;

        goto label3;

     label5:
        $z1 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z1 == 0 goto label6;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r4, $r3);

     label6:
        return $r4;

     label7:
        $r8 := @caughtexception;

        $r9 = new facebook4j.FacebookException;

        specialinvoke $r9.<facebook4j.FacebookException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch facebook4j.internal.org.json.JSONException from label1 to label6 with label7;
    }

    static java.util.List createUserArray(facebook4j.internal.http.HttpResponse, facebook4j.conf.Configuration) throws facebook4j.FacebookException
    {
        facebook4j.internal.json.UserJSONImpl $r7;
        java.util.Iterator $r4;
        facebook4j.conf.Configuration r0;
        facebook4j.internal.http.HttpResponse r1;
        java.util.ArrayList $r3;
        facebook4j.internal.org.json.JSONObject $r2, $r9;
        facebook4j.internal.org.json.JSONException $r10;
        facebook4j.FacebookException $r11;
        java.lang.Object $r5, $r8;
        java.lang.String r6;
        boolean $z0, $z1, $z2;

        r1 := @parameter0: facebook4j.internal.http.HttpResponse;

        r0 := @parameter1: facebook4j.conf.Configuration;

     label1:
        $z0 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z0 == 0 goto label2;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: void clearThreadLocalMap()>();

     label2:
        $r2 = virtualinvoke r1.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject asJSONObject()>();

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke $r2.<facebook4j.internal.org.json.JSONObject: java.util.Iterator keys()>();

     label3:
        $z2 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = new facebook4j.internal.json.UserJSONImpl;

        $r8 = virtualinvoke $r2.<facebook4j.internal.org.json.JSONObject: java.lang.Object get(java.lang.String)>(r6);

        $r9 = (facebook4j.internal.org.json.JSONObject) $r8;

        specialinvoke $r7.<facebook4j.internal.json.UserJSONImpl: void <init>(facebook4j.internal.org.json.JSONObject)>($r9);

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r7);

        goto label3;

     label4:
        $z1 = interfaceinvoke r0.<facebook4j.conf.Configuration: boolean isJSONStoreEnabled()>();

        if $z1 == 0 goto label5;

        staticinvoke <facebook4j.internal.json.DataObjectFactoryUtil: java.lang.Object registerJSONObject(java.lang.Object,java.lang.Object)>($r3, $r2);

     label5:
        return $r3;

     label6:
        $r10 := @caughtexception;

        $r11 = new facebook4j.FacebookException;

        specialinvoke $r11.<facebook4j.FacebookException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

        catch facebook4j.internal.org.json.JSONException from label1 to label5 with label6;
    }

    public int compareTo(facebook4j.User)
    {
        facebook4j.User r1;
        facebook4j.internal.json.UserJSONImpl r0;
        int $i0;
        java.lang.String $r2, $r3;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        r1 := @parameter0: facebook4j.User;

        $r2 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String id>;

        $r3 = interfaceinvoke r1.<facebook4j.User: java.lang.String getId()>();

        $i0 = virtualinvoke $r2.<java.lang.String: int compareTo(java.lang.String)>($r3);

        return $i0;
    }

    public int hashCode()
    {
        facebook4j.internal.json.UserJSONImpl r0;
        int $i0, $i1;
        java.lang.String $r1, $r2;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        $r1 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String id>;

        if $r1 != null goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $r2 = r0.<facebook4j.internal.json.UserJSONImpl: java.lang.String id>;

        $i1 = virtualinvoke $r2.<java.lang.String: int hashCode()>();

     label2:
        $i0 = 31 + $i1;

        return $i0;
    }

    public boolean equals(java.lang.Object)
    {
        facebook4j.User $r2;
        facebook4j.internal.json.UserJSONImpl r1;
        java.lang.Object r0;
        java.lang.String $r3, $r4;
        boolean $z0, $z1, $z2;

        r1 := @this: facebook4j.internal.json.UserJSONImpl;

        r0 := @parameter0: java.lang.Object;

        if null != r0 goto label1;

        return 0;

     label1:
        if r1 != r0 goto label2;

        return 1;

     label2:
        $z0 = r0 instanceof facebook4j.User;

        if $z0 == 0 goto label3;

        $r2 = (facebook4j.User) r0;

        $r3 = interfaceinvoke $r2.<facebook4j.User: java.lang.String getId()>();

        $r4 = r1.<facebook4j.internal.json.UserJSONImpl: java.lang.String id>;

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8, $r10, $r11, $r13, $r14, $r16, $r17, $r19, $r20, $r22, $r23, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r37, $r38, $r40, $r41, $r43, $r44, $r46, $r47, $r49, $r50, $r52, $r53, $r55, $r56, $r58, $r59, $r61, $r62, $r64, $r65, $r67, $r68, $r70, $r71, $r73, $r74, $r76, $r77, $r79, $r80, $r82, $r83, $r85, $r86, $r88, $r89, $r91, $r92, $r94, $r95, $r97, $r98, $r100, $r101;
        java.lang.Double $r36;
        java.lang.String $r3, $r6, $r9, $r12, $r15, $r18, $r30, $r33, $r45, $r48, $r57, $r69, $r81, $r84, $r87, $r102;
        facebook4j.internal.json.UserJSONImpl r2;
        java.net.URL $r27, $r96;
        java.util.Date $r39;
        java.util.Locale $r21;
        facebook4j.Picture $r78;
        java.util.List $r24, $r54, $r63, $r72, $r75, $r99;
        java.lang.Boolean $r42;
        facebook4j.IdNameEntity $r60, $r66, $r90;
        facebook4j.Cover $r51;
        facebook4j.User$VideoUploadLimits $r93;

        r2 := @this: facebook4j.internal.json.UserJSONImpl;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UserJSONImpl [id=");

        $r3 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String id>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=");

        $r6 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String name>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", firstName=");

        $r9 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String firstName>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", middleName=");

        $r12 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String middleName>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lastName=");

        $r15 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String lastName>;

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", gender=");

        $r18 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String gender>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", locale=");

        $r21 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.Locale locale>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", languages=");

        $r24 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.List languages>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", link=");

        $r27 = r2.<facebook4j.internal.json.UserJSONImpl: java.net.URL link>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", username=");

        $r30 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String username>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", thirdPartyId=");

        $r33 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String thirdPartyId>;

        $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", timezone=");

        $r36 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.Double timezone>;

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r36);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", updatedTime=");

        $r39 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.Date updatedTime>;

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", verified=");

        $r42 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.Boolean verified>;

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", bio=");

        $r45 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String bio>;

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", birthday=");

        $r48 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String birthday>;

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", cover=");

        $r51 = r2.<facebook4j.internal.json.UserJSONImpl: facebook4j.Cover cover>;

        $r52 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r51);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", education=");

        $r54 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.List education>;

        $r55 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", email=");

        $r57 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String email>;

        $r58 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", hometown=");

        $r60 = r2.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity hometown>;

        $r61 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r60);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", interestedIn=");

        $r63 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.List interestedIn>;

        $r64 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r63);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", location=");

        $r66 = r2.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity location>;

        $r67 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r66);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", political=");

        $r69 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String political>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", favoriteAthletes=");

        $r72 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteAthletes>;

        $r73 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", favoriteTeams=");

        $r75 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.List favoriteTeams>;

        $r76 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r75);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", picture=");

        $r78 = r2.<facebook4j.internal.json.UserJSONImpl: facebook4j.Picture picture>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", quotes=");

        $r81 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String quotes>;

        $r82 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", relationshipStatus=");

        $r84 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String relationshipStatus>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", religion=");

        $r87 = r2.<facebook4j.internal.json.UserJSONImpl: java.lang.String religion>;

        $r88 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87);

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", significantOther=");

        $r90 = r2.<facebook4j.internal.json.UserJSONImpl: facebook4j.IdNameEntity significantOther>;

        $r91 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r90);

        $r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", videoUploadLimits=");

        $r93 = r2.<facebook4j.internal.json.UserJSONImpl: facebook4j.User$VideoUploadLimits videoUploadLimits>;

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", website=");

        $r96 = r2.<facebook4j.internal.json.UserJSONImpl: java.net.URL website>;

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r96);

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", work=");

        $r99 = r2.<facebook4j.internal.json.UserJSONImpl: java.util.List work>;

        $r100 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r99);

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r102;
    }

    public volatile int compareTo(java.lang.Object)
    {
        facebook4j.User $r2;
        facebook4j.internal.json.UserJSONImpl r0;
        int $i0;
        java.lang.Object r1;

        r0 := @this: facebook4j.internal.json.UserJSONImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = (facebook4j.User) r1;

        $i0 = virtualinvoke r0.<facebook4j.internal.json.UserJSONImpl: int compareTo(facebook4j.User)>($r2);

        return $i0;
    }

    public static void <clinit>()
    {
        <facebook4j.internal.json.UserJSONImpl: long serialVersionUID> = 3839339196757459703L;

        return;
    }
}
