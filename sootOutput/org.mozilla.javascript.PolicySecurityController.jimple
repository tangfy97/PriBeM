public class org.mozilla.javascript.PolicySecurityController extends org.mozilla.javascript.SecurityController
{
    private static final byte[] secureCallerImplBytecode;
    private static final java.util.Map callers;
    static java.lang.Class class$org$mozilla$javascript$PolicySecurityController$SecureCaller;

    public void <init>()
    {
        org.mozilla.javascript.PolicySecurityController r0;

        r0 := @this: org.mozilla.javascript.PolicySecurityController;

        specialinvoke r0.<org.mozilla.javascript.SecurityController: void <init>()>();

        return;
    }

    public org.mozilla.javascript.GeneratedClassLoader createClassLoader(java.lang.ClassLoader, java.lang.Object)
    {
        org.mozilla.javascript.PolicySecurityController$1 $r0;
        org.mozilla.javascript.PolicySecurityController r1;
        java.lang.Object r3, $r4;
        java.lang.ClassLoader r2;
        org.mozilla.javascript.PolicySecurityController$Loader $r5;

        r1 := @this: org.mozilla.javascript.PolicySecurityController;

        r2 := @parameter0: java.lang.ClassLoader;

        r3 := @parameter1: java.lang.Object;

        $r0 = new org.mozilla.javascript.PolicySecurityController$1;

        specialinvoke $r0.<org.mozilla.javascript.PolicySecurityController$1: void <init>(org.mozilla.javascript.PolicySecurityController,java.lang.ClassLoader,java.lang.Object)>(r1, r2, r3);

        $r4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        $r5 = (org.mozilla.javascript.PolicySecurityController$Loader) $r4;

        return $r5;
    }

    public java.lang.Object getDynamicSecurityDomain(java.lang.Object)
    {
        java.lang.Object r0;
        org.mozilla.javascript.PolicySecurityController r1;

        r1 := @this: org.mozilla.javascript.PolicySecurityController;

        r0 := @parameter0: java.lang.Object;

        return r0;
    }

    public java.lang.Object callWithDomain(java.lang.Object, org.mozilla.javascript.Context, org.mozilla.javascript.Callable, org.mozilla.javascript.Scriptable, org.mozilla.javascript.Scriptable, java.lang.Object[])
    {
        java.lang.Throwable $r22, $r25, $r26;
        java.lang.Object[] r15;
        org.mozilla.javascript.Callable r12;
        org.mozilla.javascript.PolicySecurityController$SecureCaller r29;
        org.mozilla.javascript.PolicySecurityController$2 $r0;
        org.mozilla.javascript.PolicySecurityController$3 $r17;
        java.util.Map $r7, $r8, $r21, r27, r28;
        java.lang.ref.SoftReference r11;
        java.util.WeakHashMap $r20;
        java.security.PrivilegedActionException $r23;
        org.mozilla.javascript.PolicySecurityController r1;
        org.mozilla.javascript.Context r2;
        java.lang.reflect.UndeclaredThrowableException $r24;
        org.mozilla.javascript.Scriptable r13, r14;
        java.lang.Object $r3, r5, $r9, $r10, $r16, $r18, $r19;
        java.lang.ClassLoader r4;
        java.security.CodeSource r6;

        r1 := @this: org.mozilla.javascript.PolicySecurityController;

        r5 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.mozilla.javascript.Context;

        r12 := @parameter2: org.mozilla.javascript.Callable;

        r13 := @parameter3: org.mozilla.javascript.Scriptable;

        r14 := @parameter4: org.mozilla.javascript.Scriptable;

        r15 := @parameter5: java.lang.Object[];

        $r0 = new org.mozilla.javascript.PolicySecurityController$2;

        specialinvoke $r0.<org.mozilla.javascript.PolicySecurityController$2: void <init>(org.mozilla.javascript.PolicySecurityController,org.mozilla.javascript.Context)>(r1, r2);

        $r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

        r4 = (java.lang.ClassLoader) $r3;

        r6 = (java.security.CodeSource) r5;

        $r7 = <org.mozilla.javascript.PolicySecurityController: java.util.Map callers>;

        entermonitor $r7;

     label01:
        $r8 = <org.mozilla.javascript.PolicySecurityController: java.util.Map callers>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r6);

        r27 = (java.util.Map) $r9;

        if r27 != null goto label02;

        $r20 = new java.util.WeakHashMap;

        specialinvoke $r20.<java.util.WeakHashMap: void <init>()>();

        r27 = $r20;

        $r21 = <org.mozilla.javascript.PolicySecurityController: java.util.Map callers>;

        interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r20);

     label02:
        exitmonitor $r7;

     label03:
        goto label06;

     label04:
        $r26 := @caughtexception;

        exitmonitor $r7;

     label05:
        throw $r26;

     label06:
        r28 = r27;

        entermonitor r27;

     label07:
        $r10 = interfaceinvoke r27.<java.util.Map: java.lang.Object get(java.lang.Object)>(r4);

        r11 = (java.lang.ref.SoftReference) $r10;

        if r11 == null goto label08;

        $r19 = virtualinvoke r11.<java.lang.ref.SoftReference: java.lang.Object get()>();

        r29 = (org.mozilla.javascript.PolicySecurityController$SecureCaller) $r19;

        goto label09;

     label08:
        r29 = null;

     label09:
        if r29 != null goto label13;

     label10:
        $r17 = new org.mozilla.javascript.PolicySecurityController$3;

        specialinvoke $r17.<org.mozilla.javascript.PolicySecurityController$3: void <init>(org.mozilla.javascript.PolicySecurityController,java.lang.ClassLoader,java.security.CodeSource)>(r1, r4, r6);

        $r18 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>($r17);

        r29 = (org.mozilla.javascript.PolicySecurityController$SecureCaller) $r18;

     label11:
        goto label13;

     label12:
        $r23 := @caughtexception;

        $r24 = new java.lang.reflect.UndeclaredThrowableException;

        $r25 = virtualinvoke $r23.<java.security.PrivilegedActionException: java.lang.Throwable getCause()>();

        specialinvoke $r24.<java.lang.reflect.UndeclaredThrowableException: void <init>(java.lang.Throwable)>($r25);

        throw $r24;

     label13:
        exitmonitor r28;

     label14:
        goto label17;

     label15:
        $r22 := @caughtexception;

        exitmonitor r28;

     label16:
        throw $r22;

     label17:
        $r16 = virtualinvoke r29.<org.mozilla.javascript.PolicySecurityController$SecureCaller: java.lang.Object call(org.mozilla.javascript.Callable,org.mozilla.javascript.Context,org.mozilla.javascript.Scriptable,org.mozilla.javascript.Scriptable,java.lang.Object[])>(r12, r2, r13, r14, r15);

        return $r16;

        catch java.lang.Throwable from label01 to label03 with label04;
        catch java.lang.Throwable from label04 to label05 with label04;
        catch java.security.PrivilegedActionException from label10 to label11 with label12;
        catch java.lang.Throwable from label07 to label14 with label15;
        catch java.lang.Throwable from label15 to label16 with label15;
    }

    private static byte[] loadBytecode()
    {
        byte[] $r15;
        java.lang.StringBuffer $r3, $r4, $r5, $r7, $r8, $r9, $r11, $r12, $r13;
        int i0;
        java.lang.String $r1, $r6, $r10, $r14;
        org.mozilla.classfile.ClassFileWriter $r2;
        java.lang.Class $r0, $r16;

        $r0 = <org.mozilla.javascript.PolicySecurityController: java.lang.Class class$org$mozilla$javascript$PolicySecurityController$SecureCaller>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.mozilla.javascript.PolicySecurityController: java.lang.Class class$(java.lang.String)>("org.mozilla.javascript.PolicySecurityController$SecureCaller");

        <org.mozilla.javascript.PolicySecurityController: java.lang.Class class$org$mozilla$javascript$PolicySecurityController$SecureCaller> = $r16;

        goto label2;

     label1:
        $r16 = <org.mozilla.javascript.PolicySecurityController: java.lang.Class class$org$mozilla$javascript$PolicySecurityController$SecureCaller>;

     label2:
        $r1 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $r2 = new org.mozilla.classfile.ClassFileWriter;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Impl");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<org.mozilla.classfile.ClassFileWriter: void <init>(java.lang.String,java.lang.String,java.lang.String)>($r6, $r1, "<generated>");

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(Lorg/mozilla/javascript/Callable;");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<org.mozilla.classfile.ClassFileWriter: void startMethod(java.lang.String,java.lang.String,short)>("call", $r10, 17);

        i0 = 1;

     label3:
        if i0 >= 6 goto label4;

        virtualinvoke $r2.<org.mozilla.classfile.ClassFileWriter: void addALoad(int)>(i0);

        i0 = i0 + 1;

        goto label3;

     label4:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Lorg/mozilla/javascript/Context;Lorg/mozilla/javascript/Scriptable;Lorg/mozilla/javascript/Scriptable;[Ljava/lang/Object;)Ljava/lang/Object;");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<org.mozilla.classfile.ClassFileWriter: void addInvoke(int,java.lang.String,java.lang.String,java.lang.String)>(185, "org/mozilla/javascript/Callable", "call", $r14);

        virtualinvoke $r2.<org.mozilla.classfile.ClassFileWriter: void add(int)>(176);

        virtualinvoke $r2.<org.mozilla.classfile.ClassFileWriter: void stopMethod(short)>(6);

        $r15 = virtualinvoke $r2.<org.mozilla.classfile.ClassFileWriter: byte[] toByteArray()>();

        return $r15;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static byte[] access$000()
    {
        byte[] $r0;

        $r0 = <org.mozilla.javascript.PolicySecurityController: byte[] secureCallerImplBytecode>;

        return $r0;
    }

    static void <clinit>()
    {
        byte[] $r0;
        java.util.WeakHashMap $r1;

        $r0 = staticinvoke <org.mozilla.javascript.PolicySecurityController: byte[] loadBytecode()>();

        <org.mozilla.javascript.PolicySecurityController: byte[] secureCallerImplBytecode> = $r0;

        $r1 = new java.util.WeakHashMap;

        specialinvoke $r1.<java.util.WeakHashMap: void <init>()>();

        <org.mozilla.javascript.PolicySecurityController: java.util.Map callers> = $r1;

        return;
    }
}
