public final class org.apache.lucene.util.TwoPhaseCommitTool extends java.lang.Object
{

    public void <init>()
    {
        org.apache.lucene.util.TwoPhaseCommitTool r0;

        r0 := @this: org.apache.lucene.util.TwoPhaseCommitTool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static transient void rollback(org.apache.lucene.util.TwoPhaseCommit[])
    {
        java.lang.Throwable $r2;
        org.apache.lucene.util.TwoPhaseCommit[] r0;
        int i0, i1;
        org.apache.lucene.util.TwoPhaseCommit r1;

        r0 := @parameter0: org.apache.lucene.util.TwoPhaseCommit[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label6;

        r1 = r0[i1];

        if r1 == null goto label5;

     label2:
        interfaceinvoke r1.<org.apache.lucene.util.TwoPhaseCommit: void rollback()>();

     label3:
        goto label5;

     label4:
        $r2 := @caughtexception;

     label5:
        i1 = i1 + 1;

        goto label1;

     label6:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
    }

    public static transient void execute(org.apache.lucene.util.TwoPhaseCommit[]) throws org.apache.lucene.util.TwoPhaseCommitTool$PrepareCommitFailException, org.apache.lucene.util.TwoPhaseCommitTool$CommitFailException
    {
        java.lang.Throwable $r1, $r3;
        org.apache.lucene.util.TwoPhaseCommit[] r0;
        org.apache.lucene.util.TwoPhaseCommitTool$CommitFailException $r2;
        int $i0, $i1, i2, i3;
        org.apache.lucene.util.TwoPhaseCommit r5;
        org.apache.lucene.util.TwoPhaseCommitTool$PrepareCommitFailException $r4;

        r0 := @parameter0: org.apache.lucene.util.TwoPhaseCommit[];

        r5 = null;

     label01:
        i2 = 0;

     label02:
        $i0 = lengthof r0;

        if i2 >= $i0 goto label04;

        r5 = r0[i2];

        if r5 == null goto label03;

        interfaceinvoke r5.<org.apache.lucene.util.TwoPhaseCommit: void prepareCommit()>();

     label03:
        i2 = i2 + 1;

        goto label02;

     label04:
        goto label06;

     label05:
        $r3 := @caughtexception;

        staticinvoke <org.apache.lucene.util.TwoPhaseCommitTool: void rollback(org.apache.lucene.util.TwoPhaseCommit[])>(r0);

        $r4 = new org.apache.lucene.util.TwoPhaseCommitTool$PrepareCommitFailException;

        specialinvoke $r4.<org.apache.lucene.util.TwoPhaseCommitTool$PrepareCommitFailException: void <init>(java.lang.Throwable,org.apache.lucene.util.TwoPhaseCommit)>($r3, r5);

        throw $r4;

     label06:
        i3 = 0;

     label07:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label09;

        r5 = r0[i3];

        if r5 == null goto label08;

        interfaceinvoke r5.<org.apache.lucene.util.TwoPhaseCommit: void commit()>();

     label08:
        i3 = i3 + 1;

        goto label07;

     label09:
        goto label11;

     label10:
        $r1 := @caughtexception;

        staticinvoke <org.apache.lucene.util.TwoPhaseCommitTool: void rollback(org.apache.lucene.util.TwoPhaseCommit[])>(r0);

        $r2 = new org.apache.lucene.util.TwoPhaseCommitTool$CommitFailException;

        specialinvoke $r2.<org.apache.lucene.util.TwoPhaseCommitTool$CommitFailException: void <init>(java.lang.Throwable,org.apache.lucene.util.TwoPhaseCommit)>($r1, r5);

        throw $r2;

     label11:
        return;

        catch java.lang.Throwable from label01 to label04 with label05;
        catch java.lang.Throwable from label06 to label09 with label10;
    }
}
