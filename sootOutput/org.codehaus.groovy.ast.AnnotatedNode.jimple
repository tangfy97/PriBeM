public class org.codehaus.groovy.ast.AnnotatedNode extends org.codehaus.groovy.ast.ASTNode
{
    private java.util.Map annotations;
    private java.util.Map annotationClasses;
    private boolean synthetic;
    org.codehaus.groovy.ast.ClassNode declaringClass;

    public void <init>()
    {
        org.codehaus.groovy.ast.AnnotatedNode r0;
        java.util.Map $r1, $r2;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        specialinvoke r0.<org.codehaus.groovy.ast.ASTNode: void <init>()>();

        $r1 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations> = $r1;

        $r2 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotationClasses> = $r2;

        return;
    }

    public java.util.Map getAnnotations()
    {
        org.codehaus.groovy.ast.AnnotatedNode r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        $r1 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        return $r1;
    }

    public org.codehaus.groovy.ast.AnnotationNode getAnnotations(java.lang.String)
    {
        org.codehaus.groovy.ast.AnnotationNode $r6;
        java.util.Map $r1, $r2, $r4;
        java.lang.Object $r5;
        org.codehaus.groovy.ast.AnnotatedNode r0;
        java.lang.String r3;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        r3 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        $r1 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        if $r2 != $r1 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = (org.codehaus.groovy.ast.AnnotationNode) $r5;

     label2:
        return $r6;
    }

    public org.codehaus.groovy.ast.ClassNode getAnnotationClass(java.lang.String)
    {
        org.codehaus.groovy.ast.ClassNode $r6;
        java.util.Map $r1, $r2, $r4;
        java.lang.Object $r5;
        org.codehaus.groovy.ast.AnnotatedNode r0;
        java.lang.String r3;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        r3 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotationClasses>;

        $r1 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        if $r2 != $r1 goto label1;

        $r6 = null;

        goto label2;

     label1:
        $r4 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotationClasses>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        $r6 = (org.codehaus.groovy.ast.ClassNode) $r5;

     label2:
        return $r6;
    }

    public void addAnnotation(java.lang.String, org.codehaus.groovy.ast.AnnotationNode)
    {
        org.codehaus.groovy.ast.AnnotationNode r2, r7;
        org.codehaus.groovy.ast.ClassNode $r4;
        org.codehaus.groovy.ast.AnnotatedNode r0;
        java.util.ArrayList $r8;
        java.util.List r11;
        java.util.Map $r3, $r5, $r9, $r10;
        java.lang.Object $r6;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.groovy.ast.AnnotationNode;

        specialinvoke r0.<org.codehaus.groovy.ast.AnnotatedNode: void checkInit()>();

        $r3 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotationClasses>;

        $r4 = virtualinvoke r2.<org.codehaus.groovy.ast.AnnotationNode: org.codehaus.groovy.ast.ClassNode getClassNode()>();

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r5 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (org.codehaus.groovy.ast.AnnotationNode) $r6;

        if r7 != null goto label1;

        $r10 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        goto label4;

     label1:
        $z0 = r7 instanceof java.util.List;

        if $z0 == 0 goto label2;

        r11 = (java.util.List) r7;

        goto label3;

     label2:
        $r8 = new java.util.ArrayList;

        specialinvoke $r8.<java.util.ArrayList: void <init>()>();

        r11 = $r8;

        interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>(r7);

        $r9 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r8);

     label3:
        interfaceinvoke r11.<java.util.List: boolean add(java.lang.Object)>(r2);

     label4:
        return;
    }

    private void checkInit()
    {
        java.util.Map $r1, $r2, $r3, $r4;
        java.util.HashMap $r5, $r6;
        org.codehaus.groovy.ast.AnnotatedNode r0;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        $r2 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations>;

        $r1 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        if $r2 != $r1 goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotations> = $r6;

     label1:
        $r4 = r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotationClasses>;

        $r3 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        if $r4 != $r3 goto label2;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.groovy.ast.AnnotatedNode: java.util.Map annotationClasses> = $r5;

     label2:
        return;
    }

    public void addAnnotations(java.util.List)
    {
        java.util.Iterator $r1;
        org.codehaus.groovy.ast.AnnotationNode r3;
        org.codehaus.groovy.ast.ClassNode $r5;
        org.codehaus.groovy.ast.AnnotatedNode r4;
        java.util.List r0;
        java.lang.Object $r2;
        java.lang.String $r6;
        boolean $z0;

        r4 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.codehaus.groovy.ast.AnnotationNode) $r2;

        $r5 = virtualinvoke r3.<org.codehaus.groovy.ast.AnnotationNode: org.codehaus.groovy.ast.ClassNode getClassNode()>();

        $r6 = virtualinvoke $r5.<org.codehaus.groovy.ast.ClassNode: java.lang.String getName()>();

        virtualinvoke r4.<org.codehaus.groovy.ast.AnnotatedNode: void addAnnotation(java.lang.String,org.codehaus.groovy.ast.AnnotationNode)>($r6, r3);

        goto label1;

     label2:
        return;
    }

    public boolean isSynthetic()
    {
        org.codehaus.groovy.ast.AnnotatedNode r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        $z0 = r0.<org.codehaus.groovy.ast.AnnotatedNode: boolean synthetic>;

        return $z0;
    }

    public void setSynthetic(boolean)
    {
        org.codehaus.groovy.ast.AnnotatedNode r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        z0 := @parameter0: boolean;

        r0.<org.codehaus.groovy.ast.AnnotatedNode: boolean synthetic> = z0;

        return;
    }

    public org.codehaus.groovy.ast.ClassNode getDeclaringClass()
    {
        org.codehaus.groovy.ast.AnnotatedNode r0;
        org.codehaus.groovy.ast.ClassNode $r1;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        $r1 = r0.<org.codehaus.groovy.ast.AnnotatedNode: org.codehaus.groovy.ast.ClassNode declaringClass>;

        return $r1;
    }

    public void setDeclaringClass(org.codehaus.groovy.ast.ClassNode)
    {
        org.codehaus.groovy.ast.AnnotatedNode r0;
        org.codehaus.groovy.ast.ClassNode r1;

        r0 := @this: org.codehaus.groovy.ast.AnnotatedNode;

        r1 := @parameter0: org.codehaus.groovy.ast.ClassNode;

        r0.<org.codehaus.groovy.ast.AnnotatedNode: org.codehaus.groovy.ast.ClassNode declaringClass> = r1;

        return;
    }
}
