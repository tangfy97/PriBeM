public class org.codehaus.groovy.tools.groovydoc.FileOutputTool extends java.lang.Object implements org.codehaus.groovy.tools.groovydoc.OutputTool
{

    public void <init>()
    {
        org.codehaus.groovy.tools.groovydoc.FileOutputTool r0;

        r0 := @this: org.codehaus.groovy.tools.groovydoc.FileOutputTool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void makeOutputArea(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.groovydoc.FileOutputTool r2;
        java.io.File $r0;

        r2 := @this: org.codehaus.groovy.tools.groovydoc.FileOutputTool;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        virtualinvoke $r0.<java.io.File: boolean mkdirs()>();

        return;
    }

    public void writeToOutput(java.lang.String, java.lang.String) throws java.lang.Exception
    {
        java.lang.String r1, r3;
        org.codehaus.groovy.tools.groovydoc.FileOutputTool r4;
        java.io.File $r0, $r2;

        r4 := @this: org.codehaus.groovy.tools.groovydoc.FileOutputTool;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.io.File: java.io.File getParentFile()>();

        virtualinvoke $r2.<java.io.File: boolean mkdirs()>();

        staticinvoke <org.codehaus.groovy.runtime.DefaultGroovyMethods: void write(java.io.File,java.lang.String)>($r0, r3);

        return;
    }
}
