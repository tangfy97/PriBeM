public class org.bouncycastle.util.test.SimpleTestResult extends java.lang.Object implements org.bouncycastle.util.test.TestResult
{
    private static final java.lang.String SEPARATOR;
    private boolean success;
    private java.lang.String message;
    private java.lang.Throwable exception;

    public void <init>(boolean, java.lang.String)
    {
        org.bouncycastle.util.test.SimpleTestResult r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.bouncycastle.util.test.SimpleTestResult;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.util.test.SimpleTestResult: boolean success> = z0;

        r0.<org.bouncycastle.util.test.SimpleTestResult: java.lang.String message> = r1;

        return;
    }

    public void <init>(boolean, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        org.bouncycastle.util.test.SimpleTestResult r0;
        java.lang.String r1;
        boolean z0;

        r0 := @this: org.bouncycastle.util.test.SimpleTestResult;

        z0 := @parameter0: boolean;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.bouncycastle.util.test.SimpleTestResult: boolean success> = z0;

        r0.<org.bouncycastle.util.test.SimpleTestResult: java.lang.String message> = r1;

        r0.<org.bouncycastle.util.test.SimpleTestResult: java.lang.Throwable exception> = r2;

        return;
    }

    public static org.bouncycastle.util.test.TestResult successful(org.bouncycastle.util.test.Test, java.lang.String)
    {
        org.bouncycastle.util.test.SimpleTestResult $r0;
        org.bouncycastle.util.test.Test r2;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        java.lang.String $r3, r6, $r8;

        r2 := @parameter0: org.bouncycastle.util.test.Test;

        r6 := @parameter1: java.lang.String;

        $r0 = new org.bouncycastle.util.test.SimpleTestResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r2.<org.bouncycastle.util.test.Test: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.bouncycastle.util.test.SimpleTestResult: void <init>(boolean,java.lang.String)>(1, $r8);

        return $r0;
    }

    public static org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test, java.lang.String)
    {
        org.bouncycastle.util.test.SimpleTestResult $r0;
        org.bouncycastle.util.test.Test r2;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        java.lang.String $r3, r6, $r8;

        r2 := @parameter0: org.bouncycastle.util.test.Test;

        r6 := @parameter1: java.lang.String;

        $r0 = new org.bouncycastle.util.test.SimpleTestResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r2.<org.bouncycastle.util.test.Test: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.bouncycastle.util.test.SimpleTestResult: void <init>(boolean,java.lang.String)>(0, $r8);

        return $r0;
    }

    public static org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test, java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r9;
        org.bouncycastle.util.test.SimpleTestResult $r0;
        org.bouncycastle.util.test.Test r2;
        java.lang.StringBuilder $r1, $r4, $r5, $r7;
        java.lang.String $r3, r6, $r8;

        r2 := @parameter0: org.bouncycastle.util.test.Test;

        r6 := @parameter1: java.lang.String;

        r9 := @parameter2: java.lang.Throwable;

        $r0 = new org.bouncycastle.util.test.SimpleTestResult;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = interfaceinvoke r2.<org.bouncycastle.util.test.Test: java.lang.String getName()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<org.bouncycastle.util.test.SimpleTestResult: void <init>(boolean,java.lang.String,java.lang.Throwable)>(0, $r8, r9);

        return $r0;
    }

    public static org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test, java.lang.String, java.lang.Object, java.lang.Object)
    {
        org.bouncycastle.util.test.TestResult $r15;
        java.lang.String r2, $r4, $r9, $r14;
        org.bouncycastle.util.test.Test r0;
        java.lang.StringBuilder $r1, $r3, $r5, $r6, $r8, $r10, $r11, $r13;
        java.lang.Object r7, r12;

        r0 := @parameter0: org.bouncycastle.util.test.Test;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.Object;

        r12 := @parameter3: java.lang.Object;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = <org.bouncycastle.util.test.SimpleTestResult: java.lang.String SEPARATOR>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected: ");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r7);

        $r9 = <org.bouncycastle.util.test.SimpleTestResult: java.lang.String SEPARATOR>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Found   : ");

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = staticinvoke <org.bouncycastle.util.test.SimpleTestResult: org.bouncycastle.util.test.TestResult failed(org.bouncycastle.util.test.Test,java.lang.String)>(r0, $r14);

        return $r15;
    }

    public static java.lang.String failedMessage(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.StringBuffer $r0, $r2, $r5, $r6, $r9, $r10;
        java.lang.String r1, r3, $r4, r7, $r8, r11, $r12;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        r11 := @parameter3: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" failing ");

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r4 = <org.bouncycastle.util.test.SimpleTestResult: java.lang.String SEPARATOR>;

        $r5 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    expected: ");

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r8 = <org.bouncycastle.util.test.SimpleTestResult: java.lang.String SEPARATOR>;

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    got     : ");

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r11);

        $r12 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r12;
    }

    public boolean isSuccessful()
    {
        org.bouncycastle.util.test.SimpleTestResult r0;
        boolean $z0;

        r0 := @this: org.bouncycastle.util.test.SimpleTestResult;

        $z0 = r0.<org.bouncycastle.util.test.SimpleTestResult: boolean success>;

        return $z0;
    }

    public java.lang.String toString()
    {
        org.bouncycastle.util.test.SimpleTestResult r0;
        java.lang.String $r1;

        r0 := @this: org.bouncycastle.util.test.SimpleTestResult;

        $r1 = r0.<org.bouncycastle.util.test.SimpleTestResult: java.lang.String message>;

        return $r1;
    }

    public java.lang.Throwable getException()
    {
        java.lang.Throwable $r1;
        org.bouncycastle.util.test.SimpleTestResult r0;

        r0 := @this: org.bouncycastle.util.test.SimpleTestResult;

        $r1 = r0.<org.bouncycastle.util.test.SimpleTestResult: java.lang.Throwable exception>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <org.bouncycastle.util.test.SimpleTestResult: java.lang.String SEPARATOR> = $r0;

        return;
    }
}
