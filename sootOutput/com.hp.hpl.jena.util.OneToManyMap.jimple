public class com.hp.hpl.jena.util.OneToManyMap extends java.lang.Object implements java.util.Map
{
    private java.util.Map m_table;

    public void <init>()
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.util.OneToManyMap r0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table> = $r1;

        return;
    }

    public void <init>(com.hp.hpl.jena.util.OneToManyMap)
    {
        java.util.Iterator $r4, $r6;
        java.util.Set $r3;
        java.util.HashMap $r1;
        com.hp.hpl.jena.util.OneToManyMap r0, r2;
        java.lang.Object $r5, $r7;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r2 := @parameter0: com.hp.hpl.jena.util.OneToManyMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table> = $r1;

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.util.OneToManyMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = virtualinvoke r2.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>($r5);

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r0.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

        goto label2;

     label3:
        goto label1;

     label4:
        return;
    }

    public void clear()
    {
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.Map $r1;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        $r1 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        interfaceinvoke $r1.<java.util.Map: void clear()>();

        return;
    }

    public boolean containsKey(java.lang.Object)
    {
        java.util.Map $r2;
        java.lang.Object r1;
        com.hp.hpl.jena.util.OneToManyMap r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsValue(java.lang.Object)
    {
        java.util.Iterator $r3;
        java.util.Collection $r2;
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.List r5;
        java.util.Map $r1;
        java.lang.Object $r4, r6;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r6 := @parameter0: java.lang.Object;

        $r1 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Collection values()>();

        $r3 = interfaceinvoke $r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (java.util.List) $r4;

        $z1 = interfaceinvoke r5.<java.util.List: boolean contains(java.lang.Object)>(r6);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        goto label1;

     label3:
        return 0;
    }

    public boolean contains(java.lang.Object, java.lang.Object)
    {
        java.util.Iterator $r2;
        java.lang.Object r1, $r3, r4;
        com.hp.hpl.jena.util.OneToManyMap r0;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = virtualinvoke r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>(r1);

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z1 == 0 goto label1;

        return 1;

     label2:
        return 0;
    }

    public java.util.Set entrySet()
    {
        java.util.Iterator $r4;
        java.util.ListIterator $r9;
        com.hp.hpl.jena.util.OneToManyMap$Entry $r10;
        java.util.Set $r0, $r3;
        com.hp.hpl.jena.util.OneToManyMap r1;
        java.util.List r8;
        java.util.Map $r2, $r6;
        java.lang.Object $r5, $r7, $r11;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.util.OneToManyMap;

        $r0 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet()>();

        $r2 = r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        r8 = (java.util.List) $r7;

        $r9 = interfaceinvoke r8.<java.util.List: java.util.ListIterator listIterator()>();

     label2:
        $z1 = interfaceinvoke $r9.<java.util.ListIterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r10 = new com.hp.hpl.jena.util.OneToManyMap$Entry;

        $r11 = interfaceinvoke $r9.<java.util.ListIterator: java.lang.Object next()>();

        specialinvoke $r10.<com.hp.hpl.jena.util.OneToManyMap$Entry: void <init>(java.lang.Object,java.lang.Object,com.hp.hpl.jena.util.OneToManyMap$1)>($r5, $r11, null);

        interfaceinvoke $r0.<java.util.Set: boolean add(java.lang.Object)>($r10);

        goto label2;

     label3:
        goto label1;

     label4:
        return $r0;
    }

    public boolean equals(java.lang.Object)
    {
        java.util.Set $r2, $r4;
        com.hp.hpl.jena.util.OneToManyMap r1;
        java.util.Map $r3;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r1 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Map;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Set entrySet()>();

        $r3 = (java.util.Map) r0;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Set entrySet()>();

        $z1 = interfaceinvoke $r2.<java.util.Set: boolean equals(java.lang.Object)>($r4);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.util.List r4;
        java.util.Map $r2;
        java.lang.Object r1, $r3, $r5;
        com.hp.hpl.jena.util.OneToManyMap r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(0);

        return $r5;

     label1:
        return null;
    }

    public java.util.Iterator getAll(java.lang.Object)
    {
        com.hp.hpl.jena.util.iterator.NullIterator $r6;
        java.util.List r4;
        java.util.Iterator $r5;
        java.util.Map $r2;
        java.lang.Object r1, $r3;
        com.hp.hpl.jena.util.OneToManyMap r0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        $r5 = interfaceinvoke r4.<java.util.List: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r6 = new com.hp.hpl.jena.util.iterator.NullIterator;

        $r5 = $r6;

        specialinvoke $r6.<com.hp.hpl.jena.util.iterator.NullIterator: void <init>()>();

     label2:
        return $r5;
    }

    public int hashCode()
    {
        java.util.Map$Entry $r4;
        java.util.Iterator $r2;
        java.util.Set $r1;
        com.hp.hpl.jena.util.OneToManyMap r0;
        int $i0, i1;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        i1 = 0;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r4 = (java.util.Map$Entry) $r3;

        $i0 = interfaceinvoke $r4.<java.util.Map$Entry: int hashCode()>();

        i1 = i1 ^ $i0;

        goto label1;

     label2:
        return i1;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.Map $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        $r1 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        return $z0;
    }

    public java.util.Set keySet()
    {
        java.util.Set $r2;
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.Map $r1;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        $r1 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.ArrayList $r6;
        java.util.List r7;
        java.util.Map $r2, $r5;
        java.lang.Object r1, $r3, r4;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        r4 := @parameter1: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r7 = (java.util.List) $r3;

        if r7 != null goto label1;

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        r7 = $r6;

     label1:
        interfaceinvoke r7.<java.util.List: boolean add(java.lang.Object)>(r4);

        $r5 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r7);

        return null;
    }

    public void putAll(java.util.Map)
    {
        java.util.Iterator $r2, $r7;
        java.util.Set $r1;
        com.hp.hpl.jena.util.OneToManyMap r4, r6;
        java.util.Map r0;
        java.lang.Object $r3, $r5, $r8;
        boolean z0, $z1, $z2;

        r4 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r0 := @parameter0: java.util.Map;

        z0 = r0 instanceof com.hp.hpl.jena.util.OneToManyMap;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label6;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        if z0 == 0 goto label4;

        r6 = (com.hp.hpl.jena.util.OneToManyMap) r0;

        $r7 = virtualinvoke r6.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>($r3);

     label2:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke r4.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r8);

        goto label2;

     label3:
        goto label5;

     label4:
        $r5 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        virtualinvoke r4.<com.hp.hpl.jena.util.OneToManyMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r5);

     label5:
        goto label1;

     label6:
        return;
    }

    public java.lang.Object remove(java.lang.Object)
    {
        java.lang.Object r1;
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.Map $r2;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        return null;
    }

    public void remove(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.List r4;
        java.util.Map $r2, $r6;
        java.lang.Object r1, $r3, r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        r1 := @parameter0: java.lang.Object;

        r5 := @parameter1: java.lang.Object;

        $r2 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (java.util.List) $r3;

        if r4 == null goto label1;

        interfaceinvoke r4.<java.util.List: boolean remove(java.lang.Object)>(r5);

        $z0 = interfaceinvoke r4.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        interfaceinvoke $r6.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

     label1:
        return;
    }

    public int size()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.hp.hpl.jena.util.OneToManyMap r0;
        java.util.List $r7;
        java.util.Map $r1, $r4;
        int $i0, i1;
        java.lang.Object $r5, $r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.OneToManyMap;

        i1 = 0;

        $r1 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r6 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>($r5);

        $r7 = (java.util.List) $r6;

        $i0 = interfaceinvoke $r7.<java.util.List: int size()>();

        i1 = i1 + $i0;

        goto label1;

     label2:
        return i1;
    }

    public java.util.Collection values()
    {
        java.util.Iterator $r4;
        java.util.Collection $r8;
        java.util.Set $r0, $r3;
        com.hp.hpl.jena.util.OneToManyMap r1;
        java.util.Map $r2, $r5;
        java.lang.Object $r6, $r7;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.util.OneToManyMap;

        $r0 = staticinvoke <com.hp.hpl.jena.util.CollectionFactory: java.util.Set createHashedSet()>();

        $r2 = r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Map m_table>;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r8 = (java.util.Collection) $r7;

        interfaceinvoke $r0.<java.util.Set: boolean addAll(java.util.Collection)>($r8);

        goto label1;

     label2:
        return $r0;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r3, $r6;
        java.util.Set $r2;
        com.hp.hpl.jena.util.OneToManyMap r1;
        java.lang.StringBuffer $r0;
        java.lang.Object $r5, $r7;
        java.lang.String $r4, r8, r9;
        boolean $z0, $z1;

        r1 := @this: com.hp.hpl.jena.util.OneToManyMap;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("OneToManyMap{");

        r8 = "";

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r8);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("={");

        r9 = "";

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.util.OneToManyMap: java.util.Iterator getAll(java.lang.Object)>($r5);

     label2:
        $z1 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r9);

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        r9 = ",";

        goto label2;

     label3:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        r8 = ",";

        goto label1;

     label4:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("}");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
