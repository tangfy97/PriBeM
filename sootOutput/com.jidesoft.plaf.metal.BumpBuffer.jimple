class com.jidesoft.plaf.metal.BumpBuffer extends java.lang.Object
{
    static final int IMAGE_SIZE;
    static java.awt.Dimension imageSize;
    transient java.awt.Image image;
    java.awt.Color topColor;
    java.awt.Color shadowColor;
    java.awt.Color backColor;
    private java.awt.GraphicsConfiguration gc;

    public void <init>(java.awt.GraphicsConfiguration, java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color r2, r3, r4;
        java.awt.GraphicsConfiguration r1;
        com.jidesoft.plaf.metal.BumpBuffer r0;

        r0 := @this: com.jidesoft.plaf.metal.BumpBuffer;

        r1 := @parameter0: java.awt.GraphicsConfiguration;

        r2 := @parameter1: java.awt.Color;

        r3 := @parameter2: java.awt.Color;

        r4 := @parameter3: java.awt.Color;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.GraphicsConfiguration gc> = r1;

        r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color topColor> = r2;

        r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color shadowColor> = r3;

        r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor> = r4;

        specialinvoke r0.<com.jidesoft.plaf.metal.BumpBuffer: void createImage()>();

        specialinvoke r0.<com.jidesoft.plaf.metal.BumpBuffer: void fillBumpBuffer()>();

        return;
    }

    public boolean hasSameConfiguration(java.awt.GraphicsConfiguration, java.awt.Color, java.awt.Color, java.awt.Color)
    {
        java.awt.Color $r3, r4, $r5, r6, $r7, r8, $r9, $r10, $r11;
        boolean $z0, $z1, $z2, $z3;
        java.awt.GraphicsConfiguration $r1, r2, $r12;
        com.jidesoft.plaf.metal.BumpBuffer r0;

        r0 := @this: com.jidesoft.plaf.metal.BumpBuffer;

        r2 := @parameter0: java.awt.GraphicsConfiguration;

        r8 := @parameter1: java.awt.Color;

        r6 := @parameter2: java.awt.Color;

        r4 := @parameter3: java.awt.Color;

        $r1 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.GraphicsConfiguration gc>;

        if $r1 == null goto label01;

        $r12 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.GraphicsConfiguration gc>;

        $z3 = virtualinvoke $r12.<java.lang.Object: boolean equals(java.lang.Object)>(r2);

        if $z3 != 0 goto label02;

        return 0;

     label01:
        if r2 == null goto label02;

        return 0;

     label02:
        $r3 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor>;

        if $r3 == null goto label03;

        $r11 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor>;

        $z2 = virtualinvoke $r11.<java.awt.Color: boolean equals(java.lang.Object)>(r4);

        if $z2 != 0 goto label05;

        goto label04;

     label03:
        if r4 == null goto label05;

     label04:
        return 0;

     label05:
        $r5 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color shadowColor>;

        if $r5 == null goto label06;

        $r10 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color shadowColor>;

        $z1 = virtualinvoke $r10.<java.awt.Color: boolean equals(java.lang.Object)>(r6);

        if $z1 != 0 goto label08;

        goto label07;

     label06:
        if r6 == null goto label08;

     label07:
        return 0;

     label08:
        $r7 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color topColor>;

        if $r7 == null goto label09;

        $r9 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color topColor>;

        $z0 = virtualinvoke $r9.<java.awt.Color: boolean equals(java.lang.Object)>(r8);

        if $z0 != 0 goto label11;

        goto label10;

     label09:
        if r8 == null goto label11;

     label10:
        return 0;

     label11:
        return 1;
    }

    public java.awt.Image getImage()
    {
        java.awt.Image $r1;
        com.jidesoft.plaf.metal.BumpBuffer r0;

        r0 := @this: com.jidesoft.plaf.metal.BumpBuffer;

        $r1 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Image image>;

        return $r1;
    }

    public java.awt.Dimension getImageSize()
    {
        java.awt.Dimension $r0;
        com.jidesoft.plaf.metal.BumpBuffer r1;

        r1 := @this: com.jidesoft.plaf.metal.BumpBuffer;

        $r0 = <com.jidesoft.plaf.metal.BumpBuffer: java.awt.Dimension imageSize>;

        return $r0;
    }

    private void fillBumpBuffer()
    {
        java.awt.Color $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14, i15;
        java.awt.Image $r1;
        com.jidesoft.plaf.metal.BumpBuffer r0;
        java.awt.Graphics $r2;

        r0 := @this: com.jidesoft.plaf.metal.BumpBuffer;

        $r1 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Image image>;

        $r2 = virtualinvoke $r1.<java.awt.Image: java.awt.Graphics getGraphics()>();

        $r3 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor>;

        virtualinvoke $r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        virtualinvoke $r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, 64, 64);

        $r4 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color topColor>;

        virtualinvoke $r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

        i12 = 0;

     label1:
        if i12 >= 64 goto label4;

        i13 = 0;

     label2:
        if i13 >= 64 goto label3;

        virtualinvoke $r2.<java.awt.Graphics: void drawLine(int,int,int,int)>(i12, i13, i12, i13);

        $i11 = i12 + 2;

        $i10 = i13 + 2;

        $i9 = i12 + 2;

        $i8 = i13 + 2;

        virtualinvoke $r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i11, $i10, $i9, $i8);

        i13 = i13 + 4;

        goto label2;

     label3:
        i12 = i12 + 4;

        goto label1;

     label4:
        $r5 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color shadowColor>;

        virtualinvoke $r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

        i14 = 0;

     label5:
        if i14 >= 64 goto label8;

        i15 = 0;

     label6:
        if i15 >= 64 goto label7;

        $i3 = i14 + 1;

        $i2 = i15 + 1;

        $i1 = i14 + 1;

        $i0 = i15 + 1;

        virtualinvoke $r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i3, $i2, $i1, $i0);

        $i7 = i14 + 3;

        $i6 = i15 + 3;

        $i5 = i14 + 3;

        $i4 = i15 + 3;

        virtualinvoke $r2.<java.awt.Graphics: void drawLine(int,int,int,int)>($i7, $i6, $i5, $i4);

        i15 = i15 + 4;

        goto label6;

     label7:
        i14 = i14 + 4;

        goto label5;

     label8:
        virtualinvoke $r2.<java.awt.Graphics: void dispose()>();

        return;
    }

    private void createImage()
    {
        java.awt.Color $r3, $r4, $r5, $r7, $r8, $r10, $r11;
        byte $b3, $b4;
        int[] $r2;
        int $i0, $i1, $i2;
        java.awt.image.IndexColorModel $r6;
        java.awt.GraphicsConfiguration $r1, $r12;
        java.awt.image.BufferedImage $r9, $r13;
        com.jidesoft.plaf.metal.BumpBuffer r0;

        r0 := @this: com.jidesoft.plaf.metal.BumpBuffer;

        $r1 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.GraphicsConfiguration gc>;

        if $r1 == null goto label3;

        $r12 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.GraphicsConfiguration gc>;

        $r11 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor>;

        $r10 = <com.jidesoft.plaf.metal.MetalBumps: java.awt.Color ALPHA>;

        if $r11 == $r10 goto label1;

        $b3 = 1;

        goto label2;

     label1:
        $b3 = 2;

     label2:
        $r13 = virtualinvoke $r12.<java.awt.GraphicsConfiguration: java.awt.image.BufferedImage createCompatibleImage(int,int,int)>(64, 64, $b3);

        r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Image image> = $r13;

        goto label6;

     label3:
        $r2 = newarray (int)[3];

        $r3 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor>;

        $i0 = virtualinvoke $r3.<java.awt.Color: int getRGB()>();

        $r2[0] = $i0;

        $r4 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color topColor>;

        $i1 = virtualinvoke $r4.<java.awt.Color: int getRGB()>();

        $r2[1] = $i1;

        $r5 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color shadowColor>;

        $i2 = virtualinvoke $r5.<java.awt.Color: int getRGB()>();

        $r2[2] = $i2;

        $r6 = new java.awt.image.IndexColorModel;

        $r8 = r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Color backColor>;

        $r7 = <com.jidesoft.plaf.metal.MetalBumps: java.awt.Color ALPHA>;

        if $r8 != $r7 goto label4;

        $b4 = 0;

        goto label5;

     label4:
        $b4 = -1;

     label5:
        specialinvoke $r6.<java.awt.image.IndexColorModel: void <init>(int,int,int[],int,boolean,int,int)>(8, 3, $r2, 0, 0, $b4, 0);

        $r9 = new java.awt.image.BufferedImage;

        specialinvoke $r9.<java.awt.image.BufferedImage: void <init>(int,int,int,java.awt.image.IndexColorModel)>(64, 64, 13, $r6);

        r0.<com.jidesoft.plaf.metal.BumpBuffer: java.awt.Image image> = $r9;

     label6:
        return;
    }

    static void <clinit>()
    {
        java.awt.Dimension $r0;

        <com.jidesoft.plaf.metal.BumpBuffer: int IMAGE_SIZE> = 64;

        $r0 = new java.awt.Dimension;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>(64, 64);

        <com.jidesoft.plaf.metal.BumpBuffer: java.awt.Dimension imageSize> = $r0;

        return;
    }
}
