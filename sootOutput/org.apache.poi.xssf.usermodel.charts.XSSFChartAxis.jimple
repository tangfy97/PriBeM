public abstract class org.apache.poi.xssf.usermodel.charts.XSSFChartAxis extends java.lang.Object implements org.apache.poi.ss.usermodel.charts.ChartAxis
{
    protected org.apache.poi.xssf.usermodel.XSSFChart chart;
    private static final double MIN_LOG_BASE;
    private static final double MAX_LOG_BASE;

    protected void <init>(org.apache.poi.xssf.usermodel.XSSFChart)
    {
        org.apache.poi.xssf.usermodel.XSSFChart r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r1 := @parameter0: org.apache.poi.xssf.usermodel.XSSFChart;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.apache.poi.xssf.usermodel.XSSFChart chart> = r1;

        return;
    }

    public org.apache.poi.ss.usermodel.charts.AxisPosition getPosition()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos $r1;
        org.apache.poi.ss.usermodel.charts.AxisPosition $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos getCTAxPos()>();

        $r2 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.apache.poi.ss.usermodel.charts.AxisPosition toAxisPosition(org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos)>($r1);

        return $r2;
    }

    public void setPosition(org.apache.poi.ss.usermodel.charts.AxisPosition)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos $r1;
        org.apache.poi.ss.usermodel.charts.AxisPosition r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r2 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisPosition;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos getCTAxPos()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum fromAxisPosition(org.apache.poi.ss.usermodel.charts.AxisPosition)>(r2);

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum)>($r3);

        return;
    }

    public void setNumberFormat(java.lang.String)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt $r1, $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        java.lang.String r2;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt getCTNumFmt()>();

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt: void setFormatCode(java.lang.String)>(r2);

        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt getCTNumFmt()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt: void setSourceLinked(boolean)>(1);

        return;
    }

    public java.lang.String getNumberFormat()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt $r1;
        java.lang.String $r2;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt getCTNumFmt()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt: java.lang.String getFormatCode()>();

        return $r2;
    }

    public boolean isSetLogBase()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetLogBase()>();

        return $z0;
    }

    public void setLogBase(double)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase $r7, $r8;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r6;
        java.lang.IllegalArgumentException $r10;
        byte $b0, $b1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r5;
        int $i2, $i3;
        java.lang.StringBuilder $r2, $r3, $r9;
        java.lang.String $r4;
        double d0;
        boolean $z0;

        r5 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        d0 := @parameter0: double;

        $b0 = d0 cmpg 2.0;

        $i2 = (int) $b0;

        if $i2 < 0 goto label1;

        $b1 = 1000.0 cmpg d0;

        $i3 = (int) $b1;

        if $i3 >= 0 goto label2;

     label1:
        $r10 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Axis log base must be between 2 and 1000 (inclusive), got: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r10;

     label2:
        $r6 = virtualinvoke r5.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetLogBase()>();

        if $z0 == 0 goto label3;

        $r8 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase getLogBase()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase: void setVal(double)>(d0);

        goto label4;

     label3:
        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase addNewLogBase()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase: void setVal(double)>(d0);

     label4:
        return;
    }

    public double getLogBase()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase getLogBase()>();

        if $r2 == null goto label1;

        $d0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTLogBase: double getVal()>();

        return $d0;

     label1:
        return 0.0;
    }

    public boolean isSetMinimum()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetMin()>();

        return $z0;
    }

    public void setMinimum(double)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r2, $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetMin()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getMin()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewMin()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

     label2:
        return;
    }

    public double getMinimum()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetMin()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getMin()>();

        $d0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: double getVal()>();

        return $d0;

     label1:
        return 0.0;
    }

    public boolean isSetMaximum()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetMax()>();

        return $z0;
    }

    public void setMaximum(double)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r2, $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        boolean $z0;
        double d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        d0 := @parameter0: double;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetMax()>();

        if $z0 == 0 goto label1;

        $r3 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getMax()>();

        interfaceinvoke $r3.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

        goto label2;

     label1:
        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble addNewMax()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: void setVal(double)>(d0);

     label2:
        return;
    }

    public double getMaximum()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        boolean $z0;
        double $d0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetMax()>();

        if $z0 == 0 goto label1;

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble getMax()>();

        $d0 = interfaceinvoke $r2.<org.openxmlformats.schemas.drawingml.x2006.chart.CTDouble: double getVal()>();

        return $d0;

     label1:
        return 0.0;
    }

    public org.apache.poi.ss.usermodel.charts.AxisOrientation getOrientation()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1;
        org.apache.poi.ss.usermodel.charts.AxisOrientation $r3;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $r2 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation getOrientation()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.apache.poi.ss.usermodel.charts.AxisOrientation toAxisOrientation(org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation)>($r2);

        return $r3;
    }

    public void setOrientation(org.apache.poi.ss.usermodel.charts.AxisOrientation)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation $r5, $r6;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling $r1, $r4;
        org.apache.poi.ss.usermodel.charts.AxisOrientation r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum $r3;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        boolean $z0;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r2 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisOrientation;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum fromAxisOrientation(org.apache.poi.ss.usermodel.charts.AxisOrientation)>(r2);

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: boolean isSetOrientation()>();

        if $z0 == 0 goto label1;

        $r6 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation getOrientation()>();

        interfaceinvoke $r6.<org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum)>($r3);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling()>();

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling: org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation addNewOrientation()>();

        interfaceinvoke $r5.<org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum)>($r3);

     label2:
        return;
    }

    public org.apache.poi.ss.usermodel.charts.AxisCrosses getCrosses()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.apache.poi.ss.usermodel.charts.AxisCrosses $r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses getCTCrosses()>();

        $r2 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.apache.poi.ss.usermodel.charts.AxisCrosses toAxisCrosses(org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses)>($r1);

        return $r2;
    }

    public void setCrosses(org.apache.poi.ss.usermodel.charts.AxisCrosses)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.apache.poi.ss.usermodel.charts.AxisCrosses r2;
        org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum $r3;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r2 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisCrosses;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses getCTCrosses()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum fromAxisCrosses(org.apache.poi.ss.usermodel.charts.AxisCrosses)>(r2);

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum)>($r3);

        return;
    }

    public boolean isVisible()
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean getDelete()>();

        $z0 = interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean: boolean getVal()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setVisible(boolean)
    {
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean $r1;
        boolean z0, $z1;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean getDelete()>();

        if z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean: void setVal(boolean)>($z1);

        return;
    }

    public org.apache.poi.ss.usermodel.charts.AxisTickMark getMajorTickMark()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.apache.poi.ss.usermodel.charts.AxisTickMark $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark getMajorCTTickMark()>();

        $r2 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.apache.poi.ss.usermodel.charts.AxisTickMark toAxisTickMark(org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark)>($r1);

        return $r2;
    }

    public void setMajorTickMark(org.apache.poi.ss.usermodel.charts.AxisTickMark)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum $r3;
        org.apache.poi.ss.usermodel.charts.AxisTickMark r2;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r2 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisTickMark;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark getMajorCTTickMark()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum fromAxisTickMark(org.apache.poi.ss.usermodel.charts.AxisTickMark)>(r2);

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum)>($r3);

        return;
    }

    public org.apache.poi.ss.usermodel.charts.AxisTickMark getMinorTickMark()
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.apache.poi.ss.usermodel.charts.AxisTickMark $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark getMinorCTTickMark()>();

        $r2 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.apache.poi.ss.usermodel.charts.AxisTickMark toAxisTickMark(org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark)>($r1);

        return $r2;
    }

    public void setMinorTickMark(org.apache.poi.ss.usermodel.charts.AxisTickMark)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark $r1;
        org.apache.poi.xssf.usermodel.charts.XSSFChartAxis r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum $r3;
        org.apache.poi.ss.usermodel.charts.AxisTickMark r2;

        r0 := @this: org.apache.poi.xssf.usermodel.charts.XSSFChartAxis;

        r2 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisTickMark;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark getMinorCTTickMark()>();

        $r3 = staticinvoke <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum fromAxisTickMark(org.apache.poi.ss.usermodel.charts.AxisTickMark)>(r2);

        interfaceinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark: void setVal(org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum)>($r3);

        return;
    }

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos getCTAxPos();

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTNumFmt getCTNumFmt();

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTScaling getCTScaling();

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses getCTCrosses();

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTBoolean getDelete();

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark getMajorCTTickMark();

    protected abstract org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark getMinorCTTickMark();

    private static org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum fromAxisOrientation(org.apache.poi.ss.usermodel.charts.AxisOrientation)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum $r2, $r3;
        int[] $r1;
        int $i0, $i1;
        java.lang.IllegalArgumentException $r4;
        org.apache.poi.ss.usermodel.charts.AxisOrientation r0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisOrientation;

        $r1 = <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$charts$AxisOrientation>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.charts.AxisOrientation: int ordinal()>();

        $i1 = $r1[$i0];

        lookupswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation: org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum MIN_MAX>;

        return $r3;

     label2:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation: org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum MAX_MIN>;

        return $r2;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    private static org.apache.poi.ss.usermodel.charts.AxisOrientation toAxisOrientation(org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation r0;
        int $i0;
        java.lang.IllegalArgumentException $r4;
        org.apache.poi.ss.usermodel.charts.AxisOrientation $r2, $r3;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTOrientation: org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum getVal()>();

        $i0 = virtualinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.STOrientation$Enum: int intValue()>();

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            default: goto label3;
        };

     label1:
        $r2 = <org.apache.poi.ss.usermodel.charts.AxisOrientation: org.apache.poi.ss.usermodel.charts.AxisOrientation MIN_MAX>;

        return $r2;

     label2:
        $r3 = <org.apache.poi.ss.usermodel.charts.AxisOrientation: org.apache.poi.ss.usermodel.charts.AxisOrientation MAX_MIN>;

        return $r3;

     label3:
        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;
    }

    private static org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum fromAxisCrosses(org.apache.poi.ss.usermodel.charts.AxisCrosses)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        org.apache.poi.ss.usermodel.charts.AxisCrosses r0;
        int[] $r1;
        int $i0, $i1;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisCrosses;

        $r1 = <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$charts$AxisCrosses>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.charts.AxisCrosses: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = <org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses: org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum AUTO_ZERO>;

        return $r4;

     label2:
        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses: org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum MIN>;

        return $r3;

     label3:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses: org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum MAX>;

        return $r2;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    private static org.apache.poi.ss.usermodel.charts.AxisCrosses toAxisCrosses(org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses)
    {
        org.apache.poi.ss.usermodel.charts.AxisCrosses $r2, $r3, $r4;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum $r1;
        java.lang.IllegalArgumentException $r5;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses r0;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTCrosses: org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum getVal()>();

        $i0 = virtualinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.STCrosses$Enum: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            default: goto label4;
        };

     label1:
        $r4 = <org.apache.poi.ss.usermodel.charts.AxisCrosses: org.apache.poi.ss.usermodel.charts.AxisCrosses AUTO_ZERO>;

        return $r4;

     label2:
        $r3 = <org.apache.poi.ss.usermodel.charts.AxisCrosses: org.apache.poi.ss.usermodel.charts.AxisCrosses MAX>;

        return $r3;

     label3:
        $r2 = <org.apache.poi.ss.usermodel.charts.AxisCrosses: org.apache.poi.ss.usermodel.charts.AxisCrosses MIN>;

        return $r2;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;
    }

    private static org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum fromAxisPosition(org.apache.poi.ss.usermodel.charts.AxisPosition)
    {
        java.lang.IllegalArgumentException $r6;
        int[] $r1;
        int $i0, $i1;
        org.apache.poi.ss.usermodel.charts.AxisPosition r0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum $r2, $r3, $r4, $r5;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisPosition;

        $r1 = <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$charts$AxisPosition>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.charts.AxisPosition: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = <org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos: org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum B>;

        return $r5;

     label2:
        $r4 = <org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos: org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum L>;

        return $r4;

     label3:
        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos: org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum R>;

        return $r3;

     label4:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos: org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum T>;

        return $r2;

     label5:
        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;
    }

    private static org.apache.poi.ss.usermodel.charts.AxisPosition toAxisPosition(org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos r0;
        int $i0;
        org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum $r1;
        org.apache.poi.ss.usermodel.charts.AxisPosition $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTAxPos: org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum getVal()>();

        $i0 = virtualinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.STAxPos$Enum: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = <org.apache.poi.ss.usermodel.charts.AxisPosition: org.apache.poi.ss.usermodel.charts.AxisPosition BOTTOM>;

        return $r5;

     label2:
        $r4 = <org.apache.poi.ss.usermodel.charts.AxisPosition: org.apache.poi.ss.usermodel.charts.AxisPosition LEFT>;

        return $r4;

     label3:
        $r3 = <org.apache.poi.ss.usermodel.charts.AxisPosition: org.apache.poi.ss.usermodel.charts.AxisPosition RIGHT>;

        return $r3;

     label4:
        $r2 = <org.apache.poi.ss.usermodel.charts.AxisPosition: org.apache.poi.ss.usermodel.charts.AxisPosition TOP>;

        return $r2;

     label5:
        $r6 = <org.apache.poi.ss.usermodel.charts.AxisPosition: org.apache.poi.ss.usermodel.charts.AxisPosition BOTTOM>;

        return $r6;
    }

    private static org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum fromAxisTickMark(org.apache.poi.ss.usermodel.charts.AxisTickMark)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum $r2, $r3, $r4, $r5;
        java.lang.IllegalArgumentException $r6;
        int[] $r1;
        int $i0, $i1;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        org.apache.poi.ss.usermodel.charts.AxisTickMark r0;

        r0 := @parameter0: org.apache.poi.ss.usermodel.charts.AxisTickMark;

        $r1 = <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis$1: int[] $SwitchMap$org$apache$poi$ss$usermodel$charts$AxisTickMark>;

        $i0 = virtualinvoke r0.<org.apache.poi.ss.usermodel.charts.AxisTickMark: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = <org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum NONE>;

        return $r5;

     label2:
        $r4 = <org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum IN>;

        return $r4;

     label3:
        $r3 = <org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum OUT>;

        return $r3;

     label4:
        $r2 = <org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum CROSS>;

        return $r2;

     label5:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown AxisTickMark: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    private static org.apache.poi.ss.usermodel.charts.AxisTickMark toAxisTickMark(org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark)
    {
        org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum $r1;
        org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark r0;
        int $i0;
        org.apache.poi.ss.usermodel.charts.AxisTickMark $r2, $r3, $r4, $r5, $r6;

        r0 := @parameter0: org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.drawingml.x2006.chart.CTTickMark: org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum getVal()>();

        $i0 = virtualinvoke $r1.<org.openxmlformats.schemas.drawingml.x2006.chart.STTickMark$Enum: int intValue()>();

        tableswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label2;
            case 3: goto label1;
            case 4: goto label3;
            default: goto label5;
        };

     label1:
        $r3 = <org.apache.poi.ss.usermodel.charts.AxisTickMark: org.apache.poi.ss.usermodel.charts.AxisTickMark NONE>;

        return $r3;

     label2:
        $r4 = <org.apache.poi.ss.usermodel.charts.AxisTickMark: org.apache.poi.ss.usermodel.charts.AxisTickMark IN>;

        return $r4;

     label3:
        $r2 = <org.apache.poi.ss.usermodel.charts.AxisTickMark: org.apache.poi.ss.usermodel.charts.AxisTickMark OUT>;

        return $r2;

     label4:
        $r5 = <org.apache.poi.ss.usermodel.charts.AxisTickMark: org.apache.poi.ss.usermodel.charts.AxisTickMark CROSS>;

        return $r5;

     label5:
        $r6 = <org.apache.poi.ss.usermodel.charts.AxisTickMark: org.apache.poi.ss.usermodel.charts.AxisTickMark CROSS>;

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: double MAX_LOG_BASE> = 1000.0;

        <org.apache.poi.xssf.usermodel.charts.XSSFChartAxis: double MIN_LOG_BASE> = 2.0;

        return;
    }
}
