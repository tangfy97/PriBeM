public class org.gagravarr.opus.OpusTags extends org.gagravarr.vorbis.VorbisStyleComments implements org.gagravarr.opus.OpusPacket
{

    public void <init>(org.gagravarr.ogg.OggPacket)
    {
        byte[] $r2, $r3, $r4;
        java.lang.IllegalArgumentException $r5;
        org.gagravarr.opus.OpusTags r0;
        org.gagravarr.ogg.OggPacket r1;
        int $i0;
        boolean $z0;

        r0 := @this: org.gagravarr.opus.OpusTags;

        r1 := @parameter0: org.gagravarr.ogg.OggPacket;

        $r2 = <org.gagravarr.opus.OpusTags: byte[] MAGIC_TAGS_BYTES>;

        $i0 = lengthof $r2;

        specialinvoke r0.<org.gagravarr.vorbis.VorbisStyleComments: void <init>(org.gagravarr.ogg.OggPacket,int)>(r1, $i0);

        $r3 = <org.gagravarr.opus.OpusTags: byte[] MAGIC_TAGS_BYTES>;

        $r4 = virtualinvoke r0.<org.gagravarr.opus.OpusTags: byte[] getData()>();

        $z0 = staticinvoke <org.gagravarr.ogg.IOUtils: boolean byteRangeMatches(byte[],byte[],int)>($r3, $r4, 0);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid type, not a Opus Header");

        throw $r5;

     label1:
        return;
    }

    public void <init>()
    {
        org.gagravarr.opus.OpusTags r0;

        r0 := @this: org.gagravarr.opus.OpusTags;

        specialinvoke r0.<org.gagravarr.vorbis.VorbisStyleComments: void <init>()>();

        return;
    }

    protected int getHeaderSize()
    {
        org.gagravarr.opus.OpusTags r0;

        r0 := @this: org.gagravarr.opus.OpusTags;

        return 8;
    }

    protected void populateMetadataHeader(byte[], int)
    {
        byte[] r0, $r1, $r2;
        org.gagravarr.opus.OpusTags r3;
        int $i0, i1;

        r3 := @this: org.gagravarr.opus.OpusTags;

        r0 := @parameter0: byte[];

        i1 := @parameter1: int;

        $r2 = <org.gagravarr.opus.OpusTags: byte[] MAGIC_TAGS_BYTES>;

        $r1 = <org.gagravarr.opus.OpusTags: byte[] MAGIC_TAGS_BYTES>;

        $i0 = lengthof $r1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r0, 0, $i0);

        return;
    }

    protected void populateMetadataFooter(java.io.OutputStream)
    {
        java.io.OutputStream r1;
        org.gagravarr.opus.OpusTags r0;

        r0 := @this: org.gagravarr.opus.OpusTags;

        r1 := @parameter0: java.io.OutputStream;

        return;
    }
}
