class org.apache.lucene.search.spans.NearSpansUnordered$SpansCell extends org.apache.lucene.search.spans.Spans
{
    private org.apache.lucene.search.spans.Spans spans;
    private org.apache.lucene.search.spans.NearSpansUnordered$SpansCell next;
    private int length;
    private int index;
    final org.apache.lucene.search.spans.NearSpansUnordered this$0;

    public void <init>(org.apache.lucene.search.spans.NearSpansUnordered, org.apache.lucene.search.spans.Spans, int)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        org.apache.lucene.search.spans.NearSpansUnordered r1;
        int i0, $i2;
        org.apache.lucene.search.spans.Spans r2;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        r1 := @parameter0: org.apache.lucene.search.spans.NearSpansUnordered;

        r2 := @parameter1: org.apache.lucene.search.spans.Spans;

        i0 := @parameter2: int;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.spans.Spans: void <init>()>();

        $i2 = (int) -1;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int length> = $i2;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans> = r2;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int index> = i0;

        return;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        org.apache.lucene.search.spans.Spans $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean next()>();

        $z1 = specialinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: boolean adjust(boolean)>($z0);

        return $z1;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        int i0;
        org.apache.lucene.search.spans.Spans $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean skipTo(int)>(i0);

        $z1 = specialinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: boolean adjust(boolean)>($z0);

        return $z1;
    }

    private boolean adjust(boolean)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0, $r3, $r5, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13;
        boolean z0;
        org.apache.lucene.search.spans.NearSpansUnordered $r1, $r2, $r4, $r6, $r8, $r10, $r11, $r12;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        z0 := @parameter0: boolean;

        $i0 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int length>;

        $i13 = (int) -1;

        if $i0 == $i13 goto label1;

        $r10 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        $i11 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int length>;

        staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: int access$020(org.apache.lucene.search.spans.NearSpansUnordered,int)>($r10, $i11);

     label1:
        if z0 == 0 goto label3;

        $i1 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int end()>();

        $i2 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int start()>();

        $i3 = $i1 - $i2;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int length> = $i3;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        $i4 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int length>;

        staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: int access$012(org.apache.lucene.search.spans.NearSpansUnordered,int)>($r1, $i4);

        $r2 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        $r3 = staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$100(org.apache.lucene.search.spans.NearSpansUnordered)>($r2);

        if $r3 == null goto label2;

        $i5 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        $r4 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        $r5 = staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$100(org.apache.lucene.search.spans.NearSpansUnordered)>($r4);

        $i6 = virtualinvoke $r5.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        if $i5 > $i6 goto label2;

        $i7 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        $r6 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        $r7 = staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$100(org.apache.lucene.search.spans.NearSpansUnordered)>($r6);

        $i8 = virtualinvoke $r7.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int doc()>();

        if $i7 != $i8 goto label3;

        $i9 = virtualinvoke r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int end()>();

        $r8 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        $r9 = staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$100(org.apache.lucene.search.spans.NearSpansUnordered)>($r8);

        $i10 = virtualinvoke $r9.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int end()>();

        if $i9 <= $i10 goto label3;

     label2:
        $r11 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$102(org.apache.lucene.search.spans.NearSpansUnordered,org.apache.lucene.search.spans.NearSpansUnordered$SpansCell)>($r11, r0);

     label3:
        $r12 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered this$0>;

        staticinvoke <org.apache.lucene.search.spans.NearSpansUnordered: boolean access$202(org.apache.lucene.search.spans.NearSpansUnordered,boolean)>($r12, z0);

        return z0;
    }

    public int doc()
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        int $i0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: int doc()>();

        return $i0;
    }

    public int start()
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        int $i0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: int start()>();

        return $i0;
    }

    public int end()
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        int $i0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: int end()>();

        return $i0;
    }

    public java.util.Collection getPayload() throws java.io.IOException
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r1;
        java.util.Collection $r3;
        org.apache.lucene.search.spans.Spans $r2;
        java.util.ArrayList $r0;

        r1 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r0 = new java.util.ArrayList;

        $r2 = r1.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.search.spans.Spans: java.util.Collection getPayload()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        return $r0;
    }

    public boolean isPayloadAvailable() throws java.io.IOException
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        org.apache.lucene.search.spans.Spans $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean isPayloadAvailable()>();

        return $z0;
    }

    public long cost()
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        long $l0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: long cost()>();

        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r1;
        int $i0;
        java.lang.StringBuilder $r0, $r4, $r5, $r6;
        java.lang.String $r3, $r7;
        org.apache.lucene.search.spans.Spans $r2;

        r1 := @this: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $i0 = r1.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: int index>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static org.apache.lucene.search.spans.Spans access$300(org.apache.lucene.search.spans.NearSpansUnordered$SpansCell)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @parameter0: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.Spans spans>;

        return $r1;
    }

    static org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$400(org.apache.lucene.search.spans.NearSpansUnordered$SpansCell)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0, $r1;

        r0 := @parameter0: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        $r1 = r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell next>;

        return $r1;
    }

    static org.apache.lucene.search.spans.NearSpansUnordered$SpansCell access$402(org.apache.lucene.search.spans.NearSpansUnordered$SpansCell, org.apache.lucene.search.spans.NearSpansUnordered$SpansCell)
    {
        org.apache.lucene.search.spans.NearSpansUnordered$SpansCell r0, r1;

        r0 := @parameter0: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        r1 := @parameter1: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell;

        r0.<org.apache.lucene.search.spans.NearSpansUnordered$SpansCell: org.apache.lucene.search.spans.NearSpansUnordered$SpansCell next> = r1;

        return r1;
    }
}
