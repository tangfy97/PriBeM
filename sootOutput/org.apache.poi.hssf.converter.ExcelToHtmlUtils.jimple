public class org.apache.poi.hssf.converter.ExcelToHtmlUtils extends org.apache.poi.hssf.converter.AbstractExcelUtils
{

    public void <init>()
    {
        org.apache.poi.hssf.converter.ExcelToHtmlUtils r0;

        r0 := @this: org.apache.poi.hssf.converter.ExcelToHtmlUtils;

        specialinvoke r0.<org.apache.poi.hssf.converter.AbstractExcelUtils: void <init>()>();

        return;
    }

    public static void appendAlign(java.lang.StringBuilder, short)
    {
        short s0;
        java.lang.StringBuilder r1;
        java.lang.String $r0;
        boolean $z0;

        r1 := @parameter0: java.lang.StringBuilder;

        s0 := @parameter1: short;

        $r0 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: java.lang.String getAlign(short)>(s0);

        $z0 = staticinvoke <org.apache.poi.hssf.converter.ExcelToHtmlUtils: boolean isEmpty(java.lang.String)>($r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("text-align:");

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r0);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        return;
    }

    public static org.apache.poi.ss.util.CellRangeAddress[][] buildMergedRangesMap(org.apache.poi.hssf.usermodel.HSSFSheet)
    {
        org.apache.poi.ss.util.CellRangeAddress[] r2, r5;
        org.apache.poi.hssf.usermodel.HSSFSheet r0;
        int $i0, $i1, i2, $i3, $i4, i5, i6, $i7, i8, i9, $i10, $i11, $i12, $i13;
        org.apache.poi.ss.util.CellRangeAddress[][] r3, r4;
        org.apache.poi.ss.util.CellRangeAddress $r1;

        r0 := @parameter0: org.apache.poi.hssf.usermodel.HSSFSheet;

        r3 = newarray (org.apache.poi.ss.util.CellRangeAddress[])[1];

        i8 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFSheet: int getNumMergedRegions()>();

        if i8 >= $i0 goto label7;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.usermodel.HSSFSheet: org.apache.poi.ss.util.CellRangeAddress getMergedRegion(int)>(i8);

        $i1 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        i2 = $i1 + 1;

        $i3 = lengthof r3;

        if $i3 >= i2 goto label2;

        r4 = newarray (org.apache.poi.ss.util.CellRangeAddress[])[i2];

        $i7 = lengthof r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r4, 0, $i7);

        r3 = r4;

     label2:
        i9 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getFirstRow()>();

     label3:
        $i10 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastRow()>();

        if i9 > $i10 goto label6;

        $i4 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        i5 = $i4 + 1;

        r5 = r3[i9];

        if r5 != null goto label4;

        r5 = newarray (org.apache.poi.ss.util.CellRangeAddress)[i5];

        r3[i9] = r5;

        goto label5;

     label4:
        i6 = lengthof r5;

        if i6 >= i5 goto label5;

        r2 = newarray (org.apache.poi.ss.util.CellRangeAddress)[i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r5, 0, r2, 0, i6);

        r3[i9] = r2;

        r5 = r2;

     label5:
        $i11 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getFirstColumn()>();

        $i12 = virtualinvoke $r1.<org.apache.poi.ss.util.CellRangeAddress: int getLastColumn()>();

        $i13 = $i12 + 1;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(r5, $i11, $i13, $r1);

        i9 = i9 + 1;

        goto label3;

     label6:
        i8 = i8 + 1;

        goto label1;

     label7:
        return r3;
    }
}
