class org.apache.lucene.index.DirectoryReader$MultiTermDocs extends java.lang.Object implements org.apache.lucene.index.TermDocs
{
    org.apache.lucene.index.IndexReader topReader;
    protected org.apache.lucene.index.IndexReader[] readers;
    protected int[] starts;
    protected org.apache.lucene.index.Term term;
    protected int base;
    protected int pointer;
    private org.apache.lucene.index.TermDocs[] readerTermDocs;
    protected org.apache.lucene.index.TermDocs current;
    private org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum;
    int matchingSegmentPos;
    org.apache.lucene.index.SegmentMergeInfo smi;
    static final boolean $assertionsDisabled;

    public void <init>(org.apache.lucene.index.IndexReader, org.apache.lucene.index.IndexReader[], int[])
    {
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.TermDocs[] $r4;
        int[] r3;
        int $i0;
        org.apache.lucene.index.IndexReader r1;
        org.apache.lucene.index.IndexReader[] r2;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        r1 := @parameter0: org.apache.lucene.index.IndexReader;

        r2 := @parameter1: org.apache.lucene.index.IndexReader[];

        r3 := @parameter2: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base> = 0;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = 0;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader topReader> = r1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers> = r2;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int[] starts> = r3;

        $i0 = lengthof r2;

        $r4 = newarray (org.apache.lucene.index.TermDocs)[$i0];

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs[] readerTermDocs> = $r4;

        return;
    }

    public int doc()
    {
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.TermDocs $r1;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        $i0 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base>;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        $i1 = interfaceinvoke $r1.<org.apache.lucene.index.TermDocs: int doc()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    public int freq()
    {
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        int $i0;
        org.apache.lucene.index.TermDocs $r1;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        $i0 = interfaceinvoke $r1.<org.apache.lucene.index.TermDocs: int freq()>();

        return $i0;
    }

    public void seek(org.apache.lucene.index.Term)
    {
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.Term r1;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        r1 := @parameter0: org.apache.lucene.index.Term;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.Term term> = r1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base> = 0;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = 0;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current> = null;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum> = null;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi> = null;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos> = 0;

        return;
    }

    public void seek(org.apache.lucene.index.TermEnum) throws java.io.IOException
    {
        org.apache.lucene.index.TermEnum r1;
        org.apache.lucene.index.Term $r2;
        org.apache.lucene.index.DirectoryReader$MultiTermEnum $r3, $r4;
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.IndexReader $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        r1 := @parameter0: org.apache.lucene.index.TermEnum;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();

        virtualinvoke r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: void seek(org.apache.lucene.index.Term)>($r2);

        $z0 = r1 instanceof org.apache.lucene.index.DirectoryReader$MultiTermEnum;

        if $z0 == 0 goto label1;

        $r3 = (org.apache.lucene.index.DirectoryReader$MultiTermEnum) r1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum> = $r3;

        $r6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader topReader>;

        $r4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        $r5 = $r4.<org.apache.lucene.index.DirectoryReader$MultiTermEnum: org.apache.lucene.index.IndexReader topReader>;

        if $r6 == $r5 goto label1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum> = null;

     label1:
        return;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1, $r5, $r12;
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        boolean $z0;
        org.apache.lucene.index.SegmentMergeInfo[] $r7;
        org.apache.lucene.index.DirectoryReader$MultiTermEnum $r3, $r6;
        org.apache.lucene.index.IndexReader[] $r2, $r11;
        org.apache.lucene.index.SegmentMergeInfo $r8, $r9, $r10;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

     label1:
        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        if $r1 == null goto label2;

        $r12 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        $z0 = interfaceinvoke $r12.<org.apache.lucene.index.TermDocs: boolean next()>();

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $r2 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label5;

        $r3 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        if $r3 == null goto label4;

        $r6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        $r7 = $r6.<org.apache.lucene.index.DirectoryReader$MultiTermEnum: org.apache.lucene.index.SegmentMergeInfo[] matchingSegments>;

        $i6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos> = $i7;

        $r8 = $r7[$i6];

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi> = $r8;

        $r9 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        if $r9 != null goto label3;

        $r11 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $i9 = lengthof $r11;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i9;

        return 0;

     label3:
        $r10 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        $i8 = $r10.<org.apache.lucene.index.SegmentMergeInfo: int ord>;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i8;

     label4:
        $r4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int[] starts>;

        $i2 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $i3 = $r4[$i2];

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base> = $i3;

        $i4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i5;

        $r5 = specialinvoke r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs termDocs(int)>($i4);

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current> = $r5;

        goto label1;

     label5:
        return 0;
    }

    public int read(int[], int[]) throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r3, $r7, $r14;
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        int[] r1, r2, $r6;
        int $i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14;
        org.apache.lucene.index.SegmentMergeInfo[] $r9;
        org.apache.lucene.index.DirectoryReader$MultiTermEnum $r5, $r8;
        org.apache.lucene.index.IndexReader[] $r4, $r13;
        org.apache.lucene.index.SegmentMergeInfo $r10, $r11, $r12;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

     label1:
        $r14 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        if $r14 != null goto label5;

        $i5 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $r4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $i4 = lengthof $r4;

        if $i5 >= $i4 goto label4;

        $r5 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        if $r5 == null goto label3;

        $r8 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        $r9 = $r8.<org.apache.lucene.index.DirectoryReader$MultiTermEnum: org.apache.lucene.index.SegmentMergeInfo[] matchingSegments>;

        $i10 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos>;

        $i11 = $i10 + 1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos> = $i11;

        $r10 = $r9[$i10];

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi> = $r10;

        $r11 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        if $r11 != null goto label2;

        $r13 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $i13 = lengthof $r13;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i13;

        return 0;

     label2:
        $r12 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        $i12 = $r12.<org.apache.lucene.index.SegmentMergeInfo: int ord>;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i12;

     label3:
        $r6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int[] starts>;

        $i6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $i7 = $r6[$i6];

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base> = $i7;

        $i8 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $i9 = $i8 + 1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i9;

        $r7 = specialinvoke r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs termDocs(int)>($i8);

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current> = $r7;

        goto label1;

     label4:
        return 0;

     label5:
        $r3 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        $i0 = interfaceinvoke $r3.<org.apache.lucene.index.TermDocs: int read(int[],int[])>(r1, r2);

        if $i0 != 0 goto label6;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current> = null;

        goto label9;

     label6:
        i1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base>;

        i14 = 0;

     label7:
        if i14 >= $i0 goto label8;

        $i2 = r1[i14];

        $i3 = $i2 + i1;

        r1[i14] = $i3;

        i14 = i14 + 1;

        goto label7;

     label8:
        return $i0;

     label9:
        goto label1;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r1, $r5, $r10;
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12;
        boolean $z0;
        org.apache.lucene.index.SegmentMergeInfo[] $r7;
        org.apache.lucene.index.DirectoryReader$MultiTermEnum $r3, $r6;
        org.apache.lucene.index.IndexReader[] $r2, $r9;
        org.apache.lucene.index.SegmentMergeInfo r8;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        i10 := @parameter0: int;

     label1:
        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        if $r1 == null goto label2;

        $r10 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current>;

        $i11 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base>;

        $i12 = i10 - $i11;

        $z0 = interfaceinvoke $r10.<org.apache.lucene.index.TermDocs: boolean skipTo(int)>($i12);

        if $z0 == 0 goto label2;

        return 1;

     label2:
        $i1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $r2 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $i0 = lengthof $r2;

        if $i1 >= $i0 goto label5;

        $r3 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        if $r3 == null goto label4;

        $r6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.DirectoryReader$MultiTermEnum tenum>;

        $r7 = $r6.<org.apache.lucene.index.DirectoryReader$MultiTermEnum: org.apache.lucene.index.SegmentMergeInfo[] matchingSegments>;

        $i6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos>;

        $i7 = $i6 + 1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int matchingSegmentPos> = $i7;

        r8 = $r7[$i6];

        if r8 != null goto label3;

        $r9 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $i9 = lengthof $r9;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i9;

        return 0;

     label3:
        $i8 = r8.<org.apache.lucene.index.SegmentMergeInfo: int ord>;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i8;

     label4:
        $r4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int[] starts>;

        $i2 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $i3 = $r4[$i2];

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int base> = $i3;

        $i4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer>;

        $i5 = $i4 + 1;

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: int pointer> = $i5;

        $r5 = specialinvoke r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs termDocs(int)>($i4);

        r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs current> = $r5;

        goto label1;

     label5:
        return 0;
    }

    private org.apache.lucene.index.TermDocs termDocs(int) throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r16, r17;
        org.apache.lucene.index.TermEnum $r5, $r7;
        org.apache.lucene.index.Term $r3, $r8, $r9;
        java.lang.AssertionError $r10, $r12;
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.TermDocs[] $r1, $r15;
        int i0, $i1;
        boolean $z0, $z1, $z2;
        org.apache.lucene.index.IndexReader[] $r13;
        org.apache.lucene.index.SegmentMergeInfo $r2, $r4, $r6, $r11;
        org.apache.lucene.index.IndexReader $r14;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs[] readerTermDocs>;

        r17 = $r1[i0];

        if r17 != null goto label1;

        $r15 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs[] readerTermDocs>;

        $r13 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.IndexReader[] readers>;

        $r14 = $r13[i0];

        $r16 = virtualinvoke r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs termDocs(org.apache.lucene.index.IndexReader)>($r14);

        $r15[i0] = $r16;

        r17 = $r16;

     label1:
        $r2 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        if $r2 == null goto label4;

        $z0 = <org.apache.lucene.index.DirectoryReader$MultiTermDocs: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        $r11 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        $i1 = $r11.<org.apache.lucene.index.SegmentMergeInfo: int ord>;

        if $i1 == i0 goto label2;

        $r12 = new java.lang.AssertionError;

        specialinvoke $r12.<java.lang.AssertionError: void <init>()>();

        throw $r12;

     label2:
        $z1 = <org.apache.lucene.index.DirectoryReader$MultiTermDocs: boolean $assertionsDisabled>;

        if $z1 != 0 goto label3;

        $r6 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        $r7 = $r6.<org.apache.lucene.index.SegmentMergeInfo: org.apache.lucene.index.TermEnum termEnum>;

        $r8 = virtualinvoke $r7.<org.apache.lucene.index.TermEnum: org.apache.lucene.index.Term term()>();

        $r9 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.Term term>;

        $z2 = virtualinvoke $r8.<org.apache.lucene.index.Term: boolean equals(java.lang.Object)>($r9);

        if $z2 != 0 goto label3;

        $r10 = new java.lang.AssertionError;

        specialinvoke $r10.<java.lang.AssertionError: void <init>()>();

        throw $r10;

     label3:
        $r4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.SegmentMergeInfo smi>;

        $r5 = $r4.<org.apache.lucene.index.SegmentMergeInfo: org.apache.lucene.index.TermEnum termEnum>;

        interfaceinvoke r17.<org.apache.lucene.index.TermDocs: void seek(org.apache.lucene.index.TermEnum)>($r5);

        goto label5;

     label4:
        $r3 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.Term term>;

        interfaceinvoke r17.<org.apache.lucene.index.TermDocs: void seek(org.apache.lucene.index.Term)>($r3);

     label5:
        return r17;
    }

    protected org.apache.lucene.index.TermDocs termDocs(org.apache.lucene.index.IndexReader) throws java.io.IOException
    {
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.TermDocs $r3;
        org.apache.lucene.index.Term $r1;
        org.apache.lucene.index.IndexReader r2;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        r2 := @parameter0: org.apache.lucene.index.IndexReader;

        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.Term term>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r2.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermDocs termDocs(org.apache.lucene.index.Term)>(null);

        goto label2;

     label1:
        $r3 = virtualinvoke r2.<org.apache.lucene.index.IndexReader: org.apache.lucene.index.TermDocs termDocs()>();

     label2:
        return $r3;
    }

    public void close() throws java.io.IOException
    {
        org.apache.lucene.index.TermDocs $r3, $r5;
        org.apache.lucene.index.DirectoryReader$MultiTermDocs r0;
        org.apache.lucene.index.TermDocs[] $r1, $r2, $r4;
        int $i0, i1;

        r0 := @this: org.apache.lucene.index.DirectoryReader$MultiTermDocs;

        i1 = 0;

     label1:
        $r1 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs[] readerTermDocs>;

        $i0 = lengthof $r1;

        if i1 >= $i0 goto label3;

        $r2 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs[] readerTermDocs>;

        $r3 = $r2[i1];

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.lucene.index.DirectoryReader$MultiTermDocs: org.apache.lucene.index.TermDocs[] readerTermDocs>;

        $r5 = $r4[i1];

        interfaceinvoke $r5.<org.apache.lucene.index.TermDocs: void close()>();

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/DirectoryReader;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.DirectoryReader$MultiTermDocs: boolean $assertionsDisabled> = $z1;

        return;
    }
}
