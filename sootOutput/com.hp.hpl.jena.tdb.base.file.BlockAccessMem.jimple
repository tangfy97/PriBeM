public class com.hp.hpl.jena.tdb.base.file.BlockAccessMem extends java.lang.Object implements com.hp.hpl.jena.tdb.base.file.BlockAccess
{
    public static boolean SafeMode;
    static final boolean Checking;
    boolean fileClosed;
    private java.util.List blocks;
    private final boolean safeModeThisMgr;
    protected final int blockSize;
    private final java.lang.String label;

    public void <init>(java.lang.String, int)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        int i0;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $z0 = <com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean SafeMode>;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void <init>(java.lang.String,int,boolean)>(r1, i0, $z0);

        return;
    }

    private void <init>(java.lang.String, int, boolean)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        int i0;
        java.lang.String r2;
        java.util.ArrayList $r1;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean fileClosed> = 0;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks> = $r1;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: int blockSize> = i0;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.lang.String label> = r2;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean safeModeThisMgr> = z0;

        return;
    }

    public com.hp.hpl.jena.tdb.base.block.Block allocate(int)
    {
        long $l2;
        java.nio.ByteBuffer $r2;
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        int i0, $i1, $i3, $i4;
        java.lang.String $r11;
        java.util.List $r1, $r4;
        com.hp.hpl.jena.tdb.base.block.Block $r3;
        com.hp.hpl.jena.tdb.base.file.FileException $r5;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $i3 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: int blockSize>;

        if i0 == $i3 goto label1;

        $r5 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fixed blocksize only: request= ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / fixed size=");

        $i4 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: int blockSize>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r11);

        throw $r5;

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(i0);

        $r3 = new com.hp.hpl.jena.tdb.base.block.Block;

        $l2 = (long) $i1;

        specialinvoke $r3.<com.hp.hpl.jena.tdb.base.block.Block: void <init>(long,java.nio.ByteBuffer)>($l2, $r2);

        $r4 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r3);

        return $r3;
    }

    public com.hp.hpl.jena.tdb.base.block.Block read(long)
    {
        long l0;
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        java.util.List $r1;
        com.hp.hpl.jena.tdb.base.block.Block r3, $r4;
        int $i1;
        java.lang.Object $r2;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        l0 := @parameter0: long;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void check(long)>(l0);

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        $i1 = (int) l0;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        r3 = (com.hp.hpl.jena.tdb.base.block.Block) $r2;

        $z0 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean safeModeThisMgr>;

        if $z0 == 0 goto label1;

        $r4 = virtualinvoke r3.<com.hp.hpl.jena.tdb.base.block.Block: com.hp.hpl.jena.tdb.base.block.Block replicate()>();

        return $r4;

     label1:
        return r3;
    }

    public void write(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        com.hp.hpl.jena.tdb.base.block.Block r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void check(com.hp.hpl.jena.tdb.base.block.Block)>(r1);

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void _write(com.hp.hpl.jena.tdb.base.block.Block)>(r1);

        return;
    }

    public void overwrite(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        com.hp.hpl.jena.tdb.base.block.Block r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void write(com.hp.hpl.jena.tdb.base.block.Block)>(r1);

        return;
    }

    private void _write(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        java.util.List $r1;
        java.lang.Long $r2;
        com.hp.hpl.jena.tdb.base.block.Block r3;
        int $i0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r3 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        $z0 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean safeModeThisMgr>;

        if $z0 == 0 goto label1;

        r3 = virtualinvoke r3.<com.hp.hpl.jena.tdb.base.block.Block: com.hp.hpl.jena.tdb.base.block.Block replicate()>();

     label1:
        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        $r2 = virtualinvoke r3.<com.hp.hpl.jena.tdb.base.block.Block: java.lang.Long getId()>();

        $i0 = virtualinvoke $r2.<java.lang.Long: int intValue()>();

        interfaceinvoke $r1.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i0, r3);

        return;
    }

    public boolean isEmpty()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        java.util.List $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        return $z0;
    }

    public boolean valid(long)
    {
        long l0, $l3;
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        java.util.List $r1;
        byte $b1, $b4;
        int $i2, $i5, $i6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i5 = (int) $b1;

        if $i5 < 0 goto label1;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        $l3 = (long) $i2;

        $b4 = l0 cmp $l3;

        $i6 = (int) $b4;

        if $i6 >= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void close()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean fileClosed> = 1;

        return;
    }

    public void sync()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        return;
    }

    private void check(com.hp.hpl.jena.tdb.base.block.Block)
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        java.lang.Long $r2;
        com.hp.hpl.jena.tdb.base.block.Block r1;
        long $l0;
        java.nio.ByteBuffer $r3;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.block.Block;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.block.Block: java.lang.Long getId()>();

        $l0 = virtualinvoke $r2.<java.lang.Long: long longValue()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void check(long)>($l0);

        $r3 = virtualinvoke r1.<com.hp.hpl.jena.tdb.base.block.Block: java.nio.ByteBuffer getByteBuffer()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: void check(java.nio.ByteBuffer)>($r3);

        return;
    }

    private void check(long)
    {
        long l0, $l4;
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r5;
        byte $b1, $b2, $b5;
        int $i3, $i6, $i7, $i8;
        java.lang.String $r4, $r11;
        java.util.List $r6;
        com.hp.hpl.jena.tdb.base.file.FileException $r13, $r15;
        java.lang.StringBuilder $r2, $r3, $r9, $r10, $r12, $r14;

        r5 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        l0 := @parameter0: long;

        $b1 = l0 cmp 2147483647L;

        $i6 = (int) $b1;

        if $i6 <= 0 goto label1;

        $r13 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BlockAccessMem: Bounds exception (id large than an int): ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r11);

        throw $r13;

     label1:
        $b2 = l0 cmp 0L;

        $i7 = (int) $b2;

        if $i7 < 0 goto label2;

        $r6 = r5.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.util.List blocks>;

        $i3 = interfaceinvoke $r6.<java.util.List: int size()>();

        $l4 = (long) $i3;

        $b5 = l0 cmp $l4;

        $i8 = (int) $b5;

        if $i8 < 0 goto label3;

     label2:
        $r15 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r14 = new java.lang.StringBuilder;

        specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("BlockAccessMem: Bounds exception: ");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r4);

        throw $r15;

     label3:
        return;
    }

    private void check(java.nio.ByteBuffer)
    {
        java.lang.Object[] $r6;
        java.lang.Integer $r7, $r8;
        java.nio.ByteBuffer r0;
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r1;
        java.nio.ByteOrder $r2, $r3;
        int $i0, $i1, $i2, $i3;
        com.hp.hpl.jena.tdb.base.file.FileException $r4, $r5;
        java.lang.String $r9;

        r1 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        r0 := @parameter0: java.nio.ByteBuffer;

        $i0 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        $i1 = r1.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: int blockSize>;

        if $i0 == $i1 goto label1;

        $r5 = new com.hp.hpl.jena.tdb.base.file.FileException;

        $r6 = newarray (java.lang.Object)[2];

        $i2 = r1.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: int blockSize>;

        $r7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r6[0] = $r7;

        $i3 = virtualinvoke r0.<java.nio.ByteBuffer: int capacity()>();

        $r8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i3);

        $r6[1] = $r8;

        $r9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("FileAccessMem: Wrong size block.  Expected=%d : actual=%d", $r6);

        specialinvoke $r5.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>($r9);

        throw $r5;

     label1:
        $r2 = virtualinvoke r0.<java.nio.ByteBuffer: java.nio.ByteOrder order()>();

        $r3 = <com.hp.hpl.jena.tdb.sys.SystemTDB: java.nio.ByteOrder NetworkOrder>;

        if $r2 == $r3 goto label2;

        $r4 = new com.hp.hpl.jena.tdb.base.file.FileException;

        specialinvoke $r4.<com.hp.hpl.jena.tdb.base.file.FileException: void <init>(java.lang.String)>("BlockMgrMem: Wrong byte order");

        throw $r4;

     label2:
        return;
    }

    public java.lang.String getLabel()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        $r1 = r0.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.lang.String label>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.tdb.base.file.BlockAccessMem r2;
        java.lang.StringBuilder $r0, $r1, $r4;
        java.lang.String $r3, $r5;

        r2 := @this: com.hp.hpl.jena.tdb.base.file.BlockAccessMem;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Mem:");

        $r3 = r2.<com.hp.hpl.jena.tdb.base.file.BlockAccessMem: java.lang.String label>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean Checking> = 1;

        <com.hp.hpl.jena.tdb.base.file.BlockAccessMem: boolean SafeMode> = 1;

        return;
    }
}
