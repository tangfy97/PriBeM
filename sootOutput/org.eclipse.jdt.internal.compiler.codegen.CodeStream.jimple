public class org.eclipse.jdt.internal.compiler.codegen.CodeStream extends java.lang.Object
{
    public static final boolean DEBUG;
    public static org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] ImplicitThis;
    public static final int LABELS_INCREMENT;
    public static final int LOCALS_INCREMENT;
    static org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] noExceptionHandlers;
    static org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] noLabels;
    static org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noLocals;
    static org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noVisibleLocals;
    public static final org.eclipse.jdt.internal.compiler.CompilationResult RESTART_IN_WIDE_MODE;
    public int allLocalsCounter;
    public byte[] bCodeStream;
    public org.eclipse.jdt.internal.compiler.ClassFile classFile;
    public int classFileOffset;
    public org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool;
    public int countLabels;
    public org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels;
    public int exceptionLabelsCounter;
    public int generateAttributes;
    static final int L_UNKNOWN;
    static final int L_OPTIMIZABLE;
    static final int L_CANNOT_OPTIMIZE;
    public org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels;
    public int lastEntryPC;
    public int lastAbruptCompletion;
    public int[] lineSeparatorPositions;
    public int lineNumberStart;
    public int lineNumberEnd;
    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals;
    public int maxFieldCount;
    public int maxLocals;
    public org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration;
    public int[] pcToSourceMap;
    public int pcToSourceMapSize;
    public int position;
    public boolean preserveUnusedLocals;
    public int stackDepth;
    public int stackMax;
    public int startingClassFileOffset;
    protected long targetLevel;
    public org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals;
    int visibleLocalsCount;
    public boolean wideMode;

    static void <clinit>()
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] $r1;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r3, $r4;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] $r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r5;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] $r2;

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int L_CANNOT_OPTIMIZE> = 4;

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int L_OPTIMIZABLE> = 2;

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int L_UNKNOWN> = 0;

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int LOCALS_INCREMENT> = 10;

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int LABELS_INCREMENT> = 5;

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean DEBUG> = 0;

        $r0 = newarray (org.eclipse.jdt.internal.compiler.lookup.FieldBinding)[0];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] ImplicitThis> = $r0;

        $r1 = newarray (org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel)[5];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] noExceptionHandlers> = $r1;

        $r2 = newarray (org.eclipse.jdt.internal.compiler.codegen.BranchLabel)[5];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] noLabels> = $r2;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[10];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noLocals> = $r3;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[10];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noVisibleLocals> = $r4;

        $r5 = new org.eclipse.jdt.internal.compiler.CompilationResult;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.CompilationResult: void <init>(char[],int,int,int)>(null, 0, 0, 0);

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.CompilationResult RESTART_IN_WIDE_MODE> = $r5;

        return;
    }

    public static int insertionIndex(int[], int, int)
    {
        int[] r0;
        int i0, $i1, $i2, i3, $i4, $i5, $i6, i7, i8, i9, $i11, $i13;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i3 := @parameter2: int;

        i7 = 0;

        i8 = i0 - 2;

        i9 = 0;

        goto label5;

     label1:
        $i1 = i7 + i8;

        i9 = $i1 / 2;

        $i2 = i9 & 1;

        if $i2 == 0 goto label2;

        $i11 = (int) -1;

        i9 = i9 + $i11;

     label2:
        $i4 = r0[i9];

        if i3 >= $i4 goto label3;

        i8 = i9 - 2;

        goto label5;

     label3:
        if i3 <= $i4 goto label4;

        i7 = i9 + 2;

        goto label5;

     label4:
        $i13 = (int) -1;

        return $i13;

     label5:
        if i7 <= i8 goto label1;

        $i5 = r0[i9];

        if i3 >= $i5 goto label6;

        return i9;

     label6:
        $i6 = i9 + 2;

        return $i6;
    }

    public static final void sort(int[], int, int, int[])
    {
        int[] r0, r1;
        int i0, i1, $i2, $i3, $i4, i5, $i6, $i7, i8, i9, $i11, $i13;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i8 = i0;

        i9 = i1;

        if i1 <= i0 goto label8;

        $i2 = i1 - i0;

        $i3 = $i2 / 2;

        $i4 = i0 + $i3;

        i5 = r0[$i4];

        goto label6;

     label1:
        i8 = i8 + 1;

     label2:
        if i8 >= i1 goto label4;

        $i7 = r0[i8];

        if $i7 < i5 goto label1;

        goto label4;

     label3:
        $i11 = (int) -1;

        i9 = i9 + $i11;

     label4:
        if i9 <= i0 goto label5;

        $i6 = r0[i9];

        if $i6 > i5 goto label3;

     label5:
        if i8 > i9 goto label6;

        staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap(int[],int,int,int[])>(r0, i8, i9, r1);

        i8 = i8 + 1;

        $i13 = (int) -1;

        i9 = i9 + $i13;

     label6:
        if i8 <= i9 goto label2;

        if i0 >= i9 goto label7;

        staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sort(int[],int,int,int[])>(r0, i0, i9, r1);

     label7:
        if i8 >= i1 goto label8;

        staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sort(int[],int,int,int[])>(r0, i8, i1, r1);

     label8:
        return;
    }

    private static final void swap(int[], int, int, int[])
    {
        int[] r0, r1;
        int i0, i1, $i2, $i3, i4, i5;

        r0 := @parameter0: int[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r1 := @parameter3: int[];

        i4 = r0[i0];

        $i2 = r0[i1];

        r0[i0] = $i2;

        r0[i1] = i4;

        i5 = r1[i1];

        $i3 = r1[i0];

        r1[i1] = $i3;

        r1[i0] = i5;

        return;
    }

    public void <init>(org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r7;
        long $l0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r8;
        int[] $r4, $r11;
        int $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] $r1;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r3, $r5;
        org.eclipse.jdt.internal.compiler.ClassFile r6;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r10;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] $r2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.ClassFile;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel)[5];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels> = $r1;

        $r2 = newarray (org.eclipse.jdt.internal.compiler.codegen.BranchLabel)[5];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels> = $r2;

        $r3 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[10];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals> = $r3;

        $r4 = newarray (int)[24];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap> = $r4;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[10];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals> = $r5;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode> = 0;

        $l0 = r6.<org.eclipse.jdt.internal.compiler.ClassFile: long targetJDK>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel> = $l0;

        $i1 = r6.<org.eclipse.jdt.internal.compiler.ClassFile: int produceAttributes>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes> = $i1;

        $i2 = r6.<org.eclipse.jdt.internal.compiler.ClassFile: int produceAttributes>;

        $i3 = $i2 & 2;

        if $i3 == 0 goto label1;

        $r7 = r6.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding referenceBinding>;

        $r8 = $r7.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r10 = $r9.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.CompilationResult: int[] getLineSeparatorPositions()>();

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions> = $r11;

     label1:
        return;
    }

    public void aaload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 50;

        return;
    }

    public void aastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 83;

        return;
    }

    public void aconst_null()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 1;

        return;
    }

    public void addDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        int[] $r4;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i13;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.lookup.Scope r3;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        i2 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 28;

        if $i1 != 0 goto label1;

        return;

     label1:
        i10 = 0;

        goto label5;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        r2 = $r1[i10];

        if r2 == null goto label4;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.Scope,int,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3, i2, r2);

        if $z0 == 0 goto label4;

        $i3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        if $i3 == 0 goto label3;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int[] initializationPCs>;

        $i5 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        $i6 = $i5 - 1;

        $i7 = $i6 << 1;

        $i8 = $i7 + 1;

        $i9 = $r4[$i8];

        $i13 = (int) -1;

        if $i9 == $i13 goto label4;

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationStartPC(int)>($i4);

     label4:
        i10 = i10 + 1;

     label5:
        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        if i10 < $i11 goto label2;

        return;
    }

    public void addLabel(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] $r1, $r2, $r4, $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels>;

        $i5 = $i4 + 5;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.codegen.BranchLabel)[$i5];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels> = $r4;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i6);

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = $i3;

        $r2[$i2] = r3;

        return;
    }

    public void addVisibleLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1, $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 28;

        if $i1 != 0 goto label1;

        return;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        $i7 = $i6 * 2;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals> = $r4;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i8);

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount> = $i5;

        $r2[$i4] = r3;

        return;
    }

    public void addVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        return;
    }

    public void aload(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b15;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i4 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i26 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i26;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i5 > i4 goto label2;

        $i25 = i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i25;

     label2:
        if i4 <= 255 goto label4;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i18 = $i16 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i17 = lengthof $r4;

        if $i18 < $i17 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i20 = $i19 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i20;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r5[$i21] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i24 = $i23 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i24;

        $r6[$i23] = 25;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i4);

        goto label6;

     label4:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i6 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = lengthof $r1;

        if $i8 < $i7 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label5:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i10 = $i9 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i10;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $r2[$i11] = 25;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $b15 = (byte) i4;

        $r3[$i13] = $b15;

     label6:
        return;
    }

    public void aload_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 != 0 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 1;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 42;

        return;
    }

    public void aload_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 > 1 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 43;

        return;
    }

    public void aload_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 > 2 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 44;

        return;
    }

    public void aload_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 > 3 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 45;

        return;
    }

    public void anewarray(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -67;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        return;
    }

    public void areturn()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -80;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i8;

        return;
    }

    public void arrayAt(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label4;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label8;
            case 7: goto label5;
            case 8: goto label7;
            case 9: goto label6;
            case 10: goto label1;
            default: goto label8;
        };

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iaload()>();

        goto label9;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void baload()>();

        goto label9;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void saload()>();

        goto label9;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void caload()>();

        goto label9;

     label5:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void laload()>();

        goto label9;

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void faload()>();

        goto label9;

     label7:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void daload()>();

        goto label9;

     label8:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aaload()>();

     label9:
        return;
    }

    public void arrayAtPut(int, boolean)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        tableswitch(i0)
        {
            case 2: goto label07;
            case 3: goto label03;
            case 4: goto label05;
            case 5: goto label03;
            case 6: goto label15;
            case 7: goto label09;
            case 8: goto label13;
            case 9: goto label11;
            case 10: goto label01;
            default: goto label15;
        };

     label01:
        if z0 == 0 goto label02;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iastore()>();

        goto label17;

     label03:
        if z0 == 0 goto label04;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void bastore()>();

        goto label17;

     label05:
        if z0 == 0 goto label06;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sastore()>();

        goto label17;

     label07:
        if z0 == 0 goto label08;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void castore()>();

        goto label17;

     label09:
        if z0 == 0 goto label10;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2_x2()>();

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lastore()>();

        goto label17;

     label11:
        if z0 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

     label12:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fastore()>();

        goto label17;

     label13:
        if z0 == 0 goto label14;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2_x2()>();

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dastore()>();

        goto label17;

     label15:
        if z0 == 0 goto label16;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

     label16:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aastore()>();

     label17:
        return;
    }

    public void arraylength()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -66;

        return;
    }

    public void astore(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b13;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i3 > i2 goto label1;

        $i23 = i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i23;

     label1:
        if i2 <= 255 goto label3;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i16 = $i14 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i15 = lengthof $r4;

        if $i16 < $i15 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i18 = $i17 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i18;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i20 = $i19 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i20;

        $r5[$i19] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r6[$i21] = 58;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label5;

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 58;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $b13 = (byte) i2;

        $r3[$i11] = $b13;

     label5:
        return;
    }

    public void astore_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 1;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 75;

        return;
    }

    public void astore_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 1 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 76;

        return;
    }

    public void astore_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 77;

        return;
    }

    public void astore_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 78;

        return;
    }

    public void athrow()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -65;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i8;

        return;
    }

    public void baload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 51;

        return;
    }

    public void bastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 84;

        return;
    }

    public void bipush(byte)
    {
        byte[] $r1, $r2, $r3;
        byte b13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        b13 := @parameter0: byte;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i14;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 16;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $r3[$i11] = b13;

        return;
    }

    public void caload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 52;

        return;
    }

    public void castore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 85;

        return;
    }

    public void checkcast(int)
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i7 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label01:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -64;

        tableswitch(i7)
        {
            case 2: goto label04;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label09;
            case 6: goto label10;
            case 7: goto label06;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label05;
            default: goto label10;
        };

     label02:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r15 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $i14 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r15);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i14);

        goto label10;

     label03:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $i13 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r13);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i13);

        goto label10;

     label04:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $i15 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r17);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i15);

        goto label10;

     label05:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $i8 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i8);

        goto label10;

     label06:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r9 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $i11 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r9);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        goto label10;

     label07:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $i9 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i9);

        goto label10;

     label08:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $i10 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r7);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i10);

        goto label10;

     label09:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r11 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $i12 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r11);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i12);

     label10:
        return;
    }

    public void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -64;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        return;
    }

    public void d2f()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -112;

        return;
    }

    public void d2i()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -114;

        return;
    }

    public void d2l()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -113;

        return;
    }

    public void dadd()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 99;

        return;
    }

    public void daload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 49;

        return;
    }

    public void dastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 4;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 82;

        return;
    }

    public void dcmpg()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -104;

        return;
    }

    public void dcmpl()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -105;

        return;
    }

    public void dconst_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 14;

        return;
    }

    public void dconst_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 15;

        return;
    }

    public void ddiv()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 111;

        return;
    }

    public void decrStackSize(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int i0, $i1, $i2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = $i1 - i0;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i2;

        return;
    }

    public void dload(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b16;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i4 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i27;

     label1:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i5 = i4 + 2;

        if $i6 >= $i5 goto label2;

        $i26 = i4 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i26;

     label2:
        if i4 <= 255 goto label4;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i19 = $i17 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i18 = lengthof $r4;

        if $i19 < $i18 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i21 = $i20 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i21;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i23 = $i22 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i23;

        $r5[$i22] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i24 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i25 = $i24 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i25;

        $r6[$i24] = 24;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i4);

        goto label6;

     label4:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i7 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = lengthof $r1;

        if $i9 < $i8 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label5:
        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i11 = $i10 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i11;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $r2[$i12] = 24;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i15 = $i14 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i15;

        $b16 = (byte) i4;

        $r3[$i14] = $b16;

     label6:
        return;
    }

    public void dload_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 >= 2 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 38;

        return;
    }

    public void dload_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 >= 3 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 39;

        return;
    }

    public void dload_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 >= 4 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 40;

        return;
    }

    public void dload_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i4 >= 5 goto label2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 5;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 41;

        return;
    }

    public void dmul()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 107;

        return;
    }

    public void dneg()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 119;

        return;
    }

    public void drem()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 115;

        return;
    }

    public void dreturn()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -81;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i8;

        return;
    }

    public void dstore(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b14;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i3 = i2 + 1;

        if $i4 > $i3 goto label1;

        $i24 = i2 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i24;

     label1:
        if i2 <= 255 goto label3;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i15 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = lengthof $r4;

        if $i17 < $i16 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i19 = $i18 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i19;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i21;

        $r5[$i20] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i23 = $i22 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i23;

        $r6[$i22] = 57;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label5;

     label3:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i5 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = lengthof $r1;

        if $i7 < $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i9 = $i8 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i9;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $r2[$i10] = 57;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $b14 = (byte) i2;

        $r3[$i12] = $b14;

     label5:
        return;
    }

    public void dstore_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 71;

        return;
    }

    public void dstore_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 72;

        return;
    }

    public void dstore_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 4 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 73;

        return;
    }

    public void dstore_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 5 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 5;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 74;

        return;
    }

    public void dsub()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 103;

        return;
    }

    public void dup()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 89;

        return;
    }

    public void dup_x1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 90;

        return;
    }

    public void dup_x2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 91;

        return;
    }

    public void dup2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 92;

        return;
    }

    public void dup2_x1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 93;

        return;
    }

    public void dup2_x2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 94;

        return;
    }

    public void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3, $r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1, $r5;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 28;

        if $i1 != 0 goto label1;

        return;

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        i6 = $i2 - 1;

        goto label6;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        r2 = $r1[i6];

        if r2 == null goto label3;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.BlockScope declaringScope>;

        if $r4 == r3 goto label4;

     label3:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label6;

     label4:
        $i3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        if $i3 <= 0 goto label5;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationEndPC(int)>($i5);

     label5:
        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        $i4 = i6;

        $i10 = (int) -1;

        i6 = i6 + $i10;

        $r5[$i4] = null;

     label6:
        if i6 >= 0 goto label2;

        return;
    }

    public void exitUserScope(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r3, $r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2, r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i8, $i10;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1, $r6;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r5 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 28;

        if $i1 != 0 goto label1;

        return;

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        i6 = $i2 - 1;

        goto label6;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        r2 = $r1[i6];

        if r2 == null goto label3;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.BlockScope declaringScope>;

        if $r4 != r3 goto label3;

        if r2 != r5 goto label4;

     label3:
        $i8 = (int) -1;

        i6 = i6 + $i8;

        goto label6;

     label4:
        $i3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        if $i3 <= 0 goto label5;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationEndPC(int)>($i5);

     label5:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        $i4 = i6;

        $i10 = (int) -1;

        i6 = i6 + $i10;

        $r6[$i4] = null;

     label6:
        if i6 >= 0 goto label2;

        return;
    }

    public void f2d()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = -115;

        return;
    }

    public void f2i()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -117;

        return;
    }

    public void f2l()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = -116;

        return;
    }

    public void fadd()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 98;

        return;
    }

    public void faload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 48;

        return;
    }

    public void fastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 81;

        return;
    }

    public void fcmpg()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -106;

        return;
    }

    public void fcmpl()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -107;

        return;
    }

    public void fconst_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 11;

        return;
    }

    public void fconst_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 12;

        return;
    }

    public void fconst_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 13;

        return;
    }

    public void fdiv()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 110;

        return;
    }

    public void fload(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b15;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i3 > i2 goto label1;

        $i26 = i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i26;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i5 <= $i4 goto label2;

        $i25 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i25;

     label2:
        if i2 <= 255 goto label4;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i18 = $i16 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i17 = lengthof $r4;

        if $i18 < $i17 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i20 = $i19 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i20;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r5[$i21] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i24 = $i23 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i24;

        $r6[$i23] = 23;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label6;

     label4:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i6 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = lengthof $r1;

        if $i8 < $i7 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label5:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i10 = $i9 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i10;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $r2[$i11] = 23;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $b15 = (byte) i2;

        $r3[$i13] = $b15;

     label6:
        return;
    }

    public void fload_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 1;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 34;

        return;
    }

    public void fload_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 1 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 35;

        return;
    }

    public void fload_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 36;

        return;
    }

    public void fload_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 37;

        return;
    }

    public void fmul()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 106;

        return;
    }

    public void fneg()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 118;

        return;
    }

    public void frem()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 114;

        return;
    }

    public void freturn()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -82;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i8;

        return;
    }

    public void fstore(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b13;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i3 > i2 goto label1;

        $i23 = i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i23;

     label1:
        if i2 <= 255 goto label3;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i16 = $i14 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i15 = lengthof $r4;

        if $i16 < $i15 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i18 = $i17 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i18;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i20 = $i19 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i20;

        $r5[$i19] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r6[$i21] = 56;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label5;

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 56;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $b13 = (byte) i2;

        $r3[$i11] = $b13;

     label5:
        return;
    }

    public void fstore_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 1;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 67;

        return;
    }

    public void fstore_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 1 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 68;

        return;
    }

    public void fstore_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 69;

        return;
    }

    public void fstore_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 70;

        return;
    }

    public void fsub()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 102;

        return;
    }

    public void generateBoxingConversion(int)
    {
        byte $b2, $b4, $b6, $b8, $b10, $b12, $b14, $b16;
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48;
        int i0, $i17, $i19, $i21, $i22, $i24, $i26, $i27, $i29, $i31, $i32, $i34, $i36, $i37, $i39, $i41, $i42, $i44, $i46, $i47, $i49, $i51, $i52, $i54, $i56;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label05;
            case 3: goto label01;
            case 4: goto label03;
            case 5: goto label15;
            case 6: goto label17;
            case 7: goto label09;
            case 8: goto label13;
            case 9: goto label11;
            case 10: goto label07;
            default: goto label17;
        };

     label01:
        $l13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b14 = $l13 cmp 3211264L;

        $i17 = (int) $b14;

        if $i17 < 0 goto label02;

        $r42 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $r41 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r40 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] byteByteSignature>;

        $i19 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i19, 1, 1, $r42, $r41, $r40);

        goto label17;

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r39 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $r38 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r37 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ByteConstrSignature>;

        $i21 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i21, 1, 0, $r39, $r38, $r37);

        goto label17;

     label03:
        $l11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b12 = $l11 cmp 3211264L;

        $i22 = (int) $b12;

        if $i22 < 0 goto label04;

        $r36 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $r35 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r34 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] shortShortSignature>;

        $i24 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i24, 1, 1, $r36, $r35, $r34);

        goto label17;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r33 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $r32 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r31 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ShortConstrSignature>;

        $i26 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i26, 1, 0, $r33, $r32, $r31);

        goto label17;

     label05:
        $l15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b16 = $l15 cmp 3211264L;

        $i27 = (int) $b16;

        if $i27 < 0 goto label06;

        $r48 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $r47 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r46 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] charCharacterSignature>;

        $i29 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i29, 1, 1, $r48, $r47, $r46);

        goto label17;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r45 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $r44 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r43 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] CharConstrSignature>;

        $i31 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i31, 1, 0, $r45, $r44, $r43);

        goto label17;

     label07:
        $l1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b2 = $l1 cmp 3211264L;

        $i32 = (int) $b2;

        if $i32 < 0 goto label08;

        $r6 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r4 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] IntIntegerSignature>;

        $i34 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i34, 1, 1, $r6, $r5, $r4);

        goto label17;

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] IntConstrSignature>;

        $i36 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i36, 1, 0, $r3, $r2, $r1);

        goto label17;

     label09:
        $l7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b8 = $l7 cmp 3211264L;

        $i37 = (int) $b8;

        if $i37 < 0 goto label10;

        $r24 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $r23 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r22 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] longLongSignature>;

        $i39 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i39, 2, 1, $r24, $r23, $r22);

        goto label17;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

        $r21 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $r20 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r19 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] LongConstrSignature>;

        $i41 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i41, 2, 0, $r21, $r20, $r19);

        goto label17;

     label11:
        $l3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b4 = $l3 cmp 3211264L;

        $i42 = (int) $b4;

        if $i42 < 0 goto label12;

        $r12 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $r11 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r10 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] floatFloatSignature>;

        $i44 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i44, 1, 1, $r12, $r11, $r10);

        goto label17;

     label12:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r9 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $r8 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] FloatConstrSignature>;

        $i46 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i46, 1, 0, $r9, $r8, $r7);

        goto label17;

     label13:
        $l5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b6 = $l5 cmp 3211264L;

        $i47 = (int) $b6;

        if $i47 < 0 goto label14;

        $r18 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r16 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] doubleDoubleSignature>;

        $i49 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i49, 2, 1, $r18, $r17, $r16);

        goto label17;

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x2()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

        $r15 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $r14 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DoubleConstrSignature>;

        $i51 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i51, 2, 0, $r15, $r14, $r13);

        goto label17;

     label15:
        $l9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b10 = $l9 cmp 3211264L;

        $i52 = (int) $b10;

        if $i52 < 0 goto label16;

        $r30 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $r29 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r28 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] booleanBooleanSignature>;

        $i54 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i54, 1, 1, $r30, $r29, $r28);

        goto label17;

     label16:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newWrapperFor(int)>(i0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r27 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $r26 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r25 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BooleanConstrSignature>;

        $i56 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i56, 1, 0, $r27, $r26, $r25);

     label17:
        return;
    }

    public void generateClassLiteralAccessForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        long $l0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r12;
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel $r13;
        byte $b1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r0;
        int $i2, $i3, $i4;
        java.lang.String $r8, $r11;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r5, $r6, $r9, $r10;
        char[] $r7;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r3 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label1;

        $r10 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r0 == $r10 goto label1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getTYPE(int)>($i3);

        return;

     label1:
        $l0 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b1 = $l0 cmp 3211264L;

        $i4 = (int) $b1;

        if $i4 < 0 goto label2;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

        goto label7;

     label2:
        $r12 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        if r3 == null goto label3;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r3);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnonnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r12);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

     label3:
        $r13 = new org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        specialinvoke $r13.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1, $r5);

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void placeStart()>();

        $r6 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        if r0 != $r6 goto label4;

        $r11 = "java.lang.Object";

        goto label5;

     label4:
        $r7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] constantPoolName()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r7);

        $r11 = virtualinvoke $r8.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

     label5:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r11);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void placeEnd()>();

        if r3 == null goto label6;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r3);

     label6:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r12);

        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding NULL>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pushExceptionOnStack(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r9);

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void place()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newNoClassDefFoundError()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeThrowableGetMessage()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeNoClassDefFoundErrorStringConstructor()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void athrow()>();

        virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i2;

     label7:
        return;
    }

    public final void generateCodeAttributeForProblemMethod(java.lang.String)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        java.lang.String r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newJavaLangError()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>(r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeJavaLangErrorConstructor()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void athrow()>();

        return;
    }

    public void generateConstant(org.eclipse.jdt.internal.compiler.impl.Constant, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        long $l3;
        char $c6;
        org.eclipse.jdt.internal.compiler.impl.Constant r1;
        short $s4;
        byte $b5;
        int i0, $i1, $i2, i7, $i8;
        float $f0;
        java.lang.String $r2;
        double $d0;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.impl.Constant;

        i0 := @parameter1: int;

        $i1 = i0 & 255;

        i7 = $i1 >> 4;

        if i7 != 0 goto label01;

        i7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: int typeID()>();

     label01:
        tableswitch(i7)
        {
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label02;
            case 6: goto label11;
            case 7: goto label07;
            case 8: goto label09;
            case 9: goto label08;
            case 10: goto label06;
            case 11: goto label10;
            default: goto label11;
        };

     label02:
        $z0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: boolean booleanValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(boolean)>($z0);

        goto label11;

     label03:
        $c6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: char charValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(char)>($c6);

        goto label11;

     label04:
        $b5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: byte byteValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(byte)>($b5);

        goto label11;

     label05:
        $s4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: short shortValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(short)>($s4);

        goto label11;

     label06:
        $i2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: int intValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i2);

        goto label11;

     label07:
        $l3 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: long longValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(long)>($l3);

        goto label11;

     label08:
        $f0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: float floatValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(float)>($f0);

        goto label11;

     label09:
        $d0 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: double doubleValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(double)>($d0);

        goto label11;

     label10:
        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.impl.Constant: java.lang.String stringValue()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r2);

     label11:
        $i8 = i0 & 512;

        if $i8 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateBoxingConversion(int)>(i7);

     label12:
        return;
    }

    public void generateEmulatedReadAccessForField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r3, $r4;
        int $i0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateEmulationForField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeJavaLangReflectFieldGetter(int)>($i0);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $z0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 != 0 goto label1;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r4);

     label1:
        return;
    }

    public void generateEmulatedWriteAccessForField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;
        int $i0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeJavaLangReflectFieldSetter(int)>($i0);

        return;
    }

    public void generateEmulationForConstructor(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        char[][] $r8;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r9, r12, $r18, $r19, $r23;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r10, r17;
        int i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String $r4, $r5, $r15, $r16, $r21, $r22;
        org.eclipse.jdt.internal.compiler.lookup.Scope r7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r13;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r6, $r11;
        char[] $r3, $r14, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r7 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r5);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof $r6;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i0);

        $r8 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_CLASS>;

        $r9 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getType(char[][],int)>($r8, 3);

        $r10 = virtualinvoke r7.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r9, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newArray(org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)>($r10);

        if i0 <= 0 goto label9;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        i4 = 0;

        goto label8;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i4);

        $r11 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        r12 = $r11[i4];

        $z0 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label2;

        $i3 = r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getTYPE(int)>($i3);

        goto label6;

     label2:
        $z1 = virtualinvoke r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z1 == 0 goto label5;

        r17 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r12;

        $r18 = r17.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $z2 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z2 == 0 goto label3;

        $r23 = r17.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $i1 = $r23.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getTYPE(int)>($i1);

        goto label4;

     label3:
        $r19 = r17.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $r20 = virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] constantPoolName()>();

        $r21 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r20);

        $r22 = virtualinvoke $r21.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r22);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

     label4:
        $i2 = r17.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: int dimensions>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(10);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeArrayNewInstance()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeObjectGetClass()>();

        goto label6;

     label5:
        $r13 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r14 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        $r15 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r14);

        $r16 = virtualinvoke $r15.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r16);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aastore()>();

        $i5 = i0 - 1;

        if i4 >= $i5 goto label7;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label7:
        i4 = i4 + 1;

     label8:
        if i4 < i0 goto label1;

     label9:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassGetDeclaredConstructor()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeAccessibleObjectSetAccessible()>();

        return;
    }

    public void generateEmulationForField(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r1;
        char[] $r3, $r6;
        java.lang.String $r4, $r5, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r5);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r7);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassGetDeclaredField()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeAccessibleObjectSetAccessible()>();

        return;
    }

    public void generateEmulationForMethod(org.eclipse.jdt.internal.compiler.lookup.Scope, org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        char[][] $r10;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r11, r14, $r20, $r21, $r25;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r12, r19;
        int i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String $r4, $r5, $r7, $r17, $r18, $r23, $r24;
        org.eclipse.jdt.internal.compiler.lookup.Scope r9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r2, $r15;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r8, $r13;
        char[] $r3, $r6, $r16, $r22;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r9 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        $r4 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r3);

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r5);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

        $r6 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r6);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r7);

        $r8 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof $r8;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i0);

        $r10 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[][] JAVA_LANG_CLASS>;

        $r11 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.TypeBinding getType(char[][],int)>($r10, 3);

        $r12 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r11, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newArray(org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)>($r12);

        if i0 <= 0 goto label9;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        i4 = 0;

        goto label8;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>(i4);

        $r13 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        r14 = $r13[i4];

        $z0 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z0 == 0 goto label2;

        $i3 = r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getTYPE(int)>($i3);

        goto label6;

     label2:
        $z1 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isArrayType()>();

        if $z1 == 0 goto label5;

        r19 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r14;

        $r20 = r19.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $z2 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBaseType()>();

        if $z2 == 0 goto label3;

        $r25 = r19.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $i1 = $r25.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getTYPE(int)>($i1);

        goto label4;

     label3:
        $r21 = r19.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $r22 = virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] constantPoolName()>();

        $r23 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r22);

        $r24 = virtualinvoke $r23.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r24);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

     label4:
        $i2 = r19.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: int dimensions>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(10);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeArrayNewInstance()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeObjectGetClass()>();

        goto label6;

     label5:
        $r15 = r1.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        $r17 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r16);

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String replace(char,char)>(47, 46);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(java.lang.String)>($r18);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassForName()>();

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aastore()>();

        $i5 = i0 - 1;

        if i4 >= $i5 goto label7;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label7:
        i4 = i4 + 1;

     label8:
        if i4 < i0 goto label1;

     label9:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeClassGetDeclaredMethod()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeAccessibleObjectSetAccessible()>();

        return;
    }

    private void generateFieldAccess(byte, int, char[], char[], char[])
    {
        byte[] $r1, $r2;
        byte b0;
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r3, r4, r5;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        b0 := @parameter0: byte;

        i1 := @parameter1: int;

        r3 := @parameter2: char[];

        r4 := @parameter3: char[];

        r5 := @parameter4: char[];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i27 = (int) b0;

        tableswitch($i27)
        {
            case -78: goto label02;
            case -77: goto label06;
            case -76: goto label01;
            case -75: goto label04;
            default: goto label08;
        };

     label01:
        if i1 != 2 goto label08;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i16;

        goto label08;

     label02:
        if i1 != 2 goto label03;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i24 = $i23 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i24;

        goto label08;

     label03:
        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i22;

        goto label08;

     label04:
        if i1 != 2 goto label05;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i14 = $i13 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i14;

        goto label08;

     label05:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = $i2 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i3;

        goto label08;

     label06:
        if i1 != 2 goto label07;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i20 = $i19 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i20;

        goto label08;

     label07:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i18 = $i17 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i18;

     label08:
        $i25 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i26 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i25 <= $i26 goto label09;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i12;

     label09:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label10;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label10:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = b0;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i11 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForField(char[],char[],char[])>(r3, r4, r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        return;
    }

    private void generateFieldAccess(byte, int, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, char[], org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0;
        org.eclipse.jdt.internal.compiler.ClassFile $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r3;
        byte b0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1, $r2;
        int i1;
        char[] $r4, r5, $r6;
        boolean $z0, $z1;

        r3 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        b0 := @parameter0: byte;

        i1 := @parameter1: int;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r5 := @parameter3: char[];

        r1 := @parameter4: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z0 == 0 goto label1;

        $r8 = r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ClassFile: void recordInnerClasses(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r0);

     label1:
        $r2 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType()>();

        $z1 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isNestedType()>();

        if $z1 == 0 goto label2;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.ClassFile: void recordInnerClasses(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r2);

     label2:
        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] signature()>();

        specialinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(b0, i1, $r4, r5, $r6);

        return;
    }

    public void generateImplicitConversion(int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int i0, $i1, $i2, $i3, i4, $i5, i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        $i1 = i0 & 1024;

        if $i1 == 0 goto label01;

        i4 = i0 & 15;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateUnboxingConversion(int)>(i4);

     label01:
        $i2 = i0 & 255;

        lookupswitch($i2)
        {
            case 35: goto label04;
            case 36: goto label04;
            case 39: goto label05;
            case 40: goto label03;
            case 41: goto label02;
            case 42: goto label04;
            case 50: goto label11;
            case 52: goto label11;
            case 55: goto label12;
            case 56: goto label10;
            case 57: goto label09;
            case 58: goto label11;
            case 66: goto label16;
            case 67: goto label16;
            case 71: goto label18;
            case 72: goto label17;
            case 73: goto label19;
            case 74: goto label16;
            case 114: goto label23;
            case 115: goto label23;
            case 116: goto label23;
            case 120: goto label24;
            case 121: goto label25;
            case 122: goto label23;
            case 130: goto label13;
            case 131: goto label13;
            case 132: goto label13;
            case 135: goto label15;
            case 137: goto label14;
            case 138: goto label13;
            case 146: goto label06;
            case 147: goto label06;
            case 148: goto label06;
            case 151: goto label08;
            case 152: goto label07;
            case 154: goto label06;
            case 167: goto label22;
            case 168: goto label20;
            case 169: goto label21;
            default: goto label26;
        };

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void f2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2c()>();

        goto label26;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void d2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2c()>();

        goto label26;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2c()>();

        goto label26;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void l2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2c()>();

        goto label26;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2f()>();

        goto label26;

     label07:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void d2f()>();

        goto label26;

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void l2f()>();

        goto label26;

     label09:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void f2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2b()>();

        goto label26;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void d2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2b()>();

        goto label26;

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2b()>();

        goto label26;

     label12:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void l2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2b()>();

        goto label26;

     label13:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2d()>();

        goto label26;

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void f2d()>();

        goto label26;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void l2d()>();

        goto label26;

     label16:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2s()>();

        goto label26;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void d2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2s()>();

        goto label26;

     label18:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void l2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2s()>();

        goto label26;

     label19:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void f2i()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2s()>();

        goto label26;

     label20:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void d2i()>();

        goto label26;

     label21:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void f2i()>();

        goto label26;

     label22:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void l2i()>();

        goto label26;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void i2l()>();

        goto label26;

     label24:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void d2l()>();

        goto label26;

     label25:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void f2l()>();

     label26:
        $i5 = i0 & 512;

        if $i5 == 0 goto label27;

        $i3 = i0 & 255;

        i6 = $i3 >> 4;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateBoxingConversion(int)>(i6);

     label27:
        return;
    }

    public void generateInlinedValue(boolean)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        boolean z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

     label2:
        return;
    }

    public void generateInlinedValue(byte)
    {
        byte b0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        b0 := @parameter0: byte;

        $i1 = (int) b0;

        tableswitch($i1)
        {
            case -1: goto label1;
            case 0: goto label2;
            case 1: goto label3;
            case 2: goto label4;
            case 3: goto label5;
            case 4: goto label6;
            case 5: goto label7;
            default: goto label8;
        };

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_m1()>();

        goto label9;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label9;

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label9;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_2()>();

        goto label9;

     label5:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_3()>();

        goto label9;

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_4()>();

        goto label9;

     label7:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_5()>();

        goto label9;

     label8:
        $i3 = (int) -128;

        $i4 = (int) b0;

        if $i3 > $i4 goto label9;

        $i5 = (int) b0;

        if $i5 > 127 goto label9;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void bipush(byte)>(b0);

        return;

     label9:
        return;
    }

    public void generateInlinedValue(char)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char c0;
        byte $b1;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        c0 := @parameter0: char;

        $i2 = (int) c0;

        tableswitch($i2)
        {
            case 0: goto label01;
            case 1: goto label02;
            case 2: goto label03;
            case 3: goto label04;
            case 4: goto label05;
            case 5: goto label06;
            default: goto label07;
        };

     label01:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label10;

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label10;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_2()>();

        goto label10;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_3()>();

        goto label10;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_4()>();

        goto label10;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_5()>();

        goto label10;

     label07:
        $i3 = (int) c0;

        if 6 > $i3 goto label08;

        $i4 = (int) c0;

        if $i4 > 127 goto label08;

        $b1 = (byte) c0;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void bipush(byte)>($b1);

        return;

     label08:
        $i5 = (int) c0;

        if 128 > $i5 goto label09;

        $i6 = (int) c0;

        if $i6 > 32767 goto label09;

        $i7 = (int) c0;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sipush(int)>($i7);

        return;

     label09:
        $i8 = (int) c0;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(int)>($i8);

     label10:
        return;
    }

    public void generateInlinedValue(double)
    {
        byte $b0, $b1, $b3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        long $l2;
        double d0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        d0 := @parameter0: double;

        $b0 = d0 cmpl 0.0;

        if $b0 != 0 goto label3;

        $l2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        $b3 = $l2 cmp 0L;

        if $b3 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc2_w(double)>(d0);

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dconst_0()>();

     label2:
        return;

     label3:
        $b1 = d0 cmpl 1.0;

        if $b1 != 0 goto label4;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dconst_1()>();

        return;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc2_w(double)>(d0);

        return;
    }

    public void generateInlinedValue(float)
    {
        byte $b0, $b1, $b2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i3;
        float f0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        f0 := @parameter0: float;

        $b0 = f0 cmpl 0.0F;

        if $b0 != 0 goto label3;

        $i3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(f0);

        if $i3 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(float)>(f0);

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fconst_0()>();

     label2:
        return;

     label3:
        $b1 = f0 cmpl 1.0F;

        if $b1 != 0 goto label4;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fconst_1()>();

        return;

     label4:
        $b2 = f0 cmpl 2.0F;

        if $b2 != 0 goto label5;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fconst_2()>();

        return;

     label5:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(float)>(f0);

        return;
    }

    public void generateInlinedValue(int)
    {
        byte $b1;
        int i0, $i3, $i5;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case -1: goto label01;
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            default: goto label08;
        };

     label01:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_m1()>();

        goto label11;

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label11;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label11;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_2()>();

        goto label11;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_3()>();

        goto label11;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_4()>();

        goto label11;

     label07:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_5()>();

        goto label11;

     label08:
        $i3 = (int) -128;

        if $i3 > i0 goto label09;

        if i0 > 127 goto label09;

        $b1 = (byte) i0;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void bipush(byte)>($b1);

        return;

     label09:
        $i5 = (int) -32768;

        if $i5 > i0 goto label10;

        if i0 > 32767 goto label10;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sipush(int)>(i0);

        return;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(int)>(i0);

     label11:
        return;
    }

    public void generateInlinedValue(long)
    {
        byte $b1, $b2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        long l0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lconst_0()>();

        return;

     label1:
        $b2 = l0 cmp 1L;

        if $b2 != 0 goto label2;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lconst_1()>();

        return;

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc2_w(long)>(l0);

        return;
    }

    public void generateInlinedValue(short)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        short s0;
        byte $b1;
        int $i2, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        s0 := @parameter0: short;

        $i2 = (int) s0;

        tableswitch($i2)
        {
            case -1: goto label01;
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            case 5: goto label07;
            default: goto label08;
        };

     label01:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_m1()>();

        goto label10;

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        goto label10;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_1()>();

        goto label10;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_2()>();

        goto label10;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_3()>();

        goto label10;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_4()>();

        goto label10;

     label07:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_5()>();

        goto label10;

     label08:
        $i4 = (int) -128;

        $i5 = (int) s0;

        if $i4 > $i5 goto label09;

        $i6 = (int) s0;

        if $i6 > 127 goto label09;

        $b1 = (byte) s0;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void bipush(byte)>($b1);

        return;

     label09:
        $i7 = (int) s0;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void sipush(int)>($i7);

     label10:
        return;
    }

    public void generateOuterAccess(java.lang.Object[], org.eclipse.jdt.internal.compiler.ast.ASTNode, org.eclipse.jdt.internal.compiler.lookup.Binding, org.eclipse.jdt.internal.compiler.lookup.Scope)
    {
        java.lang.Object[] r0;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r15, $r19, $r21, $r23;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r7;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r17;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r12, r24;
        org.eclipse.jdt.internal.compiler.lookup.Binding r16;
        int $i0, i1;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r10;
        org.eclipse.jdt.internal.compiler.lookup.Scope r14;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r18, $r20, $r22;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r5;
        org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] $r1, $r2, $r3;
        java.lang.Object $r4, $r6, $r8, $r9, $r11, $r13;

        r5 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: java.lang.Object[];

        r17 := @parameter1: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        r16 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.Binding;

        r14 := @parameter3: org.eclipse.jdt.internal.compiler.lookup.Scope;

        if r0 != null goto label03;

        $z2 = r16 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if $z2 == 0 goto label01;

        $r23 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r23.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void needImplementation(org.eclipse.jdt.internal.compiler.ast.ASTNode)>(r17);

        goto label02;

     label01:
        $r21 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r22 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r16;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void noSuchEnclosingInstance(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,boolean)>($r22, r17, 0);

     label02:
        return;

     label03:
        $r1 = <org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] NoEnclosingInstanceInConstructorCall>;

        if r0 != $r1 goto label04;

        $r19 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r20 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r16;

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void noSuchEnclosingInstance(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,boolean)>($r20, r17, 1);

        return;

     label04:
        $r2 = <org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] NoEnclosingInstanceInStaticContext>;

        if r0 != $r2 goto label05;

        $r15 = virtualinvoke r14.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r18 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) r16;

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void noSuchEnclosingInstance(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode,boolean)>($r18, r17, 0);

        return;

     label05:
        $r3 = <org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] EmulationPathToImplicitThis>;

        if r0 != $r3 goto label06;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        return;

     label06:
        $r4 = r0[0];

        $z0 = $r4 instanceof org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if $z0 == 0 goto label07;

        $r13 = r0[0];

        r24 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r13;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r24);

        goto label08;

     label07:
        $r6 = r0[0];

        $r7 = (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding) $r6;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r7);

     label08:
        i1 = 1;

        $i0 = lengthof r0;

        goto label12;

     label09:
        $r8 = r0[i1];

        $z1 = $r8 instanceof org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if $z1 == 0 goto label10;

        $r11 = r0[i1];

        r12 = (org.eclipse.jdt.internal.compiler.lookup.FieldBinding) $r11;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r12);

        goto label11;

     label10:
        $r9 = r0[i1];

        $r10 = (org.eclipse.jdt.internal.compiler.lookup.MethodBinding) $r9;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r10);

     label11:
        i1 = i1 + 1;

     label12:
        if i1 < $i0 goto label09;

        return;
    }

    public void generateReturnBytecode(org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.ast.Expression r0;
        int i0, $i1, $i2, i3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ast.Expression;

        if r0 != null goto label1;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void return_()>();

        goto label8;

     label1:
        i0 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i1 = i0 & 512;

        if $i1 == 0 goto label2;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

        return;

     label2:
        $i2 = i0 & 255;

        i3 = $i2 >> 4;

        tableswitch(i3)
        {
            case 5: goto label3;
            case 6: goto label7;
            case 7: goto label5;
            case 8: goto label6;
            case 9: goto label4;
            case 10: goto label3;
            default: goto label7;
        };

     label3:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ireturn()>();

        goto label8;

     label4:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void freturn()>();

        goto label8;

     label5:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lreturn()>();

        goto label8;

     label6:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dreturn()>();

        goto label8;

     label7:
        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

     label8:
        return;
    }

    public void generateStringConcatenationAppend(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.Expression)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.ast.Expression r0, r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.ast.Expression;

        r3 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        if r0 != null goto label1;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newStringContatenation()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup_x1()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void swap()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringValueOf(int)>(1);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationStringConstructor()>();

        goto label2;

     label1:
        i7 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i1 = $i0 & 15;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedStringConcatenationCreation(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,int)>(r2, r1, $i1);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>(i7, $i2);

     label2:
        $i6 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int implicitConversion>;

        $i4 = $i3 & 15;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateOptimizedStringConcatenation(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,int)>(r2, r1, $i4);

        $i5 = r3.<org.eclipse.jdt.internal.compiler.ast.Expression: int sourceStart>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int)>($i6, $i5);

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationToString()>();

        return;
    }

    public void generateSyntheticBodyForConstructorAccess(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r6, $r8, $r10, $r13, $r18;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding r21, r22;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding $r12, $r17;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r11, $r16;
        int i0, $i1, $i2, $i3, i4, i5, $i6, i7, i8, $i9;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r7, $r9, $r14, $r15, $r19, $r20;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding targetMethod>;

        r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof r3;

        i4 = 1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $i1 = $r5.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i1 == 41 goto label01;

        $z1 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isEnum()>();

        if $z1 == 0 goto label02;

     label01:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_1()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload_2()>();

        i4 = 3;

     label02:
        $z2 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isNestedType()>();

        if $z2 == 0 goto label10;

        r21 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) r4;

        $r16 = virtualinvoke r21.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticEnclosingInstances()>();

        i5 = 0;

        goto label07;

     label03:
        $r17 = $r16[i5];

        $r18 = $r17.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r18, i4);

        $r19 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r18 == $r19 goto label04;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r18 != $r20 goto label05;

     label04:
        i4 = i4 + 2;

        goto label06;

     label05:
        i4 = i4 + 1;

     label06:
        i5 = i5 + 1;

     label07:
        $i3 = i5;

        if $r16 != null goto label08;

        $i6 = 0;

        goto label09;

     label08:
        $i6 = lengthof $r16;

     label09:
        if $i3 < $i6 goto label03;

     label10:
        i7 = 0;

        goto label15;

     label11:
        $r6 = r3[i7];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r6, i4);

        $r8 = r3[i7];

        $r7 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r8 == $r7 goto label12;

        $r10 = r3[i7];

        $r9 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r10 != $r9 goto label13;

     label12:
        i4 = i4 + 2;

        goto label14;

     label13:
        i4 = i4 + 1;

     label14:
        i7 = i7 + 1;

     label15:
        if i7 < i0 goto label11;

        $z0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isNestedType()>();

        if $z0 == 0 goto label23;

        r22 = (org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding) r4;

        $r11 = virtualinvoke r22.<org.eclipse.jdt.internal.compiler.lookup.NestedTypeBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        i8 = 0;

        goto label20;

     label16:
        $r12 = $r11[i8];

        $r13 = $r12.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r13, i4);

        $r14 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r13 == $r14 goto label17;

        $r15 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r13 != $r15 goto label18;

     label17:
        i4 = i4 + 2;

        goto label19;

     label18:
        i4 = i4 + 1;

     label19:
        i8 = i8 + 1;

     label20:
        $i2 = i8;

        if $r11 != null goto label21;

        $i9 = 0;

        goto label22;

     label21:
        $i9 = lengthof $r11;

     label22:
        if $i2 < $i9 goto label16;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void return_()>();

        return;
    }

    public void generateSyntheticBodyForEnumValueOf(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldc(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeJavaLangEnumvalueOf(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r2);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

        return;
    }

    public void generateSyntheticBodyForEnumValues(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r1;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r6;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r5;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r8;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r7;
        org.eclipse.jdt.internal.compiler.ast.TypeDeclaration $r4;

        r6 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r2 = (org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding) $r1;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r4 = r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.TypeDeclaration referenceContext>;

        r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.TypeDeclaration: org.eclipse.jdt.internal.compiler.lookup.FieldBinding enumValuesSyntheticfield>;

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0);

        r7 = r0.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r5);

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_0()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arraylength()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void istore_1()>();

        $r8 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) r7;

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newArray(org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)>($r8);

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_2()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iconst_0()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload_1()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeSystemArraycopy()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_2()>();

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

        return;
    }

    public void generateSyntheticBodyForFieldReadAccess(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3;
        int $i0;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding targetReadField>;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r2);

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r2);

     label2:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i0)
        {
            case 2: goto label3;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            case 6: goto label7;
            case 7: goto label4;
            case 8: goto label6;
            case 9: goto label5;
            case 10: goto label3;
            default: goto label7;
        };

     label3:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ireturn()>();

        goto label8;

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lreturn()>();

        goto label8;

     label5:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void freturn()>();

        goto label8;

     label6:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dreturn()>();

        goto label8;

     label7:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

     label8:
        return;
    }

    public void generateSyntheticBodyForFieldWriteAccess(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r4;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r2;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding targetWriteField>;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: boolean isStatic()>();

        if $z0 == 0 goto label1;

        $r4 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r4, 0);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r2);

        goto label2;

     label1:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        $r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r3, 1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r2);

     label2:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void return_()>();

        return;
    }

    public void generateSyntheticBodyForMethodAccess(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        int i0, $i1, $i2, i3, i4, $i5;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r6, $r7, $r8, $r9, $r10, r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r11;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r5, $r14;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] r3, r4, $r12;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r1);

        r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.MethodBinding targetMethod>;

        r3 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        i0 = lengthof r3;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: int purpose>;

        if $i1 != 6 goto label01;

        $r12 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        goto label02;

     label01:
        $r12 = null;

     label02:
        r4 = $r12;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z0 == 0 goto label03;

        i3 = 0;

        goto label04;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        i3 = 1;

     label04:
        i4 = 0;

        goto label11;

     label05:
        r13 = r3[i4];

        if r4 == null goto label06;

        r6 = r4[i4];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>(r6, i3);

        if r6 == r13 goto label07;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r13);

        goto label07;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>(r13, i3);

     label07:
        $r14 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if r13 == $r14 goto label08;

        $r5 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if r13 != $r5 goto label09;

     label08:
        i3 = i3 + 2;

        goto label10;

     label09:
        i3 = i3 + 1;

     label10:
        i4 = i4 + 1;

     label11:
        if i4 < i0 goto label05;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z1 == 0 goto label12;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r2);

        goto label16;

     label12:
        $z2 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z2 != 0 goto label13;

        $z3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isPrivate()>();

        if $z3 != 0 goto label13;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: int purpose>;

        if $i2 != 5 goto label14;

     label13:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r2);

        goto label16;

     label14:
        $r11 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z4 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isInterface()>();

        if $z4 == 0 goto label15;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeinterface(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r2);

        goto label16;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokevirtual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r2);

     label16:
        $r15 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i5 = $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i5)
        {
            case 2: goto label18;
            case 3: goto label18;
            case 4: goto label18;
            case 5: goto label18;
            case 6: goto label17;
            case 7: goto label19;
            case 8: goto label21;
            case 9: goto label20;
            case 10: goto label18;
            default: goto label22;
        };

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void return_()>();

        goto label24;

     label18:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ireturn()>();

        goto label24;

     label19:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lreturn()>();

        goto label24;

     label20:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void freturn()>();

        goto label24;

     label21:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dreturn()>();

        goto label24;

     label22:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r8 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r9 = r2.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $r10 = virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding findSuperTypeOriginatingFrom(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8);

        if $r10 != null goto label23;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void checkcast(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8);

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

     label24:
        return;
    }

    public void generateSyntheticBodyForSwitchTable(org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r11;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r6, r17;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r5, $r18;
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel $r19;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r7, $r8;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] $r16;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r12;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r1, r9;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding r0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r4;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r14, $r20, $r22;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r10, $r15;
        char[] $r13, $r21;

        r4 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r2 = (org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding) $r1;

        r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(r0);

        $r5 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r5.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding targetReadField>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r6);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ifnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r5);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

        $r7 = r6.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pushOnStack(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r7);

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.SyntheticMethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding targetEnumType>;

        r9 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r8;

        $r10 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>(r9, 1);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeJavaLangEnumValues(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)>(r9, $r10);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void arraylength()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(10);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_0()>();

        $r11 = new org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r12 = " tab";

        $r13 = virtualinvoke $r12.<java.lang.String: char[] toCharArray()>();

        $r14 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding INT>;

        $r15 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding createArrayType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r14, 1);

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void <init>(char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int,boolean)>($r13, $r15, 0, 0);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void addVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r11);

        $r16 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.FieldBinding[] fields()>();

        if $r16 == null goto label4;

        i5 = 0;

        i0 = lengthof $r16;

        goto label3;

     label1:
        r17 = $r16[i5];

        $i1 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int getAccessFlags()>();

        $i2 = $i1 & 16384;

        if $i2 == 0 goto label2;

        $r18 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r18.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r4);

        $r19 = new org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $r20 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        specialinvoke $r19.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r4, $r20);

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void placeStart()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r17);

        $r21 = virtualinvoke r9.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: char[] constantPoolName()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeEnumOrdinal(char[])>($r21);

        $i3 = r17.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: int id>;

        $i4 = $i3 + 1;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateInlinedValue(int)>($i4);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iastore()>();

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void placeEnd()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>($r18);

        $r22 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pushExceptionOnStack(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r22);

        virtualinvoke $r19.<org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel: void place()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

        virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

     label2:
        i5 = i5 + 1;

     label3:
        if i5 < i0 goto label1;

     label4:
        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void putstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)>(r6);

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void areturn()>();

        virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void removeVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r11);

        return;
    }

    public void generateSyntheticEnclosingInstanceValues(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.Expression, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r11, $r14;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r3;
        org.eclipse.jdt.internal.compiler.ast.Expression r2;
        byte $b1, $b2, $b4;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r16;
        boolean $z0, $z1, $z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z12, z13, $z14, $z15, $z16, $z17, $z18;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r6;
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r5;
        java.lang.Object[] $r9;
        long l0;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r7;
        int $i3, i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0, r1, $r4, r8, $r15, $r17;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r10;
        org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall $r12, $r13;

        r10 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r5 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.ast.Expression;

        r7 := @parameter3: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isAnonymousType()>();

        if $z0 == 0 goto label01;

        $r15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding superclass()>();

        $r16 = virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding erasure()>();

        $r17 = (org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding) $r16;

        goto label02;

     label01:
        $r17 = r0;

     label02:
        r1 = $r17;

        if r2 == null goto label03;

        $z18 = 1;

        $z17 = 1;

        goto label04;

     label03:
        $z18 = 0;

        $z17 = 0;

     label04:
        z12 = $z18;

        if $z17 == 0 goto label06;

        $z9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z9 == 0 goto label05;

        $z10 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isStatic()>();

        if $z10 == 0 goto label06;

     label05:
        $r14 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryEnclosingInstanceSpecification(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r2, r1);

        return;

     label06:
        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] syntheticEnclosingInstanceTypes()>();

        if $r3 == null goto label22;

        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding enclosingType()>();

        $r6 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        l0 = $r6.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: long complianceLevel>;

        $b1 = l0 cmp 3080192L;

        $i6 = (int) $b1;

        if $i6 > 0 goto label07;

        z13 = r7 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        goto label15;

     label07:
        $b2 = l0 cmp 3145728L;

        if $b2 != 0 goto label11;

        $z6 = r7 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z6 != 0 goto label09;

        $z7 = r7 instanceof org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        if $z7 == 0 goto label08;

        $r13 = (org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall) r7;

        $z8 = virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: boolean isSuperAccess()>();

        if $z8 != 0 goto label09;

     label08:
        $z14 = 0;

        goto label10;

     label09:
        $z14 = 1;

     label10:
        z13 = $z14;

        goto label15;

     label11:
        $z1 = r7 instanceof org.eclipse.jdt.internal.compiler.ast.AllocationExpression;

        if $z1 != 0 goto label12;

        $z4 = r7 instanceof org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall;

        if $z4 == 0 goto label13;

        $r12 = (org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall) r7;

        $z5 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.ast.ExplicitConstructorCall: boolean isSuperAccess()>();

        if $z5 == 0 goto label13;

     label12:
        $z2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isLocalType()>();

        if $z2 != 0 goto label13;

        $z15 = 1;

        goto label14;

     label13:
        $z15 = 0;

     label14:
        z13 = $z15;

     label15:
        $b4 = l0 cmp 3145728L;

        $i7 = (int) $b4;

        if $i7 < 0 goto label16;

        $z16 = 1;

        goto label17;

     label16:
        $z16 = 0;

     label17:
        z3 = $z16;

        i5 = 0;

        $i3 = lengthof $r3;

        goto label21;

     label18:
        r8 = $r3[i5];

        if z12 == 0 goto label19;

        if r8 != $r4 goto label19;

        z12 = 0;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.Expression: void generateCode(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.codegen.CodeStream,boolean)>(r5, r10, 1);

        if z3 == 0 goto label20;

        virtualinvoke r10.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        virtualinvoke r10.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeObjectGetClass()>();

        virtualinvoke r10.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void pop()>();

        goto label20;

     label19:
        $r9 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: java.lang.Object[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,boolean,boolean)>(r8, 0, z13);

        virtualinvoke r10.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r9, r7, r8, r5);

     label20:
        i5 = i5 + 1;

     label21:
        if i5 < $i3 goto label18;

        if z12 == 0 goto label22;

        $r11 = virtualinvoke r5.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void unnecessaryEnclosingInstanceSpecification(org.eclipse.jdt.internal.compiler.ast.Expression,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)>(r2, r1);

     label22:
        return;
    }

    public void generateSyntheticOuterArgumentValues(org.eclipse.jdt.internal.compiler.lookup.BlockScope, org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding, org.eclipse.jdt.internal.compiler.ast.ASTNode)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r4;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r6;
        org.eclipse.jdt.internal.compiler.ast.ASTNode r7;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding $r2;
        org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] $r5;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r1;
        int i0, i1;

        r6 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        r0 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        r7 := @parameter2: org.eclipse.jdt.internal.compiler.ast.ASTNode;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        if $r1 == null goto label3;

        i1 = 0;

        i0 = lengthof $r1;

        goto label2;

     label1:
        $r2 = $r1[i1];

        r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding actualOuterLocalVariable>;

        $r5 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.VariableBinding[] getEmulationPath(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3);

        virtualinvoke r6.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateOuterAccess(java.lang.Object[],org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.Binding,org.eclipse.jdt.internal.compiler.lookup.Scope)>($r5, r7, r3, r4);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        return;
    }

    public void generateUnboxingConversion(int)
    {
        int i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label8;
            case 6: goto label9;
            case 7: goto label5;
            case 8: goto label7;
            case 9: goto label6;
            case 10: goto label4;
            default: goto label9;
        };

     label1:
        $r21 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $r20 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BYTEVALUE_BYTE_METHOD_NAME>;

        $r19 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BYTEVALUE_BYTE_METHOD_SIGNATURE>;

        $i2 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i2, 0, 1, $r21, $r20, $r19);

        goto label9;

     label2:
        $r18 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SHORTVALUE_SHORT_METHOD_NAME>;

        $r16 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SHORTVALUE_SHORT_METHOD_SIGNATURE>;

        $i4 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i4, 0, 1, $r18, $r17, $r16);

        goto label9;

     label3:
        $r24 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $r23 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] CHARVALUE_CHARACTER_METHOD_NAME>;

        $r22 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] CHARVALUE_CHARACTER_METHOD_SIGNATURE>;

        $i6 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i6, 0, 1, $r24, $r23, $r22);

        goto label9;

     label4:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] INTVALUE_INTEGER_METHOD_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] INTVALUE_INTEGER_METHOD_SIGNATURE>;

        $i8 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i8, 0, 1, $r3, $r2, $r1);

        goto label9;

     label5:
        $r12 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $r11 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] LONGVALUE_LONG_METHOD_NAME>;

        $r10 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] LONGVALUE_LONG_METHOD_SIGNATURE>;

        $i10 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i10, 0, 2, $r12, $r11, $r10);

        goto label9;

     label6:
        $r6 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] FLOATVALUE_FLOAT_METHOD_NAME>;

        $r4 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] FLOATVALUE_FLOAT_METHOD_SIGNATURE>;

        $i12 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i12, 0, 1, $r6, $r5, $r4);

        goto label9;

     label7:
        $r9 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $r8 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DOUBLEVALUE_DOUBLE_METHOD_NAME>;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DOUBLEVALUE_DOUBLE_METHOD_SIGNATURE>;

        $i14 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i14, 0, 2, $r9, $r8, $r7);

        goto label9;

     label8:
        $r15 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $r14 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BOOLEANVALUE_BOOLEAN_METHOD_NAME>;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BOOLEANVALUE_BOOLEAN_METHOD_SIGNATURE>;

        $i16 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i16, 0, 1, $r15, $r14, $r13);

     label9:
        return;
    }

    public void generateWideRevertedConditionalBranch(byte, org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r2, $r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel $r0, r4;
        byte b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        b6 := @parameter0: byte;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $r0 = new org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        specialinvoke $r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void <init>(org.eclipse.jdt.internal.compiler.codegen.CodeStream)>(r1);

        $i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r2;

        if $i1 < $i0 goto label1;

        specialinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r3[$i4] = b6;

        virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_w(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r4);

        virtualinvoke $r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void place()>();

        return;
    }

    public void getBaseTypeValue(int)
    {
        int i0, $i2, $i4, $i6, $i8, $i10, $i12, $i14, $i16;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label3;
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label8;
            case 6: goto label9;
            case 7: goto label5;
            case 8: goto label7;
            case 9: goto label6;
            case 10: goto label4;
            default: goto label9;
        };

     label1:
        $r21 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $r20 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BYTEVALUE_BYTE_METHOD_NAME>;

        $r19 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BYTEVALUE_BYTE_METHOD_SIGNATURE>;

        $i2 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i2, 0, 1, $r21, $r20, $r19);

        goto label9;

     label2:
        $r18 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SHORTVALUE_SHORT_METHOD_NAME>;

        $r16 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SHORTVALUE_SHORT_METHOD_SIGNATURE>;

        $i4 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i4, 0, 1, $r18, $r17, $r16);

        goto label9;

     label3:
        $r24 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $r23 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] CHARVALUE_CHARACTER_METHOD_NAME>;

        $r22 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] CHARVALUE_CHARACTER_METHOD_SIGNATURE>;

        $i6 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i6, 0, 1, $r24, $r23, $r22);

        goto label9;

     label4:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] INTVALUE_INTEGER_METHOD_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] INTVALUE_INTEGER_METHOD_SIGNATURE>;

        $i8 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i8, 0, 1, $r3, $r2, $r1);

        goto label9;

     label5:
        $r12 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $r11 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] LONGVALUE_LONG_METHOD_NAME>;

        $r10 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] LONGVALUE_LONG_METHOD_SIGNATURE>;

        $i10 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i10, 0, 2, $r12, $r11, $r10);

        goto label9;

     label6:
        $r6 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] FLOATVALUE_FLOAT_METHOD_NAME>;

        $r4 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] FLOATVALUE_FLOAT_METHOD_SIGNATURE>;

        $i12 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i12, 0, 1, $r6, $r5, $r4);

        goto label9;

     label7:
        $r9 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $r8 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DOUBLEVALUE_DOUBLE_METHOD_NAME>;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DOUBLEVALUE_DOUBLE_METHOD_SIGNATURE>;

        $i14 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i14, 0, 2, $r9, $r8, $r7);

        goto label9;

     label8:
        $r15 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $r14 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BOOLEANVALUE_BOOLEAN_METHOD_NAME>;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BOOLEANVALUE_BOOLEAN_METHOD_SIGNATURE>;

        $i16 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i16, 0, 1, $r15, $r14, $r13);

     label9:
        return;
    }

    public final byte[] getContents()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r1 = newarray (byte)[$i0];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i1);

        return $r1;
    }

    public void getfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r0;
        byte b2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r3, $r6;
        int $i0, $i1;
        char[] $r5;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        b2 = 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i0 == 8 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i1 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i1 != 7 goto label2;

     label1:
        b2 = 2;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(-76, b2, $r4, $r5, $r6);

        return;
    }

    protected int getPosition()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        return $i0;
    }

    public void getstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r0;
        byte b2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r3, $r6;
        int $i0, $i1;
        char[] $r5;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        b2 = 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i0 == 8 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i1 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i1 != 7 goto label2;

     label1:
        b2 = 2;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(-78, b2, $r4, $r5, $r6);

        return;
    }

    public void getTYPE(int)
    {
        int i0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        tableswitch(i0)
        {
            case 2: goto label03;
            case 3: goto label01;
            case 4: goto label02;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label05;
            case 8: goto label07;
            case 9: goto label06;
            case 10: goto label04;
            default: goto label10;
        };

     label01:
        $r24 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $r23 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r22 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r24, $r23, $r22);

        goto label10;

     label02:
        $r21 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $r20 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r19 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r21, $r20, $r19);

        goto label10;

     label03:
        $r27 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $r26 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r25 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r27, $r26, $r25);

        goto label10;

     label04:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r3, $r2, $r1);

        goto label10;

     label05:
        $r12 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $r11 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r10 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r12, $r11, $r10);

        goto label10;

     label06:
        $r6 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r4 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r6, $r5, $r4);

        goto label10;

     label07:
        $r9 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $r8 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r9, $r8, $r7);

        goto label10;

     label08:
        $r18 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r16 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r18, $r17, $r16);

        goto label10;

     label09:
        $r15 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangVoidConstantPoolName>;

        $r14 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] TYPE>;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassSignature>;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,char[],char[],char[])>(-78, 1, $r15, $r14, $r13);

     label10:
        return;
    }

    public void goto_(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r3;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r2;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i13, $i15;
        boolean $z0, $z1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void goto_w(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r2);

        return;

     label1:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean inlineForwardReferencesFromLabelsTargeting(org.eclipse.jdt.internal.compiler.codegen.BranchLabel,int)>(r2, $i2);

        if $z1 == 0 goto label6;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if $i9 != $i8 goto label6;

        $i10 = r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position>;

        $i15 = (int) -1;

        if $i10 == $i15 goto label5;

        $r4 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int[] forwardReferences()>();

        i13 = 0;

        $i11 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int forwardReferenceCount()>();

        goto label4;

     label3:
        $i12 = $r4[i13];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writePosition(org.eclipse.jdt.internal.compiler.codegen.BranchLabel,int)>(r2, $i12);

        i13 = i13 + 1;

     label4:
        if i13 < $i11 goto label3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

     label5:
        return;

     label6:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r3[$i5] = -89;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i7;

        return;
    }

    public void goto_w(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -56;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branchWide()>();

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i6;

        return;
    }

    public void i2b()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -111;

        return;
    }

    public void i2c()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -110;

        return;
    }

    public void i2d()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = -121;

        return;
    }

    public void i2f()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -122;

        return;
    }

    public void i2l()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = -123;

        return;
    }

    public void i2s()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -109;

        return;
    }

    public void iadd()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 96;

        return;
    }

    public void iaload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 46;

        return;
    }

    public void iand()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 126;

        return;
    }

    public void iastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 79;

        return;
    }

    public void iconst_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 3;

        return;
    }

    public void iconst_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 4;

        return;
    }

    public void iconst_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 5;

        return;
    }

    public void iconst_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 6;

        return;
    }

    public void iconst_4()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 7;

        return;
    }

    public void iconst_5()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 8;

        return;
    }

    public void iconst_m1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 2;

        return;
    }

    public void idiv()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 108;

        return;
    }

    public void if_acmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-90, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -91;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_acmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-91, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -90;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_icmpeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-96, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -97;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_icmpge(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-95, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -94;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_icmpgt(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-92, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -93;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_icmple(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-93, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -92;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_icmplt(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-94, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -95;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void if_icmpne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-97, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -96;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifeq(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-102, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -103;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifge(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-101, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -100;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifgt(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-98, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -99;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifle(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-99, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -98;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void iflt(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-100, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -101;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifne(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-103, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -102;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifnonnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-58, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -57;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public void ifnull(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateWideRevertedConditionalBranch(byte,org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(-57, r3);

        goto label3;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -58;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

     label3:
        return;
    }

    public final void iinc(int, int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b17, $b20;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i18, $i19, $i21, $i22, $i23, $i25;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        i7 := @parameter1: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        if i0 > 255 goto label1;

        $i25 = (int) -128;

        if i7 < $i25 goto label1;

        if i7 <= 127 goto label3;

     label1:
        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 3;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i23 = lengthof $r7;

        if $i22 < $i23 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i2 = $i1 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i4;

        $r1[$i3] = -60;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -124;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedShort(int)>(i7);

        goto label5;

     label3:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i8 + 2;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = lengthof $r3;

        if $i10 < $i9 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i12 = $i11 + 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i12;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $r4[$i13] = -124;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i16;

        $b17 = (byte) i0;

        $r5[$i15] = $b17;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i19 = $i18 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i19;

        $b20 = (byte) i7;

        $r6[$i18] = $b20;

     label5:
        return;
    }

    public void iload(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b15;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i3 > i2 goto label1;

        $i26 = i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i26;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i5 <= $i4 goto label2;

        $i25 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i25;

     label2:
        if i2 <= 255 goto label4;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i18 = $i16 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i17 = lengthof $r4;

        if $i18 < $i17 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i20 = $i19 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i20;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r5[$i21] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i24 = $i23 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i24;

        $r6[$i23] = 21;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label6;

     label4:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i6 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = lengthof $r1;

        if $i8 < $i7 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label5:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i10 = $i9 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i10;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $r2[$i11] = 21;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $b15 = (byte) i2;

        $r3[$i13] = $b15;

     label6:
        return;
    }

    public void iload_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 1;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 26;

        return;
    }

    public void iload_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 1 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 27;

        return;
    }

    public void iload_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 28;

        return;
    }

    public void iload_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 29;

        return;
    }

    public void imul()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 104;

        return;
    }

    public int indexOfSameLineEntrySincePC(int, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int[] $r1;
        int i0, i1, $i2, i3, $i4, i5, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        i3 := @parameter1: int;

        i5 = i0;

        i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        goto label3;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i2 = i5 + 1;

        $i4 = $r1[$i2];

        if $i4 != i3 goto label2;

        return i5;

     label2:
        i5 = i5 + 2;

     label3:
        if i5 < i1 goto label1;

        $i7 = (int) -1;

        return $i7;
    }

    public void ineg()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 116;

        return;
    }

    public boolean inlineForwardReferencesFromLabelsTargeting(org.eclipse.jdt.internal.compiler.codegen.BranchLabel, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r0, $r1, r4, $r5;
        byte $b3, b4;
        int $i0, i1, $i2, i5, $i7;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] $r3;
        boolean $z0;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        i1 := @parameter1: int;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: org.eclipse.jdt.internal.compiler.codegen.BranchLabel delegate>;

        if $r1 == null goto label01;

        return 0;

     label01:
        b4 = 0;

        $i0 = r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels>;

        i5 = $i0 - 1;

        goto label08;

     label02:
        $r3 = r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        r4 = $r3[i5];

        $i2 = r4.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position>;

        if $i2 == i1 goto label03;

        goto label09;

     label03:
        if r4 != r0 goto label04;

        b4 = b4 | 4;

        goto label07;

     label04:
        $z0 = virtualinvoke r4.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: boolean isStandardLabel()>();

        if $z0 == 0 goto label06;

        $r5 = r4.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: org.eclipse.jdt.internal.compiler.codegen.BranchLabel delegate>;

        if $r5 == null goto label05;

        goto label07;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void becomeDelegateFor(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r4);

        b4 = b4 | 2;

        goto label07;

     label06:
        b4 = b4 | 4;

     label07:
        $i7 = (int) -1;

        i5 = i5 + $i7;

     label08:
        if i5 >= 0 goto label02;

     label09:
        $b3 = b4 & 6;

        if $b3 != 2 goto label10;

        return 1;

     label10:
        return 0;
    }

    public void init(org.eclipse.jdt.internal.compiler.ClassFile)
    {
        byte[] $r3;
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] $r12, $r13, $r14, $r15, $r21;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r22, $r23;
        org.eclipse.jdt.internal.compiler.ClassFile r1;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] $r16, $r17, $r18, $r19, $r20;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i11;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ClassFile;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile> = r1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool> = $r2;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: byte[] contents>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream> = $r3;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int contentsOffset>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int startingClassFileOffset> = $i1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = 0;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = 0;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        i9 = lengthof $r4;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noVisibleLocals>;

        $i2 = lengthof $r5;

        if $i2 >= i9 goto label1;

        $r23 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[i9];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noVisibleLocals> = $r23;

     label1:
        $r7 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noVisibleLocals>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, i9);

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount> = 0;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        $i8 = lengthof $r8;

        $r9 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noLocals>;

        $i3 = lengthof $r9;

        if $i3 >= $i8 goto label2;

        $r22 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[$i8];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noLocals> = $r22;

     label2:
        $r11 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] noLocals>;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r11, 0, $r10, 0, $i8);

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int allLocalsCounter> = 0;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels>;

        $i7 = lengthof $r12;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] noExceptionHandlers>;

        $i4 = lengthof $r13;

        if $i4 >= $i7 goto label3;

        $r21 = newarray (org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel)[$i7];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] noExceptionHandlers> = $r21;

     label3:
        $r15 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] noExceptionHandlers>;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r15, 0, $r14, 0, $i7);

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int exceptionLabelsCounter> = 0;

        $r16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        $i6 = lengthof $r16;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] noLabels>;

        $i5 = lengthof $r17;

        if $i5 >= $i6 goto label4;

        $r20 = newarray (org.eclipse.jdt.internal.compiler.codegen.BranchLabel)[$i6];

        <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] noLabels> = $r20;

     label4:
        $r19 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] noLabels>;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r19, 0, $r18, 0, $i6);

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i11 = (int) -1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i11;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = 0;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = 0;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 0;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = 0;

        return;
    }

    public void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r7;
        byte $b12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2, $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding $r10;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r9;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i13, i14, i15, i16, i17, i18;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r5, $r6, $r8, $r14;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r3, $r4, $r12, $r13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r15;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        if r0 != null goto label01;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 0;

        return;

     label01:
        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isStatic()>();

        if $z0 == 0 goto label02;

        $b12 = 0;

        goto label03;

     label02:
        $b12 = 1;

     label03:
        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $b12;

        $z1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z1 == 0 goto label04;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z3 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z3 == 0 goto label04;

        $i10 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i11 = $i10 + 2;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i11;

     label04:
        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z4 == 0 goto label13;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z2 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z2 == 0 goto label13;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r7 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] syntheticEnclosingInstanceTypes()>();

        if $r7 == null goto label07;

        i13 = 0;

        i14 = lengthof $r7;

        goto label06;

     label05:
        $i8 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i9 = $i8 + 1;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i9;

        i13 = i13 + 1;

     label06:
        if i13 < i14 goto label05;

     label07:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r9 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        if $r9 == null goto label13;

        i15 = 0;

        i16 = lengthof $r9;

        goto label12;

     label08:
        $r10 = $r9[i15];

        $r11 = $r10.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $r12 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r11 == $r12 goto label09;

        $r13 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r11 != $r13 goto label10;

     label09:
        $i4 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i5 = $i4 + 2;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i5;

        goto label11;

     label10:
        $i6 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i7 = $i6 + 1;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i7;

     label11:
        i15 = i15 + 1;

     label12:
        if i15 < i16 goto label08;

     label13:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        if $r15 == null goto label19;

        i17 = 0;

        i18 = lengthof $r15;

        goto label18;

     label14:
        $r2 = $r15[i17];

        $r3 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding LONG>;

        if $r2 == $r3 goto label15;

        $r4 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding DOUBLE>;

        if $r2 != $r4 goto label16;

     label15:
        $i0 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i1 = $i0 + 2;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i1;

        goto label17;

     label16:
        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i3 = $i2 + 1;

        r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i3;

     label17:
        i17 = i17 + 1;

     label18:
        if i17 < i18 goto label14;

     label19:
        return;
    }

    public void instance_of(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -63;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        return;
    }

    protected void invoke(int, int, int, char[], char[], char[])
    {
        byte[] $r1, $r2, $r7, $r8, $r9, $r10, $r12, $r13;
        byte $b12, $b32;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, i34, $i35, $i36, $i37, $i38, $i39;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r3, r4, r5;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r6, $r11, $r14;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        i15 := @parameter2: int;

        r3 := @parameter3: char[];

        r4 := @parameter4: char[];

        r5 := @parameter5: char[];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        i34 = i0;

        tableswitch(i1)
        {
            case -74: goto label3;
            case -73: goto label3;
            case -72: goto label5;
            case -71: goto label1;
            default: goto label7;
        };

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i4 = $i2 + 4;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = -71;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i9 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(char[],char[],char[],boolean)>(r3, r4, r5, 1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i9);

        i34 = i0 + 1;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $b12 = (byte) i34;

        $r7[$i10] = $b12;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $r8[$i13] = 0;

        goto label7;

     label3:
        $i25 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i27 = $i25 + 2;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i26 = lengthof $r12;

        if $i27 < $i26 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i28 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i29 = $i28 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i29;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i30 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i31 = $i30 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i31;

        $b32 = (byte) i1;

        $r13[$i30] = $b32;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i33 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(char[],char[],char[],boolean)>(r3, r4, r5, 0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i33);

        i34 = i0 + 1;

        goto label7;

     label5:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i19 = $i17 + 2;

        $r9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i18 = lengthof $r9;

        if $i19 < $i18 goto label6;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label6:
        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i21;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i23 = $i22 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i23;

        $r10[$i22] = -72;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i24 = virtualinvoke $r11.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(char[],char[],char[],boolean)>(r3, r4, r5, 0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i24);

     label7:
        $i35 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i36 = i15 - i34;

        $i37 = $i35 + $i36;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i37;

        $i38 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i39 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i38 <= $i39 goto label8;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i16;

     label8:
        return;
    }

    protected void invokeAccessibleObjectSetAccessible()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVALANGREFLECTACCESSIBLEOBJECT_CONSTANTPOOLNAME>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SETACCESSIBLE_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SETACCESSIBLE_SIGNATURE>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 0, $r3, $r2, $r1);

        return;
    }

    protected void invokeArrayNewInstance()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVALANGREFLECTARRAY_CONSTANTPOOLNAME>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] NewInstance>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] NewInstanceSignature>;

        $i1 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 2, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeClassForName()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ForName>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ForNameSignature>;

        $i1 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 1, $r3, $r2, $r1);

        return;
    }

    protected void invokeClassGetDeclaredConstructor()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GETDECLAREDCONSTRUCTOR_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GETDECLAREDCONSTRUCTOR_SIGNATURE>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 1, $r3, $r2, $r1);

        return;
    }

    protected void invokeClassGetDeclaredField()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GETDECLAREDFIELD_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GETDECLAREDFIELD_SIGNATURE>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 1, $r3, $r2, $r1);

        return;
    }

    protected void invokeClassGetDeclaredMethod()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GETDECLAREDMETHOD_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GETDECLAREDMETHOD_SIGNATURE>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 2, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeEnumOrdinal(char[])
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: char[];

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Ordinal>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] OrdinalSignature>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, r1, $r3, $r2);

        return;
    }

    public void invokeinterface(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        byte[] $r1, $r2, $r12, $r13;
        byte $b12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r11, $r14;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.ClassFile $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, i25, i26, $i27, $i28, $i30;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r10;
        char[] $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        i25 = 1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 4;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label01:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -71;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding constantPoolDeclaringClass()>();

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] signature(org.eclipse.jdt.internal.compiler.ClassFile)>($r6);

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,char[],char[],boolean)>($r5, $r7, $r8, 1);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        $r9 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i8 = lengthof $r9;

        i26 = $i8 - 1;

        goto label06;

     label02:
        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r11 = $r10[i26];

        $i9 = $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i9 == 8 goto label03;

        if $i9 != 7 goto label04;

     label03:
        i25 = i25 + 2;

        goto label05;

     label04:
        i25 = i25 + 1;

     label05:
        $i30 = (int) -1;

        i26 = i26 + $i30;

     label06:
        if i26 >= 0 goto label02;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $b12 = (byte) i25;

        $r12[$i10] = $b12;

        $r13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $r13[$i13] = 0;

        $r14 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i15 == 8 goto label07;

        if $i15 != 7 goto label08;

     label07:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i16 = 2 - i25;

        $i18 = $i17 + $i16;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i18;

        goto label10;

     label08:
        if $i15 != 6 goto label09;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i24 = $i23 - i25;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i24;

        goto label10;

     label09:
        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i20 = 1 - i25;

        $i22 = $i21 + $i20;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i22;

     label10:
        $i27 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i28 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i27 <= $i28 goto label11;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i19;

     label11:
        return;
    }

    public void invokeJavaLangAssertionErrorConstructor(int)
    {
        byte b1;
        int i0, $i3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        b1 = 1;

        r1 = (char[]) null;

        tableswitch(i0)
        {
            case 1: goto label7;
            case 2: goto label5;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label6;
            case 6: goto label8;
            case 7: goto label2;
            case 8: goto label4;
            case 9: goto label3;
            case 10: goto label1;
            case 11: goto label7;
            case 12: goto label7;
            default: goto label8;
        };

     label1:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] IntConstrSignature>;

        goto label8;

     label2:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] LongConstrSignature>;

        b1 = 2;

        goto label8;

     label3:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] FloatConstrSignature>;

        goto label8;

     label4:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DoubleConstrSignature>;

        b1 = 2;

        goto label8;

     label5:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] CharConstrSignature>;

        goto label8;

     label6:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] BooleanConstrSignature>;

        goto label8;

     label7:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ObjectConstrSignature>;

     label8:
        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangAssertionErrorConstantPoolName>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $i3 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i3, b1, 0, $r2, $r3, r1);

        return;
    }

    public void invokeJavaLangAssertionErrorDefaultConstructor()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangAssertionErrorConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DefaultConstructorSignature>;

        $i1 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 0, $r3, $r2, $r1);

        return;
    }

    public void invokeJavaLangClassDesiredAssertionStatus()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangClassConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DesiredAssertionStatus>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DesiredAssertionStatusSignature>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeJavaLangEnumvalueOf(org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangEnumConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfStringClassSignature>;

        $i1 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 2, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeJavaLangEnumValues(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r5;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r6;
        int $i1;
        char[] $r1, $r3, $r4, $r7, $r8;
        java.lang.String $r0;

        r5 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r6 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;

        $r0 = "()";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: char[] constantPoolName()>();

        $r4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: char[] concat(char[],char[])>($r1, $r3);

        $r7 = virtualinvoke r6.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: char[] constantPoolName()>();

        $r8 = <org.eclipse.jdt.internal.compiler.lookup.TypeConstants: char[] VALUES>;

        $i1 = (int) -72;

        virtualinvoke r5.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r7, $r8, $r4);

        return;
    }

    public void invokeJavaLangErrorConstructor()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangErrorConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringConstructorSignature>;

        $i1 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 0, $r3, $r2, $r1);

        return;
    }

    public void invokeJavaLangReflectConstructorNewInstance()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangReflectConstructorConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] NewInstance>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangReflectConstructorNewInstanceSignature>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 1, $r3, $r2, $r1);

        return;
    }

    protected void invokeJavaLangReflectFieldGetter(int)
    {
        byte b1;
        int i0, $i3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r1, r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        b1 = 1;

        tableswitch(i0)
        {
            case 2: goto label07;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label04;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label01;
            default: goto label09;
        };

     label01:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_INT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_INT_METHOD_SIGNATURE>;

        goto label10;

     label02:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_BYTE_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_BYTE_METHOD_SIGNATURE>;

        goto label10;

     label03:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_SHORT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_SHORT_METHOD_SIGNATURE>;

        goto label10;

     label04:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_LONG_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_LONG_METHOD_SIGNATURE>;

        b1 = 2;

        goto label10;

     label05:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_FLOAT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_FLOAT_METHOD_SIGNATURE>;

        goto label10;

     label06:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_DOUBLE_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_DOUBLE_METHOD_SIGNATURE>;

        b1 = 2;

        goto label10;

     label07:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_CHAR_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_CHAR_METHOD_SIGNATURE>;

        goto label10;

     label08:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_BOOLEAN_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_BOOLEAN_METHOD_SIGNATURE>;

        goto label10;

     label09:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_OBJECT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GET_OBJECT_METHOD_SIGNATURE>;

     label10:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVALANGREFLECTFIELD_CONSTANTPOOLNAME>;

        $i3 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i3, 1, b1, $r3, r1, r2);

        return;
    }

    protected void invokeJavaLangReflectFieldSetter(int)
    {
        byte b1;
        int i0, $i3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r1, r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        b1 = 2;

        tableswitch(i0)
        {
            case 2: goto label07;
            case 3: goto label02;
            case 4: goto label03;
            case 5: goto label08;
            case 6: goto label09;
            case 7: goto label04;
            case 8: goto label06;
            case 9: goto label05;
            case 10: goto label01;
            default: goto label09;
        };

     label01:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_INT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_INT_METHOD_SIGNATURE>;

        goto label10;

     label02:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_BYTE_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_BYTE_METHOD_SIGNATURE>;

        goto label10;

     label03:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_SHORT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_SHORT_METHOD_SIGNATURE>;

        goto label10;

     label04:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_LONG_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_LONG_METHOD_SIGNATURE>;

        b1 = 3;

        goto label10;

     label05:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_FLOAT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_FLOAT_METHOD_SIGNATURE>;

        goto label10;

     label06:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_DOUBLE_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_DOUBLE_METHOD_SIGNATURE>;

        b1 = 3;

        goto label10;

     label07:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_CHAR_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_CHAR_METHOD_SIGNATURE>;

        goto label10;

     label08:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_BOOLEAN_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_BOOLEAN_METHOD_SIGNATURE>;

        goto label10;

     label09:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_OBJECT_METHOD_NAME>;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] SET_OBJECT_METHOD_SIGNATURE>;

     label10:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVALANGREFLECTFIELD_CONSTANTPOOLNAME>;

        $i3 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i3, b1, 0, $r3, r1, r2);

        return;
    }

    public void invokeJavaLangReflectMethodInvoke()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVALANGREFLECTMETHOD_CONSTANTPOOLNAME>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] INVOKE_METHOD_METHOD_NAME>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] INVOKE_METHOD_METHOD_SIGNATURE>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 2, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeJavaUtilIteratorHasNext()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaUtilIteratorConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] HasNext>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] HasNextSignature>;

        $i1 = (int) -71;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeJavaUtilIteratorNext()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaUtilIteratorConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Next>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] NextSignature>;

        $i1 = (int) -71;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeNoClassDefFoundErrorStringConstructor()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangNoClassDefFoundErrorConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringConstructorSignature>;

        $i1 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 1, 0, $r3, $r2, $r1);

        return;
    }

    public void invokeObjectGetClass()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangObjectConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GetClass>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GetClassSignature>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r3, $r2, $r1);

        return;
    }

    public void invokespecial(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] $r12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r10, $r11, $r15;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.ClassFile $r6;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding $r14;
        org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] $r13;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, i19, $i20, $i21, i22, i23, i24, i25, $i26, i27, $i28, $i29, $i31;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r16, r17;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r18;
        char[] $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        i22 = 1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label01:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -73;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding constantPoolDeclaringClass()>();

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] signature(org.eclipse.jdt.internal.compiler.ClassFile)>($r6);

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,char[],char[],boolean)>($r5, $r7, $r8, 0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        $z0 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: boolean isConstructor()>();

        if $z0 == 0 goto label14;

        r17 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $z1 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isNestedType()>();

        if $z1 == 0 goto label13;

        $r12 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding[] syntheticEnclosingInstanceTypes()>();

        if $r12 == null goto label07;

        i23 = 0;

        i24 = lengthof $r12;

        goto label06;

     label02:
        $r16 = $r12[i23];

        $i21 = $r16.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i21 == 8 goto label03;

        if $i21 != 7 goto label04;

     label03:
        i22 = i22 + 2;

        goto label05;

     label04:
        i22 = i22 + 1;

     label05:
        i23 = i23 + 1;

     label06:
        if i23 < i24 goto label02;

     label07:
        $r13 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding[] syntheticOuterLocalVariables()>();

        if $r13 == null goto label13;

        i25 = 0;

        i19 = lengthof $r13;

        goto label12;

     label08:
        $r14 = $r13[i25];

        $r15 = $r14.<org.eclipse.jdt.internal.compiler.lookup.SyntheticArgumentBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i20 = $r15.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i20 == 8 goto label09;

        if $i20 != 7 goto label10;

     label09:
        i22 = i22 + 2;

        goto label11;

     label10:
        i22 = i22 + 1;

     label11:
        i25 = i25 + 1;

     label12:
        if i25 < i19 goto label08;

     label13:
        $z2 = virtualinvoke r17.<org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding: boolean isEnum()>();

        if $z2 == 0 goto label14;

        i22 = i22 + 2;

     label14:
        $r18 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i26 = lengthof $r18;

        i27 = $i26 - 1;

        goto label19;

     label15:
        $r9 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r10 = $r9[i27];

        $i8 = $r10.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i8 == 8 goto label16;

        if $i8 != 7 goto label17;

     label16:
        i22 = i22 + 2;

        goto label18;

     label17:
        i22 = i22 + 1;

     label18:
        $i31 = (int) -1;

        i27 = i27 + $i31;

     label19:
        if i27 >= 0 goto label15;

        $r11 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i9 = $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i9 == 8 goto label20;

        if $i9 != 7 goto label21;

     label20:
        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i10 = 2 - i22;

        $i12 = $i11 + $i10;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i12;

        goto label23;

     label21:
        if $i9 != 6 goto label22;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i18 = $i17 - i22;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i18;

        goto label23;

     label22:
        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i14 = 1 - i22;

        $i16 = $i15 + $i14;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i16;

     label23:
        $i28 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i29 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i28 <= $i29 goto label24;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i13;

     label24:
        return;
    }

    public void invokestatic(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r11, $r12;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.ClassFile $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, $i22, $i23, $i25;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r10;
        char[] $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        i20 = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label01:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -72;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding constantPoolDeclaringClass()>();

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] signature(org.eclipse.jdt.internal.compiler.ClassFile)>($r6);

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,char[],char[],boolean)>($r5, $r7, $r8, 0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        $r9 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i8 = lengthof $r9;

        i21 = $i8 - 1;

        goto label06;

     label02:
        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r11 = $r10[i21];

        $i9 = $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i9 == 8 goto label03;

        if $i9 != 7 goto label04;

     label03:
        i20 = i20 + 2;

        goto label05;

     label04:
        i20 = i20 + 1;

     label05:
        $i25 = (int) -1;

        i21 = i21 + $i25;

     label06:
        if i21 >= 0 goto label02;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i10 = $r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i10 == 8 goto label07;

        if $i10 != 7 goto label08;

     label07:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i11 = 2 - i20;

        $i13 = $i12 + $i11;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i13;

        goto label10;

     label08:
        if $i10 != 6 goto label09;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i19 = $i18 - i20;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i19;

        goto label10;

     label09:
        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i15 = 1 - i20;

        $i17 = $i16 + $i15;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i17;

     label10:
        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i22 <= $i23 goto label11;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i14;

     label11:
        return;
    }

    public void invokeStringConcatenationAppendForType(int)
    {
        long $l1, $l3, $l5, $l7, $l9, $l11, $l13, $l15;
        byte $b2, $b4, $b6, $b8, $b10, $b12, $b14, $b16, b17;
        int i0, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i27;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        char[] r0, r2, r3;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        b17 = 1;

        r2 = (char[]) null;

        r0 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Append>;

        r3 = (char[]) null;

        tableswitch(i0)
        {
            case 0: goto label15;
            case 1: goto label15;
            case 2: goto label11;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label13;
            case 6: goto label19;
            case 7: goto label03;
            case 8: goto label08;
            case 9: goto label06;
            case 10: goto label01;
            case 11: goto label17;
            case 12: goto label15;
            default: goto label19;
        };

     label01:
        $l11 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b12 = $l11 cmp 3211264L;

        $i18 = (int) $b12;

        if $i18 < 0 goto label02;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendIntSignature>;

        goto label19;

     label02:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendIntSignature>;

        goto label19;

     label03:
        $l7 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b8 = $l7 cmp 3211264L;

        $i19 = (int) $b8;

        if $i19 < 0 goto label04;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendLongSignature>;

        goto label05;

     label04:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendLongSignature>;

     label05:
        b17 = 2;

        goto label19;

     label06:
        $l3 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b4 = $l3 cmp 3211264L;

        $i20 = (int) $b4;

        if $i20 < 0 goto label07;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendFloatSignature>;

        goto label19;

     label07:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendFloatSignature>;

        goto label19;

     label08:
        $l5 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b6 = $l5 cmp 3211264L;

        $i21 = (int) $b6;

        if $i21 < 0 goto label09;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendDoubleSignature>;

        goto label10;

     label09:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendDoubleSignature>;

     label10:
        b17 = 2;

        goto label19;

     label11:
        $l13 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b14 = $l13 cmp 3211264L;

        $i22 = (int) $b14;

        if $i22 < 0 goto label12;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendCharSignature>;

        goto label19;

     label12:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendCharSignature>;

        goto label19;

     label13:
        $l9 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b10 = $l9 cmp 3211264L;

        $i23 = (int) $b10;

        if $i23 < 0 goto label14;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendBooleanSignature>;

        goto label19;

     label14:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendBooleanSignature>;

        goto label19;

     label15:
        $l15 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b16 = $l15 cmp 3211264L;

        $i24 = (int) $b16;

        if $i24 < 0 goto label16;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendObjectSignature>;

        goto label19;

     label16:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendObjectSignature>;

        goto label19;

     label17:
        $l1 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b2 = $l1 cmp 3211264L;

        $i25 = (int) $b2;

        if $i25 < 0 goto label18;

        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBuilderAppendStringSignature>;

        goto label19;

     label18:
        r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringBufferAppendStringSignature>;

     label19:
        $i27 = (int) -74;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i27, b17, 1, r2, r0, r3);

        return;
    }

    public void invokeStringConcatenationDefaultConstructor()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        long $l0;
        byte $b1;
        int $i2, $i4;
        char[] $r1, $r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b1 = $l0 cmp 3211264L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

     label1:
        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] DefaultConstructorSignature>;

        $i4 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i4, 0, 0, r3, $r2, $r1);

        return;
    }

    public void invokeStringConcatenationStringConstructor()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        long $l0;
        byte $b1;
        int $i2, $i4;
        char[] $r1, $r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b1 = $l0 cmp 3211264L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

     label1:
        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Init>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] StringConstructorSignature>;

        $i4 = (int) -73;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i4, 1, 0, r3, $r2, $r1);

        return;
    }

    public void invokeStringConcatenationToString()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        long $l0;
        byte $b1;
        int $i2, $i4;
        char[] $r1, $r2, r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b1 = $l0 cmp 3211264L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label1;

        r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

     label1:
        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ToString>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ToStringSignature>;

        $i4 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i4, 0, 1, r3, $r2, $r1);

        return;
    }

    public void invokeStringIntern()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] Intern>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] InternSignature>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r3, $r2, $r1);

        return;
    }

    public void invokeStringValueOf(int)
    {
        byte b1;
        int i0, $i3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        b1 = 1;

        r1 = (char[]) null;

        tableswitch(i0)
        {
            case 0: goto label7;
            case 1: goto label7;
            case 2: goto label5;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label6;
            case 6: goto label8;
            case 7: goto label2;
            case 8: goto label4;
            case 9: goto label3;
            case 10: goto label1;
            case 11: goto label7;
            case 12: goto label7;
            default: goto label8;
        };

     label1:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfIntSignature>;

        goto label8;

     label2:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfLongSignature>;

        b1 = 2;

        goto label8;

     label3:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfFloatSignature>;

        goto label8;

     label4:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfDoubleSignature>;

        b1 = 2;

        goto label8;

     label5:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfCharSignature>;

        goto label8;

     label6:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfBooleanSignature>;

        goto label8;

     label7:
        r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOfObjectSignature>;

     label8:
        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringConstantPoolName>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ValueOf>;

        $i3 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i3, b1, 1, $r2, $r3, r1);

        return;
    }

    public void invokeSystemArraycopy()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangSystemConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ArrayCopy>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] ArrayCopySignature>;

        $i1 = (int) -72;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 5, 0, $r3, $r2, $r1);

        return;
    }

    public void invokeThrowableGetMessage()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i1;
        char[] $r1, $r2, $r3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangThrowableConstantPoolName>;

        $r2 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GetMessage>;

        $r1 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] GetMessageSignature>;

        $i1 = (int) -74;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invoke(int,int,int,char[],char[],char[])>($i1, 0, 1, $r3, $r2, $r1);

        return;
    }

    public void invokevirtual(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r5, $r11, $r12;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding r3;
        org.eclipse.jdt.internal.compiler.ClassFile $r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, $i22, $i23, $i25;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] $r9, $r10;
        char[] $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        i20 = 1;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label01;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label01:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -74;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding constantPoolDeclaringClass()>();

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] selector>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ClassFile classFile>;

        $r8 = virtualinvoke r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: char[] signature(org.eclipse.jdt.internal.compiler.ClassFile)>($r6);

        $i7 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForMethod(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,char[],char[],boolean)>($r5, $r7, $r8, 0);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i7);

        $r9 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $i8 = lengthof $r9;

        i21 = $i8 - 1;

        goto label06;

     label02:
        $r10 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding[] parameters>;

        $r11 = $r10[i21];

        $i9 = $r11.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i9 == 8 goto label03;

        if $i9 != 7 goto label04;

     label03:
        i20 = i20 + 2;

        goto label05;

     label04:
        i20 = i20 + 1;

     label05:
        $i25 = (int) -1;

        i21 = i21 + $i25;

     label06:
        if i21 >= 0 goto label02;

        $r12 = r3.<org.eclipse.jdt.internal.compiler.lookup.MethodBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding returnType>;

        $i10 = $r12.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i10 == 8 goto label07;

        if $i10 != 7 goto label08;

     label07:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i11 = 2 - i20;

        $i13 = $i12 + $i11;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i13;

        goto label10;

     label08:
        if $i10 != 6 goto label09;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i19 = $i18 - i20;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i19;

        goto label10;

     label09:
        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i15 = 1 - i20;

        $i17 = $i16 + $i15;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i17;

     label10:
        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i22 <= $i23 goto label11;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i14;

     label11:
        return;
    }

    public void ior()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -128;

        return;
    }

    public void irem()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 112;

        return;
    }

    public void ireturn()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -84;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i8;

        return;
    }

    public boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.Scope, int, org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r0;
        long $l0, $l1, $l11, $l12, $l13, $l15, $l16, $l17;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r3;
        long[] r5, $r6;
        byte $b2, $b14, $b18;
        int i3, $i4, $i5, i6, $i7, $i8, $i9, $i10, $i20;
        long[][] $r4;
        org.eclipse.jdt.internal.compiler.lookup.Scope r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        i3 := @parameter1: int;

        r0 := @parameter2: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $l0 = r0.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: long tagBits>;

        $l1 = $l0 & 1024L;

        $b2 = $l1 cmp 0L;

        if $b2 == 0 goto label1;

        return 1;

     label1:
        $i20 = (int) -1;

        if i3 != $i20 goto label2;

        return 0;

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int id>;

        $i4 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxFieldCount>;

        i6 = $i5 + $i4;

        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.Scope: org.eclipse.jdt.internal.compiler.lookup.MethodScope methodScope()>();

        if i6 >= 64 goto label4;

        $r6 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: long[] definiteInits>;

        $l16 = $r6[i3];

        $l15 = 1L << i6;

        $l17 = $l16 & $l15;

        $b18 = $l17 cmp 0L;

        if $b18 == 0 goto label3;

        return 1;

     label3:
        return 0;

     label4:
        $r4 = $r3.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: long[][] extraDefiniteInits>;

        r5 = $r4[i3];

        if r5 != null goto label5;

        return 0;

     label5:
        $i7 = i6 / 64;

        $i8 = $i7 - 1;

        $i9 = lengthof r5;

        if $i8 < $i9 goto label6;

        return 0;

     label6:
        $l12 = r5[$i8];

        $i10 = i6 % 64;

        $l11 = 1L << $i10;

        $l13 = $l12 & $l11;

        $b14 = $l13 cmp 0L;

        if $b14 == 0 goto label7;

        return 1;

     label7:
        return 0;
    }

    public void ishl()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 120;

        return;
    }

    public void ishr()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 122;

        return;
    }

    public void istore(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b13;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i3 > i2 goto label1;

        $i23 = i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i23;

     label1:
        if i2 <= 255 goto label3;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i16 = $i14 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i15 = lengthof $r4;

        if $i16 < $i15 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i18 = $i17 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i18;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i20 = $i19 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i20;

        $r5[$i19] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r6[$i21] = 54;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label5;

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 54;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $b13 = (byte) i2;

        $r3[$i11] = $b13;

     label5:
        return;
    }

    public void istore_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 != 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 1;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 59;

        return;
    }

    public void istore_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 1 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 60;

        return;
    }

    public void istore_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 61;

        return;
    }

    public void istore_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 > 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 62;

        return;
    }

    public void isub()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 100;

        return;
    }

    public void iushr()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 124;

        return;
    }

    public void ixor()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -126;

        return;
    }

    public final void jsr(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $z0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void jsr_w(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)>(r3);

        return;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -88;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branch()>();

        return;
    }

    public final void jsr_w(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r3;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -55;

        virtualinvoke r3.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: void branchWide()>();

        return;
    }

    public void l2d()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -118;

        return;
    }

    public void l2f()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -119;

        return;
    }

    public void l2i()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -120;

        return;
    }

    public void ladd()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 97;

        return;
    }

    public void laload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 47;

        return;
    }

    public void land()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 127;

        return;
    }

    public void lastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 4;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 80;

        return;
    }

    public void lcmp()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -108;

        return;
    }

    public void lconst_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 9;

        return;
    }

    public void lconst_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i10;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 10;

        return;
    }

    public void ldc(float)
    {
        byte[] $r2, $r3, $r4, $r5, $r6;
        byte $b14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        float f0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        f0 := @parameter0: float;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndex(float)>(f0);

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = $i1 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i2;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label1;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i22;

     label1:
        if $i0 <= 255 goto label3;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i15 + 2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = lengthof $r5;

        if $i17 < $i16 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i19 = $i18 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i19;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i21;

        $r6[$i20] = 19;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i0);

        goto label5;

     label3:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i5 + 1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = lengthof $r2;

        if $i7 < $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i9 = $i8 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i9;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $r3[$i10] = 18;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $b14 = (byte) $i0;

        $r4[$i12] = $b14;

     label5:
        return;
    }

    public void ldc(int)
    {
        byte[] $r2, $r3, $r4, $r5, $r6;
        byte $b15;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i1 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndex(int)>(i0);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i3;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i5 <= $i4 goto label1;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i23;

     label1:
        if $i1 <= 255 goto label3;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i18 = $i16 + 2;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i17 = lengthof $r5;

        if $i18 < $i17 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i20 = $i19 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i20;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $r6[$i21] = 19;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i1);

        goto label5;

     label3:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i6 + 1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = lengthof $r2;

        if $i8 < $i7 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i10 = $i9 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i10;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $r3[$i11] = 18;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i14;

        $b15 = (byte) $i1;

        $r4[$i13] = $b15;

     label5:
        return;
    }

    public void ldc(java.lang.String)
    {
        byte[] $r4, $r6, $r8, $r9, $r11, $r12, r14, r15;
        byte $b16, $b19, $b23, $b27, $b30, $b32, $b41, $b44, $b48, $b52, $b55, $b57;
        short $s18, $s29, $s43, $s54;
        java.lang.String r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r2, $r10, $r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9, $i10, $i11, $i12, $i13, $i14, $i15, $i20, $i21, $i22, $i24, $i25, $i26, $i31, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i45, $i46, $i47, $i49, $i50, $i51, $i56, $i58, $i59, i60, i61, i63, i64, i65, i66, i68, i69, i70, $i72, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i82, $i84, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i94;
        char $c17, $c28, $c42, $c53, c62, c67;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r3, $r5, $r7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: java.lang.String;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForLdc(char[])>($r2);

        if $i1 <= 0 goto label01;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldcForIndex(int,char[])>($i1, $r2);

        goto label18;

     label01:
        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = i0;

        i60 = 0;

        i61 = 0;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        $i3 = $i2 + 100;

        $i72 = (int) 65535;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i3, $i72);

        r14 = newarray (byte)[$i4];

        goto label07;

     label02:
        c62 = $r2[i60];

        $i37 = i61 + 3;

        $i36 = lengthof r14;

        if $i37 <= $i36 goto label03;

        $r12 = r14;

        $i58 = $i36 + 100;

        $i74 = (int) 65535;

        $i59 = staticinvoke <java.lang.Math: int min(int,int)>($i58, $i74);

        $r11 = newarray (byte)[$i59];

        r14 = $r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, 0, $r11, 0, i61);

     label03:
        $i75 = (int) c62;

        if $i75 < 1 goto label04;

        $i76 = (int) c62;

        if $i76 > 127 goto label04;

        $i56 = i61;

        i61 = i61 + 1;

        $b57 = (byte) c62;

        r14[$i56] = $b57;

        goto label06;

     label04:
        $i77 = (int) c62;

        if $i77 <= 2047 goto label05;

        i63 = i61 + 1;

        $i78 = (int) c62;

        $i45 = $i78 >> 12;

        $i46 = $i45 & 15;

        $i47 = 224 | $i46;

        $b48 = (byte) $i47;

        r14[i61] = $b48;

        i64 = i63 + 1;

        $i79 = (int) c62;

        $i49 = $i79 >> 6;

        $i50 = $i49 & 63;

        $i51 = 128 | $i50;

        $b52 = (byte) $i51;

        r14[i63] = $b52;

        i61 = i64 + 1;

        $c53 = c62 & 63;

        $s54 = 128 | $c53;

        $b55 = (byte) $s54;

        r14[i64] = $b55;

        goto label06;

     label05:
        i65 = i61 + 1;

        $i80 = (int) c62;

        $i38 = $i80 >> 6;

        $i39 = $i38 & 31;

        $i40 = 192 | $i39;

        $b41 = (byte) $i40;

        r14[i61] = $b41;

        i61 = i65 + 1;

        $c42 = c62 & 63;

        $s43 = 128 | $c42;

        $b44 = (byte) $s43;

        r14[i65] = $b44;

     label06:
        i60 = i60 + 1;

     label07:
        $i82 = (int) 65532;

        if i61 >= $i82 goto label08;

        if i60 < $i2 goto label02;

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void newStringContatenation()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

        $r13 = newarray (char)[i60];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r13, 0, i60);

        $r4 = newarray (byte)[i61];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r14, 0, $r4, 0, i61);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i5 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndex(char[],byte[])>($r13, $r4);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldcForIndex(int,char[])>($i5, $r13);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationStringConstructor()>();

        goto label17;

     label09:
        i66 = 0;

        $i6 = $i2 - i60;

        $i7 = $i6 + 100;

        $i84 = (int) 65535;

        $i8 = staticinvoke <java.lang.Math: int min(int,int)>($i7, $i84);

        r15 = newarray (byte)[$i8];

        i9 = i60;

        goto label15;

     label10:
        c67 = $r2[i60];

        $i12 = i66 + 3;

        $i11 = lengthof r15;

        if $i12 <= $i11 goto label11;

        $r9 = r15;

        $i33 = $i11 + 100;

        $i86 = (int) 65535;

        $i34 = staticinvoke <java.lang.Math: int min(int,int)>($i33, $i86);

        $r8 = newarray (byte)[$i34];

        r15 = $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r9, 0, $r8, 0, i66);

     label11:
        $i87 = (int) c67;

        if $i87 < 1 goto label12;

        $i88 = (int) c67;

        if $i88 > 127 goto label12;

        $i31 = i66;

        i66 = i66 + 1;

        $b32 = (byte) c67;

        r15[$i31] = $b32;

        goto label14;

     label12:
        $i89 = (int) c67;

        if $i89 <= 2047 goto label13;

        i68 = i66 + 1;

        $i90 = (int) c67;

        $i20 = $i90 >> 12;

        $i21 = $i20 & 15;

        $i22 = 224 | $i21;

        $b23 = (byte) $i22;

        r15[i66] = $b23;

        i69 = i68 + 1;

        $i91 = (int) c67;

        $i24 = $i91 >> 6;

        $i25 = $i24 & 63;

        $i26 = 128 | $i25;

        $b27 = (byte) $i26;

        r15[i68] = $b27;

        i66 = i69 + 1;

        $c28 = c67 & 63;

        $s29 = 128 | $c28;

        $b30 = (byte) $s29;

        r15[i69] = $b30;

        goto label14;

     label13:
        i70 = i66 + 1;

        $i92 = (int) c67;

        $i13 = $i92 >> 6;

        $i14 = $i13 & 31;

        $i15 = 192 | $i14;

        $b16 = (byte) $i15;

        r15[i66] = $b16;

        i66 = i70 + 1;

        $c17 = c67 & 63;

        $s18 = 128 | $c17;

        $b19 = (byte) $s18;

        r15[i70] = $b19;

     label14:
        i60 = i60 + 1;

     label15:
        $i94 = (int) 65532;

        if i66 >= $i94 goto label16;

        if i60 < $i2 goto label10;

     label16:
        $i35 = i60 - i9;

        $r10 = newarray (char)[$i35];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i9, $r10, 0, $i35);

        $r6 = newarray (byte)[i66];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r15, 0, $r6, 0, i66);

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i10 = virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndex(char[],byte[])>($r10, $r6);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldcForIndex(int,char[])>($i10, $r10);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationAppendForType(int)>(11);

     label17:
        if i60 < $i2 goto label09;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringConcatenationToString()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void invokeStringIntern()>();

     label18:
        return;
    }

    public void ldc(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        byte[] $r3, $r4, $r5, $r6, $r7;
        byte $b14;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i0 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r1);

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = $i1 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i2;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label1;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i22;

     label1:
        if $i0 <= 255 goto label3;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i15 + 2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = lengthof $r6;

        if $i17 < $i16 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i19 = $i18 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i19;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i21;

        $r7[$i20] = 19;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i0);

        goto label5;

     label3:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i5 + 1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = lengthof $r3;

        if $i7 < $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i9 = $i8 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i9;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $r4[$i10] = 18;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $b14 = (byte) $i0;

        $r5[$i12] = $b14;

     label5:
        return;
    }

    public void ldc2_w(double)
    {
        byte[] $r2, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        double d0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        d0 := @parameter0: double;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i0 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndex(double)>(d0);

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = $i1 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i2;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label1;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i12;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i5 + 2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = lengthof $r2;

        if $i7 < $i6 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i9;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $r3[$i10] = 20;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i0);

        return;
    }

    public void ldc2_w(long)
    {
        byte[] $r2, $r3;
        long l0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        l0 := @parameter0: long;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i1 = virtualinvoke $r1.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndex(long)>(l0);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = $i2 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i3;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i5 <= $i4 goto label1;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i13;

     label1:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i6 + 2;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = lengthof $r2;

        if $i8 < $i7 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i10;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $r3[$i11] = 20;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i1);

        return;
    }

    public void ldcForIndex(int, char[])
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        byte $b14;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i4 := @parameter0: int;

        r6 := @parameter1: char[];

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i22;

     label1:
        if i4 <= 255 goto label3;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i15 + 2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = lengthof $r4;

        if $i17 < $i16 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i19 = $i18 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i19;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i21;

        $r5[$i20] = 19;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i4);

        goto label5;

     label3:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i5 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = lengthof $r1;

        if $i7 < $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i9 = $i8 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i9;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $r2[$i10] = 18;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $b14 = (byte) i4;

        $r3[$i12] = $b14;

     label5:
        return;
    }

    public void ldiv()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 109;

        return;
    }

    public void lload(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b16;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i3 = i2 + 1;

        if $i4 > $i3 goto label1;

        $i27 = i2 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i27;

     label1:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i6 <= $i5 goto label2;

        $i26 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i26;

     label2:
        if i2 <= 255 goto label4;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i19 = $i17 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i18 = lengthof $r4;

        if $i19 < $i18 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i21 = $i20 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i21;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i23 = $i22 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i23;

        $r5[$i22] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i24 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i25 = $i24 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i25;

        $r6[$i24] = 22;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label6;

     label4:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i7 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = lengthof $r1;

        if $i9 < $i8 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label5:
        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i11 = $i10 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i11;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $r2[$i12] = 22;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i15 = $i14 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i15;

        $b16 = (byte) i2;

        $r3[$i14] = $b16;

     label6:
        return;
    }

    public void lload_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 30;

        return;
    }

    public void lload_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 31;

        return;
    }

    public void lload_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 4 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 32;

        return;
    }

    public void lload_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 5 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 5;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i4 <= $i3 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = 33;

        return;
    }

    public void lmul()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 105;

        return;
    }

    public void lneg()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 117;

        return;
    }

    public final void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;
        int $i0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int)>($r2, $i0);

        return;
    }

    public final void load(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;
        int $i0, i1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        i1 := @parameter1: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i0)
        {
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label25;
            case 7: goto label13;
            case 8: goto label19;
            case 9: goto label07;
            case 10: goto label01;
            default: goto label25;
        };

     label01:
        tableswitch(i1)
        {
            case 0: goto label02;
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            default: goto label06;
        };

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload_0()>();

        goto label31;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload_1()>();

        goto label31;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload_2()>();

        goto label31;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload_3()>();

        goto label31;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iload(int)>(i1);

        goto label31;

     label07:
        tableswitch(i1)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label10;
            case 3: goto label11;
            default: goto label12;
        };

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fload_0()>();

        goto label31;

     label09:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fload_1()>();

        goto label31;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fload_2()>();

        goto label31;

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fload_3()>();

        goto label31;

     label12:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fload(int)>(i1);

        goto label31;

     label13:
        tableswitch(i1)
        {
            case 0: goto label14;
            case 1: goto label15;
            case 2: goto label16;
            case 3: goto label17;
            default: goto label18;
        };

     label14:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lload_0()>();

        goto label31;

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lload_1()>();

        goto label31;

     label16:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lload_2()>();

        goto label31;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lload_3()>();

        goto label31;

     label18:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lload(int)>(i1);

        goto label31;

     label19:
        tableswitch(i1)
        {
            case 0: goto label20;
            case 1: goto label21;
            case 2: goto label22;
            case 3: goto label23;
            default: goto label24;
        };

     label20:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dload_0()>();

        goto label31;

     label21:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dload_1()>();

        goto label31;

     label22:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dload_2()>();

        goto label31;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dload_3()>();

        goto label31;

     label24:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dload(int)>(i1);

        goto label31;

     label25:
        tableswitch(i1)
        {
            case 0: goto label26;
            case 1: goto label27;
            case 2: goto label28;
            case 3: goto label29;
            default: goto label30;
        };

     label26:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_0()>();

        goto label31;

     label27:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_1()>();

        goto label31;

     label28:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_2()>();

        goto label31;

     label29:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload_3()>();

        goto label31;

     label30:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void aload(int)>(i1);

     label31:
        return;
    }

    public void 'lookupswitch'(org.eclipse.jdt.internal.compiler.codegen.CaseLabel, int[], int[], org.eclipse.jdt.internal.compiler.codegen.CaseLabel[])
    {
        byte[] $r5, $r6, $r7, $r8;
        org.eclipse.jdt.internal.compiler.codegen.CaseLabel[] r3;
        int[] r1, r9;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, i20, i21, i22, $i24;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.CaseLabel r2, $r4, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CaseLabel;

        r1 := @parameter1: int[];

        r9 := @parameter2: int[];

        r3 := @parameter3: org.eclipse.jdt.internal.compiler.codegen.CaseLabel[];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        i2 = lengthof r1;

        i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void placeInstruction()>();

        i20 = 0;

        goto label2;

     label1:
        $r4 = r3[i20];

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void placeInstruction()>();

        i20 = i20 + 1;

     label2:
        if i20 < i2 goto label1;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r5;

        if $i5 < $i4 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r6[$i8] = -85;

        $i10 = i3 & 3;

        i21 = 3 - $i10;

        goto label6;

     label4:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = lengthof $r7;

        if $i12 < $i11 goto label5;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label5:
        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i14;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i16;

        $r8[$i15] = 0;

        $i24 = (int) -1;

        i21 = i21 + $i24;

     label6:
        if i21 > 0 goto label4;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void branch()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int)>(i2);

        i22 = 0;

        goto label8;

     label7:
        $i17 = r9[i22];

        $i18 = r1[$i17];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int)>($i18);

        $i19 = r9[i22];

        $r10 = r3[$i19];

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void branch()>();

        i22 = i22 + 1;

     label8:
        if i22 < i2 goto label7;

        return;
    }

    public void lor()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -127;

        return;
    }

    public void lrem()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 113;

        return;
    }

    public void lreturn()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -83;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i8;

        return;
    }

    public void lshl()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 121;

        return;
    }

    public void lshr()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 123;

        return;
    }

    public void lstore(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b14;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i2 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        $i3 = i2 + 1;

        if $i4 > $i3 goto label1;

        $i24 = i2 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = $i24;

     label1:
        if i2 <= 255 goto label3;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i15 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = lengthof $r4;

        if $i17 < $i16 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i19 = $i18 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i19;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i21 = $i20 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i21;

        $r5[$i20] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i23 = $i22 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i23;

        $r6[$i22] = 55;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i2);

        goto label5;

     label3:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i5 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = lengthof $r1;

        if $i7 < $i6 goto label4;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label4:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i9 = $i8 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i9;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $r2[$i10] = 55;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $b14 = (byte) i2;

        $r3[$i12] = $b14;

     label5:
        return;
    }

    public void lstore_0()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 2 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 2;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 63;

        return;
    }

    public void lstore_1()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 3 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 3;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 64;

        return;
    }

    public void lstore_2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 4 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 4;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 65;

        return;
    }

    public void lstore_3()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        if $i2 >= 5 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals> = 5;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $r2[$i7] = 66;

        return;
    }

    public void lsub()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 101;

        return;
    }

    public void lushr()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 125;

        return;
    }

    public void lxor()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -125;

        return;
    }

    public void monitorenter()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -62;

        return;
    }

    public void monitorexit()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -61;

        return;
    }

    public void multianewarray(org.eclipse.jdt.internal.compiler.lookup.TypeBinding, int)
    {
        byte[] $r1, $r2, $r5;
        byte $b14;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        i0 := @parameter1: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = 1 - i0;

        $i3 = $i2 + $i1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 3;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -59;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i11 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i12 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i13;

        $b14 = (byte) i0;

        $r5[$i12] = $b14;

        return;
    }

    public void new_(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i12;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -69;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $i11 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        return;
    }

    public void 'newarray'(int)
    {
        byte[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        byte $b10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i9 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $r2[$i5] = -68;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $b10 = (byte) i9;

        $r3[$i7] = $b10;

        return;
    }

    public void newArray(org.eclipse.jdt.internal.compiler.lookup.ArrayBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1;
        int $i0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.ArrayBinding;

        $r1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding elementsType()>();

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i0)
        {
            case 2: goto label05;
            case 3: goto label02;
            case 4: goto label04;
            case 5: goto label03;
            case 6: goto label09;
            case 7: goto label06;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label01;
            default: goto label09;
        };

     label01:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(10);

        goto label10;

     label02:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(8);

        goto label10;

     label03:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(4);

        goto label10;

     label04:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(9);

        goto label10;

     label05:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(5);

        goto label10;

     label06:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(11);

        goto label10;

     label07:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(6);

        goto label10;

     label08:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void 'newarray'(int)>(7);

        goto label10;

     label09:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void anewarray(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r1);

     label10:
        return;
    }

    public void newJavaLangAssertionError()
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i12;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -69;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangAssertionErrorConstantPoolName>;

        $i11 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        return;
    }

    public void newJavaLangError()
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i12;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -69;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangErrorConstantPoolName>;

        $i11 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        return;
    }

    public void newNoClassDefFoundError()
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r3;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i12;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -69;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangNoClassDefFoundErrorConstantPoolName>;

        $i11 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i11);

        return;
    }

    public void newStringContatenation()
    {
        byte[] $r1, $r2;
        long $l11;
        byte $b12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i13, $i14, $i15, $i16;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r3, $r5;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4, $r6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i15;

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -69;

        $l11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel>;

        $b12 = $l11 cmp 3211264L;

        $i16 = (int) $b12;

        if $i16 < 0 goto label3;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBuilderConstantPoolName>;

        $i14 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i14);

        goto label4;

     label3:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangStringBufferConstantPoolName>;

        $i13 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i13);

     label4:
        return;
    }

    public void newWrapperFor(int)
    {
        byte[] $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        char[] $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19;
        org.eclipse.jdt.internal.compiler.codegen.ConstantPool $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i11 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label01;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i21;

     label01:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i4 + 2;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = lengthof $r1;

        if $i6 < $i5 goto label02;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label02:
        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i8;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i10 = $i9 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i10;

        $r2[$i9] = -69;

        tableswitch(i11)
        {
            case 2: goto label06;
            case 3: goto label05;
            case 4: goto label09;
            case 5: goto label04;
            case 6: goto label11;
            case 7: goto label10;
            case 8: goto label08;
            case 9: goto label07;
            case 10: goto label03;
            default: goto label12;
        };

     label03:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangIntegerConstantPoolName>;

        $i12 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r3);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i12);

        goto label12;

     label04:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r13 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangBooleanConstantPoolName>;

        $i17 = virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r13);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i17);

        goto label12;

     label05:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r17 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangByteConstantPoolName>;

        $i19 = virtualinvoke $r18.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r17);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i19);

        goto label12;

     label06:
        $r20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r19 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangCharacterConstantPoolName>;

        $i20 = virtualinvoke $r20.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r19);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i20);

        goto label12;

     label07:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangFloatConstantPoolName>;

        $i13 = virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r5);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i13);

        goto label12;

     label08:
        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangDoubleConstantPoolName>;

        $i14 = virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r7);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i14);

        goto label12;

     label09:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r15 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangShortConstantPoolName>;

        $i18 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r15);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i18);

        goto label12;

     label10:
        $r10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r9 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangLongConstantPoolName>;

        $i15 = virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r9);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i15);

        goto label12;

     label11:
        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ConstantPool constantPool>;

        $r11 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JavaLangVoidConstantPoolName>;

        $i16 = virtualinvoke $r12.<org.eclipse.jdt.internal.compiler.codegen.ConstantPool: int literalIndexForType(char[])>($r11);

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>($i16);

     label12:
        return;
    }

    public void 'nop'()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 0;

        return;
    }

    public void optimizeBranch(int, org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r2, r4;
        int[] $r3, $r6;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9, i10, i11, i12, $i13;
        boolean $z0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.CaseLabel $r5;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] $r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        r4 := @parameter1: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        i8 = 0;

        goto label8;

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.BranchLabel[] labels>;

        r2 = $r1[i8];

        $i1 = r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position>;

        if i0 != $i1 goto label7;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position> = $i2;

        $z0 = r2 instanceof org.eclipse.jdt.internal.compiler.codegen.CaseLabel;

        if $z0 == 0 goto label4;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r5 = (org.eclipse.jdt.internal.compiler.codegen.CaseLabel) r2;

        $i4 = $r5.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: int instructionPosition>;

        i9 = $i5 - $i4;

        $r6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int[] forwardReferences()>();

        i10 = 0;

        $i6 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int forwardReferenceCount()>();

        goto label3;

     label2:
        i7 = $r6[i10];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int,int)>(i7, i9);

        i10 = i10 + 1;

     label3:
        if i10 < $i6 goto label2;

        goto label7;

     label4:
        $r3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int[] forwardReferences()>();

        i11 = 0;

        $i3 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int forwardReferenceCount()>();

        goto label6;

     label5:
        i12 = $r3[i11];

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writePosition(org.eclipse.jdt.internal.compiler.codegen.BranchLabel,int)>(r4, i12);

        i11 = i11 + 1;

     label6:
        if i11 < $i3 goto label5;

     label7:
        i8 = i8 + 1;

     label8:
        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels>;

        if i8 < $i13 goto label1;

        return;
    }

    public void pop()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 87;

        return;
    }

    public void pop2()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 88;

        return;
    }

    public void pushOnStack(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i1 <= $i2 goto label1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i3;

     label1:
        return;
    }

    public void pushExceptionOnStack(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = 1;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i1 <= $i0 goto label1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i2;

     label1:
        return;
    }

    public void putfield(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r0;
        byte b2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r3, $r6;
        int $i0, $i1;
        char[] $r5;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        b2 = 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i0 == 8 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i1 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i1 != 7 goto label2;

     label1:
        b2 = 2;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(-75, b2, $r4, $r5, $r6);

        return;
    }

    public void putstatic(org.eclipse.jdt.internal.compiler.lookup.FieldBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r4;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        org.eclipse.jdt.internal.compiler.lookup.FieldBinding r0;
        byte b2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1, $r3, $r6;
        int $i0, $i1;
        char[] $r5;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        b2 = 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i0 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i0 == 8 goto label1;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i1 = $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        if $i1 != 7 goto label2;

     label1:
        b2 = 2;

     label2:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding declaringClass>;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: char[] name>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.lookup.FieldBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        specialinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void generateFieldAccess(byte,int,org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding,char[],org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>(-77, b2, $r4, $r5, $r6);

        return;
    }

    public void record(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        int[] $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1, $r2, $r5, $r6;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 28;

        if $i1 != 0 goto label1;

        return;

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int allLocalsCounter>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        $i2 = lengthof $r1;

        if $i3 != $i2 goto label2;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int allLocalsCounter>;

        $i7 = $i6 + 10;

        $r5 = newarray (org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)[$i7];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals> = $r5;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int allLocalsCounter>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r5, 0, $i8);

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int allLocalsCounter>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int allLocalsCounter> = $i5;

        $r2[$i4] = r3;

        $r4 = newarray (int)[4];

        r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int[] initializationPCs> = $r4;

        r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount> = 0;

        return;
    }

    public void recordExpressionType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        return;
    }

    public void recordPositionsFrom(int, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int i0, i1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void recordPositionsFrom(int,int,boolean)>(i0, i1, 0);

        return;
    }

    public void recordPositionsFrom(int, int, boolean)
    {
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r84, $r85, $r86, $r87, $r88, $r89, $r90, $r91, $r92, $r93, $r94, $r95, $r96, $r97, $r98, r99;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i97, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i106, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, $i115, $i116, $i117, $i118, $i119, $i120, $i121, $i122, $i123, $i124, $i125, $i126, $i127, $i128, $i129, $i130, $i131, $i132, $i133, $i134, $i135, $i136, $i137, $i138, $i139, $i140, $i141, $i142, $i143, $i144, $i145, $i146, $i147, $i148, $i149, $i150, $i151, $i152, $i153, $i154, $i155, $i156, $i157, $i158, $i159, $i160, $i161, $i162, $i163, $i164, $i165, $i166, $i167, $i168, $i169, $i170, $i171, $i172, $i173, $i174, $i175, $i176, $i177, $i178, $i179, $i180, $i181, $i182, $i183, $i184, $i185, $i186, $i187, $i188, $i189, $i190, $i191, $i192, $i193, $i194, $i195, $i196, $i197, $i198, $i199, $i200, $i201, $i202, $i203, $i204, $i205, $i206, $i207, $i208, $i209, $i210, $i211, $i212, $i213, $i214, $i215, $i216, $i217, $i218, $i219, $i220, $i221, $i222, $i223, $i224, $i225, $i226, $i227, $i228, $i229, $i230, $i231, $i232, $i233, $i234, $i235, $i236, $i237, $i238, $i239, i240, i241, i242, $i243, i244, $i245, i246, $i247, i248, i249, $i250, i251, i252, $i253, i254, i255, $i256, i257, $i259, $i261, $i263, $i265, $i267, $i269, $i271, $i273, $i275, $i277, $i279;
        boolean z0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i3 := @parameter0: int;

        i2 := @parameter1: int;

        z0 := @parameter2: boolean;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label01;

        if i2 == 0 goto label01;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if i3 != $i4 goto label02;

        if z0 != 0 goto label02;

     label01:
        return;

     label02:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i7 = $i5 + 4;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i6 = lengthof $r1;

        if $i7 <= $i6 goto label03;

        $r98 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i237 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i238 = $i237 << 1;

        $r97 = newarray (int)[$i238];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap> = $r97;

        $i239 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r98, 0, $r97, 0, $i239);

     label03:
        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        if $i8 <= 0 goto label56;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i21 = $i20 - 1;

        i22 = $r5[$i21];

        $i24 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        if $i24 != $i23 goto label04;

        i240 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        goto label44;

     label04:
        r99 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        i241 = lengthof r99;

        if i22 != 1 goto label19;

        $i180 = r99[0];

        if i2 >= $i180 goto label08;

        $r88 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i220 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i221 = $i220 - 2;

        $i222 = $r88[$i221];

        if i3 >= $i222 goto label07;

        $r89 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i223 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i224 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r89, $i223, i3);

        $i259 = (int) -1;

        if $i224 == $i259 goto label07;

        if $i224 <= 1 goto label05;

        $r96 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i235 = $i224 - 1;

        $i236 = $r96[$i235];

        if $i236 == 1 goto label07;

     label05:
        $i225 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        if $i225 <= 4 goto label06;

        $r91 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i228 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i229 = $i228 - 4;

        $i230 = $r91[$i229];

        if $i230 <= i3 goto label06;

        $r93 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r92 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i234 = $i224 + 2;

        $i231 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i232 = $i231 - 2;

        $i233 = $i232 - $i224;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r93, $i224, $r92, $i234, $i233);

        $r94 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i242 = $i224 + 1;

        $r94[$i224] = i3;

        $r95 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r95[i242] = 1;

        goto label07;

     label06:
        $r90 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i226 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i227 = $i226 - 2;

        $r90[$i227] = i3;

     label07:
        $i243 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i243;

        return;

     label08:
        if i241 == 1 goto label09;

        $i215 = r99[1];

        if i2 >= $i215 goto label18;

     label09:
        $i181 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if i3 > $i181 goto label16;

        $r74 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i186 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i187 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r74, $i186, i3);

        $i261 = (int) -1;

        if $i187 == $i261 goto label12;

        $i207 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int indexOfSameLineEntrySincePC(int,int)>(i3, 2);

        $i263 = (int) -1;

        if $i207 == $i263 goto label10;

        $r86 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r86[$i207] = i3;

        goto label17;

     label10:
        if $i187 < 1 goto label11;

        $r85 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i213 = $i187 - 1;

        $i214 = $r85[$i213];

        if $i214 == 2 goto label17;

     label11:
        $r82 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r81 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i210 = $i187 + 2;

        $i208 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i209 = $i208 - $i187;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r82, $i187, $r81, $i210, $i209);

        $r83 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i244 = $i187 + 1;

        $r83[$i187] = i3;

        $r84 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r84[i244] = 2;

        $i211 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i212 = $i211 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i212;

        goto label17;

     label12:
        $i189 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i188 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i189 == $i188 goto label15;

        $i195 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i195 == i3 goto label13;

        $i201 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r78 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i198 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i199 = $i198 - 2;

        $i200 = $r78[$i199];

        if $i201 != $i200 goto label14;

     label13:
        $r77 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i196 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i197 = $i196 - 1;

        $r77[$i197] = 2;

        goto label17;

     label14:
        $r79 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i202 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i203 = $i202 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i203;

        $i204 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r79[$i202] = $i204;

        $r80 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i205 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i206 = $i205 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i206;

        $r80[$i205] = 2;

        goto label17;

     label15:
        $r75 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i190 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i191 = $i190 - 1;

        $i192 = $r75[$i191];

        if $i192 >= 2 goto label17;

        if z0 == 0 goto label17;

        $r76 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i193 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i194 = $i193 - 1;

        $r76[$i194] = 2;

        goto label17;

     label16:
        $r72 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i182 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i183 = $i182 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i183;

        $r72[$i182] = i3;

        $r73 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i184 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i185 = $i184 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i185;

        $r73[$i184] = 2;

     label17:
        $i245 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i245;

        return;

     label18:
        $r87 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        $i216 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i219 = $i216 - 1;

        $i217 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        $i218 = $i217 - 1;

        i240 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i2, $r87, $i219, $i218);

        goto label44;

     label19:
        if i22 >= i241 goto label34;

        $i116 = i22 - 2;

        $i117 = r99[$i116];

        if $i117 >= i2 goto label33;

        $i122 = i22 - 1;

        $i123 = r99[$i122];

        if i2 >= $i123 goto label23;

        $r63 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i163 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i164 = $i163 - 2;

        $i165 = $r63[$i164];

        if i3 >= $i165 goto label22;

        $r64 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i166 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i167 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r64, $i166, i3);

        $i265 = (int) -1;

        if $i167 == $i265 goto label22;

        if $i167 <= 1 goto label20;

        $r71 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i178 = $i167 - 1;

        $i179 = $r71[$i178];

        if $i179 == i22 goto label22;

     label20:
        $i168 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        if $i168 <= 4 goto label21;

        $r66 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i171 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i172 = $i171 - 4;

        $i173 = $r66[$i172];

        if $i173 <= i3 goto label21;

        $r68 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r67 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i177 = $i167 + 2;

        $i174 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i175 = $i174 - 2;

        $i176 = $i175 - $i167;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r68, $i167, $r67, $i177, $i176);

        $r69 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i246 = $i167 + 1;

        $r69[$i167] = i3;

        $r70 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r70[i246] = i22;

        goto label22;

     label21:
        $r65 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i169 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i170 = $i169 - 2;

        $r65[$i170] = i3;

     label22:
        $i247 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i247;

        return;

     label23:
        $i124 = r99[i22];

        if i2 >= $i124 goto label32;

        i248 = i22 + 1;

        $i129 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if i3 > $i129 goto label30;

        $r50 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i134 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i135 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r50, $i134, i3);

        $i267 = (int) -1;

        if $i135 == $i267 goto label26;

        $i155 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int indexOfSameLineEntrySincePC(int,int)>(i3, i248);

        $i269 = (int) -1;

        if $i155 == $i269 goto label24;

        $r62 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r62[$i155] = i3;

        goto label31;

     label24:
        if $i135 < 1 goto label25;

        $r61 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i161 = $i135 - 1;

        $i162 = $r61[$i161];

        if $i162 == i248 goto label31;

     label25:
        $r58 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r57 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i158 = $i135 + 2;

        $i156 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i157 = $i156 - $i135;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r58, $i135, $r57, $i158, $i157);

        $r59 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i249 = $i135 + 1;

        $r59[$i135] = i3;

        $r60 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r60[i249] = i248;

        $i159 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i160 = $i159 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i160;

        goto label31;

     label26:
        $i137 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i136 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i137 == $i136 goto label29;

        $i143 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i143 == i3 goto label27;

        $i149 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r54 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i146 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i147 = $i146 - 2;

        $i148 = $r54[$i147];

        if $i149 != $i148 goto label28;

     label27:
        $r53 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i144 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i145 = $i144 - 1;

        $r53[$i145] = i248;

        goto label31;

     label28:
        $r55 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i150 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i151 = $i150 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i151;

        $i152 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r55[$i150] = $i152;

        $r56 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i153 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i154 = $i153 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i154;

        $r56[$i153] = i248;

        goto label31;

     label29:
        $r51 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i138 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i139 = $i138 - 1;

        $i140 = $r51[$i139];

        if $i140 >= i248 goto label31;

        if z0 == 0 goto label31;

        $r52 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i141 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i142 = $i141 - 1;

        $r52[$i142] = i248;

        goto label31;

     label30:
        $r48 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i130 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i131 = $i130 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i131;

        $r48[$i130] = i3;

        $r49 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i132 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i133 = $i132 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i133;

        $r49[$i132] = i248;

     label31:
        $i250 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i250;

        return;

     label32:
        $r47 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        $i125 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i128 = $i125 - 1;

        $i126 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        $i127 = $i126 - 1;

        i240 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i2, $r47, $i128, $i127);

        goto label44;

     label33:
        $r46 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        $i118 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i121 = $i118 - 1;

        $i119 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        $i120 = $i119 - 1;

        i240 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i2, $r46, $i121, $i120);

        goto label44;

     label34:
        $i25 = i241 - 1;

        $i26 = r99[$i25];

        if $i26 >= i2 goto label43;

        i251 = i241 + 1;

        $i82 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if i3 > $i82 goto label41;

        $r33 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i87 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i88 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r33, $i87, i3);

        $i271 = (int) -1;

        if $i88 == $i271 goto label37;

        $i108 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int indexOfSameLineEntrySincePC(int,int)>(i3, i251);

        $i273 = (int) -1;

        if $i108 == $i273 goto label35;

        $r45 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r45[$i108] = i3;

        goto label42;

     label35:
        if $i88 < 1 goto label36;

        $r44 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i114 = $i88 - 1;

        $i115 = $r44[$i114];

        if $i115 == i251 goto label42;

     label36:
        $r41 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r40 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i111 = $i88 + 2;

        $i109 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i110 = $i109 - $i88;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r41, $i88, $r40, $i111, $i110);

        $r42 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i252 = $i88 + 1;

        $r42[$i88] = i3;

        $r43 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r43[i252] = i251;

        $i112 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i113 = $i112 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i113;

        goto label42;

     label37:
        $i90 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i89 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i90 == $i89 goto label40;

        $i96 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i96 == i3 goto label38;

        $i102 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r37 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i99 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i100 = $i99 - 2;

        $i101 = $r37[$i100];

        if $i102 != $i101 goto label39;

     label38:
        $r36 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i97 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i98 = $i97 - 1;

        $r36[$i98] = i251;

        goto label42;

     label39:
        $r38 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i103 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i104 = $i103 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i104;

        $i105 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r38[$i103] = $i105;

        $r39 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i106 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i107 = $i106 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i107;

        $r39[$i106] = i251;

        goto label42;

     label40:
        $r34 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i91 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i92 = $i91 - 1;

        $i93 = $r34[$i92];

        if $i93 >= i251 goto label42;

        if z0 == 0 goto label42;

        $r35 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i94 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i95 = $i94 - 1;

        $r35[$i95] = i251;

        goto label42;

     label41:
        $r31 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i83 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i84 = $i83 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i84;

        $r31[$i83] = i3;

        $r32 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i85 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i86 = $i85 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i86;

        $r32[$i85] = i251;

     label42:
        $i253 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i253;

        return;

     label43:
        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        $i27 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i30 = $i27 - 1;

        $i28 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        $i29 = $i28 - 1;

        i240 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i2, $r6, $i30, $i29);

     label44:
        if i22 == i240 goto label52;

        $i48 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if i3 > $i48 goto label51;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i53 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i54 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r18, $i53, i3);

        $i275 = (int) -1;

        if $i54 == $i275 goto label47;

        $i74 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int indexOfSameLineEntrySincePC(int,int)>(i3, i240);

        $i277 = (int) -1;

        if $i74 == $i277 goto label45;

        $r30 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r30[$i74] = i3;

        goto label55;

     label45:
        if $i54 < 1 goto label46;

        $r29 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i80 = $i54 - 1;

        $i81 = $r29[$i80];

        if $i81 == i240 goto label55;

     label46:
        $r26 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r25 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i77 = $i54 + 2;

        $i75 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i76 = $i75 - $i54;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r26, $i54, $r25, $i77, $i76);

        $r27 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i254 = $i54 + 1;

        $r27[$i54] = i3;

        $r28 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r28[i254] = i240;

        $i78 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i79 = $i78 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i79;

        goto label55;

     label47:
        $i56 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i55 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i56 == $i55 goto label50;

        $i62 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        if $i62 == i3 goto label48;

        $i68 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r22 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i65 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i66 = $i65 - 2;

        $i67 = $r22[$i66];

        if $i68 != $i67 goto label49;

     label48:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i63 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i64 = $i63 - 1;

        $r21[$i64] = i240;

        goto label55;

     label49:
        $r23 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i69 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i70 = $i69 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i70;

        $i71 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC>;

        $r23[$i69] = $i71;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i72 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i73 = $i72 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i73;

        $r24[$i72] = i240;

        goto label55;

     label50:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i57 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i58 = $i57 - 1;

        $i59 = $r19[$i58];

        if $i59 >= i240 goto label55;

        if z0 == 0 goto label55;

        $r20 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i60 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i61 = $i60 - 1;

        $r20[$i61] = i240;

        goto label55;

     label51:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i49 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i50 = $i49 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i50;

        $r16[$i49] = i3;

        $r17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i51 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i52 = $i51 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i52;

        $r17[$i51] = i240;

        goto label55;

     label52:
        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i31 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i32 = $i31 - 2;

        $i33 = $r7[$i32];

        if i3 >= $i33 goto label55;

        $r8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i34 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i35 = staticinvoke <org.eclipse.jdt.internal.compiler.codegen.CodeStream: int insertionIndex(int[],int,int)>($r8, $i34, i3);

        $i279 = (int) -1;

        if $i35 == $i279 goto label55;

        if $i35 <= 1 goto label53;

        $r15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i46 = $i35 - 1;

        $i47 = $r15[$i46];

        if $i47 == i240 goto label55;

     label53:
        $i36 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        if $i36 <= 4 goto label54;

        $r10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i39 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i40 = $i39 - 4;

        $i41 = $r10[$i40];

        if $i41 <= i3 goto label54;

        $r12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i45 = $i35 + 2;

        $i42 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i43 = $i42 - 2;

        $i44 = $i43 - $i35;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r12, $i35, $r11, $i45, $i44);

        $r13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        i255 = $i35 + 1;

        $r13[$i35] = i3;

        $r14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $r14[i255] = i240;

        goto label55;

     label54:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i37 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i38 = $i37 - 2;

        $r9[$i38] = i3;

     label55:
        $i256 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i256;

        goto label59;

     label56:
        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        if $i10 != $i9 goto label57;

        i257 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        goto label58;

     label57:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart>;

        $i14 = $i11 - 1;

        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd>;

        $i13 = $i12 - 1;

        i257 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>(i2, $r2, $i14, $i13);

     label58:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i16;

        $r3[$i15] = i3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i17 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i18 = $i17 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i18;

        $r4[$i17] = i257;

        $i19 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = $i19;

     label59:
        return;
    }

    public void registerExceptionHandler(org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel)
    {
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] $r1, $r2, $r4, $r5;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel r3;
        int $i0, $i1, $i2, $i3, $i4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int exceptionLabelsCounter>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels>;

        $i4 = $i0 + 5;

        $r4 = newarray (org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel)[$i4];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels> = $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i0);

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.codegen.ExceptionLabel[] exceptionLabels>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int exceptionLabelsCounter>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int exceptionLabelsCounter> = $i3;

        $r2[$i2] = r3;

        return;
    }

    public void removeNotDefinitelyAssignedVariables(org.eclipse.jdt.internal.compiler.lookup.Scope, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.Scope r3;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r2;
        int $i0, $i1, i2, $i3, $i4, i5, $i6;
        boolean $z0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r3 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        i2 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 28;

        if $i1 != 0 goto label1;

        return;

     label1:
        i5 = 0;

        goto label4;

     label2:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        r2 = $r1[i5];

        if r2 == null goto label3;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean isDefinitelyAssigned(org.eclipse.jdt.internal.compiler.lookup.Scope,int,org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r3, i2, r2);

        if $z0 != 0 goto label3;

        $i3 = r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        if $i3 <= 0 goto label3;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationEndPC(int)>($i4);

     label3:
        i5 = i5 + 1;

     label4:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        if i5 < $i6 goto label2;

        return;
    }

    public void removeUnusedPcToSourceMapEntries()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        if $i0 == 0 goto label3;

        goto label2;

     label1:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i7 = $i6 - 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize> = $i7;

     label2:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        if $i1 < 2 goto label3;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] pcToSourceMap>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int pcToSourceMapSize>;

        $i3 = $i2 - 2;

        $i5 = $r1[$i3];

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        if $i5 > $i4 goto label1;

     label3:
        return;
    }

    public void removeVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r2, $r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r0, r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        int $i0, $i1, $i2, i3, $i5;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if r0 != null goto label1;

        return;

     label1:
        $i0 = r0.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        if $i0 <= 0 goto label2;

        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void recordInitializationEndPC(int)>($i2);

     label2:
        $i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int visibleLocalsCount>;

        i3 = $i1 - 1;

        goto label5;

     label3:
        $r2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        r3 = $r2[i3];

        if r3 != r0 goto label4;

        $r4 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] visibleLocals>;

        $r4[i3] = null;

        return;

     label4:
        $i5 = (int) -1;

        i3 = i3 + $i5;

     label5:
        if i3 >= 0 goto label3;

        return;
    }

    public void reset(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration, org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.MethodScope $r4;
        int[] r3;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, $i9;
        boolean $z0, $z1, $z2;
        org.eclipse.jdt.internal.compiler.lookup.MethodBinding $r6;
        org.eclipse.jdt.internal.compiler.ClassFile r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration r2;
        org.eclipse.jdt.internal.compiler.impl.CompilerOptions $r5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration;

        r1 := @parameter1: org.eclipse.jdt.internal.compiler.ClassFile;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void init(org.eclipse.jdt.internal.compiler.ClassFile)>(r1);

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration> = r2;

        r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions>;

        if r3 == null goto label9;

        i0 = lengthof r3;

        i1 = i0 - 1;

        $z0 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isClinit()>();

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: boolean isConstructor()>();

        if $z1 == 0 goto label4;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart> = 1;

        if i0 != 0 goto label2;

        $i7 = 1;

        goto label3;

     label2:
        $i7 = i0;

     label3:
        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd> = $i7;

        goto label9;

     label4:
        $i2 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyStart>;

        $i3 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>($i2, r3, 0, i1);

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberStart> = $i3;

        if $i3 <= i1 goto label5;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd> = $i3;

        goto label9;

     label5:
        $i5 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: int bodyEnd>;

        $i4 = $i3 - 1;

        $i6 = staticinvoke <org.eclipse.jdt.internal.compiler.util.Util: int getLineNumber(int,int[],int,int)>($i5, r3, $i4, i1);

        i8 = $i6;

        if $i6 < i1 goto label6;

        i8 = i0;

     label6:
        if i8 != 0 goto label7;

        $i9 = 1;

        goto label8;

     label7:
        $i9 = i8;

     label8:
        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lineNumberEnd> = $i9;

     label9:
        $r4 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodScope scope>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.impl.CompilerOptions compilerOptions()>();

        $z2 = $r5.<org.eclipse.jdt.internal.compiler.impl.CompilerOptions: boolean preserveAllLocalVariables>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean preserveUnusedLocals> = $z2;

        $r6 = r2.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: org.eclipse.jdt.internal.compiler.lookup.MethodBinding binding>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>($r6);

        return;
    }

    public void reset(org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding $r2;
        org.eclipse.jdt.internal.compiler.ClassFile r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.CompilationResult $r5;
        long $l0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope $r3;
        int[] $r6;
        int i1, $i2;
        org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration $r4;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ClassFile;

        $l0 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: long targetJDK>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: long targetLevel> = $l0;

        i1 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: int produceAttributes>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes> = i1;

        $i2 = i1 & 2;

        if $i2 == 0 goto label1;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ClassFile: org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding referenceBinding>;

        $r3 = $r2.<org.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding: org.eclipse.jdt.internal.compiler.lookup.ClassScope scope>;

        $r4 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.ClassScope: org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration referenceCompilationUnit()>();

        $r5 = $r4.<org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration: org.eclipse.jdt.internal.compiler.CompilationResult compilationResult>;

        $r6 = virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.CompilationResult: int[] getLineSeparatorPositions()>();

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions> = $r6;

        goto label2;

     label1:
        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int[] lineSeparatorPositions> = null;

     label2:
        return;
    }

    public void resetForProblemClinit(org.eclipse.jdt.internal.compiler.ClassFile)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.ClassFile r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.ClassFile;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void init(org.eclipse.jdt.internal.compiler.ClassFile)>(r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void initializeMaxLocals(org.eclipse.jdt.internal.compiler.lookup.MethodBinding)>(null);

        return;
    }

    private final void resizeByteArray()
    {
        byte[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int i0, $i1, $i2, i3;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        i0 = lengthof $r1;

        i3 = i0 + i0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        if $i1 < i3 goto label1;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        i3 = $i2 + i0;

     label1:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $r2 = newarray (byte)[i3];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream> = $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, 0, i0);

        return;
    }

    public final void 'ret'(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5, $r6;
        byte $b10;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        if i0 <= 255 goto label2;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i13 = $i11 + 3;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i12 = lengthof $r4;

        if $i13 < $i12 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i14 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i15 = $i14 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i15;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i16 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i17;

        $r5[$i16] = -60;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i18 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i19 = $i18 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i19;

        $r6[$i18] = -87;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeUnsignedShort(int)>(i0);

        goto label4;

     label2:
        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i3 = $i1 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label3;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label3:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = -87;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $b10 = (byte) i0;

        $r3[$i8] = $b10;

     label4:
        return;
    }

    public void return_()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = -79;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastAbruptCompletion> = $i6;

        return;
    }

    public void saload()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 53;

        return;
    }

    public void sastore()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 3;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i5;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i7;

        $r2[$i6] = 86;

        return;
    }

    public void sendOperator(int, int)
    {
        int i0, i1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        tableswitch(i0)
        {
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label40;
            case 7: goto label14;
            case 8: goto label34;
            case 9: goto label27;
            case 10: goto label01;
            default: goto label40;
        };

     label01:
        tableswitch(i1)
        {
            case 2: goto label10;
            case 3: goto label11;
            case 4: goto label13;
            case 5: goto label13;
            case 6: goto label13;
            case 7: goto label13;
            case 8: goto label12;
            case 9: goto label05;
            case 10: goto label07;
            case 11: goto label13;
            case 12: goto label13;
            case 13: goto label03;
            case 14: goto label02;
            case 15: goto label04;
            case 16: goto label06;
            case 17: goto label08;
            case 18: goto label13;
            case 19: goto label09;
            default: goto label13;
        };

     label02:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iadd()>();

        goto label40;

     label03:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void isub()>();

        goto label40;

     label04:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void imul()>();

        goto label40;

     label05:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void idiv()>();

        goto label40;

     label06:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void irem()>();

        goto label40;

     label07:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ishl()>();

        goto label40;

     label08:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ishr()>();

        goto label40;

     label09:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iushr()>();

        goto label40;

     label10:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void iand()>();

        goto label40;

     label11:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ior()>();

        goto label40;

     label12:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ixor()>();

     label13:
        goto label40;

     label14:
        tableswitch(i1)
        {
            case 2: goto label23;
            case 3: goto label24;
            case 4: goto label26;
            case 5: goto label26;
            case 6: goto label26;
            case 7: goto label26;
            case 8: goto label25;
            case 9: goto label18;
            case 10: goto label20;
            case 11: goto label26;
            case 12: goto label26;
            case 13: goto label16;
            case 14: goto label15;
            case 15: goto label17;
            case 16: goto label19;
            case 17: goto label21;
            case 18: goto label26;
            case 19: goto label22;
            default: goto label26;
        };

     label15:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ladd()>();

        goto label40;

     label16:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lsub()>();

        goto label40;

     label17:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lmul()>();

        goto label40;

     label18:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ldiv()>();

        goto label40;

     label19:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lrem()>();

        goto label40;

     label20:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lshl()>();

        goto label40;

     label21:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lshr()>();

        goto label40;

     label22:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lushr()>();

        goto label40;

     label23:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void land()>();

        goto label40;

     label24:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lor()>();

        goto label40;

     label25:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lxor()>();

     label26:
        goto label40;

     label27:
        tableswitch(i1)
        {
            case 9: goto label31;
            case 10: goto label33;
            case 11: goto label33;
            case 12: goto label33;
            case 13: goto label29;
            case 14: goto label28;
            case 15: goto label30;
            case 16: goto label32;
            default: goto label33;
        };

     label28:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fadd()>();

        goto label40;

     label29:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fsub()>();

        goto label40;

     label30:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fmul()>();

        goto label40;

     label31:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fdiv()>();

        goto label40;

     label32:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void frem()>();

     label33:
        goto label40;

     label34:
        tableswitch(i1)
        {
            case 9: goto label38;
            case 10: goto label40;
            case 11: goto label40;
            case 12: goto label40;
            case 13: goto label36;
            case 14: goto label35;
            case 15: goto label37;
            case 16: goto label39;
            default: goto label40;
        };

     label35:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dadd()>();

        goto label40;

     label36:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dsub()>();

        goto label40;

     label37:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dmul()>();

        goto label40;

     label38:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void ddiv()>();

        goto label40;

     label39:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void drem()>();

     label40:
        return;
    }

    public void sipush(int)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, $i11;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i10 := @parameter0: int;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        if $i3 <= $i2 goto label1;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax> = $i11;

     label1:
        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r1;

        if $i5 < $i4 goto label2;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label2:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r2[$i8] = 17;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedShort(int)>(i10);

        return;
    }

    public void store(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding, boolean)
    {
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r0;
        int i0, $i1;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r1;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r2;
        boolean z0;

        r2 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        z0 := @parameter1: boolean;

        i0 = r0.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int resolvedPosition>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding type>;

        $i1 = $r1.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int id>;

        tableswitch($i1)
        {
            case 2: goto label01;
            case 3: goto label01;
            case 4: goto label01;
            case 5: goto label01;
            case 6: goto label29;
            case 7: goto label22;
            case 8: goto label15;
            case 9: goto label08;
            case 10: goto label01;
            default: goto label29;
        };

     label01:
        if z0 == 0 goto label02;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label02:
        tableswitch(i0)
        {
            case 0: goto label03;
            case 1: goto label04;
            case 2: goto label05;
            case 3: goto label06;
            default: goto label07;
        };

     label03:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void istore_0()>();

        goto label36;

     label04:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void istore_1()>();

        goto label36;

     label05:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void istore_2()>();

        goto label36;

     label06:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void istore_3()>();

        goto label36;

     label07:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void istore(int)>(i0);

        goto label36;

     label08:
        if z0 == 0 goto label09;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label09:
        tableswitch(i0)
        {
            case 0: goto label10;
            case 1: goto label11;
            case 2: goto label12;
            case 3: goto label13;
            default: goto label14;
        };

     label10:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fstore_0()>();

        goto label36;

     label11:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fstore_1()>();

        goto label36;

     label12:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fstore_2()>();

        goto label36;

     label13:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fstore_3()>();

        goto label36;

     label14:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void fstore(int)>(i0);

        goto label36;

     label15:
        if z0 == 0 goto label16;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2()>();

     label16:
        tableswitch(i0)
        {
            case 0: goto label17;
            case 1: goto label18;
            case 2: goto label19;
            case 3: goto label20;
            default: goto label21;
        };

     label17:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dstore_0()>();

        goto label36;

     label18:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dstore_1()>();

        goto label36;

     label19:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dstore_2()>();

        goto label36;

     label20:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dstore_3()>();

        goto label36;

     label21:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dstore(int)>(i0);

        goto label36;

     label22:
        if z0 == 0 goto label23;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup2()>();

     label23:
        tableswitch(i0)
        {
            case 0: goto label24;
            case 1: goto label25;
            case 2: goto label26;
            case 3: goto label27;
            default: goto label28;
        };

     label24:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lstore_0()>();

        goto label36;

     label25:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lstore_1()>();

        goto label36;

     label26:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lstore_2()>();

        goto label36;

     label27:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lstore_3()>();

        goto label36;

     label28:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void lstore(int)>(i0);

        goto label36;

     label29:
        if z0 == 0 goto label30;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void dup()>();

     label30:
        tableswitch(i0)
        {
            case 0: goto label31;
            case 1: goto label32;
            case 2: goto label33;
            case 3: goto label34;
            default: goto label35;
        };

     label31:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_0()>();

        goto label36;

     label32:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_1()>();

        goto label36;

     label33:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_2()>();

        goto label36;

     label34:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore_3()>();

        goto label36;

     label35:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void astore(int)>(i0);

     label36:
        return;
    }

    public void swap()
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i0 = lengthof $r1;

        if $i1 < $i0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i3;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i5 = $i4 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i5;

        $r2[$i4] = 95;

        return;
    }

    public void 'tableswitch'(org.eclipse.jdt.internal.compiler.codegen.CaseLabel, int, int, int[], int[], org.eclipse.jdt.internal.compiler.codegen.CaseLabel[])
    {
        byte[] $r4, $r5, $r6, $r7;
        org.eclipse.jdt.internal.compiler.codegen.CaseLabel[] r1;
        int[] r8, r9;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18, $i19, $i20, $i21, i22, i23, i24, i25, $i27;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.codegen.CaseLabel r2, $r3, $r10;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r2 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.CaseLabel;

        i17 := @parameter1: int;

        i18 := @parameter2: int;

        r8 := @parameter3: int[];

        r9 := @parameter4: int[];

        r1 := @parameter5: org.eclipse.jdt.internal.compiler.codegen.CaseLabel[];

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int countLabels> = 0;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        $i1 = $i0 - 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth> = $i1;

        i2 = lengthof r1;

        i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void placeInstruction()>();

        i22 = 0;

        goto label02;

     label01:
        $r3 = r1[i22];

        virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void placeInstruction()>();

        i22 = i22 + 1;

     label02:
        if i22 < i2 goto label01;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i4 = lengthof $r4;

        if $i5 < $i4 goto label03;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label03:
        $i6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i7 = $i6 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i7;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i8 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i9 = $i8 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i9;

        $r5[$i8] = -86;

        $i10 = i3 & 3;

        i23 = 3 - $i10;

        goto label06;

     label04:
        $i12 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = lengthof $r6;

        if $i12 < $i11 goto label05;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label05:
        $i13 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i14 = $i13 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i14;

        $r7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i16 = $i15 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i16;

        $r7[$i15] = 0;

        $i27 = (int) -1;

        i23 = i23 + $i27;

     label06:
        if i23 > 0 goto label04;

        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void branch()>();

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int)>(i17);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int)>(i18);

        i24 = i17;

        i25 = i17;

     label07:
        $i19 = i25 - i17;

        $i20 = r9[$i19];

        $i21 = r8[$i20];

        if $i21 != i24 goto label08;

        $r10 = r1[$i20];

        virtualinvoke $r10.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void branch()>();

        i25 = i25 + 1;

        if i24 != i18 goto label09;

        goto label10;

     label08:
        virtualinvoke r2.<org.eclipse.jdt.internal.compiler.codegen.CaseLabel: void branch()>();

     label09:
        i24 = i24 + 1;

        goto label07;

     label10:
        return;
    }

    public void throwAnyException(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void load(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>(r1);

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void athrow()>();

        return;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuffer $r0;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("( position:");

        $i0 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",\nstackDepth:");

        $i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackDepth>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",\nmaxStack:");

        $i2 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int stackMax>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",\nmaxLocals:");

        $i3 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int maxLocals>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public void updateLastRecordedEndPC(org.eclipse.jdt.internal.compiler.lookup.Scope, int)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope $r5;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding r3;
        int[] $r6, $r7;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        org.eclipse.jdt.internal.compiler.lookup.Scope r4;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r4 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.Scope;

        i10 := @parameter1: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i1 = $i0 & 2;

        if $i1 == 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int lastEntryPC> = i10;

     label1:
        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int generateAttributes>;

        $i3 = $i2 & 28;

        if $i3 == 0 goto label5;

        i17 = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        i4 = lengthof $r1;

        goto label4;

     label2:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding[] locals>;

        r3 = $r2[i17];

        if r3 == null goto label3;

        $r5 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.lookup.BlockScope declaringScope>;

        if $r5 != r4 goto label3;

        $i5 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        if $i5 <= 0 goto label3;

        $r6 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int[] initializationPCs>;

        $i6 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        $i7 = $i6 - 1;

        $i8 = $i7 << 1;

        $i9 = $i8 + 1;

        $i11 = $r6[$i9];

        if $i11 != i10 goto label3;

        $r7 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int[] initializationPCs>;

        $i12 = r3.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int initializationCount>;

        $i13 = $i12 - 1;

        $i14 = $i13 << 1;

        $i16 = $i14 + 1;

        $i15 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $r7[$i16] = $i15;

     label3:
        i17 = i17 + 1;

     label4:
        if i17 < i4 goto label2;

     label5:
        return;
    }

    protected void writePosition(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r4;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r0;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r3;
        int[] $r2;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6, i7;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position>;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i2 = $i1 - $i0;

        i3 = $i2 + 1;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i3);

        if $i4 <= 32767 goto label1;

        $z0 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 != 0 goto label1;

        $r3 = new org.eclipse.jdt.internal.compiler.problem.AbortMethod;

        $r4 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.CompilationResult RESTART_IN_WIDE_MODE>;

        specialinvoke $r3.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r4, null);

        throw $r3;

     label1:
        specialinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedShort(int)>(i3);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int[] forwardReferences()>();

        i7 = 0;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int forwardReferenceCount()>();

        goto label3;

     label2:
        $i6 = $r2[i7];

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writePosition(org.eclipse.jdt.internal.compiler.codegen.BranchLabel,int)>(r0, $i6);

        i7 = i7 + 1;

     label3:
        if i7 < $i5 goto label2;

        return;
    }

    protected void writePosition(org.eclipse.jdt.internal.compiler.codegen.BranchLabel, int)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.CompilationResult $r3;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r0;
        org.eclipse.jdt.internal.compiler.problem.AbortMethod $r2;
        int i0, $i1, $i2, i3, $i4, $i5, $i6;
        boolean $z0, $z1;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        i0 := @parameter1: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position>;

        $i2 = $i1 - i0;

        i3 = $i2 + 1;

        $i4 = staticinvoke <java.lang.Math: int abs(int)>(i3);

        if $i4 <= 32767 goto label1;

        $z1 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z1 != 0 goto label1;

        $r2 = new org.eclipse.jdt.internal.compiler.problem.AbortMethod;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.CodeStream: org.eclipse.jdt.internal.compiler.CompilationResult RESTART_IN_WIDE_MODE>;

        specialinvoke $r2.<org.eclipse.jdt.internal.compiler.problem.AbortMethod: void <init>(org.eclipse.jdt.internal.compiler.CompilationResult,org.eclipse.jdt.core.compiler.CategorizedProblem)>($r3, null);

        throw $r2;

     label1:
        $z0 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode>;

        if $z0 == 0 goto label3;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int tagBits>;

        $i6 = $i5 & 1;

        if $i6 == 0 goto label2;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int,int)>(i0, i3);

        goto label4;

     label2:
        specialinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedShort(int,int)>(i0, i3);

        goto label4;

     label3:
        specialinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedShort(int,int)>(i0, i3);

     label4:
        return;
    }

    private final void writeSignedShort(int)
    {
        byte[] $r1, $r2, $r3;
        byte $b9, $b12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i10, $i11;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i7 := @parameter0: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $i8 = i7 >> 8;

        $b9 = (byte) $i8;

        $r2[$i5] = $b9;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i10 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i11 = $i10 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i11;

        $b12 = (byte) i7;

        $r3[$i10] = $b12;

        return;
    }

    private final void writeSignedShort(int, int)
    {
        byte[] $r1, $r2, $r3;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        byte $b7, $b8;
        int i0, $i1, i2, $i3, $i4, i5, $i6, $i9;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        i5 := @parameter1: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int startingClassFileOffset>;

        i2 = $i1 + i0;

        $i4 = i2 + 1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i3 = lengthof $r1;

        if $i4 < $i3 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i6 = i5 >> 8;

        $b7 = (byte) $i6;

        $r2[i2] = $b7;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i9 = i2 + 1;

        $b8 = (byte) i5;

        $r3[$i9] = $b8;

        return;
    }

    protected final void writeSignedWord(int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        byte $b10, $b15, $b20, $b24;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i8, $i9, $i11, $i12, $i13, $i14, $i16, $i17, $i18, $i19, $i21, $i22, $i23, $i26;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i7 := @parameter0: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i2 = $i0 + 3;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i1 = lengthof $r1;

        if $i2 < $i1 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $i3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i4 = $i3 + 4;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i4;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i6 = $i5 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i6;

        $i8 = i7 & -16777216;

        $i9 = $i8 >> 24;

        $b10 = (byte) $i9;

        $r2[$i5] = $b10;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i11 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i12 = $i11 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i12;

        $i13 = i7 & 16711680;

        $i14 = $i13 >> 16;

        $b15 = (byte) $i14;

        $r3[$i11] = $b15;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i16 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i17 = $i16 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i17;

        $i26 = (int) 65280;

        $i18 = i7 & $i26;

        $i19 = $i18 >> 8;

        $b20 = (byte) $i19;

        $r4[$i16] = $b20;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i21 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i22 = $i21 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i22;

        $i23 = i7 & 255;

        $b24 = (byte) $i23;

        $r5[$i21] = $b24;

        return;
    }

    protected void writeSignedWord(int, int)
    {
        byte[] $r1, $r2, $r3, $r4, $r5;
        byte $b7, $b10, $b13, $b15;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i8, $i9, $i11, $i12, $i14, i16, i17, i18, i19, $i21;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i0 := @parameter0: int;

        i4 := @parameter1: int;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int startingClassFileOffset>;

        i16 = $i1 + i0;

        $i3 = i16 + 3;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = lengthof $r1;

        if $i3 < $i2 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void resizeByteArray()>();

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        i17 = i16 + 1;

        $i5 = i4 & -16777216;

        $i6 = $i5 >> 24;

        $b7 = (byte) $i6;

        $r2[i16] = $b7;

        $r3 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        i18 = i17 + 1;

        $i8 = i4 & 16711680;

        $i9 = $i8 >> 16;

        $b10 = (byte) $i9;

        $r3[i17] = $b10;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        i19 = i18 + 1;

        $i21 = (int) 65280;

        $i11 = i4 & $i21;

        $i12 = $i11 >> 8;

        $b13 = (byte) $i12;

        $r4[i18] = $b13;

        $r5 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i14 = i4 & 255;

        $b15 = (byte) $i14;

        $r5[i19] = $b15;

        return;
    }

    private final void writeUnsignedShort(int)
    {
        byte[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;
        byte $b6, $b9;
        int $i0, $i1, $i2, $i3, i4, $i5, $i7, $i8;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        i4 := @parameter0: int;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i1 = $i0 + 2;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position> = $i1;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i3;

        $i5 = i4 >>> 8;

        $b6 = (byte) $i5;

        $r1[$i2] = $b6;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: byte[] bCodeStream>;

        $i7 = r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset>;

        $i8 = $i7 + 1;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int classFileOffset> = $i8;

        $b9 = (byte) i4;

        $r2[$i7] = $b9;

        return;
    }

    protected void writeWidePosition(org.eclipse.jdt.internal.compiler.codegen.BranchLabel)
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r1;
        org.eclipse.jdt.internal.compiler.codegen.BranchLabel r0;
        int[] $r2;
        int i0, $i1, $i2, $i3, i4, $i5, i6, i7, i8;

        r1 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.codegen.BranchLabel;

        i0 = r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int position>;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: int position>;

        $i2 = i0 - $i1;

        i6 = $i2 + 1;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int)>(i6);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int[] forwardReferences()>();

        i7 = 0;

        $i3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.codegen.BranchLabel: int forwardReferenceCount()>();

        goto label2;

     label1:
        i4 = $r2[i7];

        $i5 = i0 - i4;

        i8 = $i5 + 1;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: void writeSignedWord(int,int)>(i4, i8);

        i7 = i7 + 1;

     label2:
        if i7 < $i3 goto label1;

        return;
    }

    public void resetInWideMode()
    {
        org.eclipse.jdt.internal.compiler.codegen.CodeStream r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.codegen.CodeStream;

        r0.<org.eclipse.jdt.internal.compiler.codegen.CodeStream: boolean wideMode> = 1;

        return;
    }
}
