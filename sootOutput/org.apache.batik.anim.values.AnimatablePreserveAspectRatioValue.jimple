public class org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue extends org.apache.batik.anim.values.AnimatableValue
{
    protected static final java.lang.String[] ALIGN_VALUES;
    protected static final java.lang.String[] MEET_OR_SLICE_VALUES;
    protected short align;
    protected short meetOrSlice;

    protected void <init>(org.apache.batik.dom.anim.AnimationTarget)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        return;
    }

    public void <init>(org.apache.batik.dom.anim.AnimationTarget, short, short)
    {
        org.apache.batik.dom.anim.AnimationTarget r1;
        short s0, s1;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        r1 := @parameter0: org.apache.batik.dom.anim.AnimationTarget;

        s0 := @parameter1: short;

        s1 := @parameter2: short;

        specialinvoke r0.<org.apache.batik.anim.values.AnimatableValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>(r1);

        r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align> = s0;

        r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice> = s1;

        return;
    }

    public org.apache.batik.anim.values.AnimatableValue interpolate(org.apache.batik.anim.values.AnimatableValue, org.apache.batik.anim.values.AnimatableValue, float, org.apache.batik.anim.values.AnimatableValue, int)
    {
        org.apache.batik.dom.anim.AnimationTarget $r5;
        short $s0, $s1, $s2, s5, s6, $s7;
        byte $b3;
        int i4, $i8, $i9, $i10, $i11, $i12;
        double $d0;
        float f0;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r2, r3, r7, $r8;
        org.apache.batik.anim.values.AnimatableValue r0, r1, r6;

        r2 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        r0 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        r1 := @parameter1: org.apache.batik.anim.values.AnimatableValue;

        f0 := @parameter2: float;

        r6 := @parameter3: org.apache.batik.anim.values.AnimatableValue;

        i4 := @parameter4: int;

        if r0 != null goto label1;

        $r8 = new org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        $r5 = r2.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r8.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: void <init>(org.apache.batik.dom.anim.AnimationTarget)>($r5);

        r7 = $r8;

        goto label2;

     label1:
        r7 = (org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue) r0;

     label2:
        if r1 == null goto label3;

        $d0 = (double) f0;

        $b3 = $d0 cmpl 0.5;

        $i8 = (int) $b3;

        if $i8 < 0 goto label3;

        r3 = (org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue) r1;

        s5 = r3.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        s6 = r3.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        goto label4;

     label3:
        s5 = r2.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        s6 = r2.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

     label4:
        $s7 = r7.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        $i9 = (int) $s7;

        $i10 = (int) s5;

        if $i9 != $i10 goto label5;

        $s2 = r7.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        $i11 = (int) $s2;

        $i12 = (int) s6;

        if $i11 == $i12 goto label6;

     label5:
        $s0 = r2.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        r7.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align> = $s0;

        $s1 = r2.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        r7.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice> = $s1;

        r7.<org.apache.batik.anim.values.AnimatableValue: boolean hasChanged> = 1;

     label6:
        return r7;
    }

    public short getAlign()
    {
        short $s0;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        $s0 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        return $s0;
    }

    public short getMeetOrSlice()
    {
        short $s0;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        $s0 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        return $s0;
    }

    public boolean canPace()
    {
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        return 0;
    }

    public float distanceTo(org.apache.batik.anim.values.AnimatableValue)
    {
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;
        org.apache.batik.anim.values.AnimatableValue r1;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        r1 := @parameter0: org.apache.batik.anim.values.AnimatableValue;

        return 0.0F;
    }

    public org.apache.batik.anim.values.AnimatableValue getZeroValue()
    {
        org.apache.batik.dom.anim.AnimationTarget $r2;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue $r0, r1;

        r1 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        $r0 = new org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        $r2 = r1.<org.apache.batik.anim.values.AnimatableValue: org.apache.batik.dom.anim.AnimationTarget target>;

        specialinvoke $r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: void <init>(org.apache.batik.dom.anim.AnimationTarget,short,short)>($r2, 1, 1);

        return $r0;
    }

    public java.lang.String toStringRep()
    {
        java.lang.String[] $r1, $r6;
        short $s0, $s1, $s2, $s3, $s4, $s5, $s6;
        java.lang.StringBuffer $r4, $r5, $r8, $r10;
        int $i7, $i8, $i9, $i10, $i11, $i12;
        java.lang.String r2, $r7, $r9;
        org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue r0;

        r0 := @this: org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue;

        $s0 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        $i7 = (int) $s0;

        if $i7 < 1 goto label1;

        $s1 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        $i8 = (int) $s1;

        if $i8 <= 10 goto label2;

     label1:
        return null;

     label2:
        $r1 = <org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: java.lang.String[] ALIGN_VALUES>;

        $s2 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        $i9 = (int) $s2;

        r2 = $r1[$i9];

        $s3 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short align>;

        if $s3 != 1 goto label3;

        return r2;

     label3:
        $s4 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        $i10 = (int) $s4;

        if $i10 < 1 goto label4;

        $s5 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        $i11 = (int) $s5;

        if $i11 <= 2 goto label5;

     label4:
        return null;

     label5:
        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = <org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: java.lang.String[] MEET_OR_SLICE_VALUES>;

        $s6 = r0.<org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: short meetOrSlice>;

        $i12 = (int) $s6;

        $r7 = $r6[$i12];

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0, $r1;

        $r0 = newarray (java.lang.String)[11];

        $r0[0] = null;

        $r0[1] = "none";

        $r0[2] = "xMinYMin";

        $r0[3] = "xMidYMin";

        $r0[4] = "xMaxYMin";

        $r0[5] = "xMinYMid";

        $r0[6] = "xMidYMid";

        $r0[7] = "xMaxYMid";

        $r0[8] = "xMinYMax";

        $r0[9] = "xMidYMax";

        $r0[10] = "xMaxYMax";

        <org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: java.lang.String[] ALIGN_VALUES> = $r0;

        $r1 = newarray (java.lang.String)[3];

        $r1[0] = null;

        $r1[1] = "meet";

        $r1[2] = "slice";

        <org.apache.batik.anim.values.AnimatablePreserveAspectRatioValue: java.lang.String[] MEET_OR_SLICE_VALUES> = $r1;

        return;
    }
}
