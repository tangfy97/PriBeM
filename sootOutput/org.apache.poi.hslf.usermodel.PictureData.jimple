public abstract class org.apache.poi.hslf.usermodel.PictureData extends java.lang.Object
{
    protected org.apache.poi.util.POILogger logger;
    protected static final int CHECKSUM_SIZE;
    private byte[] rawdata;
    protected int offset;
    protected static final org.apache.poi.hslf.blip.ImagePainter[] painters;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.poi.util.POILogger $r2;
        org.apache.poi.hslf.usermodel.PictureData r0;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.poi.util.POILogFactory: org.apache.poi.util.POILogger getLogger(java.lang.Class)>($r1);

        r0.<org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.util.POILogger logger> = $r2;

        return;
    }

    public abstract int getType();

    public abstract byte[] getData();

    public abstract void setData(byte[]) throws java.io.IOException;

    protected abstract int getSignature();

    public byte[] getRawData()
    {
        byte[] $r1;
        org.apache.poi.hslf.usermodel.PictureData r0;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        $r1 = r0.<org.apache.poi.hslf.usermodel.PictureData: byte[] rawdata>;

        return $r1;
    }

    public void setRawData(byte[])
    {
        byte[] r1;
        org.apache.poi.hslf.usermodel.PictureData r0;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        r1 := @parameter0: byte[];

        r0.<org.apache.poi.hslf.usermodel.PictureData: byte[] rawdata> = r1;

        return;
    }

    public int getOffset()
    {
        int $i0;
        org.apache.poi.hslf.usermodel.PictureData r0;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        $i0 = r0.<org.apache.poi.hslf.usermodel.PictureData: int offset>;

        return $i0;
    }

    public void setOffset(int)
    {
        int i0;
        org.apache.poi.hslf.usermodel.PictureData r0;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        i0 := @parameter0: int;

        r0.<org.apache.poi.hslf.usermodel.PictureData: int offset> = i0;

        return;
    }

    public byte[] getUID()
    {
        byte[] r0, $r2;
        int $i0;
        org.apache.poi.hslf.usermodel.PictureData r1;

        r1 := @this: org.apache.poi.hslf.usermodel.PictureData;

        r0 = newarray (byte)[16];

        $r2 = r1.<org.apache.poi.hslf.usermodel.PictureData: byte[] rawdata>;

        $i0 = lengthof r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r0, 0, $i0);

        return r0;
    }

    public static byte[] getChecksum(byte[])
    {
        byte[] r2, $r3;
        java.security.MessageDigest $r1;
        org.apache.poi.poifs.crypt.HashAlgorithm $r0;

        r2 := @parameter0: byte[];

        $r0 = <org.apache.poi.poifs.crypt.HashAlgorithm: org.apache.poi.poifs.crypt.HashAlgorithm md5>;

        $r1 = staticinvoke <org.apache.poi.poifs.crypt.CryptoFunctions: java.security.MessageDigest getMessageDigest(org.apache.poi.poifs.crypt.HashAlgorithm)>($r0);

        virtualinvoke $r1.<java.security.MessageDigest: void update(byte[])>(r2);

        $r3 = virtualinvoke $r1.<java.security.MessageDigest: byte[] digest()>();

        return $r3;
    }

    public void write(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        byte[] $r2, r3, r4, r5;
        org.apache.poi.hslf.usermodel.PictureData r0;
        int $i0, $i1, $i2, $i3, $i5;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        r1 := @parameter0: java.io.OutputStream;

        r3 = newarray (byte)[2];

        $i0 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.PictureData: int getSignature()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>(r3, 0, $i0);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r3);

        r4 = newarray (byte)[2];

        $i1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.PictureData: int getType()>();

        $i5 = (int) 61464;

        $i2 = $i1 + $i5;

        staticinvoke <org.apache.poi.util.LittleEndian: void putUShort(byte[],int,int)>(r4, 0, $i2);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r4);

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.PictureData: byte[] getRawData()>();

        r5 = newarray (byte)[4];

        $i3 = lengthof $r2;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r5, 0, $i3);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>(r5);

        virtualinvoke r1.<java.io.OutputStream: void write(byte[])>($r2);

        return;
    }

    public static org.apache.poi.hslf.usermodel.PictureData create(int)
    {
        org.apache.poi.hslf.blip.WMF $r4;
        org.apache.poi.hslf.blip.PICT $r3;
        org.apache.poi.hslf.blip.JPEG $r2;
        java.lang.IllegalArgumentException $r6;
        org.apache.poi.hslf.blip.DIB $r0;
        org.apache.poi.hslf.usermodel.PictureData r11;
        org.apache.poi.hslf.blip.EMF $r5;
        int i0;
        org.apache.poi.hslf.blip.PNG $r1;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 2: goto label1;
            case 3: goto label2;
            case 4: goto label3;
            case 5: goto label4;
            case 6: goto label5;
            case 7: goto label6;
            default: goto label7;
        };

     label1:
        $r5 = new org.apache.poi.hslf.blip.EMF;

        specialinvoke $r5.<org.apache.poi.hslf.blip.EMF: void <init>()>();

        r11 = $r5;

        goto label8;

     label2:
        $r4 = new org.apache.poi.hslf.blip.WMF;

        specialinvoke $r4.<org.apache.poi.hslf.blip.WMF: void <init>()>();

        r11 = $r4;

        goto label8;

     label3:
        $r3 = new org.apache.poi.hslf.blip.PICT;

        specialinvoke $r3.<org.apache.poi.hslf.blip.PICT: void <init>()>();

        r11 = $r3;

        goto label8;

     label4:
        $r2 = new org.apache.poi.hslf.blip.JPEG;

        specialinvoke $r2.<org.apache.poi.hslf.blip.JPEG: void <init>()>();

        r11 = $r2;

        goto label8;

     label5:
        $r1 = new org.apache.poi.hslf.blip.PNG;

        specialinvoke $r1.<org.apache.poi.hslf.blip.PNG: void <init>()>();

        r11 = $r1;

        goto label8;

     label6:
        $r0 = new org.apache.poi.hslf.blip.DIB;

        specialinvoke $r0.<org.apache.poi.hslf.blip.DIB: void <init>()>();

        r11 = $r0;

        goto label8;

     label7:
        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported picture type: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r6;

     label8:
        return r11;
    }

    public byte[] getHeader()
    {
        byte[] r0, $r2, $r3;
        int $i0, $i1;
        org.apache.poi.hslf.usermodel.PictureData r1;

        r1 := @this: org.apache.poi.hslf.usermodel.PictureData;

        r0 = newarray (byte)[24];

        $i0 = virtualinvoke r1.<org.apache.poi.hslf.usermodel.PictureData: int getSignature()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 0, $i0);

        $r2 = virtualinvoke r1.<org.apache.poi.hslf.usermodel.PictureData: byte[] getRawData()>();

        $i1 = lengthof $r2;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, 4, $i1);

        $r3 = r1.<org.apache.poi.hslf.usermodel.PictureData: byte[] rawdata>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r0, 8, 16);

        return r0;
    }

    public int getSize()
    {
        int $i0;
        byte[] $r1;
        org.apache.poi.hslf.usermodel.PictureData r0;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.PictureData: byte[] getData()>();

        $i0 = lengthof $r1;

        return $i0;
    }

    public void draw(java.awt.Graphics2D, org.apache.poi.hslf.model.Picture)
    {
        org.apache.poi.hslf.model.Picture r11;
        org.apache.poi.hslf.blip.ImagePainter r2;
        org.apache.poi.util.POILogger $r4;
        org.apache.poi.hslf.usermodel.PictureData r0;
        java.awt.Graphics2D r10;
        int $i0;
        org.apache.poi.hslf.blip.ImagePainter[] $r1;
        java.lang.StringBuilder $r3, $r5, $r8;
        java.lang.Class $r6;
        java.lang.String $r7, $r9;

        r0 := @this: org.apache.poi.hslf.usermodel.PictureData;

        r10 := @parameter0: java.awt.Graphics2D;

        r11 := @parameter1: org.apache.poi.hslf.model.Picture;

        $r1 = <org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.hslf.blip.ImagePainter[] painters>;

        $i0 = virtualinvoke r0.<org.apache.poi.hslf.usermodel.PictureData: int getType()>();

        r2 = $r1[$i0];

        if r2 == null goto label1;

        interfaceinvoke r2.<org.apache.poi.hslf.blip.ImagePainter: void paint(java.awt.Graphics2D,org.apache.poi.hslf.usermodel.PictureData,org.apache.poi.hslf.model.Picture)>(r10, r0, r11);

        goto label2;

     label1:
        $r4 = r0.<org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.util.POILogger logger>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Rendering is not supported: ");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<org.apache.poi.util.POILogger: void log(int,java.lang.Object)>(5, $r9);

     label2:
        return;
    }

    public static void setImagePainter(int, org.apache.poi.hslf.blip.ImagePainter)
    {
        int i0;
        org.apache.poi.hslf.blip.ImagePainter r0;
        org.apache.poi.hslf.blip.ImagePainter[] $r1;

        i0 := @parameter0: int;

        r0 := @parameter1: org.apache.poi.hslf.blip.ImagePainter;

        $r1 = <org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.hslf.blip.ImagePainter[] painters>;

        $r1[i0] = r0;

        return;
    }

    public static org.apache.poi.hslf.blip.ImagePainter getImagePainter(int)
    {
        int i0;
        org.apache.poi.hslf.blip.ImagePainter $r1;
        org.apache.poi.hslf.blip.ImagePainter[] $r0;

        i0 := @parameter0: int;

        $r0 = <org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.hslf.blip.ImagePainter[] painters>;

        $r1 = $r0[i0];

        return $r1;
    }

    static void <clinit>()
    {
        org.apache.poi.hslf.blip.BitmapPainter $r1, $r2, $r3;
        org.apache.poi.hslf.blip.ImagePainter[] $r0;

        <org.apache.poi.hslf.usermodel.PictureData: int CHECKSUM_SIZE> = 16;

        $r0 = newarray (org.apache.poi.hslf.blip.ImagePainter)[8];

        <org.apache.poi.hslf.usermodel.PictureData: org.apache.poi.hslf.blip.ImagePainter[] painters> = $r0;

        $r1 = new org.apache.poi.hslf.blip.BitmapPainter;

        specialinvoke $r1.<org.apache.poi.hslf.blip.BitmapPainter: void <init>()>();

        staticinvoke <org.apache.poi.hslf.usermodel.PictureData: void setImagePainter(int,org.apache.poi.hslf.blip.ImagePainter)>(6, $r1);

        $r2 = new org.apache.poi.hslf.blip.BitmapPainter;

        specialinvoke $r2.<org.apache.poi.hslf.blip.BitmapPainter: void <init>()>();

        staticinvoke <org.apache.poi.hslf.usermodel.PictureData: void setImagePainter(int,org.apache.poi.hslf.blip.ImagePainter)>(5, $r2);

        $r3 = new org.apache.poi.hslf.blip.BitmapPainter;

        specialinvoke $r3.<org.apache.poi.hslf.blip.BitmapPainter: void <init>()>();

        staticinvoke <org.apache.poi.hslf.usermodel.PictureData: void setImagePainter(int,org.apache.poi.hslf.blip.ImagePainter)>(7, $r3);

        return;
    }
}
