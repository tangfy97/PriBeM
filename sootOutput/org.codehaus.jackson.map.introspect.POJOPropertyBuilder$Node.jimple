final class org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node extends java.lang.Object
{
    public final java.lang.Object value;
    public final org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next;
    public final java.lang.String explicitName;
    public final boolean isVisible;
    public final boolean isMarkedIgnored;

    public void <init>(java.lang.Object, org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node, java.lang.String, boolean, boolean)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, r2;
        int $i0;
        java.lang.Object r1;
        java.lang.String r3, $r4;
        boolean z0, z1;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r3 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        z1 := @parameter4: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value> = r1;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next> = r2;

        if r3 != null goto label1;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName> = null;

        goto label4;

     label1:
        $i0 = virtualinvoke r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = r3;

     label3:
        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName> = $r4;

     label4:
        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible> = z0;

        r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isMarkedIgnored> = z1;

        return;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withValue(java.lang.Object)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r1, $r3, $r5;
        java.lang.Object r0, $r2;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r0 := @parameter0: java.lang.Object;

        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        if r0 != $r2 goto label1;

        return r1;

     label1:
        $r3 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r5 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r4 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        $z1 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        $z0 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isMarkedIgnored>;

        specialinvoke $r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: void <init>(java.lang.Object,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,java.lang.String,boolean,boolean)>(r0, $r5, $r4, $z1, $z0);

        return $r3;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, r1, $r2, $r3;
        java.lang.Object $r5;
        java.lang.String $r4;
        boolean $z0, $z1;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if r0 != $r2 goto label1;

        return r1;

     label1:
        $r3 = new org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r5 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r4 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        $z1 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        $z0 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isMarkedIgnored>;

        specialinvoke $r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: void <init>(java.lang.Object,org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node,java.lang.String,boolean,boolean)>($r5, r0, $r4, $z1, $z0);

        return $r3;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $z0 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isMarkedIgnored>;

        if $z0 == 0 goto label3;

        $r6 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r6 != null goto label1;

        $r8 = null;

        goto label2;

     label1:
        $r7 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored()>();

     label2:
        return $r8;

     label3:
        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r1 == null goto label4;

        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutIgnored()>();

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r3 == $r4 goto label4;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        return $r5;

     label4:
        return r0;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1, $r2, $r3, $r4;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withoutNonVisible()>();

     label2:
        $z0 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        if $z0 == 0 goto label3;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        goto label4;

     label3:
        $r4 = $r3;

     label4:
        return $r4;
    }

    private org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1, r2, $r3, $r4, $r5, $r6;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r2 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r1 != null goto label1;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>(r2);

        return $r6;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r4 = specialinvoke $r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>(r2);

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r4);

        return $r5;
    }

    public org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, $r1, $r2, $r3, $r6, $r8, $r9, $r10;
        java.lang.String $r4, $r5, $r7;
        boolean $z0, $z1, $z2;

        r0 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node trimByVisibility()>();

        $r4 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        if $r4 == null goto label3;

        $r7 = $r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        if $r7 != null goto label2;

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>(null);

        return $r9;

     label2:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        return $r8;

     label3:
        $r5 = $r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String explicitName>;

        if $r5 == null goto label4;

        return $r3;

     label4:
        $z1 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        $z0 = $r3.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        if $z1 != $z0 goto label5;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>($r3);

        return $r6;

     label5:
        $z2 = r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        if $z2 == 0 goto label6;

        $r10 = virtualinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node withNext(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>(null);

        goto label7;

     label6:
        $r10 = $r3;

     label7:
        return $r10;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r1, $r9, $r13;
        java.lang.String $r3, $r8, $r14, r16;
        boolean $z0;
        java.lang.StringBuilder $r0, $r4, $r5, $r6, $r7, $r10, $r11, $r12, $r15;
        java.lang.Object $r2;

        r1 := @this: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.Object value>;

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.String toString()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[visible=");

        $z0 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: boolean isVisible>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        r16 = $r8;

        $r9 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        if $r9 == null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r13 = r1.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node next>;

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: java.lang.String toString()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label1:
        return r16;
    }

    static org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node access$000(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node, org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)
    {
        org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node r0, r1, $r2;

        r0 := @parameter0: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        r1 := @parameter1: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node;

        $r2 = specialinvoke r0.<org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node: org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node append(org.codehaus.jackson.map.introspect.POJOPropertyBuilder$Node)>(r1);

        return $r2;
    }
}
