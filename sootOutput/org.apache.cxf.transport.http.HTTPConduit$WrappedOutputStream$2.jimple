class org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2 extends java.lang.Object implements java.lang.Runnable
{
    final java.util.concurrent.Executor val$ex2;
    final java.lang.Runnable val$origRunnable;
    final org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream this$1;

    void <init>(org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream, java.util.concurrent.Executor, java.lang.Runnable)
    {
        org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream r1;
        java.util.concurrent.Executor r2;
        java.lang.Runnable r3;
        org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2 r0;

        r0 := @this: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2;

        r1 := @parameter0: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream;

        r2 := @parameter1: java.util.concurrent.Executor;

        r3 := @parameter2: java.lang.Runnable;

        r0.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream this$1> = r1;

        r0.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2: java.util.concurrent.Executor val$ex2> = r2;

        r0.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2: java.lang.Runnable val$origRunnable> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.util.concurrent.Executor $r12;
        org.apache.cxf.message.Message $r2;
        org.apache.cxf.message.Exchange $r3;
        java.lang.Runnable $r11;
        org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream $r1;
        java.lang.Boolean $r10;
        java.lang.StringBuilder $r4, $r7, $r8;
        java.lang.Class $r5;
        java.lang.String $r6, $r9;
        org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2 r0;

        r0 := @this: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2;

        $r1 = r0.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2: org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream this$1>;

        $r2 = $r1.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream: org.apache.cxf.message.Message outMessage>;

        $r3 = interfaceinvoke $r2.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Ljava/util/concurrent/Executor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".USING_SPECIFIED");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        interfaceinvoke $r3.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>($r9, $r10);

        $r12 = r0.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2: java.util.concurrent.Executor val$ex2>;

        $r11 = r0.<org.apache.cxf.transport.http.HTTPConduit$WrappedOutputStream$2: java.lang.Runnable val$origRunnable>;

        interfaceinvoke $r12.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r11);

        return;
    }
}
