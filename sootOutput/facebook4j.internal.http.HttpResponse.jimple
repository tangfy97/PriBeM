public abstract class facebook4j.internal.http.HttpResponse extends java.lang.Object
{
    private static final facebook4j.internal.logging.Logger logger;
    protected final facebook4j.internal.http.HttpClientConfiguration CONF;
    protected int statusCode;
    protected java.lang.String responseAsString;
    protected java.io.InputStream is;
    private boolean streamConsumed;
    private facebook4j.internal.org.json.JSONObject json;
    private facebook4j.internal.org.json.JSONArray jsonArray;

    void <init>()
    {
        facebook4j.conf.Configuration $r1;
        facebook4j.internal.http.HttpResponse r0;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString> = null;

        r0.<facebook4j.internal.http.HttpResponse: boolean streamConsumed> = 0;

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json> = null;

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray> = null;

        $r1 = staticinvoke <facebook4j.conf.ConfigurationContext: facebook4j.conf.Configuration getInstance()>();

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.http.HttpClientConfiguration CONF> = $r1;

        return;
    }

    public void <init>(facebook4j.internal.http.HttpClientConfiguration)
    {
        facebook4j.internal.http.HttpClientConfiguration r1;
        facebook4j.internal.http.HttpResponse r0;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        r1 := @parameter0: facebook4j.internal.http.HttpClientConfiguration;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString> = null;

        r0.<facebook4j.internal.http.HttpResponse: boolean streamConsumed> = 0;

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json> = null;

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray> = null;

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.http.HttpClientConfiguration CONF> = r1;

        return;
    }

    public int getStatusCode()
    {
        int $i0;
        facebook4j.internal.http.HttpResponse r0;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        $i0 = r0.<facebook4j.internal.http.HttpResponse: int statusCode>;

        return $i0;
    }

    public abstract java.lang.String getResponseHeader(java.lang.String);

    public abstract java.util.Map getResponseHeaderFields();

    public java.io.InputStream asStream()
    {
        java.lang.IllegalStateException $r2;
        facebook4j.internal.http.HttpResponse r0;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        $z0 = r0.<facebook4j.internal.http.HttpResponse: boolean streamConsumed>;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stream has already been consumed.");

        throw $r2;

     label1:
        $r1 = r0.<facebook4j.internal.http.HttpResponse: java.io.InputStream is>;

        return $r1;
    }

    public java.lang.String asString() throws facebook4j.FacebookException
    {
        java.lang.Throwable $r14;
        facebook4j.internal.http.HttpResponse r0;
        java.lang.String $r1, $r2, $r7, $r8, $r9, $r17;
        java.io.IOException $r12, $r13, $r15, $r18, $r19, $r20, $r21;
        java.io.InputStreamReader $r5;
        facebook4j.FacebookException $r16;
        facebook4j.internal.logging.Logger $r10;
        java.lang.StringBuilder $r6, $r11;
        java.io.BufferedReader $r4, r22;
        java.io.InputStream $r3, r23;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        $r1 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        if null != $r1 goto label34;

        r22 = null;

        r23 = null;

     label01:
        $r3 = virtualinvoke r0.<facebook4j.internal.http.HttpResponse: java.io.InputStream asStream()>();

        r23 = $r3;

        if null != $r3 goto label11;

     label02:
        if $r3 == null goto label06;

     label03:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label04:
        goto label06;

     label05:
        $r21 := @caughtexception;

     label06:
        if null == null goto label10;

     label07:
        virtualinvoke r22.<java.io.BufferedReader: void close()>();

     label08:
        goto label10;

     label09:
        $r20 := @caughtexception;

     label10:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        return null;

     label11:
        $r4 = new java.io.BufferedReader;

        $r5 = new java.io.InputStreamReader;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, "UTF-8");

        specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5);

        r22 = $r4;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

     label12:
        $r7 = virtualinvoke $r4.<java.io.BufferedReader: java.lang.String readLine()>();

        if $r7 == null goto label13;

        $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        goto label12;

     label13:
        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString> = $r8;

        $r10 = <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger>;

        $r9 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        virtualinvoke $r10.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r9);

        virtualinvoke $r3.<java.io.InputStream: void close()>();

        r0.<facebook4j.internal.http.HttpResponse: boolean streamConsumed> = 1;

     label14:
        if $r3 == null goto label18;

     label15:
        virtualinvoke $r3.<java.io.InputStream: void close()>();

     label16:
        goto label18;

     label17:
        $r19 := @caughtexception;

     label18:
        if $r4 == null goto label22;

     label19:
        virtualinvoke $r4.<java.io.BufferedReader: void close()>();

     label20:
        goto label22;

     label21:
        $r18 := @caughtexception;

     label22:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        goto label34;

     label23:
        $r15 := @caughtexception;

        $r16 = new facebook4j.FacebookException;

        $r17 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>();

        specialinvoke $r16.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable)>($r17, $r15);

        throw $r16;

     label24:
        $r14 := @caughtexception;

     label25:
        if r23 == null goto label29;

     label26:
        virtualinvoke r23.<java.io.InputStream: void close()>();

     label27:
        goto label29;

     label28:
        $r13 := @caughtexception;

     label29:
        if r22 == null goto label33;

     label30:
        virtualinvoke r22.<java.io.BufferedReader: void close()>();

     label31:
        goto label33;

     label32:
        $r12 := @caughtexception;

     label33:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        throw $r14;

     label34:
        $r2 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        return $r2;

        catch java.io.IOException from label03 to label04 with label05;
        catch java.io.IOException from label07 to label08 with label09;
        catch java.io.IOException from label15 to label16 with label17;
        catch java.io.IOException from label19 to label20 with label21;
        catch java.io.IOException from label01 to label02 with label23;
        catch java.io.IOException from label11 to label14 with label23;
        catch java.lang.Throwable from label01 to label02 with label24;
        catch java.lang.Throwable from label11 to label14 with label24;
        catch java.io.IOException from label26 to label27 with label28;
        catch java.io.IOException from label30 to label31 with label32;
        catch java.lang.Throwable from label23 to label25 with label24;
    }

    public facebook4j.internal.org.json.JSONObject asJSONObject() throws facebook4j.FacebookException
    {
        facebook4j.internal.http.HttpResponse r0;
        facebook4j.internal.http.HttpClientConfiguration $r6;
        facebook4j.internal.org.json.JSONObject $r1, $r2, $r4, $r8, $r10, $r14;
        boolean $z0;
        java.io.Reader $r13, r31;
        facebook4j.FacebookException $r20, $r28;
        facebook4j.internal.logging.Logger $r9, $r11;
        java.lang.StringBuilder $r21, $r23, $r24, $r26;
        java.lang.Throwable $r17;
        facebook4j.internal.org.json.JSONTokener $r15;
        java.lang.String $r3, $r5, $r7, $r12, $r19, $r22, $r25, $r27, $r29, $r32;
        java.io.IOException $r16, $r30;
        facebook4j.internal.org.json.JSONException $r18;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        $r1 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json>;

        if $r1 != null goto label20;

        r31 = null;

     label01:
        $r3 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        if $r3 != null goto label02;

        $r13 = virtualinvoke r0.<facebook4j.internal.http.HttpResponse: java.io.Reader asReader()>();

        r31 = $r13;

        $r14 = new facebook4j.internal.org.json.JSONObject;

        $r15 = new facebook4j.internal.org.json.JSONTokener;

        specialinvoke $r15.<facebook4j.internal.org.json.JSONTokener: void <init>(java.io.Reader)>($r13);

        specialinvoke $r14.<facebook4j.internal.org.json.JSONObject: void <init>(facebook4j.internal.org.json.JSONTokener)>($r15);

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json> = $r14;

        goto label03;

     label02:
        $r4 = new facebook4j.internal.org.json.JSONObject;

        $r5 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        specialinvoke $r4.<facebook4j.internal.org.json.JSONObject: void <init>(java.lang.String)>($r5);

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json> = $r4;

     label03:
        $r6 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $z0 = interfaceinvoke $r6.<facebook4j.internal.http.HttpClientConfiguration: boolean isPrettyDebugEnabled()>();

        if $z0 == 0 goto label04;

        $r11 = <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger>;

        $r10 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json>;

        $r12 = virtualinvoke $r10.<facebook4j.internal.org.json.JSONObject: java.lang.String toString(int)>(1);

        virtualinvoke $r11.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r12);

        goto label07;

     label04:
        $r9 = <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger>;

        $r7 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        if $r7 == null goto label05;

        $r32 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        goto label06;

     label05:
        $r8 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json>;

        $r32 = virtualinvoke $r8.<facebook4j.internal.org.json.JSONObject: java.lang.String toString()>();

     label06:
        virtualinvoke $r9.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r32);

     label07:
        if r31 == null goto label11;

     label08:
        virtualinvoke r31.<java.io.Reader: void close()>();

     label09:
        goto label11;

     label10:
        $r30 := @caughtexception;

     label11:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        goto label20;

     label12:
        $r18 := @caughtexception;

        $r19 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        if $r19 != null goto label13;

        $r28 = new facebook4j.FacebookException;

        $r29 = virtualinvoke $r18.<facebook4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r28.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r18);

        throw $r28;

     label13:
        $r20 = new facebook4j.FacebookException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r18.<facebook4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r25 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        $r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable)>($r27, $r18);

        throw $r20;

     label14:
        $r17 := @caughtexception;

     label15:
        if r31 == null goto label19;

     label16:
        virtualinvoke r31.<java.io.Reader: void close()>();

     label17:
        goto label19;

     label18:
        $r16 := @caughtexception;

     label19:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        throw $r17;

     label20:
        $r2 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONObject json>;

        return $r2;

        catch java.io.IOException from label08 to label09 with label10;
        catch facebook4j.internal.org.json.JSONException from label01 to label07 with label12;
        catch java.lang.Throwable from label01 to label07 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label12 to label15 with label14;
    }

    public facebook4j.internal.org.json.JSONArray asJSONArray() throws facebook4j.FacebookException
    {
        facebook4j.internal.http.HttpResponse r0;
        facebook4j.internal.http.HttpClientConfiguration $r6;
        boolean $z0, $z1;
        java.io.Reader $r13, r31;
        facebook4j.FacebookException $r20, $r22;
        facebook4j.internal.logging.Logger $r9, $r11, $r19;
        java.lang.StringBuilder $r23, $r25, $r26, $r28;
        java.lang.Throwable $r17;
        facebook4j.internal.org.json.JSONTokener $r15;
        java.lang.String $r3, $r5, $r7, $r12, $r21, $r24, $r27, $r29, $r32;
        java.io.IOException $r16, $r30;
        facebook4j.internal.org.json.JSONException $r18;
        facebook4j.internal.org.json.JSONArray $r1, $r2, $r4, $r8, $r10, $r14;

        r0 := @this: facebook4j.internal.http.HttpResponse;

        $r1 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray>;

        if $r1 != null goto label20;

        r31 = null;

     label01:
        $r3 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        if $r3 != null goto label02;

        $r13 = virtualinvoke r0.<facebook4j.internal.http.HttpResponse: java.io.Reader asReader()>();

        r31 = $r13;

        $r14 = new facebook4j.internal.org.json.JSONArray;

        $r15 = new facebook4j.internal.org.json.JSONTokener;

        specialinvoke $r15.<facebook4j.internal.org.json.JSONTokener: void <init>(java.io.Reader)>($r13);

        specialinvoke $r14.<facebook4j.internal.org.json.JSONArray: void <init>(facebook4j.internal.org.json.JSONTokener)>($r15);

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray> = $r14;

        goto label03;

     label02:
        $r4 = new facebook4j.internal.org.json.JSONArray;

        $r5 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        specialinvoke $r4.<facebook4j.internal.org.json.JSONArray: void <init>(java.lang.String)>($r5);

        r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray> = $r4;

     label03:
        $r6 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.http.HttpClientConfiguration CONF>;

        $z0 = interfaceinvoke $r6.<facebook4j.internal.http.HttpClientConfiguration: boolean isPrettyDebugEnabled()>();

        if $z0 == 0 goto label04;

        $r11 = <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger>;

        $r10 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray>;

        $r12 = virtualinvoke $r10.<facebook4j.internal.org.json.JSONArray: java.lang.String toString(int)>(1);

        virtualinvoke $r11.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r12);

        goto label07;

     label04:
        $r9 = <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger>;

        $r7 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        if $r7 == null goto label05;

        $r32 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        goto label06;

     label05:
        $r8 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray>;

        $r32 = virtualinvoke $r8.<facebook4j.internal.org.json.JSONArray: java.lang.String toString()>();

     label06:
        virtualinvoke $r9.<facebook4j.internal.logging.Logger: void debug(java.lang.String)>($r32);

     label07:
        if r31 == null goto label11;

     label08:
        virtualinvoke r31.<java.io.Reader: void close()>();

     label09:
        goto label11;

     label10:
        $r30 := @caughtexception;

     label11:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        goto label20;

     label12:
        $r18 := @caughtexception;

        $r19 = <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger>;

        $z1 = virtualinvoke $r19.<facebook4j.internal.logging.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label13;

        $r22 = new facebook4j.FacebookException;

        $r23 = new java.lang.StringBuilder;

        specialinvoke $r23.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r18.<facebook4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        $r25 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");

        $r27 = r0.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable)>($r29, $r18);

        throw $r22;

     label13:
        $r20 = new facebook4j.FacebookException;

        $r21 = virtualinvoke $r18.<facebook4j.internal.org.json.JSONException: java.lang.String getMessage()>();

        specialinvoke $r20.<facebook4j.FacebookException: void <init>(java.lang.String,java.lang.Throwable)>($r21, $r18);

        throw $r20;

     label14:
        $r17 := @caughtexception;

     label15:
        if r31 == null goto label19;

     label16:
        virtualinvoke r31.<java.io.Reader: void close()>();

     label17:
        goto label19;

     label18:
        $r16 := @caughtexception;

     label19:
        specialinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnectForcibly()>();

        throw $r17;

     label20:
        $r2 = r0.<facebook4j.internal.http.HttpResponse: facebook4j.internal.org.json.JSONArray jsonArray>;

        return $r2;

        catch java.io.IOException from label08 to label09 with label10;
        catch facebook4j.internal.org.json.JSONException from label01 to label07 with label12;
        catch java.lang.Throwable from label01 to label07 with label14;
        catch java.io.IOException from label16 to label17 with label18;
        catch java.lang.Throwable from label12 to label15 with label14;
    }

    public java.io.Reader asReader()
    {
        facebook4j.internal.http.HttpResponse r2;
        java.io.BufferedReader $r0;
        java.io.InputStreamReader $r1, $r5;
        java.io.UnsupportedEncodingException $r4;
        java.io.InputStream $r3, $r6;

        r2 := @this: facebook4j.internal.http.HttpResponse;

     label1:
        $r0 = new java.io.BufferedReader;

        $r1 = new java.io.InputStreamReader;

        $r3 = r2.<facebook4j.internal.http.HttpResponse: java.io.InputStream is>;

        specialinvoke $r1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>($r3, "UTF-8");

        specialinvoke $r0.<java.io.BufferedReader: void <init>(java.io.Reader)>($r1);

     label2:
        return $r0;

     label3:
        $r4 := @caughtexception;

        $r5 = new java.io.InputStreamReader;

        $r6 = r2.<facebook4j.internal.http.HttpResponse: java.io.InputStream is>;

        specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>($r6);

        return $r5;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    private void disconnectForcibly()
    {
        java.lang.Exception $r1;
        facebook4j.internal.http.HttpResponse r0;

        r0 := @this: facebook4j.internal.http.HttpResponse;

     label1:
        virtualinvoke r0.<facebook4j.internal.http.HttpResponse: void disconnect()>();

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public abstract void disconnect() throws java.io.IOException;

    public java.lang.String toString()
    {
        facebook4j.internal.http.HttpResponse r2;
        int $i0;
        java.lang.String $r5, $r14;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7, $r8, $r10, $r11, $r12, $r13;
        java.io.InputStream $r9;

        r2 := @this: facebook4j.internal.http.HttpResponse;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("HttpResponse{statusCode=");

        $i0 = r2.<facebook4j.internal.http.HttpResponse: int statusCode>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", responseAsString=\'");

        $r5 = r2.<facebook4j.internal.http.HttpResponse: java.lang.String responseAsString>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", is=");

        $r9 = r2.<facebook4j.internal.http.HttpResponse: java.io.InputStream is>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", streamConsumed=");

        $z0 = r2.<facebook4j.internal.http.HttpResponse: boolean streamConsumed>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    static void <clinit>()
    {
        facebook4j.internal.logging.Logger $r0;

        $r0 = staticinvoke <facebook4j.internal.logging.Logger: facebook4j.internal.logging.Logger getLogger(java.lang.Class)>(class "Lfacebook4j/internal/http/HttpResponseImpl;");

        <facebook4j.internal.http.HttpResponse: facebook4j.internal.logging.Logger logger> = $r0;

        return;
    }
}
