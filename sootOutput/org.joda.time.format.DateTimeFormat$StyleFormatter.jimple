class org.joda.time.format.DateTimeFormat$StyleFormatter extends java.lang.Object implements org.joda.time.format.DateTimePrinter, org.joda.time.format.DateTimeParser
{
    private static final java.util.Map cCache;
    private final int iDateStyle;
    private final int iTimeStyle;
    private final int iType;

    void <init>(int, int, int)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        int i0, i1, i2;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle> = i0;

        r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle> = i1;

        r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType> = i2;

        return;
    }

    public int estimatePrintedLength()
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        return 40;
    }

    public void printTo(java.lang.StringBuffer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale)
    {
        org.joda.time.DateTimeZone r6;
        org.joda.time.format.DateTimeFormatter $r2;
        org.joda.time.Chronology r5;
        long l0;
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        java.util.Locale r1;
        java.lang.StringBuffer r4;
        org.joda.time.format.DateTimePrinter $r3;
        int i1;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r4 := @parameter0: java.lang.StringBuffer;

        l0 := @parameter1: long;

        r5 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r6 := @parameter4: org.joda.time.DateTimeZone;

        r1 := @parameter5: java.util.Locale;

        $r2 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>(r1);

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimePrinter getPrinter()>();

        interfaceinvoke $r3.<org.joda.time.format.DateTimePrinter: void printTo(java.lang.StringBuffer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>(r4, l0, r5, i1, r6, r1);

        return;
    }

    public void printTo(java.io.Writer, long, org.joda.time.Chronology, int, org.joda.time.DateTimeZone, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.DateTimeZone r6;
        org.joda.time.format.DateTimeFormatter $r2;
        org.joda.time.Chronology r5;
        long l0;
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        java.util.Locale r1;
        org.joda.time.format.DateTimePrinter $r3;
        java.io.Writer r4;
        int i1;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r4 := @parameter0: java.io.Writer;

        l0 := @parameter1: long;

        r5 := @parameter2: org.joda.time.Chronology;

        i1 := @parameter3: int;

        r6 := @parameter4: org.joda.time.DateTimeZone;

        r1 := @parameter5: java.util.Locale;

        $r2 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>(r1);

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimePrinter getPrinter()>();

        interfaceinvoke $r3.<org.joda.time.format.DateTimePrinter: void printTo(java.io.Writer,long,org.joda.time.Chronology,int,org.joda.time.DateTimeZone,java.util.Locale)>(r4, l0, r5, i1, r6, r1);

        return;
    }

    public void printTo(java.lang.StringBuffer, org.joda.time.ReadablePartial, java.util.Locale)
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        org.joda.time.format.DateTimeFormatter $r2;
        java.util.Locale r1;
        java.lang.StringBuffer r4;
        org.joda.time.format.DateTimePrinter $r3;
        org.joda.time.ReadablePartial r5;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r4 := @parameter0: java.lang.StringBuffer;

        r5 := @parameter1: org.joda.time.ReadablePartial;

        r1 := @parameter2: java.util.Locale;

        $r2 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>(r1);

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimePrinter getPrinter()>();

        interfaceinvoke $r3.<org.joda.time.format.DateTimePrinter: void printTo(java.lang.StringBuffer,org.joda.time.ReadablePartial,java.util.Locale)>(r4, r5, r1);

        return;
    }

    public void printTo(java.io.Writer, org.joda.time.ReadablePartial, java.util.Locale) throws java.io.IOException
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        org.joda.time.format.DateTimeFormatter $r2;
        java.util.Locale r1;
        org.joda.time.format.DateTimePrinter $r3;
        java.io.Writer r4;
        org.joda.time.ReadablePartial r5;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r4 := @parameter0: java.io.Writer;

        r5 := @parameter1: org.joda.time.ReadablePartial;

        r1 := @parameter2: java.util.Locale;

        $r2 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>(r1);

        $r3 = virtualinvoke $r2.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimePrinter getPrinter()>();

        interfaceinvoke $r3.<org.joda.time.format.DateTimePrinter: void printTo(java.io.Writer,org.joda.time.ReadablePartial,java.util.Locale)>(r4, r5, r1);

        return;
    }

    public int estimateParsedLength()
    {
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        return 40;
    }

    public int parseInto(org.joda.time.format.DateTimeParserBucket, java.lang.String, int)
    {
        org.joda.time.format.DateTimeParser $r4;
        org.joda.time.format.DateTimeFormatter $r3;
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;
        java.util.Locale $r2;
        int i0, $i1;
        org.joda.time.format.DateTimeParserBucket r1;
        java.lang.String r5;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r1 := @parameter0: org.joda.time.format.DateTimeParserBucket;

        r5 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        $r2 = virtualinvoke r1.<org.joda.time.format.DateTimeParserBucket: java.util.Locale getLocale()>();

        $r3 = specialinvoke r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)>($r2);

        $r4 = virtualinvoke $r3.<org.joda.time.format.DateTimeFormatter: org.joda.time.format.DateTimeParser getParser()>();

        $i1 = interfaceinvoke $r4.<org.joda.time.format.DateTimeParser: int parseInto(org.joda.time.format.DateTimeParserBucket,java.lang.String,int)>(r1, r5, i0);

        return $i1;
    }

    private org.joda.time.format.DateTimeFormatter getFormatter(java.util.Locale)
    {
        java.lang.Throwable $r14;
        java.lang.StringBuffer $r0, $r3, $r5;
        java.util.Locale r15, $r16;
        java.util.Map $r7, $r8, $r12;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r2, $r4, $r6, $r10;
        org.joda.time.format.DateTimeFormatter $r11, $r13, r17;
        org.joda.time.format.DateTimeFormat$StyleFormatter r1;
        java.lang.Object $r9;

        r1 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r15 := @parameter0: java.util.Locale;

        if r15 != null goto label1;

        $r16 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();

        goto label2;

     label1:
        $r16 = r15;

     label2:
        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $i2 = r1.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType>;

        $i0 = r1.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>;

        $i1 = $i0 << 4;

        $i5 = $i2 + $i1;

        $i3 = r1.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>;

        $i4 = $i3 << 8;

        $i6 = $i5 + $i4;

        $r2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i6);

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r16.<java.util.Locale: java.lang.String toString()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.Map cCache>;

        entermonitor $r7;

     label3:
        $r8 = <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.Map cCache>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>($r6);

        $r13 = (org.joda.time.format.DateTimeFormatter) $r9;

        r17 = $r13;

        if $r13 != null goto label4;

        $r10 = virtualinvoke r1.<org.joda.time.format.DateTimeFormat$StyleFormatter: java.lang.String getPattern(java.util.Locale)>($r16);

        $r11 = staticinvoke <org.joda.time.format.DateTimeFormat: org.joda.time.format.DateTimeFormatter forPattern(java.lang.String)>($r10);

        r17 = $r11;

        $r12 = <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.Map cCache>;

        interfaceinvoke $r12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r11);

     label4:
        exitmonitor $r7;

     label5:
        goto label8;

     label6:
        $r14 := @caughtexception;

        exitmonitor $r7;

     label7:
        throw $r14;

     label8:
        return r17;

        catch java.lang.Throwable from label3 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    java.lang.String getPattern(java.util.Locale)
    {
        java.text.SimpleDateFormat $r2;
        java.util.Locale r1;
        java.lang.StringBuffer $r5, $r6, $r7;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3, $r8;
        java.text.DateFormat r9;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        org.joda.time.format.DateTimeFormat$StyleFormatter r0;

        r0 := @this: org.joda.time.format.DateTimeFormat$StyleFormatter;

        r1 := @parameter0: java.util.Locale;

        r9 = null;

        $i0 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iType>;

        tableswitch($i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $i4 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>;

        r9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>($i4, r1);

        goto label4;

     label2:
        $i3 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>;

        r9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>($i3, r1);

        goto label4;

     label3:
        $i2 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iDateStyle>;

        $i1 = r0.<org.joda.time.format.DateTimeFormat$StyleFormatter: int iTimeStyle>;

        r9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>($i2, $i1, r1);

     label4:
        $z0 = r9 instanceof java.text.SimpleDateFormat;

        if $z0 != 0 goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No datetime pattern for locale: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r4;

     label5:
        $r2 = (java.text.SimpleDateFormat) r9;

        $r3 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.lang.String toPattern()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.util.HashMap $r0;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        <org.joda.time.format.DateTimeFormat$StyleFormatter: java.util.Map cCache> = $r0;

        return;
    }
}
