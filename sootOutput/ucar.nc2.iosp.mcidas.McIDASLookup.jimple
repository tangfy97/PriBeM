public final class ucar.nc2.iosp.mcidas.McIDASLookup extends java.lang.Object implements ucar.grid.GridTableLookup
{
    private ucar.nc2.iosp.mcidas.McIDASGridRecord sample;

    public void <init>(ucar.nc2.iosp.mcidas.McIDASGridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.nc2.iosp.mcidas.McIDASGridRecord;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASLookup: ucar.nc2.iosp.mcidas.McIDASGridRecord sample> = r1;

        return;
    }

    public java.lang.String getShapeName(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        ucar.grid.GridDefRecord r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        return "Spherical";
    }

    public final java.lang.String getGridName(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r2;
        java.lang.String $r1;
        ucar.grid.GridDefRecord r0;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridDefRecord;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    public final ucar.grid.GridParameter getParameter(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r8;
        ucar.grid.GridParameter $r7;
        ucar.nc2.iosp.mcidas.McIDASGridRecord r1;
        java.lang.String $r2, $r3, $r4, $r5, $r6, r9;
        ucar.grid.GridRecord r0;
        boolean $z0;

        r8 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        r1 = (ucar.nc2.iosp.mcidas.McIDASGridRecord) r0;

        $r2 = virtualinvoke r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getParameterName()>();

        $r3 = virtualinvoke r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getGridDescription()>();

        r9 = $r3;

        $r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        r9 = $r2;

     label1:
        $r5 = virtualinvoke r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getParamUnitName()>();

        $r6 = staticinvoke <visad.jmet.MetUnits: java.lang.String makeSymbol(java.lang.String)>($r5);

        $r7 = new ucar.grid.GridParameter;

        specialinvoke $r7.<ucar.grid.GridParameter: void <init>(int,java.lang.String,java.lang.String,java.lang.String)>(0, $r2, r9, $r6);

        return $r7;
    }

    public final java.lang.String getDisciplineName(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        return "Meteorological Products";
    }

    public final java.lang.String getCategoryName(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        return "Meteorological Parameters";
    }

    public final java.lang.String getLevelName(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r3;
        int i0, i1, $i2;
        java.lang.String $r2, $r4;
        ucar.grid.GridRecord r1;
        double $d0, $d1;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.grid.GridRecord;

        $r2 = virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>(r1);

        $d0 = interfaceinvoke r1.<ucar.grid.GridRecord: double getLevel1()>();

        i0 = (int) $d0;

        $d1 = interfaceinvoke r1.<ucar.grid.GridRecord: double getLevel2()>();

        i1 = (int) $d1;

        $i2 = interfaceinvoke r1.<ucar.grid.GridRecord: int getLevelType1()>();

        $r3 = (ucar.nc2.iosp.mcidas.McIDASGridRecord) r1;

        $z0 = virtualinvoke $r3.<ucar.nc2.iosp.mcidas.McIDASGridRecord: boolean hasGribInfo()>();

        if $z0 == 0 goto label1;

        $r4 = staticinvoke <ucar.grib.grib1.GribPDSLevel: java.lang.String getNameShort(int)>($i2);

        return $r4;

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("hPa");

        if $z1 == 0 goto label2;

        return "pressure";

     label2:
        if i0 != 1013 goto label3;

        return "mean sea level";

     label3:
        if i0 != 0 goto label4;

        return "tropopause";

     label4:
        if i0 != 1001 goto label5;

        return "surface";

     label5:
        if i1 == 0 goto label6;

        return "layer";

     label6:
        return "";
    }

    public final java.lang.String getLevelDescription(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r1;
        ucar.nc2.iosp.mcidas.McIDASLookup r2;
        int $i0;
        java.lang.String $r3, $r4;
        ucar.grid.GridRecord r0;
        boolean $z0;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $r1 = (ucar.nc2.iosp.mcidas.McIDASGridRecord) r0;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: boolean hasGribInfo()>();

        if $z0 == 0 goto label1;

        $i0 = interfaceinvoke r0.<ucar.grid.GridRecord: int getLevelType1()>();

        $r4 = staticinvoke <ucar.grib.grib1.GribPDSLevel: java.lang.String getNameShort(int)>($i0);

        return $r4;

     label1:
        $r3 = virtualinvoke r2.<ucar.nc2.iosp.mcidas.McIDASLookup: java.lang.String getLevelName(ucar.grid.GridRecord)>(r0);

        return $r3;
    }

    public final java.lang.String getLevelUnit(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r1;
        ucar.nc2.iosp.mcidas.McIDASLookup r4;
        java.lang.String $r2, $r3;
        ucar.grid.GridRecord r0;

        r4 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $r1 = (ucar.nc2.iosp.mcidas.McIDASGridRecord) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.lang.String getLevelUnitName()>();

        $r3 = staticinvoke <visad.jmet.MetUnits: java.lang.String makeSymbol(java.lang.String)>($r2);

        return $r3;
    }

    public final java.lang.String getTimeRangeUnitName(int)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        int i0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        i0 := @parameter0: int;

        return "hour";
    }

    public final java.util.Date getFirstBaseTime()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        java.util.Date $r2;
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASLookup: ucar.nc2.iosp.mcidas.McIDASGridRecord sample>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: java.util.Date getReferenceTime()>();

        return $r2;
    }

    public final boolean isLatLon(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        java.lang.String $r2;
        ucar.grid.GridDefRecord r1;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASLookup: java.lang.String getProjectionName(ucar.grid.GridDefRecord)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("EQUI");

        return $z0;
    }

    public final int getProjectionType(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;
        ucar.grid.GridDefRecord r1;
        int $i1;
        java.lang.String $r2, $r3;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r1 := @parameter0: ucar.grid.GridDefRecord;

        $r2 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASLookup: java.lang.String getProjectionName(ucar.grid.GridDefRecord)>(r1);

        $r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("MERC");

        if $z0 == 0 goto label1;

        return 3;

     label1:
        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("CONF");

        if $z1 == 0 goto label2;

        return 2;

     label2:
        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("PS");

        if $z2 == 0 goto label3;

        return 1;

     label3:
        $i1 = (int) -1;

        return $i1;
    }

    public final boolean isVerticalCoordinate(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r1;
        int $i0;
        ucar.nc2.iosp.mcidas.McIDASLookup r2;
        java.lang.String $r3;
        ucar.grid.GridRecord r0;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $i0 = interfaceinvoke r0.<ucar.grid.GridRecord: int getLevelType1()>();

        $r1 = (ucar.nc2.iosp.mcidas.McIDASGridRecord) r0;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: boolean hasGribInfo()>();

        if $z0 == 0 goto label6;

        if $i0 != 20 goto label1;

        return 1;

     label1:
        if $i0 != 100 goto label2;

        return 1;

     label2:
        if $i0 != 101 goto label3;

        return 1;

     label3:
        if $i0 < 103 goto label4;

        if $i0 > 128 goto label4;

        return 1;

     label4:
        if $i0 != 141 goto label5;

        return 1;

     label5:
        if $i0 != 160 goto label7;

        return 1;

     label6:
        $r3 = virtualinvoke r2.<ucar.nc2.iosp.mcidas.McIDASLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>(r0);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("hPa");

        if $z1 == 0 goto label7;

        return 1;

     label7:
        return 0;
    }

    public final boolean isPositiveUp(ucar.grid.GridRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASGridRecord $r1;
        int $i0;
        ucar.nc2.iosp.mcidas.McIDASLookup r2;
        java.lang.String $r3;
        ucar.grid.GridRecord r0;
        boolean $z0, $z1;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $i0 = interfaceinvoke r0.<ucar.grid.GridRecord: int getLevelType1()>();

        $r1 = (ucar.nc2.iosp.mcidas.McIDASGridRecord) r0;

        $z0 = virtualinvoke $r1.<ucar.nc2.iosp.mcidas.McIDASGridRecord: boolean hasGribInfo()>();

        if $z0 == 0 goto label8;

        if $i0 != 103 goto label1;

        return 1;

     label1:
        if $i0 != 104 goto label2;

        return 1;

     label2:
        if $i0 != 105 goto label3;

        return 1;

     label3:
        if $i0 != 106 goto label4;

        return 1;

     label4:
        if $i0 != 111 goto label5;

        return 1;

     label5:
        if $i0 != 112 goto label6;

        return 1;

     label6:
        if $i0 != 125 goto label7;

        return 1;

     label7:
        $r3 = virtualinvoke r2.<ucar.nc2.iosp.mcidas.McIDASLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>(r0);

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>("hPa");

        if $z1 == 0 goto label8;

        return 0;

     label8:
        return 1;
    }

    public final float getFirstMissingValue()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        return -2.13906214E9F;
    }

    public boolean isLayer(ucar.grid.GridRecord)
    {
        byte $b0;
        ucar.nc2.iosp.mcidas.McIDASLookup r1;
        ucar.grid.GridRecord r0;
        double $d0;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridRecord;

        $d0 = interfaceinvoke r0.<ucar.grid.GridRecord: double getLevel2()>();

        $b0 = $d0 cmpl 0.0;

        if $b0 != 0 goto label1;

        return 0;

     label1:
        return 1;
    }

    private java.lang.String getProjectionName(ucar.grid.GridDefRecord)
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r2;
        java.lang.String $r1;
        ucar.grid.GridDefRecord r0;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        r0 := @parameter0: ucar.grid.GridDefRecord;

        $r1 = virtualinvoke r0.<ucar.grid.GridDefRecord: java.lang.String getParam(java.lang.String)>("ProjFlag");

        return $r1;
    }

    public final java.lang.String getTitle()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        return "GRID data";
    }

    public java.lang.String getInstitution()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        return null;
    }

    public final java.lang.String getSource()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        return null;
    }

    public final java.lang.String getComment()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        return null;
    }

    public java.lang.String getGridType()
    {
        ucar.nc2.iosp.mcidas.McIDASLookup r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASLookup;

        return "McIDAS";
    }
}
