final class com.google.gxp.com.google.common.base.UnicodeEscaper$1 extends java.lang.Object implements java.lang.Appendable
{
    int pendingHighSurrogate;
    char[] decodedChars;
    final java.lang.Appendable val$out;
    final com.google.gxp.com.google.common.base.UnicodeEscaper this$0;

    void <init>(com.google.gxp.com.google.common.base.UnicodeEscaper, java.lang.Appendable)
    {
        java.lang.Appendable r2;
        int $i1;
        char[] $r3;
        com.google.gxp.com.google.common.base.UnicodeEscaper$1 r0;
        com.google.gxp.com.google.common.base.UnicodeEscaper r1;

        r0 := @this: com.google.gxp.com.google.common.base.UnicodeEscaper$1;

        r1 := @parameter0: com.google.gxp.com.google.common.base.UnicodeEscaper;

        r2 := @parameter1: java.lang.Appendable;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: com.google.gxp.com.google.common.base.UnicodeEscaper this$0> = r1;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = (int) -1;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate> = $i1;

        $r3 = newarray (char)[2];

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: char[] decodedChars> = $r3;

        return;
    }

    public java.lang.Appendable append(java.lang.CharSequence) throws java.io.IOException
    {
        java.lang.CharSequence r1;
        java.lang.Appendable $r2;
        int $i0;
        com.google.gxp.com.google.common.base.UnicodeEscaper$1 r0;

        r0 := @this: com.google.gxp.com.google.common.base.UnicodeEscaper$1;

        r1 := @parameter0: java.lang.CharSequence;

        $i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>();

        $r2 = virtualinvoke r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable append(java.lang.CharSequence,int,int)>(r1, 0, $i0);

        return $r2;
    }

    public java.lang.Appendable append(java.lang.CharSequence, int, int) throws java.io.IOException
    {
        byte $b18;
        com.google.gxp.com.google.common.base.UnicodeEscaper $r2, $r7, $r15;
        boolean $z0, $z1;
        java.lang.CharSequence r1;
        com.google.gxp.com.google.common.base.UnicodeEscaper$1 r0;
        java.lang.StringBuilder $r12, $r13, $r16;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i14, i15, i16, $i17, $i20, $i22;
        java.lang.String $r14;
        java.lang.Appendable $r6, $r9;
        char $c8, $c10, $c13;
        java.lang.IllegalArgumentException $r17;
        char[] $r3, $r4, $r5, $r8;

        r0 := @this: com.google.gxp.com.google.common.base.UnicodeEscaper$1;

        r1 := @parameter0: java.lang.CharSequence;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        i15 = i0;

        if i0 >= i1 goto label12;

        i16 = i0;

        $i2 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate>;

        $i20 = (int) -1;

        if $i2 == $i20 goto label04;

        i15 = i0 + 1;

        $c8 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i0);

        $z1 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>($c8);

        if $z1 != 0 goto label01;

        $r17 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected low surrogate character but got ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r17;

     label01:
        $r7 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: com.google.gxp.com.google.common.base.UnicodeEscaper this$0>;

        $i9 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate>;

        $c10 = (char) $i9;

        $i11 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c10, $c8);

        $r8 = virtualinvoke $r7.<com.google.gxp.com.google.common.base.UnicodeEscaper: char[] escape(int)>($i11);

        if $r8 == null goto label02;

        $i14 = lengthof $r8;

        specialinvoke r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: void outputChars(char[],int)>($r8, $i14);

        i16 = i0 + 1;

        goto label03;

     label02:
        $r9 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out>;

        $i12 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate>;

        $c13 = (char) $i12;

        interfaceinvoke $r9.<java.lang.Appendable: java.lang.Appendable append(char)>($c13);

     label03:
        $i22 = (int) -1;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate> = $i22;

     label04:
        $r15 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: com.google.gxp.com.google.common.base.UnicodeEscaper this$0>;

        $i17 = virtualinvoke $r15.<com.google.gxp.com.google.common.base.UnicodeEscaper: int nextEscapeIndex(java.lang.CharSequence,int,int)>(r1, i15, i1);

        if $i17 <= i16 goto label05;

        $r6 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out>;

        interfaceinvoke $r6.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence,int,int)>(r1, i16, $i17);

     label05:
        if $i17 != i1 goto label06;

        goto label12;

     label06:
        $i3 = staticinvoke <com.google.gxp.com.google.common.base.UnicodeEscaper: int codePointAt(java.lang.CharSequence,int,int)>(r1, $i17, i1);

        if $i3 >= 0 goto label07;

        $i7 = neg $i3;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate> = $i7;

        goto label12;

     label07:
        $r2 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: com.google.gxp.com.google.common.base.UnicodeEscaper this$0>;

        $r3 = virtualinvoke $r2.<com.google.gxp.com.google.common.base.UnicodeEscaper: char[] escape(int)>($i3);

        if $r3 == null goto label08;

        $i6 = lengthof $r3;

        specialinvoke r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: void outputChars(char[],int)>($r3, $i6);

        goto label09;

     label08:
        $r4 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: char[] decodedChars>;

        $i4 = staticinvoke <java.lang.Character: int toChars(int,char[],int)>($i3, $r4, 0);

        $r5 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: char[] decodedChars>;

        specialinvoke r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: void outputChars(char[],int)>($r5, $i4);

     label09:
        $z0 = staticinvoke <java.lang.Character: boolean isSupplementaryCodePoint(int)>($i3);

        if $z0 == 0 goto label10;

        $b18 = 2;

        goto label11;

     label10:
        $b18 = 1;

     label11:
        $i5 = $i17 + $b18;

        i15 = $i5;

        i16 = $i5;

        goto label04;

     label12:
        return r0;
    }

    public java.lang.Appendable append(char) throws java.io.IOException
    {
        com.google.gxp.com.google.common.base.UnicodeEscaper $r1, $r11;
        boolean $z0, $z1, $z2;
        com.google.gxp.com.google.common.base.UnicodeEscaper$1 r0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r17, $r18, $r19, $r20, $r22, $r24;
        int $i0, $i2, $i3, $i5, $i6, $i8, $i10, $i11, $i13, $i14, $i15, $i16;
        java.lang.String $r10, $r21;
        java.lang.Appendable $r3, $r13, $r14;
        char c1, $c4, $c7;
        java.lang.IllegalArgumentException $r23, $r25;
        char[] $r2, $r12;

        r0 := @this: com.google.gxp.com.google.common.base.UnicodeEscaper$1;

        c1 := @parameter0: char;

        $i0 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate>;

        $i10 = (int) -1;

        if $i0 == $i10 goto label4;

        $z2 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c1);

        if $z2 != 0 goto label1;

        $r23 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Expected low surrogate character but got \'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with value ");

        $i11 = (int) c1;

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r21);

        throw $r23;

     label1:
        $r11 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: com.google.gxp.com.google.common.base.UnicodeEscaper this$0>;

        $i3 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate>;

        $c4 = (char) $i3;

        $i5 = staticinvoke <java.lang.Character: int toCodePoint(char,char)>($c4, c1);

        $r12 = virtualinvoke $r11.<com.google.gxp.com.google.common.base.UnicodeEscaper: char[] escape(int)>($i5);

        if $r12 == null goto label2;

        $i8 = lengthof $r12;

        specialinvoke r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: void outputChars(char[],int)>($r12, $i8);

        goto label3;

     label2:
        $r13 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out>;

        $i6 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate>;

        $c7 = (char) $i6;

        interfaceinvoke $r13.<java.lang.Appendable: java.lang.Appendable append(char)>($c7);

        $r14 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out>;

        interfaceinvoke $r14.<java.lang.Appendable: java.lang.Appendable append(char)>(c1);

     label3:
        $i13 = (int) -1;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate> = $i13;

        goto label8;

     label4:
        $z0 = staticinvoke <java.lang.Character: boolean isHighSurrogate(char)>(c1);

        if $z0 == 0 goto label5;

        $i14 = (int) c1;

        r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: int pendingHighSurrogate> = $i14;

        goto label8;

     label5:
        $z1 = staticinvoke <java.lang.Character: boolean isLowSurrogate(char)>(c1);

        if $z1 == 0 goto label6;

        $r25 = new java.lang.IllegalArgumentException;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected low surrogate character \'");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' with value ");

        $i15 = (int) c1;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r25;

     label6:
        $r1 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: com.google.gxp.com.google.common.base.UnicodeEscaper this$0>;

        $i16 = (int) c1;

        $r2 = virtualinvoke $r1.<com.google.gxp.com.google.common.base.UnicodeEscaper: char[] escape(int)>($i16);

        if $r2 == null goto label7;

        $i2 = lengthof $r2;

        specialinvoke r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: void outputChars(char[],int)>($r2, $i2);

        goto label8;

     label7:
        $r3 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out>;

        interfaceinvoke $r3.<java.lang.Appendable: java.lang.Appendable append(char)>(c1);

     label8:
        return r0;
    }

    private void outputChars(char[], int) throws java.io.IOException
    {
        java.lang.Appendable $r2;
        int i0, i2;
        char[] r1;
        com.google.gxp.com.google.common.base.UnicodeEscaper$1 r0;
        char $c1;

        r0 := @this: com.google.gxp.com.google.common.base.UnicodeEscaper$1;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i2 = 0;

     label1:
        if i2 >= i0 goto label2;

        $r2 = r0.<com.google.gxp.com.google.common.base.UnicodeEscaper$1: java.lang.Appendable val$out>;

        $c1 = r1[i2];

        interfaceinvoke $r2.<java.lang.Appendable: java.lang.Appendable append(char)>($c1);

        i2 = i2 + 1;

        goto label1;

     label2:
        return;
    }
}
