public class org.apache.zookeeper.server.NettyServerCnxn extends org.apache.zookeeper.server.ServerCnxn
{
    org.slf4j.Logger LOG;
    org.jboss.netty.channel.Channel channel;
    org.jboss.netty.buffer.ChannelBuffer queuedBuffer;
    volatile boolean throttled;
    java.nio.ByteBuffer bb;
    java.nio.ByteBuffer bbLen;
    long sessionId;
    int sessionTimeout;
    java.util.concurrent.atomic.AtomicLong outstandingCount;
    private volatile org.apache.zookeeper.server.ZooKeeperServer zkServer;
    org.apache.zookeeper.server.NettyServerCnxnFactory factory;
    boolean initialized;
    private static final byte[] fourBytes;
    private static final java.lang.String ZK_NOT_SERVING;

    void <init>(org.jboss.netty.channel.Channel, org.apache.zookeeper.server.ZooKeeperServer, org.apache.zookeeper.server.NettyServerCnxnFactory)
    {
        org.slf4j.Logger $r1;
        java.nio.ByteBuffer $r2;
        org.jboss.netty.channel.Channel r4;
        org.apache.zookeeper.server.ZooKeeperServer r5;
        org.apache.zookeeper.Login $r8, $r10;
        java.util.concurrent.atomic.AtomicLong $r3;
        org.apache.zookeeper.server.NettyServerCnxn r0;
        org.apache.zookeeper.server.ZooKeeperSaslServer $r9;
        org.apache.zookeeper.server.NettyServerCnxnFactory r6, $r7;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r4 := @parameter0: org.jboss.netty.channel.Channel;

        r5 := @parameter1: org.apache.zookeeper.server.ZooKeeperServer;

        r6 := @parameter2: org.apache.zookeeper.server.NettyServerCnxnFactory;

        specialinvoke r0.<org.apache.zookeeper.server.ServerCnxn: void <init>()>();

        $r1 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/zookeeper/server/NettyServerCnxn;");

        r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG> = $r1;

        $r2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        r0.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.apache.zookeeper.server.NettyServerCnxn: java.util.concurrent.atomic.AtomicLong outstandingCount> = $r3;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel> = r4;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer> = r5;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory> = r6;

        $r7 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        $r8 = $r7.<org.apache.zookeeper.server.NettyServerCnxnFactory: org.apache.zookeeper.Login login>;

        if $r8 == null goto label1;

        $r9 = new org.apache.zookeeper.server.ZooKeeperSaslServer;

        $r10 = r6.<org.apache.zookeeper.server.NettyServerCnxnFactory: org.apache.zookeeper.Login login>;

        specialinvoke $r9.<org.apache.zookeeper.server.ZooKeeperSaslServer: void <init>(org.apache.zookeeper.Login)>($r10);

        r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperSaslServer zooKeeperSaslServer> = $r9;

     label1:
        return;
    }

    public void close()
    {
        java.net.SocketAddress $r12;
        java.net.InetAddress $r14;
        org.apache.zookeeper.server.NettyServerCnxnFactory $r2, $r4, $r7, $r9, $r17, $r30;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Set $r25;
        java.net.InetSocketAddress $r13;
        java.lang.StringBuilder $r19, $r21, $r23, $r27, $r29, $r32, $r34, $r36, $r38;
        java.lang.Throwable $r40, $r41;
        java.util.HashMap $r8, $r11;
        long $l0, $l2;
        java.util.HashSet $r3, $r5, $r31;
        int $i1;
        java.lang.String $r22, $r24, $r33, $r37, $r39;
        org.slf4j.Logger $r1, $r6, $r20, $r26, $r28, $r35;
        org.jboss.netty.channel.Channel $r10, $r16, $r18;
        org.apache.zookeeper.server.NettyServerCnxn r0;
        java.lang.Object $r15;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r35 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close called for sessionid:0x");

        $l2 = r0.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r37 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l2);

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r35.<org.slf4j.Logger: void debug(java.lang.String)>($r39);

     label01:
        $r2 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        $r3 = $r2.<org.apache.zookeeper.server.NettyServerCnxnFactory: java.util.HashSet cnxns>;

        entermonitor $r3;

     label02:
        $r4 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        $r5 = $r4.<org.apache.zookeeper.server.NettyServerCnxnFactory: java.util.HashSet cnxns>;

        $z1 = virtualinvoke $r5.<java.util.HashSet: boolean remove(java.lang.Object)>(r0);

        if $z1 != 0 goto label05;

        $r26 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z4 = interfaceinvoke $r26.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z4 == 0 goto label03;

        $r28 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r27 = new java.lang.StringBuilder;

        specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cnxns size:");

        $r30 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        $r31 = $r30.<org.apache.zookeeper.server.NettyServerCnxnFactory: java.util.HashSet cnxns>;

        $i1 = virtualinvoke $r31.<java.util.HashSet: int size()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r28.<org.slf4j.Logger: void debug(java.lang.String)>($r33);

     label03:
        exitmonitor $r3;

     label04:
        return;

     label05:
        $r6 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z2 = interfaceinvoke $r6.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z2 == 0 goto label06;

        $r20 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("close in progress for sessionid:0x");

        $l0 = r0.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r22 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r20.<org.slf4j.Logger: void debug(java.lang.String)>($r24);

     label06:
        $r7 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        $r8 = $r7.<org.apache.zookeeper.server.NettyServerCnxnFactory: java.util.HashMap ipMap>;

        entermonitor $r8;

     label07:
        $r9 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        $r11 = $r9.<org.apache.zookeeper.server.NettyServerCnxnFactory: java.util.HashMap ipMap>;

        $r10 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $r12 = interfaceinvoke $r10.<org.jboss.netty.channel.Channel: java.net.SocketAddress getRemoteAddress()>();

        $r13 = (java.net.InetSocketAddress) $r12;

        $r14 = virtualinvoke $r13.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r15 = virtualinvoke $r11.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r14);

        $r25 = (java.util.Set) $r15;

        interfaceinvoke $r25.<java.util.Set: boolean remove(java.lang.Object)>(r0);

        exitmonitor $r8;

     label08:
        goto label11;

     label09:
        $r41 := @caughtexception;

        exitmonitor $r8;

     label10:
        throw $r41;

     label11:
        $r16 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $z3 = interfaceinvoke $r16.<org.jboss.netty.channel.Channel: boolean isOpen()>();

        if $z3 == 0 goto label12;

        $r18 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        interfaceinvoke $r18.<org.jboss.netty.channel.Channel: org.jboss.netty.channel.ChannelFuture close()>();

     label12:
        $r17 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.NettyServerCnxnFactory factory>;

        virtualinvoke $r17.<org.apache.zookeeper.server.NettyServerCnxnFactory: void unregisterConnection(org.apache.zookeeper.server.ServerCnxn)>(r0);

        exitmonitor $r3;

     label13:
        goto label16;

     label14:
        $r40 := @caughtexception;

        exitmonitor $r3;

     label15:
        throw $r40;

     label16:
        return;

        catch java.lang.Throwable from label07 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.lang.Throwable from label02 to label04 with label14;
        catch java.lang.Throwable from label05 to label13 with label14;
        catch java.lang.Throwable from label14 to label15 with label14;
    }

    public long getSessionId()
    {
        long $l0;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        return $l0;
    }

    public int getSessionTimeout()
    {
        int $i0;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $i0 = r0.<org.apache.zookeeper.server.NettyServerCnxn: int sessionTimeout>;

        return $i0;
    }

    public void process(org.apache.zookeeper.WatchedEvent)
    {
        long $l0;
        int $i2;
        java.lang.String $r10, $r14, $r22;
        boolean $z0, $z1;
        org.slf4j.Logger $r2, $r6, $r16, $r18;
        java.io.IOException $r15;
        org.apache.zookeeper.WatchedEvent r3;
        org.apache.zookeeper.proto.WatcherEvent $r4;
        java.net.InetSocketAddress $r20;
        org.apache.zookeeper.server.NettyServerCnxn r1;
        java.lang.StringBuilder $r7, $r8, $r9, $r11, $r12, $r13, $r19, $r21, $r24, $r25;
        org.apache.zookeeper.proto.ReplyHeader $r23;

        r1 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r3 := @parameter0: org.apache.zookeeper.WatchedEvent;

        $r23 = new org.apache.zookeeper.proto.ReplyHeader;

        $i2 = (int) -1;

        specialinvoke $r23.<org.apache.zookeeper.proto.ReplyHeader: void <init>(int,long,int)>($i2, -1L, 0);

        $r2 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z0 == 0 goto label1;

        $r6 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r24 = new java.lang.StringBuilder;

        specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Deliver event ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to 0x");

        $l0 = r1.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" through ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void logTraceMessage(org.slf4j.Logger,long,java.lang.String)>($r6, 64L, $r14);

     label1:
        $r4 = virtualinvoke r3.<org.apache.zookeeper.WatchedEvent: org.apache.zookeeper.proto.WatcherEvent getWrapper()>();

     label2:
        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void sendResponse(org.apache.zookeeper.proto.ReplyHeader,org.apache.jute.Record,java.lang.String)>($r23, $r4, "notification");

     label3:
        goto label6;

     label4:
        $r15 := @caughtexception;

        $r16 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r16.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label5;

        $r18 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r19 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Problem sending to ");

        $r20 = virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: java.net.InetSocketAddress getRemoteSocketAddress()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r18.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>($r22, $r15);

     label5:
        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void close()>();

     label6:
        return;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public void sendResponse(org.apache.zookeeper.proto.ReplyHeader, org.apache.jute.Record, java.lang.String) throws java.io.IOException
    {
        org.apache.jute.BinaryOutputArchive $r3;
        byte[] $r4, $r7;
        java.io.ByteArrayOutputStream $r2;
        long $l3;
        java.nio.ByteBuffer $r8, $r9;
        int $i0, $i1, $i2;
        java.lang.String r12;
        boolean $z0, $z1;
        org.slf4j.Logger $r14;
        org.apache.jute.Record r6;
        java.io.IOException $r13;
        org.jboss.netty.channel.Channel $r1;
        org.apache.zookeeper.server.ZooKeeperServer $r11;
        java.util.concurrent.atomic.AtomicLong $r10;
        org.apache.zookeeper.server.NettyServerCnxn r0;
        org.apache.zookeeper.proto.ReplyHeader r5;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r5 := @parameter0: org.apache.zookeeper.proto.ReplyHeader;

        r6 := @parameter1: org.apache.jute.Record;

        r12 := @parameter2: java.lang.String;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $z0 = interfaceinvoke $r1.<org.jboss.netty.channel.Channel: boolean isOpen()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = staticinvoke <org.apache.jute.BinaryOutputArchive: org.apache.jute.BinaryOutputArchive getArchive(java.io.OutputStream)>($r2);

     label2:
        $r4 = <org.apache.zookeeper.server.NettyServerCnxn: byte[] fourBytes>;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[])>($r4);

        virtualinvoke $r3.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r5, "header");

        if r6 == null goto label3;

        virtualinvoke $r3.<org.apache.jute.BinaryOutputArchive: void writeRecord(org.apache.jute.Record,java.lang.String)>(r6, r12);

     label3:
        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void close()>();

     label4:
        goto label6;

     label5:
        $r13 := @caughtexception;

        $r14 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r14.<org.slf4j.Logger: void error(java.lang.String)>("Error serializing response");

     label6:
        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $r8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r7);

        $i0 = lengthof $r7;

        $i1 = $i0 - 4;

        $r9 = virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.ByteBuffer putInt(int)>($i1);

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        virtualinvoke r0.<org.apache.zookeeper.server.NettyServerCnxn: void sendBuffer(java.nio.ByteBuffer)>($r8);

        $i2 = virtualinvoke r5.<org.apache.zookeeper.proto.ReplyHeader: int getXid()>();

        if $i2 <= 0 goto label7;

        $r11 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $r10 = r0.<org.apache.zookeeper.server.NettyServerCnxn: java.util.concurrent.atomic.AtomicLong outstandingCount>;

        $l3 = virtualinvoke $r10.<java.util.concurrent.atomic.AtomicLong: long decrementAndGet()>();

        $z1 = virtualinvoke $r11.<org.apache.zookeeper.server.ZooKeeperServer: boolean shouldThrottle(long)>($l3);

        if $z1 != 0 goto label7;

        virtualinvoke r0.<org.apache.zookeeper.server.NettyServerCnxn: void enableRecv()>();

     label7:
        return;

        catch java.io.IOException from label2 to label4 with label5;
    }

    public void setSessionId(long)
    {
        long l0;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        l0 := @parameter0: long;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId> = l0;

        return;
    }

    public void enableRecv()
    {
        org.jboss.netty.channel.ChannelEvent $r13;
        org.slf4j.Logger $r1, $r7;
        org.apache.zookeeper.server.NettyServerCnxn$ResumeMessageEvent $r12;
        org.jboss.netty.channel.Channel $r2, $r5;
        org.jboss.netty.channel.ChannelPipeline $r3;
        org.apache.zookeeper.server.NettyServerCnxn r0;
        java.lang.StringBuilder $r8, $r9, $r11;
        java.lang.String $r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $z0 = r0.<org.apache.zookeeper.server.NettyServerCnxn: boolean throttled>;

        if $z0 == 0 goto label2;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: boolean throttled> = 0;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r7 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sending unthrottle event ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r10);

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $r3 = interfaceinvoke $r2.<org.jboss.netty.channel.Channel: org.jboss.netty.channel.ChannelPipeline getPipeline()>();

        $r12 = new org.apache.zookeeper.server.NettyServerCnxn$ResumeMessageEvent;

        $r5 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        specialinvoke $r12.<org.apache.zookeeper.server.NettyServerCnxn$ResumeMessageEvent: void <init>(org.jboss.netty.channel.Channel)>($r5);

        $r13 = (org.jboss.netty.channel.ChannelEvent) $r12;

        interfaceinvoke $r3.<org.jboss.netty.channel.ChannelPipeline: void sendUpstream(org.jboss.netty.channel.ChannelEvent)>($r13);

     label2:
        return;
    }

    public void sendBuffer(java.nio.ByteBuffer)
    {
        org.apache.zookeeper.server.NettyServerCnxn r2;
        org.jboss.netty.buffer.ChannelBuffer $r4;
        java.nio.ByteBuffer r0, $r1;
        org.jboss.netty.channel.Channel $r3, $r5;

        r2 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r0 := @parameter0: java.nio.ByteBuffer;

        $r1 = <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn>;

        if r0 != $r1 goto label1;

        $r5 = r2.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        interfaceinvoke $r5.<org.jboss.netty.channel.Channel: org.jboss.netty.channel.ChannelFuture close()>();

        return;

     label1:
        $r3 = r2.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $r4 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: org.jboss.netty.buffer.ChannelBuffer wrappedBuffer(java.nio.ByteBuffer)>(r0);

        interfaceinvoke $r3.<org.jboss.netty.channel.Channel: org.jboss.netty.channel.ChannelFuture write(java.lang.Object)>($r4);

        virtualinvoke r2.<org.apache.zookeeper.server.NettyServerCnxn: void packetSent()>();

        return;
    }

    private void cleanupWriterSocket(java.io.PrintWriter)
    {
        java.io.PrintWriter r0;
        java.lang.Throwable $r8;
        org.slf4j.Logger $r3, $r5, $r7, $r10;
        java.lang.Exception $r2, $r4, $r6, $r9;
        org.apache.zookeeper.server.NettyServerCnxn r1;

        r1 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r0 := @parameter0: java.io.PrintWriter;

     label01:
        if r0 == null goto label02;

        virtualinvoke r0.<java.io.PrintWriter: void flush()>();

        virtualinvoke r0.<java.io.PrintWriter: void close()>();

     label02:
        goto label09;

     label03:
        goto label08;

     label04:
        $r9 := @caughtexception;

        $r10 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String,java.lang.Throwable)>("Error closing PrintWriter ", $r9);

        goto label13;

     label05:
        goto label08;

     label06:
        $r8 := @caughtexception;

        goto label17;

     label07:
        throw $r8;

     label08:
        return;

     label09:
        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void close()>();

     label10:
        goto label12;

     label11:
        $r6 := @caughtexception;

        $r7 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r7.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error closing a command socket ", $r6);

     label12:
        goto label03;

     label13:
        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void close()>();

     label14:
        goto label16;

     label15:
        $r4 := @caughtexception;

        $r5 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r5.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error closing a command socket ", $r4);

     label16:
        goto label05;

     label17:
        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void close()>();

     label18:
        goto label20;

     label19:
        $r2 := @caughtexception;

        $r3 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        interfaceinvoke $r3.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>("Error closing a command socket ", $r2);

     label20:
        goto label07;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label03 with label06;
        catch java.lang.Throwable from label04 to label05 with label06;
        catch java.lang.Throwable from label06 to label07 with label06;
        catch java.lang.Exception from label09 to label10 with label11;
        catch java.lang.Exception from label13 to label14 with label15;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    private boolean checkFourLetterWord(org.jboss.netty.channel.Channel, org.jboss.netty.buffer.ChannelBuffer, int) throws java.io.IOException
    {
        java.net.SocketAddress $r12;
        org.jboss.netty.buffer.ChannelBuffer r28;
        java.lang.Integer $r1;
        java.nio.ByteBuffer $r27, $r29;
        org.apache.zookeeper.server.NettyServerCnxn$StatCommand $r18;
        org.apache.zookeeper.server.NettyServerCnxn$IsroCommand $r19;
        org.apache.zookeeper.server.NettyServerCnxn$EnvCommand $r26;
        java.io.PrintWriter $r15;
        org.apache.zookeeper.server.NettyServerCnxn$CnxnStatResetCommand $r23;
        org.apache.zookeeper.server.NettyServerCnxn$ConfCommand $r25;
        org.apache.zookeeper.server.NettyServerCnxn$SendBufferWriter $r17;
        org.apache.zookeeper.server.NettyServerCnxn$TraceMaskCommand $r31;
        java.lang.StringBuilder $r7, $r9, $r10, $r11, $r13;
        org.apache.zookeeper.server.NettyServerCnxn$WatchCommand $r33;
        java.util.HashMap $r0;
        long $l17;
        org.apache.zookeeper.server.NettyServerCnxn$DumpCommand $r22;
        org.apache.zookeeper.server.NettyServerCnxn$RuokCommand $r32;
        org.jboss.netty.channel.ChannelFuture $r5;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r3, $r14;
        org.apache.zookeeper.server.NettyServerCnxn$MonitorCommand $r20;
        org.slf4j.Logger $r8;
        org.apache.zookeeper.server.NettyServerCnxn$StatResetCommand $r24;
        java.io.BufferedWriter $r16;
        org.jboss.netty.channel.Channel r4;
        org.apache.zookeeper.server.NettyServerCnxn r6;
        org.apache.zookeeper.server.NettyServerCnxn$SetTraceMaskCommand $r30;
        java.lang.Object $r2;
        org.apache.zookeeper.server.NettyServerCnxn$ConsCommand $r21;

        r6 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r4 := @parameter0: org.jboss.netty.channel.Channel;

        r28 := @parameter1: org.jboss.netty.buffer.ChannelBuffer;

        i0 := @parameter2: int;

        $r0 = <org.apache.zookeeper.server.NettyServerCnxn: java.util.HashMap cmd2String>;

        $r1 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r2 = virtualinvoke $r0.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.lang.String) $r2;

        if r3 != null goto label01;

        return 0;

     label01:
        $r5 = interfaceinvoke r4.<org.jboss.netty.channel.Channel: org.jboss.netty.channel.ChannelFuture setInterestOps(int)>(0);

        interfaceinvoke $r5.<org.jboss.netty.channel.ChannelFuture: org.jboss.netty.channel.ChannelFuture awaitUninterruptibly()>();

        $r8 = r6.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Processing ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" command from ");

        $r12 = interfaceinvoke r4.<org.jboss.netty.channel.Channel: java.net.SocketAddress getRemoteAddress()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r8.<org.slf4j.Logger: void info(java.lang.String)>($r14);

        virtualinvoke r6.<org.apache.zookeeper.server.NettyServerCnxn: void packetReceived()>();

        $r15 = new java.io.PrintWriter;

        $r16 = new java.io.BufferedWriter;

        $r17 = new org.apache.zookeeper.server.NettyServerCnxn$SendBufferWriter;

        specialinvoke $r17.<org.apache.zookeeper.server.NettyServerCnxn$SendBufferWriter: void <init>(org.apache.zookeeper.server.NettyServerCnxn,org.apache.zookeeper.server.NettyServerCnxn$1)>(r6, null);

        specialinvoke $r16.<java.io.BufferedWriter: void <init>(java.io.Writer)>($r17);

        specialinvoke $r15.<java.io.PrintWriter: void <init>(java.io.Writer)>($r16);

        $i1 = <org.apache.zookeeper.server.NettyServerCnxn: int ruokCmd>;

        if i0 != $i1 goto label02;

        $r32 = new org.apache.zookeeper.server.NettyServerCnxn$RuokCommand;

        specialinvoke $r32.<org.apache.zookeeper.server.NettyServerCnxn$RuokCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r32.<org.apache.zookeeper.server.NettyServerCnxn$RuokCommand: void start()>();

        return 1;

     label02:
        $i2 = <org.apache.zookeeper.server.NettyServerCnxn: int getTraceMaskCmd>;

        if i0 != $i2 goto label03;

        $r31 = new org.apache.zookeeper.server.NettyServerCnxn$TraceMaskCommand;

        specialinvoke $r31.<org.apache.zookeeper.server.NettyServerCnxn$TraceMaskCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r31.<org.apache.zookeeper.server.NettyServerCnxn$TraceMaskCommand: void start()>();

        return 1;

     label03:
        $i3 = <org.apache.zookeeper.server.NettyServerCnxn: int setTraceMaskCmd>;

        if i0 != $i3 goto label04;

        $r27 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>(4);

        interfaceinvoke r28.<org.jboss.netty.buffer.ChannelBuffer: void readBytes(java.nio.ByteBuffer)>($r27);

        $r29 = r6.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        virtualinvoke $r29.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $l17 = virtualinvoke $r27.<java.nio.ByteBuffer: long getLong()>();

        staticinvoke <org.apache.zookeeper.server.ZooTrace: void setTextTraceLevel(long)>($l17);

        $r30 = new org.apache.zookeeper.server.NettyServerCnxn$SetTraceMaskCommand;

        specialinvoke $r30.<org.apache.zookeeper.server.NettyServerCnxn$SetTraceMaskCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter,long)>(r6, $r15, $l17);

        virtualinvoke $r30.<org.apache.zookeeper.server.NettyServerCnxn$SetTraceMaskCommand: void start()>();

        return 1;

     label04:
        $i4 = <org.apache.zookeeper.server.NettyServerCnxn: int enviCmd>;

        if i0 != $i4 goto label05;

        $r26 = new org.apache.zookeeper.server.NettyServerCnxn$EnvCommand;

        specialinvoke $r26.<org.apache.zookeeper.server.NettyServerCnxn$EnvCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r26.<org.apache.zookeeper.server.NettyServerCnxn$EnvCommand: void start()>();

        return 1;

     label05:
        $i5 = <org.apache.zookeeper.server.NettyServerCnxn: int confCmd>;

        if i0 != $i5 goto label06;

        $r25 = new org.apache.zookeeper.server.NettyServerCnxn$ConfCommand;

        specialinvoke $r25.<org.apache.zookeeper.server.NettyServerCnxn$ConfCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r25.<org.apache.zookeeper.server.NettyServerCnxn$ConfCommand: void start()>();

        return 1;

     label06:
        $i6 = <org.apache.zookeeper.server.NettyServerCnxn: int srstCmd>;

        if i0 != $i6 goto label07;

        $r24 = new org.apache.zookeeper.server.NettyServerCnxn$StatResetCommand;

        specialinvoke $r24.<org.apache.zookeeper.server.NettyServerCnxn$StatResetCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r24.<org.apache.zookeeper.server.NettyServerCnxn$StatResetCommand: void start()>();

        return 1;

     label07:
        $i7 = <org.apache.zookeeper.server.NettyServerCnxn: int crstCmd>;

        if i0 != $i7 goto label08;

        $r23 = new org.apache.zookeeper.server.NettyServerCnxn$CnxnStatResetCommand;

        specialinvoke $r23.<org.apache.zookeeper.server.NettyServerCnxn$CnxnStatResetCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r23.<org.apache.zookeeper.server.NettyServerCnxn$CnxnStatResetCommand: void start()>();

        return 1;

     label08:
        $i8 = <org.apache.zookeeper.server.NettyServerCnxn: int dumpCmd>;

        if i0 != $i8 goto label09;

        $r22 = new org.apache.zookeeper.server.NettyServerCnxn$DumpCommand;

        specialinvoke $r22.<org.apache.zookeeper.server.NettyServerCnxn$DumpCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r22.<org.apache.zookeeper.server.NettyServerCnxn$DumpCommand: void start()>();

        return 1;

     label09:
        $i9 = <org.apache.zookeeper.server.NettyServerCnxn: int statCmd>;

        if i0 == $i9 goto label10;

        $i10 = <org.apache.zookeeper.server.NettyServerCnxn: int srvrCmd>;

        if i0 != $i10 goto label11;

     label10:
        $r18 = new org.apache.zookeeper.server.NettyServerCnxn$StatCommand;

        specialinvoke $r18.<org.apache.zookeeper.server.NettyServerCnxn$StatCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter,int)>(r6, $r15, i0);

        virtualinvoke $r18.<org.apache.zookeeper.server.NettyServerCnxn$StatCommand: void start()>();

        return 1;

     label11:
        $i11 = <org.apache.zookeeper.server.NettyServerCnxn: int consCmd>;

        if i0 != $i11 goto label12;

        $r21 = new org.apache.zookeeper.server.NettyServerCnxn$ConsCommand;

        specialinvoke $r21.<org.apache.zookeeper.server.NettyServerCnxn$ConsCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r21.<org.apache.zookeeper.server.NettyServerCnxn$ConsCommand: void start()>();

        return 1;

     label12:
        $i12 = <org.apache.zookeeper.server.NettyServerCnxn: int wchpCmd>;

        if i0 == $i12 goto label13;

        $i13 = <org.apache.zookeeper.server.NettyServerCnxn: int wchcCmd>;

        if i0 == $i13 goto label13;

        $i14 = <org.apache.zookeeper.server.NettyServerCnxn: int wchsCmd>;

        if i0 != $i14 goto label14;

     label13:
        $r33 = new org.apache.zookeeper.server.NettyServerCnxn$WatchCommand;

        specialinvoke $r33.<org.apache.zookeeper.server.NettyServerCnxn$WatchCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter,int)>(r6, $r15, i0);

        virtualinvoke $r33.<org.apache.zookeeper.server.NettyServerCnxn$WatchCommand: void start()>();

        return 1;

     label14:
        $i15 = <org.apache.zookeeper.server.NettyServerCnxn: int mntrCmd>;

        if i0 != $i15 goto label15;

        $r20 = new org.apache.zookeeper.server.NettyServerCnxn$MonitorCommand;

        specialinvoke $r20.<org.apache.zookeeper.server.NettyServerCnxn$MonitorCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r20.<org.apache.zookeeper.server.NettyServerCnxn$MonitorCommand: void start()>();

        return 1;

     label15:
        $i16 = <org.apache.zookeeper.server.NettyServerCnxn: int isroCmd>;

        if i0 != $i16 goto label16;

        $r19 = new org.apache.zookeeper.server.NettyServerCnxn$IsroCommand;

        specialinvoke $r19.<org.apache.zookeeper.server.NettyServerCnxn$IsroCommand: void <init>(org.apache.zookeeper.server.NettyServerCnxn,java.io.PrintWriter)>(r6, $r15);

        virtualinvoke $r19.<org.apache.zookeeper.server.NettyServerCnxn$IsroCommand: void start()>();

        return 1;

     label16:
        return 0;
    }

    public void receiveMessage(org.jboss.netty.buffer.ChannelBuffer)
    {
        java.lang.StringBuilder $r15, $r16, $r17, $r21, $r24, $r25, $r26, $r28, $r31, $r32, $r36, $r40, $r42, $r43, $r44, $r46, $r50, $r53, $r54, $r57, $r67, $r69, $r71, $r77, $r79, $r80, $r81, $r83, $r84, $r86, $r90, $r92, $r94, $r95, $r98, $r102, $r104, $r105, $r106, $r108, $r109, $r111, $r115, $r118, $r119, $r122, $r125, $r127, $r129;
        long $l6, $l7, $l13, $l18, $l21, $l26;
        java.io.IOException $r14, $r76, $r124;
        org.apache.zookeeper.server.ZooKeeperServer r131;
        java.util.concurrent.atomic.AtomicLong $r75;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i8, $i9, $i10, $i11, $i12, $i14, $i15, $i16, $i17, $i19, $i20, $i22, $i23, $i24, $i25, i27;
        org.slf4j.Logger $r3, $r10, $r12, $r22, $r29, $r41, $r51, $r59, $r64, $r68, $r78, $r91, $r103, $r116, $r126;
        java.lang.String $r18, $r23, $r27, $r30, $r35, $r37, $r47, $r52, $r56, $r58, $r72, $r87, $r93, $r97, $r99, $r112, $r117, $r121, $r123, $r130;
        org.jboss.netty.channel.Channel $r20;
        org.jboss.netty.buffer.ChannelBuffer r0, $r34, $r55, $r96, $r120;
        java.nio.ByteBuffer $r2, $r4, $r5, $r6, $r7, $r8, $r9, $r11, $r13, $r19, $r33, $r38, $r39, $r45, $r48, $r49, $r60, $r61, $r62, $r63, $r65, $r66, $r73, $r74, $r82, $r85, $r88, $r89, $r100, $r101, $r107, $r110, $r113, $r114;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.net.InetSocketAddress $r70, $r128;
        org.apache.zookeeper.server.NettyServerCnxn r1;

        r1 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r0 := @parameter0: org.jboss.netty.buffer.ChannelBuffer;

     label01:
        $z10 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: boolean readable()>();

        if $z10 == 0 goto label17;

        $z0 = r1.<org.apache.zookeeper.server.NettyServerCnxn: boolean throttled>;

        if $z0 != 0 goto label17;

        $r2 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        if $r2 == null goto label08;

        $r59 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z6 = interfaceinvoke $r59.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z6 == 0 goto label02;

        $r103 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r102 = new java.lang.StringBuilder;

        specialinvoke $r102.<java.lang.StringBuilder: void <init>()>();

        $r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("message readable ");

        $i24 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        $r105 = virtualinvoke $r104.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bb len ");

        $r107 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $i25 = virtualinvoke $r107.<java.nio.ByteBuffer: int remaining()>();

        $r108 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i25);

        $r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r110 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r110);

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r103.<org.slf4j.Logger: void trace(java.lang.String)>($r112);

        $r113 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $r114 = virtualinvoke $r113.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r114.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r116 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r115 = new java.lang.StringBuilder;

        specialinvoke $r115.<java.lang.StringBuilder: void <init>()>();

        $l26 = r1.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r117 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l26);

        $r118 = virtualinvoke $r115.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r117);

        $r119 = virtualinvoke $r118.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bb 0x");

        $r120 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: org.jboss.netty.buffer.ChannelBuffer copiedBuffer(java.nio.ByteBuffer)>($r114);

        $r121 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: java.lang.String hexDump(org.jboss.netty.buffer.ChannelBuffer)>($r120);

        $r122 = virtualinvoke $r119.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r121);

        $r123 = virtualinvoke $r122.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r116.<org.slf4j.Logger: void trace(java.lang.String)>($r123);

     label02:
        $r60 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $i14 = virtualinvoke $r60.<java.nio.ByteBuffer: int remaining()>();

        $i15 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        if $i14 <= $i15 goto label03;

        $r100 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $i22 = virtualinvoke $r100.<java.nio.ByteBuffer: int position()>();

        $i23 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        i27 = $i22 + $i23;

        $r101 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        virtualinvoke $r101.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>(i27);

     label03:
        $r61 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: void readBytes(java.nio.ByteBuffer)>($r61);

        $r63 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $r62 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $i16 = virtualinvoke $r62.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r63.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i16);

        $r64 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z7 = interfaceinvoke $r64.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z7 == 0 goto label04;

        $r78 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after readBytes message readable ");

        $i19 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i19);

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bb len ");

        $r82 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $i20 = virtualinvoke $r82.<java.nio.ByteBuffer: int remaining()>();

        $r83 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r85 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r85);

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r78.<org.slf4j.Logger: void trace(java.lang.String)>($r87);

        $r88 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $r89 = virtualinvoke $r88.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r89.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r91 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r92 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("after readbytes ");

        $l21 = r1.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r93 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l21);

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bb 0x");

        $r96 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: org.jboss.netty.buffer.ChannelBuffer copiedBuffer(java.nio.ByteBuffer)>($r89);

        $r97 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: java.lang.String hexDump(org.jboss.netty.buffer.ChannelBuffer)>($r96);

        $r98 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r97);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r91.<org.slf4j.Logger: void trace(java.lang.String)>($r99);

     label04:
        $r65 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        $i17 = virtualinvoke $r65.<java.nio.ByteBuffer: int remaining()>();

        if $i17 != 0 goto label01;

        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void packetReceived()>();

        $r66 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        virtualinvoke $r66.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        r131 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if r131 != null goto label05;

        $r76 = new java.io.IOException;

        specialinvoke $r76.<java.io.IOException: void <init>(java.lang.String)>("ZK down");

        throw $r76;

     label05:
        $z8 = r1.<org.apache.zookeeper.server.NettyServerCnxn: boolean initialized>;

        if $z8 == 0 goto label06;

        $r74 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        virtualinvoke r131.<org.apache.zookeeper.server.ZooKeeperServer: void processPacket(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)>(r1, $r74);

        $r75 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.util.concurrent.atomic.AtomicLong outstandingCount>;

        $l18 = virtualinvoke $r75.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        $z9 = virtualinvoke r131.<org.apache.zookeeper.server.ZooKeeperServer: boolean shouldThrottle(long)>($l18);

        if $z9 == 0 goto label07;

        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void disableRecv()>();

        goto label07;

     label06:
        $r68 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("got conn req request from ");

        $r70 = virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: java.net.InetSocketAddress getRemoteSocketAddress()>();

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r68.<org.slf4j.Logger: void debug(java.lang.String)>($r72);

        $r73 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb>;

        virtualinvoke r131.<org.apache.zookeeper.server.ZooKeeperServer: void processConnectRequest(org.apache.zookeeper.server.ServerCnxn,java.nio.ByteBuffer)>(r1, $r73);

        r1.<org.apache.zookeeper.server.NettyServerCnxn: boolean initialized> = 1;

     label07:
        r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb> = null;

        goto label01;

     label08:
        $r3 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z1 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z1 == 0 goto label09;

        $r41 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("message readable ");

        $i11 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bblenrem ");

        $r45 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $i12 = virtualinvoke $r45.<java.nio.ByteBuffer: int remaining()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r41.<org.slf4j.Logger: void trace(java.lang.String)>($r47);

        $r48 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $r49 = virtualinvoke $r48.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();

        virtualinvoke $r49.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r51 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $l13 = r1.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r52 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l13);

        $r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bbLen 0x");

        $r55 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: org.jboss.netty.buffer.ChannelBuffer copiedBuffer(java.nio.ByteBuffer)>($r49);

        $r56 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: java.lang.String hexDump(org.jboss.netty.buffer.ChannelBuffer)>($r55);

        $r57 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r51.<org.slf4j.Logger: void trace(java.lang.String)>($r58);

     label09:
        $i0 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        $r4 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $i1 = virtualinvoke $r4.<java.nio.ByteBuffer: int remaining()>();

        if $i0 >= $i1 goto label10;

        $r39 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $r38 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $i8 = virtualinvoke $r38.<java.nio.ByteBuffer: int position()>();

        $i9 = interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: int readableBytes()>();

        $i10 = $i8 + $i9;

        virtualinvoke $r39.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i10);

     label10:
        $r5 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        interfaceinvoke r0.<org.jboss.netty.buffer.ChannelBuffer: void readBytes(java.nio.ByteBuffer)>($r5);

        $r7 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $r6 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $i2 = virtualinvoke $r6.<java.nio.ByteBuffer: int capacity()>();

        virtualinvoke $r7.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i2);

        $r8 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $i3 = virtualinvoke $r8.<java.nio.ByteBuffer: int remaining()>();

        if $i3 != 0 goto label01;

        $r9 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        virtualinvoke $r9.<java.nio.ByteBuffer: java.nio.Buffer flip()>();

        $r10 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z2 = interfaceinvoke $r10.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z2 == 0 goto label11;

        $r29 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $l7 = r1.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r30 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l7);

        $r31 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bbLen 0x");

        $r33 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $r34 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: org.jboss.netty.buffer.ChannelBuffer copiedBuffer(java.nio.ByteBuffer)>($r33);

        $r35 = staticinvoke <org.jboss.netty.buffer.ChannelBuffers: java.lang.String hexDump(org.jboss.netty.buffer.ChannelBuffer)>($r34);

        $r36 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r29.<org.slf4j.Logger: void trace(java.lang.String)>($r37);

     label11:
        $r11 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        $i4 = virtualinvoke $r11.<java.nio.ByteBuffer: int getInt()>();

        $r12 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z3 = interfaceinvoke $r12.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z3 == 0 goto label12;

        $r22 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $l6 = r1.<org.apache.zookeeper.server.NettyServerCnxn: long sessionId>;

        $r23 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l6);

        $r24 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" bbLen len is ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r22.<org.slf4j.Logger: void trace(java.lang.String)>($r27);

     label12:
        $r13 = r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bbLen>;

        virtualinvoke $r13.<java.nio.ByteBuffer: java.nio.Buffer clear()>();

        $z4 = r1.<org.apache.zookeeper.server.NettyServerCnxn: boolean initialized>;

        if $z4 != 0 goto label14;

        $r20 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $z5 = specialinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: boolean checkFourLetterWord(org.jboss.netty.channel.Channel,org.jboss.netty.buffer.ChannelBuffer,int)>($r20, r0, $i4);

        if $z5 == 0 goto label14;

     label13:
        return;

     label14:
        if $i4 < 0 goto label15;

        $i5 = <org.apache.jute.BinaryInputArchive: int maxBuffer>;

        if $i4 <= $i5 goto label16;

     label15:
        $r14 = new java.io.IOException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Len error ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label16:
        $r19 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocate(int)>($i4);

        r1.<org.apache.zookeeper.server.NettyServerCnxn: java.nio.ByteBuffer bb> = $r19;

        goto label01;

     label17:
        goto label19;

     label18:
        $r124 := @caughtexception;

        $r126 = r1.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r125 = new java.lang.StringBuilder;

        specialinvoke $r125.<java.lang.StringBuilder: void <init>()>();

        $r127 = virtualinvoke $r125.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Closing connection to ");

        $r128 = virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: java.net.InetSocketAddress getRemoteSocketAddress()>();

        $r129 = virtualinvoke $r127.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r128);

        $r130 = virtualinvoke $r129.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r126.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>($r130, $r124);

        virtualinvoke r1.<org.apache.zookeeper.server.NettyServerCnxn: void close()>();

     label19:
        return;

        catch java.io.IOException from label01 to label13 with label18;
        catch java.io.IOException from label14 to label17 with label18;
    }

    public void disableRecv()
    {
        org.slf4j.Logger $r1, $r5;
        org.jboss.netty.channel.Channel $r2;
        org.apache.zookeeper.server.NettyServerCnxn r0;
        org.jboss.netty.channel.ChannelFuture $r3;
        java.lang.StringBuilder $r4, $r6, $r7;
        java.lang.String $r8;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: boolean throttled> = 1;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $z0 = interfaceinvoke $r1.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.slf4j.Logger LOG>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Throttling - disabling recv ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r5.<org.slf4j.Logger: void debug(java.lang.String)>($r8);

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $r3 = interfaceinvoke $r2.<org.jboss.netty.channel.Channel: org.jboss.netty.channel.ChannelFuture setReadable(boolean)>(0);

        interfaceinvoke $r3.<org.jboss.netty.channel.ChannelFuture: org.jboss.netty.channel.ChannelFuture awaitUninterruptibly()>();

        return;
    }

    public long getOutstandingRequests()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        long $l0;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: java.util.concurrent.atomic.AtomicLong outstandingCount>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long longValue()>();

        return $l0;
    }

    public void setSessionTimeout(int)
    {
        int i0;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        i0 := @parameter0: int;

        r0.<org.apache.zookeeper.server.NettyServerCnxn: int sessionTimeout> = i0;

        return;
    }

    public int getInterestOps()
    {
        int $i0;
        org.apache.zookeeper.server.NettyServerCnxn r0;
        org.jboss.netty.channel.Channel $r1;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $i0 = interfaceinvoke $r1.<org.jboss.netty.channel.Channel: int getInterestOps()>();

        return $i0;
    }

    public java.net.InetSocketAddress getRemoteSocketAddress()
    {
        org.apache.zookeeper.server.NettyServerCnxn r0;
        java.net.SocketAddress $r2;
        java.net.InetSocketAddress $r3;
        org.jboss.netty.channel.Channel $r1;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.jboss.netty.channel.Channel channel>;

        $r2 = interfaceinvoke $r1.<org.jboss.netty.channel.Channel: java.net.SocketAddress getRemoteAddress()>();

        $r3 = (java.net.InetSocketAddress) $r2;

        return $r3;
    }

    public void sendCloseSession()
    {
        org.apache.zookeeper.server.NettyServerCnxn r0;
        java.nio.ByteBuffer $r1;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = <org.apache.zookeeper.server.ServerCnxnFactory: java.nio.ByteBuffer closeConn>;

        virtualinvoke r0.<org.apache.zookeeper.server.NettyServerCnxn: void sendBuffer(java.nio.ByteBuffer)>($r1);

        return;
    }

    protected org.apache.zookeeper.server.ServerStats serverStats()
    {
        org.apache.zookeeper.server.ZooKeeperServer $r1, $r2;
        org.apache.zookeeper.server.ServerStats $r3;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        $r3 = virtualinvoke $r2.<org.apache.zookeeper.server.ZooKeeperServer: org.apache.zookeeper.server.ServerStats serverStats()>();

        return $r3;
    }

    static void access$000(org.apache.zookeeper.server.NettyServerCnxn, java.io.PrintWriter)
    {
        java.io.PrintWriter r1;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @parameter0: org.apache.zookeeper.server.NettyServerCnxn;

        r1 := @parameter1: java.io.PrintWriter;

        specialinvoke r0.<org.apache.zookeeper.server.NettyServerCnxn: void cleanupWriterSocket(java.io.PrintWriter)>(r1);

        return;
    }

    static org.apache.zookeeper.server.ZooKeeperServer access$100(org.apache.zookeeper.server.NettyServerCnxn)
    {
        org.apache.zookeeper.server.ZooKeeperServer $r1;
        org.apache.zookeeper.server.NettyServerCnxn r0;

        r0 := @parameter0: org.apache.zookeeper.server.NettyServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.NettyServerCnxn: org.apache.zookeeper.server.ZooKeeperServer zkServer>;

        return $r1;
    }

    static void <clinit>()
    {
        byte[] $r0;

        <org.apache.zookeeper.server.NettyServerCnxn: java.lang.String ZK_NOT_SERVING> = "This ZooKeeper instance is not currently serving requests";

        $r0 = newarray (byte)[4];

        <org.apache.zookeeper.server.NettyServerCnxn: byte[] fourBytes> = $r0;

        return;
    }
}
