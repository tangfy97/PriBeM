class com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 extends com.google.inject.AbstractModule
{
    final java.lang.Iterable val$overrides;
    final com.google.inject.util.Modules$RealOverriddenModuleBuilder this$0;

    void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder, java.lang.Iterable)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 r0;
        java.lang.Iterable r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder r1;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1;

        r1 := @parameter0: com.google.inject.util.Modules$RealOverriddenModuleBuilder;

        r2 := @parameter1: java.lang.Iterable;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: com.google.inject.util.Modules$RealOverriddenModuleBuilder this$0> = r1;

        r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: java.lang.Iterable val$overrides> = r2;

        specialinvoke r0.<com.google.inject.AbstractModule: void <init>()>();

        return;
    }

    public void configure()
    {
        com.google.inject.Key r18;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder $r2;
        boolean $z0, $z1;
        com.google.inject.PrivateBinder $r6, $r8, $r13;
        java.util.Set $r9;
        java.util.List $r4, r15, $r21;
        com.google.inject.spi.Element r16;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 r0;
        java.util.HashMap $r25;
        java.lang.Iterable $r20;
        java.util.ArrayList $r26;
        java.util.HashSet $r22, $r23;
        com.google.inject.Binder $r1, r14;
        com.google.inject.internal.util.$ImmutableSet $r3;
        int $i0;
        com.google.inject.spi.PrivateElements r17;
        java.util.LinkedHashSet $r19;
        java.util.Iterator $r10;
        java.lang.Object $r5, $r7, $r11, $r12;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 $r27;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 $r28;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1 $r24;

        r0 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1;

        $r1 = virtualinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: com.google.inject.Binder binder()>();

        r14 = $r1;

        $r2 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: com.google.inject.util.Modules$RealOverriddenModuleBuilder this$0>;

        $r3 = staticinvoke <com.google.inject.util.Modules$RealOverriddenModuleBuilder: com.google.inject.internal.util.$ImmutableSet access$100(com.google.inject.util.Modules$RealOverriddenModuleBuilder)>($r2);

        $r4 = staticinvoke <com.google.inject.spi.Elements: java.util.List getElements(java.lang.Iterable)>($r3);

        r15 = $r4;

        $i0 = interfaceinvoke $r4.<java.util.List: int size()>();

        if $i0 != 1 goto label3;

        $r5 = staticinvoke <com.google.inject.internal.util.$Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>($r4);

        r16 = (com.google.inject.spi.Element) $r5;

        $z0 = r16 instanceof com.google.inject.spi.PrivateElements;

        if $z0 == 0 goto label3;

        r17 = (com.google.inject.spi.PrivateElements) r16;

        $r6 = interfaceinvoke $r1.<com.google.inject.Binder: com.google.inject.PrivateBinder newPrivateBinder()>();

        $r7 = interfaceinvoke r17.<com.google.inject.spi.PrivateElements: java.lang.Object getSource()>();

        $r8 = interfaceinvoke $r6.<com.google.inject.PrivateBinder: com.google.inject.PrivateBinder withSource(java.lang.Object)>($r7);

        $r9 = interfaceinvoke r17.<com.google.inject.spi.PrivateElements: java.util.Set getExposedKeys()>();

        $r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r18 = (com.google.inject.Key) $r11;

        $r12 = interfaceinvoke r17.<com.google.inject.spi.PrivateElements: java.lang.Object getExposedSource(com.google.inject.Key)>(r18);

        $r13 = interfaceinvoke $r8.<com.google.inject.PrivateBinder: com.google.inject.PrivateBinder withSource(java.lang.Object)>($r12);

        interfaceinvoke $r13.<com.google.inject.PrivateBinder: void expose(com.google.inject.Key)>(r18);

        goto label1;

     label2:
        r14 = $r8;

        r15 = interfaceinvoke r17.<com.google.inject.spi.PrivateElements: java.util.List getElements()>();

     label3:
        $r19 = new java.util.LinkedHashSet;

        specialinvoke $r19.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(r15);

        $r20 = r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: java.lang.Iterable val$overrides>;

        $r21 = staticinvoke <com.google.inject.spi.Elements: java.util.List getElements(java.lang.Iterable)>($r20);

        $r22 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>();

        $r23 = staticinvoke <com.google.inject.internal.util.$Sets: java.util.HashSet newHashSet()>();

        $r24 = new com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1;

        specialinvoke $r24.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1: void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1,com.google.inject.Binder,java.util.Set,java.util.Set)>(r0, r14, $r22, $r23);

        virtualinvoke $r24.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1: void writeAll(java.lang.Iterable)>($r21);

        $r25 = staticinvoke <com.google.inject.internal.util.$Maps: java.util.HashMap newHashMap()>();

        $r26 = staticinvoke <com.google.inject.internal.util.$Lists: java.util.ArrayList newArrayList()>();

        $r27 = new com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2;

        specialinvoke $r27.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1,com.google.inject.Binder,java.util.Set,java.util.Map,java.util.List)>(r0, r14, $r22, $r25, $r26);

        virtualinvoke $r27.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2: void writeAll(java.lang.Iterable)>($r19);

        $r28 = new com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3;

        specialinvoke $r28.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1,com.google.inject.Binder,java.util.Set,java.util.Map)>(r0, r14, $r23, $r25);

        virtualinvoke $r28.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3: void writeAll(java.lang.Iterable)>($r26);

        return;
    }

    private com.google.inject.Scope getScopeInstanceOrNull(com.google.inject.Binding)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 r2;
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4 $r1;
        java.lang.Object $r3;
        com.google.inject.Scope $r4;
        com.google.inject.Binding r0;

        r2 := @this: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1;

        r0 := @parameter0: com.google.inject.Binding;

        $r1 = new com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4;

        specialinvoke $r1.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4: void <init>(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1)>(r2);

        $r3 = interfaceinvoke r0.<com.google.inject.Binding: java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor)>($r1);

        $r4 = (com.google.inject.Scope) $r3;

        return $r4;
    }

    static com.google.inject.Scope access$200(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1, com.google.inject.Binding)
    {
        com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 r0;
        com.google.inject.Scope $r2;
        com.google.inject.Binding r1;

        r0 := @parameter0: com.google.inject.util.Modules$RealOverriddenModuleBuilder$1;

        r1 := @parameter1: com.google.inject.Binding;

        $r2 = specialinvoke r0.<com.google.inject.util.Modules$RealOverriddenModuleBuilder$1: com.google.inject.Scope getScopeInstanceOrNull(com.google.inject.Binding)>(r1);

        return $r2;
    }
}
