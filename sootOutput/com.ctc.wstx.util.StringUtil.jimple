public final class com.ctc.wstx.util.StringUtil extends java.lang.Object
{
    static final char CHAR_SPACE;
    private static final char INT_SPACE;
    static java.lang.String sLF;
    private static final int EOS;

    public void <init>()
    {
        com.ctc.wstx.util.StringUtil r0;

        r0 := @this: com.ctc.wstx.util.StringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getLF()
    {
        java.lang.Throwable $r1;
        java.lang.String $r0, r2, $r3;

        r2 = <com.ctc.wstx.util.StringUtil: java.lang.String sLF>;

        if r2 != null goto label6;

     label1:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        r2 = $r0;

        if $r0 != null goto label2;

        $r3 = "\n";

        goto label3;

     label2:
        $r3 = $r0;

     label3:
        <com.ctc.wstx.util.StringUtil: java.lang.String sLF> = $r3;

     label4:
        goto label6;

     label5:
        $r1 := @caughtexception;

        r2 = "\n";

        <com.ctc.wstx.util.StringUtil: java.lang.String sLF> = "\n";

     label6:
        return r2;

        catch java.lang.Throwable from label1 to label4 with label5;
    }

    public static void appendLF(java.lang.StringBuffer)
    {
        java.lang.String $r1;
        java.lang.StringBuffer r0;

        r0 := @parameter0: java.lang.StringBuffer;

        $r1 = staticinvoke <com.ctc.wstx.util.StringUtil: java.lang.String getLF()>();

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        return;
    }

    public static java.lang.String concatEntries(java.util.Collection, java.lang.String, java.lang.String)
    {
        java.util.Iterator $r2;
        java.util.Collection r0;
        java.lang.StringBuffer $r1;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.Object $r6;
        java.lang.String $r3, r4, r5;
        boolean $z0;

        r0 := @parameter0: java.util.Collection;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        if r5 != null goto label1;

        r5 = r4;

     label1:
        $i0 = interfaceinvoke r0.<java.util.Collection: int size()>();

        $r1 = new java.lang.StringBuffer;

        $i1 = $i0 << 3;

        $i2 = 16 + $i1;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>(int)>($i2);

        $r2 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

        i4 = 0;

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        if i4 != 0 goto label3;

        goto label5;

     label3:
        $i3 = $i0 - 1;

        if i4 != $i3 goto label4;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        goto label5;

     label4:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r4);

     label5:
        i4 = i4 + 1;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        goto label2;

     label6:
        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    public static java.lang.String normalizeSpaces(char[], int, int)
    {
        java.lang.StringBuffer $r5;
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i9, i13, i14, i15, i16, i17, $i20, $i21, $i22, $i24, $i25, $i26, $i27, $i28;
        java.lang.String $r2, $r4;
        char $c5, $c8, $c10, $c11, $c12, c18;
        char[] r1;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i13 := @parameter2: int;

        $i20 = (int) -1;

        i14 = i13 + $i20;

        i15 = i0;

        i16 = i14;

     label01:
        if i15 > i14 goto label02;

        $c12 = r1[i15];

        $i21 = (int) $c12;

        if $i21 != 32 goto label02;

        i15 = i15 + 1;

        goto label01;

     label02:
        if i15 <= i14 goto label03;

        return "";

     label03:
        if i16 <= i15 goto label04;

        $c11 = r1[i16];

        $i22 = (int) $c11;

        if $i22 != 32 goto label04;

        $i24 = (int) -1;

        i16 = i16 + $i24;

        goto label03;

     label04:
        i17 = i15 + 1;

     label05:
        if i17 >= i16 goto label08;

        $c8 = r1[i17];

        $i25 = (int) $c8;

        if $i25 != 32 goto label07;

        $i9 = i17 + 1;

        $c10 = r1[$i9];

        $i26 = (int) $c10;

        if $i26 != 32 goto label06;

        goto label08;

     label06:
        i17 = i17 + 2;

        goto label05;

     label07:
        i17 = i17 + 1;

        goto label05;

     label08:
        if i17 < i16 goto label10;

        if i15 != i0 goto label09;

        if i16 != i14 goto label09;

        return null;

     label09:
        $r4 = new java.lang.String;

        $i6 = i16 - i15;

        $i7 = $i6 + 1;

        specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>(r1, i15, $i7);

        return $r4;

     label10:
        $r5 = new java.lang.StringBuffer;

        $i1 = i16 - i15;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(int)>($i1);

        $i2 = i17 - i15;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>(r1, i15, $i2);

     label11:
        if i17 > i16 goto label15;

        $i3 = i17;

        i17 = i17 + 1;

        c18 = r1[$i3];

        $i27 = (int) c18;

        if $i27 != 32 goto label13;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label12:
        $i4 = i17;

        i17 = i17 + 1;

        $c5 = r1[$i4];

        $i28 = (int) $c5;

        if $i28 == 32 goto label12;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        goto label14;

     label13:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c18);

     label14:
        goto label11;

     label15:
        $r2 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static boolean isAllWhitespace(java.lang.String)
    {
        int $i0, i2, $i3;
        char $c1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 <= 32 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isAllWhitespace(char[], int, int)
    {
        int i1, i2, i3, $i4;
        char[] r0;
        char $c0;

        r0 := @parameter0: char[];

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 = i2 + i1;

     label1:
        if i1 >= i3 goto label3;

        $c0 = r0[i1];

        $i4 = (int) $c0;

        if $i4 <= 32 goto label2;

        return 0;

     label2:
        i1 = i1 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean equalEncodings(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i8, i9, $i10, i11, $i12, i13, $i14, $i15, $i17, $i19, $i21, $i23, $i25, $i27;
        java.lang.String r0, r1;
        char $c6, $c7, $c16, $c18, $c20, $c22, $c24, $c26;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i8 = 0;

        i9 = 0;

     label01:
        if i8 < $i0 goto label02;

        if i9 >= $i1 goto label23;

     label02:
        if i8 < $i0 goto label03;

        $i10 = 65536;

        goto label04;

     label03:
        $i2 = i8;

        i8 = i8 + 1;

        $c16 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i17 = (int) $c16;

        $i10 = $i17;

     label04:
        i11 = $i10;

        if i9 < $i1 goto label05;

        $i12 = 65536;

        goto label06;

     label05:
        $i3 = i9;

        i9 = i9 + 1;

        $c18 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i19 = (int) $c18;

        $i12 = $i19;

     label06:
        i13 = $i12;

        if i11 != $i12 goto label07;

        goto label01;

     label07:
        if i11 <= 32 goto label08;

        if i11 == 95 goto label08;

        if i11 != 45 goto label11;

     label08:
        if i8 < $i0 goto label09;

        $i14 = 65536;

        goto label10;

     label09:
        $i4 = i8;

        i8 = i8 + 1;

        $c20 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i21 = (int) $c20;

        $i14 = $i21;

     label10:
        i11 = $i14;

        goto label07;

     label11:
        if i13 <= 32 goto label12;

        if i13 == 95 goto label12;

        if i13 != 45 goto label15;

     label12:
        if i9 < $i1 goto label13;

        $i15 = 65536;

        goto label14;

     label13:
        $i5 = i9;

        i9 = i9 + 1;

        $c22 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);

        $i23 = (int) $c22;

        $i15 = $i23;

     label14:
        i13 = $i15;

        goto label11;

     label15:
        if i11 == i13 goto label22;

        if i11 == 65536 goto label16;

        if i13 != 65536 goto label17;

     label16:
        return 0;

     label17:
        if i11 >= 127 goto label18;

        if i11 > 90 goto label19;

        if i11 < 65 goto label19;

        i11 = i11 + 32;

        goto label19;

     label18:
        $c6 = (char) i11;

        $c24 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $i25 = (int) $c24;

        i11 = $i25;

     label19:
        if i13 >= 127 goto label20;

        if i13 > 90 goto label21;

        if i13 < 65 goto label21;

        i13 = i13 + 32;

        goto label21;

     label20:
        $c7 = (char) i13;

        $c26 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c7);

        $i27 = (int) $c26;

        i13 = $i27;

     label21:
        if i11 == i13 goto label22;

        return 0;

     label22:
        goto label01;

     label23:
        return 1;
    }

    public static boolean encodingStartsWith(java.lang.String, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i10, i11, $i12, i13, $i14, i15, $i16, $i17, $i19, $i21, $i23, $i25, $i26, $i27;
        java.lang.String r0, r1;
        char $c6, $c7, $c8, $c9, $c18, $c20, $c22, $c24;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        i10 = 0;

        i11 = 0;

     label01:
        if i10 < $i0 goto label02;

        if i11 >= $i1 goto label19;

     label02:
        if i10 < $i0 goto label03;

        $i12 = 65536;

        goto label04;

     label03:
        $i2 = i10;

        i10 = i10 + 1;

        $c18 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i2);

        $i19 = (int) $c18;

        $i12 = $i19;

     label04:
        i13 = $i12;

        if i11 < $i1 goto label05;

        $i14 = 65536;

        goto label06;

     label05:
        $i3 = i11;

        i11 = i11 + 1;

        $c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i3);

        $i21 = (int) $c20;

        $i14 = $i21;

     label06:
        i15 = $i14;

        if i13 != $i14 goto label07;

        goto label01;

     label07:
        if i13 <= 32 goto label08;

        if i13 == 95 goto label08;

        if i13 != 45 goto label11;

     label08:
        if i10 < $i0 goto label09;

        $i16 = 65536;

        goto label10;

     label09:
        $i4 = i10;

        i10 = i10 + 1;

        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i23 = (int) $c22;

        $i16 = $i23;

     label10:
        i13 = $i16;

        goto label07;

     label11:
        if i15 <= 32 goto label12;

        if i15 == 95 goto label12;

        if i15 != 45 goto label15;

     label12:
        if i11 < $i1 goto label13;

        $i17 = 65536;

        goto label14;

     label13:
        $i5 = i11;

        i11 = i11 + 1;

        $c24 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i5);

        $i25 = (int) $c24;

        $i17 = $i25;

     label14:
        i15 = $i17;

        goto label11;

     label15:
        if i13 == i15 goto label18;

        if i15 != 65536 goto label16;

        return 1;

     label16:
        if i13 != 65536 goto label17;

        return 0;

     label17:
        $c6 = (char) i13;

        $c7 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c6);

        $c8 = (char) i15;

        $c9 = staticinvoke <java.lang.Character: char toLowerCase(char)>($c8);

        $i26 = (int) $c7;

        $i27 = (int) $c9;

        if $i26 == $i27 goto label18;

        return 0;

     label18:
        goto label01;

     label19:
        return 1;
    }

    public static java.lang.String trimEncoding(java.lang.String, boolean)
    {
        char $c1, $c2, c4;
        java.lang.StringBuffer $r4;
        int $i0, i3, $i5, $i6;
        java.lang.String r0, $r2, $r3;
        boolean $z0, z1, $z2;

        r0 := @parameter0: java.lang.String;

        z1 := @parameter1: boolean;

        i3 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i3 >= $i0 goto label3;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i5 = (int) $c2;

        if $i5 <= 32 goto label3;

        $z2 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c2);

        if $z2 != 0 goto label2;

        goto label3;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        if i3 != $i0 goto label4;

        return r0;

     label4:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        if i3 <= 0 goto label5;

        $r3 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i3);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

     label5:
        if i3 >= $i0 goto label8;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        c4 = $c1;

        $i6 = (int) $c1;

        if $i6 <= 32 goto label7;

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c1);

        if $z0 == 0 goto label7;

        if z1 == 0 goto label6;

        c4 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c1);

     label6:
        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c4);

     label7:
        i3 = i3 + 1;

        goto label5;

     label8:
        $r2 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static boolean matches(java.lang.String, char[], int, int)
    {
        char $c2, $c5;
        int $i0, i1, i3, $i4, i6, $i7, $i8;
        char[] r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: char[];

        i3 := @parameter2: int;

        i1 := @parameter3: int;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == i1 goto label1;

        return 0;

     label1:
        i6 = 0;

     label2:
        if i6 >= i1 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i4 = i3 + i6;

        $c5 = r1[$i4];

        $i7 = (int) $c2;

        $i8 = (int) $c5;

        if $i7 == $i8 goto label3;

        return 0;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        return 1;
    }

    static void <clinit>()
    {
        <com.ctc.wstx.util.StringUtil: int EOS> = 65536;

        <com.ctc.wstx.util.StringUtil: char INT_SPACE> = 32;

        <com.ctc.wstx.util.StringUtil: char CHAR_SPACE> = 32;

        <com.ctc.wstx.util.StringUtil: java.lang.String sLF> = null;

        return;
    }
}
