public class org.apache.cxf.configuration.jsse.TLSClientParameters extends org.apache.cxf.configuration.jsse.TLSParameterBase
{
    private boolean disableCNCheck;
    private javax.net.ssl.SSLSocketFactory sslSocketFactory;
    private int sslCacheTimeout;
    private boolean useHttpsURLConnectionDefaultSslSocketFactory;
    private boolean useHttpsURLConnectionDefaultHostnameVerifier;

    public void <init>()
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSParameterBase: void <init>()>();

        r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int sslCacheTimeout> = 86400;

        return;
    }

    public void setDisableCNCheck(boolean)
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        boolean z0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean disableCNCheck> = z0;

        return;
    }

    public boolean isDisableCNCheck()
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        $z0 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean disableCNCheck>;

        return $z0;
    }

    public final void setSSLSocketFactory(javax.net.ssl.SSLSocketFactory)
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        javax.net.ssl.SSLSocketFactory r1;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        r1 := @parameter0: javax.net.ssl.SSLSocketFactory;

        r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.SSLSocketFactory sslSocketFactory> = r1;

        return;
    }

    public final javax.net.ssl.SSLSocketFactory getSSLSocketFactory()
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        javax.net.ssl.SSLSocketFactory $r1;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        $r1 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        return $r1;
    }

    public int getSslCacheTimeout()
    {
        int $i0;
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        $i0 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int sslCacheTimeout>;

        return $i0;
    }

    public void setSslCacheTimeout(int)
    {
        int i0;
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int sslCacheTimeout> = i0;

        return;
    }

    public boolean isUseHttpsURLConnectionDefaultSslSocketFactory()
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        $z0 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        return $z0;
    }

    public void setUseHttpsURLConnectionDefaultSslSocketFactory(boolean)
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        boolean z0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultSslSocketFactory> = z0;

        return;
    }

    public boolean isUseHttpsURLConnectionDefaultHostnameVerifier()
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        $z0 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        return $z0;
    }

    public void setUseHttpsURLConnectionDefaultHostnameVerifier(boolean)
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        boolean z0;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultHostnameVerifier> = z0;

        return;
    }

    public int hashCode()
    {
        java.lang.Integer $r4;
        java.security.SecureRandom $r5;
        byte $b17, $b18;
        org.apache.cxf.configuration.security.FiltersType $r13, $r19, $r21;
        boolean $z0, $z1, $z2, $z3;
        org.apache.cxf.configuration.security.DNConstraintsType $r16, $r18;
        javax.net.ssl.SSLSocketFactory $r1, $r25;
        java.util.List $r9, $r20, $r22;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, i14, i15, i16;
        java.lang.Boolean $r2, $r3;
        java.lang.String $r6, $r7, $r8, r24;
        org.apache.cxf.configuration.jsse.TLSClientParameters r0;
        java.util.Iterator $r10;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r14, $r15, $r17;
        javax.net.ssl.TrustManager[] $r12;
        java.lang.Object $r23;
        javax.net.ssl.KeyManager[] $r11;

        r0 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        $z0 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean disableCNCheck>;

        if $z0 == 0 goto label1;

        $b18 = 37;

        $b17 = 37;

        goto label2;

     label1:
        $b18 = 17;

        $b17 = 17;

     label2:
        i14 = $b17;

        $r1 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r1 == null goto label3;

        $i11 = $b18 * 41;

        $r25 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $i12 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>($r25);

        i14 = $i11 + $i12;

     label3:
        $z1 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $i0 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>(i14, $r2);

        $z2 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z2);

        $i1 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i0, $r3);

        $i2 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int sslCacheTimeout>;

        $r4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $i3 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i1, $r4);

        $r5 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.security.SecureRandom secureRandom>;

        $i4 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i3, $r5);

        $r6 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String protocol>;

        $i5 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i4, $r6);

        $r7 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String certAlias>;

        $i6 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i5, $r7);

        $r8 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String provider>;

        i15 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i6, $r8);

        $r9 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.util.List ciphersuites>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z3 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label5;

        $r23 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r23;

        i15 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>(i15, r24);

        goto label4;

     label5:
        $r11 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.KeyManager[] keyManagers>;

        $i7 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object[])>(i15, $r11);

        $r12 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.TrustManager[] trustManagers>;

        $i8 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object[])>($i7, $r12);

        i16 = $i8;

        $r13 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        if $r13 == null goto label6;

        $r19 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        $r20 = virtualinvoke $r19.<org.apache.cxf.configuration.security.FiltersType: java.util.List getInclude()>();

        $i10 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i8, $r20);

        $r21 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        $r22 = virtualinvoke $r21.<org.apache.cxf.configuration.security.FiltersType: java.util.List getExclude()>();

        i16 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i10, $r22);

     label6:
        $r14 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        if $r14 == null goto label7;

        $r15 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        $r16 = virtualinvoke $r15.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getIssuerDNConstraints()>();

        $i9 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>(i16, $r16);

        $r17 = r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        $r18 = virtualinvoke $r17.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getSubjectDNConstraints()>();

        i16 = specialinvoke r0.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>($i9, $r18);

     label7:
        return i16;
    }

    private int hash(int, java.lang.Object)
    {
        org.apache.cxf.configuration.jsse.TLSClientParameters r1;
        int $i0, $i1, i2;
        java.lang.Object r0;

        r1 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        i2 := @parameter0: int;

        r0 := @parameter1: java.lang.Object;

        if r0 == null goto label1;

        $i0 = i2 * 37;

        $i1 = virtualinvoke r0.<java.lang.Object: int hashCode()>();

        i2 = $i0 + $i1;

     label1:
        return i2;
    }

    private int hash(int, java.lang.Object[])
    {
        java.lang.Object[] r0;
        org.apache.cxf.configuration.jsse.TLSClientParameters r2;
        int i0, i1, i2;
        java.lang.Object r1;

        r2 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        i1 := @parameter0: int;

        r0 := @parameter1: java.lang.Object[];

        if r0 != null goto label1;

        return i1;

     label1:
        i0 = lengthof r0;

        i2 = 0;

     label2:
        if i2 >= i0 goto label3;

        r1 = r0[i2];

        i1 = specialinvoke r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: int hash(int,java.lang.Object)>(i1, r1);

        i2 = i2 + 1;

        goto label2;

     label3:
        return i1;
    }

    public boolean equals(java.lang.Object)
    {
        java.security.SecureRandom $r5, $r6;
        org.apache.cxf.configuration.security.FiltersType $r19, $r20, $r31, $r32, $r34, $r36, $r38;
        org.apache.cxf.configuration.security.DNConstraintsType $r24, $r26, $r28, $r30;
        javax.net.ssl.SSLSocketFactory $r3, $r4;
        java.lang.String $r7, $r8, $r9, $r10, $r11, $r12;
        org.apache.cxf.configuration.security.CertificateConstraintsType $r21, $r22, $r23, $r25, $r27, $r29, $r40;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31, $z32, $z33, $z34, $z35, z36, z37, $z38, z39, z40, $z41;
        java.util.List $r13, $r14, $r33, $r35, $r37, $r39;
        int $i0, $i1;
        org.apache.cxf.configuration.jsse.TLSClientParameters r1, r2;
        javax.net.ssl.TrustManager[] $r17, $r18;
        java.lang.Object r0;
        javax.net.ssl.KeyManager[] $r15, $r16;

        r1 := @this: org.apache.cxf.configuration.jsse.TLSClientParameters;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label01;

        return 1;

     label01:
        $z0 = r0 instanceof org.apache.cxf.configuration.jsse.TLSClientParameters;

        if $z0 == 0 goto label24;

        r2 = (org.apache.cxf.configuration.jsse.TLSClientParameters) r0;

        $z2 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean disableCNCheck>;

        $z1 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean disableCNCheck>;

        if $z2 != $z1 goto label02;

        $z30 = 1;

        goto label03;

     label02:
        $z30 = 0;

     label03:
        $z28 = $z30;

        $r4 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        $r3 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.SSLSocketFactory sslSocketFactory>;

        if $r4 != $r3 goto label04;

        $z31 = 1;

        goto label05;

     label04:
        $z31 = 0;

     label05:
        $z29 = $z28 & $z31;

        $z4 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        $z3 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultSslSocketFactory>;

        if $z4 != $z3 goto label06;

        $z32 = 1;

        goto label07;

     label06:
        $z32 = 0;

     label07:
        $z27 = $z29 & $z32;

        $z6 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        $z5 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: boolean useHttpsURLConnectionDefaultHostnameVerifier>;

        if $z6 != $z5 goto label08;

        $z33 = 1;

        goto label09;

     label08:
        $z33 = 0;

     label09:
        $z26 = $z27 & $z33;

        $i1 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: int sslCacheTimeout>;

        $i0 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: int sslCacheTimeout>;

        if $i1 != $i0 goto label10;

        $z34 = 1;

        goto label11;

     label10:
        $z34 = 0;

     label11:
        $z25 = $z26 & $z34;

        $r6 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.security.SecureRandom secureRandom>;

        $r5 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.security.SecureRandom secureRandom>;

        if $r6 != $r5 goto label12;

        $z35 = 1;

        goto label13;

     label12:
        $z35 = 0;

     label13:
        $z18 = $z25 & $z35;

        $r8 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String certAlias>;

        $r7 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String certAlias>;

        $z7 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r8, $r7);

        $z19 = $z18 & $z7;

        $r10 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String protocol>;

        $r9 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String protocol>;

        $z8 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r10, $r9);

        $z20 = $z19 & $z8;

        $r12 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String provider>;

        $r11 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.lang.String provider>;

        $z9 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r12, $r11);

        $z21 = $z20 & $z9;

        $r14 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.util.List ciphersuites>;

        $r13 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: java.util.List ciphersuites>;

        $z10 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.util.List,java.util.List)>($r14, $r13);

        $z22 = $z21 & $z10;

        $r16 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.KeyManager[] keyManagers>;

        $r15 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.KeyManager[] keyManagers>;

        $z11 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object[],java.lang.Object[])>($r16, $r15);

        $z23 = $z22 & $z11;

        $r18 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.TrustManager[] trustManagers>;

        $r17 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: javax.net.ssl.TrustManager[] trustManagers>;

        $z12 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object[],java.lang.Object[])>($r18, $r17);

        $z24 = $z23 & $z12;

        $r19 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        if $r19 == null goto label15;

        $r31 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        if $r31 == null goto label14;

        $r32 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        $r33 = virtualinvoke $r32.<org.apache.cxf.configuration.security.FiltersType: java.util.List getExclude()>();

        $r34 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        $r35 = virtualinvoke $r34.<org.apache.cxf.configuration.security.FiltersType: java.util.List getExclude()>();

        $z16 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.util.List,java.util.List)>($r33, $r35);

        z36 = $z24 & $z16;

        $r36 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        $r37 = virtualinvoke $r36.<org.apache.cxf.configuration.security.FiltersType: java.util.List getInclude()>();

        $r38 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        $r39 = virtualinvoke $r38.<org.apache.cxf.configuration.security.FiltersType: java.util.List getInclude()>();

        $z17 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.util.List,java.util.List)>($r37, $r39);

        z37 = z36 & $z17;

        goto label18;

     label14:
        z37 = 0;

        goto label18;

     label15:
        $r20 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.FiltersType cipherSuiteFilters>;

        if $r20 != null goto label16;

        $z38 = 1;

        goto label17;

     label16:
        $z38 = 0;

     label17:
        z37 = $z24 & $z38;

     label18:
        $r40 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        if $r40 == null goto label20;

        $r22 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        if $r22 == null goto label19;

        $r23 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        $r24 = virtualinvoke $r23.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getIssuerDNConstraints()>();

        $r25 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        $r26 = virtualinvoke $r25.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getIssuerDNConstraints()>();

        $z14 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r24, $r26);

        z39 = z37 & $z14;

        $r27 = r1.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        $r28 = virtualinvoke $r27.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getSubjectDNConstraints()>();

        $r29 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        $r30 = virtualinvoke $r29.<org.apache.cxf.configuration.security.CertificateConstraintsType: org.apache.cxf.configuration.security.DNConstraintsType getSubjectDNConstraints()>();

        $z15 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r28, $r30);

        z40 = z39 & $z15;

        goto label23;

     label19:
        z40 = 0;

        goto label23;

     label20:
        $z13 = z37;

        $r21 = r2.<org.apache.cxf.configuration.jsse.TLSClientParameters: org.apache.cxf.configuration.security.CertificateConstraintsType certConstraints>;

        if $r21 != null goto label21;

        $z41 = 1;

        goto label22;

     label21:
        $z41 = 0;

     label22:
        z40 = $z13 & $z41;

     label23:
        return z40;

     label24:
        return 0;
    }

    private static boolean equals(java.util.List, java.util.List)
    {
        java.util.List r0, r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2, $r3;
        boolean $z0;

        r0 := @parameter0: java.util.List;

        r1 := @parameter1: java.util.List;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != $i1 goto label4;

        i3 = 0;

     label1:
        $i2 = interfaceinvoke r0.<java.util.List: int size()>();

        if i3 >= $i2 goto label3;

        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3);

        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i3);

        $z0 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r2, $r3);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i3 = i3 + 1;

        goto label1;

     label3:
        return 1;

     label4:
        return 0;
    }

    private static boolean equals(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r0, r1;
        boolean $z0;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label2;

        if r1 != null goto label1;

        $z0 = 1;

        goto label3;

     label1:
        $z0 = 0;

        goto label3;

     label2:
        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

     label3:
        return $z0;
    }

    private static boolean equals(java.lang.Object[], java.lang.Object[])
    {
        java.lang.Object[] r0, r1;
        int $i0, $i1, $i2, i3;
        java.lang.Object $r2, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[];

        if r0 != null goto label3;

        if r1 != null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;

     label3:
        if r1 == null goto label7;

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        if $i1 != $i0 goto label7;

        i3 = 0;

     label4:
        $i2 = lengthof r0;

        if i3 >= $i2 goto label6;

        $r3 = r0[i3];

        $r2 = r1[i3];

        $z0 = staticinvoke <org.apache.cxf.configuration.jsse.TLSClientParameters: boolean equals(java.lang.Object,java.lang.Object)>($r3, $r2);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        i3 = i3 + 1;

        goto label4;

     label6:
        return 1;

     label7:
        return 0;
    }
}
