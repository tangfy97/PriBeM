class org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2 extends java.lang.Object implements org.waveprotocol.wave.concurrencycontrol.client.ConcurrencyControl$ConnectionListener
{
    final org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl this$0;

    void <init>(org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl)
    {
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl r1;
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2 r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2;

        r1 := @parameter0: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl;

        r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void onOperationReceived()
    {
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl $r1;
        org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2 r0;

        r0 := @this: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2;

        $r1 = r0.<org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl$2: org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl this$0>;

        staticinvoke <org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl: void access$300(org.waveprotocol.wave.concurrencycontrol.channel.OperationChannelImpl)>($r1);

        return;
    }
}
