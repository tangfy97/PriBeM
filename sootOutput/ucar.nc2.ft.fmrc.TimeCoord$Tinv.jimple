public class ucar.nc2.ft.fmrc.TimeCoord$Tinv extends java.lang.Object implements java.lang.Comparable
{
    private double b1;
    private double b2;

    public void <init>(double)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0;
        double d0;

        r0 := @this: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        d0 := @parameter0: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2> = d0;

        return;
    }

    public void <init>(double, double)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0;
        double d0, d1;

        r0 := @this: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1> = d0;

        r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2> = d1;

        return;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r1, r2;
        int $i0, $i1;
        java.lang.Object r0;
        double $d0, $d1, $d2, $d3;

        r2 := @this: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        r0 := @parameter0: java.lang.Object;

        r1 = (ucar.nc2.ft.fmrc.TimeCoord$Tinv) r0;

        $d1 = r1.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        $d0 = r2.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        if $i0 == 0 goto label1;

        return 0;

     label1:
        $d3 = r1.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        $d2 = r2.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>($d3, $d2);

        if $i1 == 0 goto label2;

        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        long $l1, $l2, $l4, $l5, $l10, $l11;
        byte $b0, $b3;
        int $i6, $i7, $i8, $i9;
        double $d0, $d1, $d2, $d3;
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0;

        r0 := @this: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        $d0 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $d3 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        $l10 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d3);

        goto label2;

     label1:
        $l10 = 0L;

     label2:
        $l1 = $l10 >>> 32;

        $l2 = $l10 ^ $l1;

        $i9 = (int) $l2;

        $d1 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        $b3 = $d1 cmpl 0.0;

        if $b3 == 0 goto label3;

        $d2 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        $l11 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>($d2);

        goto label4;

     label3:
        $l11 = 0L;

     label4:
        $i7 = 31 * $i9;

        $l4 = $l11 >>> 32;

        $l5 = $l11 ^ $l4;

        $i6 = (int) $l5;

        $i8 = $i7 + $i6;

        return $i8;
    }

    public int compareTo(ucar.nc2.ft.fmrc.TimeCoord$Tinv)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0, r1;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3;

        r0 := @this: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        r1 := @parameter0: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        $d1 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        $d0 = r1.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d1, $d0);

        if $i0 != 0 goto label1;

        $d3 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        $d2 = r1.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        $i1 = staticinvoke <java.lang.Double: int compare(double,double)>($d3, $d2);

        return $i1;

     label1:
        return $i0;
    }

    public volatile int compareTo(java.lang.Object)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0, $r2;
        int $i0;
        java.lang.Object r1;

        r0 := @this: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.ft.fmrc.TimeCoord$Tinv) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: int compareTo(ucar.nc2.ft.fmrc.TimeCoord$Tinv)>($r2);

        return $i0;
    }

    static double access$000(ucar.nc2.ft.fmrc.TimeCoord$Tinv)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0;
        double $d0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        $d0 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b1>;

        return $d0;
    }

    static double access$100(ucar.nc2.ft.fmrc.TimeCoord$Tinv)
    {
        ucar.nc2.ft.fmrc.TimeCoord$Tinv r0;
        double $d0;

        r0 := @parameter0: ucar.nc2.ft.fmrc.TimeCoord$Tinv;

        $d0 = r0.<ucar.nc2.ft.fmrc.TimeCoord$Tinv: double b2>;

        return $d0;
    }
}
