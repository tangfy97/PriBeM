public final class org.waveprotocol.wave.model.id.IdFilter extends java.lang.Object
{
    private final java.util.Set ids;
    private final java.util.Set prefixes;

    public static transient org.waveprotocol.wave.model.id.IdFilter ofIds(org.waveprotocol.wave.model.id.WaveletId, org.waveprotocol.wave.model.id.WaveletId[])
    {
        org.waveprotocol.wave.model.id.WaveletId r2;
        java.util.ArrayList $r0;
        java.util.List $r3, $r4;
        int $i0, $i1;
        org.waveprotocol.wave.model.id.IdFilter $r5;
        org.waveprotocol.wave.model.id.WaveletId[] r1;

        r2 := @parameter0: org.waveprotocol.wave.model.id.WaveletId;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletId[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        $i1 = 1 + $i0;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r5 = staticinvoke <org.waveprotocol.wave.model.id.IdFilter: org.waveprotocol.wave.model.id.IdFilter of(java.util.Collection,java.util.Collection)>($r0, $r4);

        return $r5;
    }

    public static transient org.waveprotocol.wave.model.id.IdFilter ofPrefixes(java.lang.String, java.lang.String[])
    {
        java.lang.String[] r1;
        java.util.ArrayList $r0;
        java.util.List $r3, $r4;
        int $i0, $i1;
        org.waveprotocol.wave.model.id.IdFilter $r5;
        java.lang.String r2;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        $i1 = 1 + $i0;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r2);

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r3);

        $r4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        $r5 = staticinvoke <org.waveprotocol.wave.model.id.IdFilter: org.waveprotocol.wave.model.id.IdFilter of(java.util.Collection,java.util.Collection)>($r4, $r0);

        return $r5;
    }

    public static org.waveprotocol.wave.model.id.IdFilter of(java.util.Collection, java.util.Collection)
    {
        org.waveprotocol.wave.model.id.IdFilter $r0;
        java.util.Collection r1, r2;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.util.Collection;

        $r0 = new org.waveprotocol.wave.model.id.IdFilter;

        specialinvoke $r0.<org.waveprotocol.wave.model.id.IdFilter: void <init>(java.util.Collection,java.util.Collection)>(r1, r2);

        return $r0;
    }

    public static boolean accepts(org.waveprotocol.wave.model.id.IdFilter, org.waveprotocol.wave.model.id.WaveletId)
    {
        java.util.Iterator $r4;
        java.util.Set $r2, $r3;
        org.waveprotocol.wave.model.id.WaveletId r1;
        org.waveprotocol.wave.model.id.IdFilter r0;
        java.lang.Object $r6;
        java.lang.String $r5, $r7;
        boolean $z0, z1;

        r0 := @parameter0: org.waveprotocol.wave.model.id.IdFilter;

        r1 := @parameter1: org.waveprotocol.wave.model.id.WaveletId;

        $r2 = r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        z1 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        $r3 = r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        if z1 != 0 goto label2;

        $r5 = virtualinvoke r1.<org.waveprotocol.wave.model.id.WaveletId: java.lang.String getId()>();

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (java.lang.String) $r6;

        z1 = virtualinvoke $r5.<java.lang.String: boolean startsWith(java.lang.String)>($r7);

        goto label1;

     label2:
        return z1;
    }

    private void <init>(java.util.Collection, java.util.Collection)
    {
        java.util.HashSet $r3, $r5;
        java.util.Collection r1, r2;
        java.util.Set $r4, $r6;
        org.waveprotocol.wave.model.id.IdFilter r0;

        r0 := @this: org.waveprotocol.wave.model.id.IdFilter;

        r1 := @parameter0: java.util.Collection;

        r2 := @parameter1: java.util.Collection;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "null ids");

        staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r2, "null prefixes");

        $r3 = new java.util.HashSet;

        specialinvoke $r3.<java.util.HashSet: void <init>(java.util.Collection)>(r1);

        $r4 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r3);

        r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids> = $r4;

        $r5 = new java.util.HashSet;

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>(r2);

        $r6 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>($r5);

        r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes> = $r6;

        return;
    }

    public java.util.Set getIds()
    {
        java.util.Set $r1;
        org.waveprotocol.wave.model.id.IdFilter r0;

        r0 := @this: org.waveprotocol.wave.model.id.IdFilter;

        $r1 = r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        return $r1;
    }

    public java.util.Set getPrefixes()
    {
        java.util.Set $r1;
        org.waveprotocol.wave.model.id.IdFilter r0;

        r0 := @this: org.waveprotocol.wave.model.id.IdFilter;

        $r1 = r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        return $r1;
    }

    public final boolean equals(java.lang.Object)
    {
        java.util.Set $r3, $r4, $r5, $r6;
        java.lang.Object r0;
        org.waveprotocol.wave.model.id.IdFilter r1, r2;
        boolean $z0, $z1, $z2, $z3;

        r1 := @this: org.waveprotocol.wave.model.id.IdFilter;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r0 instanceof org.waveprotocol.wave.model.id.IdFilter;

        if $z0 == 0 goto label4;

        r2 = (org.waveprotocol.wave.model.id.IdFilter) r0;

        $r4 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        $r3 = r2.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label2;

        $r6 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        $r5 = r2.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        $z2 = virtualinvoke $r6.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z2 == 0 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;

     label4:
        return 0;
    }

    public final int hashCode()
    {
        java.util.Set $r1, $r2;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        org.waveprotocol.wave.model.id.IdFilter r0;

        r0 := @this: org.waveprotocol.wave.model.id.IdFilter;

        $r1 = r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        $i1 = 31 * $i0;

        $i2 = 17 + $i1;

        $i3 = $i2 * 31;

        $r2 = r0.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        $i4 = virtualinvoke $r2.<java.lang.Object: int hashCode()>();

        $i5 = $i3 + $i4;

        return $i5;
    }

    public final java.lang.String toString()
    {
        java.util.Set $r2, $r3, $r4, $r6, $r8;
        java.lang.StringBuilder $r0, $r5, $r7, $r9;
        org.waveprotocol.wave.model.id.IdFilter r1;
        java.lang.String $r10;
        boolean $z0, $z1, $z2;

        r1 := @this: org.waveprotocol.wave.model.id.IdFilter;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("IdFilter[");

        $r2 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        $z0 = interfaceinvoke $r2.<java.util.Set: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("prefixes=");

        $r8 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

     label1:
        $r3 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label3;

        $r4 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set prefixes>;

        $z2 = interfaceinvoke $r4.<java.util.Set: boolean isEmpty()>();

        if $z2 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ids=");

        $r6 = r1.<org.waveprotocol.wave.model.id.IdFilter: java.util.Set ids>;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

     label3:
        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }
}
