public class org.apache.velocity.runtime.directive.Scope extends java.util.AbstractMap
{
    private java.util.Map storage;
    private java.lang.Object replaced;
    private org.apache.velocity.runtime.directive.Scope parent;
    private org.apache.velocity.runtime.directive.Scope$Info info;
    protected final java.lang.Object owner;

    public void <init>(java.lang.Object, java.lang.Object)
    {
        java.lang.Object r1, r2;
        org.apache.velocity.runtime.directive.Scope r0, $r3;
        java.lang.ClassCastException $r4;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.util.AbstractMap: void <init>()>();

        r0.<org.apache.velocity.runtime.directive.Scope: java.lang.Object owner> = r1;

        if r2 == null goto label4;

     label1:
        $r3 = (org.apache.velocity.runtime.directive.Scope) r2;

        r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0.<org.apache.velocity.runtime.directive.Scope: java.lang.Object replaced> = r2;

     label4:
        return;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    private java.util.Map getStorage()
    {
        java.util.Map $r1, $r2;
        java.util.HashMap $r3;
        org.apache.velocity.runtime.directive.Scope r0;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = r0.<org.apache.velocity.runtime.directive.Scope: java.util.Map storage>;

        if $r1 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.apache.velocity.runtime.directive.Scope: java.util.Map storage> = $r3;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.directive.Scope: java.util.Map storage>;

        return $r2;
    }

    public java.util.Set entrySet()
    {
        java.util.Set $r2;
        org.apache.velocity.runtime.directive.Scope r0;
        java.util.Map $r1;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = specialinvoke r0.<org.apache.velocity.runtime.directive.Scope: java.util.Map getStorage()>();

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set entrySet()>();

        return $r2;
    }

    public java.lang.Object get(java.lang.Object)
    {
        java.lang.Object r1, $r2, $r5;
        org.apache.velocity.runtime.directive.Scope r0, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<java.util.AbstractMap: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label1;

        $r3 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        if $r3 == null goto label1;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Scope: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r4 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        $r5 = virtualinvoke $r4.<org.apache.velocity.runtime.directive.Scope: java.lang.Object get(java.lang.Object)>(r1);

        return $r5;

     label1:
        return $r2;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.util.Map $r1;
        java.lang.Object r2, r3, $r4;
        org.apache.velocity.runtime.directive.Scope r0;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r1 = specialinvoke r0.<org.apache.velocity.runtime.directive.Scope: java.util.Map getStorage()>();

        $r4 = interfaceinvoke $r1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return $r4;
    }

    protected void stop()
    {
        org.apache.velocity.runtime.directive.StopCommand $r0;
        java.lang.Object $r2;
        org.apache.velocity.runtime.directive.Scope r1;

        r1 := @this: org.apache.velocity.runtime.directive.Scope;

        $r0 = new org.apache.velocity.runtime.directive.StopCommand;

        $r2 = r1.<org.apache.velocity.runtime.directive.Scope: java.lang.Object owner>;

        specialinvoke $r0.<org.apache.velocity.runtime.directive.StopCommand: void <init>(java.lang.Object)>($r2);

        throw $r0;
    }

    protected int getDepth()
    {
        int $i0, $i1;
        org.apache.velocity.runtime.directive.Scope r0, $r1, $r2;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        if $r1 != null goto label1;

        return 1;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        $i0 = virtualinvoke $r2.<org.apache.velocity.runtime.directive.Scope: int getDepth()>();

        $i1 = $i0 + 1;

        return $i1;
    }

    public org.apache.velocity.runtime.directive.Scope getTopmost()
    {
        org.apache.velocity.runtime.directive.Scope r0, $r1, $r2, $r3;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        if $r1 != null goto label1;

        return r0;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        $r3 = virtualinvoke $r2.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getTopmost()>();

        return $r3;
    }

    public org.apache.velocity.runtime.directive.Scope getParent()
    {
        org.apache.velocity.runtime.directive.Scope r0, $r1;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        return $r1;
    }

    public java.lang.Object getReplaced()
    {
        java.lang.Object $r1, $r2, $r5;
        org.apache.velocity.runtime.directive.Scope r0, $r3, $r4;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = r0.<org.apache.velocity.runtime.directive.Scope: java.lang.Object replaced>;

        if $r1 != null goto label1;

        $r3 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        if $r3 == null goto label1;

        $r4 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope parent>;

        $r5 = virtualinvoke $r4.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        return $r5;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.directive.Scope: java.lang.Object replaced>;

        return $r2;
    }

    public org.apache.velocity.runtime.directive.Scope$Info getInfo()
    {
        java.lang.Object $r4;
        org.apache.velocity.runtime.directive.Scope$Info $r1, $r2, $r3;
        org.apache.velocity.runtime.directive.Scope r0;

        r0 := @this: org.apache.velocity.runtime.directive.Scope;

        $r1 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope$Info info>;

        if $r1 != null goto label1;

        $r3 = new org.apache.velocity.runtime.directive.Scope$Info;

        $r4 = r0.<org.apache.velocity.runtime.directive.Scope: java.lang.Object owner>;

        specialinvoke $r3.<org.apache.velocity.runtime.directive.Scope$Info: void <init>(org.apache.velocity.runtime.directive.Scope,java.lang.Object)>(r0, $r4);

        r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope$Info info> = $r3;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope$Info info>;

        return $r2;
    }
}
