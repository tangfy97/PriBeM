class org.waveprotocol.wave.crypto.AlgorithmUtil$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignerInfo$HashAlgorithm;
    static final int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignature$SignatureAlgorithm;

    static void <clinit>()
    {
        java.lang.NoSuchFieldError $r10, $r11, $r12;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm $r6, $r8;
        int[] $r1, $r3, $r5, $r7, $r9;
        int $i0, $i1, $i2, $i3, $i4;
        org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm[] $r4;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm[] $r0;
        org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm $r2;

        $r0 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <org.waveprotocol.wave.crypto.AlgorithmUtil$1: int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignature$SignatureAlgorithm> = $r1;

     label01:
        $r3 = <org.waveprotocol.wave.crypto.AlgorithmUtil$1: int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignature$SignatureAlgorithm>;

        $r2 = <org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm SHA1_RSA>;

        $i1 = virtualinvoke $r2.<org.waveprotocol.wave.federation.Proto$ProtocolSignature$SignatureAlgorithm: int ordinal()>();

        $r3[$i1] = 1;

     label02:
        goto label04;

     label03:
        $r12 := @caughtexception;

     label04:
        $r4 = staticinvoke <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm[] values()>();

        $i2 = lengthof $r4;

        $r5 = newarray (int)[$i2];

        <org.waveprotocol.wave.crypto.AlgorithmUtil$1: int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignerInfo$HashAlgorithm> = $r5;

     label05:
        $r7 = <org.waveprotocol.wave.crypto.AlgorithmUtil$1: int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignerInfo$HashAlgorithm>;

        $r6 = <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm SHA256>;

        $i3 = virtualinvoke $r6.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: int ordinal()>();

        $r7[$i3] = 1;

     label06:
        goto label08;

     label07:
        $r11 := @caughtexception;

     label08:
        $r9 = <org.waveprotocol.wave.crypto.AlgorithmUtil$1: int[] $SwitchMap$org$waveprotocol$wave$federation$Proto$ProtocolSignerInfo$HashAlgorithm>;

        $r8 = <org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm SHA512>;

        $i4 = virtualinvoke $r8.<org.waveprotocol.wave.federation.Proto$ProtocolSignerInfo$HashAlgorithm: int ordinal()>();

        $r9[$i4] = 2;

     label09:
        goto label11;

     label10:
        $r10 := @caughtexception;

     label11:
        return;

        catch java.lang.NoSuchFieldError from label01 to label02 with label03;
        catch java.lang.NoSuchFieldError from label05 to label06 with label07;
        catch java.lang.NoSuchFieldError from label08 to label09 with label10;
    }
}
