final enum class org.waveprotocol.wave.client.gadget.renderer.Controller$Service extends java.lang.Enum
{
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_ENABLE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_GADGET_STATE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_PRIVATE_GADGET_STATE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_TITLE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_PREF;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service RESIZE_IFRAME;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_IFRAME_WIDTH;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service REQUEST_NAVIGATE_TO;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service NAVIGATE_TO_FRAGMENT;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service UPDATE_PODIUM_STATE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service LOG_MESSAGE;
    public static final enum org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_SNIPPET;
    private final java.lang.String name;
    private final org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback callback;
    private static final org.waveprotocol.wave.client.gadget.renderer.Controller$Service[] $VALUES;

    public static org.waveprotocol.wave.client.gadget.renderer.Controller$Service[] values()
    {
        java.lang.Object $r1;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service[] $r0, $r2;

        $r0 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service[] $VALUES>;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.waveprotocol.wave.client.gadget.renderer.Controller$Service[]) $r1;

        return $r2;
    }

    public static org.waveprotocol.wave.client.gadget.renderer.Controller$Service valueOf(java.lang.String)
    {
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service $r2;
        java.lang.String r0;
        java.lang.Enum $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/waveprotocol/wave/client/gadget/renderer/Controller$Service;", r0);

        $r2 = (org.waveprotocol.wave.client.gadget.renderer.Controller$Service) $r1;

        return $r2;
    }

    private void <init>(java.lang.String, int, java.lang.String, org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)
    {
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service r0;
        int i0;
        org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback r3;
        java.lang.String r1, r2;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>(r1, i0);

        r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: java.lang.String name> = r2;

        r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback callback> = r3;

        return;
    }

    public void callService(org.waveprotocol.wave.client.gadget.renderer.GadgetRpcListener, org.waveprotocol.wave.client.gadget.renderer.Controller$JavaScriptFunction, org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed)
    {
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service r0;
        org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed r2;
        org.waveprotocol.wave.client.gadget.renderer.Controller$JavaScriptFunction r10;
        org.waveprotocol.wave.client.gadget.renderer.GadgetRpcListener r1;
        java.lang.Exception $r4;
        org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback $r3;
        java.lang.StringBuilder $r5, $r6, $r8;
        java.lang.String $r7, $r9;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        r1 := @parameter0: org.waveprotocol.wave.client.gadget.renderer.GadgetRpcListener;

        r10 := @parameter1: org.waveprotocol.wave.client.gadget.renderer.Controller$JavaScriptFunction;

        r2 := @parameter2: org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed;

     label1:
        $r3 = r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback callback>;

        interfaceinvoke $r3.<org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback: void callService(org.waveprotocol.wave.client.gadget.renderer.GadgetRpcListener,org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed)>(r1, r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $z0 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.Controller: boolean access$200()>();

        if $z0 == 0 goto label4;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to call service ");

        $r7 = virtualinvoke $r4.<java.lang.Exception: java.lang.String getMessage()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.client.gadget.GadgetLog: void logError(java.lang.String)>($r9);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public java.lang.String getName()
    {
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r1 = r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: java.lang.String name>;

        return $r1;
    }

    private static com.google.gwt.core.client.JavaScriptObject getArgument(int, org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed) throws org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException
    {
        com.google.gwt.core.client.JavaScriptObject $r6;
        org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed r0;
        org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException $r1;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5;

        i0 := @parameter0: int;

        r0 := @parameter1: org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed: int length()>();

        if $i1 <= i0 goto label1;

        $r6 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed: com.google.gwt.core.client.JavaScriptObject getObject(int)>(i0);

        return $r6;

     label1:
        $r1 = new org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing argument at ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    private static java.lang.String getArgumentAsString(int, org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed) throws org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException
    {
        org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed r0;
        org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException $r1;
        int i0, $i1;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.String $r5, $r6;

        i0 := @parameter0: int;

        r0 := @parameter1: org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed;

        if r0 == null goto label1;

        $i1 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed: int length()>();

        if $i1 <= i0 goto label1;

        $r6 = virtualinvoke r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed: java.lang.String getString(int)>(i0);

        return $r6;

     label1:
        $r1 = new org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Missing argument at ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;
    }

    static java.lang.String access$000(int, org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed) throws org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException
    {
        int i0;
        java.lang.String $r1;
        org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed r0;

        i0 := @parameter0: int;

        r0 := @parameter1: org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed;

        $r1 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: java.lang.String getArgumentAsString(int,org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed)>(i0, r0);

        return $r1;
    }

    static com.google.gwt.core.client.JavaScriptObject access$100(int, org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed) throws org.waveprotocol.wave.client.gadget.renderer.Controller$InvalidArgumentException
    {
        int i0;
        com.google.gwt.core.client.JavaScriptObject $r1;
        org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed r0;

        i0 := @parameter0: int;

        r0 := @parameter1: org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed;

        $r1 = staticinvoke <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: com.google.gwt.core.client.JavaScriptObject getArgument(int,org.waveprotocol.wave.client.gadget.renderer.Controller$JsArrayMixed)>(i0, r0);

        return $r1;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service $r0, $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r18, $r20, $r22, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service[] $r24;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$3 $r5;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$11 $r21;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$4 $r7;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$10 $r19;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$1 $r1;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$2 $r3;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$12 $r23;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$9 $r17;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$7 $r13;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$8 $r15;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$5 $r9;
        org.waveprotocol.wave.client.gadget.renderer.Controller$Service$6 $r11;

        $r0 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r1 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$1;

        specialinvoke $r1.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$1: void <init>()>();

        specialinvoke $r0.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("WAVE_ENABLE", 0, "wave_enable", $r1);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_ENABLE> = $r0;

        $r2 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r3 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$2;

        specialinvoke $r3.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$2: void <init>()>();

        specialinvoke $r2.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("WAVE_GADGET_STATE", 1, "wave_gadget_state", $r3);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_GADGET_STATE> = $r2;

        $r4 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r5 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$3;

        specialinvoke $r5.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$3: void <init>()>();

        specialinvoke $r4.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("WAVE_PRIVATE_GADGET_STATE", 2, "wave_private_gadget_state", $r5);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_PRIVATE_GADGET_STATE> = $r4;

        $r6 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r7 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$4;

        specialinvoke $r7.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$4: void <init>()>();

        specialinvoke $r6.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("SET_TITLE", 3, "set_title", $r7);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_TITLE> = $r6;

        $r8 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r9 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$5;

        specialinvoke $r9.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$5: void <init>()>();

        specialinvoke $r8.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("SET_PREF", 4, "set_pref", $r9);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_PREF> = $r8;

        $r10 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r11 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$6;

        specialinvoke $r11.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$6: void <init>()>();

        specialinvoke $r10.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("RESIZE_IFRAME", 5, "resize_iframe", $r11);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service RESIZE_IFRAME> = $r10;

        $r12 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r13 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$7;

        specialinvoke $r13.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$7: void <init>()>();

        specialinvoke $r12.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("SET_IFRAME_WIDTH", 6, "setIframeWidth", $r13);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_IFRAME_WIDTH> = $r12;

        $r14 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r15 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$8;

        specialinvoke $r15.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$8: void <init>()>();

        specialinvoke $r14.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("REQUEST_NAVIGATE_TO", 7, "requestNavigateTo", $r15);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service REQUEST_NAVIGATE_TO> = $r14;

        $r16 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r17 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$9;

        specialinvoke $r17.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$9: void <init>()>();

        specialinvoke $r16.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("NAVIGATE_TO_FRAGMENT", 8, "navigateToFragment", $r17);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service NAVIGATE_TO_FRAGMENT> = $r16;

        $r18 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r19 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$10;

        specialinvoke $r19.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$10: void <init>()>();

        specialinvoke $r18.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("UPDATE_PODIUM_STATE", 9, "updateState", $r19);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service UPDATE_PODIUM_STATE> = $r18;

        $r20 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r21 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$11;

        specialinvoke $r21.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$11: void <init>()>();

        specialinvoke $r20.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("LOG_MESSAGE", 10, "wave_log", $r21);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service LOG_MESSAGE> = $r20;

        $r22 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service;

        $r23 = new org.waveprotocol.wave.client.gadget.renderer.Controller$Service$12;

        specialinvoke $r23.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service$12: void <init>()>();

        specialinvoke $r22.<org.waveprotocol.wave.client.gadget.renderer.Controller$Service: void <init>(java.lang.String,int,java.lang.String,org.waveprotocol.wave.client.gadget.renderer.Controller$ServiceCallback)>("SET_SNIPPET", 11, "set_snippet", $r23);

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_SNIPPET> = $r22;

        $r24 = newarray (org.waveprotocol.wave.client.gadget.renderer.Controller$Service)[12];

        $r25 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_ENABLE>;

        $r24[0] = $r25;

        $r26 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_GADGET_STATE>;

        $r24[1] = $r26;

        $r27 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service WAVE_PRIVATE_GADGET_STATE>;

        $r24[2] = $r27;

        $r28 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_TITLE>;

        $r24[3] = $r28;

        $r29 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_PREF>;

        $r24[4] = $r29;

        $r30 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service RESIZE_IFRAME>;

        $r24[5] = $r30;

        $r31 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_IFRAME_WIDTH>;

        $r24[6] = $r31;

        $r32 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service REQUEST_NAVIGATE_TO>;

        $r24[7] = $r32;

        $r33 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service NAVIGATE_TO_FRAGMENT>;

        $r24[8] = $r33;

        $r34 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service UPDATE_PODIUM_STATE>;

        $r24[9] = $r34;

        $r35 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service LOG_MESSAGE>;

        $r24[10] = $r35;

        $r36 = <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service SET_SNIPPET>;

        $r24[11] = $r36;

        <org.waveprotocol.wave.client.gadget.renderer.Controller$Service: org.waveprotocol.wave.client.gadget.renderer.Controller$Service[] $VALUES> = $r24;

        return;
    }
}
