public class com.jidesoft.plaf.eclipse.EclipseMenuItemUI extends javax.swing.plaf.MenuItemUI
{
    protected javax.swing.JMenuItem menuItem;
    protected java.awt.Color selectionBackground;
    protected java.awt.Color selectionForeground;
    protected java.awt.Color disabledForeground;
    protected java.awt.Color acceleratorForeground;
    protected java.awt.Color acceleratorSelectionForeground;
    private java.lang.String acceleratorDelimiter;
    protected int defaultTextIconGap;
    protected java.awt.Font acceleratorFont;
    protected javax.swing.event.MouseInputListener mouseInputListener;
    protected javax.swing.event.MenuDragMouseListener menuDragMouseListener;
    protected javax.swing.event.MenuKeyListener menuKeyListener;
    private java.beans.PropertyChangeListener propertyChangeListener;
    protected javax.swing.Icon arrowIcon;
    protected javax.swing.Icon checkIcon;
    protected boolean oldBorderPainted;
    javax.swing.InputMap windowInputMap;
    private static final boolean DEBUG;
    protected java.awt.Color shadowColor;
    protected int defaultAccelEndGap;
    protected int defaultShadowWidth;
    private java.awt.Color borderColor;
    private java.awt.Color backgroundColor;
    static final java.lang.String MAX_TEXT_WIDTH;
    static final java.lang.String MAX_ACC_WIDTH;
    protected com.jidesoft.plaf.basic.ThemePainter _painter;
    static java.awt.Rectangle zeroRect;
    static java.awt.Rectangle iconRect;
    static java.awt.Rectangle textRect;
    static java.awt.Rectangle acceleratorRect;
    static java.awt.Rectangle checkIconRect;
    static java.awt.Rectangle arrowIconRect;
    static java.awt.Rectangle viewRect;
    static java.awt.Rectangle r;

    public void <init>()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        specialinvoke r0.<javax.swing.plaf.MenuItemUI: void <init>()>();

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon> = null;

        return;
    }

    public static javax.swing.plaf.ComponentUI createUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI $r0;

        r1 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void <init>()>();

        return $r0;
    }

    public void installUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        javax.swing.JMenuItem $r2, $r3;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (javax.swing.JMenuItem) r1;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem> = $r2;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installDefaults()>();

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installComponents(javax.swing.JMenuItem)>($r3);

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installListeners()>();

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void installKeyboardActions()>();

        return;
    }

    protected void installDefaults()
    {
        java.awt.Color $r29, $r34, $r39, $r44, $r49, $r54, $r68, $r69, $r70, $r71, $r72, $r77, $r78, $r79, $r91, $r92, $r93, $r94;
        java.lang.StringBuilder $r9, $r11, $r12, $r16, $r18, $r19, $r21, $r22, $r23, $r25, $r26, $r27, $r30, $r31, $r32, $r35, $r36, $r37, $r40, $r41, $r42, $r45, $r46, $r47, $r50, $r51, $r52, $r56, $r57, $r58, $r61, $r62, $r63, $r81, $r82, $r83, $r86, $r87, $r88;
        java.lang.String $r3, $r13, $r20, $r24, $r28, $r33, $r38, $r43, $r48, $r53, $r59, $r64, $r84, $r89, $r95, $r96;
        com.jidesoft.plaf.basic.ThemePainter $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        java.awt.Font $r4, $r5, $r76;
        javax.swing.Icon $r55, $r60, $r65, $r66, $r67, $r97;
        java.awt.Insets $r8, $r14, $r75;
        javax.swing.JMenuItem $r6, $r7, $r10, $r15, $r17, $r74, $r80, $r85;
        int $i0, $i1, $i2;
        java.lang.Boolean $r73;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        java.lang.Object $r1, $r90;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>("Theme.painter");

        $r2 = (com.jidesoft.plaf.basic.ThemePainter) $r1;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: com.jidesoft.plaf.basic.ThemePainter _painter> = $r2;

        $r3 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String getPropertyPrefix()>();

        $r4 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Font getFont(java.lang.Object)>("MenuItem.acceleratorFont");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Font acceleratorFont> = $r4;

        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Font acceleratorFont>;

        if $r5 != null goto label01;

        $r76 = staticinvoke <javax.swing.UIManager: java.awt.Font getFont(java.lang.Object)>("MenuItem.font");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Font acceleratorFont> = $r76;

     label01:
        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke $r6.<javax.swing.JMenuItem: void setOpaque(boolean)>(1);

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r8 = virtualinvoke $r7.<javax.swing.JMenuItem: java.awt.Insets getMargin()>();

        if $r8 == null goto label02;

        $r74 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r75 = virtualinvoke $r74.<javax.swing.JMenuItem: java.awt.Insets getMargin()>();

        $z7 = $r75 instanceof javax.swing.plaf.UIResource;

        if $z7 == 0 goto label03;

     label02:
        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".margin");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        $r14 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>($r13);

        virtualinvoke $r10.<javax.swing.JMenuItem: void setMargin(java.awt.Insets)>($r14);

     label03:
        $i0 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.textIconGap");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultTextIconGap> = $i0;

        $i1 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.accelEndGap");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultAccelEndGap> = $i1;

        $i2 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: int getInt(java.lang.Object)>("MenuItem.shadowWidth");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultShadowWidth> = $i2;

        $r77 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("MenuItem.selectionBorderColor");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color borderColor> = $r77;

        $r78 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("MenuItem.background");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color backgroundColor> = $r78;

        $r79 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>("MenuItem.shadowColor");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color shadowColor> = $r79;

        $r80 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>()>();

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".border");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.LookAndFeel: void installBorder(javax.swing.JComponent,java.lang.String)>($r80, $r84);

        $r85 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $z8 = virtualinvoke $r85.<javax.swing.JMenuItem: boolean isBorderPainted()>();

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean oldBorderPainted> = $z8;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r88 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".borderPainted");

        $r89 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.String toString()>();

        $r90 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>($r89);

        $r15 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $z9 = $r90 instanceof java.lang.Boolean;

        if $z9 == 0 goto label04;

        $r73 = (java.lang.Boolean) $r90;

        $z10 = virtualinvoke $r73.<java.lang.Boolean: boolean booleanValue()>();

        goto label05;

     label04:
        $z10 = 0;

     label05:
        virtualinvoke $r15.<javax.swing.JMenuItem: void setBorderPainted(boolean)>($z10);

        $r17 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".background");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".foreground");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".font");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <javax.swing.LookAndFeel: void installColorsAndFont(javax.swing.JComponent,java.lang.String,java.lang.String,java.lang.String)>($r17, $r20, $r24, $r28);

        $r29 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionBackground>;

        if $r29 == null goto label06;

        $r72 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionBackground>;

        $z6 = $r72 instanceof javax.swing.plaf.UIResource;

        if $z6 == 0 goto label07;

     label06:
        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".selectionBackground");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        $r34 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>($r33);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionBackground> = $r34;

     label07:
        $r91 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionForeground>;

        if $r91 == null goto label08;

        $r71 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionForeground>;

        $z5 = $r71 instanceof javax.swing.plaf.UIResource;

        if $z5 == 0 goto label09;

     label08:
        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".selectionForeground");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        $r39 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>($r38);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionForeground> = $r39;

     label09:
        $r92 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color disabledForeground>;

        if $r92 == null goto label10;

        $r70 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color disabledForeground>;

        $z4 = $r70 instanceof javax.swing.plaf.UIResource;

        if $z4 == 0 goto label11;

     label10:
        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".disabledForeground");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        $r44 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>($r43);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color disabledForeground> = $r44;

     label11:
        $r93 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorForeground>;

        if $r93 == null goto label12;

        $r69 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorForeground>;

        $z3 = $r69 instanceof javax.swing.plaf.UIResource;

        if $z3 == 0 goto label13;

     label12:
        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".acceleratorForeground");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        $r49 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>($r48);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorForeground> = $r49;

     label13:
        $r94 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorSelectionForeground>;

        if $r94 == null goto label14;

        $r68 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorSelectionForeground>;

        $z2 = $r68 instanceof javax.swing.plaf.UIResource;

        if $z2 == 0 goto label15;

     label14:
        $r50 = new java.lang.StringBuilder;

        specialinvoke $r50.<java.lang.StringBuilder: void <init>()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".acceleratorSelectionForeground");

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>();

        $r54 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Color getColor(java.lang.Object)>($r53);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorSelectionForeground> = $r54;

     label15:
        $r95 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.String getString(java.lang.Object)>("MenuItem.acceleratorDelimiter");

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String acceleratorDelimiter> = $r95;

        $r96 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String acceleratorDelimiter>;

        if $r96 != null goto label16;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String acceleratorDelimiter> = "+";

     label16:
        $r55 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon>;

        if $r55 == null goto label17;

        $r67 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon>;

        $z1 = $r67 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label18;

     label17:
        $r56 = new java.lang.StringBuilder;

        specialinvoke $r56.<java.lang.StringBuilder: void <init>()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".arrowIcon");

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>();

        $r60 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>($r59);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon> = $r60;

     label18:
        $r97 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon>;

        if $r97 == null goto label19;

        $r66 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon>;

        $z0 = $r66 instanceof javax.swing.plaf.UIResource;

        if $z0 == 0 goto label20;

     label19:
        $r61 = new java.lang.StringBuilder;

        specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".checkIcon");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        $r65 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: javax.swing.Icon getIcon(java.lang.Object)>($r64);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon> = $r65;

     label20:
        return;
    }

    protected void installComponents(javax.swing.JMenuItem)
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r2;
        java.lang.String $r1;
        javax.swing.JMenuItem r0;

        r2 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JMenuItem;

        $r1 = virtualinvoke r0.<javax.swing.JMenuItem: java.lang.String getText()>();

        staticinvoke <javax.swing.plaf.basic.BasicHTML: void updateRenderer(javax.swing.JComponent,java.lang.String)>(r0, $r1);

        return;
    }

    protected java.lang.String getPropertyPrefix()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        return "MenuItem";
    }

    protected void installListeners()
    {
        javax.swing.JMenuItem $r1, $r3, $r5, $r7, $r10, $r12, $r14, $r16, $r18;
        javax.swing.event.MouseInputListener $r2, $r15, $r17;
        javax.swing.event.MenuDragMouseListener $r4, $r13;
        java.beans.PropertyChangeListener $r8, $r9;
        javax.swing.event.MenuKeyListener $r6, $r11;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r2 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)>($r1);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener> = $r2;

        if $r2 == null goto label1;

        $r16 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r15 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r16.<javax.swing.JMenuItem: void addMouseListener(java.awt.event.MouseListener)>($r15);

        $r18 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r17 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r18.<javax.swing.JMenuItem: void addMouseMotionListener(java.awt.event.MouseMotionListener)>($r17);

     label1:
        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuDragMouseListener createMenuDragMouseListener(javax.swing.JComponent)>($r3);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuDragMouseListener menuDragMouseListener> = $r4;

        if $r4 == null goto label2;

        $r14 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r13 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuDragMouseListener menuDragMouseListener>;

        virtualinvoke $r14.<javax.swing.JMenuItem: void addMenuDragMouseListener(javax.swing.event.MenuDragMouseListener)>($r13);

     label2:
        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuKeyListener createMenuKeyListener(javax.swing.JComponent)>($r5);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuKeyListener menuKeyListener> = $r6;

        if $r6 == null goto label3;

        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r11 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuKeyListener menuKeyListener>;

        virtualinvoke $r12.<javax.swing.JMenuItem: void addMenuKeyListener(javax.swing.event.MenuKeyListener)>($r11);

     label3:
        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r8 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent)>($r7);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.beans.PropertyChangeListener propertyChangeListener> = $r8;

        if $r8 == null goto label4;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r9 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r10.<javax.swing.JMenuItem: void addPropertyChangeListener(java.beans.PropertyChangeListener)>($r9);

     label4:
        return;
    }

    protected void installKeyboardActions()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        javax.swing.JMenuItem $r2;
        javax.swing.ActionMap $r1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.ActionMap getActionMap()>();

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r2, $r1);

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void updateAcceleratorBinding()>();

        return;
    }

    public void uninstallUI(javax.swing.JComponent)
    {
        javax.swing.JComponent r1, $r9;
        javax.swing.JMenu $r8;
        javax.swing.JMenuItem $r2, $r3, $r4, $r6, $r7;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        java.awt.Container $r5;
        boolean $z0, $z1, $z2;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r2 = (javax.swing.JMenuItem) r1;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem> = $r2;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallDefaults()>();

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallComponents(javax.swing.JMenuItem)>($r3);

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallListeners()>();

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void uninstallKeyboardActions()>();

        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r5 = virtualinvoke $r4.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        if $r5 == null goto label2;

        $z0 = $r5 instanceof javax.swing.JComponent;

        if $z0 == 0 goto label2;

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $z1 = $r6 instanceof javax.swing.JMenu;

        if $z1 == 0 goto label1;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r8 = (javax.swing.JMenu) $r7;

        $z2 = virtualinvoke $r8.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z2 != 0 goto label2;

     label1:
        $r9 = (javax.swing.JComponent) $r5;

        virtualinvoke $r9.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("maxAccWidth", null);

        virtualinvoke $r9.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("maxTextWidth", null);

     label2:
        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem> = null;

        return;
    }

    protected void uninstallDefaults()
    {
        java.awt.Insets $r4;
        javax.swing.Icon $r5, $r6;
        javax.swing.JMenuItem $r1, $r2, $r3, $r7;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: com.jidesoft.plaf.basic.ThemePainter _painter> = null;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        staticinvoke <javax.swing.LookAndFeel: void uninstallBorder(javax.swing.JComponent)>($r1);

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $z0 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean oldBorderPainted>;

        virtualinvoke $r2.<javax.swing.JMenuItem: void setBorderPainted(boolean)>($z0);

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r4 = virtualinvoke $r3.<javax.swing.JMenuItem: java.awt.Insets getMargin()>();

        $z1 = $r4 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label1;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke $r7.<javax.swing.JMenuItem: void setMargin(java.awt.Insets)>(null);

     label1:
        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon>;

        $z2 = $r5 instanceof javax.swing.plaf.UIResource;

        if $z2 == 0 goto label2;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon> = null;

     label2:
        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon>;

        $z3 = $r6 instanceof javax.swing.plaf.UIResource;

        if $z3 == 0 goto label3;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon> = null;

     label3:
        return;
    }

    protected void uninstallComponents(javax.swing.JMenuItem)
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r1;
        javax.swing.JMenuItem r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JMenuItem;

        staticinvoke <javax.swing.plaf.basic.BasicHTML: void updateRenderer(javax.swing.JComponent,java.lang.String)>(r0, "");

        return;
    }

    protected void uninstallListeners()
    {
        javax.swing.event.MouseInputListener $r1, $r11, $r13;
        javax.swing.event.MenuDragMouseListener $r2, $r9;
        java.beans.PropertyChangeListener $r4, $r5;
        javax.swing.JMenuItem $r6, $r8, $r10, $r12, $r14;
        javax.swing.event.MenuKeyListener $r3, $r7;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener>;

        if $r1 == null goto label1;

        $r12 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r11 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r12.<javax.swing.JMenuItem: void removeMouseListener(java.awt.event.MouseListener)>($r11);

        $r14 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r13 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener>;

        virtualinvoke $r14.<javax.swing.JMenuItem: void removeMouseMotionListener(java.awt.event.MouseMotionListener)>($r13);

     label1:
        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuDragMouseListener menuDragMouseListener>;

        if $r2 == null goto label2;

        $r10 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r9 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuDragMouseListener menuDragMouseListener>;

        virtualinvoke $r10.<javax.swing.JMenuItem: void removeMenuDragMouseListener(javax.swing.event.MenuDragMouseListener)>($r9);

     label2:
        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuKeyListener menuKeyListener>;

        if $r3 == null goto label3;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuKeyListener menuKeyListener>;

        virtualinvoke $r8.<javax.swing.JMenuItem: void removeMenuKeyListener(javax.swing.event.MenuKeyListener)>($r7);

     label3:
        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.beans.PropertyChangeListener propertyChangeListener>;

        if $r4 == null goto label4;

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.beans.PropertyChangeListener propertyChangeListener>;

        virtualinvoke $r6.<javax.swing.JMenuItem: void removePropertyChangeListener(java.beans.PropertyChangeListener)>($r5);

     label4:
        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MouseInputListener mouseInputListener> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuDragMouseListener menuDragMouseListener> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.event.MenuKeyListener menuKeyListener> = null;

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.beans.PropertyChangeListener propertyChangeListener> = null;

        return;
    }

    protected void uninstallKeyboardActions()
    {
        javax.swing.JMenuItem $r1, $r3;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        javax.swing.InputMap $r2;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIActionMap(javax.swing.JComponent,javax.swing.ActionMap)>($r1, null);

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap>;

        if $r2 == null goto label1;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r3, 2, null);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap> = null;

     label1:
        return;
    }

    protected javax.swing.event.MouseInputListener createMouseInputListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MouseInputHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MouseInputHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MouseInputHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuItemUI)>(r1);

        return $r0;
    }

    protected javax.swing.event.MenuDragMouseListener createMenuDragMouseListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuDragMouseHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuDragMouseHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuDragMouseHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuItemUI,com.jidesoft.plaf.eclipse.EclipseMenuItemUI$1)>(r1, null);

        return $r0;
    }

    protected javax.swing.event.MenuKeyListener createMenuKeyListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuKeyHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuKeyHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI$MenuKeyHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuItemUI,com.jidesoft.plaf.eclipse.EclipseMenuItemUI$1)>(r1, null);

        return $r0;
    }

    private java.beans.PropertyChangeListener createPropertyChangeListener(javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r1;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI$PropertyChangeHandler $r0;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: javax.swing.JComponent;

        $r0 = new com.jidesoft.plaf.eclipse.EclipseMenuItemUI$PropertyChangeHandler;

        specialinvoke $r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI$PropertyChangeHandler: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuItemUI,com.jidesoft.plaf.eclipse.EclipseMenuItemUI$1)>(r1, null);

        return $r0;
    }

    javax.swing.ActionMap getActionMap()
    {
        javax.swing.UIDefaults $r8;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        java.lang.StringBuilder $r2, $r3, $r4;
        java.lang.Object $r6;
        java.lang.String $r1, $r5;
        javax.swing.ActionMap $r7, r9;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String getPropertyPrefix()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".actionMap");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.lang.Object get(java.lang.Object)>($r5);

        r9 = (javax.swing.ActionMap) $r6;

        if r9 != null goto label1;

        $r7 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.ActionMap createActionMap()>();

        r9 = $r7;

        $r8 = staticinvoke <javax.swing.UIManager: javax.swing.UIDefaults getLookAndFeelDefaults()>();

        virtualinvoke $r8.<javax.swing.UIDefaults: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r7);

     label1:
        return r9;
    }

    javax.swing.ActionMap createActionMap()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI$ClickAction $r1;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r2;
        javax.swing.plaf.ActionMapUIResource $r0;

        r2 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r0 = new javax.swing.plaf.ActionMapUIResource;

        specialinvoke $r0.<javax.swing.plaf.ActionMapUIResource: void <init>()>();

        $r1 = new com.jidesoft.plaf.eclipse.EclipseMenuItemUI$ClickAction;

        specialinvoke $r1.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI$ClickAction: void <init>(com.jidesoft.plaf.eclipse.EclipseMenuItemUI$1)>(null);

        virtualinvoke $r0.<javax.swing.ActionMap: void put(java.lang.Object,javax.swing.Action)>("doClick", $r1);

        return $r0;
    }

    javax.swing.InputMap createInputMap(int)
    {
        javax.swing.JMenuItem $r2;
        javax.swing.plaf.ComponentInputMapUIResource $r0;
        int i0;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r1;

        r1 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        i0 := @parameter0: int;

        if i0 != 2 goto label1;

        $r0 = new javax.swing.plaf.ComponentInputMapUIResource;

        $r2 = r1.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        specialinvoke $r0.<javax.swing.plaf.ComponentInputMapUIResource: void <init>(javax.swing.JComponent)>($r2);

        return $r0;

     label1:
        return null;
    }

    void updateAcceleratorBinding()
    {
        javax.swing.KeyStroke $r2;
        javax.swing.JMenuItem $r1, $r8;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        javax.swing.InputMap $r3, $r4, $r5, $r6, $r7, $r9;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r2 = virtualinvoke $r1.<javax.swing.JMenuItem: javax.swing.KeyStroke getAccelerator()>();

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap>;

        if $r3 == null goto label1;

        $r9 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap>;

        virtualinvoke $r9.<javax.swing.InputMap: void clear()>();

     label1:
        if $r2 == null goto label3;

        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap>;

        if $r4 != null goto label2;

        $r6 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap createInputMap(int)>(2);

        r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap> = $r6;

        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap>;

        staticinvoke <javax.swing.SwingUtilities: void replaceUIInputMap(javax.swing.JComponent,int,javax.swing.InputMap)>($r8, 2, $r7);

     label2:
        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.InputMap windowInputMap>;

        virtualinvoke $r5.<javax.swing.InputMap: void put(javax.swing.KeyStroke,java.lang.Object)>($r2, "doClick");

     label3:
        return;
    }

    public java.awt.Dimension getMinimumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        java.awt.Dimension $r4, r5;
        int $i0, $i1;
        javax.swing.text.View r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r3;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Object $r1;

        r3 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JComponent;

        r5 = null;

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r2 = (javax.swing.text.View) $r1;

        if r2 == null goto label1;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r0);

        r5 = $r4;

        $i0 = $r4.<java.awt.Dimension: int width>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke r2.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $f2 = virtualinvoke r2.<javax.swing.text.View: float getMinimumSpan(int)>(0);

        $f3 = $f1 - $f2;

        $f4 = $f0 - $f3;

        $i1 = (int) $f4;

        $r4.<java.awt.Dimension: int width> = $i1;

     label1:
        return r5;
    }

    public java.awt.Dimension getPreferredSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r1;
        java.awt.Dimension $r4;
        int $i0;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        javax.swing.Icon $r2, $r3;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r1 := @parameter0: javax.swing.JComponent;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon>;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon>;

        $i0 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultTextIconGap>;

        $r4 = virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,int)>(r1, $r3, $r2, $i0);

        return $r4;
    }

    public java.awt.Dimension getMaximumSize(javax.swing.JComponent)
    {
        javax.swing.JComponent r0;
        java.awt.Dimension $r4, r5;
        int $i0, $i1;
        javax.swing.text.View r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r3;
        float $f0, $f1, $f2, $f3, $f4;
        java.lang.Object $r1;

        r3 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JComponent;

        r5 = null;

        $r1 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r2 = (javax.swing.text.View) $r1;

        if r2 == null goto label1;

        $r4 = virtualinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Dimension getPreferredSize(javax.swing.JComponent)>(r0);

        r5 = $r4;

        $i0 = $r4.<java.awt.Dimension: int width>;

        $f0 = (float) $i0;

        $f1 = virtualinvoke r2.<javax.swing.text.View: float getMaximumSpan(int)>(0);

        $f2 = virtualinvoke r2.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $f3 = $f1 - $f2;

        $f4 = $f0 + $f3;

        $i1 = (int) $f4;

        $r4.<java.awt.Dimension: int width> = $i1;

     label1:
        return r5;
    }

    private void resetRects()
    {
        java.awt.Rectangle $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r13;

        r13 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $r0 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect>;

        virtualinvoke $r1.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r0);

        $r3 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect>;

        $r2 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect>;

        virtualinvoke $r3.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r2);

        $r5 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $r4 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect>;

        virtualinvoke $r5.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r4);

        $r7 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $r6 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect>;

        virtualinvoke $r7.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r6);

        $r9 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle arrowIconRect>;

        $r8 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect>;

        virtualinvoke $r9.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r8);

        $r10 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        virtualinvoke $r10.<java.awt.Rectangle: void setBounds(int,int,int,int)>(0, 0, 32767, 32767);

        $r12 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $r11 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect>;

        virtualinvoke $r12.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r11);

        return;
    }

    protected java.awt.Dimension getPreferredMenuItemSize(javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, int)
    {
        java.lang.Integer $r38, $r45, $r50, $r51;
        javax.swing.KeyStroke $r4;
        java.lang.StringBuilder $r59, $r60, $r61, $r62, $r63, $r65, $r67, $r68, $r70;
        java.awt.Container $r18;
        java.awt.Insets r76;
        javax.swing.JMenuItem r1, $r17, $r21, $r33, $r47;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i50, $i51, $i52, i53;
        java.lang.Object $r34, $r35;
        java.lang.String $r3, $r58, $r64, $r66, $r69, r71;
        java.awt.FontMetrics $r73, $r75;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Font $r72, $r74;
        javax.swing.JMenu $r48;
        javax.swing.Icon $r2, r6, r7;
        java.awt.Dimension $r22, $r26;
        java.awt.Rectangle $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r19, $r20, $r23, $r24, $r25, $r27, $r28, $r29, $r30, $r31, $r32, $r36, $r37, $r39, $r40, $r41, $r42, $r43, $r44, $r46, $r52, $r53, $r54, $r55, $r56, $r57;
        javax.swing.JComponent r0, $r49;
        char $c49;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r5;

        r5 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JComponent;

        r6 := @parameter1: javax.swing.Icon;

        r7 := @parameter2: javax.swing.Icon;

        i4 := @parameter3: int;

        r1 = (javax.swing.JMenuItem) r0;

        $r2 = virtualinvoke r1.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

        $r3 = virtualinvoke r1.<javax.swing.JMenuItem: java.lang.String getText()>();

        $r4 = virtualinvoke r1.<javax.swing.JMenuItem: javax.swing.KeyStroke getAccelerator()>();

        r71 = "";

        if $r4 == null goto label03;

        $i47 = virtualinvoke $r4.<javax.swing.KeyStroke: int getModifiers()>();

        if $i47 <= 0 goto label01;

        $r66 = staticinvoke <java.awt.event.KeyEvent: java.lang.String getKeyModifiersText(int)>($i47);

        $r67 = new java.lang.StringBuilder;

        specialinvoke $r67.<java.lang.StringBuilder: void <init>()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r66);

        $r69 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String acceleratorDelimiter>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $i48 = virtualinvoke $r4.<javax.swing.KeyStroke: int getKeyCode()>();

        if $i48 == 0 goto label02;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        $r64 = staticinvoke <java.awt.event.KeyEvent: java.lang.String getKeyText(int)>($i48);

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        r71 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label03;

     label02:
        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>()>();

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71);

        $c49 = virtualinvoke $r4.<javax.swing.KeyStroke: char getKeyChar()>();

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c49);

        r71 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r72 = virtualinvoke r1.<javax.swing.JMenuItem: java.awt.Font getFont()>();

        $r73 = virtualinvoke r1.<javax.swing.JMenuItem: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r72);

        $r74 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Font acceleratorFont>;

        $r75 = virtualinvoke r1.<javax.swing.JMenuItem: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r74);

        specialinvoke r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void resetRects()>();

        $r58 = r71;

        $i0 = virtualinvoke r1.<javax.swing.JMenuItem: int getVerticalAlignment()>();

        $i1 = virtualinvoke r1.<javax.swing.JMenuItem: int getHorizontalAlignment()>();

        $i2 = virtualinvoke r1.<javax.swing.JMenuItem: int getVerticalTextPosition()>();

        $i3 = virtualinvoke r1.<javax.swing.JMenuItem: int getHorizontalTextPosition()>();

        $r13 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $r12 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $r11 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect>;

        $r10 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $r9 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $r8 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle arrowIconRect>;

        if $r3 != null goto label04;

        $i50 = 0;

        goto label05;

     label04:
        $i50 = i4;

     label05:
        $i5 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultAccelEndGap>;

        specialinvoke r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String layoutMenuItem(java.awt.FontMetrics,java.lang.String,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int,int)>($r73, $r3, $r75, $r58, $r2, r6, r7, $i0, $i1, $i2, $i3, $r13, $r12, $r11, $r10, $r9, $r8, $i50, $i5);

        $r15 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $r14 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect>;

        virtualinvoke $r15.<java.awt.Rectangle: void setBounds(java.awt.Rectangle)>($r14);

        $r16 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $z0 = virtualinvoke $r16.<java.awt.Rectangle: boolean isEmpty()>();

        if $z0 != 0 goto label06;

        $r52 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $i46 = $r52.<java.awt.Rectangle: int x>;

        $r53 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $i45 = $r53.<java.awt.Rectangle: int y>;

        $r54 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $i44 = $r54.<java.awt.Rectangle: int width>;

        $r55 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $i43 = $r55.<java.awt.Rectangle: int height>;

        $r56 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $r57 = staticinvoke <javax.swing.SwingUtilities: java.awt.Rectangle computeUnion(int,int,int,int,java.awt.Rectangle)>($i46, $i45, $i44, $i43, $r56);

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r> = $r57;

     label06:
        $r17 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r18 = virtualinvoke $r17.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        if $r18 == null goto label15;

        $z2 = $r18 instanceof javax.swing.JComponent;

        if $z2 == 0 goto label15;

        $r33 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $z3 = $r33 instanceof javax.swing.JMenu;

        if $z3 == 0 goto label07;

        $r47 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r48 = (javax.swing.JMenu) $r47;

        $z4 = virtualinvoke $r48.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z4 != 0 goto label15;

     label07:
        $r49 = (javax.swing.JComponent) $r18;

        $r34 = virtualinvoke $r49.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("maxTextWidth");

        $r50 = (java.lang.Integer) $r34;

        $r35 = virtualinvoke $r49.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("maxAccWidth");

        $r51 = (java.lang.Integer) $r35;

        if $r50 == null goto label08;

        $i51 = virtualinvoke $r50.<java.lang.Integer: int intValue()>();

        goto label09;

     label08:
        $i51 = 0;

     label09:
        i31 = $i51;

        if $r51 == null goto label10;

        $i52 = virtualinvoke $r51.<java.lang.Integer: int intValue()>();

        goto label11;

     label10:
        $i52 = 0;

     label11:
        i53 = $i52;

        $r36 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i32 = $r36.<java.awt.Rectangle: int width>;

        if $i32 >= i31 goto label12;

        $r46 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $r46.<java.awt.Rectangle: int width> = i31;

        goto label13;

     label12:
        $r37 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i33 = $r37.<java.awt.Rectangle: int width>;

        $r38 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i33);

        virtualinvoke $r49.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("maxTextWidth", $r38);

     label13:
        $r39 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i34 = $r39.<java.awt.Rectangle: int width>;

        if $i34 <= i53 goto label14;

        $r43 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        i53 = $r43.<java.awt.Rectangle: int width>;

        $r44 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i42 = $r44.<java.awt.Rectangle: int width>;

        $r45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i42);

        virtualinvoke $r49.<javax.swing.JComponent: void putClientProperty(java.lang.Object,java.lang.Object)>("maxAccWidth", $r45);

     label14:
        $r40 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i35 = $r40.<java.awt.Rectangle: int width>;

        $i36 = $i35 + i53;

        $r40.<java.awt.Rectangle: int width> = $i36;

        $r41 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i37 = $r41.<java.awt.Rectangle: int width>;

        $i38 = $i37 + i4;

        $r41.<java.awt.Rectangle: int width> = $i38;

        $r42 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i40 = $r42.<java.awt.Rectangle: int width>;

        $i39 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultAccelEndGap>;

        $i41 = $i40 + $i39;

        $r42.<java.awt.Rectangle: int width> = $i41;

     label15:
        if $r2 == null goto label16;

        $r32 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i29 = $r32.<java.awt.Rectangle: int width>;

        $i30 = $i29 + i4;

        $r32.<java.awt.Rectangle: int width> = $i30;

     label16:
        r76 = virtualinvoke r1.<javax.swing.JMenuItem: java.awt.Insets getInsets()>();

        $z1 = specialinvoke r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean useCheckAndArrow()>();

        if $z1 == 0 goto label17;

        r76 = staticinvoke <com.jidesoft.plaf.UIDefaultsLookup: java.awt.Insets getInsets(java.lang.Object)>("MenuItem.margin");

        $r31 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i27 = $r31.<java.awt.Rectangle: int width>;

        $i28 = $i27 + 5;

        $r31.<java.awt.Rectangle: int width> = $i28;

     label17:
        if r76 == null goto label18;

        $r29 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i20 = $r29.<java.awt.Rectangle: int width>;

        $i18 = r76.<java.awt.Insets: int left>;

        $i17 = r76.<java.awt.Insets: int right>;

        $i19 = $i18 + $i17;

        $i21 = $i20 + $i19;

        $r29.<java.awt.Rectangle: int width> = $i21;

        $r30 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i25 = $r30.<java.awt.Rectangle: int height>;

        $i23 = r76.<java.awt.Insets: int top>;

        $i22 = r76.<java.awt.Insets: int bottom>;

        $i24 = $i23 + $i22;

        $i26 = $i25 + $i24;

        $r30.<java.awt.Rectangle: int height> = $i26;

     label18:
        $r19 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i6 = $r19.<java.awt.Rectangle: int width>;

        $i7 = $i6 % 2;

        if $i7 != 0 goto label19;

        $r28 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i15 = $r28.<java.awt.Rectangle: int width>;

        $i16 = $i15 + 1;

        $r28.<java.awt.Rectangle: int width> = $i16;

     label19:
        $r20 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i8 = $r20.<java.awt.Rectangle: int height>;

        $i9 = $i8 % 2;

        if $i9 != 0 goto label20;

        $r27 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i13 = $r27.<java.awt.Rectangle: int height>;

        $i14 = $i13 + 1;

        $r27.<java.awt.Rectangle: int height> = $i14;

     label20:
        $r21 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i10 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>($r21);

        if $i10 != 0 goto label21;

        $r25 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $r26 = virtualinvoke $r25.<java.awt.Rectangle: java.awt.Dimension getSize()>();

        return $r26;

     label21:
        $r22 = new java.awt.Dimension;

        $r23 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i12 = $r23.<java.awt.Rectangle: int height>;

        $r24 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r>;

        $i11 = $r24.<java.awt.Rectangle: int width>;

        specialinvoke $r22.<java.awt.Dimension: void <init>(int,int)>($i12, $i11);

        return $r22;
    }

    public void update(java.awt.Graphics, javax.swing.JComponent)
    {
        java.awt.Graphics r1;
        javax.swing.JComponent r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paint(java.awt.Graphics,javax.swing.JComponent)>(r1, r2);

        return;
    }

    public void paint(java.awt.Graphics, javax.swing.JComponent)
    {
        javax.swing.JComponent r2;
        java.awt.Color $r3, $r4;
        javax.swing.Icon $r5, $r6;
        java.awt.Graphics r1;
        int $i0;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r1 := @parameter0: java.awt.Graphics;

        r2 := @parameter1: javax.swing.JComponent;

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon checkIcon>;

        $r5 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.Icon arrowIcon>;

        $r4 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionBackground>;

        $r3 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionForeground>;

        $i0 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultTextIconGap>;

        virtualinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paintMenuItem(java.awt.Graphics,javax.swing.JComponent,javax.swing.Icon,javax.swing.Icon,java.awt.Color,java.awt.Color,int)>(r1, r2, $r6, $r5, $r4, $r3, $i0);

        return;
    }

    protected void paintMenuItem(java.awt.Graphics, javax.swing.JComponent, javax.swing.Icon, javax.swing.Icon, java.awt.Color, java.awt.Color, int)
    {
        java.awt.Color r31, $r32, r34, $r39, $r40, $r41, $r42, $r43, $r47, $r48, $r52;
        java.lang.Integer r58;
        javax.swing.KeyStroke $r19;
        java.lang.StringBuilder $r66, $r67, $r68, $r69, $r70, $r72, $r74, $r75, $r77;
        java.awt.Container $r38;
        java.awt.Insets $r6;
        javax.swing.JMenuItem r1, $r4, $r37, $r46, $r51, $r55, $r83;
        java.awt.Graphics2D r78;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, i50, i51, $i52, i53, $i54, $i55, $i56, $i57, $i58, $i59;
        java.lang.Object $r57, $r61;
        javax.swing.ButtonModel $r2;
        javax.swing.text.View r81;
        java.lang.String $r20, $r30, $r33, $r64, $r65, $r71, $r73, $r76, r79, $r80;
        java.awt.FontMetrics $r16, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.awt.Font $r14, $r15, $r17, $r82;
        javax.swing.Icon $r21, r22, r23;
        java.awt.Graphics r5;
        java.awt.Rectangle $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r24, $r25, $r26, $r27, $r28, $r29, $r35, $r36, $r44, $r45, $r49, $r50, $r53, $r54, $r59, $r60, $r62, $r63, $r84, $r85;
        javax.swing.JComponent r0, r56;
        char $c49;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r3;

        r3 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r5 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JComponent;

        r22 := @parameter2: javax.swing.Icon;

        r23 := @parameter3: javax.swing.Icon;

        r31 := @parameter4: java.awt.Color;

        r34 := @parameter5: java.awt.Color;

        i24 := @parameter6: int;

        r1 = (javax.swing.JMenuItem) r0;

        $r2 = virtualinvoke r1.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $r4 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>($r4);

        if $i0 != 0 goto label01;

        i50 = virtualinvoke r1.<javax.swing.JMenuItem: int getWidth()>();

        i51 = virtualinvoke r1.<javax.swing.JMenuItem: int getHeight()>();

        goto label02;

     label01:
        i50 = virtualinvoke r1.<javax.swing.JMenuItem: int getHeight()>();

        $i1 = virtualinvoke r1.<javax.swing.JMenuItem: int getWidth()>();

        i51 = $i1;

        r78 = (java.awt.Graphics2D) r5;

        virtualinvoke r78.<java.awt.Graphics2D: java.awt.geom.AffineTransform getTransform()>();

        virtualinvoke r78.<java.awt.Graphics2D: void rotate(double)>(1.5707963267948966);

        $i2 = neg $i1;

        $i3 = $i2 + 1;

        virtualinvoke r78.<java.awt.Graphics2D: void translate(int,int)>(0, $i3);

     label02:
        $r6 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Insets getInsets()>();

        specialinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void resetRects()>();

        $r7 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        virtualinvoke $r7.<java.awt.Rectangle: void setBounds(int,int,int,int)>(0, 0, i50, i51);

        $r8 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $i5 = $r8.<java.awt.Rectangle: int x>;

        $i4 = $r6.<java.awt.Insets: int left>;

        $i6 = $i5 + $i4;

        $r8.<java.awt.Rectangle: int x> = $i6;

        $r9 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $i8 = $r9.<java.awt.Rectangle: int y>;

        $i7 = $r6.<java.awt.Insets: int top>;

        $i9 = $i8 + $i7;

        $r9.<java.awt.Rectangle: int y> = $i9;

        $r10 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $i13 = $r10.<java.awt.Rectangle: int width>;

        $i11 = $r6.<java.awt.Insets: int right>;

        $r11 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $i10 = $r11.<java.awt.Rectangle: int x>;

        $i12 = $i11 + $i10;

        $i14 = $i13 - $i12;

        $r10.<java.awt.Rectangle: int width> = $i14;

        $r12 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $i18 = $r12.<java.awt.Rectangle: int height>;

        $i16 = $r6.<java.awt.Insets: int bottom>;

        $r13 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $i15 = $r13.<java.awt.Rectangle: int y>;

        $i17 = $i16 + $i15;

        $i19 = $i18 - $i17;

        $r12.<java.awt.Rectangle: int height> = $i19;

        $r14 = virtualinvoke r5.<java.awt.Graphics: java.awt.Font getFont()>();

        $r15 = virtualinvoke r0.<javax.swing.JComponent: java.awt.Font getFont()>();

        virtualinvoke r5.<java.awt.Graphics: void setFont(java.awt.Font)>($r15);

        $r16 = virtualinvoke r5.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r15);

        $r17 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Font acceleratorFont>;

        $r18 = virtualinvoke r5.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics(java.awt.Font)>($r17);

        $r19 = virtualinvoke r1.<javax.swing.JMenuItem: javax.swing.KeyStroke getAccelerator()>();

        r79 = "";

        if $r19 == null goto label05;

        $i47 = virtualinvoke $r19.<javax.swing.KeyStroke: int getModifiers()>();

        if $i47 <= 0 goto label03;

        $r73 = staticinvoke <java.awt.event.KeyEvent: java.lang.String getKeyModifiersText(int)>($i47);

        $r74 = new java.lang.StringBuilder;

        specialinvoke $r74.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r73);

        $r76 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String acceleratorDelimiter>;

        $r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76);

        r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $i48 = virtualinvoke $r19.<javax.swing.KeyStroke: int getKeyCode()>();

        if $i48 == 0 goto label04;

        $r69 = new java.lang.StringBuilder;

        specialinvoke $r69.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r79);

        $r71 = staticinvoke <java.awt.event.KeyEvent: java.lang.String getKeyText(int)>($i48);

        $r72 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r71);

        r79 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label05;

     label04:
        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r79);

        $c49 = virtualinvoke $r19.<javax.swing.KeyStroke: char getKeyChar()>();

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c49);

        r79 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

     label05:
        $r20 = virtualinvoke r1.<javax.swing.JMenuItem: java.lang.String getText()>();

        $r65 = r79;

        $r21 = virtualinvoke r1.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

        $i20 = virtualinvoke r1.<javax.swing.JMenuItem: int getVerticalAlignment()>();

        $i21 = virtualinvoke r1.<javax.swing.JMenuItem: int getHorizontalAlignment()>();

        $i22 = virtualinvoke r1.<javax.swing.JMenuItem: int getVerticalTextPosition()>();

        $i23 = virtualinvoke r1.<javax.swing.JMenuItem: int getHorizontalTextPosition()>();

        $r24 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect>;

        $r25 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $r26 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect>;

        $r27 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $r28 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $r29 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle arrowIconRect>;

        $r80 = virtualinvoke r1.<javax.swing.JMenuItem: java.lang.String getText()>();

        if $r80 != null goto label06;

        $i52 = 0;

        goto label07;

     label06:
        $i52 = i24;

     label07:
        $r30 = specialinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String layoutMenuItem(java.awt.FontMetrics,java.lang.String,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,javax.swing.Icon,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int,int)>($r16, $r20, $r18, $r65, $r21, r22, r23, $i20, $i21, $i22, $i23, $r24, $r25, $r26, $r27, $r28, $r29, $i52, i24);

        virtualinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paintBackground(java.awt.Graphics,javax.swing.JMenuItem,java.awt.Color)>(r5, r1, r31);

        $r32 = virtualinvoke r5.<java.awt.Graphics: java.awt.Color getColor()>();

        $r33 = virtualinvoke r0.<javax.swing.JComponent: java.lang.String getUIClassID()>();

        $i25 = virtualinvoke $r33.<java.lang.String: int indexOf(java.lang.String)>("CheckBoxMenu");

        if $i25 >= 0 goto label08;

        $r64 = virtualinvoke r0.<javax.swing.JComponent: java.lang.String getUIClassID()>();

        $i46 = virtualinvoke $r64.<java.lang.String: int indexOf(java.lang.String)>("RadioButtonMenu");

        if $i46 < 0 goto label09;

     label08:
        if r22 == null goto label09;

        specialinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paintCheckBox(javax.swing.JMenuItem,java.awt.Graphics,javax.swing.Icon)>(r1, r5, r22);

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r32);

     label09:
        specialinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paintIcon(javax.swing.JMenuItem,java.awt.Graphics)>(r1, r5);

        if $r30 == null goto label11;

        $r61 = virtualinvoke r0.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("html");

        r81 = (javax.swing.text.View) $r61;

        if r81 == null goto label10;

        $r63 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect>;

        virtualinvoke r81.<javax.swing.text.View: void paint(java.awt.Graphics,java.awt.Shape)>(r5, $r63);

        goto label11;

     label10:
        $r62 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect>;

        virtualinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: void paintText(java.awt.Graphics,javax.swing.JMenuItem,java.awt.Rectangle,java.lang.String)>(r5, r1, $r62, $r30);

     label11:
        if r79 == null goto label20;

        $z3 = virtualinvoke r79.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 != 0 goto label20;

        i53 = 0;

        $r37 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r38 = virtualinvoke $r37.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        if $r38 == null goto label14;

        $z7 = $r38 instanceof javax.swing.JComponent;

        if $z7 == 0 goto label14;

        r56 = (javax.swing.JComponent) $r38;

        $r57 = virtualinvoke r56.<javax.swing.JComponent: java.lang.Object getClientProperty(java.lang.Object)>("maxAccWidth");

        r58 = (java.lang.Integer) $r57;

        if r58 == null goto label12;

        $i54 = virtualinvoke r58.<java.lang.Integer: int intValue()>();

        goto label13;

     label12:
        $r59 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i54 = $r59.<java.awt.Rectangle: int width>;

     label13:
        $r60 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i45 = $r60.<java.awt.Rectangle: int width>;

        i53 = $i54 - $i45;

     label14:
        $r82 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Font acceleratorFont>;

        virtualinvoke r5.<java.awt.Graphics: void setFont(java.awt.Font)>($r82);

        $z8 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z8 != 0 goto label16;

        $r41 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color disabledForeground>;

        if $r41 == null goto label15;

        $r52 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color disabledForeground>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r52);

        $r55 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r53 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i40 = $r53.<java.awt.Rectangle: int x>;

        $i41 = $i40 - i53;

        $r54 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i42 = $r54.<java.awt.Rectangle: int y>;

        $i43 = virtualinvoke $r18.<java.awt.FontMetrics: int getAscent()>();

        $i44 = $i42 + $i43;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>($r55, r5, r79, $i41, $i44);

        goto label20;

     label15:
        $r42 = virtualinvoke r1.<javax.swing.JMenuItem: java.awt.Color getBackground()>();

        $r43 = virtualinvoke $r42.<java.awt.Color: java.awt.Color brighter()>();

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r43);

        $r46 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r44 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i28 = $r44.<java.awt.Rectangle: int x>;

        $i29 = $i28 - i53;

        $r45 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i30 = $r45.<java.awt.Rectangle: int y>;

        $i31 = virtualinvoke $r18.<java.awt.FontMetrics: int getAscent()>();

        $i32 = $i30 + $i31;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>($r46, r5, r79, $i29, $i32);

        $r47 = virtualinvoke r1.<javax.swing.JMenuItem: java.awt.Color getBackground()>();

        $r48 = virtualinvoke $r47.<java.awt.Color: java.awt.Color darker()>();

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r48);

        $r51 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r49 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i33 = $r49.<java.awt.Rectangle: int x>;

        $i34 = $i33 - i53;

        $i35 = $i34 - 1;

        $r50 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i36 = $r50.<java.awt.Rectangle: int y>;

        $i37 = virtualinvoke $r18.<java.awt.FontMetrics: int getAscent()>();

        $i38 = $i36 + $i37;

        $i39 = $i38 - 1;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>($r51, r5, r79, $i35, $i39);

        goto label20;

     label16:
        $z4 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z4 != 0 goto label17;

        $z5 = r0 instanceof javax.swing.JMenu;

        if $z5 == 0 goto label18;

        $z6 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z6 == 0 goto label18;

     label17:
        $r39 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorSelectionForeground>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r39);

        goto label19;

     label18:
        $r40 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color acceleratorForeground>;

        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r40);

     label19:
        $r83 = r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r84 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i55 = $r84.<java.awt.Rectangle: int x>;

        $i56 = $i55 - i53;

        $r85 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect>;

        $i57 = $r85.<java.awt.Rectangle: int y>;

        $i58 = virtualinvoke $r18.<java.awt.FontMetrics: int getAscent()>();

        $i59 = $i57 + $i58;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawString(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int)>($r83, r5, r79, $i56, $i59);

     label20:
        if r23 == null goto label23;

        $z0 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z0 != 0 goto label21;

        $z1 = r0 instanceof javax.swing.JMenu;

        if $z1 == 0 goto label22;

        $z2 = interfaceinvoke $r2.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z2 == 0 goto label22;

     label21:
        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>(r34);

     label22:
        $z9 = specialinvoke r3.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean useCheckAndArrow()>();

        if $z9 == 0 goto label23;

        $r35 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle arrowIconRect>;

        $i27 = $r35.<java.awt.Rectangle: int x>;

        $r36 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle arrowIconRect>;

        $i26 = $r36.<java.awt.Rectangle: int y>;

        interfaceinvoke r23.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r5, $i27, $i26);

     label23:
        virtualinvoke r5.<java.awt.Graphics: void setColor(java.awt.Color)>($r32);

        virtualinvoke r5.<java.awt.Graphics: void setFont(java.awt.Font)>($r14);

        return;
    }

    private void paintCheckBox(javax.swing.JMenuItem, java.awt.Graphics, javax.swing.Icon)
    {
        java.awt.Color $r7, $r8, $r16, $r17;
        javax.swing.ButtonModel $r1;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        javax.swing.Icon $r2, r3;
        java.awt.Graphics r4;
        java.awt.Rectangle $r5, $r6, $r10, $r11, $r13, $r14, $r19, $r20;
        javax.swing.JMenuItem r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        javax.swing.ImageIcon $r9, $r12, $r18;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r15;

        r15 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JMenuItem;

        r4 := @parameter1: java.awt.Graphics;

        r3 := @parameter2: javax.swing.Icon;

        z5 = 0;

        $r1 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $z0 = r0 instanceof javax.swing.JCheckBoxMenuItem;

        if $z0 == 0 goto label1;

        z5 = virtualinvoke r0.<javax.swing.JMenuItem: boolean isSelected()>();

        goto label2;

     label1:
        $z1 = r0 instanceof javax.swing.JRadioButtonMenuItem;

        if $z1 == 0 goto label2;

        z5 = virtualinvoke r0.<javax.swing.JMenuItem: boolean isSelected()>();

     label2:
        if z5 == 0 goto label6;

        $r2 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

        if $r2 != null goto label6;

        $z2 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z2 == 0 goto label4;

        $z4 = r3 instanceof javax.swing.ImageIcon;

        if $z4 == 0 goto label3;

        $r17 = <java.awt.Color: java.awt.Color BLACK>;

        $r16 = r15.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionForeground>;

        $r18 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createMaskImage(java.awt.Component,javax.swing.Icon,java.awt.Color,java.awt.Color)>(r0, r3, $r17, $r16);

        $r19 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i7 = $r19.<java.awt.Rectangle: int x>;

        $r20 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i6 = $r20.<java.awt.Rectangle: int y>;

        virtualinvoke $r18.<javax.swing.ImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r4, $i7, $i6);

        goto label6;

     label3:
        $r12 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createNegativeImage(java.awt.Component,javax.swing.Icon)>(r0, r3);

        $r13 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i5 = $r13.<java.awt.Rectangle: int x>;

        $r14 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i4 = $r14.<java.awt.Rectangle: int y>;

        virtualinvoke $r12.<javax.swing.ImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r4, $i5, $i4);

        goto label6;

     label4:
        $z3 = r3 instanceof javax.swing.ImageIcon;

        if $z3 == 0 goto label5;

        $r7 = <java.awt.Color: java.awt.Color BLACK>;

        $r8 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Color getForeground()>();

        $r9 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createMaskImage(java.awt.Component,javax.swing.Icon,java.awt.Color,java.awt.Color)>(r0, r3, $r7, $r8);

        $r10 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i3 = $r10.<java.awt.Rectangle: int x>;

        $r11 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i2 = $r11.<java.awt.Rectangle: int y>;

        virtualinvoke $r9.<javax.swing.ImageIcon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r4, $i3, $i2);

        goto label6;

     label5:
        $r5 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i1 = $r5.<java.awt.Rectangle: int x>;

        $r6 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect>;

        $i0 = $r6.<java.awt.Rectangle: int y>;

        interfaceinvoke r3.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r4, $i1, $i0);

     label6:
        return;
    }

    private void paintIcon(javax.swing.JMenuItem, java.awt.Graphics)
    {
        java.awt.Rectangle $r4, $r5;
        javax.swing.JMenuItem r0;
        int $i0, $i1;
        javax.swing.ImageIcon $r9;
        javax.swing.ButtonModel $r1;
        boolean $z0, $z1, $z2, $z3;
        java.awt.Image $r10;
        javax.swing.Icon $r2, $r6, $r7, $r8, r12;
        java.awt.Graphics r3;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r11;

        r11 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: javax.swing.JMenuItem;

        r3 := @parameter1: java.awt.Graphics;

        $r1 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $r2 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

        if $r2 == null goto label5;

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z0 != 0 goto label2;

        $r7 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getDisabledIcon()>();

        r12 = $r7;

        if $r7 != null goto label4;

        $r8 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

        $z3 = $r8 instanceof javax.swing.ImageIcon;

        if $z3 == 0 goto label1;

        $r9 = (javax.swing.ImageIcon) $r8;

        $r10 = virtualinvoke $r9.<javax.swing.ImageIcon: java.awt.Image getImage()>();

        r12 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createGrayImage(java.awt.Image)>($r10);

        goto label4;

     label1:
        r12 = staticinvoke <com.jidesoft.icons.IconsFactory: javax.swing.ImageIcon createGrayImage(java.awt.Component,javax.swing.Icon)>(r0, $r8);

        goto label4;

     label2:
        $z1 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isPressed()>();

        if $z1 == 0 goto label3;

        $z2 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z2 == 0 goto label3;

        $r6 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getPressedIcon()>();

        r12 = $r6;

        if $r6 != null goto label4;

        r12 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

        goto label4;

     label3:
        r12 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.Icon getIcon()>();

     label4:
        if r12 == null goto label5;

        $r4 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $i1 = $r4.<java.awt.Rectangle: int x>;

        $r5 = <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect>;

        $i0 = $r5.<java.awt.Rectangle: int y>;

        interfaceinvoke r12.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r0, r3, $i1, $i0);

     label5:
        return;
    }

    protected void paintBackground(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Color)
    {
        java.awt.Color $r3, $r4, $r5, r6, $r8;
        javax.swing.JMenuItem r0;
        int $i0, $i1, $i2, i3, i4;
        javax.swing.ButtonModel $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.Graphics r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r7;

        r7 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JMenuItem;

        r6 := @parameter2: java.awt.Color;

        $r1 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.Color getColor()>();

        $i0 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>(r0);

        if $i0 != 0 goto label1;

        i3 = virtualinvoke r0.<javax.swing.JMenuItem: int getWidth()>();

        i4 = virtualinvoke r0.<javax.swing.JMenuItem: int getHeight()>();

        goto label2;

     label1:
        i3 = virtualinvoke r0.<javax.swing.JMenuItem: int getHeight()>();

        i4 = virtualinvoke r0.<javax.swing.JMenuItem: int getWidth()>();

     label2:
        $z0 = virtualinvoke r0.<javax.swing.JMenuItem: boolean isOpaque()>();

        if $z0 == 0 goto label7;

        $r4 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Color getBackground()>();

        $z1 = $r4 instanceof javax.swing.plaf.UIResource;

        if $z1 == 0 goto label3;

        $r8 = r7.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color backgroundColor>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r8);

        goto label4;

     label3:
        $r5 = virtualinvoke r0.<javax.swing.JMenuItem: java.awt.Color getBackground()>();

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r5);

     label4:
        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, i3, i4);

        $z2 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z2 != 0 goto label5;

        $z3 = r0 instanceof javax.swing.JMenu;

        if $z3 == 0 goto label6;

        $z4 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z4 == 0 goto label6;

     label5:
        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>(r6);

        $i2 = i3 - 2;

        $i1 = i4 - 2;

        virtualinvoke r2.<java.awt.Graphics: void fillRect(int,int,int,int)>(1, 1, $i2, $i1);

     label6:
        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

     label7:
        return;
    }

    protected void paintText(java.awt.Graphics, javax.swing.JMenuItem, java.awt.Rectangle, java.lang.String)
    {
        java.awt.Color $r4, $r6;
        java.awt.Rectangle r8;
        javax.swing.JMenuItem r0;
        int i0, $i1, $i2, $i3, $i4, $i6;
        java.lang.String r7;
        javax.swing.ButtonModel $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.awt.FontMetrics $r3;
        java.awt.Graphics r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r5;

        r5 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: java.awt.Graphics;

        r0 := @parameter1: javax.swing.JMenuItem;

        r8 := @parameter2: java.awt.Rectangle;

        r7 := @parameter3: java.lang.String;

        $r1 = virtualinvoke r0.<javax.swing.JMenuItem: javax.swing.ButtonModel getModel()>();

        $z0 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isEnabled()>();

        if $z0 != 0 goto label1;

        staticinvoke <com.sun.java.swing.plaf.windows.WindowsGraphicsUtils: void paintText(java.awt.Graphics,javax.swing.AbstractButton,java.awt.Rectangle,java.lang.String,int)>(r2, r0, r8, r7, 0);

        goto label5;

     label1:
        $r3 = virtualinvoke r2.<java.awt.Graphics: java.awt.FontMetrics getFontMetrics()>();

        i0 = virtualinvoke r0.<javax.swing.JMenuItem: int getDisplayedMnemonicIndex()>();

        $z1 = staticinvoke <com.sun.java.swing.plaf.windows.WindowsLookAndFeel: boolean isMnemonicHidden()>();

        if $z1 == 0 goto label2;

        $i6 = (int) -1;

        i0 = $i6;

     label2:
        $r4 = virtualinvoke r2.<java.awt.Graphics: java.awt.Color getColor()>();

        $z2 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isArmed()>();

        if $z2 != 0 goto label3;

        $z3 = r0 instanceof javax.swing.JMenu;

        if $z3 == 0 goto label4;

        $z4 = interfaceinvoke $r1.<javax.swing.ButtonModel: boolean isSelected()>();

        if $z4 == 0 goto label4;

     label3:
        $r6 = r5.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Color selectionForeground>;

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r6);

     label4:
        $i1 = r8.<java.awt.Rectangle: int x>;

        $i2 = r8.<java.awt.Rectangle: int y>;

        $i3 = virtualinvoke $r3.<java.awt.FontMetrics: int getAscent()>();

        $i4 = $i2 + $i3;

        staticinvoke <com.jidesoft.swing.JideSwingUtilities: void drawStringUnderlineCharAt(javax.swing.JComponent,java.awt.Graphics,java.lang.String,int,int,int)>(r0, r2, r7, i0, $i1, $i4);

        virtualinvoke r2.<java.awt.Graphics: void setColor(java.awt.Color)>($r4);

     label5:
        return;
    }

    private java.lang.String layoutMenuItem(java.awt.FontMetrics, java.lang.String, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, javax.swing.Icon, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int, int)
    {
        javax.swing.text.View $r29;
        java.lang.String r27, r28;
        java.awt.ComponentOrientation $r16;
        java.awt.FontMetrics r1, r24;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        javax.swing.Icon r2, r11, r13;
        float $f0, $f1;
        java.awt.Rectangle r3, r4, r5, r10, r12, r14, $r30;
        java.awt.Insets $r18, $r20;
        javax.swing.JMenuItem $r6, $r7, $r8, $r9, $r15, $r17, $r19, $r21, $r22, $r25, $r26;
        int i0, i1, i2, i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i58, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i66, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        java.lang.Object $r23;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r1 := @parameter0: java.awt.FontMetrics;

        r27 := @parameter1: java.lang.String;

        r24 := @parameter2: java.awt.FontMetrics;

        r28 := @parameter3: java.lang.String;

        r2 := @parameter4: javax.swing.Icon;

        r13 := @parameter5: javax.swing.Icon;

        r11 := @parameter6: javax.swing.Icon;

        i0 := @parameter7: int;

        i1 := @parameter8: int;

        i2 := @parameter9: int;

        i3 := @parameter10: int;

        r3 := @parameter11: java.awt.Rectangle;

        r4 := @parameter12: java.awt.Rectangle;

        r5 := @parameter13: java.awt.Rectangle;

        r10 := @parameter14: java.awt.Rectangle;

        r14 := @parameter15: java.awt.Rectangle;

        r12 := @parameter16: java.awt.Rectangle;

        i4 := @parameter17: int;

        i41 := @parameter18: int;

        $r6 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        staticinvoke <javax.swing.SwingUtilities: java.lang.String layoutCompoundLabel(javax.swing.JComponent,java.awt.FontMetrics,java.lang.String,javax.swing.Icon,int,int,int,int,java.awt.Rectangle,java.awt.Rectangle,java.awt.Rectangle,int)>($r6, r1, r27, r2, i0, i1, i2, i3, r3, r4, r5, i4);

        r3.<java.awt.Rectangle: int y> = 0;

        r3.<java.awt.Rectangle: int x> = 0;

        $r7 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i5 = staticinvoke <com.jidesoft.swing.JideSwingUtilities: int getOrientationOf(java.awt.Component)>($r7);

        if $i5 != 0 goto label01;

        $r25 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i63 = virtualinvoke $r25.<javax.swing.JMenuItem: int getHeight()>();

        r3.<java.awt.Rectangle: int height> = $i63;

        $r26 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i64 = virtualinvoke $r26.<javax.swing.JMenuItem: int getWidth()>();

        r3.<java.awt.Rectangle: int width> = $i64;

        goto label02;

     label01:
        $r8 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i6 = virtualinvoke $r8.<javax.swing.JMenuItem: int getWidth()>();

        r3.<java.awt.Rectangle: int height> = $i6;

        $r9 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $i7 = virtualinvoke $r9.<javax.swing.JMenuItem: int getHeight()>();

        r3.<java.awt.Rectangle: int width> = $i7;

     label02:
        if r28 == null goto label03;

        $z5 = virtualinvoke r28.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z5 == 0 goto label04;

     label03:
        r10.<java.awt.Rectangle: int height> = 0;

        r10.<java.awt.Rectangle: int width> = 0;

        goto label05;

     label04:
        $i61 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>(r24, r28);

        r10.<java.awt.Rectangle: int width> = $i61;

        $i62 = virtualinvoke r24.<java.awt.FontMetrics: int getHeight()>();

        r10.<java.awt.Rectangle: int height> = $i62;

     label05:
        if r27 == null goto label06;

        $z3 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z3 == 0 goto label07;

     label06:
        r5.<java.awt.Rectangle: int height> = 0;

        r5.<java.awt.Rectangle: int width> = 0;

        r27 = "";

        goto label13;

     label07:
        if r27 == null goto label08;

        $z4 = virtualinvoke r27.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z4 == 0 goto label09;

     label08:
        goto label09;

     label09:
        $r21 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        if $r21 == null goto label10;

        $r22 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r23 = virtualinvoke $r22.<javax.swing.JMenuItem: java.lang.Object getClientProperty(java.lang.Object)>("html");

        $r29 = (javax.swing.text.View) $r23;

        goto label11;

     label10:
        $r29 = null;

     label11:
        if $r29 == null goto label12;

        $f0 = virtualinvoke $r29.<javax.swing.text.View: float getPreferredSpan(int)>(0);

        $i59 = (int) $f0;

        r5.<java.awt.Rectangle: int width> = $i59;

        $f1 = virtualinvoke $r29.<javax.swing.text.View: float getPreferredSpan(int)>(1);

        $i60 = (int) $f1;

        r5.<java.awt.Rectangle: int height> = $i60;

        goto label13;

     label12:
        $i57 = staticinvoke <javax.swing.SwingUtilities: int computeStringWidth(java.awt.FontMetrics,java.lang.String)>(r1, r27);

        r5.<java.awt.Rectangle: int width> = $i57;

        $i58 = virtualinvoke r1.<java.awt.FontMetrics: int getHeight()>();

        r5.<java.awt.Rectangle: int height> = $i58;

     label13:
        if r2 != null goto label15;

        $z2 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean useCheckAndArrow()>();

        if $z2 == 0 goto label14;

        r4.<java.awt.Rectangle: int height> = 16;

        r4.<java.awt.Rectangle: int width> = 16;

        goto label16;

     label14:
        r4.<java.awt.Rectangle: int height> = 0;

        r4.<java.awt.Rectangle: int width> = 0;

        goto label16;

     label15:
        $i8 = interfaceinvoke r2.<javax.swing.Icon: int getIconWidth()>();

        r4.<java.awt.Rectangle: int width> = $i8;

        $i9 = interfaceinvoke r2.<javax.swing.Icon: int getIconHeight()>();

        r4.<java.awt.Rectangle: int height> = $i9;

     label16:
        if r11 != null goto label17;

        r12.<java.awt.Rectangle: int height> = 0;

        r12.<java.awt.Rectangle: int width> = 0;

        goto label18;

     label17:
        $i10 = interfaceinvoke r11.<javax.swing.Icon: int getIconWidth()>();

        r12.<java.awt.Rectangle: int width> = $i10;

        $i11 = interfaceinvoke r11.<javax.swing.Icon: int getIconHeight()>();

        r12.<java.awt.Rectangle: int height> = $i11;

     label18:
        if r13 != null goto label19;

        r14.<java.awt.Rectangle: int height> = 0;

        r14.<java.awt.Rectangle: int width> = 0;

        goto label20;

     label19:
        $i12 = interfaceinvoke r13.<javax.swing.Icon: int getIconWidth()>();

        r14.<java.awt.Rectangle: int width> = $i12;

        $i13 = interfaceinvoke r13.<javax.swing.Icon: int getIconHeight()>();

        r14.<java.awt.Rectangle: int height> = $i13;

     label20:
        $r15 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r16 = virtualinvoke $r15.<javax.swing.JMenuItem: java.awt.ComponentOrientation getComponentOrientation()>();

        $z0 = virtualinvoke $r16.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label24;

        $z1 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean useCheckAndArrow()>();

        if $z1 == 0 goto label21;

        $i52 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultShadowWidth>;

        $i51 = r4.<java.awt.Rectangle: int width>;

        $i53 = $i52 - $i51;

        $i54 = $i53 >> 1;

        r4.<java.awt.Rectangle: int x> = $i54;

        $i55 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultShadowWidth>;

        $i56 = $i55 + i4;

        r5.<java.awt.Rectangle: int x> = $i56;

        goto label23;

     label21:
        if r2 == null goto label22;

        $r19 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r20 = virtualinvoke $r19.<javax.swing.JMenuItem: java.awt.Insets getInsets()>();

        $i46 = $r20.<java.awt.Insets: int left>;

        r4.<java.awt.Rectangle: int x> = $i46;

        $i48 = r4.<java.awt.Rectangle: int x>;

        $i47 = r4.<java.awt.Rectangle: int width>;

        $i49 = $i48 + $i47;

        $i50 = $i49 + i4;

        r5.<java.awt.Rectangle: int x> = $i50;

        goto label23;

     label22:
        $r17 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r18 = virtualinvoke $r17.<javax.swing.JMenuItem: java.awt.Insets getInsets()>();

        $i34 = $r18.<java.awt.Insets: int left>;

        r5.<java.awt.Rectangle: int x> = $i34;

     label23:
        $i65 = r3.<java.awt.Rectangle: int x>;

        $i66 = r3.<java.awt.Rectangle: int width>;

        $i67 = $i65 + $i66;

        $i68 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultAccelEndGap>;

        $i69 = $i67 - $i68;

        $i70 = r10.<java.awt.Rectangle: int width>;

        $i71 = $i69 - $i70;

        r10.<java.awt.Rectangle: int x> = $i71;

        $z6 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean useCheckAndArrow()>();

        if $z6 == 0 goto label24;

        $i36 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: int defaultShadowWidth>;

        $i35 = r14.<java.awt.Rectangle: int width>;

        $i37 = $i36 - $i35;

        $i38 = $i37 >> 1;

        r14.<java.awt.Rectangle: int x> = $i38;

        $i40 = r3.<java.awt.Rectangle: int x>;

        $i39 = r3.<java.awt.Rectangle: int width>;

        $i42 = $i40 + $i39;

        $i44 = $i42 - i41;

        $i43 = r12.<java.awt.Rectangle: int width>;

        $i45 = $i44 - $i43;

        r12.<java.awt.Rectangle: int x> = $i45;

     label24:
        if i2 != 0 goto label25;

        if i0 != 0 goto label25;

        $i25 = r3.<java.awt.Rectangle: int height>;

        $i24 = r5.<java.awt.Rectangle: int height>;

        $i26 = $i25 - $i24;

        $i27 = $i26 >> 1;

        $i28 = $i27 + 1;

        r5.<java.awt.Rectangle: int y> = $i28;

        $i30 = r3.<java.awt.Rectangle: int height>;

        $i29 = r4.<java.awt.Rectangle: int height>;

        $i31 = $i30 - $i29;

        $i32 = $i31 >> 1;

        $i33 = $i32 + 1;

        r4.<java.awt.Rectangle: int y> = $i33;

     label25:
        $r30 = virtualinvoke r4.<java.awt.Rectangle: java.awt.Rectangle union(java.awt.Rectangle)>(r5);

        $i72 = $r30.<java.awt.Rectangle: int y>;

        $i73 = $r30.<java.awt.Rectangle: int height>;

        $i74 = $i73 >> 1;

        $i75 = $i72 + $i74;

        $i76 = r10.<java.awt.Rectangle: int height>;

        $i77 = $i76 >> 1;

        $i78 = $i75 - $i77;

        r10.<java.awt.Rectangle: int y> = $i78;

        $z7 = specialinvoke r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean useCheckAndArrow()>();

        if $z7 == 0 goto label26;

        $i15 = r3.<java.awt.Rectangle: int height>;

        $i14 = r12.<java.awt.Rectangle: int height>;

        $i16 = $i15 - $i14;

        $i17 = $i16 >> 1;

        $i18 = $i17 + 1;

        r12.<java.awt.Rectangle: int y> = $i18;

        $i20 = r3.<java.awt.Rectangle: int height>;

        $i19 = r14.<java.awt.Rectangle: int height>;

        $i21 = $i20 - $i19;

        $i22 = $i21 >> 1;

        $i23 = $i22 + 1;

        r14.<java.awt.Rectangle: int y> = $i23;

     label26:
        return r27;
    }

    private boolean useCheckAndArrow()
    {
        javax.swing.JMenuItem $r1, $r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        javax.swing.JMenu $r3;
        boolean $z0, $z1, z2;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        z2 = 1;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $z0 = $r1 instanceof javax.swing.JMenu;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r3 = (javax.swing.JMenu) $r2;

        $z1 = virtualinvoke $r3.<javax.swing.JMenu: boolean isTopLevelMenu()>();

        if $z1 == 0 goto label1;

        z2 = 0;

     label1:
        return z2;
    }

    public javax.swing.MenuElement[] getPath()
    {
        javax.swing.MenuSelectionManager $r0;
        javax.swing.JMenuItem $r3, $r7, $r11;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, $i9;
        java.awt.Container $r4;
        javax.swing.MenuElement $r5, $r8;
        java.awt.Component $r6, $r9;
        javax.swing.MenuElement[] $r1, $r10, $r12, r13;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r2;

        r2 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r0 = staticinvoke <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>();

        $r1 = virtualinvoke $r0.<javax.swing.MenuSelectionManager: javax.swing.MenuElement[] getSelectedPath()>();

        i0 = lengthof $r1;

        if i0 != 0 goto label1;

        $r12 = newarray (javax.swing.MenuElement)[0];

        return $r12;

     label1:
        $r3 = r2.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r4 = virtualinvoke $r3.<javax.swing.JMenuItem: java.awt.Container getParent()>();

        $i1 = i0 - 1;

        $r5 = $r1[$i1];

        $r6 = interfaceinvoke $r5.<javax.swing.MenuElement: java.awt.Component getComponent()>();

        if $r6 != $r4 goto label2;

        $i6 = i0 + 1;

        r13 = newarray (javax.swing.MenuElement)[$i6];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, r13, 0, i0);

        $r11 = r2.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        r13[i0] = $r11;

        goto label6;

     label2:
        $i2 = lengthof $r1;

        i7 = $i2 - 1;

     label3:
        if i7 < 0 goto label5;

        $r8 = $r1[i7];

        $r9 = interfaceinvoke $r8.<javax.swing.MenuElement: java.awt.Component getComponent()>();

        if $r9 != $r4 goto label4;

        goto label5;

     label4:
        $i9 = (int) -1;

        i7 = i7 + $i9;

        goto label3;

     label5:
        $i3 = i7 + 2;

        $r10 = newarray (javax.swing.MenuElement)[$i3];

        r13 = $r10;

        $i4 = i7 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r10, 0, $i4);

        $i5 = i7 + 1;

        $r7 = r2.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        $r10[$i5] = $r7;

     label6:
        return r13;
    }

    protected void doClick(javax.swing.MenuSelectionManager)
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        javax.swing.MenuSelectionManager r2;
        javax.swing.JMenuItem $r1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r2 := @parameter0: javax.swing.MenuSelectionManager;

        if r2 != null goto label1;

        r2 = staticinvoke <javax.swing.MenuSelectionManager: javax.swing.MenuSelectionManager defaultManager()>();

     label1:
        virtualinvoke r2.<javax.swing.MenuSelectionManager: void clearSelectedPath()>();

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: javax.swing.JMenuItem menuItem>;

        virtualinvoke $r1.<javax.swing.JMenuItem: void doClick(int)>(0);

        return;
    }

    public com.jidesoft.plaf.basic.ThemePainter getPainter()
    {
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r0;
        com.jidesoft.plaf.basic.ThemePainter $r1;

        r0 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        $r1 = r0.<com.jidesoft.plaf.eclipse.EclipseMenuItemUI: com.jidesoft.plaf.basic.ThemePainter _painter>;

        return $r1;
    }

    protected boolean isDownArrowVisible(java.awt.Container)
    {
        com.jidesoft.swing.TopLevelMenuContainer $r1, $r2;
        com.jidesoft.plaf.eclipse.EclipseMenuItemUI r3;
        java.awt.Container r0;
        boolean $z0, $z1, $z2, $z3, $z4;

        r3 := @this: com.jidesoft.plaf.eclipse.EclipseMenuItemUI;

        r0 := @parameter0: java.awt.Container;

        $z0 = r0 instanceof com.jidesoft.swing.TopLevelMenuContainer;

        if $z0 == 0 goto label1;

        $r2 = (com.jidesoft.swing.TopLevelMenuContainer) r0;

        $z4 = interfaceinvoke $r2.<com.jidesoft.swing.TopLevelMenuContainer: boolean isMenuBar()>();

        if $z4 == 0 goto label1;

        return 0;

     label1:
        $z1 = r0 instanceof com.jidesoft.swing.TopLevelMenuContainer;

        if $z1 == 0 goto label2;

        $r1 = (com.jidesoft.swing.TopLevelMenuContainer) r0;

        $z3 = interfaceinvoke $r1.<com.jidesoft.swing.TopLevelMenuContainer: boolean isMenuBar()>();

        if $z3 != 0 goto label2;

        return 1;

     label2:
        $z2 = r0 instanceof javax.swing.JMenuBar;

        if $z2 == 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    static void <clinit>()
    {
        java.awt.Rectangle $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7;

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String MAX_ACC_WIDTH> = "maxAccWidth";

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.lang.String MAX_TEXT_WIDTH> = "maxTextWidth";

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: boolean DEBUG> = 0;

        $r0 = new java.awt.Rectangle;

        specialinvoke $r0.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, 0, 0);

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle zeroRect> = $r0;

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle iconRect> = $r1;

        $r2 = new java.awt.Rectangle;

        specialinvoke $r2.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle textRect> = $r2;

        $r3 = new java.awt.Rectangle;

        specialinvoke $r3.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle acceleratorRect> = $r3;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle checkIconRect> = $r4;

        $r5 = new java.awt.Rectangle;

        specialinvoke $r5.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle arrowIconRect> = $r5;

        $r6 = new java.awt.Rectangle;

        specialinvoke $r6.<java.awt.Rectangle: void <init>(int,int)>(32767, 32767);

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle viewRect> = $r6;

        $r7 = new java.awt.Rectangle;

        specialinvoke $r7.<java.awt.Rectangle: void <init>()>();

        <com.jidesoft.plaf.eclipse.EclipseMenuItemUI: java.awt.Rectangle r> = $r7;

        return;
    }
}
