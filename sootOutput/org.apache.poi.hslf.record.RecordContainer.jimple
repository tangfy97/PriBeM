public abstract class org.apache.poi.hslf.record.RecordContainer extends org.apache.poi.hslf.record.Record
{
    protected org.apache.poi.hslf.record.Record[] _children;
    private java.lang.Boolean changingChildRecordsLock;

    public void <init>()
    {
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        specialinvoke r0.<org.apache.poi.hslf.record.Record: void <init>()>();

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock> = $r1;

        return;
    }

    public org.apache.poi.hslf.record.Record[] getChildRecords()
    {
        org.apache.poi.hslf.record.RecordContainer r0;
        org.apache.poi.hslf.record.Record[] $r1;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        return $r1;
    }

    public boolean isAnAtom()
    {
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        return 0;
    }

    private int findChildLocation(org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r6;
        org.apache.poi.hslf.record.Record r4, $r5;
        org.apache.poi.hslf.record.Record[] $r2, $r3;
        int $i0, i1, $i3;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r4 := @parameter0: org.apache.poi.hslf.record.Record;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label1:
        i1 = 0;

     label2:
        $r2 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i0 = lengthof $r2;

        if i1 >= $i0 goto label5;

        $r3 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $r5 = $r3[i1];

        $z0 = virtualinvoke $r5.<java.lang.Object: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label4;

        exitmonitor $r1;

     label3:
        return i1;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        exitmonitor $r1;

     label6:
        goto label9;

     label7:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label8:
        throw $r6;

     label9:
        $i3 = (int) -1;

        return $i3;

        catch java.lang.Throwable from label1 to label3 with label7;
        catch java.lang.Throwable from label4 to label6 with label7;
        catch java.lang.Throwable from label7 to label8 with label7;
    }

    private void appendChild(org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r8;
        org.apache.poi.hslf.record.Record r7;
        org.apache.poi.hslf.record.Record[] $r2, r3, $r4, $r5, $r6;
        int $i0, $i1, $i2, $i3;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r7 := @parameter0: org.apache.poi.hslf.record.Record;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i0 = lengthof $r2;

        $i1 = $i0 + 1;

        r3 = newarray (org.apache.poi.hslf.record.Record)[$i1];

        $r5 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $r4 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i2 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, r3, 0, $i2);

        $r6 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i3 = lengthof $r6;

        r3[$i3] = r7;

        r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children> = r3;

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r8;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void addChildAt(org.apache.poi.hslf.record.Record, int)
    {
        java.lang.Throwable $r4;
        org.apache.poi.hslf.record.Record r2;
        org.apache.poi.hslf.record.Record[] $r3;
        int $i0, i1, $i2;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r2 := @parameter0: org.apache.poi.hslf.record.Record;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label1:
        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void appendChild(org.apache.poi.hslf.record.Record)>(r2);

        $r3 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i0 = lengthof $r3;

        $i2 = $i0 - 1;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void moveChildRecords(int,int,int)>($i2, i1, 1);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    private void moveChildRecords(int, int, int)
    {
        org.apache.poi.hslf.record.Record[] $r1, $r2;
        java.lang.IllegalArgumentException $r3;
        int i0, i1, i2, $i3, $i4;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        if i0 != i1 goto label1;

        return;

     label1:
        if i2 != 0 goto label2;

        return;

     label2:
        $i4 = i0 + i2;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i3 = lengthof $r1;

        if $i4 <= $i3 goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move more records than there are!");

        throw $r3;

     label3:
        $r2 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        staticinvoke <org.apache.poi.util.ArrayUtil: void arrayMoveWithin(java.lang.Object[],int,int,int)>($r2, i0, i1, i2);

        return;
    }

    public org.apache.poi.hslf.record.Record findFirstOfType(long)
    {
        org.apache.poi.hslf.record.Record $r3, $r5;
        long $l1, l2;
        org.apache.poi.hslf.record.Record[] $r1, $r2, $r4;
        byte $b3;
        int $i0, i4;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        l2 := @parameter0: long;

        i4 = 0;

     label1:
        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $i0 = lengthof $r1;

        if i4 >= $i0 goto label3;

        $r2 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $r3 = $r2[i4];

        $l1 = virtualinvoke $r3.<org.apache.poi.hslf.record.Record: long getRecordType()>();

        $b3 = $l1 cmp l2;

        if $b3 != 0 goto label2;

        $r4 = r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        $r5 = $r4[i4];

        return $r5;

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return null;
    }

    public org.apache.poi.hslf.record.Record removeChild(org.apache.poi.hslf.record.Record)
    {
        org.apache.poi.hslf.record.Record r6, r7, r8;
        java.lang.Object[] $r4;
        org.apache.poi.hslf.record.Record[] r2, $r3, $r5;
        java.util.ArrayList $r0;
        int i0, $i1, i2;
        org.apache.poi.hslf.record.RecordContainer r1;

        r1 := @this: org.apache.poi.hslf.record.RecordContainer;

        r7 := @parameter0: org.apache.poi.hslf.record.Record;

        r8 = null;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r2 = r1.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children>;

        i0 = lengthof r2;

        i2 = 0;

     label1:
        if i2 >= i0 goto label4;

        r6 = r2[i2];

        if r6 == r7 goto label2;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r6);

        goto label3;

     label2:
        r8 = r6;

     label3:
        i2 = i2 + 1;

        goto label1;

     label4:
        $i1 = virtualinvoke $r0.<java.util.ArrayList: int size()>();

        $r3 = newarray (org.apache.poi.hslf.record.Record)[$i1];

        $r4 = virtualinvoke $r0.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        $r5 = (org.apache.poi.hslf.record.Record[]) $r4;

        r1.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children> = $r5;

        return r8;
    }

    public void appendChildRecord(org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r3;
        org.apache.poi.hslf.record.Record r2;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r2 := @parameter0: org.apache.poi.hslf.record.Record;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label1:
        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void appendChild(org.apache.poi.hslf.record.Record)>(r2);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r3;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addChildAfter(org.apache.poi.hslf.record.Record, org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r5;
        org.apache.poi.hslf.record.Record r2, r3;
        java.lang.IllegalArgumentException $r6;
        int $i0, $i1, $i3;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r3 := @parameter0: org.apache.poi.hslf.record.Record;

        r2 := @parameter1: org.apache.poi.hslf.record.Record;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label1:
        $i0 = specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: int findChildLocation(org.apache.poi.hslf.record.Record)>(r2);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to add a new child after another record, but that record wasn\'t one of our children!");

        throw $r6;

     label2:
        $i1 = $i0 + 1;

        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void addChildAt(org.apache.poi.hslf.record.Record,int)>(r3, $i1);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void addChildBefore(org.apache.poi.hslf.record.Record, org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r5;
        org.apache.poi.hslf.record.Record r2, r3;
        java.lang.IllegalArgumentException $r6;
        int $i0, $i2;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r3 := @parameter0: org.apache.poi.hslf.record.Record;

        r2 := @parameter1: org.apache.poi.hslf.record.Record;

        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label1:
        $i0 = specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: int findChildLocation(org.apache.poi.hslf.record.Record)>(r2);

        $i2 = (int) -1;

        if $i0 != $i2 goto label2;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to add a new child before another record, but that record wasn\'t one of our children!");

        throw $r6;

     label2:
        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void addChildAt(org.apache.poi.hslf.record.Record,int)>(r3, $i0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r5;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void moveChildBefore(org.apache.poi.hslf.record.Record, org.apache.poi.hslf.record.Record)
    {
        org.apache.poi.hslf.record.Record r1, r2;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r1 := @parameter0: org.apache.poi.hslf.record.Record;

        r2 := @parameter1: org.apache.poi.hslf.record.Record;

        virtualinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void moveChildrenBefore(org.apache.poi.hslf.record.Record,int,org.apache.poi.hslf.record.Record)>(r1, 1, r2);

        return;
    }

    public void moveChildrenBefore(org.apache.poi.hslf.record.Record, int, org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r6;
        org.apache.poi.hslf.record.Record r2, r3;
        java.lang.IllegalArgumentException $r7, $r8;
        int i0, $i1, $i2, $i4, $i6;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r3 := @parameter0: org.apache.poi.hslf.record.Record;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.hslf.record.Record;

        if i0 >= 1 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label2:
        $i1 = specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: int findChildLocation(org.apache.poi.hslf.record.Record)>(r2);

        $i4 = (int) -1;

        if $i1 != $i4 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move children before another record, but that record wasn\'t one of our children!");

        throw $r7;

     label3:
        $i2 = specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: int findChildLocation(org.apache.poi.hslf.record.Record)>(r3);

        $i6 = (int) -1;

        if $i2 != $i6 goto label4;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move a record that wasn\'t a child!");

        throw $r8;

     label4:
        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void moveChildRecords(int,int,int)>($i2, $i1, i0);

        exitmonitor $r1;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void moveChildrenAfter(org.apache.poi.hslf.record.Record, int, org.apache.poi.hslf.record.Record)
    {
        java.lang.Throwable $r6;
        org.apache.poi.hslf.record.Record r2, r3;
        java.lang.IllegalArgumentException $r7, $r8;
        int i0, $i1, $i2, i3, $i5, $i7;
        java.lang.Boolean $r1;
        org.apache.poi.hslf.record.RecordContainer r0;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r3 := @parameter0: org.apache.poi.hslf.record.Record;

        i0 := @parameter1: int;

        r2 := @parameter2: org.apache.poi.hslf.record.Record;

        if i0 >= 1 goto label1;

        return;

     label1:
        $r1 = r0.<org.apache.poi.hslf.record.RecordContainer: java.lang.Boolean changingChildRecordsLock>;

        entermonitor $r1;

     label2:
        $i1 = specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: int findChildLocation(org.apache.poi.hslf.record.Record)>(r2);

        $i5 = (int) -1;

        if $i1 != $i5 goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move children before another record, but that record wasn\'t one of our children!");

        throw $r7;

     label3:
        i3 = $i1 + 1;

        $i2 = specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: int findChildLocation(org.apache.poi.hslf.record.Record)>(r3);

        $i7 = (int) -1;

        if $i2 != $i7 goto label4;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Asked to move a record that wasn\'t a child!");

        throw $r8;

     label4:
        specialinvoke r0.<org.apache.poi.hslf.record.RecordContainer: void moveChildRecords(int,int,int)>($i2, i3, i0);

        exitmonitor $r1;

     label5:
        goto label8;

     label6:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r6;

     label8:
        return;

        catch java.lang.Throwable from label2 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public void setChildRecord(org.apache.poi.hslf.record.Record[])
    {
        org.apache.poi.hslf.record.RecordContainer r0;
        org.apache.poi.hslf.record.Record[] r1;

        r0 := @this: org.apache.poi.hslf.record.RecordContainer;

        r1 := @parameter0: org.apache.poi.hslf.record.Record[];

        r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] _children> = r1;

        return;
    }

    public void writeOut(byte, byte, long, org.apache.poi.hslf.record.Record[], java.io.OutputStream) throws java.io.IOException
    {
        byte[] $r2, $r3, $r5, $r7, $r8, r9, r13, r14;
        byte b0, b1;
        boolean $z0;
        org.apache.poi.hslf.record.Record[] r4;
        org.apache.poi.hslf.record.RecordContainer r11;
        org.apache.poi.hslf.record.Record $r6, $r10;
        java.io.ByteArrayOutputStream $r1;
        long l2;
        short $s4, $s10;
        int $i3, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, i15, i16, i17;
        java.io.OutputStream r0;
        org.apache.poi.hslf.util.MutableByteArrayOutputStream r12;

        r11 := @this: org.apache.poi.hslf.record.RecordContainer;

        b0 := @parameter0: byte;

        b1 := @parameter1: byte;

        l2 := @parameter2: long;

        r4 := @parameter3: org.apache.poi.hslf.record.Record[];

        r0 := @parameter4: java.io.OutputStream;

        $z0 = r0 instanceof org.apache.poi.hslf.util.MutableByteArrayOutputStream;

        if $z0 == 0 goto label3;

        r12 = (org.apache.poi.hslf.util.MutableByteArrayOutputStream) r0;

        $i8 = virtualinvoke r12.<org.apache.poi.hslf.util.MutableByteArrayOutputStream: int getBytesWritten()>();

        $r7 = newarray (byte)[2];

        $r7[0] = b0;

        $r7[1] = b1;

        virtualinvoke r12.<org.apache.poi.hslf.util.MutableByteArrayOutputStream: void write(byte[])>($r7);

        r13 = newarray (byte)[2];

        $i9 = (int) l2;

        $s10 = (short) $i9;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],short)>(r13, $s10);

        virtualinvoke r12.<org.apache.poi.hslf.util.MutableByteArrayOutputStream: void write(byte[])>(r13);

        $r8 = newarray (byte)[4];

        virtualinvoke r12.<org.apache.poi.hslf.util.MutableByteArrayOutputStream: void write(byte[])>($r8);

        i15 = 0;

     label1:
        $i11 = lengthof r4;

        if i15 >= $i11 goto label2;

        $r10 = r4[i15];

        virtualinvoke $r10.<org.apache.poi.hslf.record.Record: void writeOut(java.io.OutputStream)>(r12);

        i15 = i15 + 1;

        goto label1;

     label2:
        $i12 = virtualinvoke r12.<org.apache.poi.hslf.util.MutableByteArrayOutputStream: int getBytesWritten()>();

        $i13 = $i12 - $i8;

        i16 = $i13 - 8;

        r9 = newarray (byte)[4];

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r9, 0, i16);

        $i14 = $i8 + 4;

        virtualinvoke r12.<org.apache.poi.hslf.util.MutableByteArrayOutputStream: void overwrite(byte[],int)>(r9, $i14);

        goto label6;

     label3:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        $r2 = newarray (byte)[2];

        $r2[0] = b0;

        $r2[1] = b1;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

        r14 = newarray (byte)[2];

        $i3 = (int) l2;

        $s4 = (short) $i3;

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],short)>(r14, $s4);

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[])>(r14);

        $r3 = newarray (byte)[4];

        $r3[0] = 0;

        $r3[1] = 0;

        $r3[2] = 0;

        $r3[3] = 0;

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void write(byte[])>($r3);

        i17 = 0;

     label4:
        $i5 = lengthof r4;

        if i17 >= $i5 goto label5;

        $r6 = r4[i17];

        virtualinvoke $r6.<org.apache.poi.hslf.record.Record: void writeOut(java.io.OutputStream)>($r1);

        i17 = i17 + 1;

        goto label4;

     label5:
        $r5 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        $i6 = lengthof $r5;

        $i7 = $i6 - 8;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>($r5, 4, $i7);

        virtualinvoke r0.<java.io.OutputStream: void write(byte[])>($r5);

     label6:
        return;
    }

    public static void handleParentAwareRecords(org.apache.poi.hslf.record.RecordContainer)
    {
        org.apache.poi.hslf.record.Record r2;
        org.apache.poi.hslf.record.ParentAwareRecord $r4;
        org.apache.poi.hslf.record.Record[] $r1;
        int i0, i1;
        org.apache.poi.hslf.record.RecordContainer r0, $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.apache.poi.hslf.record.RecordContainer;

        $r1 = virtualinvoke r0.<org.apache.poi.hslf.record.RecordContainer: org.apache.poi.hslf.record.Record[] getChildRecords()>();

        i0 = lengthof $r1;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r2 = $r1[i1];

        $z0 = r2 instanceof org.apache.poi.hslf.record.ParentAwareRecord;

        if $z0 == 0 goto label2;

        $r4 = (org.apache.poi.hslf.record.ParentAwareRecord) r2;

        interfaceinvoke $r4.<org.apache.poi.hslf.record.ParentAwareRecord: void setParentRecord(org.apache.poi.hslf.record.RecordContainer)>(r0);

     label2:
        $z1 = r2 instanceof org.apache.poi.hslf.record.RecordContainer;

        if $z1 == 0 goto label3;

        $r3 = (org.apache.poi.hslf.record.RecordContainer) r2;

        staticinvoke <org.apache.poi.hslf.record.RecordContainer: void handleParentAwareRecords(org.apache.poi.hslf.record.RecordContainer)>($r3);

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return;
    }
}
