public abstract class org.springframework.util.TypeUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.util.TypeUtils r0;

        r0 := @this: org.springframework.util.TypeUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isAssignable(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.lang.reflect.GenericArrayType $r3, $r5, $r14;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24;
        java.lang.reflect.Type r0, r1, $r4, $r6, $r11, $r15, $r18;
        java.lang.reflect.WildcardType $r2;
        java.lang.reflect.ParameterizedType $r8, $r9, $r10, $r17;
        java.lang.Class $r7, $r12, $r13, $r16, $r19, $r20, r21, r22;

        r0 := @parameter0: java.lang.reflect.Type;

        r1 := @parameter1: java.lang.reflect.Type;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "Left-hand side type must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Right-hand side type must not be null");

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/lang/Object;");

        if $z1 == 0 goto label02;

     label01:
        return 1;

     label02:
        $z2 = r0 instanceof java.lang.Class;

        if $z2 == 0 goto label05;

        r21 = (java.lang.Class) r0;

        $z14 = r1 instanceof java.lang.Class;

        if $z14 == 0 goto label03;

        $r20 = (java.lang.Class) r1;

        $z21 = staticinvoke <org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>(r21, $r20);

        return $z21;

     label03:
        $z15 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z15 == 0 goto label04;

        $r17 = (java.lang.reflect.ParameterizedType) r1;

        $r18 = interfaceinvoke $r17.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z19 = $r18 instanceof java.lang.Class;

        if $z19 == 0 goto label05;

        $r19 = (java.lang.Class) $r18;

        $z20 = staticinvoke <org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>(r21, $r19);

        return $z20;

     label04:
        $z16 = virtualinvoke r21.<java.lang.Class: boolean isArray()>();

        if $z16 == 0 goto label05;

        $z17 = r1 instanceof java.lang.reflect.GenericArrayType;

        if $z17 == 0 goto label05;

        $r14 = (java.lang.reflect.GenericArrayType) r1;

        $r15 = interfaceinvoke $r14.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $r16 = virtualinvoke r21.<java.lang.Class: java.lang.Class getComponentType()>();

        $z18 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)>($r16, $r15);

        return $z18;

     label05:
        $z22 = r0 instanceof java.lang.reflect.ParameterizedType;

        if $z22 == 0 goto label07;

        $z9 = r1 instanceof java.lang.Class;

        if $z9 == 0 goto label06;

        $r10 = (java.lang.reflect.ParameterizedType) r0;

        $r11 = interfaceinvoke $r10.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();

        $z12 = $r11 instanceof java.lang.Class;

        if $z12 == 0 goto label07;

        $r13 = (java.lang.Class) $r11;

        $r12 = (java.lang.Class) r1;

        $z13 = staticinvoke <org.springframework.util.ClassUtils: boolean isAssignable(java.lang.Class,java.lang.Class)>($r13, $r12);

        return $z13;

     label06:
        $z10 = r1 instanceof java.lang.reflect.ParameterizedType;

        if $z10 == 0 goto label07;

        $r9 = (java.lang.reflect.ParameterizedType) r0;

        $r8 = (java.lang.reflect.ParameterizedType) r1;

        $z11 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType)>($r9, $r8);

        return $z11;

     label07:
        $z23 = r0 instanceof java.lang.reflect.GenericArrayType;

        if $z23 == 0 goto label09;

        $r3 = (java.lang.reflect.GenericArrayType) r0;

        $r4 = interfaceinvoke $r3.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $z4 = r1 instanceof java.lang.Class;

        if $z4 == 0 goto label08;

        r22 = (java.lang.Class) r1;

        $z7 = virtualinvoke r22.<java.lang.Class: boolean isArray()>();

        if $z7 == 0 goto label09;

        $r7 = virtualinvoke r22.<java.lang.Class: java.lang.Class getComponentType()>();

        $z8 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)>($r4, $r7);

        return $z8;

     label08:
        $z5 = r1 instanceof java.lang.reflect.GenericArrayType;

        if $z5 == 0 goto label09;

        $r5 = (java.lang.reflect.GenericArrayType) r1;

        $r6 = interfaceinvoke $r5.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>();

        $z6 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)>($r4, $r6);

        return $z6;

     label09:
        $z24 = r0 instanceof java.lang.reflect.WildcardType;

        if $z24 == 0 goto label10;

        $r2 = (java.lang.reflect.WildcardType) r0;

        $z3 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.Type)>($r2, r1);

        return $z3;

     label10:
        return 0;
    }

    private static boolean isAssignable(java.lang.reflect.ParameterizedType, java.lang.reflect.ParameterizedType)
    {
        java.lang.reflect.WildcardType $r6;
        java.lang.reflect.ParameterizedType r0, r1;
        java.lang.reflect.Type r4, r5;
        java.lang.reflect.Type[] $r2, $r3;
        int $i0, $i1, i2, i3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @parameter0: java.lang.reflect.ParameterizedType;

        r1 := @parameter1: java.lang.reflect.ParameterizedType;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = interfaceinvoke r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $r3 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();

        $i1 = lengthof $r2;

        $i0 = lengthof $r3;

        if $i1 == $i0 goto label2;

        return 0;

     label2:
        i2 = lengthof $r2;

        i3 = 0;

        goto label6;

     label3:
        r4 = $r2[i3];

        r5 = $r3[i3];

        $z1 = virtualinvoke r4.<java.lang.Object: boolean equals(java.lang.Object)>(r5);

        if $z1 != 0 goto label5;

        $z2 = r4 instanceof java.lang.reflect.WildcardType;

        if $z2 == 0 goto label4;

        $r6 = (java.lang.reflect.WildcardType) r4;

        $z3 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.WildcardType,java.lang.reflect.Type)>($r6, r5);

        if $z3 != 0 goto label5;

     label4:
        return 0;

     label5:
        i3 = i3 + 1;

     label6:
        if i3 < i2 goto label3;

        return 1;
    }

    private static boolean isAssignable(java.lang.reflect.WildcardType, java.lang.reflect.Type)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        java.lang.reflect.Type r3, r14, r16, r18, r20, r22, r24, r26, r28;
        java.lang.reflect.Type[] $r1, $r2, $r4, $r5, $r6, $r7, r8, r9, r11, r12, r13, r15, r17, r19, r21, r23, r25, r27;
        java.lang.reflect.WildcardType r0, r10;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17, i18, i19;

        r0 := @parameter0: java.lang.reflect.WildcardType;

        r3 := @parameter1: java.lang.reflect.Type;

        $r1 = interfaceinvoke r0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        r8 = $r1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label01;

        $r7 = newarray (java.lang.reflect.Type)[1];

        $r7[0] = class "Ljava/lang/Object;";

        r8 = $r7;

     label01:
        $r2 = interfaceinvoke r0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        r9 = $r2;

        $i1 = lengthof $r2;

        if $i1 != 0 goto label02;

        r9 = newarray (java.lang.reflect.Type)[1];

     label02:
        $z0 = r3 instanceof java.lang.reflect.WildcardType;

        if $z0 == 0 goto label21;

        r10 = (java.lang.reflect.WildcardType) r3;

        $r4 = interfaceinvoke r10.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();

        r11 = $r4;

        $i2 = lengthof $r4;

        if $i2 != 0 goto label03;

        $r6 = newarray (java.lang.reflect.Type)[1];

        $r6[0] = class "Ljava/lang/Object;";

        r11 = $r6;

     label03:
        $r5 = interfaceinvoke r10.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();

        r12 = $r5;

        $i3 = lengthof $r5;

        if $i3 != 0 goto label04;

        r12 = newarray (java.lang.reflect.Type)[1];

     label04:
        r13 = r8;

        $i4 = lengthof r8;

        i5 = 0;

        goto label12;

     label05:
        r14 = r13[i5];

        r15 = r11;

        i6 = lengthof r11;

        i7 = 0;

        goto label08;

     label06:
        r16 = r15[i7];

        $z3 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignableBound(java.lang.reflect.Type,java.lang.reflect.Type)>(r14, r16);

        if $z3 != 0 goto label07;

        return 0;

     label07:
        i7 = i7 + 1;

     label08:
        if i7 < i6 goto label06;

        r17 = r12;

        i8 = lengthof r12;

        i9 = 0;

        goto label11;

     label09:
        r18 = r17[i9];

        $z4 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignableBound(java.lang.reflect.Type,java.lang.reflect.Type)>(r14, r18);

        if $z4 != 0 goto label10;

        return 0;

     label10:
        i9 = i9 + 1;

     label11:
        if i9 < i8 goto label09;

        i5 = i5 + 1;

     label12:
        if i5 < $i4 goto label05;

        r19 = r9;

        i10 = lengthof r9;

        i11 = 0;

        goto label20;

     label13:
        r20 = r19[i11];

        r21 = r11;

        i12 = lengthof r11;

        i13 = 0;

        goto label16;

     label14:
        r22 = r21[i13];

        $z5 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignableBound(java.lang.reflect.Type,java.lang.reflect.Type)>(r22, r20);

        if $z5 != 0 goto label15;

        return 0;

     label15:
        i13 = i13 + 1;

     label16:
        if i13 < i12 goto label14;

        r23 = r12;

        i14 = lengthof r12;

        i15 = 0;

        goto label19;

     label17:
        r24 = r23[i15];

        $z6 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignableBound(java.lang.reflect.Type,java.lang.reflect.Type)>(r24, r20);

        if $z6 != 0 goto label18;

        return 0;

     label18:
        i15 = i15 + 1;

     label19:
        if i15 < i14 goto label17;

        i11 = i11 + 1;

     label20:
        if i11 < i10 goto label13;

        goto label28;

     label21:
        r25 = r8;

        i16 = lengthof r8;

        i17 = 0;

        goto label24;

     label22:
        r26 = r25[i17];

        $z1 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignableBound(java.lang.reflect.Type,java.lang.reflect.Type)>(r26, r3);

        if $z1 != 0 goto label23;

        return 0;

     label23:
        i17 = i17 + 1;

     label24:
        if i17 < i16 goto label22;

        r27 = r9;

        i18 = lengthof r9;

        i19 = 0;

        goto label27;

     label25:
        r28 = r27[i19];

        $z2 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignableBound(java.lang.reflect.Type,java.lang.reflect.Type)>(r3, r28);

        if $z2 != 0 goto label26;

        return 0;

     label26:
        i19 = i19 + 1;

     label27:
        if i19 < i18 goto label25;

     label28:
        return 1;
    }

    public static boolean isAssignableBound(java.lang.reflect.Type, java.lang.reflect.Type)
    {
        java.lang.reflect.Type r0, r1;
        boolean $z0;

        r1 := @parameter0: java.lang.reflect.Type;

        r0 := @parameter1: java.lang.reflect.Type;

        if r0 != null goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = staticinvoke <org.springframework.util.TypeUtils: boolean isAssignable(java.lang.reflect.Type,java.lang.reflect.Type)>(r1, r0);

        return $z0;
    }
}
