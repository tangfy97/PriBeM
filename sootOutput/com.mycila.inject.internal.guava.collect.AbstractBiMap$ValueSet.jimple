class com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet extends com.mycila.inject.internal.guava.collect.ForwardingSet
{
    final java.util.Set valuesDelegate;
    final com.mycila.inject.internal.guava.collect.AbstractBiMap this$0;

    private void <init>(com.mycila.inject.internal.guava.collect.AbstractBiMap)
    {
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;
        java.util.Set $r4;
        com.mycila.inject.internal.guava.collect.AbstractBiMap r1, $r2, $r3;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractBiMap;

        r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: com.mycila.inject.internal.guava.collect.AbstractBiMap this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingSet: void <init>()>();

        $r2 = r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: com.mycila.inject.internal.guava.collect.AbstractBiMap this$0>;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.AbstractBiMap: com.mycila.inject.internal.guava.collect.AbstractBiMap access$600(com.mycila.inject.internal.guava.collect.AbstractBiMap)>($r2);

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.guava.collect.AbstractBiMap: java.util.Set keySet()>();

        r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.util.Set valuesDelegate> = $r4;

        return;
    }

    protected java.util.Set delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.util.Set valuesDelegate>;

        return $r1;
    }

    public java.util.Iterator iterator()
    {
        java.util.Iterator $r4;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet$1 $r5;
        java.util.Map $r2;
        java.util.Collection $r3;
        com.mycila.inject.internal.guava.collect.AbstractBiMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: com.mycila.inject.internal.guava.collect.AbstractBiMap this$0>;

        $r2 = staticinvoke <com.mycila.inject.internal.guava.collect.AbstractBiMap: java.util.Map access$200(com.mycila.inject.internal.guava.collect.AbstractBiMap)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = interfaceinvoke $r3.<java.util.Collection: java.util.Iterator iterator()>();

        $r5 = new com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet$1;

        specialinvoke $r5.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet$1: void <init>(com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet,java.util.Iterator)>(r0, $r4);

        return $r5;
    }

    public java.lang.Object[] toArray()
    {
        java.lang.Object[] $r1;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.lang.Object[] standardToArray()>();

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        java.lang.Object[] r1, $r2;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.lang.Object[] standardToArray(java.lang.Object[])>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.lang.String standardToString()>();

        return $r1;
    }

    protected volatile java.util.Collection delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.util.Set delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        java.util.Set $r1;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: java.util.Set delegate()>();

        return $r1;
    }

    void <init>(com.mycila.inject.internal.guava.collect.AbstractBiMap, com.mycila.inject.internal.guava.collect.AbstractBiMap$1)
    {
        com.mycila.inject.internal.guava.collect.AbstractBiMap$1 r2;
        com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet r0;
        com.mycila.inject.internal.guava.collect.AbstractBiMap r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.AbstractBiMap;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.AbstractBiMap$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractBiMap$ValueSet: void <init>(com.mycila.inject.internal.guava.collect.AbstractBiMap)>(r1);

        return;
    }
}
