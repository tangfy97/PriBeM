public class org.eclipse.jetty.io.nio.ChannelEndPoint extends java.lang.Object implements org.eclipse.jetty.io.EndPoint
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    protected final java.nio.channels.ByteChannel _channel;
    protected final java.nio.ByteBuffer[] _gather2;
    protected final java.net.Socket _socket;
    protected final java.net.InetSocketAddress _local;
    protected final java.net.InetSocketAddress _remote;
    protected volatile int _maxIdleTime;
    private volatile boolean _ishut;
    private volatile boolean _oshut;

    public void <init>(java.nio.channels.ByteChannel) throws java.io.IOException
    {
        java.nio.ByteBuffer[] $r1;
        java.net.Socket $r3, $r4, $r7, $r10, $r12;
        java.net.SocketAddress $r5, $r8;
        java.net.InetSocketAddress $r6, $r9;
        java.nio.channels.SocketChannel $r11;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        int $i0;
        java.nio.channels.ByteChannel r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        r2 := @parameter0: java.nio.channels.ByteChannel;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.nio.ByteBuffer)[2];

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.ByteBuffer[] _gather2> = $r1;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel> = r2;

        $z0 = r2 instanceof java.nio.channels.SocketChannel;

        if $z0 == 0 goto label1;

        $r11 = (java.nio.channels.SocketChannel) r2;

        $r12 = virtualinvoke $r11.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        goto label2;

     label1:
        $r12 = null;

     label2:
        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket> = $r12;

        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r3 == null goto label3;

        $r4 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $r5 = virtualinvoke $r4.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

        $r6 = (java.net.InetSocketAddress) $r5;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local> = $r6;

        $r7 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $r8 = virtualinvoke $r7.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r9 = (java.net.InetSocketAddress) $r8;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote> = $r9;

        $r10 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $i0 = virtualinvoke $r10.<java.net.Socket: int getSoTimeout()>();

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int _maxIdleTime> = $i0;

        goto label4;

     label3:
        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote> = null;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local> = null;

     label4:
        return;
    }

    protected void <init>(java.nio.channels.ByteChannel, int) throws java.io.IOException
    {
        java.net.Socket $r3, $r4, $r7, $r10, $r12;
        java.net.SocketAddress $r5, $r8;
        java.nio.channels.SocketChannel $r11;
        int i0, $i1;
        java.nio.channels.ByteChannel r2;
        boolean $z0;
        java.nio.ByteBuffer[] $r1;
        java.net.InetSocketAddress $r6, $r9;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        r2 := @parameter0: java.nio.channels.ByteChannel;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (java.nio.ByteBuffer)[2];

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.ByteBuffer[] _gather2> = $r1;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel> = r2;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int _maxIdleTime> = i0;

        $z0 = r2 instanceof java.nio.channels.SocketChannel;

        if $z0 == 0 goto label1;

        $r11 = (java.nio.channels.SocketChannel) r2;

        $r12 = virtualinvoke $r11.<java.nio.channels.SocketChannel: java.net.Socket socket()>();

        goto label2;

     label1:
        $r12 = null;

     label2:
        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket> = $r12;

        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r3 == null goto label3;

        $r4 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $r5 = virtualinvoke $r4.<java.net.Socket: java.net.SocketAddress getLocalSocketAddress()>();

        $r6 = (java.net.InetSocketAddress) $r5;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local> = $r6;

        $r7 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $r8 = virtualinvoke $r7.<java.net.Socket: java.net.SocketAddress getRemoteSocketAddress()>();

        $r9 = (java.net.InetSocketAddress) $r8;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote> = $r9;

        $r10 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $i1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int _maxIdleTime>;

        virtualinvoke $r10.<java.net.Socket: void setSoTimeout(int)>($i1);

        goto label4;

     label3:
        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote> = null;

        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local> = null;

     label4:
        return;
    }

    public boolean isBlocking()
    {
        java.nio.channels.SelectableChannel $r3;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.ByteChannel $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z0 = $r1 instanceof java.nio.channels.SelectableChannel;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $r3 = (java.nio.channels.SelectableChannel) $r2;

        $z1 = virtualinvoke $r3.<java.nio.channels.SelectableChannel: boolean isBlocking()>();

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    public boolean blockReadable(long) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        long l0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        l0 := @parameter0: long;

        return 1;
    }

    public boolean blockWritable(long) throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        long l0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        l0 := @parameter0: long;

        return 1;
    }

    public boolean isOpen()
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.ByteChannel $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z0 = interfaceinvoke $r1.<java.nio.channels.ByteChannel: boolean isOpen()>();

        return $z0;
    }

    protected final void shutdownChannelInput() throws java.io.IOException
    {
        java.lang.Throwable $r7;
        java.net.Socket $r4, $r5, $r6;
        java.lang.Object[] $r0, $r11;
        java.net.SocketException $r8;
        java.nio.channels.ByteChannel $r3;
        java.lang.String $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.io.nio.ChannelEndPoint r1;
        org.eclipse.jetty.util.log.Logger $r2, $r9, $r12;

        r1 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r2 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("ishut {}", $r0);

        r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _ishut> = 1;

        $r3 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z0 = interfaceinvoke $r3.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z0 == 0 goto label8;

        $r4 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r4 == null goto label8;

     label1:
        $r5 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $z1 = virtualinvoke $r5.<java.net.Socket: boolean isInputShutdown()>();

        if $z1 != 0 goto label2;

        $r6 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r6.<java.net.Socket: void shutdownInput()>();

     label2:
        $z2 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _oshut>;

        if $z2 == 0 goto label8;

        virtualinvoke r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

        goto label8;

     label3:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r10 = virtualinvoke $r8.<java.net.SocketException: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r10, $r11);

        $r12 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

     label4:
        $z4 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _oshut>;

        if $z4 == 0 goto label8;

        virtualinvoke r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

        goto label8;

     label5:
        $r7 := @caughtexception;

     label6:
        $z3 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _oshut>;

        if $z3 == 0 goto label7;

        virtualinvoke r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label7:
        throw $r7;

     label8:
        return;

        catch java.net.SocketException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void shutdownInput() throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void shutdownChannelInput()>();

        return;
    }

    protected final void shutdownChannelOutput() throws java.io.IOException
    {
        java.lang.Throwable $r7;
        java.net.Socket $r4, $r5, $r6;
        java.lang.Object[] $r0, $r11;
        java.net.SocketException $r8;
        java.nio.channels.ByteChannel $r3;
        java.lang.String $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.eclipse.jetty.io.nio.ChannelEndPoint r1;
        org.eclipse.jetty.util.log.Logger $r2, $r9, $r12;

        r1 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r2 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("oshut {}", $r0);

        r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _oshut> = 1;

        $r3 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z0 = interfaceinvoke $r3.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z0 == 0 goto label8;

        $r4 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r4 == null goto label8;

     label1:
        $r5 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $z1 = virtualinvoke $r5.<java.net.Socket: boolean isOutputShutdown()>();

        if $z1 != 0 goto label2;

        $r6 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        virtualinvoke $r6.<java.net.Socket: void shutdownOutput()>();

     label2:
        $z2 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _ishut>;

        if $z2 == 0 goto label8;

        virtualinvoke r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

        goto label8;

     label3:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r10 = virtualinvoke $r8.<java.net.SocketException: java.lang.String toString()>();

        $r11 = newarray (java.lang.Object)[0];

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r10, $r11);

        $r12 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r12.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

     label4:
        $z4 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _ishut>;

        if $z4 == 0 goto label8;

        virtualinvoke r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

        goto label8;

     label5:
        $r7 := @caughtexception;

     label6:
        $z3 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _ishut>;

        if $z3 == 0 goto label7;

        virtualinvoke r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: void close()>();

     label7:
        throw $r7;

     label8:
        return;

        catch java.net.SocketException from label1 to label2 with label3;
        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void shutdownOutput() throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void shutdownChannelOutput()>();

        return;
    }

    public boolean isOutputShutdown()
    {
        java.net.Socket $r2, $r3;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.ByteChannel $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $z0 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _oshut>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z1 = interfaceinvoke $r1.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $z2 = virtualinvoke $r3.<java.net.Socket: boolean isOutputShutdown()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public boolean isInputShutdown()
    {
        java.net.Socket $r2, $r3;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.ByteChannel $r1;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $z0 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _ishut>;

        if $z0 != 0 goto label1;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z1 = interfaceinvoke $r1.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z1 == 0 goto label1;

        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        $z2 = virtualinvoke $r3.<java.net.Socket: boolean isInputShutdown()>();

        if $z2 == 0 goto label2;

     label1:
        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        return $z3;
    }

    public void close() throws java.io.IOException
    {
        java.lang.Object[] $r0;
        org.eclipse.jetty.io.nio.ChannelEndPoint r1;
        java.nio.channels.ByteChannel $r3;
        org.eclipse.jetty.util.log.Logger $r2;

        r1 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r2 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        $r0 = newarray (java.lang.Object)[1];

        $r0[0] = r1;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("close {}", $r0);

        $r3 = r1.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        interfaceinvoke $r3.<java.nio.channels.ByteChannel: void close()>();

        return;
    }

    public int fill(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.lang.Throwable $r14, $r15;
        java.nio.ByteBuffer $r5;
        org.eclipse.jetty.io.nio.NIOBuffer r4;
        int $i0, $i1, $i2, $i3, i4, $i6, $i8;
        java.nio.channels.ByteChannel $r6, $r7, $r12, $r13;
        org.eclipse.jetty.io.Buffer r1, $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.io.IOException $r10, $r16;
        java.lang.Exception $r8;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        org.eclipse.jetty.util.log.Logger $r9, $r11;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        $z0 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean _ishut>;

        if $z0 == 0 goto label01;

        $i6 = (int) -1;

        return $i6;

     label01:
        $r2 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        i4 = 0;

        $z1 = $r2 instanceof org.eclipse.jetty.io.nio.NIOBuffer;

        if $z1 == 0 goto label21;

        r4 = (org.eclipse.jetty.io.nio.NIOBuffer) $r2;

        $r5 = interfaceinvoke r4.<org.eclipse.jetty.io.nio.NIOBuffer: java.nio.ByteBuffer getByteBuffer()>();

     label02:
        entermonitor $r5;

     label03:
        $i0 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $r6 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $i1 = interfaceinvoke $r6.<java.nio.channels.ByteChannel: int read(java.nio.ByteBuffer)>($r5);

        i4 = $i1;

     label04:
        $i2 = virtualinvoke $r5.<java.nio.ByteBuffer: int position()>();

        interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: void setPutIndex(int)>($i2);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        goto label07;

     label05:
        $r15 := @caughtexception;

     label06:
        $i3 = virtualinvoke $r5.<java.nio.ByteBuffer: int position()>();

        interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: void setPutIndex(int)>($i3);

        virtualinvoke $r5.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(0);

        throw $r15;

     label07:
        exitmonitor $r5;

     label08:
        goto label11;

     label09:
        $r14 := @caughtexception;

        exitmonitor $r5;

     label10:
        throw $r14;

     label11:
        if $i1 >= 0 goto label13;

        $z2 = virtualinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean isOpen()>();

        if $z2 == 0 goto label13;

        $z3 = virtualinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean isInputShutdown()>();

        if $z3 != 0 goto label12;

        virtualinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: void shutdownInput()>();

     label12:
        $z4 = virtualinvoke r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: boolean isOutputShutdown()>();

        if $z4 == 0 goto label13;

        $r7 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        interfaceinvoke $r7.<java.nio.channels.ByteChannel: void close()>();

     label13:
        goto label20;

     label14:
        $r10 := @caughtexception;

        $r11 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r11.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Throwable)>("Exception while filling", $r10);

     label15:
        $r12 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z5 = interfaceinvoke $r12.<java.nio.channels.ByteChannel: boolean isOpen()>();

        if $z5 == 0 goto label16;

        $r13 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        interfaceinvoke $r13.<java.nio.channels.ByteChannel: void close()>();

     label16:
        goto label18;

     label17:
        $r8 := @caughtexception;

        $r9 = <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG>;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void ignore(java.lang.Throwable)>($r8);

     label18:
        if i4 <= 0 goto label19;

        throw $r10;

     label19:
        $i8 = (int) -1;

        i4 = $i8;

     label20:
        goto label22;

     label21:
        $r16 = new java.io.IOException;

        specialinvoke $r16.<java.io.IOException: void <init>(java.lang.String)>("Not Implemented");

        throw $r16;

     label22:
        return i4;

        catch java.lang.Throwable from label03 to label04 with label05;
        catch java.lang.Throwable from label05 to label06 with label05;
        catch java.lang.Throwable from label03 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
        catch java.io.IOException from label02 to label13 with label14;
        catch java.lang.Exception from label15 to label16 with label17;
    }

    public int flush(org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.lang.Throwable $r13;
        byte[] $r2, $r4;
        org.eclipse.jetty.io.nio.RandomAccessFileBuffer $r8;
        java.nio.ByteBuffer $r5, $r10, $r11;
        org.eclipse.jetty.io.nio.NIOBuffer r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, i9;
        java.nio.channels.ByteChannel $r7, $r9, $r12;
        org.eclipse.jetty.io.Buffer r0, $r1;
        boolean $z0, $z1;
        java.io.IOException $r3;
        org.eclipse.jetty.io.nio.ChannelEndPoint r6;

        r6 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        $r1 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

        $z0 = $r1 instanceof org.eclipse.jetty.io.nio.NIOBuffer;

        if $z0 == 0 goto label07;

        r14 = (org.eclipse.jetty.io.nio.NIOBuffer) $r1;

        $r10 = interfaceinvoke r14.<org.eclipse.jetty.io.nio.NIOBuffer: java.nio.ByteBuffer getByteBuffer()>();

        $r11 = virtualinvoke $r10.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

     label01:
        $i6 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i6);

        $i7 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        virtualinvoke $r11.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i7);

        $r12 = r6.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $i8 = interfaceinvoke $r12.<java.nio.channels.ByteChannel: int write(java.nio.ByteBuffer)>($r11);

        i9 = $i8;

     label02:
        if $i8 <= 0 goto label06;

        interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int skip(int)>($i8);

        goto label06;

     label03:
        $r13 := @caughtexception;

     label04:
        if 0 <= 0 goto label05;

        interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int skip(int)>(0);

     label05:
        throw $r13;

     label06:
        goto label11;

     label07:
        $z1 = $r1 instanceof org.eclipse.jetty.io.nio.RandomAccessFileBuffer;

        if $z1 == 0 goto label08;

        $r8 = (org.eclipse.jetty.io.nio.RandomAccessFileBuffer) $r1;

        $r9 = r6.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $i3 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i4 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        $i5 = virtualinvoke $r8.<org.eclipse.jetty.io.nio.RandomAccessFileBuffer: int writeTo(java.nio.channels.WritableByteChannel,int,int)>($r9, $i3, $i4);

        i9 = $i5;

        if $i5 <= 0 goto label11;

        interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int skip(int)>($i5);

        goto label11;

     label08:
        $r2 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        if $r2 == null goto label10;

        $r4 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: byte[] array()>();

        $i0 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        $i1 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        $r5 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[],int,int)>($r4, $i0, $i1);

        $r7 = r6.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $i2 = interfaceinvoke $r7.<java.nio.channels.ByteChannel: int write(java.nio.ByteBuffer)>($r5);

        i9 = $i2;

        if $i2 <= 0 goto label09;

        interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int skip(int)>($i2);

     label09:
        goto label11;

     label10:
        $r3 = new java.io.IOException;

        specialinvoke $r3.<java.io.IOException: void <init>(java.lang.String)>("Not Implemented");

        throw $r3;

     label11:
        return i9;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
    }

    public int flush(org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer, org.eclipse.jetty.io.Buffer) throws java.io.IOException
    {
        java.nio.ByteBuffer $r7, $r9;
        org.eclipse.jetty.io.nio.NIOBuffer $r6, $r8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, i10;
        java.nio.channels.ByteChannel $r4;
        org.eclipse.jetty.io.Buffer r0, r1, r2, r5, $r10, $r11;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.io.nio.ChannelEndPoint r3;

        r3 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        r0 := @parameter0: org.eclipse.jetty.io.Buffer;

        r2 := @parameter1: org.eclipse.jetty.io.Buffer;

        r5 := @parameter2: org.eclipse.jetty.io.Buffer;

        i10 = 0;

        if r0 != null goto label01;

        $r10 = null;

        goto label02;

     label01:
        $r10 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

     label02:
        r1 = $r10;

        if r2 != null goto label03;

        $r11 = null;

        goto label04;

     label03:
        $r11 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: org.eclipse.jetty.io.Buffer buffer()>();

     label04:
        $r4 = r3.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $z0 = $r4 instanceof java.nio.channels.GatheringByteChannel;

        if $z0 == 0 goto label05;

        if r0 == null goto label05;

        $i8 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i8 == 0 goto label05;

        $z1 = r1 instanceof org.eclipse.jetty.io.nio.NIOBuffer;

        if $z1 == 0 goto label05;

        if r2 == null goto label05;

        $i9 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i9 == 0 goto label05;

        $z2 = $r11 instanceof org.eclipse.jetty.io.nio.NIOBuffer;

        if $z2 == 0 goto label05;

        $r6 = (org.eclipse.jetty.io.nio.NIOBuffer) r1;

        $r7 = interfaceinvoke $r6.<org.eclipse.jetty.io.nio.NIOBuffer: java.nio.ByteBuffer getByteBuffer()>();

        $r8 = (org.eclipse.jetty.io.nio.NIOBuffer) $r11;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.io.nio.NIOBuffer: java.nio.ByteBuffer getByteBuffer()>();

        i10 = virtualinvoke r3.<org.eclipse.jetty.io.nio.ChannelEndPoint: int gatheringFlush(org.eclipse.jetty.io.Buffer,java.nio.ByteBuffer,org.eclipse.jetty.io.Buffer,java.nio.ByteBuffer)>(r0, $r7, r2, $r9);

        goto label11;

     label05:
        if r0 == null goto label06;

        $i7 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i7 <= 0 goto label06;

        i10 = virtualinvoke r3.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r0);

     label06:
        if r0 == null goto label07;

        $i6 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i6 != 0 goto label08;

     label07:
        if r2 == null goto label08;

        $i4 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i4 <= 0 goto label08;

        $i5 = virtualinvoke r3.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r2);

        i10 = i10 + $i5;

     label08:
        if r0 == null goto label09;

        $i3 = interfaceinvoke r0.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i3 != 0 goto label11;

     label09:
        if r2 == null goto label10;

        $i2 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i2 != 0 goto label11;

     label10:
        if r5 == null goto label11;

        $i0 = interfaceinvoke r5.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i0 <= 0 goto label11;

        $i1 = virtualinvoke r3.<org.eclipse.jetty.io.nio.ChannelEndPoint: int flush(org.eclipse.jetty.io.Buffer)>(r5);

        i10 = i10 + $i1;

     label11:
        return i10;
    }

    protected int gatheringFlush(org.eclipse.jetty.io.Buffer, java.nio.ByteBuffer, org.eclipse.jetty.io.Buffer, java.nio.ByteBuffer) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        long $l4;
        java.nio.ByteBuffer $r1, $r3, r11, r12;
        int $i0, $i1, $i2, $i3, i5, $i6, $i7;
        java.nio.channels.ByteChannel $r7;
        org.eclipse.jetty.io.Buffer r2, r4;
        java.nio.ByteBuffer[] $r5, $r6, $r8;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.GatheringByteChannel $r9;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        r2 := @parameter0: org.eclipse.jetty.io.Buffer;

        r11 := @parameter1: java.nio.ByteBuffer;

        r4 := @parameter2: org.eclipse.jetty.io.Buffer;

        r12 := @parameter3: java.nio.ByteBuffer;

        entermonitor r0;

     label1:
        $r1 = virtualinvoke r11.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        $i0 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i0);

        $i1 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        virtualinvoke $r1.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i1);

        $r3 = virtualinvoke r12.<java.nio.ByteBuffer: java.nio.ByteBuffer asReadOnlyBuffer()>();

        $i2 = interfaceinvoke r4.<org.eclipse.jetty.io.Buffer: int getIndex()>();

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer position(int)>($i2);

        $i3 = interfaceinvoke r4.<org.eclipse.jetty.io.Buffer: int putIndex()>();

        virtualinvoke $r3.<java.nio.ByteBuffer: java.nio.Buffer limit(int)>($i3);

        $r5 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.ByteBuffer[] _gather2>;

        $r5[0] = $r1;

        $r6 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.ByteBuffer[] _gather2>;

        $r6[1] = $r3;

        $r7 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        $r9 = (java.nio.channels.GatheringByteChannel) $r7;

        $r8 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.ByteBuffer[] _gather2>;

        $l4 = interfaceinvoke $r9.<java.nio.channels.GatheringByteChannel: long write(java.nio.ByteBuffer[])>($r8);

        i5 = (int) $l4;

        $i6 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if i5 <= $i6 goto label2;

        interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: void clear()>();

        $i7 = i5 - $i6;

        interfaceinvoke r4.<org.eclipse.jetty.io.Buffer: int skip(int)>($i7);

        goto label3;

     label2:
        if i5 <= 0 goto label3;

        interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int skip(int)>(i5);

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r10 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r10;

     label7:
        return i5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.nio.channels.ByteChannel getChannel()
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.ByteChannel $r1;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        return $r1;
    }

    public java.lang.String getLocalAddr()
    {
        java.net.Socket $r1;
        java.net.InetSocketAddress $r2, $r3, $r5, $r7;
        java.net.InetAddress $r4, $r6, $r8;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $r4 = virtualinvoke $r3.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        if $r4 == null goto label2;

        $r5 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $r6 = virtualinvoke $r5.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $z0 = virtualinvoke $r6.<java.net.InetAddress: boolean isAnyLocalAddress()>();

        if $z0 == 0 goto label3;

     label2:
        return "0.0.0.0";

     label3:
        $r7 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $r8 = virtualinvoke $r7.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r9 = virtualinvoke $r8.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r9;
    }

    public java.lang.String getLocalHost()
    {
        java.net.Socket $r1;
        java.net.InetSocketAddress $r2, $r3, $r5, $r7;
        java.net.InetAddress $r4, $r6, $r8;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.lang.String $r9;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        if $r2 == null goto label2;

        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $r4 = virtualinvoke $r3.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        if $r4 == null goto label2;

        $r5 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $r6 = virtualinvoke $r5.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $z0 = virtualinvoke $r6.<java.net.InetAddress: boolean isAnyLocalAddress()>();

        if $z0 == 0 goto label3;

     label2:
        return "0.0.0.0";

     label3:
        $r7 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $r8 = virtualinvoke $r7.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r9 = virtualinvoke $r8.<java.net.InetAddress: java.lang.String getCanonicalHostName()>();

        return $r9;
    }

    public int getLocalPort()
    {
        java.net.Socket $r1;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        int $i0, $i2;
        java.net.InetSocketAddress $r2, $r3;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        if $r2 != null goto label2;

        $i2 = (int) -1;

        return $i2;

     label2:
        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _local>;

        $i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int getPort()>();

        return $i0;
    }

    public java.lang.String getRemoteAddr()
    {
        java.net.InetAddress $r4;
        java.net.Socket $r1;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.lang.String $r5;
        java.net.InetSocketAddress $r2, $r3;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote>;

        $r4 = virtualinvoke $r3.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getHostAddress()>();

        return $r5;
    }

    public java.lang.String getRemoteHost()
    {
        java.net.InetAddress $r4;
        java.net.Socket $r1;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.lang.String $r5;
        java.net.InetSocketAddress $r2, $r3;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote>;

        if $r2 != null goto label2;

        return null;

     label2:
        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote>;

        $r4 = virtualinvoke $r3.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();

        $r5 = virtualinvoke $r4.<java.net.InetAddress: java.lang.String getCanonicalHostName()>();

        return $r5;
    }

    public int getRemotePort()
    {
        java.net.Socket $r1;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        int $i0, $i2;
        java.net.InetSocketAddress $r2, $r3;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote>;

        if $r2 != null goto label2;

        $i2 = (int) -1;

        $i0 = $i2;

        goto label3;

     label2:
        $r3 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.InetSocketAddress _remote>;

        $i0 = virtualinvoke $r3.<java.net.InetSocketAddress: int getPort()>();

     label3:
        return $i0;
    }

    public java.lang.Object getTransport()
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        java.nio.channels.ByteChannel $r1;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.nio.channels.ByteChannel _channel>;

        return $r1;
    }

    public void flush() throws java.io.IOException
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        return;
    }

    public int getMaxIdleTime()
    {
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        int $i0;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        $i0 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int _maxIdleTime>;

        return $i0;
    }

    public void setMaxIdleTime(int) throws java.io.IOException
    {
        java.net.Socket $r1, $r2;
        org.eclipse.jetty.io.nio.ChannelEndPoint r0;
        int i0, $i1, $i2;

        r0 := @this: org.eclipse.jetty.io.nio.ChannelEndPoint;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if $r1 == null goto label3;

        $i1 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int _maxIdleTime>;

        if i0 == $i1 goto label3;

        $r2 = r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: java.net.Socket _socket>;

        if i0 <= 0 goto label1;

        $i2 = i0;

        goto label2;

     label1:
        $i2 = 0;

     label2:
        virtualinvoke $r2.<java.net.Socket: void setSoTimeout(int)>($i2);

     label3:
        r0.<org.eclipse.jetty.io.nio.ChannelEndPoint: int _maxIdleTime> = i0;

        return;
    }

    static void <clinit>()
    {
        org.eclipse.jetty.util.log.Logger $r0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/io/nio/ChannelEndPoint;");

        <org.eclipse.jetty.io.nio.ChannelEndPoint: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        return;
    }
}
