class org.waveprotocol.wave.client.editor.EditorImpl$10 extends org.waveprotocol.wave.client.editor.selection.content.AggressiveSelectionHelper
{
    final org.waveprotocol.wave.client.editor.EditorImpl this$0;

    void <init>(org.waveprotocol.wave.client.editor.EditorImpl, org.waveprotocol.wave.client.editor.selection.html.HtmlSelectionHelper, org.waveprotocol.wave.client.editor.impl.NodeManager, org.waveprotocol.wave.client.editor.content.ContentView, org.waveprotocol.wave.model.document.indexed.LocationMapper, org.waveprotocol.wave.client.editor.content.CMutableDocument)
    {
        org.waveprotocol.wave.client.editor.EditorImpl$10 r0;
        org.waveprotocol.wave.client.editor.content.ContentView r4;
        org.waveprotocol.wave.client.editor.EditorImpl r1;
        org.waveprotocol.wave.client.editor.selection.html.HtmlSelectionHelper r2;
        org.waveprotocol.wave.client.editor.impl.NodeManager r3;
        org.waveprotocol.wave.client.editor.content.CMutableDocument r6;
        org.waveprotocol.wave.model.document.indexed.LocationMapper r5;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$10;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.EditorImpl;

        r2 := @parameter1: org.waveprotocol.wave.client.editor.selection.html.HtmlSelectionHelper;

        r3 := @parameter2: org.waveprotocol.wave.client.editor.impl.NodeManager;

        r4 := @parameter3: org.waveprotocol.wave.client.editor.content.ContentView;

        r5 := @parameter4: org.waveprotocol.wave.model.document.indexed.LocationMapper;

        r6 := @parameter5: org.waveprotocol.wave.client.editor.content.CMutableDocument;

        r0.<org.waveprotocol.wave.client.editor.EditorImpl$10: org.waveprotocol.wave.client.editor.EditorImpl this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.selection.content.AggressiveSelectionHelper: void <init>(org.waveprotocol.wave.client.editor.selection.html.HtmlSelectionHelper,org.waveprotocol.wave.client.editor.impl.NodeManager,org.waveprotocol.wave.client.editor.content.ContentView,org.waveprotocol.wave.model.document.indexed.LocationMapper,org.waveprotocol.wave.client.editor.content.CMutableDocument)>(r2, r3, r4, r5, r6);

        return;
    }

    protected void flushForUnextractedText()
    {
        org.waveprotocol.wave.client.editor.EditorImpl$10 r0;
        org.waveprotocol.wave.client.editor.EditorImpl $r1;

        r0 := @this: org.waveprotocol.wave.client.editor.EditorImpl$10;

        $r1 = r0.<org.waveprotocol.wave.client.editor.EditorImpl$10: org.waveprotocol.wave.client.editor.EditorImpl this$0>;

        virtualinvoke $r1.<org.waveprotocol.wave.client.editor.EditorImpl: void flushSynchronous()>();

        return;
    }
}
