public final class org.apache.regexp.CharacterArrayCharacterIterator extends java.lang.Object implements org.apache.regexp.CharacterIterator
{
    private final char[] src;
    private final int off;
    private final int len;

    public void <init>(char[], int, int)
    {
        org.apache.regexp.CharacterArrayCharacterIterator r0;
        int i0, i1;
        char[] r1;

        r0 := @this: org.apache.regexp.CharacterArrayCharacterIterator;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.regexp.CharacterArrayCharacterIterator: char[] src> = r1;

        r0.<org.apache.regexp.CharacterArrayCharacterIterator: int off> = i0;

        r0.<org.apache.regexp.CharacterArrayCharacterIterator: int len> = i1;

        return;
    }

    public java.lang.String substring(int, int)
    {
        java.lang.IndexOutOfBoundsException $r1, $r10;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r6, $r11, $r12, $r13, $r14, $r15;
        int i0, $i1, i2, $i3, $i4, $i5, $i6;
        java.lang.String $r7, $r8, $r16;
        org.apache.regexp.CharacterArrayCharacterIterator r0;
        char[] $r9;

        r0 := @this: org.apache.regexp.CharacterArrayCharacterIterator;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        $i1 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: int len>;

        if i0 <= $i1 goto label1;

        $r10 = new java.lang.IndexOutOfBoundsException;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("endIndex=");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; sequence size=");

        $i6 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: int len>;

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i6);

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label1:
        if i2 < 0 goto label2;

        if i2 <= i0 goto label3;

     label2:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("beginIndex=");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("; endIndex=");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7);

        throw $r1;

     label3:
        $r8 = new java.lang.String;

        $r9 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: char[] src>;

        $i3 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: int off>;

        $i5 = $i3 + i2;

        $i4 = i0 - i2;

        specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>($r9, $i5, $i4);

        return $r8;
    }

    public java.lang.String substring(int)
    {
        org.apache.regexp.CharacterArrayCharacterIterator r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.apache.regexp.CharacterArrayCharacterIterator;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: int len>;

        $r1 = virtualinvoke r0.<org.apache.regexp.CharacterArrayCharacterIterator: java.lang.String substring(int,int)>(i0, $i1);

        return $r1;
    }

    public char charAt(int)
    {
        org.apache.regexp.CharacterArrayCharacterIterator r0;
        int i0, $i1, $i2;
        char[] $r1;
        char $c3;

        r0 := @this: org.apache.regexp.CharacterArrayCharacterIterator;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: char[] src>;

        $i1 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: int off>;

        $i2 = $i1 + i0;

        $c3 = $r1[$i2];

        return $c3;
    }

    public boolean isEnd(int)
    {
        org.apache.regexp.CharacterArrayCharacterIterator r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.regexp.CharacterArrayCharacterIterator;

        i0 := @parameter0: int;

        $i1 = r0.<org.apache.regexp.CharacterArrayCharacterIterator: int len>;

        if i0 < $i1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
