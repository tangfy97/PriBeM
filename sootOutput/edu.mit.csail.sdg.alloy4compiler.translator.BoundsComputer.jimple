final class edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer extends java.lang.Object
{
    private final edu.mit.csail.sdg.alloy4.A4Reporter rep;
    private final edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol;
    private final kodkod.instance.TupleFactory factory;
    private final edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer sc;
    private final java.util.Map ub;
    private final java.util.Map lb;

    private kodkod.instance.TupleSet computeLowerBound(java.util.List, edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r9, $r10;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r1, r16;
        int $i0, $i1, $i2, $i3, i4, $i6;
        kodkod.instance.TupleFactory $r3;
        kodkod.instance.TupleSet $r4, $r7, $r15;
        boolean $z0, $z1, $z2;
        edu.mit.csail.sdg.alloy4.SafeList $r5;
        kodkod.instance.Tuple r13;
        java.util.Iterator $r6;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r0;
        java.util.List r11;
        java.lang.Object $r12, $r14;
        edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer $r2, $r8;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r11 := @parameter0: java.util.List;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer sc>;

        $i0 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        $r3 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r4 = virtualinvoke $r3.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(1);

        $r5 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r6 = virtualinvoke $r5.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r16 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r14;

        $r15 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleSet computeLowerBound(java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r11, r16);

        virtualinvoke $r4.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r15);

        goto label1;

     label2:
        $r7 = virtualinvoke $r4.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r8 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer sc>;

        $z1 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean isTopLevel()>();

        if $z2 == 0 goto label6;

     label3:
        $i1 = virtualinvoke $r7.<kodkod.instance.TupleSet: int size()>();

        i4 = $i0 - $i1;

     label4:
        if i4 <= 0 goto label6;

        $i2 = interfaceinvoke r11.<java.util.List: int size()>();

        $i3 = $i2 - 1;

        $r12 = interfaceinvoke r11.<java.util.List: java.lang.Object remove(int)>($i3);

        r13 = (kodkod.instance.Tuple) $r12;

        if $z1 == 0 goto label5;

        virtualinvoke $r4.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r13);

     label5:
        virtualinvoke $r7.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>(r13);

        $i6 = (int) -1;

        i4 = i4 + $i6;

        goto label4;

     label6:
        $r9 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map lb>;

        interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r4);

        $r10 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map ub>;

        interfaceinvoke $r10.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r7);

        return $r4;
    }

    private void computeUpperBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r2, $r12, $r15, $r19;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r1, r22, r23;
        int $i0, $i1;
        kodkod.instance.TupleSet $r4, $r5, $r14, $r17;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.SafeList $r6, $r8;
        java.util.Iterator $r7, $r9;
        java.util.Collection $r21;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r0;
        java.lang.Object $r3, $r10, $r13, $r16, $r18, $r20;
        edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer $r11;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map ub>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (kodkod.instance.TupleSet) $r3;

        $r5 = virtualinvoke $r4.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r6 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r18 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r22 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r18;

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map lb>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r22);

        $r21 = (java.util.Collection) $r20;

        virtualinvoke $r5.<kodkod.instance.TupleSet: boolean removeAll(java.util.Collection)>($r21);

        goto label1;

     label2:
        $r8 = virtualinvoke r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r9 = virtualinvoke $r8.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r23 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r10;

        $r11 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer sc>;

        $i0 = virtualinvoke $r11.<edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r23);

        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map lb>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        $r14 = (kodkod.instance.TupleSet) $r13;

        $i1 = virtualinvoke $r14.<kodkod.instance.TupleSet: int size()>();

        if $i0 <= $i1 goto label4;

        $r15 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map ub>;

        $r16 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>(r23);

        $r17 = (kodkod.instance.TupleSet) $r16;

        virtualinvoke $r17.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r5);

     label4:
        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: void computeUpperBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r23);

        goto label3;

     label5:
        return;
    }

    private kodkod.ast.Expression allocatePrimSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r4, $r8;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig r0, r23, r37;
        boolean $z0, $z1;
        edu.mit.csail.sdg.alloy4.SafeList $r1, $r13;
        kodkod.ast.Expression $r26, $r31, $r33, r36;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r3;
        edu.mit.csail.sdg.alloy4.Pos $r12, $r35;
        java.lang.StringBuilder $r15, $r18, $r19;
        kodkod.ast.Relation $r21;
        java.lang.String $r17, $r20, $r28;
        edu.mit.csail.sdg.alloy4compiler.translator.A4Solution $r16, $r24, $r25, $r29, $r32, $r38;
        kodkod.instance.TupleSet $r6, $r7, $r10, $r11, $r27;
        java.util.Iterator $r2, $r14;
        kodkod.ast.Formula $r34;
        java.lang.Object $r5, $r9, $r22, $r30;

        r3 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        r36 = null;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r2 = virtualinvoke $r1.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r30 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r37 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r30;

        $r31 = specialinvoke r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression allocatePrimSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>(r37);

        if r36 != null goto label2;

        r36 = $r31;

        goto label1;

     label2:
        $r32 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r33 = virtualinvoke r36.<kodkod.ast.Expression: kodkod.ast.Expression intersection(kodkod.ast.Expression)>($r31);

        $r34 = virtualinvoke $r33.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        $r35 = r37.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isSubsig>;

        virtualinvoke $r32.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r34, $r35);

        r36 = virtualinvoke r36.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r31);

        goto label1;

     label3:
        $r4 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map lb>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r6 = (kodkod.instance.TupleSet) $r5;

        $r7 = virtualinvoke $r6.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        $r8 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map ub>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.lang.Object get(java.lang.Object)>(r0);

        $r10 = (kodkod.instance.TupleSet) $r9;

        $r11 = virtualinvoke $r10.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        if r36 != null goto label4;

        $r29 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r28 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        r36 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r28, $r7, $r11);

        goto label7;

     label4:
        $r12 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isAbstract>;

        if $r12 != null goto label7;

        $r13 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r14 = virtualinvoke $r13.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r22 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r23 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r22;

        $r25 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r24 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r26 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r23);

        $r27 = virtualinvoke $r25.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(0, $r26, 0);

        virtualinvoke $r7.<kodkod.instance.TupleSet: boolean removeAll(java.util.Collection)>($r27);

        virtualinvoke $r11.<kodkod.instance.TupleSet: boolean removeAll(java.util.Collection)>($r27);

        goto label5;

     label6:
        $r16 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r17 = r0.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" remainder");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        $r21 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r20, $r7, $r11);

        r36 = virtualinvoke r36.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r21);

     label7:
        $r38 = r3.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        virtualinvoke $r38.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r0, r36);

        return r36;
    }

    private kodkod.ast.Expression allocateSubsetSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.A4Reporter $r9;
        boolean $z0, $z1, $z2;
        kodkod.ast.Expression $r3, $r30, r31, $r32;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r0;
        edu.mit.csail.sdg.alloy4.Pos $r22;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r13, $r14;
        kodkod.ast.Relation $r18;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig r1, $r26;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r25;
        java.lang.String $r15, $r16;
        edu.mit.csail.sdg.alloy4compiler.translator.A4Solution $r2, $r17, $r19, $r20, $r23, $r27, $r29;
        kodkod.instance.TupleFactory $r4;
        kodkod.instance.TupleSet $r5, $r28;
        edu.mit.csail.sdg.alloy4.ConstList $r6;
        java.util.Iterator $r7;
        kodkod.ast.Formula $r21;
        java.lang.Object $r24;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        r31 = $r3;

        if $r3 == null goto label1;

        $r30 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        if $r3 == $r30 goto label1;

        return $r3;

     label1:
        $r4 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r5 = virtualinvoke $r4.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(1);

        $r6 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.ConstList parents>;

        $r7 = virtualinvoke $r6.<edu.mit.csail.sdg.alloy4.ConstList: java.util.Iterator iterator()>();

     label2:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r24 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r25 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r24;

        $z1 = r25 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z1 == 0 goto label3;

        $r29 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r32 = virtualinvoke $r29.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r25);

        goto label4;

     label3:
        $r26 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) r25;

        $r32 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression allocateSubsetSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig)>($r26);

     label4:
        $r27 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r28 = virtualinvoke $r27.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r32, 0);

        virtualinvoke $r5.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r28);

        if r31 != null goto label5;

        r31 = $r32;

        goto label6;

     label5:
        r31 = virtualinvoke r31.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r32);

     label6:
        goto label2;

     label7:
        $z0 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: boolean exact>;

        if $z0 == 0 goto label8;

        $r23 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        virtualinvoke $r23.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r1, r31);

        return r31;

     label8:
        $r9 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep>;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r15);

        $r17 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r16 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: java.lang.String label>;

        $r18 = virtualinvoke $r17.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r16, null, $r5);

        $r19 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        virtualinvoke $r19.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r1, $r18);

        $r20 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r21 = virtualinvoke $r18.<kodkod.ast.Relation: kodkod.ast.Formula in(kodkod.ast.Expression)>(r31);

        $r22 = r1.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.Pos isSubset>;

        virtualinvoke $r20.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r21, $r22);

        return $r18;
    }

    private kodkod.ast.Formula size(edu.mit.csail.sdg.alloy4compiler.ast.Sig, int, boolean)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r1;
        int i0, $i2;
        edu.mit.csail.sdg.alloy4compiler.translator.A4Solution $r2;
        boolean z0;
        kodkod.ast.Formula $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r14, $r15, $r16, $r17, r18;
        kodkod.ast.Expression $r3, $r13, r20;
        kodkod.ast.Decl $r12;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r0;
        kodkod.ast.Decls r19;
        kodkod.ast.Variable $r11;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        i0 := @parameter1: int;

        z0 := @parameter2: boolean;

        $r2 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r3 = virtualinvoke $r2.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r1);

        if i0 > 0 goto label01;

        $r15 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        return $r15;

     label01:
        if i0 != 1 goto label04;

        if z0 == 0 goto label02;

        $r16 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula one()>();

        goto label03;

     label02:
        $r16 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula lone()>();

     label03:
        return $r16;

     label04:
        if z0 == 0 goto label05;

        $r17 = <kodkod.ast.Formula: kodkod.ast.Formula TRUE>;

        goto label06;

     label05:
        $r17 = null;

     label06:
        r18 = $r17;

        r19 = null;

        r20 = null;

     label07:
        if i0 <= 0 goto label13;

        $i2 = (int) -1;

        i0 = i0 + $i2;

        $r11 = staticinvoke <kodkod.ast.Variable: kodkod.ast.Variable unary(java.lang.String)>("");

        $r12 = virtualinvoke $r11.<kodkod.ast.Variable: kodkod.ast.Decl oneOf(kodkod.ast.Expression)>($r3);

        if r19 != null goto label08;

        r19 = $r12;

        goto label09;

     label08:
        r19 = virtualinvoke $r12.<kodkod.ast.Decl: kodkod.ast.Decls and(kodkod.ast.Decls)>(r19);

     label09:
        if r20 != null goto label10;

        r20 = $r11;

        goto label12;

     label10:
        if r18 == null goto label11;

        $r13 = virtualinvoke $r11.<kodkod.ast.Variable: kodkod.ast.Expression intersection(kodkod.ast.Expression)>(r20);

        $r14 = virtualinvoke $r13.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        r18 = virtualinvoke $r14.<kodkod.ast.Formula: kodkod.ast.Formula and(kodkod.ast.Formula)>(r18);

     label11:
        r20 = virtualinvoke $r11.<kodkod.ast.Variable: kodkod.ast.Expression union(kodkod.ast.Expression)>(r20);

     label12:
        goto label07;

     label13:
        if r18 == null goto label14;

        $r8 = virtualinvoke r20.<kodkod.ast.Expression: kodkod.ast.Formula eq(kodkod.ast.Expression)>($r3);

        $r9 = virtualinvoke $r8.<kodkod.ast.Formula: kodkod.ast.Formula and(kodkod.ast.Formula)>(r18);

        $r10 = virtualinvoke $r9.<kodkod.ast.Formula: kodkod.ast.Formula forSome(kodkod.ast.Decls)>(r19);

        return $r10;

     label14:
        $r4 = virtualinvoke $r3.<kodkod.ast.Expression: kodkod.ast.Formula no()>();

        $r5 = virtualinvoke r20.<kodkod.ast.Expression: kodkod.ast.Formula eq(kodkod.ast.Expression)>($r3);

        $r6 = virtualinvoke $r5.<kodkod.ast.Formula: kodkod.ast.Formula forSome(kodkod.ast.Decls)>(r19);

        $r7 = virtualinvoke $r4.<kodkod.ast.Formula: kodkod.ast.Formula or(kodkod.ast.Formula)>($r6);

        return $r7;
    }

    private kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)
    {
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r30, $r31, $r32, $r33;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r17, r34, $r37;
        int[] $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r0, $r1;
        boolean $z0, $z1, $z2, $z3, $z4;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field $r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary r35;
        kodkod.ast.Expression $r5, $r8, $r9, $r10, $r14, $r18, $r23, $r24, $r25, $r38;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r2;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary r36;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant $r11;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig $r6;
        int $i0, $i1;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r15, $r16, $r19, $r20, $r21, $r22, $r26, $r27, $r28, $r29;
        edu.mit.csail.sdg.alloy4compiler.translator.A4Solution $r4, $r7;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op $r12;

        r2 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r34 := @parameter0: edu.mit.csail.sdg.alloy4compiler.ast.Expr;

     label01:
        $z0 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z0 == 0 goto label03;

        r35 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) r34;

        $r31 = r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r30 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op NOOP>;

        if $r31 == $r30 goto label02;

        $r33 = r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r32 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if $r33 == $r32 goto label02;

        goto label03;

     label02:
        r34 = r35.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        goto label01;

     label03:
        $z1 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z1 == 0 goto label09;

        r36 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) r34;

        $r16 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r15 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r16 == $r15 goto label04;

        $r27 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r26 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        if $r27 == $r26 goto label04;

        $r29 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r28 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op JOIN>;

        if $r29 != $r28 goto label09;

     label04:
        $r37 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r38 = specialinvoke r2.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r37);

        if $r38 != null goto label05;

        return null;

     label05:
        $r17 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r18 = specialinvoke r2.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r17);

        if $r18 != null goto label06;

        return null;

     label06:
        $r20 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r19 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r20 != $r19 goto label07;

        $r25 = virtualinvoke $r38.<kodkod.ast.Expression: kodkod.ast.Expression product(kodkod.ast.Expression)>($r18);

        return $r25;

     label07:
        $r22 = r36.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r21 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op PLUS>;

        if $r22 != $r21 goto label08;

        $r24 = virtualinvoke $r38.<kodkod.ast.Expression: kodkod.ast.Expression union(kodkod.ast.Expression)>($r18);

        return $r24;

     label08:
        $r23 = virtualinvoke $r38.<kodkod.ast.Expression: kodkod.ast.Expression join(kodkod.ast.Expression)>($r18);

        return $r23;

     label09:
        $z2 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant;

        if $z2 == 0 goto label11;

        $r13 = <edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer$1: int[] $SwitchMap$edu$mit$csail$sdg$alloy4compiler$ast$ExprConstant$Op>;

        $r11 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant) r34;

        $r12 = $r11.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant: edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op op>;

        $i0 = virtualinvoke $r12.<edu.mit.csail.sdg.alloy4compiler.ast.ExprConstant$Op: int ordinal()>();

        $i1 = $r13[$i0];

        lookupswitch($i1)
        {
            case 1: goto label10;
            default: goto label11;
        };

     label10:
        $r14 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        return $r14;

     label11:
        $r0 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        if r34 != $r0 goto label12;

        $r10 = <kodkod.ast.Expression: kodkod.ast.Expression NONE>;

        return $r10;

     label12:
        $r1 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        if r34 != $r1 goto label13;

        $r9 = <kodkod.ast.Expression: kodkod.ast.Expression INTS>;

        return $r9;

     label13:
        $z3 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig;

        if $z3 == 0 goto label14;

        $r7 = r2.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r6 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r34;

        $r8 = virtualinvoke $r7.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>($r6);

        return $r8;

     label14:
        $z4 = r34 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field;

        if $z4 == 0 goto label15;

        $r4 = r2.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol>;

        $r3 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) r34;

        $r5 = virtualinvoke $r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field)>($r3);

        return $r5;

     label15:
        return null;
    }

    private void <init>(edu.mit.csail.sdg.alloy4.A4Reporter, edu.mit.csail.sdg.alloy4compiler.translator.A4Solution, edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer, java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.util.LinkedHashMap $r256, $r257;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r98, $r102, $r122, $r123, $r127, $r128, $r132, $r133, $r141, $r142, $r147, $r148, $r150, $r151, $r159, $r162, $r163, $r166, $r167;
        edu.mit.csail.sdg.alloy4.A4Reporter r6;
        kodkod.ast.Expression $r18, $r88, $r92, $r103, $r115, $r116, $r168, $r216, $r253;
        edu.mit.csail.sdg.alloy4.Pos $r21, $r22, $r33, $r51, $r60, $r62, $r71, $r73, $r75, $r156, $r255;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, i22, $i24;
        kodkod.instance.TupleFactory $r5, $r7, $r76, $r170, $r171, $r218, $r219, $r231;
        edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer r3;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op $r99, $r100, $r138, $r139;
        java.util.ArrayList $r258;
        java.lang.String $r31, $r40, $r49, $r58, $r69, $r81, $r84, $r86, $r106, $r109, $r114, $r177, $r180, $r182, $r185, $r188, $r190, $r194, $r197, $r202, $r205, $r208, $r213;
        edu.mit.csail.sdg.alloy4compiler.translator.A4Solution r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, z26, $z27, $z28, $z29, $z30, $z31;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r241, r242, r248;
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer r0;
        java.util.List $r78, r250;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary $r143, $r146, $r149;
        java.lang.Iterable r10;
        edu.mit.csail.sdg.alloy4.SafeList $r117, $r118, $r119, $r120, $r124, $r129, $r152, $r154, $r173, $r174, $r246;
        java.lang.StringBuilder $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r35, $r36, $r37, $r38, $r39, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r53, $r54, $r55, $r56, $r57, $r64, $r65, $r66, $r67, $r68, $r82, $r83, $r85, $r105, $r107, $r108, $r110, $r111, $r112, $r113, $r178, $r179, $r181, $r186, $r187, $r189, $r193, $r195, $r196, $r198, $r199, $r200, $r201, $r204, $r206, $r207, $r209, $r210, $r211, $r212, $r259, $r260, $r261, $r262, $r263, $r264, $r265, $r266, $r267, $r268, $r269;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig $r223;
        java.lang.Object[] $r230;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op $r134, $r135;
        edu.mit.csail.sdg.alloy4.ConstList $r136, $r157, $r160, $r164;
        kodkod.instance.Tuple $r233;
        kodkod.ast.Formula $r32, $r50, $r59, $r61, $r70;
        edu.mit.csail.sdg.alloy4compiler.ast.Decl $r97, $r101, $r126, $r131;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprList r239;
        kodkod.ast.Relation $r87, $r183, $r191;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r234, r235, r236, r237, r238, r254;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op $r144, $r145;
        kodkod.instance.TupleSet $r19, $r20, $r77, $r93, $r169, $r172, $r217, $r220, $r221, r243, r244, r245, r251;
        java.lang.Object $r17, $r72, $r74, $r89, $r91, $r121, $r125, $r130, $r153, $r155, $r158, $r161, $r165, $r214, $r222, $r224, $r226, $r228, $r232;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary $r137, $r140;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r94, r215, $r225, $r227, $r229, r240, r252;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r95, $r96, $r249;
        kodkod.instance.Universe $r8;
        java.util.Iterator $r11, $r12, $r13, $r14, $r15, $r16, $r79, $r90, $r175, $r247;

        r0 := @this: edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        r6 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r4 := @parameter1: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution;

        r3 := @parameter2: edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer;

        r10 := @parameter3: java.lang.Iterable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r256 = new java.util.LinkedHashMap;

        specialinvoke $r256.<java.util.LinkedHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map ub> = $r256;

        $r257 = new java.util.LinkedHashMap;

        specialinvoke $r257.<java.util.LinkedHashMap: void <init>()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: java.util.Map lb> = $r257;

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer sc> = r3;

        $r5 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleFactory getFactory()>();

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory> = $r5;

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4.A4Reporter rep> = r6;

        r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution sol> = r4;

        $r7 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r8 = virtualinvoke $r7.<kodkod.instance.TupleFactory: kodkod.instance.Universe universe()>();

        $i0 = virtualinvoke $r8.<kodkod.instance.Universe: int size()>();

        $r258 = new java.util.ArrayList;

        specialinvoke $r258.<java.util.ArrayList: void <init>(int)>($i0);

        i22 = $i0 - 1;

     label01:
        if i22 < 0 goto label02;

        $r231 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r230 = newarray (java.lang.Object)[1];

        $r232 = virtualinvoke $r8.<kodkod.instance.Universe: java.lang.Object atom(int)>(i22);

        $r230[0] = $r232;

        $r233 = virtualinvoke $r231.<kodkod.instance.TupleFactory: kodkod.instance.Tuple tuple(java.lang.Object[])>($r230);

        interfaceinvoke $r258.<java.util.List: boolean add(java.lang.Object)>($r233);

        $i24 = (int) -1;

        i22 = i22 + $i24;

        goto label01;

     label02:
        $r11 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label03:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r228 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r234 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r228;

        $z19 = r234.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z19 != 0 goto label04;

        $z20 = virtualinvoke r234.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z20 == 0 goto label04;

        $r229 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r234;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleSet computeLowerBound(java.util.List,edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r258, $r229);

     label04:
        goto label03;

     label05:
        $r12 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label08;

        $r226 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r235 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r226;

        $z17 = r235.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z17 != 0 goto label07;

        $z18 = virtualinvoke r235.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z18 == 0 goto label07;

        $r227 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r235;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: void computeUpperBound(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r227);

     label07:
        goto label06;

     label08:
        $r13 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label09:
        $z2 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label11;

        $r224 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r236 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r224;

        $z15 = r236.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z15 != 0 goto label10;

        $z16 = virtualinvoke r236.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean isTopLevel()>();

        if $z16 == 0 goto label10;

        $r225 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r236;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression allocatePrimSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig)>($r225);

     label10:
        goto label09;

     label11:
        $r14 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label12:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r222 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r237 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r222;

        $z14 = r237 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        if $z14 == 0 goto label13;

        $r223 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) r237;

        specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression allocateSubsetSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig)>($r223);

     label13:
        goto label12;

     label14:
        $r15 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label15:
        $z21 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z21 == 0 goto label47;

        $r72 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r238 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r72;

        $r73 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r73 == null goto label31;

        $r117 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $i10 = virtualinvoke $r117.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i10 != 2 goto label31;

        $r118 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $i11 = virtualinvoke $r118.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i11 != 2 goto label31;

        $r119 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFacts()>();

        $i12 = virtualinvoke $r119.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        if $i12 != 1 goto label31;

        $r120 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFacts()>();

        $r121 = virtualinvoke $r120.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        $r122 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r121;

        $r123 = virtualinvoke $r122.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r124 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $r125 = virtualinvoke $r124.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        $r126 = (edu.mit.csail.sdg.alloy4compiler.ast.Decl) $r125;

        $r127 = $r126.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r128 = virtualinvoke $r127.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r129 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFieldDecls()>();

        $r130 = virtualinvoke $r129.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(1);

        $r131 = (edu.mit.csail.sdg.alloy4compiler.ast.Decl) $r130;

        $r132 = $r131.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r133 = virtualinvoke $r132.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z7 = $r123 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprList;

        if $z7 == 0 goto label31;

        $z8 = $r128 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary;

        if $z8 == 0 goto label31;

        $z9 = $r133 instanceof edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary;

        if $z9 != 0 goto label16;

        goto label31;

     label16:
        r239 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprList) $r123;

        $r135 = r239.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op op>;

        $r134 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprList$Op TOTALORDER>;

        if $r135 != $r134 goto label31;

        $r136 = r239.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $i13 = virtualinvoke $r136.<edu.mit.csail.sdg.alloy4.ConstList: int size()>();

        if $i13 == 3 goto label17;

        goto label31;

     label17:
        $r137 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) $r128;

        $r139 = $r137.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op op>;

        $r138 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op SETOF>;

        if $r139 == $r138 goto label18;

        goto label31;

     label18:
        $r140 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary) $r128;

        $r141 = $r140.<edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary: edu.mit.csail.sdg.alloy4compiler.ast.Expr sub>;

        $r142 = virtualinvoke $r141.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r143 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r133;

        $r145 = $r143.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op op>;

        $r144 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary$Op ARROW>;

        if $r145 == $r144 goto label19;

        goto label31;

     label19:
        $r146 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r133;

        $r147 = $r146.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr right>;

        $r148 = virtualinvoke $r147.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $r149 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary) $r133;

        $r150 = $r149.<edu.mit.csail.sdg.alloy4compiler.ast.ExprBinary: edu.mit.csail.sdg.alloy4compiler.ast.Expr left>;

        $r151 = virtualinvoke $r150.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr deNOP()>();

        $z10 = $r142 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z10 == 0 goto label31;

        if $r142 != $r151 goto label31;

        if $r142 == $r148 goto label20;

        goto label31;

     label20:
        r240 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r142;

        $r152 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r153 = virtualinvoke $r152.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(0);

        r241 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r153;

        $r154 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r155 = virtualinvoke $r154.<edu.mit.csail.sdg.alloy4.SafeList: java.lang.Object get(int)>(1);

        r242 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r155;

        $r156 = r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.Pos isEnum>;

        if $r156 == null goto label31;

        $r157 = r239.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r158 = virtualinvoke $r157.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(0);

        $r159 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r158;

        $z11 = virtualinvoke $r159.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r240);

        if $z11 == 0 goto label31;

        $r160 = r239.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r161 = virtualinvoke $r160.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(1);

        $r162 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r161;

        $r163 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r241);

        $z12 = virtualinvoke $r162.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r163);

        if $z12 == 0 goto label31;

        $r164 = r239.<edu.mit.csail.sdg.alloy4compiler.ast.ExprList: edu.mit.csail.sdg.alloy4.ConstList args>;

        $r165 = virtualinvoke $r164.<edu.mit.csail.sdg.alloy4.ConstList: java.lang.Object get(int)>(2);

        $r166 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r165;

        $r167 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r242);

        $z13 = virtualinvoke $r166.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: boolean isSame(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r167);

        if $z13 != 0 goto label21;

        goto label31;

     label21:
        $r168 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r238);

        $r169 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r168, 0);

        $r170 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        r243 = virtualinvoke $r170.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(2);

        r244 = null;

        $r171 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $r172 = virtualinvoke $r171.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(3);

        r245 = $r172;

        $i14 = virtualinvoke $r169.<kodkod.instance.TupleSet: int size()>();

        if $i14 != 1 goto label31;

        $i15 = virtualinvoke $r169.<kodkod.instance.TupleSet: int arity()>();

        if $i15 == 1 goto label22;

        goto label31;

     label22:
        $r173 = virtualinvoke r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $i16 = virtualinvoke $r173.<edu.mit.csail.sdg.alloy4.SafeList: int size()>();

        $r174 = virtualinvoke r240.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4.SafeList children()>();

        $r175 = virtualinvoke $r174.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label23:
        $z22 = interfaceinvoke $r175.<java.util.Iterator: boolean hasNext()>();

        if $z22 == 0 goto label27;

        $r214 = interfaceinvoke $r175.<java.util.Iterator: java.lang.Object next()>();

        r215 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r214;

        $r216 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r215);

        $r217 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r216, 0);

        $i20 = virtualinvoke $r217.<kodkod.instance.TupleSet: int size()>();

        if $i20 != 1 goto label24;

        $i21 = virtualinvoke $r217.<kodkod.instance.TupleSet: int arity()>();

        if $i21 == 1 goto label25;

     label24:
        $r218 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        r243 = virtualinvoke $r218.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(2);

        $r219 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        r245 = virtualinvoke $r219.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(3);

        goto label27;

     label25:
        if r244 != null goto label26;

        r243 = virtualinvoke $r169.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>($r217);

        r244 = $r217;

        goto label23;

     label26:
        $r220 = virtualinvoke $r169.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>(r244);

        $r221 = virtualinvoke $r220.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>($r217);

        virtualinvoke $r172.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r221);

        r244 = $r217;

        goto label23;

     label27:
        $i17 = virtualinvoke r243.<kodkod.instance.TupleSet: int size()>();

        if $i16 <= 0 goto label28;

        $z23 = 1;

        goto label29;

     label28:
        $z23 = 0;

     label29:
        if $i17 != $z23 goto label31;

        $i18 = virtualinvoke r245.<kodkod.instance.TupleSet: int size()>();

        $i19 = $i16 - 1;

        if $i18 == $i19 goto label30;

        goto label31;

     label30:
        $r259 = new java.lang.StringBuilder;

        specialinvoke $r259.<java.lang.StringBuilder: void <init>()>();

        $r177 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r178 = virtualinvoke $r259.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r177);

        $r179 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r180 = r241.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r181 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r180);

        $r182 = virtualinvoke $r181.<java.lang.StringBuilder: java.lang.String toString()>();

        $r183 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r182, r243, r243);

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r241, $r183);

        $r260 = new java.lang.StringBuilder;

        specialinvoke $r260.<java.lang.StringBuilder: void <init>()>();

        $r185 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r186 = virtualinvoke $r260.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r185);

        $r187 = virtualinvoke $r186.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r188 = r242.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r189 = virtualinvoke $r187.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r188);

        $r190 = virtualinvoke $r189.<java.lang.StringBuilder: java.lang.String toString()>();

        $r191 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r190, r245, r245);

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r242, $r191);

        $r261 = new java.lang.StringBuilder;

        specialinvoke $r261.<java.lang.StringBuilder: void <init>()>();

        $r193 = virtualinvoke $r261.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r194 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r195 = virtualinvoke $r193.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r194);

        $r196 = virtualinvoke $r195.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r197 = r241.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r198 = virtualinvoke $r196.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r197);

        $r199 = virtualinvoke $r198.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r200 = virtualinvoke $r199.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r243);

        $r201 = virtualinvoke $r200.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r202 = virtualinvoke $r201.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r202);

        $r262 = new java.lang.StringBuilder;

        specialinvoke $r262.<java.lang.StringBuilder: void <init>()>();

        $r204 = virtualinvoke $r262.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r205 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r206 = virtualinvoke $r204.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r205);

        $r207 = virtualinvoke $r206.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r208 = r242.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r209 = virtualinvoke $r207.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r208);

        $r210 = virtualinvoke $r209.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r211 = virtualinvoke $r210.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r245);

        $r212 = virtualinvoke $r211.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r213 = virtualinvoke $r212.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r213);

        goto label15;

     label31:
        $r246 = virtualinvoke r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r247 = virtualinvoke $r246.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

     label32:
        $z24 = interfaceinvoke $r247.<java.util.Iterator: boolean hasNext()>();

        if $z24 == 0 goto label46;

        $r74 = interfaceinvoke $r247.<java.util.Iterator: java.lang.Object next()>();

        r248 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r74;

        $r75 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r75 == null goto label33;

        $z31 = 1;

        $z30 = 1;

        goto label34;

     label33:
        $z31 = 0;

        $z30 = 0;

     label34:
        z26 = $z31;

        if $z30 == 0 goto label35;

        $r97 = virtualinvoke r248.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl()>();

        $r98 = $r97.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r99 = virtualinvoke $r98.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op mult()>();

        $r100 = <edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op: edu.mit.csail.sdg.alloy4compiler.ast.ExprUnary$Op EXACTLYOF>;

        if $r99 != $r100 goto label35;

        $r101 = virtualinvoke r248.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Decl decl()>();

        $r102 = $r101.<edu.mit.csail.sdg.alloy4compiler.ast.Decl: edu.mit.csail.sdg.alloy4compiler.ast.Expr expr>;

        $r103 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Expression sim(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r102);

        if $r103 == null goto label35;

        $r263 = new java.lang.StringBuilder;

        specialinvoke $r263.<java.lang.StringBuilder: void <init>()>();

        $r105 = virtualinvoke $r263.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Field ");

        $r106 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r107 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r106);

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r109 = r248.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r110 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r109);

        $r111 = virtualinvoke $r110.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defined to be ");

        $r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r103);

        $r113 = virtualinvoke $r112.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r114 = virtualinvoke $r113.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r114);

        $r115 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r238);

        $r116 = virtualinvoke $r115.<kodkod.ast.Expression: kodkod.ast.Expression product(kodkod.ast.Expression)>($r103);

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r248, $r116);

        goto label32;

     label35:
        if z26 == 0 goto label36;

        $r94 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r95 = virtualinvoke $r94.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $r96 = virtualinvoke r248.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $r249 = virtualinvoke $r95.<edu.mit.csail.sdg.alloy4compiler.ast.Type: edu.mit.csail.sdg.alloy4compiler.ast.Type join(edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r96);

        goto label37;

     label36:
        $r249 = virtualinvoke r248.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

     label37:
        $r76 = r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.instance.TupleFactory factory>;

        $i9 = virtualinvoke $r249.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        $r77 = virtualinvoke $r76.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>($i9);

        $r78 = virtualinvoke $r249.<edu.mit.csail.sdg.alloy4compiler.ast.Type: java.util.List fold()>();

        $r79 = interfaceinvoke $r78.<java.util.List: java.util.Iterator iterator()>();

     label38:
        $z27 = interfaceinvoke $r79.<java.util.Iterator: boolean hasNext()>();

        if $z27 == 0 goto label43;

        $r89 = interfaceinvoke $r79.<java.util.Iterator: java.lang.Object next()>();

        r250 = (java.util.List) $r89;

        r251 = null;

        $r90 = interfaceinvoke r250.<java.util.List: java.util.Iterator iterator()>();

     label39:
        $z6 = interfaceinvoke $r90.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label42;

        $r91 = interfaceinvoke $r90.<java.util.Iterator: java.lang.Object next()>();

        r252 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r91;

        $r92 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r252);

        $r93 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r92, 0);

        if r251 != null goto label40;

        r251 = $r93;

        goto label41;

     label40:
        r251 = virtualinvoke r251.<kodkod.instance.TupleSet: kodkod.instance.TupleSet product(kodkod.instance.TupleSet)>($r93);

     label41:
        goto label39;

     label42:
        virtualinvoke $r77.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>(r251);

        goto label38;

     label43:
        $r264 = new java.lang.StringBuilder;

        specialinvoke $r264.<java.lang.StringBuilder: void <init>()>();

        $r81 = r238.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r82 = virtualinvoke $r264.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r84 = r248.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r85 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84);

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        $r87 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r86, null, $r77);

        if z26 == 0 goto label44;

        $r88 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r238);

        $r253 = virtualinvoke $r88.<kodkod.ast.Expression: kodkod.ast.Expression product(kodkod.ast.Expression)>($r87);

        goto label45;

     label44:
        $r253 = $r87;

     label45:
        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r248, $r253);

        goto label32;

     label46:
        goto label15;

     label47:
        $r16 = interfaceinvoke r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label48:
        $z28 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z28 == 0 goto label58;

        $r17 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        r254 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r17;

        $z4 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z4 != 0 goto label57;

        $r18 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.ast.Expression a2k(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r254);

        $r19 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(1, $r18, 0);

        $r20 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: kodkod.instance.TupleSet query(boolean,kodkod.ast.Expression,boolean)>(0, $r18, 0);

        $i1 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer: int sig2scope(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r254);

        $r21 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        if $r21 == null goto label50;

        $i7 = virtualinvoke $r20.<kodkod.instance.TupleSet: int size()>();

        if $i7 != 1 goto label49;

        $i8 = virtualinvoke $r19.<kodkod.instance.TupleSet: int size()>();

        if $i8 == 1 goto label50;

     label49:
        $r265 = new java.lang.StringBuilder;

        specialinvoke $r265.<java.lang.StringBuilder: void <init>()>();

        $r64 = virtualinvoke $r265.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r254);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size==1\n");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r69);

        $r70 = virtualinvoke $r18.<kodkod.ast.Expression: kodkod.ast.Formula one()>();

        $r71 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isOne>;

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r70, $r71);

        goto label48;

     label50:
        $r22 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isSome>;

        if $r22 == null goto label51;

        $i6 = virtualinvoke $r20.<kodkod.instance.TupleSet: int size()>();

        if $i6 >= 1 goto label51;

        $r61 = virtualinvoke $r18.<kodkod.ast.Expression: kodkod.ast.Formula some()>();

        $r62 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isSome>;

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r61, $r62);

     label51:
        $r255 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        if $r255 == null goto label52;

        $i5 = virtualinvoke $r19.<kodkod.instance.TupleSet: int size()>();

        if $i5 <= 1 goto label52;

        $r59 = virtualinvoke $r18.<kodkod.ast.Expression: kodkod.ast.Formula lone()>();

        $r60 = r254.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.Pos isLone>;

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r59, $r60);

     label52:
        if $i1 >= 0 goto label53;

        goto label48;

     label53:
        $i2 = virtualinvoke $r20.<kodkod.instance.TupleSet: int size()>();

        if $i2 != $i1 goto label54;

        $i4 = virtualinvoke $r19.<kodkod.instance.TupleSet: int size()>();

        if $i4 != $i1 goto label54;

        $z5 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r254);

        if $z5 == 0 goto label54;

        $r266 = new java.lang.StringBuilder;

        specialinvoke $r266.<java.lang.StringBuilder: void <init>()>();

        $r53 = virtualinvoke $r266.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r254);

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" == ");

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r58);

        goto label57;

     label54:
        $z29 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer: boolean isExact(edu.mit.csail.sdg.alloy4compiler.ast.Sig)>(r254);

        if $z29 == 0 goto label55;

        $r267 = new java.lang.StringBuilder;

        specialinvoke $r267.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke $r267.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r254);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size==");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r49);

        $r50 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Formula size(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int,boolean)>(r254, $i1, 1);

        $r51 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r50, $r51);

        goto label57;

     label55:
        $i3 = virtualinvoke $r19.<kodkod.instance.TupleSet: int size()>();

        if $i3 > $i1 goto label56;

        $r268 = new java.lang.StringBuilder;

        specialinvoke $r268.<java.lang.StringBuilder: void <init>()>();

        $r35 = virtualinvoke $r268.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r254);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r40);

        goto label57;

     label56:
        $r269 = new java.lang.StringBuilder;

        specialinvoke $r269.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r269.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Sig ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r254);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" with size<=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r6.<edu.mit.csail.sdg.alloy4.A4Reporter: void bound(java.lang.String)>($r31);

        $r32 = specialinvoke r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: kodkod.ast.Formula size(edu.mit.csail.sdg.alloy4compiler.ast.Sig,int,boolean)>(r254, $i1, 0);

        $r33 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        virtualinvoke r4.<edu.mit.csail.sdg.alloy4compiler.translator.A4Solution: void addFormula(kodkod.ast.Formula,edu.mit.csail.sdg.alloy4.Pos)>($r32, $r33);

     label57:
        goto label48;

     label58:
        return;
    }

    static void compute(edu.mit.csail.sdg.alloy4.A4Reporter, edu.mit.csail.sdg.alloy4compiler.translator.A4Solution, edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer, java.lang.Iterable) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer $r0;
        edu.mit.csail.sdg.alloy4.A4Reporter r1;
        edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer r3;
        edu.mit.csail.sdg.alloy4compiler.translator.A4Solution r2;
        java.lang.Iterable r4;

        r1 := @parameter0: edu.mit.csail.sdg.alloy4.A4Reporter;

        r2 := @parameter1: edu.mit.csail.sdg.alloy4compiler.translator.A4Solution;

        r3 := @parameter2: edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer;

        r4 := @parameter3: java.lang.Iterable;

        $r0 = new edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer;

        specialinvoke $r0.<edu.mit.csail.sdg.alloy4compiler.translator.BoundsComputer: void <init>(edu.mit.csail.sdg.alloy4.A4Reporter,edu.mit.csail.sdg.alloy4compiler.translator.A4Solution,edu.mit.csail.sdg.alloy4compiler.translator.ScopeComputer,java.lang.Iterable)>(r1, r2, r3, r4);

        return;
    }
}
