public abstract class org.eclipse.jetty.http.AbstractGenerator extends java.lang.Object implements org.eclipse.jetty.http.Generator
{
    private static final org.eclipse.jetty.util.log.Logger LOG;
    public static final int STATE_HEADER;
    public static final int STATE_CONTENT;
    public static final int STATE_FLUSHING;
    public static final int STATE_END;
    public static final byte[] NO_BYTES;
    protected final org.eclipse.jetty.io.Buffers _buffers;
    protected final org.eclipse.jetty.io.EndPoint _endp;
    protected int _state;
    protected int _status;
    protected int _version;
    protected org.eclipse.jetty.io.Buffer _reason;
    protected org.eclipse.jetty.io.Buffer _method;
    protected java.lang.String _uri;
    protected long _contentWritten;
    protected long _contentLength;
    protected boolean _last;
    protected boolean _head;
    protected boolean _noContent;
    protected java.lang.Boolean _persistent;
    protected org.eclipse.jetty.io.Buffer _header;
    protected org.eclipse.jetty.io.Buffer _buffer;
    protected org.eclipse.jetty.io.Buffer _content;
    protected org.eclipse.jetty.io.Buffer _date;
    private boolean _sendServerVersion;

    public void <init>(org.eclipse.jetty.io.Buffers, org.eclipse.jetty.io.EndPoint)
    {
        org.eclipse.jetty.io.Buffers r1;
        org.eclipse.jetty.http.AbstractGenerator r0;
        org.eclipse.jetty.io.EndPoint r2;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        r1 := @parameter0: org.eclipse.jetty.io.Buffers;

        r2 := @parameter1: org.eclipse.jetty.io.EndPoint;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _state> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _status> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _version> = 11;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten> = 0L;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength> = -3L;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _last> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _head> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _noContent> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers> = r1;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp> = r2;

        return;
    }

    public abstract boolean isRequest();

    public abstract boolean isResponse();

    public boolean isOpen()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        org.eclipse.jetty.io.EndPoint $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        return $z0;
    }

    public void reset()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _state> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _status> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _version> = 11;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _reason> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _last> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _head> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _noContent> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten> = 0L;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength> = -3L;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _date> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _content> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _method> = null;

        return;
    }

    public void returnBuffers()
    {
        org.eclipse.jetty.io.Buffers $r4, $r7;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i0, $i1;
        org.eclipse.jetty.io.Buffer $r1, $r2, $r3, $r5, $r6, $r8;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if $r1 == null goto label1;

        $r5 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i1 = interfaceinvoke $r5.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i1 != 0 goto label1;

        $r7 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers>;

        $r6 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r7.<org.eclipse.jetty.io.Buffers: void returnBuffer(org.eclipse.jetty.io.Buffer)>($r6);

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer> = null;

     label1:
        $r8 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _header>;

        if $r8 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _header>;

        $i0 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i0 != 0 goto label2;

        $r4 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers>;

        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _header>;

        interfaceinvoke $r4.<org.eclipse.jetty.io.Buffers: void returnBuffer(org.eclipse.jetty.io.Buffer)>($r3);

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _header> = null;

     label2:
        return;
    }

    public void resetBuffer()
    {
        java.lang.IllegalStateException $r3;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i0;
        org.eclipse.jetty.io.Buffer $r1, $r2;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 < 3 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Flushed");

        throw $r3;

     label1:
        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _last> = 0;

        r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten> = 0L;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength> = -3L;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _content> = null;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if $r1 == null goto label2;

        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: void clear()>();

     label2:
        return;
    }

    public int getContentBufferSize()
    {
        org.eclipse.jetty.io.Buffers $r3;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i0;
        org.eclipse.jetty.io.Buffer $r1, $r2, $r4;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if $r1 != null goto label1;

        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jetty.io.Buffers: org.eclipse.jetty.io.Buffer getBuffer()>();

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer> = $r4;

     label1:
        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i0 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int capacity()>();

        return $i0;
    }

    public void increaseContentBufferSize(int)
    {
        org.eclipse.jetty.io.Buffers $r3, $r7, $r8;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int i0, $i1;
        org.eclipse.jetty.io.Buffer $r1, $r2, $r4, $r5, $r6, $r9;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if $r1 != null goto label1;

        $r8 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers>;

        $r9 = interfaceinvoke $r8.<org.eclipse.jetty.io.Buffers: org.eclipse.jetty.io.Buffer getBuffer()>();

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer> = $r9;

     label1:
        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i1 = interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: int capacity()>();

        if i0 <= $i1 goto label2;

        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers>;

        $r4 = interfaceinvoke $r3.<org.eclipse.jetty.io.Buffers: org.eclipse.jetty.io.Buffer getBuffer(int)>(i0);

        $r5 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r4.<org.eclipse.jetty.io.Buffer: int put(org.eclipse.jetty.io.Buffer)>($r5);

        $r7 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffers _buffers>;

        $r6 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r7.<org.eclipse.jetty.io.Buffers: void returnBuffer(org.eclipse.jetty.io.Buffer)>($r6);

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer> = $r4;

     label2:
        return;
    }

    public org.eclipse.jetty.io.Buffer getUncheckedBuffer()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        return $r1;
    }

    public boolean getSendServerVersion()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $z0 = r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _sendServerVersion>;

        return $z0;
    }

    public void setSendServerVersion(boolean)
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _sendServerVersion> = z0;

        return;
    }

    public int getState()
    {
        int $i0;
        org.eclipse.jetty.http.AbstractGenerator r0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        return $i0;
    }

    public boolean isState(int)
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        int i0, $i1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        i0 := @parameter0: int;

        $i1 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i1 != i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isComplete()
    {
        int $i0;
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 != 4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isIdle()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i0, $i1;
        org.eclipse.jetty.io.Buffer $r1;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 != 0 goto label1;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _method>;

        if $r1 != null goto label1;

        $i1 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _status>;

        if $i1 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isCommitted()
    {
        int $i0;
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isHead()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $z0 = r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _head>;

        return $z0;
    }

    public void setContentLength(long)
    {
        byte $b1;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i2;
        long l0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label1;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength> = -3L;

        goto label2;

     label1:
        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength> = l0;

     label2:
        return;
    }

    public void setHead(boolean)
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        z0 := @parameter0: boolean;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _head> = z0;

        return;
    }

    public boolean isPersistent()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i0;
        java.lang.Boolean $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent>;

        $z1 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        goto label4;

     label1:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: boolean isRequest()>();

        if $z0 == 0 goto label2;

        $z1 = 1;

        goto label4;

     label2:
        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _version>;

        if $i0 <= 10 goto label3;

        $z1 = 1;

        goto label4;

     label3:
        $z1 = 0;

     label4:
        return $z1;
    }

    public void setPersistent(boolean)
    {
        java.lang.Boolean $r1;
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z0);

        r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent> = $r1;

        return;
    }

    public void setVersion(int)
    {
        java.lang.IllegalStateException $r2;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i0, i1, $i2, $i3;
        java.lang.StringBuilder $r3, $r4, $r5;
        java.lang.String $r6;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        i1 := @parameter0: int;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 == 0 goto label1;

        $r2 = new java.lang.IllegalStateException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("STATE!=START ");

        $i3 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r0.<org.eclipse.jetty.http.AbstractGenerator: int _version> = i1;

        $i2 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _version>;

        if $i2 != 9 goto label2;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _method>;

        if $r1 == null goto label2;

        r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _noContent> = 1;

     label2:
        return;
    }

    public int getVersion()
    {
        int $i0;
        org.eclipse.jetty.http.AbstractGenerator r0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _version>;

        return $i0;
    }

    public void setDate(org.eclipse.jetty.io.Buffer)
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        org.eclipse.jetty.io.Buffer r1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        r1 := @parameter0: org.eclipse.jetty.io.Buffer;

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _date> = r1;

        return;
    }

    public void setRequest(java.lang.String, java.lang.String)
    {
        org.eclipse.jetty.http.AbstractGenerator r1;
        org.eclipse.jetty.io.BufferCache $r5;
        int $i0;
        java.lang.String r0, r3, $r4;
        org.eclipse.jetty.io.Buffer $r2, $r6;
        boolean $z0;

        r1 := @this: org.eclipse.jetty.http.AbstractGenerator;

        r0 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        if r0 == null goto label1;

        $r4 = "GET";

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

     label1:
        $r2 = <org.eclipse.jetty.http.HttpMethods: org.eclipse.jetty.io.Buffer GET_BUFFER>;

        r1.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _method> = $r2;

        goto label3;

     label2:
        $r5 = <org.eclipse.jetty.http.HttpMethods: org.eclipse.jetty.io.BufferCache CACHE>;

        $r6 = virtualinvoke $r5.<org.eclipse.jetty.io.BufferCache: org.eclipse.jetty.io.Buffer lookup(java.lang.String)>(r0);

        r1.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _method> = $r6;

     label3:
        r1.<org.eclipse.jetty.http.AbstractGenerator: java.lang.String _uri> = r3;

        $i0 = r1.<org.eclipse.jetty.http.AbstractGenerator: int _version>;

        if $i0 != 9 goto label4;

        r1.<org.eclipse.jetty.http.AbstractGenerator: boolean _noContent> = 1;

     label4:
        return;
    }

    public void setResponse(int, java.lang.String)
    {
        java.lang.IllegalStateException $r6;
        char $c3;
        org.eclipse.jetty.io.ByteArrayBuffer $r7;
        org.eclipse.jetty.http.AbstractGenerator r0;
        byte $b4;
        int $i0, i1, $i2, i5, i6, $i7, $i8;
        java.lang.String r1;
        org.eclipse.jetty.io.Buffer $r3, $r4;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        i1 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 == 0 goto label1;

        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("STATE!=START");

        throw $r6;

     label1:
        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _method> = null;

        r0.<org.eclipse.jetty.http.AbstractGenerator: int _status> = i1;

        if r1 == null goto label6;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        i5 = $i2;

        if $i2 <= 1024 goto label2;

        i5 = 1024;

     label2:
        $r7 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r7.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(int)>(i5);

        r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _reason> = $r7;

        i6 = 0;

     label3:
        if i6 >= i5 goto label6;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c3;

        if $i7 == 13 goto label4;

        $i8 = (int) $c3;

        if $i8 == 10 goto label4;

        $r4 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _reason>;

        $b4 = (byte) $c3;

        interfaceinvoke $r4.<org.eclipse.jetty.io.Buffer: void put(byte)>($b4);

        goto label5;

     label4:
        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _reason>;

        interfaceinvoke $r3.<org.eclipse.jetty.io.Buffer: void put(byte)>(32);

     label5:
        i6 = i6 + 1;

        goto label3;

     label6:
        return;
    }

    public abstract int prepareUncheckedAddContent() throws java.io.IOException;

    void uncheckedAddContent(int)
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        byte $b1;
        int i0;
        org.eclipse.jetty.io.Buffer $r1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        i0 := @parameter0: int;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $b1 = (byte) i0;

        interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: void put(byte)>($b1);

        return;
    }

    public void completeUncheckedAddContent()
    {
        long $l0, $l2, $l3;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int $i1;
        org.eclipse.jetty.io.Buffer $r1, $r2, $r3, $r4;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $z0 = r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _noContent>;

        if $z0 == 0 goto label1;

        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if $r3 == null goto label2;

        $r4 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r4.<org.eclipse.jetty.io.Buffer: void clear()>();

        goto label2;

     label1:
        $l0 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten>;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i1 = interfaceinvoke $r1.<org.eclipse.jetty.io.Buffer: int length()>();

        $l2 = (long) $i1;

        $l3 = $l0 + $l2;

        r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten> = $l3;

        $z1 = r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _head>;

        if $z1 == 0 goto label2;

        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r2.<org.eclipse.jetty.io.Buffer: void clear()>();

     label2:
        return;
    }

    public boolean isBufferFull()
    {
        int $i0, $i1, $i2, $i3;
        org.eclipse.jetty.io.Buffer $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.http.AbstractGenerator r0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if $r1 == null goto label4;

        $r4 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i1 = interfaceinvoke $r4.<org.eclipse.jetty.io.Buffer: int space()>();

        if $i1 != 0 goto label4;

        $r5 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i2 = interfaceinvoke $r5.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i2 != 0 goto label1;

        $r6 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $z0 = interfaceinvoke $r6.<org.eclipse.jetty.io.Buffer: boolean isImmutable()>();

        if $z0 != 0 goto label1;

        $r7 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        interfaceinvoke $r7.<org.eclipse.jetty.io.Buffer: void compact()>();

     label1:
        $r8 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        $i3 = interfaceinvoke $r8.<org.eclipse.jetty.io.Buffer: int space()>();

        if $i3 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _content>;

        if $r2 == null goto label5;

        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _content>;

        $i0 = interfaceinvoke $r3.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i0 <= 0 goto label5;

        $z2 = 1;

        goto label6;

     label5:
        $z2 = 0;

     label6:
        return $z2;
    }

    public boolean isWritten()
    {
        org.eclipse.jetty.http.AbstractGenerator r0;
        byte $b1;
        int $i2;
        long $l0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $l0 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten>;

        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 <= 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public boolean isAllContentWritten()
    {
        long $l0, $l2, $l3;
        org.eclipse.jetty.http.AbstractGenerator r0;
        byte $b1, $b4;
        int $i5, $i6;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $l0 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength>;

        $b1 = $l0 cmp 0L;

        $i5 = (int) $b1;

        if $i5 < 0 goto label1;

        $l3 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten>;

        $l2 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength>;

        $b4 = $l3 cmp $l2;

        $i6 = (int) $b4;

        if $i6 < 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public abstract void completeHeader(org.eclipse.jetty.http.HttpFields, boolean) throws java.io.IOException;

    public void complete() throws java.io.IOException
    {
        java.lang.IllegalStateException $r12;
        java.lang.Object[] $r10;
        long $l1, $l3, $l4, $l6, $l7;
        byte $b2, $b5;
        int $i0, $i8;
        java.lang.Boolean $r2;
        java.lang.String $r9;
        boolean $z0, $z1;
        org.eclipse.jetty.http.AbstractGenerator r0;
        java.lang.StringBuilder $r5, $r6, $r7, $r8, $r13;
        org.eclipse.jetty.util.log.Logger $r1, $r4;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $i0 = r0.<org.eclipse.jetty.http.AbstractGenerator: int _state>;

        if $i0 != 0 goto label1;

        $r12 = new java.lang.IllegalStateException;

        specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>("State==HEADER");

        throw $r12;

     label1:
        $l1 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength>;

        $b2 = $l1 cmp 0L;

        $i8 = (int) $b2;

        if $i8 < 0 goto label3;

        $l4 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength>;

        $l3 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten>;

        $b5 = $l4 cmp $l3;

        if $b5 == 0 goto label3;

        $z0 = r0.<org.eclipse.jetty.http.AbstractGenerator: boolean _head>;

        if $z0 != 0 goto label3;

        $r1 = <org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.util.log.Logger LOG>;

        $z1 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z1 == 0 goto label2;

        $r4 = <org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.util.log.Logger LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ContentLength written==");

        $l6 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten>;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != contentLength==");

        $l7 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentLength>;

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = newarray (java.lang.Object)[0];

        interfaceinvoke $r4.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>($r9, $r10);

     label2:
        $r2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent> = $r2;

     label3:
        return;
    }

    public abstract int flushBuffer() throws java.io.IOException;

    public void flush(long) throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint $r3, $r4;
        long $l0, l1, l2, $l4, l8;
        byte $b9;
        int $i3, $i5, $i6, $i7, $i10;
        org.eclipse.jetty.io.Buffer r1, r2;
        boolean $z0, $z1, $z2;
        org.eclipse.jetty.http.AbstractGenerator r0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        l1 := @parameter0: long;

        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        l8 = $l0;

        l2 = $l0 + l1;

        r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _content>;

        r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.Buffer _buffer>;

        if r1 == null goto label1;

        $i7 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i7 > 0 goto label3;

     label1:
        if r2 == null goto label2;

        $i6 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i6 > 0 goto label3;

     label2:
        $z0 = virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: boolean isBufferFull()>();

        if $z0 == 0 goto label7;

     label3:
        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: int flushBuffer()>();

     label4:
        $b9 = l8 cmp l2;

        $i10 = (int) $b9;

        if $i10 >= 0 goto label7;

        if r1 == null goto label5;

        $i5 = interfaceinvoke r1.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i5 > 0 goto label6;

     label5:
        if r2 == null goto label7;

        $i3 = interfaceinvoke r2.<org.eclipse.jetty.io.Buffer: int length()>();

        if $i3 <= 0 goto label7;

     label6:
        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r3.<org.eclipse.jetty.io.EndPoint: boolean isOpen()>();

        if $z1 == 0 goto label7;

        $r4 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        $z2 = interfaceinvoke $r4.<org.eclipse.jetty.io.EndPoint: boolean isOutputShutdown()>();

        if $z2 != 0 goto label7;

        $l4 = l2 - l8;

        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: void blockForOutput(long)>($l4);

        l8 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        goto label4;

     label7:
        return;
    }

    public void sendError(int, java.lang.String, java.lang.String, boolean) throws java.io.IOException
    {
        java.lang.Object[] $r1, $r8;
        java.lang.Integer $r3, $r10;
        org.eclipse.jetty.io.ByteArrayBuffer $r7;
        org.eclipse.jetty.io.View $r6;
        org.eclipse.jetty.http.AbstractGenerator r0;
        int i0;
        java.lang.Boolean $r11;
        org.eclipse.jetty.util.log.Logger $r2, $r9;
        java.lang.String r4, r5;
        boolean z0, $z1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.String;

        r5 := @parameter2: java.lang.String;

        z0 := @parameter3: boolean;

        if z0 == 0 goto label1;

        $r11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        r0.<org.eclipse.jetty.http.AbstractGenerator: java.lang.Boolean _persistent> = $r11;

     label1:
        $z1 = virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: boolean isCommitted()>();

        if $z1 == 0 goto label2;

        $r9 = <org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.util.log.Logger LOG>;

        $r8 = newarray (java.lang.Object)[2];

        $r10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r8[0] = $r10;

        $r8[1] = r4;

        interfaceinvoke $r9.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("sendError on committed: {} {}", $r8);

        goto label5;

     label2:
        $r2 = <org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.util.log.Logger LOG>;

        $r1 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r1[0] = $r3;

        $r1[1] = r4;

        interfaceinvoke $r2.<org.eclipse.jetty.util.log.Logger: void debug(java.lang.String,java.lang.Object[])>("sendError: {} {}", $r1);

        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: void setResponse(int,java.lang.String)>(i0, r4);

        if r5 == null goto label3;

        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: void completeHeader(org.eclipse.jetty.http.HttpFields,boolean)>(null, 0);

        $r6 = new org.eclipse.jetty.io.View;

        $r7 = new org.eclipse.jetty.io.ByteArrayBuffer;

        specialinvoke $r7.<org.eclipse.jetty.io.ByteArrayBuffer: void <init>(java.lang.String)>(r5);

        specialinvoke $r6.<org.eclipse.jetty.io.View: void <init>(org.eclipse.jetty.io.Buffer)>($r7);

        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: void addContent(org.eclipse.jetty.io.Buffer,boolean)>($r6, 1);

        goto label4;

     label3:
        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: void completeHeader(org.eclipse.jetty.http.HttpFields,boolean)>(null, 1);

     label4:
        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: void complete()>();

     label5:
        return;
    }

    public long getContentWritten()
    {
        long $l0;
        org.eclipse.jetty.http.AbstractGenerator r0;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        $l0 = r0.<org.eclipse.jetty.http.AbstractGenerator: long _contentWritten>;

        return $l0;
    }

    public void blockForOutput(long) throws java.io.IOException
    {
        org.eclipse.jetty.io.EndPoint $r1, $r2, $r3, $r6;
        long l0;
        java.io.IOException $r5;
        org.eclipse.jetty.io.EofException $r4;
        org.eclipse.jetty.http.AbstractGenerator r0;
        boolean $z0, $z1;

        r0 := @this: org.eclipse.jetty.http.AbstractGenerator;

        l0 := @parameter0: long;

        $r1 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.io.EndPoint: boolean isBlocking()>();

        if $z0 == 0 goto label4;

     label1:
        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: int flushBuffer()>();

     label2:
        goto label6;

     label3:
        $r5 := @caughtexception;

        $r6 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r6.<org.eclipse.jetty.io.EndPoint: void close()>();

        throw $r5;

     label4:
        $r2 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        $z1 = interfaceinvoke $r2.<org.eclipse.jetty.io.EndPoint: boolean blockWritable(long)>(l0);

        if $z1 != 0 goto label5;

        $r3 = r0.<org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.io.EndPoint _endp>;

        interfaceinvoke $r3.<org.eclipse.jetty.io.EndPoint: void close()>();

        $r4 = new org.eclipse.jetty.io.EofException;

        specialinvoke $r4.<org.eclipse.jetty.io.EofException: void <init>(java.lang.String)>("timeout");

        throw $r4;

     label5:
        virtualinvoke r0.<org.eclipse.jetty.http.AbstractGenerator: int flushBuffer()>();

     label6:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        byte[] $r1;
        org.eclipse.jetty.util.log.Logger $r0;

        <org.eclipse.jetty.http.AbstractGenerator: int STATE_END> = 4;

        <org.eclipse.jetty.http.AbstractGenerator: int STATE_FLUSHING> = 3;

        <org.eclipse.jetty.http.AbstractGenerator: int STATE_CONTENT> = 2;

        <org.eclipse.jetty.http.AbstractGenerator: int STATE_HEADER> = 0;

        $r0 = staticinvoke <org.eclipse.jetty.util.log.Log: org.eclipse.jetty.util.log.Logger getLogger(java.lang.Class)>(class "Lorg/eclipse/jetty/http/AbstractGenerator;");

        <org.eclipse.jetty.http.AbstractGenerator: org.eclipse.jetty.util.log.Logger LOG> = $r0;

        $r1 = newarray (byte)[0];

        <org.eclipse.jetty.http.AbstractGenerator: byte[] NO_BYTES> = $r1;

        return;
    }
}
