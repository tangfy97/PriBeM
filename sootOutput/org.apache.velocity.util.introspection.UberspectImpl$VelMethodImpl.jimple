public class org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl extends java.lang.Object implements org.apache.velocity.util.introspection.VelMethod
{
    final java.lang.reflect.Method method;
    java.lang.Boolean isVarArg;
    boolean wrapArray;

    public void <init>(java.lang.reflect.Method)
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.reflect.Method r1;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        r1 := @parameter0: java.lang.reflect.Method;

        specialinvoke r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: void <init>(java.lang.reflect.Method,boolean)>(r1, 0);

        return;
    }

    public void <init>(java.lang.reflect.Method, boolean)
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.reflect.Method r1;
        boolean z0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        r1 := @parameter0: java.lang.reflect.Method;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method> = r1;

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: boolean wrapArray> = z0;

        return;
    }

    private void <init>()
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method> = null;

        return;
    }

    public java.lang.Object invoke(java.lang.Object, java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object[] r7;
        java.lang.Class[] $r2;
        int $i0, i1, $i2;
        org.apache.velocity.util.ArrayListWrapper $r5;
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.Class $r3, $r4;
        java.lang.Object r6, $r8;
        java.lang.reflect.Method $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        r6 := @parameter0: java.lang.Object;

        r7 := @parameter1: java.lang.Object[];

        $z0 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: boolean wrapArray>;

        if $z0 == 0 goto label1;

        $r5 = new org.apache.velocity.util.ArrayListWrapper;

        specialinvoke $r5.<org.apache.velocity.util.ArrayListWrapper: void <init>(java.lang.Object)>(r6);

        r6 = $r5;

     label1:
        $z1 = virtualinvoke r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: boolean isVarArg()>();

        if $z1 == 0 goto label2;

        $r1 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i0 = lengthof $r2;

        i1 = $i0 - 1;

        $i2 = lengthof r7;

        if $i2 < i1 goto label2;

        $r3 = $r2[i1];

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>();

        r7 = specialinvoke r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.Object[] handleVarArg(java.lang.Class,int,java.lang.Object[])>($r4, i1, r7);

     label2:
        $r8 = virtualinvoke r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.Object doInvoke(java.lang.Object,java.lang.Object[])>(r6, r7);

        return $r8;
    }

    protected java.lang.Object doInvoke(java.lang.Object, java.lang.Object[]) throws java.lang.Exception
    {
        java.lang.Object[] r2;
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.Object r1, $r4;
        java.lang.reflect.Method $r3;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object[];

        $r3 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, r2);

        return $r4;
    }

    public boolean isVarArg()
    {
        java.lang.Class[] $r3;
        int $i0, $i1, $i2;
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.Boolean $r1, $r4, $r6, $r7;
        java.lang.Class r5;
        java.lang.reflect.Method $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        $r1 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.Boolean isVarArg>;

        if $r1 != null goto label3;

        $r2 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method>;

        $r3 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        if $r3 == null goto label1;

        $i0 = lengthof $r3;

        if $i0 != 0 goto label2;

     label1:
        $r4 = <java.lang.Boolean: java.lang.Boolean FALSE>;

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.Boolean isVarArg> = $r4;

        goto label3;

     label2:
        $i1 = lengthof $r3;

        $i2 = $i1 - 1;

        r5 = $r3[$i2];

        $z0 = virtualinvoke r5.<java.lang.Class: boolean isArray()>();

        $r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.Boolean isVarArg> = $r6;

     label3:
        $r7 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.Boolean isVarArg>;

        $z1 = virtualinvoke $r7.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;
    }

    private java.lang.Object[] handleVarArg(java.lang.Class, int, java.lang.Object[])
    {
        java.lang.Object[] r11, r12, r13;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, i12, i13, i14;
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r10;
        boolean $z0, $z1;
        java.lang.Class r0, $r6;
        java.lang.Object $r1, $r2, $r3, $r4, $r5, $r7, $r8, $r9;

        r10 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        r0 := @parameter0: java.lang.Class;

        i0 := @parameter1: int;

        r11 := @parameter2: java.lang.Object[];

        $i1 = lengthof r11;

        if $i1 != i0 goto label1;

        $i9 = lengthof r11;

        $i10 = $i9 + 1;

        r12 = newarray (java.lang.Object)[$i10];

        $i11 = lengthof r11;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r11, 0, r12, 0, $i11);

        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, 0);

        r12[i0] = $r9;

        r11 = r12;

        goto label8;

     label1:
        $i3 = lengthof r11;

        $i2 = i0 + 1;

        if $i3 != $i2 goto label3;

        $r4 = r11[i0];

        if $r4 == null goto label3;

        $r5 = r11[i0];

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $z0 = virtualinvoke $r6.<java.lang.Class: boolean isArray()>();

        if $z0 != 0 goto label2;

        $z1 = staticinvoke <org.apache.velocity.util.introspection.IntrospectionUtils: boolean isMethodInvocationConvertible(java.lang.Class,java.lang.Class,boolean)>(r0, $r6, 0);

        if $z1 == 0 goto label2;

        $r7 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, 1);

        $r8 = r11[i0];

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r7, 0, $r8);

        r11[i0] = $r7;

     label2:
        goto label8;

     label3:
        $i5 = lengthof r11;

        $i4 = i0 + 1;

        if $i5 <= $i4 goto label8;

        $i6 = lengthof r11;

        i12 = $i6 - i0;

        $r1 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r0, i12);

        i13 = 0;

     label4:
        if i13 >= i12 goto label5;

        $i8 = i0 + i13;

        $r3 = r11[$i8];

        staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>($r1, i13, $r3);

        i13 = i13 + 1;

        goto label4;

     label5:
        $i7 = i0 + 1;

        r13 = newarray (java.lang.Object)[$i7];

        i14 = 0;

     label6:
        if i14 >= i0 goto label7;

        $r2 = r11[i14];

        r13[i14] = $r2;

        i14 = i14 + 1;

        goto label6;

     label7:
        r13[i0] = $r1;

        r11 = r13;

     label8:
        return r11;
    }

    public boolean isCacheable()
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        return 1;
    }

    public java.lang.String getMethodName()
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.String $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        $r1 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.String getName()>();

        return $r2;
    }

    public java.lang.Class getReturnType()
    {
        org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl r0;
        java.lang.Class $r2;
        java.lang.reflect.Method $r1;

        r0 := @this: org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl;

        $r1 = r0.<org.apache.velocity.util.introspection.UberspectImpl$VelMethodImpl: java.lang.reflect.Method method>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r2;
    }
}
