public class org.apache.xml.utils.res.XResourceBundle extends java.util.ListResourceBundle
{
    public static final java.lang.String ERROR_RESOURCES;
    public static final java.lang.String XSLT_RESOURCE;
    public static final java.lang.String LANG_BUNDLE_NAME;
    public static final java.lang.String MULT_ORDER;
    public static final java.lang.String MULT_PRECEDES;
    public static final java.lang.String MULT_FOLLOWS;
    public static final java.lang.String LANG_ORIENTATION;
    public static final java.lang.String LANG_RIGHTTOLEFT;
    public static final java.lang.String LANG_LEFTTORIGHT;
    public static final java.lang.String LANG_NUMBERING;
    public static final java.lang.String LANG_ADDITIVE;
    public static final java.lang.String LANG_MULT_ADD;
    public static final java.lang.String LANG_MULTIPLIER;
    public static final java.lang.String LANG_MULTIPLIER_CHAR;
    public static final java.lang.String LANG_NUMBERGROUPS;
    public static final java.lang.String LANG_NUM_TABLES;
    public static final java.lang.String LANG_ALPHABET;
    public static final java.lang.String LANG_TRAD_ALPHABET;
    static final java.lang.Object[][] contents;

    public void <init>()
    {
        org.apache.xml.utils.res.XResourceBundle r0;

        r0 := @this: org.apache.xml.utils.res.XResourceBundle;

        specialinvoke r0.<java.util.ListResourceBundle: void <init>()>();

        return;
    }

    public static final org.apache.xml.utils.res.XResourceBundle loadResourceBundle(java.lang.String, java.util.Locale) throws java.util.MissingResourceException
    {
        org.apache.xml.utils.res.XResourceBundle $r8, $r14;
        java.util.MissingResourceException $r9, $r10, $r11;
        java.util.ResourceBundle $r7, $r13;
        java.util.Locale r0, $r12;
        java.lang.StringBuffer $r2, $r4, $r5;
        java.lang.String $r1, r3, $r6;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Locale;

        $r1 = staticinvoke <org.apache.xml.utils.res.XResourceBundle: java.lang.String getResourceSuffix(java.util.Locale)>(r0);

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        $r7 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>($r6, r0);

        $r8 = (org.apache.xml.utils.res.XResourceBundle) $r7;

        return $r8;

     label2:
        $r11 := @caughtexception;

     label3:
        $r12 = new java.util.Locale;

        specialinvoke $r12.<java.util.Locale: void <init>(java.lang.String,java.lang.String)>("en", "US");

        $r13 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String,java.util.Locale)>("org.apache.xml.utils.res.XResourceBundle", $r12);

        $r14 = (org.apache.xml.utils.res.XResourceBundle) $r13;

        return $r14;

     label4:
        $r9 := @caughtexception;

        $r10 = new java.util.MissingResourceException;

        specialinvoke $r10.<java.util.MissingResourceException: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Could not load any resource bundles.", r3, "");

        throw $r10;

        catch java.util.MissingResourceException from label1 to label2 with label2;
        catch java.util.MissingResourceException from label3 to label4 with label4;
    }

    private static final java.lang.String getResourceSuffix(java.util.Locale)
    {
        java.util.Locale r0;
        java.lang.StringBuffer $r4, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        java.lang.String $r1, $r2, $r3, $r6, $r8, r19;
        boolean $z0, $z1;

        r0 := @parameter0: java.util.Locale;

        $r1 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r2 = virtualinvoke r0.<java.util.Locale: java.lang.String getCountry()>();

        $r3 = virtualinvoke r0.<java.util.Locale: java.lang.String getVariant()>();

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        $r6 = virtualinvoke r0.<java.util.Locale: java.lang.String getLanguage()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        r19 = $r8;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("zh");

        if $z0 == 0 goto label1;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.String toString()>();

     label1:
        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("JP");

        if $z1 == 0 goto label2;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r19);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("_");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        r19 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        return r19;
    }

    public java.lang.Object[][] getContents()
    {
        java.lang.Object[][] $r0;
        org.apache.xml.utils.res.XResourceBundle r1;

        r1 := @this: org.apache.xml.utils.res.XResourceBundle;

        $r0 = <org.apache.xml.utils.res.XResourceBundle: java.lang.Object[][] contents>;

        return $r0;
    }

    static void <clinit>()
    {
        java.lang.Object[] $r1, $r2, $r3, $r4, $r6, $r8, $r9;
        java.lang.Object[][] $r0;
        char[] $r5, $r7;

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_TRAD_ALPHABET> = "tradAlphabet";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_ALPHABET> = "alphabet";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_NUM_TABLES> = "tables";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_NUMBERGROUPS> = "numberGroups";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_MULTIPLIER_CHAR> = "multiplierChar";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_MULTIPLIER> = "multiplier";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_MULT_ADD> = "multiplicative-additive";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_ADDITIVE> = "additive";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_NUMBERING> = "numbering";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_LEFTTORIGHT> = "leftToRight";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_RIGHTTOLEFT> = "rightToLeft";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_ORIENTATION> = "orientation";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String MULT_FOLLOWS> = "follows";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String MULT_PRECEDES> = "precedes";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String MULT_ORDER> = "multiplierOrder";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String LANG_BUNDLE_NAME> = "org.apache.xml.utils.res.XResources";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String XSLT_RESOURCE> = "org.apache.xml.utils.res.XResourceBundle";

        <org.apache.xml.utils.res.XResourceBundle: java.lang.String ERROR_RESOURCES> = "org.apache.xalan.res.XSLTErrorResources";

        $r0 = newarray (java.lang.Object[])[7];

        $r1 = newarray (java.lang.Object)[2];

        $r1[0] = "ui_language";

        $r1[1] = "en";

        $r0[0] = $r1;

        $r2 = newarray (java.lang.Object)[2];

        $r2[0] = "help_language";

        $r2[1] = "en";

        $r0[1] = $r2;

        $r3 = newarray (java.lang.Object)[2];

        $r3[0] = "language";

        $r3[1] = "en";

        $r0[2] = $r3;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "alphabet";

        $r5 = newarray (char)[26];

        $r5[0] = 65;

        $r5[1] = 66;

        $r5[2] = 67;

        $r5[3] = 68;

        $r5[4] = 69;

        $r5[5] = 70;

        $r5[6] = 71;

        $r5[7] = 72;

        $r5[8] = 73;

        $r5[9] = 74;

        $r5[10] = 75;

        $r5[11] = 76;

        $r5[12] = 77;

        $r5[13] = 78;

        $r5[14] = 79;

        $r5[15] = 80;

        $r5[16] = 81;

        $r5[17] = 82;

        $r5[18] = 83;

        $r5[19] = 84;

        $r5[20] = 85;

        $r5[21] = 86;

        $r5[22] = 87;

        $r5[23] = 88;

        $r5[24] = 89;

        $r5[25] = 90;

        $r4[1] = $r5;

        $r0[3] = $r4;

        $r6 = newarray (java.lang.Object)[2];

        $r6[0] = "tradAlphabet";

        $r7 = newarray (char)[26];

        $r7[0] = 65;

        $r7[1] = 66;

        $r7[2] = 67;

        $r7[3] = 68;

        $r7[4] = 69;

        $r7[5] = 70;

        $r7[6] = 71;

        $r7[7] = 72;

        $r7[8] = 73;

        $r7[9] = 74;

        $r7[10] = 75;

        $r7[11] = 76;

        $r7[12] = 77;

        $r7[13] = 78;

        $r7[14] = 79;

        $r7[15] = 80;

        $r7[16] = 81;

        $r7[17] = 82;

        $r7[18] = 83;

        $r7[19] = 84;

        $r7[20] = 85;

        $r7[21] = 86;

        $r7[22] = 87;

        $r7[23] = 88;

        $r7[24] = 89;

        $r7[25] = 90;

        $r6[1] = $r7;

        $r0[4] = $r6;

        $r8 = newarray (java.lang.Object)[2];

        $r8[0] = "orientation";

        $r8[1] = "LeftToRight";

        $r0[5] = $r8;

        $r9 = newarray (java.lang.Object)[2];

        $r9[0] = "numbering";

        $r9[1] = "additive";

        $r0[6] = $r9;

        <org.apache.xml.utils.res.XResourceBundle: java.lang.Object[][] contents> = $r0;

        return;
    }
}
