public final class org.apache.poi.hssf.record.aggregates.SharedValueManager extends java.lang.Object
{
    private final java.util.List _arrayRecords;
    private final org.apache.poi.hssf.record.TableRecord[] _tableRecords;
    private final java.util.Map _groupsBySharedFormulaRecord;
    private java.util.Map _groupsCache;

    public static org.apache.poi.hssf.record.aggregates.SharedValueManager createEmpty()
    {
        org.apache.poi.hssf.record.TableRecord[] $r1;
        org.apache.poi.hssf.record.ArrayRecord[] $r2;
        org.apache.poi.hssf.record.aggregates.SharedValueManager $r0;
        org.apache.poi.hssf.record.SharedFormulaRecord[] $r4;
        org.apache.poi.ss.util.CellReference[] $r3;

        $r0 = new org.apache.poi.hssf.record.aggregates.SharedValueManager;

        $r4 = newarray (org.apache.poi.hssf.record.SharedFormulaRecord)[0];

        $r3 = newarray (org.apache.poi.ss.util.CellReference)[0];

        $r2 = newarray (org.apache.poi.hssf.record.ArrayRecord)[0];

        $r1 = newarray (org.apache.poi.hssf.record.TableRecord)[0];

        specialinvoke $r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: void <init>(org.apache.poi.hssf.record.SharedFormulaRecord[],org.apache.poi.ss.util.CellReference[],org.apache.poi.hssf.record.ArrayRecord[],org.apache.poi.hssf.record.TableRecord[])>($r4, $r3, $r2, $r1);

        return $r0;
    }

    private void <init>(org.apache.poi.hssf.record.SharedFormulaRecord[], org.apache.poi.ss.util.CellReference[], org.apache.poi.hssf.record.ArrayRecord[], org.apache.poi.hssf.record.TableRecord[])
    {
        org.apache.poi.hssf.record.TableRecord[] r5;
        java.util.HashMap $r6;
        org.apache.poi.ss.util.CellReference $r9;
        int i0, $i1, $i2, $i3, $i4, i5;
        java.lang.String $r17;
        org.apache.poi.ss.util.CellReference[] r2;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;
        java.lang.IllegalArgumentException $r10;
        org.apache.poi.hssf.record.SharedFormulaRecord[] r1;
        org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup $r8;
        java.util.List $r4;
        org.apache.poi.hssf.record.ArrayRecord[] r3;
        org.apache.poi.hssf.record.SharedFormulaRecord r7;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r1 := @parameter0: org.apache.poi.hssf.record.SharedFormulaRecord[];

        r2 := @parameter1: org.apache.poi.ss.util.CellReference[];

        r3 := @parameter2: org.apache.poi.hssf.record.ArrayRecord[];

        r5 := @parameter3: org.apache.poi.hssf.record.TableRecord[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        i0 = lengthof r1;

        $i1 = lengthof r2;

        if i0 == $i1 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("array sizes don\'t match: ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("!=");

        $i4 = lengthof r2;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r10;

     label1:
        $r4 = staticinvoke <org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List toList(java.lang.Object[])>(r3);

        r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List _arrayRecords> = $r4;

        r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: org.apache.poi.hssf.record.TableRecord[] _tableRecords> = r5;

        $r6 = new java.util.HashMap;

        $i2 = i0 * 3;

        $i3 = $i2 / 2;

        specialinvoke $r6.<java.util.HashMap: void <init>(int)>($i3);

        i5 = 0;

     label2:
        if i5 >= i0 goto label3;

        r7 = r1[i5];

        $r8 = new org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup;

        $r9 = r2[i5];

        specialinvoke $r8.<org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup: void <init>(org.apache.poi.hssf.record.SharedFormulaRecord,org.apache.poi.ss.util.CellReference)>(r7, $r9);

        interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r7, $r8);

        i5 = i5 + 1;

        goto label2;

     label3:
        r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsBySharedFormulaRecord> = $r6;

        return;
    }

    private static java.util.List toList(java.lang.Object[])
    {
        java.lang.Object[] r1;
        int $i0, $i1, i2;
        java.lang.Object $r2;
        java.util.ArrayList $r0;

        r1 := @parameter0: java.lang.Object[];

        $r0 = new java.util.ArrayList;

        $i0 = lengthof r1;

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = lengthof r1;

        if i2 >= $i1 goto label2;

        $r2 = r1[i2];

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r2);

        i2 = i2 + 1;

        goto label1;

     label2:
        return $r0;
    }

    public static org.apache.poi.hssf.record.aggregates.SharedValueManager create(org.apache.poi.hssf.record.SharedFormulaRecord[], org.apache.poi.ss.util.CellReference[], org.apache.poi.hssf.record.ArrayRecord[], org.apache.poi.hssf.record.TableRecord[])
    {
        org.apache.poi.hssf.record.TableRecord[] r3;
        org.apache.poi.hssf.record.aggregates.SharedValueManager $r4, $r5;
        org.apache.poi.hssf.record.SharedFormulaRecord[] r0;
        org.apache.poi.hssf.record.ArrayRecord[] r2;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.poi.ss.util.CellReference[] r1;

        r0 := @parameter0: org.apache.poi.hssf.record.SharedFormulaRecord[];

        r1 := @parameter1: org.apache.poi.ss.util.CellReference[];

        r2 := @parameter2: org.apache.poi.hssf.record.ArrayRecord[];

        r3 := @parameter3: org.apache.poi.hssf.record.TableRecord[];

        $i1 = lengthof r0;

        $i0 = lengthof r1;

        $i3 = $i1 + $i0;

        $i2 = lengthof r2;

        $i5 = $i3 + $i2;

        $i4 = lengthof r3;

        $i6 = $i5 + $i4;

        if $i6 >= 1 goto label1;

        $r5 = staticinvoke <org.apache.poi.hssf.record.aggregates.SharedValueManager: org.apache.poi.hssf.record.aggregates.SharedValueManager createEmpty()>();

        return $r5;

     label1:
        $r4 = new org.apache.poi.hssf.record.aggregates.SharedValueManager;

        specialinvoke $r4.<org.apache.poi.hssf.record.aggregates.SharedValueManager: void <init>(org.apache.poi.hssf.record.SharedFormulaRecord[],org.apache.poi.ss.util.CellReference[],org.apache.poi.hssf.record.ArrayRecord[],org.apache.poi.hssf.record.TableRecord[])>(r0, r1, r2, r3);

        return $r4;
    }

    public org.apache.poi.hssf.record.SharedFormulaRecord linkSharedFormulaRecord(org.apache.poi.ss.util.CellReference, org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate)
    {
        org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup $r2;
        org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate r3;
        org.apache.poi.hssf.record.SharedFormulaRecord $r4;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;
        java.lang.RuntimeException $r5;
        org.apache.poi.ss.util.CellReference r1;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r1 := @parameter0: org.apache.poi.ss.util.CellReference;

        r3 := @parameter1: org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate;

        $r2 = specialinvoke r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup findFormulaGroupForCell(org.apache.poi.ss.util.CellReference)>(r1);

        if null != $r2 goto label1;

        $r5 = new java.lang.RuntimeException;

        specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String)>("Failed to find a matching shared formula record");

        throw $r5;

     label1:
        virtualinvoke $r2.<org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup: void add(org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate)>(r3);

        $r4 = virtualinvoke $r2.<org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup: org.apache.poi.hssf.record.SharedFormulaRecord getSFR()>();

        return $r4;
    }

    private org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup findFormulaGroupForCell(org.apache.poi.ss.util.CellReference)
    {
        java.util.HashMap $r6;
        java.lang.Integer $r4, $r16;
        org.apache.poi.ss.util.CellReference r2, $r15;
        java.util.Map $r1, $r3, $r7, $r8, $r14;
        int $i0;
        boolean $z0;
        java.util.Iterator $r10;
        java.util.Collection $r9;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;
        org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup $r11, r13;
        java.lang.Object $r5, $r12;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r2 := @parameter0: org.apache.poi.ss.util.CellReference;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsCache>;

        if null != $r1 goto label2;

        $r6 = new java.util.HashMap;

        $r7 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsBySharedFormulaRecord>;

        $i0 = interfaceinvoke $r7.<java.util.Map: int size()>();

        specialinvoke $r6.<java.util.HashMap: void <init>(int)>($i0);

        r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsCache> = $r6;

        $r8 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsBySharedFormulaRecord>;

        $r9 = interfaceinvoke $r8.<java.util.Map: java.util.Collection values()>();

        $r10 = interfaceinvoke $r9.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup) $r12;

        $r14 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsCache>;

        $r15 = staticinvoke <org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup: org.apache.poi.ss.util.CellReference access$000(org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup)>(r13);

        $r16 = specialinvoke r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.lang.Integer getKeyForCache(org.apache.poi.ss.util.CellReference)>($r15);

        interfaceinvoke $r14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r16, r13);

        goto label1;

     label2:
        $r3 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsCache>;

        $r4 = specialinvoke r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.lang.Integer getKeyForCache(org.apache.poi.ss.util.CellReference)>(r2);

        $r5 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        $r11 = (org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup) $r5;

        return $r11;
    }

    private java.lang.Integer getKeyForCache(org.apache.poi.ss.util.CellReference)
    {
        org.apache.poi.hssf.record.aggregates.SharedValueManager r2;
        java.lang.Integer $r3;
        org.apache.poi.ss.util.CellReference r1;
        short $s0;
        int $i1, $i2, $i3, $i4, $i5;

        r2 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r1 := @parameter0: org.apache.poi.ss.util.CellReference;

        $r3 = new java.lang.Integer;

        $s0 = virtualinvoke r1.<org.apache.poi.ss.util.CellReference: short getCol()>();

        $i5 = (int) $s0;

        $i1 = $i5 + 1;

        $i2 = $i1 << 16;

        $i3 = virtualinvoke r1.<org.apache.poi.ss.util.CellReference: int getRow()>();

        $i4 = $i2 | $i3;

        specialinvoke $r3.<java.lang.Integer: void <init>(int)>($i4);

        return $r3;
    }

    public org.apache.poi.hssf.record.SharedValueRecordBase getRecordForFirstCell(org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate)
    {
        org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate r0;
        org.apache.poi.hssf.record.TableRecord[] $r11;
        org.apache.poi.hssf.record.ArrayRecord r13;
        org.apache.poi.ss.util.CellReference $r3;
        short $s1, $s3;
        java.util.Map $r5;
        int $i0, $i2, $i4, i5, $i6, $i7, $i8, $i9;
        boolean $z0, $z1, $z2, $z3;
        org.apache.poi.ss.formula.Formula $r2;
        java.util.Iterator $r7;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r4;
        org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup $r10;
        java.util.List $r6;
        org.apache.poi.hssf.record.TableRecord r9;
        org.apache.poi.hssf.record.SharedFormulaRecord $r12;
        java.lang.Object $r8;
        org.apache.poi.hssf.record.FormulaRecord $r1;

        r4 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r0 := @parameter0: org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate;

        $r1 = virtualinvoke r0.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: org.apache.poi.hssf.record.FormulaRecord getFormulaRecord()>();

        $r2 = virtualinvoke $r1.<org.apache.poi.hssf.record.FormulaRecord: org.apache.poi.ss.formula.Formula getFormula()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.util.CellReference getExpReference()>();

        if $r3 != null goto label01;

        return null;

     label01:
        $i0 = virtualinvoke $r3.<org.apache.poi.ss.util.CellReference: int getRow()>();

        $s1 = virtualinvoke $r3.<org.apache.poi.ss.util.CellReference: short getCol()>();

        $i2 = virtualinvoke r0.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: int getRow()>();

        if $i2 != $i0 goto label02;

        $s3 = virtualinvoke r0.<org.apache.poi.hssf.record.aggregates.FormulaRecordAggregate: short getColumn()>();

        $i6 = (int) $s3;

        $i7 = (int) $s1;

        if $i6 == $i7 goto label03;

     label02:
        return null;

     label03:
        $r5 = r4.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsBySharedFormulaRecord>;

        $z0 = interfaceinvoke $r5.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label04;

        $r10 = specialinvoke r4.<org.apache.poi.hssf.record.aggregates.SharedValueManager: org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup findFormulaGroupForCell(org.apache.poi.ss.util.CellReference)>($r3);

        if null == $r10 goto label04;

        $r12 = virtualinvoke $r10.<org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup: org.apache.poi.hssf.record.SharedFormulaRecord getSFR()>();

        return $r12;

     label04:
        $r11 = r4.<org.apache.poi.hssf.record.aggregates.SharedValueManager: org.apache.poi.hssf.record.TableRecord[] _tableRecords>;

        $i4 = lengthof $r11;

        i5 = 0;

     label05:
        if i5 >= $i4 goto label07;

        r9 = $r11[i5];

        $i8 = (int) $s1;

        $z3 = virtualinvoke r9.<org.apache.poi.hssf.record.TableRecord: boolean isFirstCell(int,int)>($i0, $i8);

        if $z3 == 0 goto label06;

        return r9;

     label06:
        i5 = i5 + 1;

        goto label05;

     label07:
        $r6 = r4.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List _arrayRecords>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label08:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.apache.poi.hssf.record.ArrayRecord) $r8;

        $i9 = (int) $s1;

        $z2 = virtualinvoke r13.<org.apache.poi.hssf.record.ArrayRecord: boolean isFirstCell(int,int)>($i0, $i9);

        if $z2 == 0 goto label09;

        return r13;

     label09:
        goto label08;

     label10:
        return null;
    }

    public void unlink(org.apache.poi.hssf.record.SharedFormulaRecord)
    {
        org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup r4;
        java.lang.IllegalStateException $r5;
        java.util.Map $r2;
        org.apache.poi.hssf.record.SharedFormulaRecord r1;
        java.lang.Object $r3;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r1 := @parameter0: org.apache.poi.hssf.record.SharedFormulaRecord;

        $r2 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsBySharedFormulaRecord>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        r4 = (org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup) $r3;

        if r4 != null goto label1;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Failed to find formulas for shared formula");

        throw $r5;

     label1:
        r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.Map _groupsCache> = null;

        virtualinvoke r4.<org.apache.poi.hssf.record.aggregates.SharedValueManager$SharedFormulaGroup: void unlinkSharedFormulas()>();

        return;
    }

    public void addArrayRecord(org.apache.poi.hssf.record.ArrayRecord)
    {
        org.apache.poi.hssf.record.ArrayRecord r1;
        java.util.List $r2;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        r1 := @parameter0: org.apache.poi.hssf.record.ArrayRecord;

        $r2 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List _arrayRecords>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public org.apache.poi.hssf.util.CellRangeAddress8Bit removeArrayFormula(int, int)
    {
        org.apache.poi.hssf.record.ArrayRecord r12;
        org.apache.poi.ss.util.CellReference $r3;
        int i0, i1;
        java.lang.String $r4, $r10;
        boolean $z0, $z1;
        java.util.Iterator $r2;
        org.apache.poi.hssf.util.CellRangeAddress8Bit $r14;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;
        java.lang.IllegalArgumentException $r5;
        java.util.List $r1, $r13;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.Object $r11;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List _arrayRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r11 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.apache.poi.hssf.record.ArrayRecord) $r11;

        $z1 = virtualinvoke r12.<org.apache.poi.hssf.record.ArrayRecord: boolean isInRange(int,int)>(i0, i1);

        if $z1 == 0 goto label2;

        $r13 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List _arrayRecords>;

        interfaceinvoke $r13.<java.util.List: boolean remove(java.lang.Object)>(r12);

        $r14 = virtualinvoke r12.<org.apache.poi.hssf.record.ArrayRecord: org.apache.poi.hssf.util.CellRangeAddress8Bit getRange()>();

        return $r14;

     label2:
        goto label1;

     label3:
        $r3 = new org.apache.poi.ss.util.CellReference;

        specialinvoke $r3.<org.apache.poi.ss.util.CellReference: void <init>(int,int,boolean,boolean)>(i0, i1, 0, 0);

        $r4 = virtualinvoke $r3.<org.apache.poi.ss.util.CellReference: java.lang.String formatAsString()>();

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Specified cell ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not part of an array formula.");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10);

        throw $r5;
    }

    public org.apache.poi.hssf.record.ArrayRecord getArrayRecord(int, int)
    {
        java.util.Iterator $r2;
        org.apache.poi.hssf.record.ArrayRecord r4;
        org.apache.poi.hssf.record.aggregates.SharedValueManager r0;
        java.util.List $r1;
        int i0, i1;
        java.lang.Object $r3;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.hssf.record.aggregates.SharedValueManager;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        $r1 = r0.<org.apache.poi.hssf.record.aggregates.SharedValueManager: java.util.List _arrayRecords>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.hssf.record.ArrayRecord) $r3;

        $z1 = virtualinvoke r4.<org.apache.poi.hssf.record.ArrayRecord: boolean isFirstCell(int,int)>(i0, i1);

        if $z1 == 0 goto label2;

        return r4;

     label2:
        goto label1;

     label3:
        return null;
    }
}
