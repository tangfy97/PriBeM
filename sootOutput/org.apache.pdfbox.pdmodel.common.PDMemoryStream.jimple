public class org.apache.pdfbox.pdmodel.common.PDMemoryStream extends org.apache.pdfbox.pdmodel.common.PDStream
{
    private byte[] data;

    public void <init>(byte[])
    {
        byte[] r1;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r1 := @parameter0: byte[];

        specialinvoke r0.<org.apache.pdfbox.pdmodel.common.PDStream: void <init>()>();

        r0.<org.apache.pdfbox.pdmodel.common.PDMemoryStream: byte[] data> = r1;

        return;
    }

    public void addCompression()
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return;
    }

    public org.apache.pdfbox.cos.COSBase getCOSObject()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r1;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not supported for memory stream");

        throw $r0;
    }

    public java.io.OutputStream createOutputStream() throws java.io.IOException
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r1;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not supported for memory stream");

        throw $r0;
    }

    public java.io.InputStream createInputStream() throws java.io.IOException
    {
        byte[] $r2;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r1;
        java.io.ByteArrayInputStream $r0;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        $r0 = new java.io.ByteArrayInputStream;

        $r2 = r1.<org.apache.pdfbox.pdmodel.common.PDMemoryStream: byte[] data>;

        specialinvoke $r0.<java.io.ByteArrayInputStream: void <init>(byte[])>($r2);

        return $r0;
    }

    public java.io.InputStream getPartiallyFilteredStream(java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;
        java.util.List r2;
        java.io.InputStream $r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r2 := @parameter0: java.util.List;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.common.PDMemoryStream: java.io.InputStream createInputStream()>();

        return $r1;
    }

    public org.apache.pdfbox.cos.COSStream getStream()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r1;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not supported for memory stream");

        throw $r0;
    }

    public int getLength()
    {
        int $i0;
        byte[] $r1;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDMemoryStream: byte[] data>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.util.List getFilters()
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return null;
    }

    public void setFilters(java.util.List)
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r1;
        java.util.List r2;

        r1 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r2 := @parameter0: java.util.List;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("not supported for memory stream");

        throw $r0;
    }

    public java.util.List getDecodeParams() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return null;
    }

    public void setDecodeParams(java.util.List)
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;
        java.util.List r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r1 := @parameter0: java.util.List;

        return;
    }

    public org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification getFile()
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return null;
    }

    public void setFile(org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification)
    {
        org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification r1;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.filespecification.PDFileSpecification;

        return;
    }

    public java.util.List getFileFilters()
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return null;
    }

    public void setFileFilters(java.util.List)
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;
        java.util.List r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r1 := @parameter0: java.util.List;

        return;
    }

    public java.util.List getFileDecodeParams() throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return null;
    }

    public void setFileDecodeParams(java.util.List)
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;
        java.util.List r1;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r1 := @parameter0: java.util.List;

        return;
    }

    public byte[] getByteArray() throws java.io.IOException
    {
        byte[] $r1;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        $r1 = r0.<org.apache.pdfbox.pdmodel.common.PDMemoryStream: byte[] data>;

        return $r1;
    }

    public org.apache.pdfbox.pdmodel.common.PDMetadata getMetadata()
    {
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        return null;
    }

    public void setMetadata(org.apache.pdfbox.pdmodel.common.PDMetadata)
    {
        org.apache.pdfbox.pdmodel.common.PDMetadata r1;
        org.apache.pdfbox.pdmodel.common.PDMemoryStream r0;

        r0 := @this: org.apache.pdfbox.pdmodel.common.PDMemoryStream;

        r1 := @parameter0: org.apache.pdfbox.pdmodel.common.PDMetadata;

        return;
    }
}
