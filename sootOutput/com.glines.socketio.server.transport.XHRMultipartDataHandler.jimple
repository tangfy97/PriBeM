final class com.glines.socketio.server.transport.XHRMultipartDataHandler extends com.glines.socketio.server.transport.AbstractDataHandler
{
    private static final java.util.logging.Logger LOGGER;
    private static final int MULTIPART_BOUNDARY_LENGTH;
    private static final long DEFAULT_HEARTBEAT_DELAY;
    private final com.glines.socketio.server.SocketIOSession session;
    private long hearbeatDelay;
    private final java.lang.String contentType;
    private final java.lang.String boundarySeperator;

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <com.glines.socketio.server.transport.XHRMultipartDataHandler: long DEFAULT_HEARTBEAT_DELAY> = 15000L;

        <com.glines.socketio.server.transport.XHRMultipartDataHandler: int MULTIPART_BOUNDARY_LENGTH> = 20;

        $r0 = class "Lcom/glines/socketio/server/transport/XHRMultipartDataHandler;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER> = $r2;

        return;
    }

    void <init>(com.glines.socketio.server.SocketIOSession)
    {
        com.glines.socketio.server.transport.XHRMultipartDataHandler r0;
        com.glines.socketio.server.SocketIOSession r1;
        java.lang.StringBuilder $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r2, $r5, $r9;

        r0 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        r1 := @parameter0: com.glines.socketio.server.SocketIOSession;

        specialinvoke r0.<com.glines.socketio.server.transport.AbstractDataHandler: void <init>()>();

        r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: com.glines.socketio.server.SocketIOSession session> = r1;

        $r2 = staticinvoke <com.glines.socketio.util.Web: java.lang.String generateRandomString(int)>(20);

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("--");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: java.lang.String boundarySeperator> = $r5;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("multipart/x-mixed-replace;boundary=\"");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: java.lang.String contentType> = $r9;

        return;
    }

    protected void init()
    {
        long $l0, $l1;
        java.util.logging.Level $r2;
        java.lang.String $r7, $r8, $r12;
        boolean $z0;
        com.glines.socketio.server.transport.XHRMultipartDataHandler r0;
        com.glines.socketio.server.SocketIOConfig $r1, $r6;
        java.util.logging.Logger $r3, $r5;
        java.lang.StringBuilder $r4, $r9, $r10, $r11;

        r0 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        $r1 = virtualinvoke r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: com.glines.socketio.server.SocketIOConfig getConfig()>();

        $l0 = interfaceinvoke $r1.<com.glines.socketio.server.SocketIOConfig: long getHeartbeatDelay(long)>(15000L);

        r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: long hearbeatDelay> = $l0;

        $r3 = <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER>;

        $r2 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r3.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r2);

        if $z0 == 0 goto label1;

        $r5 = <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER>;

        $r4 = new java.lang.StringBuilder;

        $r6 = virtualinvoke r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: com.glines.socketio.server.SocketIOConfig getConfig()>();

        $r7 = interfaceinvoke $r6.<com.glines.socketio.server.SocketIOConfig: java.lang.String getNamespace()>();

        $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);

        specialinvoke $r4.<java.lang.StringBuilder: void <init>(java.lang.String)>($r8);

        $r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data handler configuration:\n");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - heartbeatDelay=");

        $l1 = r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: long hearbeatDelay>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.util.logging.Logger: void fine(java.lang.String)>($r12);

     label1:
        return;
    }

    public boolean isConnectionPersistent()
    {
        com.glines.socketio.server.transport.XHRMultipartDataHandler r0;

        r0 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        return 1;
    }

    public void onStartSend(javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        com.glines.socketio.server.transport.XHRMultipartDataHandler r1;
        javax.servlet.ServletOutputStream $r3;
        javax.servlet.http.HttpServletResponse r0;
        java.lang.String $r2, $r4;

        r1 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        $r2 = r1.<com.glines.socketio.server.transport.XHRMultipartDataHandler: java.lang.String contentType>;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>($r2);

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Connection", "keep-alive");

        $r3 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r4 = r1.<com.glines.socketio.server.transport.XHRMultipartDataHandler: java.lang.String boundarySeperator>;

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void print(java.lang.String)>($r4);

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void flushBuffer()>();

        return;
    }

    public void onWriteData(javax.servlet.ServletResponse, java.lang.String) throws java.io.IOException
    {
        byte[] $r5;
        com.glines.socketio.server.SocketIOSession $r13, $r22;
        java.util.logging.Level $r0, $r8, $r12, $r21;
        javax.servlet.ServletOutputStream $r3;
        java.lang.String r4, $r7, $r14, $r18, $r23, $r27;
        boolean $z0, $z1;
        com.glines.socketio.server.transport.XHRMultipartDataHandler r6;
        java.util.logging.Logger $r1, $r9, $r11, $r20;
        javax.servlet.ServletResponse r2;
        java.lang.StringBuilder $r10, $r15, $r16, $r17, $r19, $r24, $r25, $r26;

        r6 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        r2 := @parameter0: javax.servlet.ServletResponse;

        r4 := @parameter1: java.lang.String;

        $r1 = <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER>;

        $r0 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z0 = virtualinvoke $r1.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r0);

        if $z0 == 0 goto label1;

        $r20 = <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER>;

        $r21 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r22 = r6.<com.glines.socketio.server.transport.XHRMultipartDataHandler: com.glines.socketio.server.SocketIOSession session>;

        $r23 = interfaceinvoke $r22.<com.glines.socketio.server.SocketIOSession: java.lang.String getSessionId()>();

        $r24 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: writeData(START): ");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r20.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r21, $r27);

     label1:
        $r3 = interfaceinvoke r2.<javax.servlet.ServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void println(java.lang.String)>("Content-Type: text/plain; charset=utf-8");

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void println()>();

        $r5 = virtualinvoke r4.<java.lang.String: byte[] getBytes()>();

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void write(byte[])>($r5);

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void println()>();

        $r7 = r6.<com.glines.socketio.server.transport.XHRMultipartDataHandler: java.lang.String boundarySeperator>;

        virtualinvoke $r3.<javax.servlet.ServletOutputStream: void println(java.lang.String)>($r7);

        interfaceinvoke r2.<javax.servlet.ServletResponse: void flushBuffer()>();

        $r9 = <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER>;

        $r8 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $z1 = virtualinvoke $r9.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>($r8);

        if $z1 == 0 goto label2;

        $r11 = <com.glines.socketio.server.transport.XHRMultipartDataHandler: java.util.logging.Logger LOGGER>;

        $r12 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Session[");

        $r13 = r6.<com.glines.socketio.server.transport.XHRMultipartDataHandler: com.glines.socketio.server.SocketIOSession session>;

        $r14 = interfaceinvoke $r13.<com.glines.socketio.server.SocketIOSession: java.lang.String getSessionId()>();

        $r15 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]: writeData(END): ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r12, $r18);

     label2:
        return;
    }

    public void onFinishSend(javax.servlet.ServletResponse) throws java.io.IOException
    {
        com.glines.socketio.server.transport.XHRMultipartDataHandler r0;
        javax.servlet.ServletResponse r1;

        r0 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        r1 := @parameter0: javax.servlet.ServletResponse;

        return;
    }

    public void onConnect(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws java.io.IOException
    {
        com.glines.socketio.server.transport.XHRMultipartDataHandler r0;
        com.glines.socketio.server.SocketIOFrame$FrameType $r3, $r7;
        com.glines.socketio.server.SocketIOSession $r2;
        javax.servlet.http.HttpServletResponse r1;
        long $l0;
        javax.servlet.http.HttpServletRequest r11;
        java.lang.StringBuilder $r6, $r8;
        java.lang.String $r4, $r5, $r9, $r10;

        r0 := @this: com.glines.socketio.server.transport.XHRMultipartDataHandler;

        r11 := @parameter0: javax.servlet.http.HttpServletRequest;

        r1 := @parameter1: javax.servlet.http.HttpServletResponse;

        virtualinvoke r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: void onStartSend(javax.servlet.http.HttpServletResponse)>(r1);

        $r3 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType SESSION_ID>;

        $r2 = r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: com.glines.socketio.server.SocketIOSession session>;

        $r4 = interfaceinvoke $r2.<com.glines.socketio.server.SocketIOSession: java.lang.String getSessionId()>();

        $r5 = staticinvoke <com.glines.socketio.server.SocketIOFrame: java.lang.String encode(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r3, 0, $r4);

        virtualinvoke r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: void onWriteData(javax.servlet.ServletResponse,java.lang.String)>(r1, $r5);

        $r7 = <com.glines.socketio.server.SocketIOFrame$FrameType: com.glines.socketio.server.SocketIOFrame$FrameType HEARTBEAT_INTERVAL>;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $l0 = r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: long hearbeatDelay>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = staticinvoke <com.glines.socketio.server.SocketIOFrame: java.lang.String encode(com.glines.socketio.server.SocketIOFrame$FrameType,int,java.lang.String)>($r7, 0, $r9);

        virtualinvoke r0.<com.glines.socketio.server.transport.XHRMultipartDataHandler: void onWriteData(javax.servlet.ServletResponse,java.lang.String)>(r1, $r10);

        return;
    }
}
