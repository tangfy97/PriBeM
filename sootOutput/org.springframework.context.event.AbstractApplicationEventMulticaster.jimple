public abstract class org.springframework.context.event.AbstractApplicationEventMulticaster extends java.lang.Object implements org.springframework.context.event.ApplicationEventMulticaster, org.springframework.beans.factory.BeanFactoryAware
{
    private final org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever;
    private final java.util.Map retrieverCache;
    private org.springframework.beans.factory.BeanFactory beanFactory;

    public void <init>()
    {
        java.util.concurrent.ConcurrentHashMap $r2;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever;

        specialinvoke $r1.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: void <init>(org.springframework.context.event.AbstractApplicationEventMulticaster,boolean)>(r0, 0);

        r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever> = $r1;

        $r2 = new java.util.concurrent.ConcurrentHashMap;

        specialinvoke $r2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();

        r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache> = $r2;

        return;
    }

    public void addApplicationListener(org.springframework.context.ApplicationListener)
    {
        java.lang.Throwable $r6;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1, $r2;
        java.util.Map $r5;
        java.util.Set $r4;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.context.ApplicationListener r3;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r3 := @parameter0: org.springframework.context.ApplicationListener;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r4 = $r2.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListeners>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        $r5 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void addApplicationListenerBean(java.lang.String)
    {
        java.lang.Throwable $r6;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1, $r2;
        java.util.Map $r5;
        java.util.Set $r4;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        java.lang.String r3;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r4 = $r2.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListenerBeans>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>(r3);

        $r5 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeApplicationListener(org.springframework.context.ApplicationListener)
    {
        java.lang.Throwable $r6;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1, $r2;
        java.util.Map $r5;
        java.util.Set $r4;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.context.ApplicationListener r3;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r3 := @parameter0: org.springframework.context.ApplicationListener;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r4 = $r2.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListeners>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r3);

        $r5 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeApplicationListenerBean(java.lang.String)
    {
        java.lang.Throwable $r6;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1, $r2;
        java.util.Map $r5;
        java.util.Set $r4;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        java.lang.String r3;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r4 = $r2.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListenerBeans>;

        interfaceinvoke $r4.<java.util.Set: boolean remove(java.lang.Object)>(r3);

        $r5 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        interfaceinvoke $r5.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeAllListeners()
    {
        java.lang.Throwable $r7;
        java.util.Set $r3, $r5;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1, $r2, $r4;
        java.util.Map $r6;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        entermonitor $r1;

     label1:
        $r2 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r3 = $r2.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListeners>;

        interfaceinvoke $r3.<java.util.Set: void clear()>();

        $r4 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r5 = $r4.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListenerBeans>;

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        $r6 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        interfaceinvoke $r6.<java.util.Map: void clear()>();

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r7;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public final void setBeanFactory(org.springframework.beans.factory.BeanFactory)
    {
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.beans.factory.BeanFactory r1;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r1 := @parameter0: org.springframework.beans.factory.BeanFactory;

        r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.beans.factory.BeanFactory beanFactory> = r1;

        return;
    }

    private org.springframework.beans.factory.BeanFactory getBeanFactory()
    {
        java.lang.IllegalStateException $r3;
        org.springframework.beans.factory.BeanFactory $r1, $r2;
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.beans.factory.BeanFactory beanFactory>;

        if $r1 != null goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("ApplicationEventMulticaster cannot retrieve listener beans because it is not associated with a BeanFactory");

        throw $r3;

     label1:
        $r2 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.beans.factory.BeanFactory beanFactory>;

        return $r2;
    }

    protected java.util.Collection getApplicationListeners()
    {
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r1;
        java.util.Collection $r2;

        r0 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        $r1 = r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r2 = virtualinvoke $r1.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>();

        return $r2;
    }

    protected java.util.Collection getApplicationListeners(org.springframework.context.ApplicationEvent)
    {
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever $r8, $r10, $r11, $r16, $r20, r29;
        java.util.Map $r6, $r18;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        java.util.Collection $r27;
        java.util.Set $r12, $r15, $r17, $r21, $r26;
        org.springframework.context.ApplicationListener r25, r30;
        java.lang.Throwable $r28;
        org.springframework.context.event.AbstractApplicationEventMulticaster r5;
        org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey $r4;
        java.lang.String r31;
        java.util.LinkedList $r9;
        java.util.Iterator $r13, $r22;
        org.springframework.context.ApplicationEvent r0;
        org.springframework.beans.factory.BeanFactory $r19;
        java.lang.Class $r1, $r3;
        java.lang.Object $r2, $r7, $r14, $r23, $r24;

        r5 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r0 := @parameter0: org.springframework.context.ApplicationEvent;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke r0.<org.springframework.context.ApplicationEvent: java.lang.Object getSource()>();

        $r3 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = new org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey;

        specialinvoke $r4.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerCacheKey: void <init>(java.lang.Class,java.lang.Class)>($r1, $r3);

        $r6 = r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        $r7 = interfaceinvoke $r6.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r29 = (org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever) $r7;

        if r29 == null goto label01;

        $r27 = virtualinvoke r29.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Collection getApplicationListeners()>();

        return $r27;

     label01:
        $r8 = new org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever;

        specialinvoke $r8.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: void <init>(org.springframework.context.event.AbstractApplicationEventMulticaster,boolean)>(r5, 1);

        $r9 = new java.util.LinkedList;

        specialinvoke $r9.<java.util.LinkedList: void <init>()>();

        $r10 = r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        entermonitor $r10;

     label02:
        $r11 = r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r12 = $r11.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListeners>;

        $r13 = interfaceinvoke $r12.<java.util.Set: java.util.Iterator iterator()>();

        goto label04;

     label03:
        $r14 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r30 = (org.springframework.context.ApplicationListener) $r14;

        $z0 = virtualinvoke r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>(r30, $r1, $r3);

        if $z0 == 0 goto label04;

        $r15 = $r8.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListeners>;

        interfaceinvoke $r15.<java.util.Set: boolean add(java.lang.Object)>(r30);

        virtualinvoke $r9.<java.util.LinkedList: boolean add(java.lang.Object)>(r30);

     label04:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 != 0 goto label03;

        $r16 = r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r17 = $r16.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListenerBeans>;

        $z1 = interfaceinvoke $r17.<java.util.Set: boolean isEmpty()>();

        if $z1 != 0 goto label07;

        $r19 = specialinvoke r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.beans.factory.BeanFactory getBeanFactory()>();

        $r20 = r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever defaultRetriever>;

        $r21 = $r20.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListenerBeans>;

        $r22 = interfaceinvoke $r21.<java.util.Set: java.util.Iterator iterator()>();

        goto label06;

     label05:
        $r23 = interfaceinvoke $r22.<java.util.Iterator: java.lang.Object next()>();

        r31 = (java.lang.String) $r23;

        $r24 = interfaceinvoke $r19.<org.springframework.beans.factory.BeanFactory: java.lang.Object getBean(java.lang.String,java.lang.Class)>(r31, class "Lorg/springframework/context/ApplicationListener;");

        r25 = (org.springframework.context.ApplicationListener) $r24;

        $z2 = virtualinvoke $r9.<java.util.LinkedList: boolean contains(java.lang.Object)>(r25);

        if $z2 != 0 goto label06;

        $z3 = virtualinvoke r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: boolean supportsEvent(org.springframework.context.ApplicationListener,java.lang.Class,java.lang.Class)>(r25, $r1, $r3);

        if $z3 == 0 goto label06;

        $r26 = $r8.<org.springframework.context.event.AbstractApplicationEventMulticaster$ListenerRetriever: java.util.Set applicationListenerBeans>;

        interfaceinvoke $r26.<java.util.Set: boolean add(java.lang.Object)>(r31);

        virtualinvoke $r9.<java.util.LinkedList: boolean add(java.lang.Object)>(r25);

     label06:
        $z5 = interfaceinvoke $r22.<java.util.Iterator: boolean hasNext()>();

        if $z5 != 0 goto label05;

     label07:
        staticinvoke <org.springframework.core.OrderComparator: void sort(java.util.List)>($r9);

        $r18 = r5.<org.springframework.context.event.AbstractApplicationEventMulticaster: java.util.Map retrieverCache>;

        interfaceinvoke $r18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, $r8);

        exitmonitor $r10;

     label08:
        goto label11;

     label09:
        $r28 := @caughtexception;

        exitmonitor $r10;

     label10:
        throw $r28;

     label11:
        return $r9;

        catch java.lang.Throwable from label02 to label08 with label09;
        catch java.lang.Throwable from label09 to label10 with label09;
    }

    protected boolean supportsEvent(org.springframework.context.ApplicationListener, java.lang.Class, java.lang.Class)
    {
        org.springframework.context.event.GenericApplicationListenerAdapter $r5;
        org.springframework.context.event.SmartApplicationListener $r4;
        org.springframework.context.ApplicationListener r0;
        org.springframework.context.event.AbstractApplicationEventMulticaster r3;
        java.lang.Class r1, r2;
        boolean $z0, $z1, $z2;

        r3 := @this: org.springframework.context.event.AbstractApplicationEventMulticaster;

        r0 := @parameter0: org.springframework.context.ApplicationListener;

        r1 := @parameter1: java.lang.Class;

        r2 := @parameter2: java.lang.Class;

        $z0 = r0 instanceof org.springframework.context.event.SmartApplicationListener;

        if $z0 == 0 goto label1;

        $r4 = (org.springframework.context.event.SmartApplicationListener) r0;

        goto label2;

     label1:
        $r5 = new org.springframework.context.event.GenericApplicationListenerAdapter;

        $r4 = $r5;

        specialinvoke $r5.<org.springframework.context.event.GenericApplicationListenerAdapter: void <init>(org.springframework.context.ApplicationListener)>(r0);

     label2:
        $z1 = interfaceinvoke $r4.<org.springframework.context.event.SmartApplicationListener: boolean supportsEventType(java.lang.Class)>(r1);

        if $z1 == 0 goto label3;

        $z2 = interfaceinvoke $r4.<org.springframework.context.event.SmartApplicationListener: boolean supportsSourceType(java.lang.Class)>(r2);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    static org.springframework.beans.factory.BeanFactory access$0(org.springframework.context.event.AbstractApplicationEventMulticaster)
    {
        org.springframework.context.event.AbstractApplicationEventMulticaster r0;
        org.springframework.beans.factory.BeanFactory $r1;

        r0 := @parameter0: org.springframework.context.event.AbstractApplicationEventMulticaster;

        $r1 = specialinvoke r0.<org.springframework.context.event.AbstractApplicationEventMulticaster: org.springframework.beans.factory.BeanFactory getBeanFactory()>();

        return $r1;
    }
}
