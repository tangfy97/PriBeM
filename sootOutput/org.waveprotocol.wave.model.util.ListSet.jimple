public final class org.waveprotocol.wave.model.util.ListSet extends java.util.AbstractSet
{
    private final java.util.ArrayList store;

    public void <init>()
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store> = $r1;

        return;
    }

    public void <init>(org.waveprotocol.wave.model.util.ListSet)
    {
        org.waveprotocol.wave.model.util.ListSet r0, r2;
        java.util.ArrayList $r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        r2 := @parameter0: org.waveprotocol.wave.model.util.ListSet;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        $r1 = new java.util.ArrayList;

        $r3 = r2.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        specialinvoke $r1.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store> = $r1;

        return;
    }

    public boolean remove(java.lang.Object)
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    public java.util.Iterator iterator()
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.util.Iterator $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        $r1 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        $r2 = virtualinvoke $r1.<java.util.ArrayList: java.util.Iterator iterator()>();

        return $r2;
    }

    public int size()
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        int $i0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        $r1 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        $i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.lang.Object r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean containsAll(java.util.Collection)
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.util.Collection r1;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        r1 := @parameter0: java.util.Collection;

        $r2 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean containsAll(java.util.Collection)>(r1);

        return $z0;
    }

    public boolean add(java.lang.Object)
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.lang.Object r1;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        org.waveprotocol.wave.model.util.ListSet r3;
        java.util.Iterator $r1;
        java.util.Collection r0;
        java.lang.Object $r2;
        boolean $z0, $z1, z2;

        r3 := @this: org.waveprotocol.wave.model.util.ListSet;

        r0 := @parameter0: java.util.Collection;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $z1 = virtualinvoke r3.<org.waveprotocol.wave.model.util.ListSet: boolean add(java.lang.Object)>($r2);

        if $z1 == 0 goto label2;

        z2 = 1;

     label2:
        goto label1;

     label3:
        return z2;
    }

    public void clear()
    {
        org.waveprotocol.wave.model.util.ListSet r0;
        java.util.ArrayList $r1;

        r0 := @this: org.waveprotocol.wave.model.util.ListSet;

        $r1 = r0.<org.waveprotocol.wave.model.util.ListSet: java.util.ArrayList store>;

        virtualinvoke $r1.<java.util.ArrayList: void clear()>();

        return;
    }
}
