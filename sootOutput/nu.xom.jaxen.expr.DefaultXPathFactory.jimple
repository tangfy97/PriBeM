public class nu.xom.jaxen.expr.DefaultXPathFactory extends java.lang.Object implements nu.xom.jaxen.expr.XPathFactory
{

    public void <init>()
    {
        nu.xom.jaxen.expr.DefaultXPathFactory r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public nu.xom.jaxen.expr.XPathExpr createXPath(nu.xom.jaxen.expr.Expr) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultXPathExpr $r0;
        nu.xom.jaxen.expr.Expr r1;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        $r0 = new nu.xom.jaxen.expr.DefaultXPathExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultXPathExpr: void <init>(nu.xom.jaxen.expr.Expr)>(r1);

        return $r0;
    }

    public nu.xom.jaxen.expr.PathExpr createPathExpr(nu.xom.jaxen.expr.FilterExpr, nu.xom.jaxen.expr.LocationPath) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.FilterExpr r1;
        nu.xom.jaxen.expr.LocationPath r2;
        nu.xom.jaxen.expr.DefaultPathExpr $r0;
        nu.xom.jaxen.expr.DefaultXPathFactory r3;

        r3 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.FilterExpr;

        r2 := @parameter1: nu.xom.jaxen.expr.LocationPath;

        $r0 = new nu.xom.jaxen.expr.DefaultPathExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultPathExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.LocationPath)>(r1, r2);

        return $r0;
    }

    public nu.xom.jaxen.expr.LocationPath createRelativeLocationPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultXPathFactory r1;
        nu.xom.jaxen.expr.DefaultRelativeLocationPath $r0;

        r1 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        $r0 = new nu.xom.jaxen.expr.DefaultRelativeLocationPath;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultRelativeLocationPath: void <init>()>();

        return $r0;
    }

    public nu.xom.jaxen.expr.LocationPath createAbsoluteLocationPath() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultAbsoluteLocationPath $r0;
        nu.xom.jaxen.expr.DefaultXPathFactory r1;

        r1 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        $r0 = new nu.xom.jaxen.expr.DefaultAbsoluteLocationPath;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultAbsoluteLocationPath: void <init>()>();

        return $r0;
    }

    public nu.xom.jaxen.expr.BinaryExpr createOrExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultOrExpr $r0;
        nu.xom.jaxen.expr.DefaultXPathFactory r3;

        r3 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        $r0 = new nu.xom.jaxen.expr.DefaultOrExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultOrExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;
    }

    public nu.xom.jaxen.expr.BinaryExpr createAndExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultAndExpr $r0;
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultXPathFactory r3;

        r3 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        $r0 = new nu.xom.jaxen.expr.DefaultAndExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultAndExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;
    }

    public nu.xom.jaxen.expr.BinaryExpr createEqualityExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr, int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultEqualsExpr $r3;
        nu.xom.jaxen.JaxenException $r4;
        nu.xom.jaxen.expr.DefaultXPathFactory r9;
        java.lang.StringBuffer $r5, $r6, $r7;
        int i0;
        java.lang.String $r8;
        nu.xom.jaxen.expr.DefaultNotEqualsExpr $r0;

        r9 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = new nu.xom.jaxen.expr.DefaultEqualsExpr;

        specialinvoke $r3.<nu.xom.jaxen.expr.DefaultEqualsExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r3;

     label2:
        $r0 = new nu.xom.jaxen.expr.DefaultNotEqualsExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultNotEqualsExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;

     label3:
        $r4 = new nu.xom.jaxen.JaxenException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled operator in createEqualityExpr(): ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<nu.xom.jaxen.JaxenException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public nu.xom.jaxen.expr.BinaryExpr createRelationalExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr, int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.JaxenException $r6;
        nu.xom.jaxen.expr.DefaultXPathFactory r11;
        nu.xom.jaxen.expr.DefaultLessThanEqualExpr $r4;
        nu.xom.jaxen.expr.DefaultLessThanExpr $r5;
        java.lang.StringBuffer $r7, $r8, $r9;
        int i0;
        java.lang.String $r10;
        nu.xom.jaxen.expr.DefaultGreaterThanExpr $r3;
        nu.xom.jaxen.expr.DefaultGreaterThanEqualExpr $r0;

        r11 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        i0 := @parameter2: int;

        tableswitch(i0)
        {
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label2;
            case 6: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = new nu.xom.jaxen.expr.DefaultLessThanExpr;

        specialinvoke $r5.<nu.xom.jaxen.expr.DefaultLessThanExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r5;

     label2:
        $r3 = new nu.xom.jaxen.expr.DefaultGreaterThanExpr;

        specialinvoke $r3.<nu.xom.jaxen.expr.DefaultGreaterThanExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r3;

     label3:
        $r4 = new nu.xom.jaxen.expr.DefaultLessThanEqualExpr;

        specialinvoke $r4.<nu.xom.jaxen.expr.DefaultLessThanEqualExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r4;

     label4:
        $r0 = new nu.xom.jaxen.expr.DefaultGreaterThanEqualExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultGreaterThanEqualExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;

     label5:
        $r6 = new nu.xom.jaxen.JaxenException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled operator in createRelationalExpr(): ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<nu.xom.jaxen.JaxenException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    public nu.xom.jaxen.expr.BinaryExpr createAdditiveExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr, int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultMinusExpr $r0;
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultPlusExpr $r3;
        nu.xom.jaxen.JaxenException $r4;
        nu.xom.jaxen.expr.DefaultXPathFactory r9;
        java.lang.StringBuffer $r5, $r6, $r7;
        int i0;
        java.lang.String $r8;

        r9 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        i0 := @parameter2: int;

        lookupswitch(i0)
        {
            case 7: goto label1;
            case 8: goto label2;
            default: goto label3;
        };

     label1:
        $r3 = new nu.xom.jaxen.expr.DefaultPlusExpr;

        specialinvoke $r3.<nu.xom.jaxen.expr.DefaultPlusExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r3;

     label2:
        $r0 = new nu.xom.jaxen.expr.DefaultMinusExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultMinusExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;

     label3:
        $r4 = new nu.xom.jaxen.JaxenException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled operator in createAdditiveExpr(): ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<nu.xom.jaxen.JaxenException: void <init>(java.lang.String)>($r8);

        throw $r4;
    }

    public nu.xom.jaxen.expr.BinaryExpr createMultiplicativeExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr, int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultDivExpr $r0;
        nu.xom.jaxen.expr.DefaultModExpr $r3;
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.JaxenException $r5;
        nu.xom.jaxen.expr.DefaultXPathFactory r10;
        nu.xom.jaxen.expr.DefaultMultiplyExpr $r4;
        java.lang.StringBuffer $r6, $r7, $r8;
        int i0;
        java.lang.String $r9;

        r10 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        i0 := @parameter2: int;

        tableswitch(i0)
        {
            case 9: goto label1;
            case 10: goto label3;
            case 11: goto label2;
            default: goto label4;
        };

     label1:
        $r4 = new nu.xom.jaxen.expr.DefaultMultiplyExpr;

        specialinvoke $r4.<nu.xom.jaxen.expr.DefaultMultiplyExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r4;

     label2:
        $r0 = new nu.xom.jaxen.expr.DefaultDivExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultDivExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;

     label3:
        $r3 = new nu.xom.jaxen.expr.DefaultModExpr;

        specialinvoke $r3.<nu.xom.jaxen.expr.DefaultModExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r3;

     label4:
        $r5 = new nu.xom.jaxen.JaxenException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unhandled operator in createMultiplicativeExpr(): ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<nu.xom.jaxen.JaxenException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }

    public nu.xom.jaxen.expr.Expr createUnaryExpr(nu.xom.jaxen.expr.Expr, int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultUnaryExpr $r0;
        nu.xom.jaxen.expr.Expr r1;
        int i0;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        i0 := @parameter1: int;

        lookupswitch(i0)
        {
            case 12: goto label1;
            default: goto label2;
        };

     label1:
        $r0 = new nu.xom.jaxen.expr.DefaultUnaryExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultUnaryExpr: void <init>(nu.xom.jaxen.expr.Expr)>(r1);

        return $r0;

     label2:
        return r1;
    }

    public nu.xom.jaxen.expr.UnionExpr createUnionExpr(nu.xom.jaxen.expr.Expr, nu.xom.jaxen.expr.Expr) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r1, r2;
        nu.xom.jaxen.expr.DefaultUnionExpr $r0;
        nu.xom.jaxen.expr.DefaultXPathFactory r3;

        r3 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        r2 := @parameter1: nu.xom.jaxen.expr.Expr;

        $r0 = new nu.xom.jaxen.expr.DefaultUnionExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultUnionExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.Expr)>(r1, r2);

        return $r0;
    }

    public nu.xom.jaxen.expr.FilterExpr createFilterExpr(nu.xom.jaxen.expr.Expr) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r1;
        nu.xom.jaxen.expr.PredicateSet $r3;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;
        nu.xom.jaxen.expr.DefaultFilterExpr $r0;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        $r0 = new nu.xom.jaxen.expr.DefaultFilterExpr;

        $r3 = virtualinvoke r2.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.PredicateSet createPredicateSet()>();

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultFilterExpr: void <init>(nu.xom.jaxen.expr.Expr,nu.xom.jaxen.expr.PredicateSet)>(r1, $r3);

        return $r0;
    }

    public nu.xom.jaxen.expr.FunctionCallExpr createFunctionCallExpr(java.lang.String, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultFunctionCallExpr $r0;
        java.lang.String r1, r2;
        nu.xom.jaxen.expr.DefaultXPathFactory r3;

        r3 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new nu.xom.jaxen.expr.DefaultFunctionCallExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultFunctionCallExpr: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public nu.xom.jaxen.expr.NumberExpr createNumberExpr(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultNumberExpr $r0;
        java.lang.Double $r1;
        int i0;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;
        double $d0;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        $r0 = new nu.xom.jaxen.expr.DefaultNumberExpr;

        $r1 = new java.lang.Double;

        $d0 = (double) i0;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>($d0);

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultNumberExpr: void <init>(java.lang.Double)>($r1);

        return $r0;
    }

    public nu.xom.jaxen.expr.NumberExpr createNumberExpr(double) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultNumberExpr $r0;
        java.lang.Double $r1;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;
        double d0;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        d0 := @parameter0: double;

        $r0 = new nu.xom.jaxen.expr.DefaultNumberExpr;

        $r1 = new java.lang.Double;

        specialinvoke $r1.<java.lang.Double: void <init>(double)>(d0);

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultNumberExpr: void <init>(java.lang.Double)>($r1);

        return $r0;
    }

    public nu.xom.jaxen.expr.LiteralExpr createLiteralExpr(java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        java.lang.String r1;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;
        nu.xom.jaxen.expr.DefaultLiteralExpr $r0;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: java.lang.String;

        $r0 = new nu.xom.jaxen.expr.DefaultLiteralExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultLiteralExpr: void <init>(java.lang.String)>(r1);

        return $r0;
    }

    public nu.xom.jaxen.expr.VariableReferenceExpr createVariableReferenceExpr(java.lang.String, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultVariableReferenceExpr $r0;
        java.lang.String r1, r2;
        nu.xom.jaxen.expr.DefaultXPathFactory r3;

        r3 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r0 = new nu.xom.jaxen.expr.DefaultVariableReferenceExpr;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultVariableReferenceExpr: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        return $r0;
    }

    public nu.xom.jaxen.expr.Step createNameStep(int, java.lang.String, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.iter.IterableAxis $r1;
        nu.xom.jaxen.expr.DefaultNameStep $r2;
        nu.xom.jaxen.expr.PredicateSet $r5;
        int i0;
        java.lang.String r3, r4;
        nu.xom.jaxen.expr.DefaultXPathFactory r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.iter.IterableAxis getIterableAxis(int)>(i0);

        $r2 = new nu.xom.jaxen.expr.DefaultNameStep;

        $r5 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.PredicateSet createPredicateSet()>();

        specialinvoke $r2.<nu.xom.jaxen.expr.DefaultNameStep: void <init>(nu.xom.jaxen.expr.iter.IterableAxis,java.lang.String,java.lang.String,nu.xom.jaxen.expr.PredicateSet)>($r1, r3, r4, $r5);

        return $r2;
    }

    public nu.xom.jaxen.expr.Step createTextNodeStep(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultTextNodeStep $r2;
        nu.xom.jaxen.expr.iter.IterableAxis $r1;
        nu.xom.jaxen.expr.PredicateSet $r3;
        int i0;
        nu.xom.jaxen.expr.DefaultXPathFactory r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.iter.IterableAxis getIterableAxis(int)>(i0);

        $r2 = new nu.xom.jaxen.expr.DefaultTextNodeStep;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.PredicateSet createPredicateSet()>();

        specialinvoke $r2.<nu.xom.jaxen.expr.DefaultTextNodeStep: void <init>(nu.xom.jaxen.expr.iter.IterableAxis,nu.xom.jaxen.expr.PredicateSet)>($r1, $r3);

        return $r2;
    }

    public nu.xom.jaxen.expr.Step createCommentNodeStep(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultCommentNodeStep $r2;
        nu.xom.jaxen.expr.iter.IterableAxis $r1;
        nu.xom.jaxen.expr.PredicateSet $r3;
        int i0;
        nu.xom.jaxen.expr.DefaultXPathFactory r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.iter.IterableAxis getIterableAxis(int)>(i0);

        $r2 = new nu.xom.jaxen.expr.DefaultCommentNodeStep;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.PredicateSet createPredicateSet()>();

        specialinvoke $r2.<nu.xom.jaxen.expr.DefaultCommentNodeStep: void <init>(nu.xom.jaxen.expr.iter.IterableAxis,nu.xom.jaxen.expr.PredicateSet)>($r1, $r3);

        return $r2;
    }

    public nu.xom.jaxen.expr.Step createAllNodeStep(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.iter.IterableAxis $r1;
        nu.xom.jaxen.expr.PredicateSet $r3;
        int i0;
        nu.xom.jaxen.expr.DefaultXPathFactory r0;
        nu.xom.jaxen.expr.DefaultAllNodeStep $r2;

        r0 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.iter.IterableAxis getIterableAxis(int)>(i0);

        $r2 = new nu.xom.jaxen.expr.DefaultAllNodeStep;

        $r3 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.PredicateSet createPredicateSet()>();

        specialinvoke $r2.<nu.xom.jaxen.expr.DefaultAllNodeStep: void <init>(nu.xom.jaxen.expr.iter.IterableAxis,nu.xom.jaxen.expr.PredicateSet)>($r1, $r3);

        return $r2;
    }

    public nu.xom.jaxen.expr.Step createProcessingInstructionNodeStep(int, java.lang.String) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.iter.IterableAxis $r1;
        nu.xom.jaxen.expr.PredicateSet $r4;
        int i0;
        nu.xom.jaxen.expr.DefaultProcessingInstructionNodeStep $r2;
        java.lang.String r3;
        nu.xom.jaxen.expr.DefaultXPathFactory r0;

        r0 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.iter.IterableAxis getIterableAxis(int)>(i0);

        $r2 = new nu.xom.jaxen.expr.DefaultProcessingInstructionNodeStep;

        $r4 = virtualinvoke r0.<nu.xom.jaxen.expr.DefaultXPathFactory: nu.xom.jaxen.expr.PredicateSet createPredicateSet()>();

        specialinvoke $r2.<nu.xom.jaxen.expr.DefaultProcessingInstructionNodeStep: void <init>(nu.xom.jaxen.expr.iter.IterableAxis,java.lang.String,nu.xom.jaxen.expr.PredicateSet)>($r1, r3, $r4);

        return $r2;
    }

    public nu.xom.jaxen.expr.Predicate createPredicate(nu.xom.jaxen.expr.Expr) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.Expr r1;
        nu.xom.jaxen.expr.DefaultPredicate $r0;
        nu.xom.jaxen.expr.DefaultXPathFactory r2;

        r2 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        r1 := @parameter0: nu.xom.jaxen.expr.Expr;

        $r0 = new nu.xom.jaxen.expr.DefaultPredicate;

        specialinvoke $r0.<nu.xom.jaxen.expr.DefaultPredicate: void <init>(nu.xom.jaxen.expr.Expr)>(r1);

        return $r0;
    }

    protected nu.xom.jaxen.expr.iter.IterableAxis getIterableAxis(int) throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.DefaultXPathFactory r18;
        nu.xom.jaxen.expr.iter.IterableFollowingAxis $r6;
        nu.xom.jaxen.expr.iter.IterableSelfAxis $r2;
        nu.xom.jaxen.expr.iter.IterableChildAxis $r12;
        java.lang.StringBuffer $r14, $r15, $r16;
        nu.xom.jaxen.expr.iter.IterableDescendantOrSelfAxis $r1;
        int i0;
        nu.xom.jaxen.expr.iter.IterableParentAxis $r10;
        nu.xom.jaxen.expr.iter.IterableAncestorAxis $r9;
        java.lang.String $r17;
        nu.xom.jaxen.expr.iter.IterableFollowingSiblingAxis $r8;
        nu.xom.jaxen.expr.iter.IterableNamespaceAxis $r3;
        nu.xom.jaxen.expr.iter.IterablePrecedingSiblingAxis $r7;
        nu.xom.jaxen.expr.iter.IterableAncestorOrSelfAxis $r0;
        nu.xom.jaxen.expr.iter.IterableDescendantAxis $r11;
        nu.xom.jaxen.JaxenException $r13;
        nu.xom.jaxen.expr.iter.IterableAttributeAxis $r4;
        nu.xom.jaxen.expr.iter.IterablePrecedingAxis $r5;

        r18 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 1: goto label01;
            case 2: goto label02;
            case 3: goto label03;
            case 4: goto label13;
            case 5: goto label04;
            case 6: goto label05;
            case 7: goto label06;
            case 8: goto label07;
            case 9: goto label08;
            case 10: goto label09;
            case 11: goto label10;
            case 12: goto label11;
            case 13: goto label12;
            default: goto label14;
        };

     label01:
        $r12 = new nu.xom.jaxen.expr.iter.IterableChildAxis;

        specialinvoke $r12.<nu.xom.jaxen.expr.iter.IterableChildAxis: void <init>(int)>(i0);

        return $r12;

     label02:
        $r11 = new nu.xom.jaxen.expr.iter.IterableDescendantAxis;

        specialinvoke $r11.<nu.xom.jaxen.expr.iter.IterableDescendantAxis: void <init>(int)>(i0);

        return $r11;

     label03:
        $r10 = new nu.xom.jaxen.expr.iter.IterableParentAxis;

        specialinvoke $r10.<nu.xom.jaxen.expr.iter.IterableParentAxis: void <init>(int)>(i0);

        return $r10;

     label04:
        $r8 = new nu.xom.jaxen.expr.iter.IterableFollowingSiblingAxis;

        specialinvoke $r8.<nu.xom.jaxen.expr.iter.IterableFollowingSiblingAxis: void <init>(int)>(i0);

        return $r8;

     label05:
        $r7 = new nu.xom.jaxen.expr.iter.IterablePrecedingSiblingAxis;

        specialinvoke $r7.<nu.xom.jaxen.expr.iter.IterablePrecedingSiblingAxis: void <init>(int)>(i0);

        return $r7;

     label06:
        $r6 = new nu.xom.jaxen.expr.iter.IterableFollowingAxis;

        specialinvoke $r6.<nu.xom.jaxen.expr.iter.IterableFollowingAxis: void <init>(int)>(i0);

        return $r6;

     label07:
        $r5 = new nu.xom.jaxen.expr.iter.IterablePrecedingAxis;

        specialinvoke $r5.<nu.xom.jaxen.expr.iter.IterablePrecedingAxis: void <init>(int)>(i0);

        return $r5;

     label08:
        $r4 = new nu.xom.jaxen.expr.iter.IterableAttributeAxis;

        specialinvoke $r4.<nu.xom.jaxen.expr.iter.IterableAttributeAxis: void <init>(int)>(i0);

        return $r4;

     label09:
        $r3 = new nu.xom.jaxen.expr.iter.IterableNamespaceAxis;

        specialinvoke $r3.<nu.xom.jaxen.expr.iter.IterableNamespaceAxis: void <init>(int)>(i0);

        return $r3;

     label10:
        $r2 = new nu.xom.jaxen.expr.iter.IterableSelfAxis;

        specialinvoke $r2.<nu.xom.jaxen.expr.iter.IterableSelfAxis: void <init>(int)>(i0);

        return $r2;

     label11:
        $r1 = new nu.xom.jaxen.expr.iter.IterableDescendantOrSelfAxis;

        specialinvoke $r1.<nu.xom.jaxen.expr.iter.IterableDescendantOrSelfAxis: void <init>(int)>(i0);

        return $r1;

     label12:
        $r0 = new nu.xom.jaxen.expr.iter.IterableAncestorOrSelfAxis;

        specialinvoke $r0.<nu.xom.jaxen.expr.iter.IterableAncestorOrSelfAxis: void <init>(int)>(i0);

        return $r0;

     label13:
        $r9 = new nu.xom.jaxen.expr.iter.IterableAncestorAxis;

        specialinvoke $r9.<nu.xom.jaxen.expr.iter.IterableAncestorAxis: void <init>(int)>(i0);

        return $r9;

     label14:
        $r13 = new nu.xom.jaxen.JaxenException;

        $r14 = new java.lang.StringBuffer;

        specialinvoke $r14.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized axis code: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r13.<nu.xom.jaxen.JaxenException: void <init>(java.lang.String)>($r17);

        throw $r13;
    }

    public nu.xom.jaxen.expr.PredicateSet createPredicateSet() throws nu.xom.jaxen.JaxenException
    {
        nu.xom.jaxen.expr.PredicateSet $r0;
        nu.xom.jaxen.expr.DefaultXPathFactory r1;

        r1 := @this: nu.xom.jaxen.expr.DefaultXPathFactory;

        $r0 = new nu.xom.jaxen.expr.PredicateSet;

        specialinvoke $r0.<nu.xom.jaxen.expr.PredicateSet: void <init>()>();

        return $r0;
    }
}
