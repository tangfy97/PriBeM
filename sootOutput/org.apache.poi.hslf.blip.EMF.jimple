public final class org.apache.poi.hslf.blip.EMF extends org.apache.poi.hslf.blip.Metafile
{

    public void <init>()
    {
        org.apache.poi.hslf.blip.EMF r0;

        r0 := @this: org.apache.poi.hslf.blip.EMF;

        specialinvoke r0.<org.apache.poi.hslf.blip.Metafile: void <init>()>();

        return;
    }

    public byte[] getData()
    {
        byte[] $r1, r6, $r7;
        java.io.ByteArrayOutputStream $r2;
        java.util.zip.InflaterInputStream $r5;
        long $l2;
        java.io.IOException $r8;
        org.apache.poi.hslf.blip.EMF r0;
        java.io.ByteArrayInputStream $r3;
        org.apache.poi.hslf.exceptions.HSLFException $r9;
        org.apache.poi.hslf.blip.Metafile$Header $r4;
        int $i0, $i1, $i3;

        r0 := @this: org.apache.poi.hslf.blip.EMF;

     label1:
        $r1 = virtualinvoke r0.<org.apache.poi.hslf.blip.EMF: byte[] getRawData()>();

        $r2 = new java.io.ByteArrayOutputStream;

        specialinvoke $r2.<java.io.ByteArrayOutputStream: void <init>()>();

        $r3 = new java.io.ByteArrayInputStream;

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r1);

        $r4 = new org.apache.poi.hslf.blip.Metafile$Header;

        specialinvoke $r4.<org.apache.poi.hslf.blip.Metafile$Header: void <init>()>();

        virtualinvoke $r4.<org.apache.poi.hslf.blip.Metafile$Header: void read(byte[],int)>($r1, 16);

        $i0 = virtualinvoke $r4.<org.apache.poi.hslf.blip.Metafile$Header: int getSize()>();

        $i1 = $i0 + 16;

        $l2 = (long) $i1;

        virtualinvoke $r3.<java.io.InputStream: long skip(long)>($l2);

        $r5 = new java.util.zip.InflaterInputStream;

        specialinvoke $r5.<java.util.zip.InflaterInputStream: void <init>(java.io.InputStream)>($r3);

        r6 = newarray (byte)[4096];

     label2:
        $i3 = virtualinvoke $r5.<java.util.zip.InflaterInputStream: int read(byte[])>(r6);

        if $i3 < 0 goto label3;

        virtualinvoke $r2.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(r6, 0, $i3);

        goto label2;

     label3:
        virtualinvoke $r5.<java.util.zip.InflaterInputStream: void close()>();

        $r7 = virtualinvoke $r2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

     label4:
        return $r7;

     label5:
        $r8 := @caughtexception;

        $r9 = new org.apache.poi.hslf.exceptions.HSLFException;

        specialinvoke $r9.<org.apache.poi.hslf.exceptions.HSLFException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

        catch java.io.IOException from label1 to label4 with label5;
    }

    public void setData(byte[]) throws java.io.IOException
    {
        byte[] r1, $r2, $r8, $r10;
        java.awt.Rectangle $r4, $r6, $r7;
        java.io.ByteArrayOutputStream $r9;
        org.apache.poi.hslf.blip.EMF r0;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        org.apache.poi.hslf.blip.Metafile$Header $r3;
        java.awt.Dimension $r5;

        r0 := @this: org.apache.poi.hslf.blip.EMF;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $r2 = virtualinvoke r0.<org.apache.poi.hslf.blip.EMF: byte[] compress(byte[],int,int)>(r1, 0, $i0);

        $r3 = new org.apache.poi.hslf.blip.Metafile$Header;

        specialinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: void <init>()>();

        $i1 = lengthof r1;

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: int wmfsize> = $i1;

        $r4 = new java.awt.Rectangle;

        specialinvoke $r4.<java.awt.Rectangle: void <init>(int,int,int,int)>(0, 0, 200, 200);

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds> = $r4;

        $r5 = new java.awt.Dimension;

        $r6 = $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i2 = $r6.<java.awt.Rectangle: int width>;

        $i5 = $i2 * 12700;

        $r7 = $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Rectangle bounds>;

        $i3 = $r7.<java.awt.Rectangle: int height>;

        $i4 = $i3 * 12700;

        specialinvoke $r5.<java.awt.Dimension: void <init>(int,int)>($i5, $i4);

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: java.awt.Dimension size> = $r5;

        $i6 = lengthof $r2;

        $r3.<org.apache.poi.hslf.blip.Metafile$Header: int zipsize> = $i6;

        $r8 = staticinvoke <org.apache.poi.hslf.blip.EMF: byte[] getChecksum(byte[])>(r1);

        $r9 = new java.io.ByteArrayOutputStream;

        specialinvoke $r9.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[])>($r8);

        virtualinvoke $r3.<org.apache.poi.hslf.blip.Metafile$Header: void write(java.io.OutputStream)>($r9);

        virtualinvoke $r9.<java.io.ByteArrayOutputStream: void write(byte[])>($r2);

        $r10 = virtualinvoke $r9.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        virtualinvoke r0.<org.apache.poi.hslf.blip.EMF: void setRawData(byte[])>($r10);

        return;
    }

    public int getType()
    {
        org.apache.poi.hslf.blip.EMF r0;

        r0 := @this: org.apache.poi.hslf.blip.EMF;

        return 2;
    }

    public int getSignature()
    {
        org.apache.poi.hslf.blip.EMF r0;

        r0 := @this: org.apache.poi.hslf.blip.EMF;

        return 15680;
    }
}
