public class org.apache.zookeeper.server.DataNode extends java.lang.Object implements org.apache.jute.Record
{
    org.apache.zookeeper.server.DataNode parent;
    byte[] data;
    java.lang.Long acl;
    public org.apache.zookeeper.data.StatPersisted stat;
    private java.util.Set children;

    void <init>()
    {
        org.apache.zookeeper.server.DataNode r0;

        r0 := @this: org.apache.zookeeper.server.DataNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.DataNode: java.util.Set children> = null;

        return;
    }

    public void <init>(org.apache.zookeeper.server.DataNode, byte[], java.lang.Long, org.apache.zookeeper.data.StatPersisted)
    {
        byte[] r2;
        java.lang.Long r3;
        org.apache.zookeeper.data.StatPersisted r4;
        org.apache.zookeeper.server.DataNode r0, r1;

        r0 := @this: org.apache.zookeeper.server.DataNode;

        r1 := @parameter0: org.apache.zookeeper.server.DataNode;

        r2 := @parameter1: byte[];

        r3 := @parameter2: java.lang.Long;

        r4 := @parameter3: org.apache.zookeeper.data.StatPersisted;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.zookeeper.server.DataNode: java.util.Set children> = null;

        r0.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.server.DataNode parent> = r1;

        r0.<org.apache.zookeeper.server.DataNode: byte[] data> = r2;

        r0.<org.apache.zookeeper.server.DataNode: java.lang.Long acl> = r3;

        r0.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat> = r4;

        return;
    }

    public synchronized boolean addChild(java.lang.String)
    {
        java.util.HashSet $r4;
        java.util.Set $r1, $r3;
        java.lang.String r2;
        org.apache.zookeeper.server.DataNode r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.DataNode;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        if $r1 != null goto label1;

        $r4 = new java.util.HashSet;

        specialinvoke $r4.<java.util.HashSet: void <init>(int)>(8);

        r0.<org.apache.zookeeper.server.DataNode: java.util.Set children> = $r4;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean add(java.lang.Object)>(r2);

        return $z0;
    }

    public synchronized boolean removeChild(java.lang.String)
    {
        java.util.Set $r1, $r3;
        java.lang.String r2;
        org.apache.zookeeper.server.DataNode r0;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.DataNode;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r3 = r0.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        $z0 = interfaceinvoke $r3.<java.util.Set: boolean remove(java.lang.Object)>(r2);

        return $z0;
    }

    public synchronized void setChildren(java.util.HashSet)
    {
        java.util.HashSet r1;
        org.apache.zookeeper.server.DataNode r0;

        r0 := @this: org.apache.zookeeper.server.DataNode;

        r1 := @parameter0: java.util.HashSet;

        r0.<org.apache.zookeeper.server.DataNode: java.util.Set children> = r1;

        return;
    }

    public synchronized java.util.Set getChildren()
    {
        java.util.Set $r1;
        org.apache.zookeeper.server.DataNode r0;

        r0 := @this: org.apache.zookeeper.server.DataNode;

        $r1 = r0.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        return $r1;
    }

    public synchronized void copyStat(org.apache.zookeeper.data.Stat)
    {
        byte[] $r10, $r11;
        long $l1, $l2, $l3, $l4, $l5, $l7;
        org.apache.zookeeper.data.Stat r0;
        org.apache.zookeeper.data.StatPersisted $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r13;
        int $i0, $i6, $i8, $i9, $i10, $i11, i12;
        org.apache.zookeeper.server.DataNode r1;
        java.util.Set $r12, $r14;

        r1 := @this: org.apache.zookeeper.server.DataNode;

        r0 := @parameter0: org.apache.zookeeper.data.Stat;

        $r2 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $i0 = virtualinvoke $r2.<org.apache.zookeeper.data.StatPersisted: int getAversion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setAversion(int)>($i0);

        $r3 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l1 = virtualinvoke $r3.<org.apache.zookeeper.data.StatPersisted: long getCtime()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setCtime(long)>($l1);

        $r4 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l2 = virtualinvoke $r4.<org.apache.zookeeper.data.StatPersisted: long getCzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setCzxid(long)>($l2);

        $r5 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l3 = virtualinvoke $r5.<org.apache.zookeeper.data.StatPersisted: long getMtime()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setMtime(long)>($l3);

        $r6 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l4 = virtualinvoke $r6.<org.apache.zookeeper.data.StatPersisted: long getMzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setMzxid(long)>($l4);

        $r7 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l5 = virtualinvoke $r7.<org.apache.zookeeper.data.StatPersisted: long getPzxid()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setPzxid(long)>($l5);

        $r8 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $i6 = virtualinvoke $r8.<org.apache.zookeeper.data.StatPersisted: int getVersion()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setVersion(int)>($i6);

        $r9 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $l7 = virtualinvoke $r9.<org.apache.zookeeper.data.StatPersisted: long getEphemeralOwner()>();

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setEphemeralOwner(long)>($l7);

        $r10 = r1.<org.apache.zookeeper.server.DataNode: byte[] data>;

        if $r10 != null goto label1;

        $i11 = 0;

        goto label2;

     label1:
        $r11 = r1.<org.apache.zookeeper.server.DataNode: byte[] data>;

        $i11 = lengthof $r11;

     label2:
        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setDataLength(int)>($i11);

        i12 = 0;

        $r12 = r1.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        if $r12 == null goto label3;

        $r14 = r1.<org.apache.zookeeper.server.DataNode: java.util.Set children>;

        i12 = interfaceinvoke $r14.<java.util.Set: int size()>();

     label3:
        $r13 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        $i8 = virtualinvoke $r13.<org.apache.zookeeper.data.StatPersisted: int getCversion()>();

        $i9 = $i8 * 2;

        $i10 = $i9 - i12;

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setCversion(int)>($i10);

        virtualinvoke r0.<org.apache.zookeeper.data.Stat: void setNumChildren(int)>(i12);

        return;
    }

    public synchronized void deserialize(org.apache.jute.InputArchive, java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        org.apache.jute.InputArchive r0;
        long $l0;
        java.lang.Long $r3;
        org.apache.zookeeper.data.StatPersisted $r4, $r5;
        java.lang.String r6;
        org.apache.zookeeper.server.DataNode r1;

        r1 := @this: org.apache.zookeeper.server.DataNode;

        r0 := @parameter0: org.apache.jute.InputArchive;

        r6 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.InputArchive: void startRecord(java.lang.String)>("node");

        $r2 = interfaceinvoke r0.<org.apache.jute.InputArchive: byte[] readBuffer(java.lang.String)>("data");

        r1.<org.apache.zookeeper.server.DataNode: byte[] data> = $r2;

        $l0 = interfaceinvoke r0.<org.apache.jute.InputArchive: long readLong(java.lang.String)>("acl");

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l0);

        r1.<org.apache.zookeeper.server.DataNode: java.lang.Long acl> = $r3;

        $r4 = new org.apache.zookeeper.data.StatPersisted;

        specialinvoke $r4.<org.apache.zookeeper.data.StatPersisted: void <init>()>();

        r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat> = $r4;

        $r5 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r5.<org.apache.zookeeper.data.StatPersisted: void deserialize(org.apache.jute.InputArchive,java.lang.String)>(r0, "statpersisted");

        interfaceinvoke r0.<org.apache.jute.InputArchive: void endRecord(java.lang.String)>("node");

        return;
    }

    public synchronized void serialize(org.apache.jute.OutputArchive, java.lang.String) throws java.io.IOException
    {
        byte[] $r2;
        java.lang.Long $r3;
        org.apache.jute.OutputArchive r0;
        org.apache.zookeeper.data.StatPersisted $r4;
        long $l0;
        java.lang.String r5;
        org.apache.zookeeper.server.DataNode r1;

        r1 := @this: org.apache.zookeeper.server.DataNode;

        r0 := @parameter0: org.apache.jute.OutputArchive;

        r5 := @parameter1: java.lang.String;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void startRecord(org.apache.jute.Record,java.lang.String)>(r1, "node");

        $r2 = r1.<org.apache.zookeeper.server.DataNode: byte[] data>;

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeBuffer(byte[],java.lang.String)>($r2, "data");

        $r3 = r1.<org.apache.zookeeper.server.DataNode: java.lang.Long acl>;

        $l0 = virtualinvoke $r3.<java.lang.Long: long longValue()>();

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void writeLong(long,java.lang.String)>($l0, "acl");

        $r4 = r1.<org.apache.zookeeper.server.DataNode: org.apache.zookeeper.data.StatPersisted stat>;

        virtualinvoke $r4.<org.apache.zookeeper.data.StatPersisted: void serialize(org.apache.jute.OutputArchive,java.lang.String)>(r0, "statpersisted");

        interfaceinvoke r0.<org.apache.jute.OutputArchive: void endRecord(org.apache.jute.Record,java.lang.String)>(r1, "node");

        return;
    }
}
