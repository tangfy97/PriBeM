public class org.eclipse.jdt.internal.compiler.ast.Argument extends org.eclipse.jdt.internal.compiler.ast.LocalDeclaration
{
    private static final char[] SET;

    static void <clinit>()
    {
        char[] $r1;
        java.lang.String $r0;

        $r0 = "set";

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        <org.eclipse.jdt.internal.compiler.ast.Argument: char[] SET> = $r1;

        return;
    }

    public void <init>(char[], long, org.eclipse.jdt.internal.compiler.ast.TypeReference, int)
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r0;
        long l0, $l1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference r2;
        int $i2, $i3, $i4, i5, $i6, $i7;
        char[] r1;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        r1 := @parameter0: char[];

        l0 := @parameter1: long;

        r2 := @parameter2: org.eclipse.jdt.internal.compiler.ast.TypeReference;

        i5 := @parameter3: int;

        $l1 = l0 >>> 32;

        $i3 = (int) $l1;

        $i2 = (int) l0;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.ast.LocalDeclaration: void <init>(char[],int,int)>(r1, $i3, $i2);

        $i4 = (int) l0;

        r0.<org.eclipse.jdt.internal.compiler.ast.Argument: int declarationSourceEnd> = $i4;

        r0.<org.eclipse.jdt.internal.compiler.ast.Argument: int modifiers> = i5;

        r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type> = r2;

        $i6 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: int bits>;

        $i7 = $i6 | 1073741824;

        r0.<org.eclipse.jdt.internal.compiler.ast.Argument: int bits> = $i7;

        return;
    }

    public void bind(org.eclipse.jdt.internal.compiler.lookup.MethodScope, org.eclipse.jdt.internal.compiler.lookup.TypeBinding, boolean)
    {
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r14, $r15;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r4, $r5, $r7, $r8, $r9, $r16;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r6;
        org.eclipse.jdt.internal.compiler.lookup.MethodScope r0;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r3;
        byte $b2;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding r10;
        int $i0, $i1;
        boolean z0, $z1, $z2, $z3, $z4, $z5, z6;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        char[] $r2, $r12, $r13;
        org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration $r11;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.MethodScope;

        r10 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.TypeBinding;

        z0 := @parameter2: boolean;

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        $r3 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.lookup.Binding getBinding(char[],int,org.eclipse.jdt.internal.compiler.lookup.InvocationSite,boolean)>($r2, 3, r1, 0);

        if $r3 == null goto label4;

        $z1 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.Binding: boolean isValidBinding()>();

        if $z1 == 0 goto label4;

        $z2 = $r3 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if $z2 == 0 goto label1;

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int hiddenVariableDepth>;

        if $i1 != 0 goto label1;

        $r14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r14.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void redefineArgument(org.eclipse.jdt.internal.compiler.ast.Argument)>(r1);

        goto label4;

     label1:
        z6 = 0;

        $z3 = $r3 instanceof org.eclipse.jdt.internal.compiler.lookup.FieldBinding;

        if $z3 == 0 goto label3;

        $z4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: boolean isInsideConstructor()>();

        if $z4 == 0 goto label2;

        z6 = 1;

        goto label3;

     label2:
        $r11 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration referenceMethod()>();

        if $r11 == null goto label3;

        $r13 = <org.eclipse.jdt.internal.compiler.ast.Argument: char[] SET>;

        $r12 = $r11.<org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration: char[] selector>;

        $z5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean prefixEquals(char[],char[])>($r13, $r12);

        if $z5 == 0 goto label3;

        z6 = 1;

     label3:
        $r15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r15.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void localVariableHiding(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,org.eclipse.jdt.internal.compiler.lookup.Binding,boolean)>(r1, $r3, z6);

     label4:
        $r16 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        if $r16 != null goto label5;

        $r9 = new org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $i0 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int modifiers>;

        specialinvoke $r9.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void <init>(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int,boolean)>(r1, r10, $i0, 1);

        r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding> = $r9;

     label5:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.lookup.MethodScope: void addLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r4);

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.Argument: void resolveAnnotations(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Annotation[],org.eclipse.jdt.internal.compiler.lookup.Binding)>(r0, $r6, $r5);

        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        $r7.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: org.eclipse.jdt.internal.compiler.ast.LocalDeclaration declaration> = r1;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        if z0 == 0 goto label6;

        $b2 = 1;

        goto label7;

     label6:
        $b2 = 0;

     label7:
        $r8.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: int useFlag> = $b2;

        return;
    }

    public int getKind()
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        return 5;
    }

    public boolean isVarArgs()
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r0;
        int $i0, $i1;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r1, $r2;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r1 == null goto label1;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $i0 = $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: int bits>;

        $i1 = $i0 & 16384;

        if $i1 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.StringBuffer print(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r2, $r8;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r3, $r4;
        java.lang.StringBuffer r0, $r5, $r7;
        int i0, $i1;
        char[] $r6;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        i0 := @parameter0: int;

        r0 := @parameter1: java.lang.StringBuffer;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.Argument: java.lang.StringBuffer printIndent(int,java.lang.StringBuffer)>(i0, r0);

        $i1 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: int modifiers>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.Argument: java.lang.StringBuffer printModifiers(int,java.lang.StringBuffer)>($i1, r0);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r2 == null goto label1;

        $r8 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.Argument: java.lang.StringBuffer printAnnotations(org.eclipse.jdt.internal.compiler.ast.Annotation[],java.lang.StringBuffer)>($r8, r0);

     label1:
        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r3 != null goto label2;

        virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("<no type> ");

        goto label3;

     label2:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r5 = virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.ast.TypeReference: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(0, r0);

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label3:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        $r7 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r6);

        return $r7;
    }

    public java.lang.StringBuffer printStatement(int, java.lang.StringBuffer)
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r0;
        java.lang.StringBuffer r1, $r2, $r3;
        int i0;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.StringBuffer;

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ast.Argument: java.lang.StringBuffer print(int,java.lang.StringBuffer)>(i0, r1);

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        return $r3;
    }

    public org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveForCatch(org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r1;
        org.eclipse.jdt.internal.compiler.problem.ProblemReporter $r4, $r5, $r6, $r7, $r9, $r13;
        org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding $r17, $r19, $r20, $r21;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r18;
        org.eclipse.jdt.internal.compiler.lookup.Binding $r16;
        org.eclipse.jdt.internal.compiler.lookup.TypeBinding $r3, $r12;
        int $i0, $i1, $i2;
        boolean $z0, $z1, $z2, $z3, z4;
        org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding $r14;
        org.eclipse.jdt.internal.compiler.ast.Argument r0;
        org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding $r11;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r2, $r8;
        org.eclipse.jdt.internal.compiler.lookup.ArrayBinding $r10;
        org.eclipse.jdt.internal.compiler.impl.Constant $r22;
        char[] $r15;

        r0 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        r1 := @parameter0: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $r2 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        $r3 = virtualinvoke $r2.<org.eclipse.jdt.internal.compiler.ast.TypeReference: org.eclipse.jdt.internal.compiler.lookup.TypeBinding resolveType(org.eclipse.jdt.internal.compiler.lookup.BlockScope,boolean)>(r1, 1);

        if $r3 != null goto label1;

        z4 = 1;

        goto label6;

     label1:
        z4 = 0;

        $i0 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: int kind()>();

        lookupswitch($i0)
        {
            case 68: goto label4;
            case 260: goto label2;
            case 4100: goto label3;
            default: goto label5;
        };

     label2:
        $z3 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isBoundParameterizedType()>();

        if $z3 == 0 goto label5;

        z4 = 1;

        $r9 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r9.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidParameterizedExceptionType(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r3, r0);

        goto label5;

     label3:
        $r4 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r4.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void invalidTypeVariableAsException(org.eclipse.jdt.internal.compiler.lookup.TypeBinding,org.eclipse.jdt.internal.compiler.ast.ASTNode)>($r3, r0);

        z4 = 1;

        goto label5;

     label4:
        $r10 = (org.eclipse.jdt.internal.compiler.lookup.ArrayBinding) $r3;

        $r12 = $r10.<org.eclipse.jdt.internal.compiler.lookup.ArrayBinding: org.eclipse.jdt.internal.compiler.lookup.TypeBinding leafComponentType>;

        $r11 = <org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.BaseTypeBinding VOID>;

        if $r12 != $r11 goto label5;

        $r13 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r13.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void variableTypeCannotBeVoidArray(org.eclipse.jdt.internal.compiler.ast.AbstractVariableDeclaration)>(r0);

        z4 = 1;

     label5:
        $r14 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: org.eclipse.jdt.internal.compiler.lookup.ReferenceBinding findSuperTypeOriginatingFrom(int,boolean)>(21, 1);

        if $r14 != null goto label6;

        $z2 = virtualinvoke $r3.<org.eclipse.jdt.internal.compiler.lookup.TypeBinding: boolean isValidBinding()>();

        if $z2 == 0 goto label6;

        $r7 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        $r8 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r7.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void cannotThrowType(org.eclipse.jdt.internal.compiler.ast.ASTNode,org.eclipse.jdt.internal.compiler.lookup.TypeBinding)>($r8, $r3);

        z4 = 1;

     label6:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: char[] name>;

        $r16 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.lookup.Binding getBinding(char[],int,org.eclipse.jdt.internal.compiler.lookup.InvocationSite,boolean)>($r15, 3, r0, 0);

        if $r16 == null goto label8;

        $z0 = virtualinvoke $r16.<org.eclipse.jdt.internal.compiler.lookup.Binding: boolean isValidBinding()>();

        if $z0 == 0 goto label8;

        $z1 = $r16 instanceof org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        if $z1 == 0 goto label7;

        $i1 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: int hiddenVariableDepth>;

        if $i1 != 0 goto label7;

        $r6 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r6.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void redefineArgument(org.eclipse.jdt.internal.compiler.ast.Argument)>(r0);

        goto label8;

     label7:
        $r5 = virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: org.eclipse.jdt.internal.compiler.problem.ProblemReporter problemReporter()>();

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.problem.ProblemReporter: void localVariableHiding(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,org.eclipse.jdt.internal.compiler.lookup.Binding,boolean)>(r0, $r16, 0);

     label8:
        $r17 = new org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding;

        $i2 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: int modifiers>;

        specialinvoke $r17.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void <init>(org.eclipse.jdt.internal.compiler.ast.LocalDeclaration,org.eclipse.jdt.internal.compiler.lookup.TypeBinding,int,boolean)>(r0, $r3, $i2, 0);

        r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding> = $r17;

        $r18 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r19 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        staticinvoke <org.eclipse.jdt.internal.compiler.ast.Argument: void resolveAnnotations(org.eclipse.jdt.internal.compiler.lookup.BlockScope,org.eclipse.jdt.internal.compiler.ast.Annotation[],org.eclipse.jdt.internal.compiler.lookup.Binding)>(r1, $r18, $r19);

        $r20 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        virtualinvoke r1.<org.eclipse.jdt.internal.compiler.lookup.BlockScope: void addLocalVariable(org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding)>($r20);

        $r21 = r0.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding binding>;

        $r22 = <org.eclipse.jdt.internal.compiler.impl.Constant: org.eclipse.jdt.internal.compiler.impl.Constant NotAConstant>;

        virtualinvoke $r21.<org.eclipse.jdt.internal.compiler.lookup.LocalVariableBinding: void setConstant(org.eclipse.jdt.internal.compiler.impl.Constant)>($r22);

        if z4 == 0 goto label9;

        return null;

     label9:
        return $r3;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.BlockScope)
    {
        org.eclipse.jdt.internal.compiler.lookup.BlockScope r2;
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r3, $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4, $r5;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r8;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.BlockScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.Argument,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        if $z0 == 0 goto label4;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r3 == null goto label3;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r6;

        i1 = 0;

        goto label2;

     label1:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r8 = $r7[i1];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 == null goto label4;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r0, r2);

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.Argument,org.eclipse.jdt.internal.compiler.lookup.BlockScope)>(r1, r2);

        return;
    }

    public void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor, org.eclipse.jdt.internal.compiler.lookup.ClassScope)
    {
        org.eclipse.jdt.internal.compiler.ast.Argument r1;
        org.eclipse.jdt.internal.compiler.ast.Annotation[] $r3, $r6, $r7;
        org.eclipse.jdt.internal.compiler.ast.TypeReference $r4, $r5;
        org.eclipse.jdt.internal.compiler.ASTVisitor r0;
        org.eclipse.jdt.internal.compiler.lookup.ClassScope r2;
        int i0, i1;
        org.eclipse.jdt.internal.compiler.ast.Annotation $r8;
        boolean $z0;

        r1 := @this: org.eclipse.jdt.internal.compiler.ast.Argument;

        r0 := @parameter0: org.eclipse.jdt.internal.compiler.ASTVisitor;

        r2 := @parameter1: org.eclipse.jdt.internal.compiler.lookup.ClassScope;

        $z0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: boolean visit(org.eclipse.jdt.internal.compiler.ast.Argument,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        if $z0 == 0 goto label4;

        $r3 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        if $r3 == null goto label3;

        $r6 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        i0 = lengthof $r6;

        i1 = 0;

        goto label2;

     label1:
        $r7 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations>;

        $r8 = $r7[i1];

        virtualinvoke $r8.<org.eclipse.jdt.internal.compiler.ast.Annotation: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

     label3:
        $r4 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        if $r4 == null goto label4;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.ast.Argument: org.eclipse.jdt.internal.compiler.ast.TypeReference type>;

        virtualinvoke $r5.<org.eclipse.jdt.internal.compiler.ast.TypeReference: void traverse(org.eclipse.jdt.internal.compiler.ASTVisitor,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r0, r2);

     label4:
        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.ASTVisitor: void endVisit(org.eclipse.jdt.internal.compiler.ast.Argument,org.eclipse.jdt.internal.compiler.lookup.ClassScope)>(r1, r2);

        return;
    }
}
