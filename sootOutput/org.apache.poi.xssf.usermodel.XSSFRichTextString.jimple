public class org.apache.poi.xssf.usermodel.XSSFRichTextString extends java.lang.Object implements org.apache.poi.ss.usermodel.RichTextString
{
    private static final java.util.regex.Pattern utfPtrn;
    private org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st;
    private org.apache.poi.xssf.model.StylesTable styles;

    public void <init>(java.lang.String)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r3, $r4;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        java.lang.String r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st> = $r1;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: void setT(java.lang.String)>(r2);

        $r4 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring xgetT()>();

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: void preserveSpaces(org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring)>($r5);

        return;
    }

    public void <init>()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst newInstance()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st> = $r1;

        return;
    }

    public void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st> = r1;

        return;
    }

    public void applyFont(int, int, short)
    {
        org.apache.poi.xssf.model.StylesTable $r1, $r2;
        org.apache.poi.xssf.usermodel.XSSFFont r8, $r9;
        short s0;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int i1, i2, $i3, $i4;
        java.lang.StringBuilder $r5, $r6, $r10;
        java.lang.String $r7;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        i1 := @parameter0: int;

        i2 := @parameter1: int;

        s0 := @parameter2: short;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        if $r1 != null goto label1;

        $r9 = new org.apache.poi.xssf.usermodel.XSSFFont;

        specialinvoke $r9.<org.apache.poi.xssf.usermodel.XSSFFont: void <init>()>();

        r8 = $r9;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $i3 = (int) s0;

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<org.apache.poi.xssf.usermodel.XSSFFont: void setFontName(java.lang.String)>($r7);

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        $i4 = (int) s0;

        r8 = virtualinvoke $r2.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.usermodel.XSSFFont getFontAt(int)>($i4);

     label2:
        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void applyFont(int,int,org.apache.poi.ss.usermodel.Font)>(i1, i2, r8);

        return;
    }

    public void applyFont(int, int, org.apache.poi.ss.usermodel.Font)
    {
        org.apache.poi.xssf.usermodel.XSSFFont $r12;
        org.apache.poi.ss.usermodel.Font r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r2, $r4, $r5, $r7, $r9, $r13, $r17, $r18;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r1;
        int i0, i1, $i2, $i3;
        java.lang.String $r8, $r11;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r15;
        boolean $z0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r16;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r6;
        java.lang.IllegalArgumentException $r0, $r10;
        java.util.TreeMap $r14;

        r1 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r3 := @parameter2: org.apache.poi.ss.usermodel.Font;

        if i0 <= i1 goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start index must be less than end index.");

        throw $r10;

     label1:
        if i0 < 0 goto label2;

        $i2 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: int length()>();

        if i1 <= $i2 goto label3;

     label2:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Start and end index not in range.");

        throw $r0;

     label3:
        if i0 != i1 goto label4;

        return;

     label4:
        $r2 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i3 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i3 != 0 goto label5;

        $r4 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $z0 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: boolean isSetT()>();

        if $z0 == 0 goto label5;

        $r5 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r6 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt addNewR()>();

        $r7 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: java.lang.String getT()>();

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: void setT(java.lang.String)>($r8);

        $r9 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: void unsetT()>();

     label5:
        $r11 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $r12 = (org.apache.poi.xssf.usermodel.XSSFFont) r3;

        $r13 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r14 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.util.TreeMap getFormatMap(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)>($r13);

        $r15 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt newInstance()>();

        $r16 = virtualinvoke $r12.<org.apache.poi.xssf.usermodel.XSSFFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont getCTFont()>();

        specialinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setRunAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>($r16, $r15);

        virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void applyFont(java.util.TreeMap,int,int,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>($r14, i0, i1, $r15);

        $r17 = virtualinvoke r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst buildCTRst(java.lang.String,java.util.TreeMap)>($r11, $r14);

        $r18 = r1.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r18.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>($r17);

        return;
    }

    public void applyFont(org.apache.poi.ss.usermodel.Font)
    {
        org.apache.poi.ss.usermodel.Font r2;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r2 := @parameter0: org.apache.poi.ss.usermodel.Font;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void applyFont(int,int,org.apache.poi.ss.usermodel.Font)>(0, $i0, r2);

        return;
    }

    public void applyFont(short)
    {
        org.apache.poi.xssf.model.StylesTable $r1, $r2;
        org.apache.poi.xssf.usermodel.XSSFFont r9, $r10;
        short s0;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i1, $i2, $i3;
        java.lang.StringBuilder $r6, $r7, $r11;
        java.lang.String $r3, $r8;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        s0 := @parameter0: short;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        if $r1 != null goto label1;

        $r10 = new org.apache.poi.xssf.usermodel.XSSFFont;

        specialinvoke $r10.<org.apache.poi.xssf.usermodel.XSSFFont: void <init>()>();

        r9 = $r10;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $i2 = (int) s0;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<org.apache.poi.xssf.usermodel.XSSFFont: void setFontName(java.lang.String)>($r8);

        goto label2;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        $i3 = (int) s0;

        r9 = virtualinvoke $r2.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.usermodel.XSSFFont getFontAt(int)>($i3);

     label2:
        $r3 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $i1 = virtualinvoke $r3.<java.lang.String: int length()>();

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void applyFont(int,int,org.apache.poi.ss.usermodel.Font)>(0, $i1, r9);

        return;
    }

    public void append(java.lang.String, org.apache.poi.xssf.usermodel.XSSFFont)
    {
        org.apache.poi.xssf.usermodel.XSSFFont r3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring $r10, $r14;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r5, $r6, $r8, $r11, $r12;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0;
        java.lang.String r2, $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r15;
        boolean $z0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r7, $r13;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.apache.poi.xssf.usermodel.XSSFFont;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 != 0 goto label1;

        $r5 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $z0 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: boolean isSetT()>();

        if $z0 == 0 goto label1;

        $r6 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt addNewR()>();

        $r8 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r9 = interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: java.lang.String getT()>();

        interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: void setT(java.lang.String)>($r9);

        $r10 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring xgetT()>();

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: void preserveSpaces(org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring)>($r10);

        $r11 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: void unsetT()>();

     label1:
        $r12 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r13 = interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt addNewR()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: void setT(java.lang.String)>(r2);

        $r14 = interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring xgetT()>();

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: void preserveSpaces(org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring)>($r14);

        $r15 = interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt addNewRPr()>();

        if r3 == null goto label2;

        $r4 = virtualinvoke r3.<org.apache.poi.xssf.usermodel.XSSFFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont getCTFont()>();

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setRunAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>($r4, $r15);

     label2:
        return;
    }

    public void append(java.lang.String)
    {
        java.lang.String r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void append(java.lang.String,org.apache.poi.xssf.usermodel.XSSFFont)>(r1, null);

        return;
    }

    private void setRunAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)
    {
        byte[] $r29;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName $r22, $r23;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty $r15, $r16, $r20, $r21;
        long $l16, $l17;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty $r32, $r33;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r37;
        java.lang.String $r24;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STFontScheme$Enum $r19;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty $r2, $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r30, $r31, $r35, $r36;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize $r25, $r26;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty $r8, $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignRun$Enum $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18;
        double $d0, $d1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme $r17, $r18;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor $r27, $r28;

        r37 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont;

        r1 := @parameter1: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt;

        $i0 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfBArray()>();

        if $i0 <= 0 goto label01;

        $r35 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewB()>();

        $r36 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getBArray(int)>(0);

        $z12 = interfaceinvoke $r36.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r35.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z12);

     label01:
        $i1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfUArray()>();

        if $i1 <= 0 goto label02;

        $r32 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty addNewU()>();

        $r33 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty getUArray(int)>(0);

        $r34 = interfaceinvoke $r33.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty: org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum getVal()>();

        interfaceinvoke $r32.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty: void setVal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum)>($r34);

     label02:
        $i2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfIArray()>();

        if $i2 <= 0 goto label03;

        $r30 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewI()>();

        $r31 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getIArray(int)>(0);

        $z11 = interfaceinvoke $r31.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r30.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z11);

     label03:
        $i3 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfColorArray()>();

        if $i3 <= 0 goto label08;

        $r27 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor getColorArray(int)>(0);

        $r28 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor addNewColor()>();

        $z5 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetAuto()>();

        if $z5 == 0 goto label04;

        $z10 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean getAuto()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setAuto(boolean)>($z10);

     label04:
        $z6 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetIndexed()>();

        if $z6 == 0 goto label05;

        $l17 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: long getIndexed()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setIndexed(long)>($l17);

     label05:
        $z7 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetRgb()>();

        if $z7 == 0 goto label06;

        $r29 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: byte[] getRgb()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setRgb(byte[])>($r29);

     label06:
        $z8 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetTheme()>();

        if $z8 == 0 goto label07;

        $l16 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: long getTheme()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setTheme(long)>($l16);

     label07:
        $z9 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetTint()>();

        if $z9 == 0 goto label08;

        $d1 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: double getTint()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setTint(double)>($d1);

     label08:
        $i18 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfSzArray()>();

        if $i18 <= 0 goto label09;

        $r25 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize addNewSz()>();

        $r26 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize getSzArray(int)>(0);

        $d0 = interfaceinvoke $r26.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize: double getVal()>();

        interfaceinvoke $r25.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize: void setVal(double)>($d0);

     label09:
        $i4 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfNameArray()>();

        if $i4 <= 0 goto label10;

        $r22 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName addNewRFont()>();

        $r23 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName getNameArray(int)>(0);

        $r24 = interfaceinvoke $r23.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName: java.lang.String getVal()>();

        interfaceinvoke $r22.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName: void setVal(java.lang.String)>($r24);

     label10:
        $i5 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfFamilyArray()>();

        if $i5 <= 0 goto label11;

        $r20 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty addNewFamily()>();

        $r21 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty getFamilyArray(int)>(0);

        $i15 = interfaceinvoke $r21.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: int getVal()>();

        interfaceinvoke $r20.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: void setVal(int)>($i15);

     label11:
        $i6 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfSchemeArray()>();

        if $i6 <= 0 goto label12;

        $r17 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme addNewScheme()>();

        $r18 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme getSchemeArray(int)>(0);

        $r19 = interfaceinvoke $r18.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme: org.openxmlformats.schemas.spreadsheetml.x2006.main.STFontScheme$Enum getVal()>();

        interfaceinvoke $r17.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme: void setVal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STFontScheme$Enum)>($r19);

     label12:
        $i7 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfCharsetArray()>();

        if $i7 <= 0 goto label13;

        $r15 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty addNewCharset()>();

        $r16 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty getCharsetArray(int)>(0);

        $i14 = interfaceinvoke $r16.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: int getVal()>();

        interfaceinvoke $r15.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: void setVal(int)>($i14);

     label13:
        $i8 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfCondenseArray()>();

        if $i8 <= 0 goto label14;

        $r13 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewCondense()>();

        $r14 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getCondenseArray(int)>(0);

        $z4 = interfaceinvoke $r14.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z4);

     label14:
        $i9 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfExtendArray()>();

        if $i9 <= 0 goto label15;

        $r11 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewExtend()>();

        $r12 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getExtendArray(int)>(0);

        $z3 = interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z3);

     label15:
        $i10 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfVertAlignArray()>();

        if $i10 <= 0 goto label16;

        $r8 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty addNewVertAlign()>();

        $r9 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty getVertAlignArray(int)>(0);

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty: org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignRun$Enum getVal()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty: void setVal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignRun$Enum)>($r10);

     label16:
        $i11 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfOutlineArray()>();

        if $i11 <= 0 goto label17;

        $r6 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewOutline()>();

        $r7 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getOutlineArray(int)>(0);

        $z2 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z2);

     label17:
        $i12 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfShadowArray()>();

        if $i12 <= 0 goto label18;

        $r4 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewShadow()>();

        $r5 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getShadowArray(int)>(0);

        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z1);

     label18:
        $i13 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: int sizeOfStrikeArray()>();

        if $i13 <= 0 goto label19;

        $r2 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewStrike()>();

        $r3 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getStrikeArray(int)>(0);

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z0);

     label19:
        return;
    }

    public void clearFormatting()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: void setRArray(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[])>(null);

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: void setT(java.lang.String)>($r1);

        return;
    }

    public int getIndexOfFormattingRun(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0, $i1, i2, $i3, i4, i5, $i7;
        java.lang.String $r5;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        i4 = 0;

        i5 = 0;

     label2:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if i5 >= $i1 goto label4;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt getRArray(int)>(i5);

        if i5 != i2 goto label3;

        return i4;

     label3:
        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        i4 = i4 + $i3;

        i5 = i5 + 1;

        goto label2;

     label4:
        $i7 = (int) -1;

        return $i7;
    }

    public int getLengthOfFormattingRun(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0, $i1, i2, $i3, $i4, i5, $i7;
        java.lang.String $r5;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 != 0 goto label1;

        $i4 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: int length()>();

        return $i4;

     label1:
        i5 = 0;

     label2:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if i5 >= $i1 goto label4;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt getRArray(int)>(i5);

        if i5 != i2 goto label3;

        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        return $i3;

     label3:
        i5 = i5 + 1;

        goto label2;

     label4:
        $i7 = (int) -1;

        return $i7;
    }

    public java.lang.String getString()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r3, $r9;
        java.lang.StringBuffer $r2;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0, i1, i2;
        java.lang.String $r5, $r6, $r8, $r10, $r11;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[] $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 != 0 goto label1;

        $r9 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: java.lang.String getT()>();

        $r11 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String utfDecode(java.lang.String)>($r10);

        return $r11;

     label1:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[] getRArray()>();

        i1 = lengthof $r4;

        i2 = 0;

     label2:
        if i2 >= i1 goto label3;

        r7 = $r4[i2];

        $r8 = interfaceinvoke r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        i2 = i2 + 1;

        goto label2;

     label3:
        $r5 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>();

        $r6 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String utfDecode(java.lang.String)>($r5);

        return $r6;
    }

    public void setString(java.lang.String)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void clearFormatting()>();

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: void setT(java.lang.String)>(r1);

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring xgetT()>();

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: void preserveSpaces(org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring)>($r4);

        return;
    }

    public java.lang.String toString()
    {
        java.lang.String $r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        return $r1;
    }

    public int length()
    {
        int $i0;
        java.lang.String $r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = virtualinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: java.lang.String getString()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        return $i0;
    }

    public int numFormattingRuns()
    {
        int $i0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        return $i0;
    }

    public org.apache.poi.xssf.usermodel.XSSFFont getFontOfFormattingRun(int)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r4;
        org.apache.poi.xssf.usermodel.XSSFFont $r5;
        org.apache.poi.xssf.model.ThemesTable $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0, $i1, i2, i3;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r6;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        i3 = 0;

     label2:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if i3 >= $i1 goto label4;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt getRArray(int)>(i3);

        if i3 != i2 goto label3;

        $r5 = new org.apache.poi.xssf.usermodel.XSSFFont;

        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt getRPr()>();

        $r7 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont toCTFont(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>($r6);

        specialinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFFont: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont)>($r7);

        $r8 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.ThemesTable getThemesTable()>();

        virtualinvoke $r5.<org.apache.poi.xssf.usermodel.XSSFFont: void setThemesTable(org.apache.poi.xssf.model.ThemesTable)>($r8);

        return $r5;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return null;
    }

    public org.apache.poi.xssf.usermodel.XSSFFont getFontAtIndex(int)
    {
        org.apache.poi.xssf.usermodel.XSSFFont $r7;
        org.apache.poi.xssf.model.ThemesTable $r10;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1, $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0, $i1, i2, $i3, $i4, $i5, i6, i7;
        java.lang.String $r5, $r6;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r8;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        i2 := @parameter0: int;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 != 0 goto label1;

        return null;

     label1:
        i6 = 0;

        i7 = 0;

     label2:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i1 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if i7 >= $i1 goto label4;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt getRArray(int)>(i7);

        if i2 < i6 goto label3;

        $r6 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        $i4 = virtualinvoke $r6.<java.lang.String: int length()>();

        $i5 = i6 + $i4;

        if i2 >= $i5 goto label3;

        $r7 = new org.apache.poi.xssf.usermodel.XSSFFont;

        $r8 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt getRPr()>();

        $r9 = staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont toCTFont(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>($r8);

        specialinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFFont: void <init>(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont)>($r9);

        $r10 = specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.ThemesTable getThemesTable()>();

        virtualinvoke $r7.<org.apache.poi.xssf.usermodel.XSSFFont: void setThemesTable(org.apache.poi.xssf.model.ThemesTable)>($r10);

        return $r7;

     label3:
        $r5 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        $i3 = virtualinvoke $r5.<java.lang.String: int length()>();

        i6 = i6 + $i3;

        i7 = i7 + 1;

        goto label2;

     label4:
        return null;
    }

    public org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst getCTRst()
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        return $r1;
    }

    protected void setStylesTableReference(org.apache.poi.xssf.model.StylesTable)
    {
        org.apache.poi.xssf.model.StylesTable r1, $r10;
        org.apache.poi.xssf.usermodel.XSSFFont $r11;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r2, $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        int $i0, i1, $i2, $i3, i4;
        java.lang.String $r8, $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r6;
        boolean $z0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName $r7;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[] $r4;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r1 := @parameter0: org.apache.poi.xssf.model.StylesTable;

        r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles> = r1;

        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $i0 = interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: int sizeOfRArray()>();

        if $i0 <= 0 goto label3;

        $r3 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst st>;

        $r4 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[] getRArray()>();

        i1 = lengthof $r4;

        i4 = 0;

     label1:
        if i4 >= i1 goto label3;

        r5 = $r4[i4];

        $r6 = interfaceinvoke r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt getRPr()>();

        if $r6 == null goto label2;

        $i2 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfRFontArray()>();

        if $i2 <= 0 goto label2;

        $r7 = interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName getRFontArray(int)>(0);

        $r8 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName: java.lang.String getVal()>();

        $z0 = virtualinvoke $r8.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z0 == 0 goto label2;

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String substring(int)>(1);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r9);

        $r10 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        $r11 = virtualinvoke $r10.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.usermodel.XSSFFont getFontAt(int)>($i3);

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: void removeRFont(int)>(0);

        $r12 = virtualinvoke $r11.<org.apache.poi.xssf.usermodel.XSSFFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont getCTFont()>();

        specialinvoke r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: void setRunAttributes(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont,org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>($r12, $r6);

     label2:
        i4 = i4 + 1;

        goto label1;

     label3:
        return;
    }

    protected static org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont toCTFont(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)
    {
        byte[] $r29;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName $r22, $r23;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty $r15, $r16, $r20, $r21;
        long $l16, $l17;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty $r32, $r33;
        java.lang.String $r24;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt r1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STFontScheme$Enum $r19;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum $r34;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont $r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty $r2, $r3, $r4, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r30, $r31, $r35, $r36;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize $r25, $r26;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty $r8, $r9;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignRun$Enum $r10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i18;
        double $d0, $d1;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme $r17, $r18;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor $r27, $r28;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt;

        $r0 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont newInstance()>();

        $i0 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfBArray()>();

        if $i0 <= 0 goto label01;

        $r35 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewB()>();

        $r36 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getBArray(int)>(0);

        $z12 = interfaceinvoke $r36.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r35.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z12);

     label01:
        $i1 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfUArray()>();

        if $i1 <= 0 goto label02;

        $r32 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty addNewU()>();

        $r33 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty getUArray(int)>(0);

        $r34 = interfaceinvoke $r33.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty: org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum getVal()>();

        interfaceinvoke $r32.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTUnderlineProperty: void setVal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STUnderlineValues$Enum)>($r34);

     label02:
        $i2 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfIArray()>();

        if $i2 <= 0 goto label03;

        $r30 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewI()>();

        $r31 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getIArray(int)>(0);

        $z11 = interfaceinvoke $r31.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r30.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z11);

     label03:
        $i3 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfColorArray()>();

        if $i3 <= 0 goto label08;

        $r27 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor getColorArray(int)>(0);

        $r28 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor addNewColor()>();

        $z5 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetAuto()>();

        if $z5 == 0 goto label04;

        $z10 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean getAuto()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setAuto(boolean)>($z10);

     label04:
        $z6 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetIndexed()>();

        if $z6 == 0 goto label05;

        $l17 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: long getIndexed()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setIndexed(long)>($l17);

     label05:
        $z7 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetRgb()>();

        if $z7 == 0 goto label06;

        $r29 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: byte[] getRgb()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setRgb(byte[])>($r29);

     label06:
        $z8 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetTheme()>();

        if $z8 == 0 goto label07;

        $l16 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: long getTheme()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setTheme(long)>($l16);

     label07:
        $z9 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: boolean isSetTint()>();

        if $z9 == 0 goto label08;

        $d1 = interfaceinvoke $r27.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: double getTint()>();

        interfaceinvoke $r28.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTColor: void setTint(double)>($d1);

     label08:
        $i18 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfSzArray()>();

        if $i18 <= 0 goto label09;

        $r25 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize addNewSz()>();

        $r26 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize getSzArray(int)>(0);

        $d0 = interfaceinvoke $r26.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize: double getVal()>();

        interfaceinvoke $r25.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontSize: void setVal(double)>($d0);

     label09:
        $i4 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfRFontArray()>();

        if $i4 <= 0 goto label10;

        $r22 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName addNewName()>();

        $r23 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName getRFontArray(int)>(0);

        $r24 = interfaceinvoke $r23.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName: java.lang.String getVal()>();

        interfaceinvoke $r22.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontName: void setVal(java.lang.String)>($r24);

     label10:
        $i5 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfFamilyArray()>();

        if $i5 <= 0 goto label11;

        $r20 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty addNewFamily()>();

        $r21 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty getFamilyArray(int)>(0);

        $i15 = interfaceinvoke $r21.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: int getVal()>();

        interfaceinvoke $r20.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: void setVal(int)>($i15);

     label11:
        $i6 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfSchemeArray()>();

        if $i6 <= 0 goto label12;

        $r17 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme addNewScheme()>();

        $r18 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme getSchemeArray(int)>(0);

        $r19 = interfaceinvoke $r18.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme: org.openxmlformats.schemas.spreadsheetml.x2006.main.STFontScheme$Enum getVal()>();

        interfaceinvoke $r17.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFontScheme: void setVal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STFontScheme$Enum)>($r19);

     label12:
        $i7 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfCharsetArray()>();

        if $i7 <= 0 goto label13;

        $r15 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty addNewCharset()>();

        $r16 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty getCharsetArray(int)>(0);

        $i14 = interfaceinvoke $r16.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: int getVal()>();

        interfaceinvoke $r15.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTIntProperty: void setVal(int)>($i14);

     label13:
        $i8 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfCondenseArray()>();

        if $i8 <= 0 goto label14;

        $r13 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewCondense()>();

        $r14 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getCondenseArray(int)>(0);

        $z4 = interfaceinvoke $r14.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r13.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z4);

     label14:
        $i9 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfExtendArray()>();

        if $i9 <= 0 goto label15;

        $r11 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewExtend()>();

        $r12 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getExtendArray(int)>(0);

        $z3 = interfaceinvoke $r12.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r11.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z3);

     label15:
        $i10 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfVertAlignArray()>();

        if $i10 <= 0 goto label16;

        $r8 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty addNewVertAlign()>();

        $r9 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty getVertAlignArray(int)>(0);

        $r10 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty: org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignRun$Enum getVal()>();

        interfaceinvoke $r8.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTVerticalAlignFontProperty: void setVal(org.openxmlformats.schemas.spreadsheetml.x2006.main.STVerticalAlignRun$Enum)>($r10);

     label16:
        $i11 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfOutlineArray()>();

        if $i11 <= 0 goto label17;

        $r6 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewOutline()>();

        $r7 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getOutlineArray(int)>(0);

        $z2 = interfaceinvoke $r7.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r6.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z2);

     label17:
        $i12 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfShadowArray()>();

        if $i12 <= 0 goto label18;

        $r4 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewShadow()>();

        $r5 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getShadowArray(int)>(0);

        $z1 = interfaceinvoke $r5.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z1);

     label18:
        $i13 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: int sizeOfStrikeArray()>();

        if $i13 <= 0 goto label19;

        $r2 = interfaceinvoke $r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTFont: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty addNewStrike()>();

        $r3 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty getStrikeArray(int)>(0);

        $z0 = interfaceinvoke $r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: boolean getVal()>();

        interfaceinvoke $r2.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTBooleanProperty: void setVal(boolean)>($z0);

     label19:
        return $r0;
    }

    protected static void preserveSpaces(org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring)
    {
        org.apache.xmlbeans.XmlCursor $r2;
        char $c1, $c4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring r0;
        int $i0, $i2, $i3;
        java.lang.String $r1;
        javax.xml.namespace.QName $r3;
        boolean $z0, $z1;

        r0 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring;

        $r1 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring: java.lang.String getStringValue()>();

        if $r1 == null goto label2;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 <= 0 goto label2;

        $c1 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i3 = $i2 - 1;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i3);

        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c1);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>($c4);

        if $z1 == 0 goto label2;

     label1:
        $r2 = interfaceinvoke r0.<org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring: org.apache.xmlbeans.XmlCursor newCursor()>();

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: org.apache.xmlbeans.XmlCursor$TokenType toNextToken()>();

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/XML/1998/namespace", "space");

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void insertAttributeWithValue(javax.xml.namespace.QName,java.lang.String)>($r3, "preserve");

        interfaceinvoke $r2.<org.apache.xmlbeans.XmlCursor: void dispose()>();

     label2:
        return;
    }

    static java.lang.String utfDecode(java.lang.String)
    {
        java.lang.Integer $r11;
        java.util.regex.Matcher $r3;
        java.lang.StringBuffer $r1;
        int $i0, $i1, i3;
        java.lang.String r0, $r4, $r5, $r6, $r10, $r12;
        boolean $z0;
        char $c2;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.util.regex.Pattern $r2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = <org.apache.poi.xssf.usermodel.XSSFRichTextString: java.util.regex.Pattern utfPtrn>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        i3 = 0;

     label2:
        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean find()>();

        if $z0 == 0 goto label4;

        $i0 = virtualinvoke $r3.<java.util.regex.Matcher: int start()>();

        if $i0 <= i3 goto label3;

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i3, $i0);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

     label3:
        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r10);

        $i1 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $c2 = (char) $i1;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        i3 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

        goto label2;

     label4:
        $r4 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i3);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r5 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r5;
    }

    void applyFont(java.util.TreeMap, int, int, org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)
    {
        java.lang.Integer $r5, $r10, $r11, $r14, $r17, $r18, $r19;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r15;
        int i0, i1, $i2, $i3, i4, $i5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt r3;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r16;
        java.util.Iterator $r2, $r7;
        java.util.Set $r1, $r6;
        java.util.TreeMap r0;
        java.lang.Object $r4, $r8, $r9, $r12, $r13;
        java.util.SortedMap $r20;

        r15 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r0 := @parameter0: java.util.TreeMap;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r3 := @parameter3: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt;

        i4 = 0;

        $r1 = virtualinvoke r0.<java.util.TreeMap: java.util.Set keySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r13 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        $r14 = (java.lang.Integer) $r13;

        $i3 = virtualinvoke $r14.<java.lang.Integer: int intValue()>();

        if i4 < i0 goto label2;

        if $i3 >= i1 goto label2;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

     label2:
        i4 = $i3;

        goto label1;

     label3:
        if i0 <= 0 goto label6;

        $r5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z1 = virtualinvoke r0.<java.util.TreeMap: boolean containsKey(java.lang.Object)>($r5);

        if $z1 != 0 goto label6;

        $r6 = virtualinvoke r0.<java.util.TreeMap: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label6;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.util.Map$Entry) $r8;

        $r9 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r10 = (java.lang.Integer) $r9;

        $i2 = virtualinvoke $r10.<java.lang.Integer: int intValue()>();

        if $i2 <= i0 goto label5;

        $r11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r12 = interfaceinvoke r16.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r11, $r12);

        goto label6;

     label5:
        goto label4;

     label6:
        $r17 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        virtualinvoke r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, r3);

        $r18 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i1);

        $r20 = virtualinvoke r0.<java.util.TreeMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>($r18, $r19);

     label7:
        $i5 = interfaceinvoke $r20.<java.util.SortedMap: int size()>();

        if $i5 <= 1 goto label8;

        $r4 = interfaceinvoke $r20.<java.util.SortedMap: java.lang.Object lastKey()>();

        interfaceinvoke $r20.<java.util.SortedMap: java.lang.Object remove(java.lang.Object)>($r4);

        goto label7;

     label8:
        return;
    }

    java.util.TreeMap getFormatMap(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst)
    {
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt r3;
        java.lang.Integer $r6;
        java.util.TreeMap $r0;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst r1;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r7;
        int i0, $i1, i2, i3;
        java.lang.String $r4;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[] $r2;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt $r5;

        r7 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r1 := @parameter0: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst;

        i2 = 0;

        $r0 = new java.util.TreeMap;

        specialinvoke $r0.<java.util.TreeMap: void <init>()>();

        $r2 = interfaceinvoke r1.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt[] getRArray()>();

        i0 = lengthof $r2;

        i3 = 0;

     label1:
        if i3 >= i0 goto label2;

        r3 = $r2[i3];

        $r4 = interfaceinvoke r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: java.lang.String getT()>();

        $r5 = interfaceinvoke r3.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt getRPr()>();

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        i2 = i2 + $i1;

        $r6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        virtualinvoke $r0.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r6, $r5);

        i3 = i3 + 1;

        goto label1;

     label2:
        return $r0;
    }

    org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst buildCTRst(java.lang.String, java.util.TreeMap)
    {
        java.lang.Integer $r3, $r8, $r12;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring $r11;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst $r4;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r23;
        int $i0, $i1, $i2, $i3, i4;
        java.lang.String r0, $r10, $r22;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt r14;
        boolean $z0;
        java.util.Iterator $r6;
        java.util.Set $r5;
        org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt $r9;
        java.lang.IllegalArgumentException $r15;
        java.util.TreeMap r1;
        java.lang.Object $r2, $r7, $r13, $r20;
        java.lang.StringBuilder $r16, $r17, $r18, $r19, $r21;

        r23 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.TreeMap;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r2 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object lastKey()>();

        $r3 = (java.lang.Integer) $r2;

        $i1 = virtualinvoke $r3.<java.lang.Integer: int intValue()>();

        if $i0 == $i1 goto label1;

        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Text length was ");

        $i3 = virtualinvoke r0.<java.lang.String: int length()>();

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but the last format index was ");

        $r20 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object lastKey()>();

        $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r15;

     label1:
        $r4 = staticinvoke <org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst$Factory: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst newInstance()>();

        i4 = 0;

        $r5 = virtualinvoke r1.<java.util.TreeMap: java.util.Set keySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        $r8 = (java.lang.Integer) $r7;

        $i2 = virtualinvoke $r8.<java.lang.Integer: int intValue()>();

        $r9 = interfaceinvoke $r4.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRst: org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt addNewR()>();

        $r10 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i4, $i2);

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: void setT(java.lang.String)>($r10);

        $r11 = interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring xgetT()>();

        staticinvoke <org.apache.poi.xssf.usermodel.XSSFRichTextString: void preserveSpaces(org.openxmlformats.schemas.spreadsheetml.x2006.main.STXstring)>($r11);

        $r12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        $r13 = virtualinvoke r1.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>($r12);

        r14 = (org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt) $r13;

        if r14 == null goto label3;

        interfaceinvoke $r9.<org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRElt: void setRPr(org.openxmlformats.schemas.spreadsheetml.x2006.main.CTRPrElt)>(r14);

     label3:
        i4 = $i2;

        goto label2;

     label4:
        return $r4;
    }

    private org.apache.poi.xssf.model.ThemesTable getThemesTable()
    {
        org.apache.poi.xssf.model.ThemesTable $r3;
        org.apache.poi.xssf.usermodel.XSSFRichTextString r0;
        org.apache.poi.xssf.model.StylesTable $r1, $r2;

        r0 := @this: org.apache.poi.xssf.usermodel.XSSFRichTextString;

        $r1 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.apache.poi.xssf.usermodel.XSSFRichTextString: org.apache.poi.xssf.model.StylesTable styles>;

        $r3 = virtualinvoke $r2.<org.apache.poi.xssf.model.StylesTable: org.apache.poi.xssf.model.ThemesTable getTheme()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("_x([0-9A-F]{4})_");

        <org.apache.poi.xssf.usermodel.XSSFRichTextString: java.util.regex.Pattern utfPtrn> = $r0;

        return;
    }
}
