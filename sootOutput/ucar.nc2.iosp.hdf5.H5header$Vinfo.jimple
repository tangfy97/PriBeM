class ucar.nc2.iosp.hdf5.H5header$Vinfo extends java.lang.Object
{
    ucar.nc2.Variable owner;
    ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade;
    long dataPos;
    ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo;
    int[] storageSize;
    boolean isChunked;
    ucar.nc2.iosp.hdf5.H5header$DataBTree btree;
    ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt;
    ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds;
    ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp;
    boolean useFillValue;
    byte[] fillValue;
    final ucar.nc2.iosp.hdf5.H5header this$0;

    void <init>(ucar.nc2.iosp.hdf5.H5header, ucar.nc2.iosp.hdf5.H5header$DataObjectFacade) throws java.io.IOException
    {
        ucar.nc2.iosp.hdf5.H5header$MessageLayout $r4, $r14, $r22;
        byte $b2;
        int[] $r17, $r23;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r0;
        boolean $z0, $z1, $z2, $z3;
        ucar.nc2.iosp.hdf5.H5header$DataObject $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r18, $r21, $r31;
        ucar.nc2.iosp.hdf5.H5header r1;
        java.lang.StringBuilder $r26, $r29, $r30, $r33, $r35;
        ucar.nc2.NetcdfFile $r27;
        long $l0, $l1;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade r2;
        ucar.nc2.iosp.hdf5.H5header$MessageFilter $r10;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace $r8, $r16;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype $r6, $r12, $r19, $r32;
        int $i3;
        java.lang.String $r28, $r34;
        java.io.PrintStream $r24;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r20;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter1: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked> = 0;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree> = null;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean useFillValue> = 0;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade> = r2;

        $r3 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r4 = $r3.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageLayout msl>;

        $l0 = $r4.<ucar.nc2.iosp.hdf5.H5header$MessageLayout: long dataAddress>;

        $l1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: long access$100(ucar.nc2.iosp.hdf5.H5header,long)>(r1, $l0);

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: long dataPos> = $l1;

        $r5 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r6 = $r5.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt> = $r6;

        $r7 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r8 = $r7.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds> = $r8;

        $r9 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r10 = $r9.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp> = $r10;

        $r11 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r12 = $r11.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $z0 = $r12.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isOK>;

        if $z0 != 0 goto label1;

        $z2 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$200()>();

        if $z2 == 0 goto label1;

        $r24 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r26 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING HDF5 file ");

        $r27 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile access$300(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r28 = virtualinvoke $r27.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r29 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling ");

        $r31 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r32 = $r31.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r33 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r24.<java.io.PrintStream: void println(java.lang.String)>($r34);

        return;

     label1:
        $r13 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r14 = $r13.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageLayout msl>;

        $b2 = $r14.<ucar.nc2.iosp.hdf5.H5header$MessageLayout: byte type>;

        $i3 = (int) $b2;

        if $i3 != 2 goto label2;

        $z3 = 1;

        goto label3;

     label2:
        $z3 = 0;

     label3:
        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked> = $z3;

        $z1 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked>;

        if $z1 == 0 goto label4;

        $r21 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r22 = $r21.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageLayout msl>;

        $r23 = $r22.<ucar.nc2.iosp.hdf5.H5header$MessageLayout: int[] chunkSize>;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize> = $r23;

        goto label5;

     label4:
        $r15 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r16 = $r15.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds>;

        $r17 = $r16.<ucar.nc2.iosp.hdf5.H5header$MessageDataspace: int[] dimLength>;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize> = $r17;

     label5:
        $r18 = r2.<ucar.nc2.iosp.hdf5.H5header$DataObjectFacade: ucar.nc2.iosp.hdf5.H5header$DataObject dobj>;

        $r19 = $r18.<ucar.nc2.iosp.hdf5.H5header$DataObject: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt>;

        $r20 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo calcNCtype(ucar.nc2.iosp.hdf5.H5header$MessageDatatype)>($r19);

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo> = $r20;

        return;
    }

    void <init>(ucar.nc2.iosp.hdf5.H5header, ucar.nc2.iosp.hdf5.H5header$MessageDatatype, ucar.nc2.iosp.hdf5.H5header$MessageDataspace, long) throws java.io.IOException
    {
        long l0;
        ucar.nc2.iosp.hdf5.H5header$MessageDataspace r3;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype r2;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r0;
        java.lang.String $r9, $r13;
        boolean $z0, $z1;
        java.io.PrintStream $r5;
        ucar.nc2.iosp.hdf5.H5header r1;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r4;
        java.lang.StringBuilder $r6, $r7, $r10, $r11, $r12;
        ucar.nc2.NetcdfFile $r8;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r1 := @parameter0: ucar.nc2.iosp.hdf5.H5header;

        r2 := @parameter1: ucar.nc2.iosp.hdf5.H5header$MessageDatatype;

        r3 := @parameter2: ucar.nc2.iosp.hdf5.H5header$MessageDataspace;

        l0 := @parameter3: long;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked> = 0;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree> = null;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean useFillValue> = 0;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDatatype mdt> = r2;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageDataspace mds> = r3;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: long dataPos> = l0;

        $z0 = r2.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isOK>;

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$200()>();

        if $z1 == 0 goto label1;

        $r5 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING HDF5 file ");

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.nc2.NetcdfFile access$300(ucar.nc2.iosp.hdf5.H5header)>(r1);

        $r9 = virtualinvoke $r8.<ucar.nc2.NetcdfFile: java.lang.String getLocation()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not handling ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r13);

        return;

     label1:
        $r4 = specialinvoke r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo calcNCtype(ucar.nc2.iosp.hdf5.H5header$MessageDatatype)>(r2);

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo> = $r4;

        return;
    }

    void setOwner(ucar.nc2.Variable)
    {
        ucar.nc2.iosp.hdf5.H5header$DataBTree $r2, $r3;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r0;
        ucar.nc2.Variable r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r1 := @parameter0: ucar.nc2.Variable;

        r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.Variable owner> = r1;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree>;

        if $r2 == null goto label1;

        $r3 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataBTree btree>;

        virtualinvoke $r3.<ucar.nc2.iosp.hdf5.H5header$DataBTree: void setOwner(ucar.nc2.Variable)>(r1);

     label1:
        return;
    }

    private ucar.nc2.iosp.hdf5.H5header$TypeInfo calcNCtype(ucar.nc2.iosp.hdf5.H5header$MessageDatatype)
    {
        byte[] r1, $r15;
        byte $b2, $b3, $b10, $b18, $b19, $b20, $b21, $b22, $b23, $b24, $b25, $b26, $b27, $b28, $b29, $b30, $b31;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r3;
        ucar.nc2.iosp.hdf5.H5header $r4, $r7, $r17, $r21, $r41, $r45, $r47;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r27, $r28, $r32, $r33, $r51, $r52, $r54;
        ucar.nc2.iosp.hdf5.H5header$MessageDatatype r0, $r5, $r16, $r19, $r23, $r49;
        java.lang.String $r14, $r29, $r34;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r6, $r50;
        java.lang.IllegalStateException $r53;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.ma2.DataType $r18, $r20, $r22, $r24, $r35, $r36, $r37, $r38, $r39, $r40, $r42, $r43, $r44, $r46, $r48;
        int i0, i1, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i32, $i33;
        java.io.PrintStream $r8;
        org.slf4j.Logger $r25;

        r3 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r0 := @parameter0: ucar.nc2.iosp.hdf5.H5header$MessageDatatype;

        i0 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        i1 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int byteSize>;

        r1 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: byte[] flags>;

        $r50 = new ucar.nc2.iosp.hdf5.H5header$TypeInfo;

        $r4 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        specialinvoke $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: void <init>(ucar.nc2.iosp.hdf5.H5header,int,int)>($r4, i0, i1);

        if i0 != 0 goto label05;

        $r47 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r48 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType access$500(ucar.nc2.iosp.hdf5.H5header,int,int)>($r47, i0, i1);

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r48;

        $b24 = r1[0];

        $b25 = $b24 & 1;

        if $b25 != 0 goto label01;

        $b28 = 1;

        goto label02;

     label01:
        $b28 = 0;

     label02:
        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian> = $b28;

        $b26 = r1[0];

        $b27 = $b26 & 8;

        if $b27 != 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: boolean unsigned> = $z4;

        goto label27;

     label05:
        if i0 != 1 goto label08;

        $r45 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r46 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType access$500(ucar.nc2.iosp.hdf5.H5header,int,int)>($r45, i0, i1);

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r46;

        $b22 = r1[0];

        $b23 = $b22 & 1;

        if $b23 != 0 goto label06;

        $b29 = 1;

        goto label07;

     label06:
        $b29 = 0;

     label07:
        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian> = $b29;

        goto label27;

     label08:
        if i0 != 2 goto label11;

        $r44 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r44;

        $b20 = r1[0];

        $b21 = $b20 & 1;

        if $b21 != 0 goto label09;

        $b30 = 1;

        goto label10;

     label09:
        $b30 = 0;

     label10:
        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian> = $b30;

        goto label27;

     label11:
        if i0 != 3 goto label12;

        $r43 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r43;

        $b18 = r1[0];

        $b19 = $b18 & 15;

        $i32 = (int) $b19;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int vpad> = $i32;

        goto label27;

     label12:
        if i0 != 4 goto label13;

        $r41 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r42 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType access$500(ucar.nc2.iosp.hdf5.H5header,int,int)>($r41, i0, i1);

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r42;

        goto label27;

     label13:
        if i0 != 5 goto label14;

        $r40 = <ucar.ma2.DataType: ucar.ma2.DataType OPAQUE>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r40;

        goto label27;

     label14:
        if i0 != 6 goto label15;

        $r39 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r39;

        goto label27;

     label15:
        if i0 != 7 goto label16;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian> = 1;

        $r38 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r38;

        goto label27;

     label16:
        if i0 != 8 goto label20;

        $i13 = $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int byteSize>;

        if $i13 != 1 goto label17;

        $r37 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r37;

        goto label27;

     label17:
        $i14 = $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int byteSize>;

        if $i14 != 2 goto label18;

        $r36 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r36;

        goto label27;

     label18:
        $i15 = $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int byteSize>;

        if $i15 != 4 goto label19;

        $r35 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r35;

        goto label27;

     label19:
        $r25 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: org.slf4j.Logger access$600()>();

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal byte suze for enum type = ");

        $i16 = $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int byteSize>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String)>($r29);

        $r53 = new java.lang.IllegalStateException;

        $r52 = new java.lang.StringBuilder;

        specialinvoke $r52.<java.lang.StringBuilder: void <init>()>();

        $r32 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Illegal byte suze for enum type = ");

        $i17 = $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int byteSize>;

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r53.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r34);

        throw $r53;

     label20:
        if i0 != 9 goto label22;

        $z2 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isVString>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: boolean isVString> = $z2;

        $z3 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isVString>;

        if $z3 == 0 goto label21;

        $b10 = r1[0];

        $i33 = (int) $b10;

        $i11 = $i33 >> 4;

        $i12 = $i11 & 15;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int vpad> = $i12;

        $r24 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r24;

        goto label27;

     label21:
        $r21 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        $i7 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int getBaseType()>();

        $i8 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int getBaseSize()>();

        $r22 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType access$500(ucar.nc2.iosp.hdf5.H5header,int,int)>($r21, $i7, $i8);

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r22;

        $r23 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        $i9 = $r23.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int endian>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian> = $i9;

        goto label27;

     label22:
        if i0 != 10 goto label26;

        $r15 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: byte[] getFlags()>();

        $b2 = $r15[0];

        $b3 = $b2 & 1;

        if $b3 != 0 goto label23;

        $b31 = 1;

        goto label24;

     label23:
        $b31 = 0;

     label24:
        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian> = $b31;

        $r16 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        $i4 = $r16.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int type>;

        if $i4 != 9 goto label25;

        $r19 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        $z1 = $r19.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: boolean isVString>;

        if $z1 == 0 goto label25;

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r20;

        goto label27;

     label25:
        $r17 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        $i5 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int getBaseType()>();

        $i6 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: int getBaseSize()>();

        $r18 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: ucar.ma2.DataType access$500(ucar.nc2.iosp.hdf5.H5header,int,int)>($r17, $i5, $i6);

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType> = $r18;

        goto label27;

     label26:
        $z0 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: boolean access$200()>();

        if $z0 == 0 goto label27;

        $r7 = r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header this$0>;

        $r8 = staticinvoke <ucar.nc2.iosp.hdf5.H5header: java.io.PrintStream access$400(ucar.nc2.iosp.hdf5.H5header)>($r7);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WARNING not handling hdf dataType = ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size= ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r8.<java.io.PrintStream: void println(java.lang.String)>($r14);

     label27:
        $r49 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        if $r49 == null goto label28;

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header$MessageDatatype: ucar.nc2.iosp.hdf5.H5header$MessageDatatype base>;

        $r6 = specialinvoke r3.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo calcNCtype(ucar.nc2.iosp.hdf5.H5header$MessageDatatype)>($r5);

        $r50.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo base> = $r6;

     label28:
        return $r50;
    }

    public java.lang.String toString()
    {
        long $l0;
        ucar.nc2.iosp.hdf5.H5header$MessageFilter $r6;
        ucar.nc2.iosp.hdf5.H5header$DataObjectFacade $r9, $r12;
        int[] r13;
        int i1, i2, i3;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r2;
        java.lang.String $r8, $r10;
        boolean $z0;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r7, $r11, $r14;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r5;

        r2 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("dataPos=");

        $l0 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: long dataPos>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" datatype=");

        $r5 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $z0 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean isChunked>;

        if $z0 == 0 goto label3;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" isChunked (");

        r13 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: int[] storageSize>;

        i1 = lengthof r13;

        i3 = 0;

     label1:
        if i3 >= i1 goto label2;

        i2 = r13[i3];

        $r14 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

     label3:
        $r6 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$MessageFilter mfp>;

        if $r6 == null goto label4;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" hasFilter");

     label4:
        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; // ");

        $r8 = virtualinvoke r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: java.lang.String extraInfo()>();

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r9 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade>;

        if null == $r9 goto label5;

        $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r12 = r2.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$DataObjectFacade facade>;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

     label5:
        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r10;
    }

    public java.lang.String extraInfo()
    {
        int $i0, $i1;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r1;
        java.lang.String $r5, $r11, $r13;
        boolean $z0, $z1;
        ucar.ma2.DataType $r3, $r4, $r8, $r9;
        java.lang.StringBuilder $r0;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r2, $r6, $r7, $r10, $r12;

        r1 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r4 = $r2.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r4 == $r3 goto label3;

        $r7 = r1.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r9 = $r7.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        if $r9 == $r8 goto label3;

        $r10 = r1.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $z0 = $r10.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: boolean unsigned>;

        if $z0 == 0 goto label1;

        $r11 = " unsigned";

        goto label2;

     label1:
        $r11 = " signed";

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

     label3:
        $r12 = r1.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i1 = $r12.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

        if $i1 < 0 goto label6;

        $r6 = r1.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i0 = $r6.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

        if $i0 != 1 goto label4;

        $r13 = " LittleEndian";

        goto label5;

     label4:
        $r13 = " BigEndian";

     label5:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

     label6:
        $z1 = r1.<ucar.nc2.iosp.hdf5.H5header$Vinfo: boolean useFillValue>;

        if $z1 == 0 goto label7;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" useFillValue");

     label7:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    ucar.ma2.DataType getNCDataType()
    {
        ucar.ma2.DataType $r2;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r0;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r1;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r2 = $r1.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        return $r2;
    }

    java.lang.Object getFillValue()
    {
        byte[] $r1;
        ucar.ma2.DataType $r3;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r0;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r2;
        java.lang.Object $r4;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue>;

        if $r1 != null goto label1;

        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r3 = $r2.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r4 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: java.lang.Object getFillValueDefault(ucar.ma2.DataType)>($r3);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: java.lang.Object getFillValueNonDefault()>();

     label2:
        return $r4;
    }

    java.lang.Object getFillValueDefault(ucar.ma2.DataType)
    {
        java.lang.Float $r15;
        java.lang.Double $r14;
        java.lang.Integer $r9;
        java.lang.Long $r16;
        java.lang.Short $r6;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r18;
        java.lang.Byte $r2, $r17;
        ucar.ma2.DataType r0, $r1, $r3, $r4, $r5, $r7, $r8, $r10, $r11, $r12, $r13;

        r18 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        r0 := @parameter0: ucar.ma2.DataType;

        $r1 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if r0 == $r1 goto label01;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        if r0 != $r3 goto label02;

     label01:
        $r2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(-127);

        return $r2;

     label02:
        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if r0 != $r4 goto label03;

        $r17 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);

        return $r17;

     label03:
        $r5 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if r0 == $r5 goto label04;

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        if r0 != $r7 goto label05;

     label04:
        $r6 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(-32767);

        return $r6;

     label05:
        $r8 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if r0 == $r8 goto label06;

        $r10 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        if r0 != $r10 goto label07;

     label06:
        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(-2147483647);

        return $r9;

     label07:
        $r11 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if r0 != $r11 goto label08;

        $r16 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(-9223372036854775806L);

        return $r16;

     label08:
        $r12 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if r0 != $r12 goto label09;

        $r15 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(9.96921E36F);

        return $r15;

     label09:
        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if r0 != $r13 goto label10;

        $r14 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(9.969209968386869E36);

        return $r14;

     label10:
        return null;
    }

    java.lang.Object getFillValueNonDefault()
    {
        byte[] $r1, $r11, $r43;
        java.lang.Float $r39;
        java.nio.FloatBuffer $r38;
        java.lang.Integer $r23;
        java.nio.ByteBuffer $r12;
        byte $b5;
        java.nio.IntBuffer $r22;
        java.lang.Long $r41;
        java.lang.Short $r15;
        ucar.nc2.iosp.hdf5.H5header$Vinfo r0;
        java.lang.Byte $r44;
        ucar.ma2.DataType $r3, $r4, $r6, $r7, $r9, $r10, $r17, $r18, $r20, $r21, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r47, $r48;
        java.nio.ByteOrder $r45;
        float $f0;
        java.lang.Double $r37;
        java.nio.ShortBuffer $r14;
        long $l3;
        short $s1;
        int $i0, $i2, $i4;
        double $d0;
        java.nio.DoubleBuffer $r36;
        ucar.nc2.iosp.hdf5.H5header$TypeInfo $r2, $r5, $r8, $r13, $r16, $r19, $r24, $r27, $r30, $r33, $r42, $r46;
        java.nio.LongBuffer $r40;

        r0 := @this: ucar.nc2.iosp.hdf5.H5header$Vinfo;

        $r1 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue>;

        if $r1 != null goto label01;

        return null;

     label01:
        $r2 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r4 = $r2.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType BYTE>;

        if $r4 == $r3 goto label02;

        $r5 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r7 = $r5.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r7 == $r6 goto label02;

        $r8 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r10 = $r8.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r9 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM1>;

        if $r10 != $r9 goto label03;

     label02:
        $r43 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue>;

        $b5 = $r43[0];

        $r44 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b5);

        return $r44;

     label03:
        $r11 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: byte[] fillValue>;

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r11);

        $r13 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i0 = $r13.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

        if $i0 < 0 goto label06;

        $r42 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $i4 = $r42.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: int endian>;

        if $i4 != 1 goto label04;

        $r45 = <java.nio.ByteOrder: java.nio.ByteOrder LITTLE_ENDIAN>;

        goto label05;

     label04:
        $r45 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;

     label05:
        virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>($r45);

     label06:
        $r46 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r47 = $r46.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r48 = <ucar.ma2.DataType: ucar.ma2.DataType SHORT>;

        if $r47 == $r48 goto label07;

        $r16 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r18 = $r16.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r17 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM2>;

        if $r18 != $r17 goto label08;

     label07:
        $r14 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.ShortBuffer asShortBuffer()>();

        $s1 = virtualinvoke $r14.<java.nio.ShortBuffer: short get()>();

        $r15 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>($s1);

        return $r15;

     label08:
        $r19 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r21 = $r19.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r20 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        if $r21 == $r20 goto label09;

        $r24 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r26 = $r24.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r25 = <ucar.ma2.DataType: ucar.ma2.DataType ENUM4>;

        if $r26 != $r25 goto label10;

     label09:
        $r22 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.IntBuffer asIntBuffer()>();

        $i2 = virtualinvoke $r22.<java.nio.IntBuffer: int get()>();

        $r23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i2);

        return $r23;

     label10:
        $r27 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r29 = $r27.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType LONG>;

        if $r29 != $r28 goto label11;

        $r40 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.LongBuffer asLongBuffer()>();

        $l3 = virtualinvoke $r40.<java.nio.LongBuffer: long get()>();

        $r41 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l3);

        return $r41;

     label11:
        $r30 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r32 = $r30.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r31 = <ucar.ma2.DataType: ucar.ma2.DataType FLOAT>;

        if $r32 != $r31 goto label12;

        $r38 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.FloatBuffer asFloatBuffer()>();

        $f0 = virtualinvoke $r38.<java.nio.FloatBuffer: float get()>();

        $r39 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>($f0);

        return $r39;

     label12:
        $r33 = r0.<ucar.nc2.iosp.hdf5.H5header$Vinfo: ucar.nc2.iosp.hdf5.H5header$TypeInfo typeInfo>;

        $r35 = $r33.<ucar.nc2.iosp.hdf5.H5header$TypeInfo: ucar.ma2.DataType dataType>;

        $r34 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        if $r35 != $r34 goto label13;

        $r36 = virtualinvoke $r12.<java.nio.ByteBuffer: java.nio.DoubleBuffer asDoubleBuffer()>();

        $d0 = virtualinvoke $r36.<java.nio.DoubleBuffer: double get()>();

        $r37 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        return $r37;

     label13:
        return null;
    }
}
