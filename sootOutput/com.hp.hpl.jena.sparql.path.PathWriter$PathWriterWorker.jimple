class com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker extends java.lang.Object implements com.hp.hpl.jena.sparql.path.PathVisitor
{
    private org.apache.jena.atlas.io.IndentedWriter out;
    private com.hp.hpl.jena.sparql.core.Prologue prologue;
    private static boolean alwaysInnerParens;
    private boolean needParens;

    void <init>(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.core.Prologue)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter r1;
        com.hp.hpl.jena.sparql.core.Prologue r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r2 := @parameter1: com.hp.hpl.jena.sparql.core.Prologue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens> = 0;

        r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out> = r1;

        r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: com.hp.hpl.jena.sparql.core.Prologue prologue> = r2;

        return;
    }

    private void visitPath(com.hp.hpl.jena.sparql.path.Path)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.Path r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visitPath(com.hp.hpl.jena.sparql.path.Path,boolean)>(r1, 1);

        return;
    }

    private void visitPath(com.hp.hpl.jena.sparql.path.Path, boolean)
    {
        com.hp.hpl.jena.sparql.path.Path r1;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        boolean $z0, $z1, z2;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.Path;

        z2 := @parameter1: boolean;

        $z0 = <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens>;

        if $z0 == 0 goto label1;

        z2 = 1;

     label1:
        $z1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens> = z2;

        interfaceinvoke r1.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens> = $z1;

        return;
    }

    private void output(com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.sparql.core.Prologue $r2;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String $r4;
        org.apache.jena.atlas.io.IndentedWriter $r3;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r2 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.Prologue)>(r1, $r2);

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r4);

        return;
    }

    private void output(com.hp.hpl.jena.sparql.path.P_Path0)
    {
        com.hp.hpl.jena.sparql.path.P_Path0 r0;
        com.hp.hpl.jena.sparql.core.Prologue $r4;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r1;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.atlas.io.IndentedWriter $r2, $r6;
        java.lang.String $r5;
        boolean $z0;

        r1 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.path.P_Path0;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Path0: boolean isForward()>();

        if $z0 != 0 goto label1;

        $r6 = r1.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("^");

     label1:
        $r2 = r1.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_Path0: com.hp.hpl.jena.graph.Node getNode()>();

        $r4 = r1.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: com.hp.hpl.jena.sparql.core.Prologue prologue>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.core.Prologue)>($r3, $r4);

        virtualinvoke $r2.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r5);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Link)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.P_Link r1;
        com.hp.hpl.jena.graph.Node $r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Link;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Link: com.hp.hpl.jena.graph.Node getNode()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void output(com.hp.hpl.jena.graph.Node)>($r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ReverseLink)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.graph.Node $r3;
        org.apache.jena.atlas.io.IndentedWriter $r1;
        com.hp.hpl.jena.sparql.path.P_ReverseLink r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_ReverseLink;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void println(java.lang.String)>("^");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_ReverseLink: com.hp.hpl.jena.graph.Node getNode()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void output(com.hp.hpl.jena.graph.Node)>($r3);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_NegPropSet)
    {
        com.hp.hpl.jena.sparql.path.P_Path0 r8, $r11;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r2;
        com.hp.hpl.jena.sparql.path.P_NegPropSet r0;
        int $i0, $i1;
        com.hp.hpl.jena.sparql.ARQException $r12;
        boolean $z0, z1;
        java.util.Iterator $r5;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4, $r6, $r9;
        java.util.List $r1;
        java.lang.Object $r7, $r10;

        r2 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r0 := @parameter0: com.hp.hpl.jena.sparql.path.P_NegPropSet;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.path.P_NegPropSet: java.util.List getNodes()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r12 = new com.hp.hpl.jena.sparql.ARQException;

        specialinvoke $r12.<com.hp.hpl.jena.sparql.ARQException: void <init>(java.lang.String)>("Bad path element: NotOneOf found with no elements");

        throw $r12;

     label1:
        $r3 = r2.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("!");

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 != 1 goto label2;

        $r10 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (com.hp.hpl.jena.sparql.path.P_Path0) $r10;

        specialinvoke r2.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void output(com.hp.hpl.jena.sparql.path.P_Path0)>($r11);

        goto label6;

     label2:
        $r4 = r2.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

        z1 = 1;

        $r5 = interfaceinvoke $r1.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (com.hp.hpl.jena.sparql.path.P_Path0) $r7;

        if z1 != 0 goto label4;

        $r9 = r2.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("|");

     label4:
        z1 = 0;

        specialinvoke r2.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void output(com.hp.hpl.jena.sparql.path.P_Path0)>(r8);

        goto label3;

     label5:
        $r6 = r2.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label6:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Alt)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.P_Alt r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Alt;

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visit2(com.hp.hpl.jena.sparql.path.P_Path2,java.lang.String,boolean)>(r1, "|", 1);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Seq)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.P_Seq r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Seq;

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visit2(com.hp.hpl.jena.sparql.path.P_Path2,java.lang.String,boolean)>(r1, "/", 0);

        return;
    }

    private void visit2(com.hp.hpl.jena.sparql.path.P_Path2, java.lang.String, boolean)
    {
        com.hp.hpl.jena.sparql.path.P_Path2 r1;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.Path $r2, $r5, $r7, $r8, $r9;
        java.lang.String r3;
        boolean $z0, z1, $z2, $z3, $z4;
        org.apache.jena.atlas.io.IndentedWriter $r4, $r6, $r10;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Path2;

        r3 := @parameter1: java.lang.String;

        z1 := @parameter2: boolean;

        $z0 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z0 == 0 goto label1;

        $r10 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

     label1:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Path2: com.hp.hpl.jena.sparql.path.Path getLeft()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visitPath(com.hp.hpl.jena.sparql.path.Path)>($r2);

        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r3);

        if z1 == 0 goto label3;

        $r7 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Path2: com.hp.hpl.jena.sparql.path.Path getRight()>();

        $z2 = $r7 instanceof com.hp.hpl.jena.sparql.path.P_Seq;

        if $z2 == 0 goto label2;

        $r9 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Path2: com.hp.hpl.jena.sparql.path.Path getRight()>();

        $z3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visitPath(com.hp.hpl.jena.sparql.path.Path,boolean)>($r9, $z3);

        goto label4;

     label2:
        $r8 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Path2: com.hp.hpl.jena.sparql.path.Path getRight()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visitPath(com.hp.hpl.jena.sparql.path.Path,boolean)>($r8, 1);

        goto label4;

     label3:
        $r5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Path2: com.hp.hpl.jena.sparql.path.Path getRight()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visitPath(com.hp.hpl.jena.sparql.path.Path,boolean)>($r5, 1);

     label4:
        $z4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z4 == 0 goto label5;

        $r6 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label5:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Mod)
    {
        com.hp.hpl.jena.sparql.path.P_Mod r1;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        long $l0, $l2, $l4, $l5;
        com.hp.hpl.jena.sparql.path.Path $r2;
        byte $b1, $b3;
        java.lang.String $r8, $r10;
        boolean $z0, $z1, $z2, $z3;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_Mod;

        $z0 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z0 == 0 goto label1;

        $r13 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r13.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

     label1:
        $z1 = <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens>;

        if $z1 == 0 goto label2;

        $r12 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r12.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

     label2:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Mod: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        $z2 = <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens>;

        if $z2 == 0 goto label3;

        $r11 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r11.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label3:
        $r3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("{");

        $l0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Mod: long getMin()>();

        $b1 = $l0 cmp -1L;

        if $b1 == 0 goto label4;

        $r9 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $l5 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Mod: long getMin()>();

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l5);

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r10);

     label4:
        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(",");

        $l2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Mod: long getMax()>();

        $b3 = $l2 cmp -1L;

        if $b3 == 0 goto label5;

        $r7 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $l4 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_Mod: long getMax()>();

        $r8 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l4);

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r8);

     label5:
        $r5 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("}");

        $z3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z3 == 0 goto label6;

        $r6 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label6:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_FixedLength)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        long $l0;
        com.hp.hpl.jena.sparql.path.P_FixedLength r1;
        com.hp.hpl.jena.sparql.path.Path $r2;
        java.lang.String $r5;
        boolean $z0, $z1, $z2, $z3;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4, $r6, $r7, $r8, $r9, $r10;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_FixedLength;

        $z0 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z0 == 0 goto label1;

        $r10 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r10.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

     label1:
        $z1 = <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens>;

        if $z1 == 0 goto label2;

        $r9 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r9.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

     label2:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_FixedLength: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        interfaceinvoke $r2.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        $z2 = <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens>;

        if $z2 == 0 goto label3;

        $r8 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r8.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label3:
        $r3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("{");

        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        $l0 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_FixedLength: long getCount()>();

        $r5 = staticinvoke <java.lang.Long: java.lang.String toString(long)>($l0);

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>($r5);

        $r6 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r6.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("}");

        $z3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z3 == 0 goto label4;

        $r7 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r7.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label4:
        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Distinct)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r4;
        com.hp.hpl.jena.sparql.path.P_Distinct r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_Distinct;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("DISTINCT(");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_Distinct: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Multi)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.P_Multi r2;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_Multi;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("MULTI(");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_Multi: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Shortest)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.P_Shortest r2;
        org.apache.jena.atlas.io.IndentedWriter $r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_Shortest;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("SHORTEST(");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_Shortest: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        interfaceinvoke $r3.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ZeroOrOne)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.Path $r2;
        com.hp.hpl.jena.sparql.path.P_ZeroOrOne r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_ZeroOrOne;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_ZeroOrOne: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void printPathMod(java.lang.String,com.hp.hpl.jena.sparql.path.Path)>("?", $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ZeroOrMore1)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.P_ZeroOrMore1 r1;
        com.hp.hpl.jena.sparql.path.Path $r2;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_ZeroOrMore1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_ZeroOrMore1: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void printPathMod(java.lang.String,com.hp.hpl.jena.sparql.path.Path)>("*", $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.Path $r2;
        com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_ZeroOrMoreN: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void printPathMod(java.lang.String,com.hp.hpl.jena.sparql.path.Path)>("{*}", $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_OneOrMore1)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.Path $r2;
        com.hp.hpl.jena.sparql.path.P_OneOrMore1 r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_OneOrMore1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_OneOrMore1: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void printPathMod(java.lang.String,com.hp.hpl.jena.sparql.path.Path)>("+", $r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_OneOrMoreN)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        com.hp.hpl.jena.sparql.path.Path $r2;
        com.hp.hpl.jena.sparql.path.P_OneOrMoreN r1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r1 := @parameter0: com.hp.hpl.jena.sparql.path.P_OneOrMoreN;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.path.P_OneOrMoreN: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void printPathMod(java.lang.String,com.hp.hpl.jena.sparql.path.Path)>("{+}", $r2);

        return;
    }

    private void printPathMod(java.lang.String, com.hp.hpl.jena.sparql.path.Path)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r3, $r4, $r5;
        com.hp.hpl.jena.sparql.path.Path r1;
        java.lang.String r2;
        boolean $z0, z1, $z2, $z4, $z5;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.sparql.path.Path;

        $z0 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean needParens>;

        if $z0 != 0 goto label1;

        $z2 = <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens>;

        if $z2 == 0 goto label2;

     label1:
        $z5 = 1;

        $z4 = 1;

        goto label3;

     label2:
        $z5 = 0;

        $z4 = 0;

     label3:
        z1 = $z4;

        if $z5 == 0 goto label4;

        $r5 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r5.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("(");

     label4:
        interfaceinvoke r1.<com.hp.hpl.jena.sparql.path.Path: void visit(com.hp.hpl.jena.sparql.path.PathVisitor)>(r0);

        if z1 == 0 goto label5;

        $r4 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r4.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(")");

     label5:
        $r3 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r3.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>(r2);

        return;
    }

    public void visit(com.hp.hpl.jena.sparql.path.P_Inverse)
    {
        com.hp.hpl.jena.sparql.path.Path $r3;
        com.hp.hpl.jena.sparql.path.P_Inverse r2;
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;
        boolean $z0, z1;

        r0 := @this: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        r2 := @parameter0: com.hp.hpl.jena.sparql.path.P_Inverse;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        virtualinvoke $r1.<org.apache.jena.atlas.io.IndentedWriter: void print(java.lang.String)>("^");

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.sparql.path.P_Inverse: com.hp.hpl.jena.sparql.path.Path getSubPath()>();

        z1 = 1;

        $z0 = $r3 instanceof com.hp.hpl.jena.sparql.path.P_Link;

        if $z0 == 0 goto label1;

        z1 = 0;

     label1:
        specialinvoke r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: void visitPath(com.hp.hpl.jena.sparql.path.Path,boolean)>($r3, z1);

        return;
    }

    static org.apache.jena.atlas.io.IndentedWriter access$000(com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker)
    {
        com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker r0;
        org.apache.jena.atlas.io.IndentedWriter $r1;

        r0 := @parameter0: com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker;

        $r1 = r0.<com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: org.apache.jena.atlas.io.IndentedWriter out>;

        return $r1;
    }

    static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.path.PathWriter$PathWriterWorker: boolean alwaysInnerParens> = 1;

        return;
    }
}
