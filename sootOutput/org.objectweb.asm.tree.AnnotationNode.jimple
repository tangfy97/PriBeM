public class org.objectweb.asm.tree.AnnotationNode extends org.objectweb.asm.AnnotationVisitor
{
    public java.lang.String desc;
    public java.util.List values;

    public void <init>(java.lang.String)
    {
        org.objectweb.asm.tree.AnnotationNode r0;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.objectweb.asm.tree.AnnotationNode: void <init>(int,java.lang.String)>(262144, r1);

        return;
    }

    public void <init>(int, java.lang.String)
    {
        org.objectweb.asm.tree.AnnotationNode r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        specialinvoke r0.<org.objectweb.asm.AnnotationVisitor: void <init>(int)>(i0);

        r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc> = r1;

        return;
    }

    void <init>(java.util.List)
    {
        org.objectweb.asm.tree.AnnotationNode r0;
        java.util.List r1;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.objectweb.asm.AnnotationVisitor: void <init>(int)>(262144);

        r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values> = r1;

        return;
    }

    public void visit(java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.tree.AnnotationNode r0;
        java.util.ArrayList $r6;
        java.util.List $r1, $r3, $r5;
        byte $b0;
        java.lang.Object r2;
        java.lang.String r4, $r7, $r8;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        r4 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        if $r1 != null goto label3;

        $r6 = new java.util.ArrayList;

        $r7 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r7 == null goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke $r6.<java.util.ArrayList: void <init>(int)>($b0);

        r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values> = $r6;

     label3:
        $r8 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r8 == null goto label4;

        $r5 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>(r4);

     label4:
        $r3 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>(r2);

        return;
    }

    public void visitEnum(java.lang.String, java.lang.String, java.lang.String)
    {
        org.objectweb.asm.tree.AnnotationNode r0;
        java.lang.String[] $r2;
        java.util.ArrayList $r8;
        java.util.List $r1, $r5, $r7;
        byte $b0;
        java.lang.String r3, r4, r6, $r9, $r10;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        r6 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.String;

        $r1 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        if $r1 != null goto label3;

        $r8 = new java.util.ArrayList;

        $r9 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r9 == null goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke $r8.<java.util.ArrayList: void <init>(int)>($b0);

        r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values> = $r8;

     label3:
        $r10 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r10 == null goto label4;

        $r7 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>(r6);

     label4:
        $r5 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        $r2 = newarray (java.lang.String)[2];

        $r2[0] = r3;

        $r2[1] = r4;

        interfaceinvoke $r5.<java.util.List: boolean add(java.lang.Object)>($r2);

        return;
    }

    public org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String, java.lang.String)
    {
        org.objectweb.asm.tree.AnnotationNode r0, $r2;
        java.util.ArrayList $r7;
        java.util.List $r1, $r4, $r6;
        byte $b0;
        java.lang.String r3, r5, $r8, $r9;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        r5 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        if $r1 != null goto label3;

        $r7 = new java.util.ArrayList;

        $r8 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r8 == null goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($b0);

        r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values> = $r7;

     label3:
        $r9 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r9 == null goto label4;

        $r6 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        $r2 = new org.objectweb.asm.tree.AnnotationNode;

        specialinvoke $r2.<org.objectweb.asm.tree.AnnotationNode: void <init>(java.lang.String)>(r3);

        $r4 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r2);

        return $r2;
    }

    public org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)
    {
        org.objectweb.asm.tree.AnnotationNode r0, $r4;
        java.util.ArrayList $r2, $r7;
        java.util.List $r1, $r3, $r6;
        byte $b0;
        java.lang.String r5, $r8, $r9;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        r5 := @parameter0: java.lang.String;

        $r1 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        if $r1 != null goto label3;

        $r7 = new java.util.ArrayList;

        $r8 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r8 == null goto label1;

        $b0 = 2;

        goto label2;

     label1:
        $b0 = 1;

     label2:
        specialinvoke $r7.<java.util.ArrayList: void <init>(int)>($b0);

        r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values> = $r7;

     label3:
        $r9 = r0.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        if $r9 == null goto label4;

        $r6 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r6.<java.util.List: boolean add(java.lang.Object)>(r5);

     label4:
        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = r0.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        interfaceinvoke $r3.<java.util.List: boolean add(java.lang.Object)>($r2);

        $r4 = new org.objectweb.asm.tree.AnnotationNode;

        specialinvoke $r4.<org.objectweb.asm.tree.AnnotationNode: void <init>(java.util.List)>($r2);

        return $r4;
    }

    public void visitEnd()
    {
        org.objectweb.asm.tree.AnnotationNode r0;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        return;
    }

    public void check(int)
    {
        org.objectweb.asm.tree.AnnotationNode r0;
        int i0;

        r0 := @this: org.objectweb.asm.tree.AnnotationNode;

        i0 := @parameter0: int;

        return;
    }

    public void accept(org.objectweb.asm.AnnotationVisitor)
    {
        org.objectweb.asm.tree.AnnotationNode r1;
        org.objectweb.asm.AnnotationVisitor r0;
        java.util.List $r2, $r3, $r4, $r7;
        int $i0, $i1, i2;
        java.lang.Object $r5, $r8;
        java.lang.String r6;

        r1 := @this: org.objectweb.asm.tree.AnnotationNode;

        r0 := @parameter0: org.objectweb.asm.AnnotationVisitor;

        if r0 == null goto label3;

        $r2 = r1.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        if $r2 == null goto label2;

        i2 = 0;

     label1:
        $r3 = r1.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if i2 >= $i0 goto label2;

        $r4 = r1.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i2);

        r6 = (java.lang.String) $r5;

        $r7 = r1.<org.objectweb.asm.tree.AnnotationNode: java.util.List values>;

        $i1 = i2 + 1;

        $r8 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i1);

        staticinvoke <org.objectweb.asm.tree.AnnotationNode: void accept(org.objectweb.asm.AnnotationVisitor,java.lang.String,java.lang.Object)>(r0, r6, $r8);

        i2 = i2 + 2;

        goto label1;

     label2:
        virtualinvoke r0.<org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

     label3:
        return;
    }

    static void accept(org.objectweb.asm.AnnotationVisitor, java.lang.String, java.lang.Object)
    {
        org.objectweb.asm.tree.AnnotationNode r12;
        org.objectweb.asm.AnnotationVisitor r0, $r3, $r7;
        java.lang.String[] $r8, r11;
        int $i0, i1;
        java.lang.String r2, $r6, $r9, $r10;
        boolean $z0, $z1, $z2;
        java.util.List r4;
        java.lang.Object r1, $r5;

        r0 := @parameter0: org.objectweb.asm.AnnotationVisitor;

        r2 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object;

        if r0 == null goto label6;

        $z0 = r1 instanceof java.lang.String[];

        if $z0 == 0 goto label1;

        $r8 = (java.lang.String[]) r1;

        r11 = (java.lang.String[]) $r8;

        $r10 = r11[0];

        $r9 = r11[1];

        virtualinvoke r0.<org.objectweb.asm.AnnotationVisitor: void visitEnum(java.lang.String,java.lang.String,java.lang.String)>(r2, $r10, $r9);

        goto label6;

     label1:
        $z1 = r1 instanceof org.objectweb.asm.tree.AnnotationNode;

        if $z1 == 0 goto label2;

        r12 = (org.objectweb.asm.tree.AnnotationNode) r1;

        $r6 = r12.<org.objectweb.asm.tree.AnnotationNode: java.lang.String desc>;

        $r7 = virtualinvoke r0.<org.objectweb.asm.AnnotationVisitor: org.objectweb.asm.AnnotationVisitor visitAnnotation(java.lang.String,java.lang.String)>(r2, $r6);

        virtualinvoke r12.<org.objectweb.asm.tree.AnnotationNode: void accept(org.objectweb.asm.AnnotationVisitor)>($r7);

        goto label6;

     label2:
        $z2 = r1 instanceof java.util.List;

        if $z2 == 0 goto label5;

        $r3 = virtualinvoke r0.<org.objectweb.asm.AnnotationVisitor: org.objectweb.asm.AnnotationVisitor visitArray(java.lang.String)>(r2);

        r4 = (java.util.List) r1;

        i1 = 0;

     label3:
        $i0 = interfaceinvoke r4.<java.util.List: int size()>();

        if i1 >= $i0 goto label4;

        $r5 = interfaceinvoke r4.<java.util.List: java.lang.Object get(int)>(i1);

        staticinvoke <org.objectweb.asm.tree.AnnotationNode: void accept(org.objectweb.asm.AnnotationVisitor,java.lang.String,java.lang.Object)>($r3, null, $r5);

        i1 = i1 + 1;

        goto label3;

     label4:
        virtualinvoke $r3.<org.objectweb.asm.AnnotationVisitor: void visitEnd()>();

        goto label6;

     label5:
        virtualinvoke r0.<org.objectweb.asm.AnnotationVisitor: void visit(java.lang.String,java.lang.Object)>(r2, r1);

     label6:
        return;
    }
}
