public class org.springframework.aop.support.ComposablePointcut extends java.lang.Object implements org.springframework.aop.Pointcut, java.io.Serializable
{
    private static final long serialVersionUID;
    private org.springframework.aop.ClassFilter classFilter;
    private org.springframework.aop.MethodMatcher methodMatcher;

    public void <init>()
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter $r1;
        org.springframework.aop.MethodMatcher $r2;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.springframework.aop.ClassFilter: org.springframework.aop.ClassFilter TRUE>;

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r1;

        $r2 = <org.springframework.aop.MethodMatcher: org.springframework.aop.MethodMatcher TRUE>;

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r2;

        return;
    }

    public void <init>(org.springframework.aop.Pointcut)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.Pointcut r1;
        org.springframework.aop.ClassFilter $r2;
        org.springframework.aop.MethodMatcher $r3;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.Pointcut;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "Pointcut must not be null");

        $r2 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.ClassFilter getClassFilter()>();

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r2;

        $r3 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.MethodMatcher getMethodMatcher()>();

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r3;

        return;
    }

    public void <init>(org.springframework.aop.ClassFilter)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter r1;
        org.springframework.aop.MethodMatcher $r2;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.ClassFilter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "ClassFilter must not be null");

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = r1;

        $r2 = <org.springframework.aop.MethodMatcher: org.springframework.aop.MethodMatcher TRUE>;

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r2;

        return;
    }

    public void <init>(org.springframework.aop.MethodMatcher)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter $r2;
        org.springframework.aop.MethodMatcher r1;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.MethodMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "MethodMatcher must not be null");

        $r2 = <org.springframework.aop.ClassFilter: org.springframework.aop.ClassFilter TRUE>;

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r2;

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = r1;

        return;
    }

    public void <init>(org.springframework.aop.ClassFilter, org.springframework.aop.MethodMatcher)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter r1;
        org.springframework.aop.MethodMatcher r2;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.ClassFilter;

        r2 := @parameter1: org.springframework.aop.MethodMatcher;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "ClassFilter must not be null");

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r2, "MethodMatcher must not be null");

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = r1;

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = r2;

        return;
    }

    public org.springframework.aop.support.ComposablePointcut union(org.springframework.aop.ClassFilter)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter r1, $r2, $r3;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.ClassFilter;

        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r3 = staticinvoke <org.springframework.aop.support.ClassFilters: org.springframework.aop.ClassFilter union(org.springframework.aop.ClassFilter,org.springframework.aop.ClassFilter)>($r2, r1);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r3;

        return r0;
    }

    public org.springframework.aop.support.ComposablePointcut intersection(org.springframework.aop.ClassFilter)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter r1, $r2, $r3;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.ClassFilter;

        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r3 = staticinvoke <org.springframework.aop.support.ClassFilters: org.springframework.aop.ClassFilter intersection(org.springframework.aop.ClassFilter,org.springframework.aop.ClassFilter)>($r2, r1);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r3;

        return r0;
    }

    public org.springframework.aop.support.ComposablePointcut union(org.springframework.aop.MethodMatcher)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.MethodMatcher r1, $r2, $r3;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.MethodMatcher;

        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $r3 = staticinvoke <org.springframework.aop.support.MethodMatchers: org.springframework.aop.MethodMatcher union(org.springframework.aop.MethodMatcher,org.springframework.aop.MethodMatcher)>($r2, r1);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r3;

        return r0;
    }

    public org.springframework.aop.support.ComposablePointcut intersection(org.springframework.aop.MethodMatcher)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.MethodMatcher r1, $r2, $r3;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.MethodMatcher;

        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $r3 = staticinvoke <org.springframework.aop.support.MethodMatchers: org.springframework.aop.MethodMatcher intersection(org.springframework.aop.MethodMatcher,org.springframework.aop.MethodMatcher)>($r2, r1);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r3;

        return r0;
    }

    public org.springframework.aop.support.ComposablePointcut union(org.springframework.aop.Pointcut)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.Pointcut r1;
        org.springframework.aop.ClassFilter $r3, $r5, $r7, $r8, $r9;
        org.springframework.aop.MethodMatcher $r2, $r4, $r6;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.Pointcut;

        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $r3 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r4 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.MethodMatcher getMethodMatcher()>();

        $r5 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.ClassFilter getClassFilter()>();

        $r6 = staticinvoke <org.springframework.aop.support.MethodMatchers: org.springframework.aop.MethodMatcher union(org.springframework.aop.MethodMatcher,org.springframework.aop.ClassFilter,org.springframework.aop.MethodMatcher,org.springframework.aop.ClassFilter)>($r2, $r3, $r4, $r5);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r6;

        $r7 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r8 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.ClassFilter getClassFilter()>();

        $r9 = staticinvoke <org.springframework.aop.support.ClassFilters: org.springframework.aop.ClassFilter union(org.springframework.aop.ClassFilter,org.springframework.aop.ClassFilter)>($r7, $r8);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r9;

        return r0;
    }

    public org.springframework.aop.support.ComposablePointcut intersection(org.springframework.aop.Pointcut)
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.Pointcut r1;
        org.springframework.aop.ClassFilter $r2, $r3, $r4;
        org.springframework.aop.MethodMatcher $r5, $r6, $r7;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: org.springframework.aop.Pointcut;

        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r3 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.ClassFilter getClassFilter()>();

        $r4 = staticinvoke <org.springframework.aop.support.ClassFilters: org.springframework.aop.ClassFilter intersection(org.springframework.aop.ClassFilter,org.springframework.aop.ClassFilter)>($r2, $r3);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter> = $r4;

        $r5 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $r6 = interfaceinvoke r1.<org.springframework.aop.Pointcut: org.springframework.aop.MethodMatcher getMethodMatcher()>();

        $r7 = staticinvoke <org.springframework.aop.support.MethodMatchers: org.springframework.aop.MethodMatcher intersection(org.springframework.aop.MethodMatcher,org.springframework.aop.MethodMatcher)>($r5, $r6);

        r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher> = $r7;

        return r0;
    }

    public org.springframework.aop.ClassFilter getClassFilter()
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter $r1;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        $r1 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        return $r1;
    }

    public org.springframework.aop.MethodMatcher getMethodMatcher()
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.MethodMatcher $r1;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        $r1 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.aop.support.ComposablePointcut r0, r2;
        org.springframework.aop.ClassFilter $r3, $r4;
        java.lang.Object r1;
        org.springframework.aop.MethodMatcher $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.springframework.aop.support.ComposablePointcut;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.springframework.aop.support.ComposablePointcut) r1;

        $r4 = r2.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r3 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $z1 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r4, $r3);

        if $z1 == 0 goto label3;

        $r6 = r2.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $r5 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $z2 = staticinvoke <org.springframework.util.ObjectUtils: boolean nullSafeEquals(java.lang.Object,java.lang.Object)>($r6, $r5);

        if $z2 == 0 goto label3;

        return 1;

     label3:
        return 0;
    }

    public int hashCode()
    {
        org.springframework.aop.support.ComposablePointcut r0;
        org.springframework.aop.ClassFilter $r1, $r4;
        int $i0, $i1, $i2, i3;
        org.springframework.aop.MethodMatcher $r2, $r3;

        r0 := @this: org.springframework.aop.support.ComposablePointcut;

        i3 = 17;

        $r1 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        if $r1 == null goto label1;

        $r4 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $i2 = virtualinvoke $r4.<java.lang.Object: int hashCode()>();

        i3 = 629 + $i2;

     label1:
        $r2 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        if $r2 == null goto label2;

        $i0 = 37 * i3;

        $r3 = r0.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $i1 = virtualinvoke $r3.<java.lang.Object: int hashCode()>();

        i3 = $i0 + $i1;

     label2:
        return i3;
    }

    public java.lang.String toString()
    {
        org.springframework.aop.support.ComposablePointcut r1;
        org.springframework.aop.ClassFilter $r2;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7;
        java.lang.String $r8;
        org.springframework.aop.MethodMatcher $r5;

        r1 := @this: org.springframework.aop.support.ComposablePointcut;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ComposablePointcut: ClassFilter [");

        $r2 = r1.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.ClassFilter classFilter>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], MethodMatcher [");

        $r5 = r1.<org.springframework.aop.support.ComposablePointcut: org.springframework.aop.MethodMatcher methodMatcher>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public static void <clinit>()
    {
        <org.springframework.aop.support.ComposablePointcut: long serialVersionUID> = -2743223737633663832L;

        return;
    }
}
