public abstract class javax.servlet.http.HttpServlet extends javax.servlet.GenericServlet implements java.io.Serializable
{
    private static final java.lang.String METHOD_DELETE;
    private static final java.lang.String METHOD_HEAD;
    private static final java.lang.String METHOD_GET;
    private static final java.lang.String METHOD_OPTIONS;
    private static final java.lang.String METHOD_POST;
    private static final java.lang.String METHOD_PUT;
    private static final java.lang.String METHOD_TRACE;
    private static final java.lang.String HEADER_IFMODSINCE;
    private static final java.lang.String HEADER_LASTMOD;
    private static final java.lang.String LSTRING_FILE;
    private static java.util.ResourceBundle lStrings;

    public void <init>()
    {
        javax.servlet.http.HttpServlet r0;

        r0 := @this: javax.servlet.http.HttpServlet;

        specialinvoke r0.<javax.servlet.GenericServlet: void <init>()>();

        return;
    }

    protected void doGet(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r0;
        java.util.ResourceBundle $r2;
        javax.servlet.http.HttpServlet r5;
        javax.servlet.http.HttpServletResponse r4;
        java.lang.String $r1, $r3;
        boolean $z0;

        r5 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $r2 = <javax.servlet.http.HttpServlet: java.util.ResourceBundle lStrings>;

        $r3 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("http.method_get_not_supported");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("1.1");

        if $z0 == 0 goto label1;

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(405, $r3);

        goto label2;

     label1:
        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r3);

     label2:
        return;
    }

    protected long getLastModified(javax.servlet.http.HttpServletRequest)
    {
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServlet r0;

        r0 := @this: javax.servlet.http.HttpServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        return -1L;
    }

    protected void doHead(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.NoBodyResponse $r0;
        javax.servlet.http.HttpServletRequest r3;
        javax.servlet.http.HttpServlet r2;
        javax.servlet.http.HttpServletResponse r1;

        r2 := @this: javax.servlet.http.HttpServlet;

        r3 := @parameter0: javax.servlet.http.HttpServletRequest;

        r1 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = new javax.servlet.http.NoBodyResponse;

        specialinvoke $r0.<javax.servlet.http.NoBodyResponse: void <init>(javax.servlet.http.HttpServletResponse)>(r1);

        virtualinvoke r2.<javax.servlet.http.HttpServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r3, $r0);

        virtualinvoke $r0.<javax.servlet.http.NoBodyResponse: void setContentLength()>();

        return;
    }

    protected void doPost(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r0;
        java.util.ResourceBundle $r2;
        javax.servlet.http.HttpServlet r5;
        javax.servlet.http.HttpServletResponse r4;
        java.lang.String $r1, $r3;
        boolean $z0;

        r5 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $r2 = <javax.servlet.http.HttpServlet: java.util.ResourceBundle lStrings>;

        $r3 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("http.method_post_not_supported");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("1.1");

        if $z0 == 0 goto label1;

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(405, $r3);

        goto label2;

     label1:
        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r3);

     label2:
        return;
    }

    protected void doPut(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r0;
        java.util.ResourceBundle $r2;
        javax.servlet.http.HttpServlet r5;
        javax.servlet.http.HttpServletResponse r4;
        java.lang.String $r1, $r3;
        boolean $z0;

        r5 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $r2 = <javax.servlet.http.HttpServlet: java.util.ResourceBundle lStrings>;

        $r3 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("http.method_put_not_supported");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("1.1");

        if $z0 == 0 goto label1;

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(405, $r3);

        goto label2;

     label1:
        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r3);

     label2:
        return;
    }

    protected void doDelete(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.http.HttpServletRequest r0;
        java.util.ResourceBundle $r2;
        javax.servlet.http.HttpServlet r5;
        javax.servlet.http.HttpServletResponse r4;
        java.lang.String $r1, $r3;
        boolean $z0;

        r5 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r4 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $r2 = <javax.servlet.http.HttpServlet: java.util.ResourceBundle lStrings>;

        $r3 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("http.method_delete_not_supported");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean endsWith(java.lang.String)>("1.1");

        if $z0 == 0 goto label1;

        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(405, $r3);

        goto label2;

     label1:
        interfaceinvoke r4.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(400, $r3);

     label2:
        return;
    }

    private java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)
    {
        javax.servlet.http.HttpServlet r1;
        java.lang.reflect.Method[] $r3, $r4, r5, r6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.Class r0, $r2;
        boolean $z0;

        r1 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: java.lang.Class;

        $z0 = virtualinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljavax/servlet/http/HttpServlet;");

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.Class getSuperclass()>();

        $r3 = specialinvoke r1.<javax.servlet.http.HttpServlet: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>($r2);

        $r4 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();

        r6 = $r4;

        if $r3 == null goto label2;

        $i0 = lengthof $r3;

        if $i0 <= 0 goto label2;

        $i2 = lengthof $r3;

        $i1 = lengthof $r4;

        $i3 = $i2 + $i1;

        r5 = newarray (java.lang.reflect.Method)[$i3];

        $i4 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r5, 0, $i4);

        $i6 = lengthof $r3;

        $i5 = lengthof $r4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r5, $i6, $i5);

        r6 = r5;

     label2:
        return r6;
    }

    protected void doOptions(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.reflect.Method[] $r2;
        java.lang.reflect.Method r22;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7, z8;
        javax.servlet.http.HttpServlet r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;
        javax.servlet.http.HttpServletRequest r27;
        int $i0, i1;
        java.lang.String $r23, $r24, $r25, $r26, r28, r29, r30;
        javax.servlet.http.HttpServletResponse r3;
        java.lang.Class $r1;

        r0 := @this: javax.servlet.http.HttpServlet;

        r27 := @parameter0: javax.servlet.http.HttpServletRequest;

        r3 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = specialinvoke r0.<javax.servlet.http.HttpServlet: java.lang.reflect.Method[] getAllDeclaredMethods(java.lang.Class)>($r1);

        z4 = 0;

        z5 = 0;

        z6 = 0;

        z7 = 0;

        z8 = 0;

        i1 = 0;

     label01:
        $i0 = lengthof $r2;

        if i1 >= $i0 goto label06;

        r22 = $r2[i1];

        $r23 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>("doGet");

        if $z0 == 0 goto label02;

        z4 = 1;

        z5 = 1;

     label02:
        $r24 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.String getName()>();

        $z1 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>("doPost");

        if $z1 == 0 goto label03;

        z6 = 1;

     label03:
        $r25 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.String getName()>();

        $z2 = virtualinvoke $r25.<java.lang.String: boolean equals(java.lang.Object)>("doPut");

        if $z2 == 0 goto label04;

        z7 = 1;

     label04:
        $r26 = virtualinvoke r22.<java.lang.reflect.Method: java.lang.String getName()>();

        $z3 = virtualinvoke $r26.<java.lang.String: boolean equals(java.lang.Object)>("doDelete");

        if $z3 == 0 goto label05;

        z8 = 1;

     label05:
        i1 = i1 + 1;

        goto label01;

     label06:
        r28 = null;

        r30 = null;

        r29 = null;

        if z4 == 0 goto label07;

        r28 = "GET";

        r30 = "GET";

        r29 = "GET";

     label07:
        if z5 == 0 goto label09;

        if r29 != null goto label08;

        r28 = "HEAD";

        goto label09;

     label08:
        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r30);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", HEAD");

        r28 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

     label09:
        if z6 == 0 goto label11;

        if r28 != null goto label10;

        r28 = "POST";

        goto label11;

     label10:
        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", POST");

        r28 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

     label11:
        if z7 == 0 goto label13;

        if r28 != null goto label12;

        r28 = "PUT";

        goto label13;

     label12:
        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", PUT");

        r28 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

     label13:
        if z8 == 0 goto label15;

        if r28 != null goto label14;

        r28 = "DELETE";

        goto label15;

     label14:
        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", DELETE");

        r28 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label15:
        if 1 == 0 goto label17;

        if r28 != null goto label16;

        r28 = "TRACE";

        goto label17;

     label16:
        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", TRACE");

        r28 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

     label17:
        if 1 == 0 goto label19;

        if r28 != null goto label18;

        r28 = "OPTIONS";

        goto label19;

     label18:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r28);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", OPTIONS");

        r28 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label19:
        interfaceinvoke r3.<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>("Allow", r28);

        return;
    }

    protected void doTrace(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.util.Enumeration $r7;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.ServletOutputStream $r9;
        int $i0;
        java.lang.String $r2, $r5, $r10, $r15, r17;
        boolean $z0;
        javax.servlet.http.HttpServlet r16;
        javax.servlet.http.HttpServletResponse r8;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r12, $r13, $r14;
        java.lang.Object $r11;

        r16 := @this: javax.servlet.http.HttpServlet;

        r1 := @parameter0: javax.servlet.http.HttpServletRequest;

        r8 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("TRACE ");

        $r2 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getRequestURI()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getProtocol()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.util.Enumeration getHeaderNames()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r7.<java.util.Enumeration: java.lang.Object nextElement()>();

        r17 = (java.lang.String) $r11;

        $r12 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r15 = interfaceinvoke r1.<javax.servlet.http.HttpServletRequest: java.lang.String getHeader(java.lang.String)>(r17);

        virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        goto label1;

     label2:
        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\r\n");

        $i0 = virtualinvoke $r6.<java.lang.StringBuilder: int length()>();

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setContentType(java.lang.String)>("message/http");

        interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: void setContentLength(int)>($i0);

        $r9 = interfaceinvoke r8.<javax.servlet.http.HttpServletResponse: javax.servlet.ServletOutputStream getOutputStream()>();

        $r10 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<javax.servlet.ServletOutputStream: void print(java.lang.String)>($r10);

        return;
    }

    protected void service(javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        java.lang.Object[] r4;
        long $l0, $l1, $l3;
        javax.servlet.http.HttpServletRequest r0;
        java.util.ResourceBundle $r2;
        byte $b2, $b4;
        int $i5;
        java.lang.String $r1, $r3, $r5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.servlet.http.HttpServlet r7;
        javax.servlet.http.HttpServletResponse r6;

        r7 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletRequest;

        r6 := @parameter1: javax.servlet.http.HttpServletResponse;

        $r1 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: java.lang.String getMethod()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("GET");

        if $z0 == 0 goto label04;

        $l1 = virtualinvoke r7.<javax.servlet.http.HttpServlet: long getLastModified(javax.servlet.http.HttpServletRequest)>(r0);

        $b2 = $l1 cmp -1L;

        if $b2 != 0 goto label01;

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label03;

     label01:
        $l3 = interfaceinvoke r0.<javax.servlet.http.HttpServletRequest: long getDateHeader(java.lang.String)>("If-Modified-Since");

        $b4 = $l3 cmp $l1;

        $i5 = (int) $b4;

        if $i5 >= 0 goto label02;

        specialinvoke r7.<javax.servlet.http.HttpServlet: void maybeSetLastModified(javax.servlet.http.HttpServletResponse,long)>(r6, $l1);

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doGet(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label03;

     label02:
        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void setStatus(int)>(304);

     label03:
        goto label11;

     label04:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("HEAD");

        if $z1 == 0 goto label05;

        $l0 = virtualinvoke r7.<javax.servlet.http.HttpServlet: long getLastModified(javax.servlet.http.HttpServletRequest)>(r0);

        specialinvoke r7.<javax.servlet.http.HttpServlet: void maybeSetLastModified(javax.servlet.http.HttpServletResponse,long)>(r6, $l0);

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doHead(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label11;

     label05:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("POST");

        if $z2 == 0 goto label06;

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doPost(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label11;

     label06:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("PUT");

        if $z3 == 0 goto label07;

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doPut(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label11;

     label07:
        $z4 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("DELETE");

        if $z4 == 0 goto label08;

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doDelete(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label11;

     label08:
        $z5 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("OPTIONS");

        if $z5 == 0 goto label09;

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doOptions(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label11;

     label09:
        $z6 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("TRACE");

        if $z6 == 0 goto label10;

        virtualinvoke r7.<javax.servlet.http.HttpServlet: void doTrace(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r0, r6);

        goto label11;

     label10:
        $r2 = <javax.servlet.http.HttpServlet: java.util.ResourceBundle lStrings>;

        $r3 = virtualinvoke $r2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>("http.method_not_implemented");

        r4 = newarray (java.lang.Object)[1];

        r4[0] = $r1;

        $r5 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>($r3, r4);

        interfaceinvoke r6.<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>(501, $r5);

     label11:
        return;
    }

    private void maybeSetLastModified(javax.servlet.http.HttpServletResponse, long)
    {
        byte $b1;
        javax.servlet.http.HttpServlet r1;
        javax.servlet.http.HttpServletResponse r0;
        int $i2;
        long l0;
        boolean $z0;

        r1 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.http.HttpServletResponse;

        l0 := @parameter1: long;

        $z0 = interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: boolean containsHeader(java.lang.String)>("Last-Modified");

        if $z0 == 0 goto label1;

        return;

     label1:
        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label2;

        interfaceinvoke r0.<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>("Last-Modified", l0);

     label2:
        return;
    }

    public void service(javax.servlet.ServletRequest, javax.servlet.ServletResponse) throws javax.servlet.ServletException, java.io.IOException
    {
        javax.servlet.ServletRequest r0;
        javax.servlet.http.HttpServletRequest r1;
        javax.servlet.http.HttpServlet r4;
        javax.servlet.ServletResponse r2;
        javax.servlet.ServletException $r6;
        javax.servlet.http.HttpServletResponse r3;
        java.lang.ClassCastException $r5;

        r4 := @this: javax.servlet.http.HttpServlet;

        r0 := @parameter0: javax.servlet.ServletRequest;

        r2 := @parameter1: javax.servlet.ServletResponse;

     label1:
        r1 = (javax.servlet.http.HttpServletRequest) r0;

        r3 = (javax.servlet.http.HttpServletResponse) r2;

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new javax.servlet.ServletException;

        specialinvoke $r6.<javax.servlet.ServletException: void <init>(java.lang.String)>("non-HTTP request or response");

        throw $r6;

     label4:
        virtualinvoke r4.<javax.servlet.http.HttpServlet: void service(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>(r1, r3);

        return;

        catch java.lang.ClassCastException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.util.ResourceBundle $r0;

        <javax.servlet.http.HttpServlet: java.lang.String LSTRING_FILE> = "javax.servlet.http.LocalStrings";

        <javax.servlet.http.HttpServlet: java.lang.String HEADER_LASTMOD> = "Last-Modified";

        <javax.servlet.http.HttpServlet: java.lang.String HEADER_IFMODSINCE> = "If-Modified-Since";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_TRACE> = "TRACE";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_PUT> = "PUT";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_POST> = "POST";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_OPTIONS> = "OPTIONS";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_GET> = "GET";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_HEAD> = "HEAD";

        <javax.servlet.http.HttpServlet: java.lang.String METHOD_DELETE> = "DELETE";

        $r0 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("javax.servlet.http.LocalStrings");

        <javax.servlet.http.HttpServlet: java.util.ResourceBundle lStrings> = $r0;

        return;
    }
}
