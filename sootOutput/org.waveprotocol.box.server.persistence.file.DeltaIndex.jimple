public class org.waveprotocol.box.server.persistence.file.DeltaIndex extends java.lang.Object
{
    public static final int NO_RECORD_FOR_VERSION;
    private static final int RECORD_LENGTH;
    private final java.io.File fileRef;
    private java.io.RandomAccessFile file;

    public void <init>(java.io.File)
    {
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        java.io.File r1;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        r1 := @parameter0: java.io.File;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.File fileRef> = r1;

        return;
    }

    public void openForCollection(org.waveprotocol.box.server.persistence.file.FileDeltaCollection) throws java.io.IOException
    {
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection r2;
        java.io.File $r1, $r3;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        r2 := @parameter0: org.waveprotocol.box.server.persistence.file.FileDeltaCollection;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.File fileRef>;

        $z0 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r3 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.File fileRef>;

        virtualinvoke $r3.<java.io.File: boolean mkdirs()>();

        virtualinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: void rebuildIndexFromDeltas(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>(r2);

        goto label2;

     label1:
        virtualinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: void rebuildIndexFromDeltas(org.waveprotocol.box.server.persistence.file.FileDeltaCollection)>(r2);

     label2:
        return;
    }

    private void checkOpen()
    {
        java.io.RandomAccessFile $r1;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z0, "Index file not open");

        return;
    }

    public void rebuildIndexFromDeltas(org.waveprotocol.box.server.persistence.file.FileDeltaCollection) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1, $r4, $r21;
        long $l0, $l2;
        java.lang.Integer $r17;
        java.lang.Iterable $r6;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        java.lang.Long $r13, $r19;
        int $i1;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        org.waveprotocol.wave.model.util.Pair r9, $r11, $r15;
        java.io.File $r2, $r3, $r20;
        org.waveprotocol.box.server.persistence.file.FileDeltaCollection r5;
        java.lang.Object $r8, $r10, $r12, $r14, $r16, $r18;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        r5 := @parameter0: org.waveprotocol.box.server.persistence.file.FileDeltaCollection;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        if $r1 == null goto label1;

        $r21 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        virtualinvoke $r21.<java.io.RandomAccessFile: void close()>();

     label1:
        $r2 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.File fileRef>;

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label2;

        $r20 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.File fileRef>;

        virtualinvoke $r20.<java.io.File: boolean delete()>();

     label2:
        $r3 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.File fileRef>;

        $r4 = staticinvoke <org.waveprotocol.box.server.persistence.file.FileUtils: java.io.RandomAccessFile getOrCreateFile(java.io.File)>($r3);

        r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file> = $r4;

        $r6 = virtualinvoke r5.<org.waveprotocol.box.server.persistence.file.FileDeltaCollection: java.lang.Iterable getOffsetsIterator()>();

        $r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.waveprotocol.wave.model.util.Pair) $r8;

        $r10 = r9.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        $r11 = (org.waveprotocol.wave.model.util.Pair) $r10;

        $r12 = $r11.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        $r13 = (java.lang.Long) $r12;

        $l0 = virtualinvoke $r13.<java.lang.Long: long longValue()>();

        $r14 = r9.<org.waveprotocol.wave.model.util.Pair: java.lang.Object first>;

        $r15 = (org.waveprotocol.wave.model.util.Pair) $r14;

        $r16 = $r15.<org.waveprotocol.wave.model.util.Pair: java.lang.Object second>;

        $r17 = (java.lang.Integer) $r16;

        $i1 = virtualinvoke $r17.<java.lang.Integer: int intValue()>();

        $r18 = r9.<org.waveprotocol.wave.model.util.Pair: java.lang.Object second>;

        $r19 = (java.lang.Long) $r18;

        $l2 = virtualinvoke $r19.<java.lang.Long: long longValue()>();

        virtualinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: void addDelta(long,int,long)>($l0, $i1, $l2);

        goto label3;

     label4:
        return;
    }

    public long getOffsetForVersion(long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1;
        long l0, $l1, $l3;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        byte $b2;
        int $i4;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        l0 := @parameter0: long;

        $z0 = specialinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: boolean seekToPosition(long)>(l0);

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l1 = virtualinvoke $r1.<java.io.RandomAccessFile: long readLong()>();

        $b2 = $l1 cmp 0L;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label2;

        $l3 = -1L;

        goto label3;

     label2:
        $l3 = $l1;

     label3:
        return $l3;
    }

    public long getOffsetForEndVersion(long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1, $r2;
        long l0, $l1, $l2, $l3, $l6;
        java.io.EOFException $r3;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        byte $b4, $b5;
        int $i7, $i8;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        l0 := @parameter0: long;

        $l1 = l0 - 1L;

        $z0 = specialinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: boolean seekToPosition(long)>($l1);

        if $z0 != 0 goto label1;

        return -1L;

     label1:
        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l2 = virtualinvoke $r1.<java.io.RandomAccessFile: long readLong()>();

     label2:
        $r2 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l3 = virtualinvoke $r2.<java.io.RandomAccessFile: long readLong()>();

        $b4 = $l3 cmp 0L;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label4;

     label3:
        return -1L;

     label4:
        goto label6;

     label5:
        $r3 := @caughtexception;

     label6:
        $b5 = $l2 cmp 0L;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label7;

        $l6 = $l2 ^ -1L;

        goto label8;

     label7:
        $l6 = $l2;

     label8:
        return $l6;

        catch java.io.EOFException from label2 to label3 with label5;
    }

    private boolean seekToPosition(long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1, $r2;
        long l0, l2, $l3;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        byte $b1, $b4;
        int $i5, $i6;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        l0 := @parameter0: long;

        $b1 = l0 cmp 0L;

        $i5 = (int) $b1;

        if $i5 >= 0 goto label1;

        return 0;

     label1:
        specialinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: void checkOpen()>();

        l2 = l0 * 8L;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l3 = virtualinvoke $r1.<java.io.RandomAccessFile: long length()>();

        $b4 = l2 cmp $l3;

        $i6 = (int) $b4;

        if $i6 < 0 goto label2;

        return 0;

     label2:
        $r2 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void seek(long)>(l2);

        return 1;
    }

    public void addDelta(long, int, long) throws java.io.IOException
    {
        java.io.RandomAccessFile $r1, $r5, $r6, $r7;
        java.lang.Object[] $r2;
        long l0, l1, $l2, l4, $l6;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        byte $b3;
        java.lang.Long $r3, $r4;
        int i5, i7;
        boolean $z0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        l0 := @parameter0: long;

        i5 := @parameter1: int;

        l4 := @parameter2: long;

        specialinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: void checkOpen()>();

        l1 = l0 * 8L;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l2 = virtualinvoke $r1.<java.io.RandomAccessFile: long length()>();

        $b3 = l1 cmp $l2;

        if $b3 != 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        $r2 = newarray (java.lang.Object)[2];

        $r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1);

        $r2[0] = $r3;

        $r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>($l2);

        $r2[1] = $r4;

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.String,java.lang.Object[])>($z0, "position = %d, file=%d", $r2);

        $r5 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        virtualinvoke $r5.<java.io.RandomAccessFile: void seek(long)>(l1);

        $r6 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        virtualinvoke $r6.<java.io.RandomAccessFile: void writeLong(long)>(l4);

        i7 = 1;

     label3:
        if i7 >= i5 goto label4;

        $r7 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l6 = l4 ^ -1L;

        virtualinvoke $r7.<java.io.RandomAccessFile: void writeLong(long)>($l6);

        i7 = i7 + 1;

        goto label3;

     label4:
        return;
    }

    public long length()
    {
        java.io.RandomAccessFile $r1;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;
        long $l0, $l1;
        java.io.IOException $r2;
        java.lang.RuntimeException $r3;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        specialinvoke r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: void checkOpen()>();

     label1:
        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        $l0 = virtualinvoke $r1.<java.io.RandomAccessFile: long length()>();

     label2:
        goto label4;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.RuntimeException;

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("IO error reading index file length", $r2);

        throw $r3;

     label4:
        $l1 = $l0 / 8L;

        return $l1;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void close() throws java.io.IOException
    {
        java.io.RandomAccessFile $r1, $r2;
        org.waveprotocol.box.server.persistence.file.DeltaIndex r0;

        r0 := @this: org.waveprotocol.box.server.persistence.file.DeltaIndex;

        $r1 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        if $r1 == null goto label1;

        $r2 = r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file>;

        virtualinvoke $r2.<java.io.RandomAccessFile: void close()>();

        r0.<org.waveprotocol.box.server.persistence.file.DeltaIndex: java.io.RandomAccessFile file> = null;

     label1:
        return;
    }

    public static void <clinit>()
    {
        <org.waveprotocol.box.server.persistence.file.DeltaIndex: int RECORD_LENGTH> = 8;

        <org.waveprotocol.box.server.persistence.file.DeltaIndex: int NO_RECORD_FOR_VERSION> = -1;

        return;
    }
}
