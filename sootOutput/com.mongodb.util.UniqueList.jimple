public class com.mongodb.util.UniqueList extends java.util.ArrayList
{

    public void <init>()
    {
        com.mongodb.util.UniqueList r0;

        r0 := @this: com.mongodb.util.UniqueList;

        specialinvoke r0.<java.util.ArrayList: void <init>()>();

        return;
    }

    public boolean add(java.lang.Object)
    {
        com.mongodb.util.UniqueList r0;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: com.mongodb.util.UniqueList;

        r1 := @parameter0: java.lang.Object;

        $z0 = virtualinvoke r0.<com.mongodb.util.UniqueList: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $z1 = specialinvoke r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

        return $z1;
    }

    public boolean addAll(java.util.Collection)
    {
        java.util.Iterator $r1;
        java.util.Collection r0;
        com.mongodb.util.UniqueList r3;
        java.lang.Object $r2;
        boolean $z0, $z1, z2, $z3;

        r3 := @this: com.mongodb.util.UniqueList;

        r0 := @parameter0: java.util.Collection;

        z2 = 0;

        $r1 = interfaceinvoke r0.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        if z2 != 0 goto label2;

        $z1 = virtualinvoke r3.<com.mongodb.util.UniqueList: boolean add(java.lang.Object)>($r2);

        if $z1 == 0 goto label3;

     label2:
        $z3 = 1;

        goto label4;

     label3:
        $z3 = 0;

     label4:
        z2 = $z3;

        goto label1;

     label5:
        return z2;
    }
}
