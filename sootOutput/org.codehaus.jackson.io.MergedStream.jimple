public final class org.codehaus.jackson.io.MergedStream extends java.io.InputStream
{
    protected final org.codehaus.jackson.io.IOContext _context;
    final java.io.InputStream _in;
    byte[] _buffer;
    int _ptr;
    final int _end;

    public void <init>(org.codehaus.jackson.io.IOContext, java.io.InputStream, byte[], int, int)
    {
        org.codehaus.jackson.io.IOContext r1;
        byte[] r3;
        int i0, i1;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream r2;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        r1 := @parameter0: org.codehaus.jackson.io.IOContext;

        r2 := @parameter1: java.io.InputStream;

        r3 := @parameter2: byte[];

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<org.codehaus.jackson.io.MergedStream: org.codehaus.jackson.io.IOContext _context> = r1;

        r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in> = r2;

        r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer> = r3;

        r0.<org.codehaus.jackson.io.MergedStream: int _ptr> = i0;

        r0.<org.codehaus.jackson.io.MergedStream: int _end> = i1;

        return;
    }

    public int available() throws java.io.IOException
    {
        byte[] $r1;
        int $i0, $i1, $i2, $i3;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 == null goto label1;

        $i2 = r0.<org.codehaus.jackson.io.MergedStream: int _end>;

        $i1 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        $i3 = $i2 - $i1;

        return $i3;

     label1:
        $r2 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int available()>();

        return $i0;
    }

    public void close() throws java.io.IOException
    {
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r1;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        specialinvoke r0.<org.codehaus.jackson.io.MergedStream: void freeMergedBuffer()>();

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        return;
    }

    public void mark(int)
    {
        byte[] $r1;
        int i0;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        i0 := @parameter0: int;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        virtualinvoke $r2.<java.io.InputStream: void mark(int)>(i0);

     label1:
        return;
    }

    public boolean markSupported()
    {
        byte[] $r1;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r2;
        boolean $z0, $z1;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        $z0 = virtualinvoke $r2.<java.io.InputStream: boolean markSupported()>();

        if $z0 == 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public int read() throws java.io.IOException
    {
        byte[] $r1, $r3;
        org.codehaus.jackson.io.MergedStream r0;
        short s4, $s7;
        byte $b3;
        int $i0, $i1, $i2, $i5, $i6, $i8;
        java.io.InputStream $r2;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 == null goto label2;

        $r3 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        $i1 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        $i2 = $i1 + 1;

        r0.<org.codehaus.jackson.io.MergedStream: int _ptr> = $i2;

        $b3 = $r3[$i1];

        $s7 = (short) $b3;

        s4 = $s7 & 255;

        $i6 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        $i5 = r0.<org.codehaus.jackson.io.MergedStream: int _end>;

        if $i6 < $i5 goto label1;

        specialinvoke r0.<org.codehaus.jackson.io.MergedStream: void freeMergedBuffer()>();

     label1:
        $i8 = (int) s4;

        return $i8;

     label2:
        $r2 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        $i0 = virtualinvoke $r2.<java.io.InputStream: int read()>();

        return $i0;
    }

    public int read(byte[]) throws java.io.IOException
    {
        byte[] r1;
        int $i0, $i1;
        org.codehaus.jackson.io.MergedStream r0;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        $i1 = virtualinvoke r0.<org.codehaus.jackson.io.MergedStream: int read(byte[],int,int)>(r1, 0, $i0);

        return $i1;
    }

    public int read(byte[], int, int) throws java.io.IOException
    {
        byte[] $r1, r2, $r4;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, i10;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r3;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        r2 := @parameter0: byte[];

        i0 := @parameter1: int;

        i10 := @parameter2: int;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 == null goto label3;

        $i3 = r0.<org.codehaus.jackson.io.MergedStream: int _end>;

        $i2 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        i4 = $i3 - $i2;

        if i10 <= i4 goto label1;

        i10 = i4;

     label1:
        $r4 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        $i5 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, $i5, r2, i0, i10);

        $i6 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        $i7 = $i6 + i10;

        r0.<org.codehaus.jackson.io.MergedStream: int _ptr> = $i7;

        $i9 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        $i8 = r0.<org.codehaus.jackson.io.MergedStream: int _end>;

        if $i9 < $i8 goto label2;

        specialinvoke r0.<org.codehaus.jackson.io.MergedStream: void freeMergedBuffer()>();

     label2:
        return i10;

     label3:
        $r3 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        $i1 = virtualinvoke $r3.<java.io.InputStream: int read(byte[],int,int)>(r2, i0, i10);

        return $i1;
    }

    public void reset() throws java.io.IOException
    {
        byte[] $r1;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        virtualinvoke $r2.<java.io.InputStream: void reset()>();

     label1:
        return;
    }

    public long skip(long) throws java.io.IOException
    {
        byte[] $r1;
        long $l1, $l5, $l7, $l8, l12, l13;
        byte $b0, $b6;
        int $i2, $i3, i4, $i9, $i10, $i11, $i14, $i15;
        org.codehaus.jackson.io.MergedStream r0;
        java.io.InputStream $r2;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        l12 := @parameter0: long;

        l13 = 0L;

        $r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if $r1 == null goto label2;

        $i3 = r0.<org.codehaus.jackson.io.MergedStream: int _end>;

        $i2 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        i4 = $i3 - $i2;

        $l5 = (long) i4;

        $b6 = $l5 cmp l12;

        $i14 = (int) $b6;

        if $i14 <= 0 goto label1;

        $i10 = r0.<org.codehaus.jackson.io.MergedStream: int _ptr>;

        $i9 = (int) l12;

        $i11 = $i10 + $i9;

        r0.<org.codehaus.jackson.io.MergedStream: int _ptr> = $i11;

        return l12;

     label1:
        specialinvoke r0.<org.codehaus.jackson.io.MergedStream: void freeMergedBuffer()>();

        $l7 = (long) i4;

        l13 = 0L + $l7;

        $l8 = (long) i4;

        l12 = l12 - $l8;

     label2:
        $b0 = l12 cmp 0L;

        $i15 = (int) $b0;

        if $i15 <= 0 goto label3;

        $r2 = r0.<org.codehaus.jackson.io.MergedStream: java.io.InputStream _in>;

        $l1 = virtualinvoke $r2.<java.io.InputStream: long skip(long)>(l12);

        l13 = l13 + $l1;

     label3:
        return l13;
    }

    private void freeMergedBuffer()
    {
        byte[] r1;
        org.codehaus.jackson.io.IOContext $r2;
        org.codehaus.jackson.io.MergedStream r0;

        r0 := @this: org.codehaus.jackson.io.MergedStream;

        r1 = r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer>;

        if r1 == null goto label1;

        r0.<org.codehaus.jackson.io.MergedStream: byte[] _buffer> = null;

        $r2 = r0.<org.codehaus.jackson.io.MergedStream: org.codehaus.jackson.io.IOContext _context>;

        virtualinvoke $r2.<org.codehaus.jackson.io.IOContext: void releaseReadIOBuffer(byte[])>(r1);

     label1:
        return;
    }
}
