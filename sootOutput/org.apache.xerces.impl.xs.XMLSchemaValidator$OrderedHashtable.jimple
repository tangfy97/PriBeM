final class org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable extends java.lang.Object implements java.lang.Cloneable
{
    private int fSize;
    private org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries;

    void <init>()
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries> = null;

        return;
    }

    public int size()
    {
        int $i0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        $i0 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        return $i0;
    }

    public void put(org.apache.xerces.impl.xs.identity.Field, org.apache.xerces.impl.xs.identity.IDValue)
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r4, $r6;
        org.apache.xerces.impl.xs.identity.Field r1;
        int $i0, $i1, $i2, $i3, i4, $i6;
        org.apache.xerces.impl.xs.identity.IDValue r3;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r2, $r5;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        r1 := @parameter0: org.apache.xerces.impl.xs.identity.Field;

        r3 := @parameter1: org.apache.xerces.impl.xs.identity.IDValue;

        $i0 = virtualinvoke r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int indexOf(org.apache.xerces.impl.xs.identity.Field)>(r1);

        i4 = $i0;

        $i6 = (int) -1;

        if $i0 != $i6 goto label1;

        $i1 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        specialinvoke r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: void ensureCapacity(int)>($i1);

        $i2 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        $i3 = $i2 + 1;

        r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize> = $i3;

        i4 = $i2;

        $r5 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r6 = $r5[$i2];

        $r6.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.Field key> = r1;

     label1:
        $r2 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r4 = $r2[i4];

        $r4.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.IDValue value> = r3;

        return;
    }

    public org.apache.xerces.impl.xs.identity.IDValue get(org.apache.xerces.impl.xs.identity.Field)
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        int $i0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r3;
        org.apache.xerces.impl.xs.identity.Field r1;
        org.apache.xerces.impl.xs.identity.IDValue $r4;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r2;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        r1 := @parameter0: org.apache.xerces.impl.xs.identity.Field;

        $r2 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $i0 = virtualinvoke r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int indexOf(org.apache.xerces.impl.xs.identity.Field)>(r1);

        $r3 = $r2[$i0];

        $r4 = $r3.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.IDValue value>;

        return $r4;
    }

    public int indexOf(org.apache.xerces.impl.xs.identity.Field)
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r2;
        org.apache.xerces.impl.xs.identity.Field r3, $r4;
        int $i0, i1, $i3;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r1;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        r3 := @parameter0: org.apache.xerces.impl.xs.identity.Field;

        i1 = 0;

        goto label3;

     label1:
        $r1 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r2 = $r1[i1];

        $r4 = $r2.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.Field key>;

        if $r4 != r3 goto label2;

        return i1;

     label2:
        i1 = i1 + 1;

     label3:
        $i0 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        if i1 < $i0 goto label1;

        $i3 = (int) -1;

        return $i3;
    }

    public org.apache.xerces.impl.xs.identity.Field keyAt(int)
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        int i0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r2;
        org.apache.xerces.impl.xs.identity.Field $r3;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r1;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r2 = $r1[i0];

        $r3 = $r2.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.Field key>;

        return $r3;
    }

    public org.apache.xerces.impl.xs.identity.IDValue valueAt(int)
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        int i0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r2;
        org.apache.xerces.impl.xs.identity.IDValue $r3;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r1;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r2 = $r1[i0];

        $r3 = $r2.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.IDValue value>;

        return $r3;
    }

    public void clear()
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize> = 0;

        return;
    }

    private void ensureCapacity(int)
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        int i0, $i1, i2, i3, i4, $i6, $i8;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r9;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r1, $r2, $r4, $r5, $r6, $r7, r8;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        i0 := @parameter0: int;

        $i6 = (int) -1;

        i2 = $i6;

        $i8 = (int) -1;

        i3 = $i8;

        $r1 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        if $r1 != null goto label1;

        i2 = 0;

        i3 = 2;

        $r7 = newarray (org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry)[2];

        r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries> = $r7;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $i1 = lengthof $r2;

        if $i1 > i0 goto label2;

        $r5 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        i2 = lengthof $r5;

        i3 = 2 * i2;

        r8 = newarray (org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry)[i3];

        $r6 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, r8, 0, i2);

        r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries> = r8;

     label2:
        i4 = i2;

        goto label4;

     label3:
        $r4 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r9 = new org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry;

        specialinvoke $r9.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: void <init>()>();

        $r4[i4] = $r9;

        i4 = i4 + 1;

     label4:
        if i4 < i3 goto label3;

        return;
    }

    public java.lang.Object clone()
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable $r0, r1;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r3, $r5;
        org.apache.xerces.impl.xs.identity.Field $r7;
        int $i0, i1;
        org.apache.xerces.impl.xs.identity.IDValue $r6;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r2, $r4;

        r1 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        $r0 = new org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        specialinvoke $r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: void <init>()>();

        i1 = 0;

        goto label2;

     label1:
        $r2 = r1.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r3 = $r2[i1];

        $r7 = $r3.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.Field key>;

        $r4 = r1.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r5 = $r4[i1];

        $r6 = $r5.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.IDValue value>;

        virtualinvoke $r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: void put(org.apache.xerces.impl.xs.identity.Field,org.apache.xerces.impl.xs.identity.IDValue)>($r7, $r6);

        i1 = i1 + 1;

     label2:
        $i0 = r1.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        if i1 < $i0 goto label1;

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable r0;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry $r3, $r6;
        org.apache.xerces.impl.xs.identity.Field $r4;
        java.lang.StringBuffer $r1;
        int $i0, i1, $i2;
        org.apache.xerces.impl.xs.identity.IDValue $r7;
        org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] $r2, $r5;
        java.lang.String $r8;

        r0 := @this: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable;

        $i0 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        if $i0 != 0 goto label1;

        return "[]";

     label1:
        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        i1 = 0;

        goto label4;

     label2:
        if i1 <= 0 goto label3;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

     label3:
        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        $r2 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r3 = $r2[i1];

        $r4 = $r3.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.Field key>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r4);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(44);

        $r5 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry[] fEntries>;

        $r6 = $r5[i1];

        $r7 = $r6.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable$Entry: org.apache.xerces.impl.xs.identity.IDValue value>;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        i1 = i1 + 1;

     label4:
        $i2 = r0.<org.apache.xerces.impl.xs.XMLSchemaValidator$OrderedHashtable: int fSize>;

        if i1 < $i2 goto label2;

        virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        $r8 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r8;
    }
}
