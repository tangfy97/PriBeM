class nu.xom.TextWriterFactory extends java.lang.Object
{

    void <init>()
    {
        nu.xom.TextWriterFactory r0;

        r0 := @this: nu.xom.TextWriterFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static nu.xom.TextWriter getTextWriter(java.io.Writer, java.lang.String)
    {
        nu.xom.ISOGreekWriter $r13;
        nu.xom.Latin10Writer $r7;
        nu.xom.Latin2Writer $r18;
        nu.xom.ISOHebrewWriter $r12;
        nu.xom.ASCIIWriter $r6, $r21;
        nu.xom.Latin9Writer $r8;
        nu.xom.ISOThaiWriter $r24;
        java.util.Locale $r1;
        nu.xom.Latin1Writer $r19, $r25;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26, $z27, $z28, $z29, $z30, $z31;
        nu.xom.ISOCyrillicWriter $r15;
        nu.xom.UnicodeWriter $r3;
        nu.xom.Latin6Writer $r11;
        nu.xom.Latin3Writer $r17;
        nu.xom.GenericWriter $r5;
        java.io.Writer r4;
        java.io.UnsupportedEncodingException $r20;
        nu.xom.ISOArabicWriter $r14;
        nu.xom.Latin7Writer $r10;
        nu.xom.UCSWriter $r22;
        nu.xom.Latin4Writer $r16;
        java.lang.String r0, $r2;
        nu.xom.Latin8Writer $r9;
        nu.xom.Latin5Writer $r23;

        r4 := @parameter0: java.io.Writer;

        r0 := @parameter1: java.lang.String;

        $r1 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("UTF");

        if $z0 != 0 goto label01;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("UNICODE");

        if $z1 == 0 goto label02;

     label01:
        $r3 = new nu.xom.UnicodeWriter;

        specialinvoke $r3.<nu.xom.UnicodeWriter: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r3;

     label02:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("ISO-10646-UCS");

        if $z2 != 0 goto label03;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>("UCS");

        if $z3 != 0 goto label03;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("GB18030");

        if $z4 == 0 goto label04;

     label03:
        $r22 = new nu.xom.UCSWriter;

        specialinvoke $r22.<nu.xom.UCSWriter: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r22;

     label04:
        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-1");

        if $z5 == 0 goto label05;

        $r19 = new nu.xom.Latin1Writer;

        specialinvoke $r19.<nu.xom.Latin1Writer: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r19;

     label05:
        $z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-2");

        if $z6 == 0 goto label06;

        $r18 = new nu.xom.Latin2Writer;

        specialinvoke $r18.<nu.xom.Latin2Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r18;

     label06:
        $z7 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-3");

        if $z7 == 0 goto label07;

        $r17 = new nu.xom.Latin3Writer;

        specialinvoke $r17.<nu.xom.Latin3Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r17;

     label07:
        $z8 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-4");

        if $z8 == 0 goto label08;

        $r16 = new nu.xom.Latin4Writer;

        specialinvoke $r16.<nu.xom.Latin4Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r16;

     label08:
        $z9 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-5");

        if $z9 == 0 goto label09;

        $r15 = new nu.xom.ISOCyrillicWriter;

        specialinvoke $r15.<nu.xom.ISOCyrillicWriter: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r15;

     label09:
        $z10 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-6");

        if $z10 == 0 goto label10;

        $r14 = new nu.xom.ISOArabicWriter;

        specialinvoke $r14.<nu.xom.ISOArabicWriter: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r14;

     label10:
        $z11 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-7");

        if $z11 == 0 goto label11;

        $r13 = new nu.xom.ISOGreekWriter;

        specialinvoke $r13.<nu.xom.ISOGreekWriter: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r13;

     label11:
        $z12 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-8");

        if $z12 == 0 goto label12;

        $r12 = new nu.xom.ISOHebrewWriter;

        specialinvoke $r12.<nu.xom.ISOHebrewWriter: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r12;

     label12:
        $z13 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-9");

        if $z13 != 0 goto label13;

        $z14 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("EBCDIC-CP-TR");

        if $z14 != 0 goto label13;

        $z15 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CP1037");

        if $z15 == 0 goto label14;

     label13:
        $r23 = new nu.xom.Latin5Writer;

        specialinvoke $r23.<nu.xom.Latin5Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r23;

     label14:
        $z16 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-10");

        if $z16 == 0 goto label15;

        $r11 = new nu.xom.Latin6Writer;

        specialinvoke $r11.<nu.xom.Latin6Writer: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r11;

     label15:
        $z17 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-11");

        if $z17 != 0 goto label16;

        $z18 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("TIS-620");

        if $z18 != 0 goto label16;

        $z19 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("TIS620");

        if $z19 == 0 goto label17;

     label16:
        $r24 = new nu.xom.ISOThaiWriter;

        specialinvoke $r24.<nu.xom.ISOThaiWriter: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r24;

     label17:
        $z20 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-13");

        if $z20 == 0 goto label18;

        $r10 = new nu.xom.Latin7Writer;

        specialinvoke $r10.<nu.xom.Latin7Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r10;

     label18:
        $z21 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-14");

        if $z21 == 0 goto label19;

        $r9 = new nu.xom.Latin8Writer;

        specialinvoke $r9.<nu.xom.Latin8Writer: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r9;

     label19:
        $z22 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-15");

        if $z22 == 0 goto label20;

        $r8 = new nu.xom.Latin9Writer;

        specialinvoke $r8.<nu.xom.Latin9Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r8;

     label20:
        $z23 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("ISO-8859-16");

        if $z23 == 0 goto label21;

        $r7 = new nu.xom.Latin10Writer;

        specialinvoke $r7.<nu.xom.Latin10Writer: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r7;

     label21:
        $z24 = virtualinvoke $r2.<java.lang.String: boolean endsWith(java.lang.String)>("ASCII");

        if $z24 == 0 goto label22;

        $r6 = new nu.xom.ASCIIWriter;

        specialinvoke $r6.<nu.xom.ASCIIWriter: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r6;

     label22:
        $z25 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("IBM037");

        if $z25 != 0 goto label23;

        $z26 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CP037");

        if $z26 != 0 goto label23;

        $z27 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("EBCDIC-CP-US");

        if $z27 != 0 goto label23;

        $z28 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("EBCDIC-CP-CA");

        if $z28 != 0 goto label23;

        $z29 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("EBCDIC-CP-WA");

        if $z29 != 0 goto label23;

        $z30 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("EBCDIC-CP-NL");

        if $z30 != 0 goto label23;

        $z31 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("CSIBM037");

        if $z31 == 0 goto label24;

     label23:
        $r25 = new nu.xom.Latin1Writer;

        specialinvoke $r25.<nu.xom.Latin1Writer: void <init>(java.io.Writer,java.lang.String)>(r4, $r2);

        return $r25;

     label24:
        $r5 = new nu.xom.GenericWriter;

        specialinvoke $r5.<nu.xom.GenericWriter: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

     label25:
        return $r5;

     label26:
        $r20 := @caughtexception;

        $r21 = new nu.xom.ASCIIWriter;

        specialinvoke $r21.<nu.xom.ASCIIWriter: void <init>(java.io.Writer,java.lang.String)>(r4, r0);

        return $r21;

        catch java.io.UnsupportedEncodingException from label24 to label25 with label26;
    }
}
