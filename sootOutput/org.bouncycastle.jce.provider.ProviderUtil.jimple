public class org.bouncycastle.jce.provider.ProviderUtil extends java.lang.Object
{
    private static final long MAX_MEMORY;
    private static java.security.Permission BC_EC_LOCAL_PERMISSION;
    private static java.security.Permission BC_EC_PERMISSION;
    private static java.lang.ThreadLocal threadSpec;
    private static volatile org.bouncycastle.jce.spec.ECParameterSpec ecImplicitCaParams;

    public void <init>()
    {
        org.bouncycastle.jce.provider.ProviderUtil r0;

        r0 := @this: org.bouncycastle.jce.provider.ProviderUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void setParameter(java.lang.String, java.lang.Object)
    {
        java.lang.String r1;
        boolean $z0, $z1, $z2, $z3;
        java.lang.ThreadLocal $r7, $r8;
        java.lang.SecurityManager $r0;
        java.security.spec.ECParameterSpec $r4, $r9;
        java.security.Permission $r6, $r10;
        java.lang.Object r2;
        org.bouncycastle.jce.spec.ECParameterSpec $r3, $r5, r11;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("threadLocalEcImplicitlyCa");

        if $z0 == 0 goto label07;

        if $r0 == null goto label01;

        $r10 = <org.bouncycastle.jce.provider.ProviderUtil: java.security.Permission BC_EC_LOCAL_PERMISSION>;

        virtualinvoke $r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r10);

     label01:
        $z3 = r2 instanceof org.bouncycastle.jce.spec.ECParameterSpec;

        if $z3 != 0 goto label02;

        if r2 != null goto label03;

     label02:
        r11 = (org.bouncycastle.jce.spec.ECParameterSpec) r2;

        goto label04;

     label03:
        $r9 = (java.security.spec.ECParameterSpec) r2;

        r11 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r9, 0);

     label04:
        if r11 != null goto label05;

        $r8 = <org.bouncycastle.jce.provider.ProviderUtil: java.lang.ThreadLocal threadSpec>;

        virtualinvoke $r8.<java.lang.ThreadLocal: void remove()>();

        goto label06;

     label05:
        $r7 = <org.bouncycastle.jce.provider.ProviderUtil: java.lang.ThreadLocal threadSpec>;

        virtualinvoke $r7.<java.lang.ThreadLocal: void set(java.lang.Object)>(r11);

     label06:
        goto label11;

     label07:
        $z1 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("ecImplicitlyCa");

        if $z1 == 0 goto label11;

        if $r0 == null goto label08;

        $r6 = <org.bouncycastle.jce.provider.ProviderUtil: java.security.Permission BC_EC_PERMISSION>;

        virtualinvoke $r0.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>($r6);

     label08:
        $z2 = r2 instanceof org.bouncycastle.jce.spec.ECParameterSpec;

        if $z2 != 0 goto label09;

        if r2 != null goto label10;

     label09:
        $r3 = (org.bouncycastle.jce.spec.ECParameterSpec) r2;

        <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec ecImplicitCaParams> = $r3;

        goto label11;

     label10:
        $r4 = (java.security.spec.ECParameterSpec) r2;

        $r5 = staticinvoke <org.bouncycastle.jce.provider.asymmetric.ec.EC5Util: org.bouncycastle.jce.spec.ECParameterSpec convertSpec(java.security.spec.ECParameterSpec,boolean)>($r4, 0);

        <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec ecImplicitCaParams> = $r5;

     label11:
        return;
    }

    public static org.bouncycastle.jce.spec.ECParameterSpec getEcImplicitlyCa()
    {
        java.lang.ThreadLocal $r0;
        java.lang.Object $r1;
        org.bouncycastle.jce.spec.ECParameterSpec r2, $r3;

        $r0 = <org.bouncycastle.jce.provider.ProviderUtil: java.lang.ThreadLocal threadSpec>;

        $r1 = virtualinvoke $r0.<java.lang.ThreadLocal: java.lang.Object get()>();

        r2 = (org.bouncycastle.jce.spec.ECParameterSpec) $r1;

        if r2 == null goto label1;

        return r2;

     label1:
        $r3 = <org.bouncycastle.jce.provider.ProviderUtil: org.bouncycastle.jce.spec.ECParameterSpec ecImplicitCaParams>;

        return $r3;
    }

    static int getReadLimit(java.io.InputStream) throws java.io.IOException
    {
        long $l0, $l2;
        byte $b1;
        int $i3, $i4, $i5;
        java.io.InputStream r0;
        boolean $z0;

        r0 := @parameter0: java.io.InputStream;

        $z0 = r0 instanceof java.io.ByteArrayInputStream;

        if $z0 == 0 goto label1;

        $i4 = virtualinvoke r0.<java.io.InputStream: int available()>();

        return $i4;

     label1:
        $l0 = <org.bouncycastle.jce.provider.ProviderUtil: long MAX_MEMORY>;

        $b1 = $l0 cmp 2147483647L;

        $i5 = (int) $b1;

        if $i5 <= 0 goto label2;

        return 2147483647;

     label2:
        $l2 = <org.bouncycastle.jce.provider.ProviderUtil: long MAX_MEMORY>;

        $i3 = (int) $l2;

        return $i3;
    }

    static void <clinit>()
    {
        java.lang.ThreadLocal $r3;
        org.bouncycastle.jce.ProviderConfigurationPermission $r1, $r2;
        java.lang.Runtime $r0;
        long $l0;

        $r0 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();

        $l0 = virtualinvoke $r0.<java.lang.Runtime: long maxMemory()>();

        <org.bouncycastle.jce.provider.ProviderUtil: long MAX_MEMORY> = $l0;

        $r1 = new org.bouncycastle.jce.ProviderConfigurationPermission;

        specialinvoke $r1.<org.bouncycastle.jce.ProviderConfigurationPermission: void <init>(java.lang.String,java.lang.String)>("BC", "threadLocalEcImplicitlyCa");

        <org.bouncycastle.jce.provider.ProviderUtil: java.security.Permission BC_EC_LOCAL_PERMISSION> = $r1;

        $r2 = new org.bouncycastle.jce.ProviderConfigurationPermission;

        specialinvoke $r2.<org.bouncycastle.jce.ProviderConfigurationPermission: void <init>(java.lang.String,java.lang.String)>("BC", "ecImplicitlyCa");

        <org.bouncycastle.jce.provider.ProviderUtil: java.security.Permission BC_EC_PERMISSION> = $r2;

        $r3 = new java.lang.ThreadLocal;

        specialinvoke $r3.<java.lang.ThreadLocal: void <init>()>();

        <org.bouncycastle.jce.provider.ProviderUtil: java.lang.ThreadLocal threadSpec> = $r3;

        return;
    }
}
