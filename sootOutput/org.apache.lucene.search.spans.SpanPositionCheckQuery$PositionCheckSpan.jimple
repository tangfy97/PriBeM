public class org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan extends org.apache.lucene.search.spans.Spans
{
    private org.apache.lucene.search.spans.Spans spans;
    final org.apache.lucene.search.spans.SpanPositionCheckQuery this$0;

    public void <init>(org.apache.lucene.search.spans.SpanPositionCheckQuery, org.apache.lucene.index.AtomicReaderContext, org.apache.lucene.util.Bits, java.util.Map) throws java.io.IOException
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery r1;
        java.util.Map r4;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.SpanQuery $r5;
        org.apache.lucene.util.Bits r3;
        org.apache.lucene.index.AtomicReaderContext r2;
        org.apache.lucene.search.spans.Spans $r6;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        r1 := @parameter0: org.apache.lucene.search.spans.SpanPositionCheckQuery;

        r2 := @parameter1: org.apache.lucene.index.AtomicReaderContext;

        r3 := @parameter2: org.apache.lucene.util.Bits;

        r4 := @parameter3: java.util.Map;

        r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.SpanPositionCheckQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.spans.Spans: void <init>()>();

        $r5 = r1.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanQuery match>;

        $r6 = virtualinvoke $r5.<org.apache.lucene.search.spans.SpanQuery: org.apache.lucene.search.spans.Spans getSpans(org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.util.Bits,java.util.Map)>(r2, r3, r4);

        r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans> = $r6;

        return;
    }

    public boolean next() throws java.io.IOException
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean next()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: boolean doNext()>();

        return $z1;
    }

    public boolean skipTo(int) throws java.io.IOException
    {
        int i0;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean skipTo(int)>(i0);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $z1 = virtualinvoke r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: boolean doNext()>();

        return $z1;
    }

    protected boolean doNext() throws java.io.IOException
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery $r1;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus $r3;
        int[] $r2;
        int $i0, $i1, $i2, $i3;
        org.apache.lucene.search.spans.Spans $r4, $r5, $r6;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

     label1:
        $r2 = <org.apache.lucene.search.spans.SpanPositionCheckQuery$1: int[] $SwitchMap$org$apache$lucene$search$spans$SpanPositionCheckQuery$AcceptStatus>;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.SpanPositionCheckQuery this$0>;

        $r3 = virtualinvoke $r1.<org.apache.lucene.search.spans.SpanPositionCheckQuery: org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus acceptPosition(org.apache.lucene.search.spans.Spans)>(r0);

        $i0 = virtualinvoke $r3.<org.apache.lucene.search.spans.SpanPositionCheckQuery$AcceptStatus: int ordinal()>();

        $i1 = $r2[$i0];

        tableswitch($i1)
        {
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label5;
        };

     label2:
        return 1;

     label3:
        $r6 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $z1 = virtualinvoke $r6.<org.apache.lucene.search.spans.Spans: boolean next()>();

        if $z1 != 0 goto label5;

        return 0;

     label4:
        $r5 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $r4 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $i2 = virtualinvoke $r4.<org.apache.lucene.search.spans.Spans: int doc()>();

        $i3 = $i2 + 1;

        $z0 = virtualinvoke $r5.<org.apache.lucene.search.spans.Spans: boolean skipTo(int)>($i3);

        if $z0 != 0 goto label5;

        return 0;

     label5:
        goto label1;
    }

    public int doc()
    {
        int $i0;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: int doc()>();

        return $i0;
    }

    public int start()
    {
        int $i0;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: int start()>();

        return $i0;
    }

    public int end()
    {
        int $i0;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $i0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: int end()>();

        return $i0;
    }

    public java.util.Collection getPayload() throws java.io.IOException
    {
        java.util.Collection $r4;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1, $r3;
        boolean $z0;
        java.util.ArrayList $r2, r5;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        r5 = null;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean isPayloadAvailable()>();

        if $z0 == 0 goto label1;

        $r2 = new java.util.ArrayList;

        $r3 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.spans.Spans: java.util.Collection getPayload()>();

        specialinvoke $r2.<java.util.ArrayList: void <init>(java.util.Collection)>($r4);

        r5 = $r2;

     label1:
        return r5;
    }

    public boolean isPayloadAvailable() throws java.io.IOException
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        org.apache.lucene.search.spans.Spans $r1;
        boolean $z0;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: boolean isPayloadAvailable()>();

        return $z0;
    }

    public long cost()
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r0;
        long $l0;
        org.apache.lucene.search.spans.Spans $r1;

        r0 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r1 = r0.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.Spans spans>;

        $l0 = virtualinvoke $r1.<org.apache.lucene.search.spans.Spans: long cost()>();

        return $l0;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.search.spans.SpanPositionCheckQuery $r3;
        org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("spans(");

        $r3 = r2.<org.apache.lucene.search.spans.SpanPositionCheckQuery$PositionCheckSpan: org.apache.lucene.search.spans.SpanPositionCheckQuery this$0>;

        $r4 = virtualinvoke $r3.<org.apache.lucene.search.spans.SpanPositionCheckQuery: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
