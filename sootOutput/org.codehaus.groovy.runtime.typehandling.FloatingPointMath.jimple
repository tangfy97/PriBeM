public class org.codehaus.groovy.runtime.typehandling.FloatingPointMath extends org.codehaus.groovy.runtime.typehandling.NumberMath
{
    public static final org.codehaus.groovy.runtime.typehandling.FloatingPointMath INSTANCE;

    private void <init>()
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r0;

        r0 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        specialinvoke r0.<org.codehaus.groovy.runtime.typehandling.NumberMath: void <init>()>();

        return;
    }

    protected java.lang.Number absImpl(java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r2;
        java.lang.Double $r0;
        java.lang.Number r1;
        double $d0, $d1;

        r2 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = staticinvoke <java.lang.Math: double abs(double)>($d0);

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1);

        return $r0;
    }

    protected java.lang.Number addImpl(java.lang.Number, java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r3;
        java.lang.Double $r0;
        java.lang.Number r1, r2;
        double $d0, $d1, $d2;

        r3 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 + $d1;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2);

        return $r0;
    }

    protected java.lang.Number subtractImpl(java.lang.Number, java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r3;
        java.lang.Double $r0;
        java.lang.Number r1, r2;
        double $d0, $d1, $d2;

        r3 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 - $d1;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2);

        return $r0;
    }

    protected java.lang.Number multiplyImpl(java.lang.Number, java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r3;
        java.lang.Double $r0;
        java.lang.Number r1, r2;
        double $d0, $d1, $d2;

        r3 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 * $d1;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2);

        return $r0;
    }

    protected java.lang.Number divideImpl(java.lang.Number, java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r3;
        java.lang.Double $r0;
        java.lang.Number r1, r2;
        double $d0, $d1, $d2;

        r3 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 / $d1;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2);

        return $r0;
    }

    protected int compareToImpl(java.lang.Number, java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r2;
        int $i0;
        java.lang.Number r0, r1;
        double $d0, $d1;

        r2 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r0 := @parameter0: java.lang.Number;

        r1 := @parameter1: java.lang.Number;

        $d0 = virtualinvoke r0.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $i0 = staticinvoke <java.lang.Double: int compare(double,double)>($d0, $d1);

        return $i0;
    }

    protected java.lang.Number modImpl(java.lang.Number, java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r3;
        java.lang.Double $r0;
        java.lang.Number r1, r2;
        double $d0, $d1, $d2;

        r3 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        r2 := @parameter1: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = virtualinvoke r2.<java.lang.Number: double doubleValue()>();

        $d2 = $d0 % $d1;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d2);

        return $r0;
    }

    protected java.lang.Number unaryMinusImpl(java.lang.Number)
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath r2;
        java.lang.Double $r0;
        java.lang.Number r1;
        double $d0, $d1;

        r2 := @this: org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        r1 := @parameter0: java.lang.Number;

        $r0 = new java.lang.Double;

        $d0 = virtualinvoke r1.<java.lang.Number: double doubleValue()>();

        $d1 = neg $d0;

        specialinvoke $r0.<java.lang.Double: void <init>(double)>($d1);

        return $r0;
    }

    static void <clinit>()
    {
        org.codehaus.groovy.runtime.typehandling.FloatingPointMath $r0;

        $r0 = new org.codehaus.groovy.runtime.typehandling.FloatingPointMath;

        specialinvoke $r0.<org.codehaus.groovy.runtime.typehandling.FloatingPointMath: void <init>()>();

        <org.codehaus.groovy.runtime.typehandling.FloatingPointMath: org.codehaus.groovy.runtime.typehandling.FloatingPointMath INSTANCE> = $r0;

        return;
    }
}
