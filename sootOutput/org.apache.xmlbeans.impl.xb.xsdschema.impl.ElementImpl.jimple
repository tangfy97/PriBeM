public class org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl extends org.apache.xmlbeans.impl.xb.xsdschema.impl.AnnotatedImpl implements org.apache.xmlbeans.impl.xb.xsdschema.Element
{
    private static final javax.xml.namespace.QName SIMPLETYPE$0;
    private static final javax.xml.namespace.QName COMPLEXTYPE$2;
    private static final javax.xml.namespace.QName UNIQUE$4;
    private static final javax.xml.namespace.QName KEY$6;
    private static final javax.xml.namespace.QName KEYREF$8;
    private static final javax.xml.namespace.QName NAME$10;
    private static final javax.xml.namespace.QName REF$12;
    private static final javax.xml.namespace.QName TYPE$14;
    private static final javax.xml.namespace.QName SUBSTITUTIONGROUP$16;
    private static final javax.xml.namespace.QName MINOCCURS$18;
    private static final javax.xml.namespace.QName MAXOCCURS$20;
    private static final javax.xml.namespace.QName DEFAULT$22;
    private static final javax.xml.namespace.QName FIXED$24;
    private static final javax.xml.namespace.QName NILLABLE$26;
    private static final javax.xml.namespace.QName ABSTRACT$28;
    private static final javax.xml.namespace.QName FINAL$30;
    private static final javax.xml.namespace.QName BLOCK$32;
    private static final javax.xml.namespace.QName FORM$34;

    public void <init>(org.apache.xmlbeans.SchemaType)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.SchemaType r1;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r1 := @parameter0: org.apache.xmlbeans.SchemaType;

        specialinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.AnnotatedImpl: void <init>(org.apache.xmlbeans.SchemaType)>(r1);

        return;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType getSimpleType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetSimpleType()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setSimpleType(org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType r5, r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType addNewSimpleType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalSimpleType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetSimpleType()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType getComplexType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType) $r4;

        if r6 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        exitmonitor $r1;

     label4:
        return r6;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public boolean isSetComplexType()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        if $i0 == 0 goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setComplexType(org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, 0);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType addNewComplexType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.LocalComplexType) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void unsetComplexType()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, 0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] getUniqueArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.Keybase)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase getUniqueArray(int)
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r7;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfUniqueArray()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setUniqueArray(org.apache.xmlbeans.impl.xb.xsdschema.Keybase[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Keybase[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setUniqueArray(int, org.apache.xmlbeans.impl.xb.xsdschema.Keybase)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r5, r8;
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.Keybase;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase insertNewUnique(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase addNewUnique()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeUnique(int)
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] getKeyArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.Keybase)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase getKeyArray(int)
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r7;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfKeyArray()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setKeyArray(org.apache.xmlbeans.impl.xb.xsdschema.Keybase[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase[] r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.Keybase[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setKeyArray(int, org.apache.xmlbeans.impl.xb.xsdschema.Keybase)
    {
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r5, r8;
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.Keybase;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.Keybase: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase insertNewKey(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.Keybase addNewKey()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.Keybase r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.Keybase) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeKey(int)
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[] getKeyrefArray()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[] r5;
        org.apache.xmlbeans.impl.values.TypeStore $r3;
        java.util.ArrayList $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r4;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r4 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        interfaceinvoke $r3.<org.apache.xmlbeans.impl.values.TypeStore: void find_all_element_users(javax.xml.namespace.QName,java.util.List)>($r4, $r2);

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        r5 = newarray (org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref)[$i0];

        interfaceinvoke $r2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(r5);

        exitmonitor $r1;

     label2:
        return r5;

     label3:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref getKeyrefArray(int)
    {
        java.lang.Throwable $r6;
        java.lang.IndexOutOfBoundsException $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r7 = (org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref) $r4;

        if r7 != null goto label2;

        $r5 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r5.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r5;

     label2:
        exitmonitor $r1;

     label3:
        return r7;

     label4:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r6;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public int sizeOfKeyrefArray()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int $i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        $i0 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: int count_elements(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        return $i0;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setKeyrefArray(org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[])
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[] r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r2 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref[];

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void arraySetterHelper(org.apache.xmlbeans.XmlObject[],javax.xml.namespace.QName)>(r2, $r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void setKeyrefArray(int, org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref)
    {
        java.lang.Throwable $r7;
        java.lang.IndexOutOfBoundsException $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref r5, r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        r5 := @parameter1: org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref) $r4;

        if r8 != null goto label2;

        $r6 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r6.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r6;

     label2:
        interfaceinvoke r8.<org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref insertNewKeyref(int)
    {
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser insert_element_user(javax.xml.namespace.QName,int)>($r3, i0);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref addNewKeyref()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_element_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.KeyrefDocument$Keyref) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public void removeKeyref(int)
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        int i0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_element(javax.xml.namespace.QName,int)>($r3, i0);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getName()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlNCName xgetName()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.XmlNCName r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlNCName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetName()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setName(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetName(org.apache.xmlbeans.XmlNCName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.XmlNCName r5, r10;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlNCName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlNCName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlNCName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlNCName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetName()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public javax.xml.namespace.QName getRef()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlQName xgetRef()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.XmlQName r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlQName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetRef()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setRef(javax.xml.namespace.QName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, r5, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setQNameValue(javax.xml.namespace.QName)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetRef(org.apache.xmlbeans.XmlQName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.XmlQName r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlQName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlQName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlQName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetRef()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public javax.xml.namespace.QName getType()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlQName xgetType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.XmlQName r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlQName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetType()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setType(javax.xml.namespace.QName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, r5, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setQNameValue(javax.xml.namespace.QName)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetType(org.apache.xmlbeans.XmlQName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.XmlQName r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlQName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlQName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlQName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetType()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public javax.xml.namespace.QName getSubstitutionGroup()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: javax.xml.namespace.QName getQNameValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlQName xgetSubstitutionGroup()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.XmlQName r6;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlQName) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetSubstitutionGroup()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setSubstitutionGroup(javax.xml.namespace.QName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, r5, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: javax.xml.namespace.QName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setQNameValue(javax.xml.namespace.QName)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetSubstitutionGroup(org.apache.xmlbeans.XmlQName)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.XmlQName r5, r10;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlQName;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlQName) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlQName) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlQName: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetSubstitutionGroup()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.math.BigInteger getMinOccurs()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r7;
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        java.math.BigInteger $r5;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r6 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        if r9 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: java.math.BigInteger getBigIntegerValue()>();

        exitmonitor $r1;

     label5:
        return $r5;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.XmlNonNegativeInteger xgetMinOccurs()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.XmlNonNegativeInteger r8;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.XmlNonNegativeInteger) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.XmlNonNegativeInteger) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetMinOccurs()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setMinOccurs(java.math.BigInteger)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        java.math.BigInteger r5;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.math.BigInteger;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setBigIntegerValue(java.math.BigInteger)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetMinOccurs(org.apache.xmlbeans.XmlNonNegativeInteger)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.XmlNonNegativeInteger r5, r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlNonNegativeInteger;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlNonNegativeInteger) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlNonNegativeInteger) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlNonNegativeInteger: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetMinOccurs()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getMaxOccurs()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r7;
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1, $r5;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r6 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r7 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        if r9 != null goto label4;

        exitmonitor $r1;

     label3:
        return null;

     label4:
        $r5 = interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: java.lang.Object getObjectValue()>();

        exitmonitor $r1;

     label5:
        return $r5;

     label6:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r8;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.AllNNI xgetMaxOccurs()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.AllNNI r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.AllNNI) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.impl.xb.xsdschema.AllNNI) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetMaxOccurs()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setMaxOccurs(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1, r5;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setObjectValue(java.lang.Object)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetMaxOccurs(org.apache.xmlbeans.impl.xb.xsdschema.AllNNI)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.AllNNI r5, r10;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.AllNNI;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.AllNNI) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.AllNNI) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.AllNNI: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetMaxOccurs()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getDefault()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlString xgetDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.XmlString r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlString) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetDefault()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setDefault(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetDefault(org.apache.xmlbeans.XmlString)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.XmlString r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlString;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlString) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlString) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlString: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetDefault()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String getFixed()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        java.lang.String $r5;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.String getStringValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.XmlString xgetFixed()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.XmlString r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.XmlString) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetFixed()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setFixed(java.lang.String)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        java.lang.String r5;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setStringValue(java.lang.String)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetFixed(org.apache.xmlbeans.XmlString)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.XmlString r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlString;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlString) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlString) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlString: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetFixed()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getNillable()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r8;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.SimpleValue) $r6;

     label2:
        if r8 != null goto label4;

        exitmonitor $r1;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: boolean getBooleanValue()>();

        exitmonitor $r1;

     label5:
        return $z0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.XmlBoolean xgetNillable()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlBoolean r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetNillable()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setNillable(boolean)
    {
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r5;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r6 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: void setBooleanValue(boolean)>(z0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetNillable(org.apache.xmlbeans.XmlBoolean)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.XmlBoolean r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlBoolean;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlBoolean: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetNillable()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean getAbstract()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;
        org.apache.xmlbeans.SimpleValue r8;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.SimpleValue) $r6;

     label2:
        if r8 != null goto label4;

        exitmonitor $r1;

     label3:
        return 0;

     label4:
        $z0 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: boolean getBooleanValue()>();

        exitmonitor $r1;

     label5:
        return $z0;

     label6:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label7:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label6;
        catch java.lang.Throwable from label4 to label5 with label6;
        catch java.lang.Throwable from label6 to label7 with label6;
    }

    public org.apache.xmlbeans.XmlBoolean xgetAbstract()
    {
        org.apache.xmlbeans.XmlAnySimpleType $r6;
        java.lang.Throwable $r7;
        org.apache.xmlbeans.XmlBoolean r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r5;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r8 != null goto label2;

        $r5 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.XmlAnySimpleType get_default_attribute_value(javax.xml.namespace.QName)>($r5);

        r8 = (org.apache.xmlbeans.XmlBoolean) $r6;

     label2:
        exitmonitor $r1;

     label3:
        return r8;

     label4:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r7;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public boolean isSetAbstract()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setAbstract(boolean)
    {
        java.lang.Throwable $r8;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r5;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r7;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r6;
        org.apache.xmlbeans.SimpleValue r9;
        boolean z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        z0 := @parameter0: boolean;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r9 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r9 != null goto label2;

        $r5 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r6 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r7 = interfaceinvoke $r5.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r6);

        r9 = (org.apache.xmlbeans.SimpleValue) $r7;

     label2:
        interfaceinvoke r9.<org.apache.xmlbeans.SimpleValue: void setBooleanValue(boolean)>(z0);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r8;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetAbstract(org.apache.xmlbeans.XmlBoolean)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.XmlBoolean r5, r10;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.XmlBoolean;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.XmlBoolean) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.XmlBoolean: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetAbstract()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getFinal()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1, $r5;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.Object getObjectValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet xgetFinal()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet r6;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetFinal()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setFinal(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1, r5;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setObjectValue(java.lang.Object)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetFinal(org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet r5, r10;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.DerivationSet: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetFinal()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.Object getBlock()
    {
        java.lang.Throwable $r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1, $r5;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.SimpleValue r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r7 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r7 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r7.<org.apache.xmlbeans.SimpleValue: java.lang.Object getObjectValue()>();

        exitmonitor $r1;

     label4:
        return $r5;

     label5:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r6;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.BlockSet xgetBlock()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.BlockSet r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetBlock()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setBlock(java.lang.Object)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1, r5;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setObjectValue(java.lang.Object)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetBlock(org.apache.xmlbeans.impl.xb.xsdschema.BlockSet)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.BlockSet r5, r10;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.BlockSet;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.BlockSet) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.BlockSet: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetBlock()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum getForm()
    {
        java.lang.Throwable $r7;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum $r6;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3;
        org.apache.xmlbeans.StringEnumAbstractBase $r5;
        org.apache.xmlbeans.SimpleValue r8;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r8 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r8 != null goto label3;

        exitmonitor $r1;

     label2:
        return null;

     label3:
        $r5 = interfaceinvoke r8.<org.apache.xmlbeans.SimpleValue: org.apache.xmlbeans.StringEnumAbstractBase getEnumValue()>();

        $r6 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum) $r5;

        exitmonitor $r1;

     label4:
        return $r6;

     label5:
        $r7 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r7;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public org.apache.xmlbeans.impl.xb.xsdschema.FormChoice xgetForm()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r6;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r6 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        exitmonitor $r1;

     label2:
        return r6;

     label3:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r5;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public boolean isSetForm()
    {
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4;
        java.lang.Throwable $r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;
        boolean $z0;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        if $r4 == null goto label2;

        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        exitmonitor $r1;

     label4:
        return $z0;

     label5:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label6:
        throw $r5;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public void setForm(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum r5;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        javax.xml.namespace.QName $r3, $r7;
        org.apache.xmlbeans.SimpleValue r10;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice$Enum;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.SimpleValue) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.SimpleValue) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.SimpleValue: void setEnumValue(org.apache.xmlbeans.StringEnumAbstractBase)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void xsetForm(org.apache.xmlbeans.impl.xb.xsdschema.FormChoice)
    {
        java.lang.Throwable $r9;
        org.apache.xmlbeans.impl.values.TypeStore $r2, $r6;
        org.apache.xmlbeans.impl.values.TypeStoreUser $r4, $r8;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.xb.xsdschema.FormChoice r5, r10;
        javax.xml.namespace.QName $r3, $r7;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        r5 := @parameter0: org.apache.xmlbeans.impl.xb.xsdschema.FormChoice;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r4 = interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser find_attribute_user(javax.xml.namespace.QName)>($r3);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r4;

        if r10 != null goto label2;

        $r6 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r7 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        $r8 = interfaceinvoke $r6.<org.apache.xmlbeans.impl.values.TypeStore: org.apache.xmlbeans.impl.values.TypeStoreUser add_attribute_user(javax.xml.namespace.QName)>($r7);

        r10 = (org.apache.xmlbeans.impl.xb.xsdschema.FormChoice) $r8;

     label2:
        interfaceinvoke r10.<org.apache.xmlbeans.impl.xb.xsdschema.FormChoice: org.apache.xmlbeans.XmlObject set(org.apache.xmlbeans.XmlObject)>(r5);

        exitmonitor $r1;

     label3:
        goto label6;

     label4:
        $r9 := @caughtexception;

        exitmonitor $r1;

     label5:
        throw $r9;

     label6:
        return;

        catch java.lang.Throwable from label1 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    public void unsetForm()
    {
        java.lang.Throwable $r4;
        org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl r0;
        java.lang.Object $r1;
        org.apache.xmlbeans.impl.values.TypeStore $r2;
        javax.xml.namespace.QName $r3;

        r0 := @this: org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl;

        $r1 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: java.lang.Object monitor()>();

        entermonitor $r1;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: void check_orphaned()>();

        $r2 = virtualinvoke r0.<org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: org.apache.xmlbeans.impl.values.TypeStore get_store()>();

        $r3 = <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34>;

        interfaceinvoke $r2.<org.apache.xmlbeans.impl.values.TypeStore: void remove_attribute(javax.xml.namespace.QName)>($r3);

        exitmonitor $r1;

     label2:
        goto label5;

     label3:
        $r4 := @caughtexception;

        exitmonitor $r1;

     label4:
        throw $r4;

     label5:
        return;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    static void <clinit>()
    {
        javax.xml.namespace.QName $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17;

        $r0 = new javax.xml.namespace.QName;

        specialinvoke $r0.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "simpleType");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SIMPLETYPE$0> = $r0;

        $r1 = new javax.xml.namespace.QName;

        specialinvoke $r1.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "complexType");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName COMPLEXTYPE$2> = $r1;

        $r2 = new javax.xml.namespace.QName;

        specialinvoke $r2.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "unique");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName UNIQUE$4> = $r2;

        $r3 = new javax.xml.namespace.QName;

        specialinvoke $r3.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "key");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEY$6> = $r3;

        $r4 = new javax.xml.namespace.QName;

        specialinvoke $r4.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("http://www.w3.org/2001/XMLSchema", "keyref");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName KEYREF$8> = $r4;

        $r5 = new javax.xml.namespace.QName;

        specialinvoke $r5.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "name");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NAME$10> = $r5;

        $r6 = new javax.xml.namespace.QName;

        specialinvoke $r6.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "ref");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName REF$12> = $r6;

        $r7 = new javax.xml.namespace.QName;

        specialinvoke $r7.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "type");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName TYPE$14> = $r7;

        $r8 = new javax.xml.namespace.QName;

        specialinvoke $r8.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "substitutionGroup");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName SUBSTITUTIONGROUP$16> = $r8;

        $r9 = new javax.xml.namespace.QName;

        specialinvoke $r9.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "minOccurs");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MINOCCURS$18> = $r9;

        $r10 = new javax.xml.namespace.QName;

        specialinvoke $r10.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "maxOccurs");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName MAXOCCURS$20> = $r10;

        $r11 = new javax.xml.namespace.QName;

        specialinvoke $r11.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "default");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName DEFAULT$22> = $r11;

        $r12 = new javax.xml.namespace.QName;

        specialinvoke $r12.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "fixed");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FIXED$24> = $r12;

        $r13 = new javax.xml.namespace.QName;

        specialinvoke $r13.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "nillable");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName NILLABLE$26> = $r13;

        $r14 = new javax.xml.namespace.QName;

        specialinvoke $r14.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "abstract");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName ABSTRACT$28> = $r14;

        $r15 = new javax.xml.namespace.QName;

        specialinvoke $r15.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "final");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FINAL$30> = $r15;

        $r16 = new javax.xml.namespace.QName;

        specialinvoke $r16.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "block");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName BLOCK$32> = $r16;

        $r17 = new javax.xml.namespace.QName;

        specialinvoke $r17.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String)>("", "form");

        <org.apache.xmlbeans.impl.xb.xsdschema.impl.ElementImpl: javax.xml.namespace.QName FORM$34> = $r17;

        return;
    }
}
