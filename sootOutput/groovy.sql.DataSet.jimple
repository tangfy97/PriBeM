public class groovy.sql.DataSet extends groovy.sql.Sql
{
    private groovy.lang.Closure where;
    private groovy.lang.Closure sort;
    private boolean reversed;
    private groovy.sql.DataSet parent;
    private java.lang.String table;
    private groovy.sql.SqlWhereVisitor visitor;
    private groovy.sql.SqlOrderByVisitor sortVisitor;
    private java.lang.String sql;
    private java.util.List params;

    public void <init>(groovy.sql.Sql, java.lang.Class)
    {
        groovy.sql.Sql r1;
        int $i0, $i1;
        java.lang.Class r2;
        java.lang.String $r3, $r4, r5;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        r1 := @parameter0: groovy.sql.Sql;

        r2 := @parameter1: java.lang.Class;

        specialinvoke r0.<groovy.sql.Sql: void <init>(groovy.sql.Sql)>(r1);

        r0.<groovy.sql.DataSet: boolean reversed> = 0;

        $r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>();

        r5 = $r3;

        $i0 = virtualinvoke $r3.<java.lang.String: int lastIndexOf(int)>(46);

        if $i0 <= 0 goto label1;

        $i1 = $i0 + 1;

        r5 = virtualinvoke $r3.<java.lang.String: java.lang.String substring(int)>($i1);

     label1:
        $r4 = virtualinvoke r5.<java.lang.String: java.lang.String toLowerCase()>();

        r0.<groovy.sql.DataSet: java.lang.String table> = $r4;

        return;
    }

    public void <init>(groovy.sql.Sql, java.lang.String)
    {
        groovy.sql.Sql r1;
        java.lang.String r2;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        r1 := @parameter0: groovy.sql.Sql;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<groovy.sql.Sql: void <init>(groovy.sql.Sql)>(r1);

        r0.<groovy.sql.DataSet: boolean reversed> = 0;

        r0.<groovy.sql.DataSet: java.lang.String table> = r2;

        return;
    }

    private void <init>(groovy.sql.DataSet, groovy.lang.Closure)
    {
        groovy.lang.Closure r3;
        java.lang.String $r2;
        groovy.sql.DataSet r0, r1;

        r0 := @this: groovy.sql.DataSet;

        r1 := @parameter0: groovy.sql.DataSet;

        r3 := @parameter1: groovy.lang.Closure;

        specialinvoke r0.<groovy.sql.Sql: void <init>(groovy.sql.Sql)>(r1);

        r0.<groovy.sql.DataSet: boolean reversed> = 0;

        $r2 = r1.<groovy.sql.DataSet: java.lang.String table>;

        r0.<groovy.sql.DataSet: java.lang.String table> = $r2;

        r0.<groovy.sql.DataSet: groovy.sql.DataSet parent> = r1;

        r0.<groovy.sql.DataSet: groovy.lang.Closure where> = r3;

        return;
    }

    private void <init>(groovy.sql.DataSet, groovy.lang.Closure, groovy.lang.Closure)
    {
        groovy.lang.Closure r3, r4;
        java.lang.String $r2;
        groovy.sql.DataSet r0, r1;

        r0 := @this: groovy.sql.DataSet;

        r1 := @parameter0: groovy.sql.DataSet;

        r3 := @parameter1: groovy.lang.Closure;

        r4 := @parameter2: groovy.lang.Closure;

        specialinvoke r0.<groovy.sql.Sql: void <init>(groovy.sql.Sql)>(r1);

        r0.<groovy.sql.DataSet: boolean reversed> = 0;

        $r2 = r1.<groovy.sql.DataSet: java.lang.String table>;

        r0.<groovy.sql.DataSet: java.lang.String table> = $r2;

        r0.<groovy.sql.DataSet: groovy.sql.DataSet parent> = r1;

        r0.<groovy.sql.DataSet: groovy.lang.Closure where> = r3;

        r0.<groovy.sql.DataSet: groovy.lang.Closure sort> = r4;

        return;
    }

    private void <init>(groovy.sql.DataSet)
    {
        java.lang.String $r2;
        groovy.sql.DataSet r0, r1;

        r0 := @this: groovy.sql.DataSet;

        r1 := @parameter0: groovy.sql.DataSet;

        specialinvoke r0.<groovy.sql.Sql: void <init>(groovy.sql.Sql)>(r1);

        r0.<groovy.sql.DataSet: boolean reversed> = 0;

        $r2 = r1.<groovy.sql.DataSet: java.lang.String table>;

        r0.<groovy.sql.DataSet: java.lang.String table> = $r2;

        r0.<groovy.sql.DataSet: groovy.sql.DataSet parent> = r1;

        r0.<groovy.sql.DataSet: boolean reversed> = 1;

        return;
    }

    public void add(java.util.Map) throws java.sql.SQLException
    {
        java.sql.Connection $r8;
        java.util.Map r4;
        boolean $z0, $z1, z2;
        java.util.Set $r5, $r11;
        java.sql.PreparedStatement $r10, r36;
        java.util.logging.Logger $r14, $r30;
        groovy.sql.DataSet r1;
        java.lang.Throwable $r27;
        java.util.logging.Level $r15, $r31;
        java.sql.SQLException $r28;
        java.lang.StringBuffer $r0, $r3, $r13, $r16, $r17, $r18, $r19, $r29, $r32, $r33;
        int $i0, $i1, i2;
        java.lang.String $r2, $r7, $r9, $r20, $r26, $r34;
        java.util.Map$Entry r22, r35;
        java.util.Iterator $r6, $r12;
        java.lang.Object $r21, $r23, $r24, $r25;

        r1 := @this: groovy.sql.DataSet;

        r4 := @parameter0: java.util.Map;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>("insert into ");

        $r2 = r1.<groovy.sql.DataSet: java.lang.String table>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (");

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        z2 = 1;

        $r5 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r24 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r35 = (java.util.Map$Entry) $r24;

        $r25 = interfaceinvoke r35.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r26 = virtualinvoke $r25.<java.lang.Object: java.lang.String toString()>();

        if z2 == 0 goto label02;

        z2 = 0;

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        goto label03;

     label02:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ?");

     label03:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        goto label01;

     label04:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") values (");

        $r7 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r8 = virtualinvoke r1.<groovy.sql.DataSet: java.sql.Connection createConnection()>();

        r36 = null;

     label05:
        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        $r10 = interfaceinvoke $r8.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r9);

        r36 = $r10;

        i2 = 1;

        $r11 = interfaceinvoke r4.<java.util.Map: java.util.Set entrySet()>();

        $r12 = interfaceinvoke $r11.<java.util.Set: java.util.Iterator iterator()>();

     label06:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label07;

        $r21 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r22 = (java.util.Map$Entry) $r21;

        $i1 = i2;

        i2 = i2 + 1;

        $r23 = interfaceinvoke r22.<java.util.Map$Entry: java.lang.Object getValue()>();

        virtualinvoke r1.<groovy.sql.DataSet: void setObject(java.sql.PreparedStatement,int,java.lang.Object)>($r10, $i1, $r23);

        goto label06;

     label07:
        $i0 = interfaceinvoke $r10.<java.sql.PreparedStatement: int executeUpdate()>();

        if $i0 == 1 goto label08;

        $r14 = r1.<groovy.sql.DataSet: java.util.logging.Logger log>;

        $r15 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Should have updated 1 row not ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" when trying to add: ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>($r15, $r20);

     label08:
        virtualinvoke r1.<groovy.sql.DataSet: void closeResources(java.sql.Connection,java.sql.Statement)>($r8, $r10);

        goto label12;

     label09:
        $r28 := @caughtexception;

        $r30 = r1.<groovy.sql.DataSet: java.util.logging.Logger log>;

        $r31 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r29 = new java.lang.StringBuffer;

        specialinvoke $r29.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Failed to add row for: ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r4);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r30.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r31, $r34, $r28);

        throw $r28;

     label10:
        $r27 := @caughtexception;

     label11:
        virtualinvoke r1.<groovy.sql.DataSet: void closeResources(java.sql.Connection,java.sql.Statement)>($r8, r36);

        throw $r27;

     label12:
        return;

        catch java.sql.SQLException from label05 to label08 with label09;
        catch java.lang.Throwable from label05 to label08 with label10;
        catch java.lang.Throwable from label09 to label11 with label10;
    }

    public groovy.sql.DataSet findAll(groovy.lang.Closure)
    {
        groovy.lang.Closure r2;
        groovy.sql.DataSet $r0, r1;

        r1 := @this: groovy.sql.DataSet;

        r2 := @parameter0: groovy.lang.Closure;

        $r0 = new groovy.sql.DataSet;

        specialinvoke $r0.<groovy.sql.DataSet: void <init>(groovy.sql.DataSet,groovy.lang.Closure)>(r1, r2);

        return $r0;
    }

    public groovy.sql.DataSet sort(groovy.lang.Closure)
    {
        groovy.lang.Closure r2;
        groovy.sql.DataSet $r0, r1;

        r1 := @this: groovy.sql.DataSet;

        r2 := @parameter0: groovy.lang.Closure;

        $r0 = new groovy.sql.DataSet;

        specialinvoke $r0.<groovy.sql.DataSet: void <init>(groovy.sql.DataSet,groovy.lang.Closure,groovy.lang.Closure)>(r1, null, r2);

        return $r0;
    }

    public groovy.sql.DataSet reverse()
    {
        groovy.lang.GroovyRuntimeException $r3;
        groovy.lang.Closure $r1;
        groovy.sql.DataSet r0, $r2;

        r0 := @this: groovy.sql.DataSet;

        $r1 = r0.<groovy.sql.DataSet: groovy.lang.Closure sort>;

        if $r1 != null goto label1;

        $r3 = new groovy.lang.GroovyRuntimeException;

        specialinvoke $r3.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>("reverse() only allowed immediately after a sort()");

        throw $r3;

     label1:
        $r2 = new groovy.sql.DataSet;

        specialinvoke $r2.<groovy.sql.DataSet: void <init>(groovy.sql.DataSet)>(r0);

        return $r2;
    }

    public void each(groovy.lang.Closure) throws java.sql.SQLException
    {
        java.util.List $r2;
        groovy.lang.Closure r3;
        java.lang.String $r1;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        r3 := @parameter0: groovy.lang.Closure;

        $r1 = virtualinvoke r0.<groovy.sql.DataSet: java.lang.String getSql()>();

        $r2 = virtualinvoke r0.<groovy.sql.DataSet: java.util.List getParameters()>();

        virtualinvoke r0.<groovy.sql.DataSet: void eachRow(java.lang.String,java.util.List,groovy.lang.Closure)>($r1, $r2, r3);

        return;
    }

    private java.lang.String getSqlWhere()
    {
        groovy.lang.Closure $r2;
        java.lang.StringBuffer $r3, $r4, $r5, $r6, $r8, $r9, $r12;
        int $i0, $i1;
        java.lang.String $r7, $r11, r14, r15;
        groovy.sql.SqlWhereVisitor $r10;
        groovy.sql.DataSet r0, $r1, $r13;

        r0 := @this: groovy.sql.DataSet;

        r14 = "";

        r15 = "";

        $r1 = r0.<groovy.sql.DataSet: groovy.sql.DataSet parent>;

        if $r1 == null goto label1;

        $r13 = r0.<groovy.sql.DataSet: groovy.sql.DataSet parent>;

        r15 = specialinvoke $r13.<groovy.sql.DataSet: java.lang.String getSqlWhere()>();

     label1:
        $r2 = r0.<groovy.sql.DataSet: groovy.lang.Closure where>;

        if $r2 == null goto label2;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r10 = virtualinvoke r0.<groovy.sql.DataSet: groovy.sql.SqlWhereVisitor getSqlWhereVisitor()>();

        $r11 = virtualinvoke $r10.<groovy.sql.SqlWhereVisitor: java.lang.String getWhere()>();

        $r12 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $i0 = virtualinvoke r15.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        return r14;

     label3:
        $i1 = virtualinvoke r14.<java.lang.String: int length()>();

        if $i1 != 0 goto label4;

        return r15;

     label4:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r15);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" and ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r14);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    private java.lang.String getSqlOrderBy()
    {
        groovy.lang.Closure $r18;
        java.lang.StringBuffer $r2, $r3, $r4, $r5, $r7, $r8, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2;
        java.lang.String $r6, $r10, r16, r17;
        boolean $z0;
        groovy.sql.SqlOrderByVisitor $r9;
        groovy.sql.DataSet r0, $r1, $r15;

        r0 := @this: groovy.sql.DataSet;

        r16 = "";

        r17 = "";

        $r1 = r0.<groovy.sql.DataSet: groovy.sql.DataSet parent>;

        if $r1 == null goto label1;

        $r15 = r0.<groovy.sql.DataSet: groovy.sql.DataSet parent>;

        r17 = specialinvoke $r15.<groovy.sql.DataSet: java.lang.String getSqlOrderBy()>();

     label1:
        $z0 = r0.<groovy.sql.DataSet: boolean reversed>;

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r17.<java.lang.String: int length()>();

        if $i2 <= 0 goto label2;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" DESC");

        r17 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

     label2:
        $r18 = r0.<groovy.sql.DataSet: groovy.lang.Closure sort>;

        if $r18 == null goto label3;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("");

        $r9 = virtualinvoke r0.<groovy.sql.DataSet: groovy.sql.SqlOrderByVisitor getSqlOrderByVisitor()>();

        $r10 = virtualinvoke $r9.<groovy.sql.SqlOrderByVisitor: java.lang.String getOrderBy()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        r16 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $i0 = virtualinvoke r17.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

        return r16;

     label4:
        $i1 = virtualinvoke r16.<java.lang.String: int length()>();

        if $i1 != 0 goto label5;

        return r17;

     label5:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r17);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public java.lang.String getSql()
    {
        java.lang.StringBuffer $r2, $r3, $r5, $r9, $r11, $r12, $r13, $r15, $r17, $r18, $r19;
        int $i0, $i1;
        java.lang.String $r1, $r4, $r6, $r7, $r8, $r10, $r14, $r16, $r20, $r21;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        $r1 = r0.<groovy.sql.DataSet: java.lang.String sql>;

        if $r1 != null goto label2;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("select * from ");

        $r4 = r0.<groovy.sql.DataSet: java.lang.String table>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovy.sql.DataSet: java.lang.String sql> = $r6;

        $r7 = specialinvoke r0.<groovy.sql.DataSet: java.lang.String getSqlWhere()>();

        $i0 = virtualinvoke $r7.<java.lang.String: int length()>();

        if $i0 <= 0 goto label1;

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = r0.<groovy.sql.DataSet: java.lang.String sql>;

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" where ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovy.sql.DataSet: java.lang.String sql> = $r20;

     label1:
        $r8 = specialinvoke r0.<groovy.sql.DataSet: java.lang.String getSqlOrderBy()>();

        $i1 = virtualinvoke $r8.<java.lang.String: int length()>();

        if $i1 <= 0 goto label2;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = r0.<groovy.sql.DataSet: java.lang.String sql>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" order by ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<groovy.sql.DataSet: java.lang.String sql> = $r14;

     label2:
        $r21 = r0.<groovy.sql.DataSet: java.lang.String sql>;

        return $r21;
    }

    public java.util.List getParameters()
    {
        java.util.ArrayList $r2;
        java.util.List $r1, $r4, $r6, $r8, $r9, $r10;
        groovy.sql.SqlWhereVisitor $r5;
        groovy.sql.DataSet r0, $r3, $r7;

        r0 := @this: groovy.sql.DataSet;

        $r1 = r0.<groovy.sql.DataSet: java.util.List params>;

        if $r1 != null goto label2;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<groovy.sql.DataSet: java.util.List params> = $r2;

        $r3 = r0.<groovy.sql.DataSet: groovy.sql.DataSet parent>;

        if $r3 == null goto label1;

        $r8 = r0.<groovy.sql.DataSet: java.util.List params>;

        $r7 = r0.<groovy.sql.DataSet: groovy.sql.DataSet parent>;

        $r9 = virtualinvoke $r7.<groovy.sql.DataSet: java.util.List getParameters()>();

        interfaceinvoke $r8.<java.util.List: boolean addAll(java.util.Collection)>($r9);

     label1:
        $r4 = r0.<groovy.sql.DataSet: java.util.List params>;

        $r5 = virtualinvoke r0.<groovy.sql.DataSet: groovy.sql.SqlWhereVisitor getSqlWhereVisitor()>();

        $r6 = virtualinvoke $r5.<groovy.sql.SqlWhereVisitor: java.util.List getParameters()>();

        interfaceinvoke $r4.<java.util.List: boolean addAll(java.util.Collection)>($r6);

     label2:
        $r10 = r0.<groovy.sql.DataSet: java.util.List params>;

        return $r10;
    }

    protected groovy.sql.SqlWhereVisitor getSqlWhereVisitor()
    {
        groovy.sql.SqlWhereVisitor $r1, $r2, $r3, $r4;
        groovy.lang.Closure $r5;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        $r1 = r0.<groovy.sql.DataSet: groovy.sql.SqlWhereVisitor visitor>;

        if $r1 != null goto label1;

        $r3 = new groovy.sql.SqlWhereVisitor;

        specialinvoke $r3.<groovy.sql.SqlWhereVisitor: void <init>()>();

        r0.<groovy.sql.DataSet: groovy.sql.SqlWhereVisitor visitor> = $r3;

        $r5 = r0.<groovy.sql.DataSet: groovy.lang.Closure where>;

        $r4 = r0.<groovy.sql.DataSet: groovy.sql.SqlWhereVisitor visitor>;

        specialinvoke r0.<groovy.sql.DataSet: void visit(groovy.lang.Closure,org.codehaus.groovy.ast.CodeVisitorSupport)>($r5, $r4);

     label1:
        $r2 = r0.<groovy.sql.DataSet: groovy.sql.SqlWhereVisitor visitor>;

        return $r2;
    }

    protected groovy.sql.SqlOrderByVisitor getSqlOrderByVisitor()
    {
        groovy.sql.SqlOrderByVisitor $r1, $r2, $r3, $r4;
        groovy.lang.Closure $r5;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        $r1 = r0.<groovy.sql.DataSet: groovy.sql.SqlOrderByVisitor sortVisitor>;

        if $r1 != null goto label1;

        $r3 = new groovy.sql.SqlOrderByVisitor;

        specialinvoke $r3.<groovy.sql.SqlOrderByVisitor: void <init>()>();

        r0.<groovy.sql.DataSet: groovy.sql.SqlOrderByVisitor sortVisitor> = $r3;

        $r5 = r0.<groovy.sql.DataSet: groovy.lang.Closure sort>;

        $r4 = r0.<groovy.sql.DataSet: groovy.sql.SqlOrderByVisitor sortVisitor>;

        specialinvoke r0.<groovy.sql.DataSet: void visit(groovy.lang.Closure,org.codehaus.groovy.ast.CodeVisitorSupport)>($r5, $r4);

     label1:
        $r2 = r0.<groovy.sql.DataSet: groovy.sql.SqlOrderByVisitor sortVisitor>;

        return $r2;
    }

    private void visit(groovy.lang.Closure, org.codehaus.groovy.ast.CodeVisitorSupport)
    {
        org.codehaus.groovy.ast.stmt.Statement $r6;
        org.codehaus.groovy.ast.CodeVisitorSupport r7;
        groovy.lang.Closure r0;
        org.codehaus.groovy.ast.MethodNode r5;
        java.lang.StringBuffer $r9, $r10, $r12;
        java.lang.String $r13;
        boolean $z0;
        groovy.lang.MetaClass $r1, $r11;
        groovy.lang.GroovyRuntimeException $r8;
        org.codehaus.groovy.ast.ClassNode $r2;
        java.util.List $r3;
        java.lang.Object $r4;
        groovy.sql.DataSet r14;

        r14 := @this: groovy.sql.DataSet;

        r0 := @parameter0: groovy.lang.Closure;

        r7 := @parameter1: org.codehaus.groovy.ast.CodeVisitorSupport;

        if r0 == null goto label2;

        $r1 = virtualinvoke r0.<groovy.lang.Closure: groovy.lang.MetaClass getMetaClass()>();

        $r2 = interfaceinvoke $r1.<groovy.lang.MetaClass: org.codehaus.groovy.ast.ClassNode getClassNode()>();

        if $r2 != null goto label1;

        $r8 = new groovy.lang.GroovyRuntimeException;

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not find the ClassNode for MetaClass: ");

        $r11 = virtualinvoke r0.<groovy.lang.Closure: groovy.lang.MetaClass getMetaClass()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r8.<groovy.lang.GroovyRuntimeException: void <init>(java.lang.String)>($r13);

        throw $r8;

     label1:
        $r3 = virtualinvoke $r2.<org.codehaus.groovy.ast.ClassNode: java.util.List getDeclaredMethods(java.lang.String)>("doCall");

        $z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>();

        if $z0 != 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (org.codehaus.groovy.ast.MethodNode) $r4;

        if r5 == null goto label2;

        $r6 = virtualinvoke r5.<org.codehaus.groovy.ast.MethodNode: org.codehaus.groovy.ast.stmt.Statement getCode()>();

        if $r6 == null goto label2;

        virtualinvoke $r6.<org.codehaus.groovy.ast.stmt.Statement: void visit(org.codehaus.groovy.ast.GroovyCodeVisitor)>(r7);

     label2:
        return;
    }

    public groovy.sql.DataSet createView(groovy.lang.Closure)
    {
        groovy.lang.Closure r2;
        groovy.sql.DataSet $r0, r1;

        r1 := @this: groovy.sql.DataSet;

        r2 := @parameter0: groovy.lang.Closure;

        $r0 = new groovy.sql.DataSet;

        specialinvoke $r0.<groovy.sql.DataSet: void <init>(groovy.sql.DataSet,groovy.lang.Closure)>(r1, r2);

        return $r0;
    }

    public java.util.List rows() throws java.sql.SQLException
    {
        java.util.List $r2, $r3;
        java.lang.String $r1;
        groovy.sql.DataSet r0;

        r0 := @this: groovy.sql.DataSet;

        $r1 = virtualinvoke r0.<groovy.sql.DataSet: java.lang.String getSql()>();

        $r2 = virtualinvoke r0.<groovy.sql.DataSet: java.util.List getParameters()>();

        $r3 = virtualinvoke r0.<groovy.sql.DataSet: java.util.List rows(java.lang.String,java.util.List)>($r1, $r2);

        return $r3;
    }

    public java.lang.Object firstRow() throws java.sql.SQLException
    {
        java.util.List $r1;
        java.lang.Object $r2;
        groovy.sql.DataSet r0;
        boolean $z0;

        r0 := @this: groovy.sql.DataSet;

        $r1 = virtualinvoke r0.<groovy.sql.DataSet: java.util.List rows()>();

        $z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return null;

     label1:
        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        return $r2;
    }
}
