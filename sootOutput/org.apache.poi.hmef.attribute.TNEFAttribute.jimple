public class org.apache.poi.hmef.attribute.TNEFAttribute extends java.lang.Object
{
    private final org.apache.poi.hmef.attribute.TNEFProperty property;
    private final int type;
    private final byte[] data;
    private final int checksum;

    protected void <init>(int, int, java.io.InputStream) throws java.io.IOException
    {
        byte[] $r3, $r4;
        org.apache.poi.hmef.attribute.TNEFAttribute r0;
        org.apache.poi.hmef.attribute.TNEFProperty $r2;
        int i0, $i1, i2, $i3;
        java.io.InputStream r1;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFAttribute;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        r1 := @parameter2: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hmef.attribute.TNEFAttribute: int type> = i0;

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int readInt(java.io.InputStream)>(r1);

        $r2 = staticinvoke <org.apache.poi.hmef.attribute.TNEFProperty: org.apache.poi.hmef.attribute.TNEFProperty getBest(int,int)>(i2, i0);

        r0.<org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFProperty property> = $r2;

        $r3 = newarray (byte)[$i1];

        r0.<org.apache.poi.hmef.attribute.TNEFAttribute: byte[] data> = $r3;

        $r4 = r0.<org.apache.poi.hmef.attribute.TNEFAttribute: byte[] data>;

        staticinvoke <org.apache.poi.util.IOUtils: int readFully(java.io.InputStream,byte[])>(r1, $r4);

        $i3 = staticinvoke <org.apache.poi.util.LittleEndian: int readUShort(java.io.InputStream)>(r1);

        r0.<org.apache.poi.hmef.attribute.TNEFAttribute: int checksum> = $i3;

        return;
    }

    public static org.apache.poi.hmef.attribute.TNEFAttribute create(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.hmef.attribute.TNEFStringAttribute $r4;
        org.apache.poi.hmef.attribute.TNEFAttribute $r5;
        org.apache.poi.hmef.attribute.TNEFMAPIAttribute $r2;
        org.apache.poi.hmef.attribute.TNEFDateAttribute $r6;
        org.apache.poi.hmef.attribute.TNEFProperty $r1, $r3;
        int $i0, $i1, $i2, $i3;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        $i0 = staticinvoke <org.apache.poi.util.LittleEndian: int readUShort(java.io.InputStream)>(r0);

        $i1 = staticinvoke <org.apache.poi.util.LittleEndian: int readUShort(java.io.InputStream)>(r0);

        $r1 = <org.apache.poi.hmef.attribute.TNEFProperty: org.apache.poi.hmef.attribute.TNEFProperty ID_MAPIPROPERTIES>;

        $i2 = $r1.<org.apache.poi.hmef.attribute.TNEFProperty: int id>;

        if $i0 == $i2 goto label1;

        $r3 = <org.apache.poi.hmef.attribute.TNEFProperty: org.apache.poi.hmef.attribute.TNEFProperty ID_ATTACHMENT>;

        $i3 = $r3.<org.apache.poi.hmef.attribute.TNEFProperty: int id>;

        if $i0 != $i3 goto label2;

     label1:
        $r2 = new org.apache.poi.hmef.attribute.TNEFMAPIAttribute;

        specialinvoke $r2.<org.apache.poi.hmef.attribute.TNEFMAPIAttribute: void <init>(int,int,java.io.InputStream)>($i0, $i1, r0);

        return $r2;

     label2:
        if $i1 == 1 goto label3;

        if $i1 != 2 goto label4;

     label3:
        $r4 = new org.apache.poi.hmef.attribute.TNEFStringAttribute;

        specialinvoke $r4.<org.apache.poi.hmef.attribute.TNEFStringAttribute: void <init>(int,int,java.io.InputStream)>($i0, $i1, r0);

        return $r4;

     label4:
        if $i1 != 3 goto label5;

        $r6 = new org.apache.poi.hmef.attribute.TNEFDateAttribute;

        specialinvoke $r6.<org.apache.poi.hmef.attribute.TNEFDateAttribute: void <init>(int,int,java.io.InputStream)>($i0, $i1, r0);

        return $r6;

     label5:
        $r5 = new org.apache.poi.hmef.attribute.TNEFAttribute;

        specialinvoke $r5.<org.apache.poi.hmef.attribute.TNEFAttribute: void <init>(int,int,java.io.InputStream)>($i0, $i1, r0);

        return $r5;
    }

    public org.apache.poi.hmef.attribute.TNEFProperty getProperty()
    {
        org.apache.poi.hmef.attribute.TNEFAttribute r0;
        org.apache.poi.hmef.attribute.TNEFProperty $r1;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFAttribute;

        $r1 = r0.<org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFProperty property>;

        return $r1;
    }

    public int getType()
    {
        int $i0;
        org.apache.poi.hmef.attribute.TNEFAttribute r0;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFAttribute;

        $i0 = r0.<org.apache.poi.hmef.attribute.TNEFAttribute: int type>;

        return $i0;
    }

    public byte[] getData()
    {
        byte[] $r1;
        org.apache.poi.hmef.attribute.TNEFAttribute r0;

        r0 := @this: org.apache.poi.hmef.attribute.TNEFAttribute;

        $r1 = r0.<org.apache.poi.hmef.attribute.TNEFAttribute: byte[] data>;

        return $r1;
    }

    public java.lang.String toString()
    {
        byte[] $r9;
        org.apache.poi.hmef.attribute.TNEFAttribute r2;
        org.apache.poi.hmef.attribute.TNEFProperty $r3;
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r1, $r5, $r6, $r7, $r8, $r10;
        java.lang.String $r4, $r11;

        r2 := @this: org.apache.poi.hmef.attribute.TNEFAttribute;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attribute ");

        $r3 = r2.<org.apache.poi.hmef.attribute.TNEFAttribute: org.apache.poi.hmef.attribute.TNEFProperty property>;

        $r4 = virtualinvoke $r3.<org.apache.poi.hmef.attribute.TNEFProperty: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", type=");

        $i0 = r2.<org.apache.poi.hmef.attribute.TNEFAttribute: int type>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data length=");

        $r9 = r2.<org.apache.poi.hmef.attribute.TNEFAttribute: byte[] data>;

        $i1 = lengthof $r9;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }
}
