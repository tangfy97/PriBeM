public class org.jdesktop.swingx.plaf.TaskPaneContainerAddon extends org.jdesktop.swingx.plaf.AbstractComponentAddon
{

    public void <init>()
    {
        org.jdesktop.swingx.plaf.TaskPaneContainerAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.TaskPaneContainerAddon;

        specialinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void <init>(java.lang.String)>("JXTaskPaneContainer");

        return;
    }

    protected void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        java.awt.Color $r4, $r5;
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        javax.swing.plaf.BorderUIResource $r6;
        javax.swing.plaf.ColorUIResource $r3;
        org.jdesktop.swingx.plaf.TaskPaneContainerAddon r0;
        javax.swing.border.Border $r7;
        org.jdesktop.swingx.plaf.DefaultsList r2;

        r0 := @this: org.jdesktop.swingx.plaf.TaskPaneContainerAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        specialinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addBasicDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("swingx/TaskPaneContainerUI", "org.jdesktop.swingx.plaf.basic.BasicTaskPaneContainerUI");

        $r3 = new javax.swing.plaf.ColorUIResource;

        $r4 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("#005C5C");

        specialinvoke $r3.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r4);

        $r5 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getSafeColor(java.lang.Object,java.awt.Color)>("Desktop.background", $r3);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.background", $r5);

        $r6 = new javax.swing.plaf.BorderUIResource;

        $r7 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>(10, 10, 0, 10);

        specialinvoke $r6.<javax.swing.plaf.BorderUIResource: void <init>(javax.swing.border.Border)>($r7);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.border", $r6);

        return;
    }

    protected void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.DefaultsList r2;
        javax.swing.plaf.ColorUIResource $r3;
        org.jdesktop.swingx.plaf.TaskPaneContainerAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.TaskPaneContainerAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        specialinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addMetalDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        $r3 = staticinvoke <javax.swing.plaf.metal.MetalLookAndFeel: javax.swing.plaf.ColorUIResource getDesktopColor()>();

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.background", $r3);

        return;
    }

    protected void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        java.awt.Color $r12, $r16, $r17, $r19, $r20, $r22, $r23, r25, r26;
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.PainterUIResource $r27;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.swing.plaf.ColorUIResource $r6, $r7, $r8, $r10, $r15, $r18, $r21, r24;
        java.awt.Toolkit $r9;
        org.jdesktop.swingx.plaf.TaskPaneContainerAddon r0;
        java.lang.String $r3, $r4, $r5;
        org.jdesktop.swingx.painter.MattePainter $r28;
        org.jdesktop.swingx.plaf.DefaultsList r2;
        java.awt.GradientPaint $r29;
        java.lang.Object $r11, $r13, $r14;

        r0 := @this: org.jdesktop.swingx.plaf.TaskPaneContainerAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        specialinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addWindowsDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        $z0 = r1 instanceof org.jdesktop.swingx.plaf.windows.WindowsClassicLookAndFeelAddons;

        if $z0 == 0 goto label1;

        $r21 = new javax.swing.plaf.ColorUIResource;

        $r22 = staticinvoke <java.awt.Color: java.awt.Color decode(java.lang.String)>("#005C5C");

        specialinvoke $r21.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r22);

        $r23 = staticinvoke <org.jdesktop.swingx.plaf.UIManagerExt: java.awt.Color getSafeColor(java.lang.Object,java.awt.Color)>("List.background", $r21);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.background", $r23);

        goto label6;

     label1:
        $z1 = r1 instanceof org.jdesktop.swingx.plaf.windows.WindowsLookAndFeelAddons;

        if $z1 == 0 goto label6;

        $r3 = staticinvoke <org.jdesktop.swingx.util.OS: java.lang.String getWindowsVisualStyle()>();

        $r4 = "HomeStead";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z2 == 0 goto label2;

        $r18 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r18.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(201, 215, 170);

        r24 = $r18;

        $r19 = new java.awt.Color;

        specialinvoke $r19.<java.awt.Color: void <init>(int,int,int)>(204, 217, 173);

        r25 = $r19;

        $r20 = new java.awt.Color;

        specialinvoke $r20.<java.awt.Color: void <init>(int,int,int)>(165, 189, 132);

        r26 = $r20;

        goto label5;

     label2:
        $r5 = "Metallic";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z3 == 0 goto label3;

        $r15 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r15.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(192, 195, 209);

        r24 = $r15;

        $r16 = new java.awt.Color;

        specialinvoke $r16.<java.awt.Color: void <init>(int,int,int)>(196, 200, 212);

        r25 = $r16;

        $r17 = new java.awt.Color;

        specialinvoke $r17.<java.awt.Color: void <init>(int,int,int)>(177, 179, 200);

        r26 = $r17;

        goto label5;

     label3:
        $z4 = staticinvoke <org.jdesktop.swingx.util.OS: boolean isWindowsVista()>();

        if $z4 == 0 goto label4;

        $r9 = staticinvoke <java.awt.Toolkit: java.awt.Toolkit getDefaultToolkit()>();

        $r10 = new javax.swing.plaf.ColorUIResource;

        $r11 = virtualinvoke $r9.<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>("win.3d.backgroundColor");

        $r12 = (java.awt.Color) $r11;

        specialinvoke $r10.<javax.swing.plaf.ColorUIResource: void <init>(java.awt.Color)>($r12);

        r24 = $r10;

        $r13 = virtualinvoke $r9.<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>("win.frame.activeCaptionColor");

        r25 = (java.awt.Color) $r13;

        $r14 = virtualinvoke $r9.<java.awt.Toolkit: java.lang.Object getDesktopProperty(java.lang.String)>("win.frame.inactiveCaptionColor");

        r26 = (java.awt.Color) $r14;

        goto label5;

     label4:
        $r6 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r6.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(117, 150, 227);

        r24 = $r6;

        $r7 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r7.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(123, 162, 231);

        r25 = $r7;

        $r8 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r8.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(99, 117, 214);

        r26 = $r8;

     label5:
        $r27 = new org.jdesktop.swingx.plaf.PainterUIResource;

        $r28 = new org.jdesktop.swingx.painter.MattePainter;

        $r29 = new java.awt.GradientPaint;

        specialinvoke $r29.<java.awt.GradientPaint: void <init>(float,float,java.awt.Color,float,float,java.awt.Color)>(0.0F, 0.0F, r25, 0.0F, 1.0F, r26);

        specialinvoke $r28.<org.jdesktop.swingx.painter.MattePainter: void <init>(java.awt.Paint,boolean)>($r29, 1);

        specialinvoke $r27.<org.jdesktop.swingx.plaf.PainterUIResource: void <init>(org.jdesktop.swingx.painter.Painter)>($r28);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.backgroundPainter", $r27);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.background", r24);

     label6:
        return;
    }

    protected void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.DefaultsList r2;
        javax.swing.plaf.ColorUIResource $r3;
        org.jdesktop.swingx.plaf.TaskPaneContainerAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.TaskPaneContainerAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        specialinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addMacDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        $r3 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r3.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(238, 238, 238);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.background", $r3);

        return;
    }

    protected void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons, org.jdesktop.swingx.plaf.DefaultsList)
    {
        org.jdesktop.swingx.plaf.LookAndFeelAddons r1;
        org.jdesktop.swingx.plaf.DefaultsList r2;
        javax.swing.plaf.ColorUIResource $r3;
        org.jdesktop.swingx.plaf.TaskPaneContainerAddon r0;

        r0 := @this: org.jdesktop.swingx.plaf.TaskPaneContainerAddon;

        r1 := @parameter0: org.jdesktop.swingx.plaf.LookAndFeelAddons;

        r2 := @parameter1: org.jdesktop.swingx.plaf.DefaultsList;

        specialinvoke r0.<org.jdesktop.swingx.plaf.AbstractComponentAddon: void addNimbusDefaults(org.jdesktop.swingx.plaf.LookAndFeelAddons,org.jdesktop.swingx.plaf.DefaultsList)>(r1, r2);

        $r3 = new javax.swing.plaf.ColorUIResource;

        specialinvoke $r3.<javax.swing.plaf.ColorUIResource: void <init>(int,int,int)>(214, 217, 223);

        virtualinvoke r2.<org.jdesktop.swingx.plaf.DefaultsList: void add(java.lang.Object,java.lang.Object)>("TaskPaneContainer.background", $r3);

        return;
    }
}
