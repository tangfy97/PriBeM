public class org.apache.pdfbox.util.Overlay extends java.lang.Object
{
    private static final java.lang.String XOBJECT_PREFIX;
    private org.apache.pdfbox.util.Overlay$LayoutPage defaultOverlayPage;
    private org.apache.pdfbox.util.Overlay$LayoutPage firstPageOverlayPage;
    private org.apache.pdfbox.util.Overlay$LayoutPage lastPageOverlayPage;
    private org.apache.pdfbox.util.Overlay$LayoutPage oddPageOverlayPage;
    private org.apache.pdfbox.util.Overlay$LayoutPage evenPageOverlayPage;
    private java.util.Map specificPageOverlay;
    private java.util.Map specificPageOverlayPage;
    private org.apache.pdfbox.util.Overlay$Position position;
    private java.lang.String inputFileName;
    private java.lang.String outputFilename;
    private java.lang.String defaultOverlayFilename;
    private java.lang.String firstPageOverlayFilename;
    private java.lang.String lastPageOverlayFilename;
    private java.lang.String oddPageOverlayFilename;
    private java.lang.String evenPageOverlayFilename;

    public void <init>()
    {
        org.apache.pdfbox.util.Overlay r0;
        java.util.HashMap $r1, $r2;
        org.apache.pdfbox.util.Overlay$Position $r3;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlay> = $r1;

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlayPage> = $r2;

        $r3 = <org.apache.pdfbox.util.Overlay$Position: org.apache.pdfbox.util.Overlay$Position BACKGROUND>;

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$Position position> = $r3;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String inputFileName> = null;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String outputFilename> = null;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String defaultOverlayFilename> = null;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String firstPageOverlayFilename> = null;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String lastPageOverlayFilename> = null;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String oddPageOverlayFilename> = null;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String evenPageOverlayFilename> = null;

        return;
    }

    public void overlay(java.util.Map, boolean) throws java.io.IOException, org.apache.pdfbox.exceptions.COSVisitorException
    {
        java.util.Map r8, $r12, $r15, $r16, $r25, $r27, $r49, $r52, $r53;
        org.apache.pdfbox.pdmodel.PDDocument $r2, $r19, $r24, $r32, $r37, $r40, $r43, $r46, $r56, r57, r58, r59, r60, r61, r62;
        java.util.Set $r13, $r50, $r63;
        java.lang.Throwable $r48;
        java.lang.String $r1, $r3, $r4, $r5, $r6, $r7, $r11, $r23, $r30, $r31, $r35, $r36, $r39, $r42, $r45;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r9;
        org.apache.pdfbox.util.Overlay r0;
        java.util.Map$Entry r21, r65, r66;
        java.io.File $r34;
        org.apache.pdfbox.util.Overlay$LayoutPage $r29, $r33, $r38, $r41, $r44, $r47;
        boolean z0, $z1, $z2, $z3;
        java.util.List $r10;
        java.util.Iterator $r14, $r51, $r64;
        java.lang.Object $r17, $r18, $r20, $r22, $r26, $r28, $r54, $r55;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r8 := @parameter0: java.util.Map;

        z0 := @parameter1: boolean;

        r57 = null;

        r58 = null;

        r59 = null;

        r60 = null;

        r61 = null;

        r62 = null;

     label01:
        $r1 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String inputFileName>;

        $r2 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>($r1);

        r57 = $r2;

        $r3 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String defaultOverlayFilename>;

        if $r3 == null goto label02;

        $r45 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String defaultOverlayFilename>;

        $r46 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String,boolean)>($r45, z0);

        r58 = $r46;

        $r47 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)>($r46);

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage defaultOverlayPage> = $r47;

     label02:
        $r4 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String firstPageOverlayFilename>;

        if $r4 == null goto label03;

        $r42 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String firstPageOverlayFilename>;

        $r43 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String,boolean)>($r42, z0);

        r59 = $r43;

        $r44 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)>($r43);

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage firstPageOverlayPage> = $r44;

     label03:
        $r5 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String lastPageOverlayFilename>;

        if $r5 == null goto label04;

        $r39 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String lastPageOverlayFilename>;

        $r40 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String,boolean)>($r39, z0);

        r60 = $r40;

        $r41 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)>($r40);

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage lastPageOverlayPage> = $r41;

     label04:
        $r6 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String oddPageOverlayFilename>;

        if $r6 == null goto label05;

        $r36 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String oddPageOverlayFilename>;

        $r37 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String,boolean)>($r36, z0);

        r61 = $r37;

        $r38 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)>($r37);

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage oddPageOverlayPage> = $r38;

     label05:
        $r7 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String evenPageOverlayFilename>;

        if $r7 == null goto label08;

        if z0 == 0 goto label06;

        $r34 = new java.io.File;

        $r35 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String evenPageOverlayFilename>;

        specialinvoke $r34.<java.io.File: void <init>(java.lang.String)>($r35);

        r62 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.File,org.apache.pdfbox.io.RandomAccess)>($r34, null);

        goto label07;

     label06:
        $r30 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String evenPageOverlayFilename>;

        r62 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>($r30);

     label07:
        $r31 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String evenPageOverlayFilename>;

        $r32 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String,boolean)>($r31, z0);

        r62 = $r32;

        $r33 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)>($r32);

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage evenPageOverlayPage> = $r33;

     label08:
        $r63 = interfaceinvoke r8.<java.util.Map: java.util.Set entrySet()>();

        $r64 = interfaceinvoke $r63.<java.util.Set: java.util.Iterator iterator()>();

     label09:
        $z1 = interfaceinvoke $r64.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label10;

        $r20 = interfaceinvoke $r64.<java.util.Iterator: java.lang.Object next()>();

        r21 = (java.util.Map$Entry) $r20;

        $r22 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r23 = (java.lang.String) $r22;

        $r24 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String,boolean)>($r23, z0);

        $r25 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlay>;

        $r26 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        interfaceinvoke $r25.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r26, $r24);

        $r27 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlayPage>;

        $r28 = interfaceinvoke r21.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r29 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument)>($r24);

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r29);

        goto label09;

     label10:
        $r9 = virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        specialinvoke r0.<org.apache.pdfbox.util.Overlay: void processPages(java.util.List)>($r10);

        $r11 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String outputFilename>;

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void save(java.lang.String)>($r11);

        goto label15;

     label11:
        goto label14;

     label12:
        $r48 := @caughtexception;

        goto label24;

     label13:
        throw $r48;

     label14:
        return;

     label15:
        if $r2 == null goto label16;

        virtualinvoke $r2.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label16:
        if r58 == null goto label17;

        virtualinvoke r58.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label17:
        if r59 == null goto label18;

        virtualinvoke r59.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label18:
        if r60 == null goto label19;

        virtualinvoke r60.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label19:
        if r61 == null goto label20;

        virtualinvoke r61.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label20:
        if r62 == null goto label21;

        virtualinvoke r62.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label21:
        $r12 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlay>;

        $r13 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        $r14 = interfaceinvoke $r13.<java.util.Set: java.util.Iterator iterator()>();

     label22:
        $z2 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label23;

        $r17 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r65 = (java.util.Map$Entry) $r17;

        $r18 = interfaceinvoke r65.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (org.apache.pdfbox.pdmodel.PDDocument) $r18;

        virtualinvoke $r19.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label22;

     label23:
        $r15 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlay>;

        interfaceinvoke $r15.<java.util.Map: void clear()>();

        $r16 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlayPage>;

        interfaceinvoke $r16.<java.util.Map: void clear()>();

        goto label11;

     label24:
        if r57 == null goto label25;

        virtualinvoke r57.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label25:
        if r58 == null goto label26;

        virtualinvoke r58.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label26:
        if r59 == null goto label27;

        virtualinvoke r59.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label27:
        if r60 == null goto label28;

        virtualinvoke r60.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label28:
        if r61 == null goto label29;

        virtualinvoke r61.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label29:
        if r62 == null goto label30;

        virtualinvoke r62.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

     label30:
        $r49 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlay>;

        $r50 = interfaceinvoke $r49.<java.util.Map: java.util.Set entrySet()>();

        $r51 = interfaceinvoke $r50.<java.util.Set: java.util.Iterator iterator()>();

     label31:
        $z3 = interfaceinvoke $r51.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label32;

        $r54 = interfaceinvoke $r51.<java.util.Iterator: java.lang.Object next()>();

        r66 = (java.util.Map$Entry) $r54;

        $r55 = interfaceinvoke r66.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r56 = (org.apache.pdfbox.pdmodel.PDDocument) $r55;

        virtualinvoke $r56.<org.apache.pdfbox.pdmodel.PDDocument: void close()>();

        goto label31;

     label32:
        $r52 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlay>;

        interfaceinvoke $r52.<java.util.Map: void clear()>();

        $r53 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlayPage>;

        interfaceinvoke $r53.<java.util.Map: void clear()>();

        goto label13;

        catch java.lang.Throwable from label01 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
    }

    private org.apache.pdfbox.pdmodel.PDDocument loadPDF(java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.pdfbox.util.Overlay r2;
        org.apache.pdfbox.pdmodel.PDDocument r3;
        java.lang.String r0;
        java.io.File $r1;
        boolean z0;

        r2 := @this: org.apache.pdfbox.util.Overlay;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        if z0 == 0 goto label1;

        $r1 = new java.io.File;

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String)>(r0);

        r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument loadNonSeq(java.io.File,org.apache.pdfbox.io.RandomAccess)>($r1, null);

        goto label2;

     label1:
        r3 = staticinvoke <org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocument load(java.lang.String)>(r0);

     label2:
        return r3;
    }

    private org.apache.pdfbox.util.Overlay$LayoutPage getLayoutPage(org.apache.pdfbox.pdmodel.PDDocument) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSStream $r12;
        org.apache.pdfbox.pdmodel.PDDocumentCatalog $r1;
        org.apache.pdfbox.cos.COSName $r6;
        org.apache.pdfbox.util.Overlay r11;
        org.apache.pdfbox.pdmodel.PDDocument r0;
        org.apache.pdfbox.pdmodel.PDResources $r8, $r14, r15;
        org.apache.pdfbox.cos.COSDictionary $r5, $r13;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r10;
        java.util.List $r2;
        org.apache.pdfbox.cos.COSBase $r7;
        org.apache.pdfbox.util.Overlay$LayoutPage $r9;
        java.lang.Object $r3;
        org.apache.pdfbox.pdmodel.PDPage r4;

        r11 := @this: org.apache.pdfbox.util.Overlay;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDDocument;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDDocument: org.apache.pdfbox.pdmodel.PDDocumentCatalog getDocumentCatalog()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDDocumentCatalog: java.util.List getAllPages()>();

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(0);

        r4 = (org.apache.pdfbox.pdmodel.PDPage) $r3;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        $r7 = virtualinvoke $r5.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r6);

        $r8 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        r15 = $r8;

        if $r8 != null goto label1;

        $r14 = new org.apache.pdfbox.pdmodel.PDResources;

        specialinvoke $r14.<org.apache.pdfbox.pdmodel.PDResources: void <init>()>();

        r15 = $r14;

     label1:
        $r9 = new org.apache.pdfbox.util.Overlay$LayoutPage;

        $r10 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>();

        $r12 = specialinvoke r11.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.cos.COSStream createContentStream(org.apache.pdfbox.cos.COSBase)>($r7);

        $r13 = virtualinvoke r15.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        specialinvoke $r9.<org.apache.pdfbox.util.Overlay$LayoutPage: void <init>(org.apache.pdfbox.pdmodel.common.PDRectangle,org.apache.pdfbox.cos.COSStream,org.apache.pdfbox.cos.COSDictionary,org.apache.pdfbox.util.Overlay$1)>($r10, $r12, $r13, null);

        return $r9;
    }

    private org.apache.pdfbox.cos.COSStream createContentStream(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        java.io.OutputStream $r5;
        org.apache.pdfbox.cos.COSName $r7;
        byte[] r11;
        org.apache.pdfbox.util.Overlay r0;
        org.apache.pdfbox.io.RandomAccessBuffer $r4;
        java.util.Iterator $r6;
        java.util.List $r2;
        org.apache.pdfbox.cos.COSBase r1;
        int $i0;
        java.lang.Object $r8;
        org.apache.pdfbox.cos.COSStream $r3, r9;
        boolean $z0;
        java.io.InputStream $r10;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r2 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>(r1);

        $r3 = new org.apache.pdfbox.cos.COSStream;

        $r4 = new org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke $r4.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>()>();

        specialinvoke $r3.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r4);

        $r5 = virtualinvoke $r3.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r6 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r8 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.pdfbox.cos.COSStream) $r8;

        $r10 = virtualinvoke r9.<org.apache.pdfbox.cos.COSStream: java.io.InputStream getUnfilteredStream()>();

        r11 = newarray (byte)[2048];

     label2:
        $i0 = virtualinvoke $r10.<java.io.InputStream: int read(byte[])>(r11);

        if $i0 <= 0 goto label3;

        virtualinvoke $r5.<java.io.OutputStream: void write(byte[],int,int)>(r11, 0, $i0);

        goto label2;

     label3:
        virtualinvoke $r5.<java.io.OutputStream: void flush()>();

        goto label1;

     label4:
        virtualinvoke $r5.<java.io.OutputStream: void close()>();

        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE>;

        virtualinvoke $r3.<org.apache.pdfbox.cos.COSStream: void setFilters(org.apache.pdfbox.cos.COSBase)>($r7);

        return $r3;
    }

    private java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray $r13;
        org.apache.pdfbox.cos.COSObject $r10;
        java.util.ArrayList $r0;
        java.lang.String $r6, $r8;
        org.apache.pdfbox.cos.COSStream $r18;
        boolean $z0, $z1, $z2, $z3;
        org.apache.pdfbox.util.Overlay r9;
        java.util.Iterator $r14;
        java.io.IOException $r2;
        java.util.List $r12, $r17;
        org.apache.pdfbox.cos.COSBase r1, $r11, r16;
        java.lang.StringBuilder $r3, $r4, $r7;
        java.lang.Class $r5;
        java.lang.Object $r15;

        r9 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: org.apache.pdfbox.cos.COSBase;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $z0 = r1 instanceof org.apache.pdfbox.cos.COSStream;

        if $z0 == 0 goto label1;

        $r18 = (org.apache.pdfbox.cos.COSStream) r1;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r18);

        goto label6;

     label1:
        $z1 = r1 instanceof org.apache.pdfbox.cos.COSArray;

        if $z1 == 0 goto label4;

        $r13 = (org.apache.pdfbox.cos.COSArray) r1;

        $r14 = virtualinvoke $r13.<org.apache.pdfbox.cos.COSArray: java.util.Iterator iterator()>();

     label2:
        $z3 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label3;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.apache.pdfbox.cos.COSBase) $r15;

        $r17 = specialinvoke r9.<org.apache.pdfbox.util.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>(r16);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r17);

        goto label2;

     label3:
        goto label6;

     label4:
        $z2 = r1 instanceof org.apache.pdfbox.cos.COSObject;

        if $z2 == 0 goto label5;

        $r10 = (org.apache.pdfbox.cos.COSObject) r1;

        $r11 = virtualinvoke $r10.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        $r12 = specialinvoke r9.<org.apache.pdfbox.util.Overlay: java.util.List createContentStreamList(org.apache.pdfbox.cos.COSBase)>($r11);

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r12);

        goto label6;

     label5:
        $r2 = new java.io.IOException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Contents are unknown type:");

        $r5 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r8);

        throw $r2;

     label6:
        return $r0;
    }

    private void processPages(java.util.List) throws java.io.IOException
    {
        int[] $r10;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.pdfbox.cos.COSDictionary $r4;
        java.util.List r0;
        org.apache.pdfbox.cos.COSBase $r6;
        org.apache.pdfbox.pdmodel.PDPage r3;
        java.lang.StringBuilder $r12, $r13, $r16, $r21, $r22, $r25, $r30, $r31, $r33;
        org.apache.pdfbox.cos.COSArray $r7, $r18, $r27;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        java.lang.String $r15, $r17, $r24, $r26, $r34;
        org.apache.pdfbox.cos.COSStream $r19, $r28;
        org.apache.pdfbox.cos.COSName $r5, $r35;
        org.apache.pdfbox.util.Overlay r8;
        java.util.Iterator $r1;
        java.io.IOException $r11, $r20, $r29;
        org.apache.pdfbox.util.Overlay$Position $r9, $r32;
        java.lang.Object $r2;
        java.lang.Class $r14, $r23;

        r8 := @this: org.apache.pdfbox.util.Overlay;

        r0 := @parameter0: java.util.List;

        i6 = 0;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label11;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.pdfbox.pdmodel.PDPage) $r2;

        $r4 = virtualinvoke r3.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        $r6 = virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r5);

        $r7 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r7.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r10 = <org.apache.pdfbox.util.Overlay$1: int[] $SwitchMap$org$apache$pdfbox$util$Overlay$Position>;

        $r9 = r8.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$Position position>;

        $i0 = virtualinvoke $r9.<org.apache.pdfbox.util.Overlay$Position: int ordinal()>();

        $i1 = $r10[$i0];

        lookupswitch($i1)
        {
            case 1: goto label02;
            case 2: goto label06;
            default: goto label09;
        };

     label02:
        $r19 = specialinvoke r8.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.cos.COSStream createStream(java.lang.String)>("q\n");

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19);

        $z3 = $r6 instanceof org.apache.pdfbox.cos.COSStream;

        if $z3 == 0 goto label03;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6);

        goto label05;

     label03:
        $z4 = $r6 instanceof org.apache.pdfbox.cos.COSArray;

        if $z4 == 0 goto label04;

        $r27 = (org.apache.pdfbox.cos.COSArray) $r6;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>($r27);

        goto label05;

     label04:
        $r20 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown content type:");

        $r23 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r24 = virtualinvoke $r23.<java.lang.Class: java.lang.String getName()>();

        $r25 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r26);

        throw $r20;

     label05:
        $r28 = specialinvoke r8.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.cos.COSStream createStream(java.lang.String)>("Q\n");

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r28);

        $i4 = i6 + 1;

        $i5 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r8.<org.apache.pdfbox.util.Overlay: void overlayPage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage,int,int)>($r7, r3, $i4, $i5);

        goto label10;

     label06:
        $i2 = i6 + 1;

        $i3 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke r8.<org.apache.pdfbox.util.Overlay: void overlayPage(org.apache.pdfbox.cos.COSArray,org.apache.pdfbox.pdmodel.PDPage,int,int)>($r7, r3, $i2, $i3);

        $z1 = $r6 instanceof org.apache.pdfbox.cos.COSStream;

        if $z1 == 0 goto label07;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r6);

        goto label10;

     label07:
        $z2 = $r6 instanceof org.apache.pdfbox.cos.COSArray;

        if $z2 == 0 goto label08;

        $r18 = (org.apache.pdfbox.cos.COSArray) $r6;

        virtualinvoke $r7.<org.apache.pdfbox.cos.COSArray: void addAll(org.apache.pdfbox.cos.COSArray)>($r18);

        goto label10;

     label08:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown content type:");

        $r14 = virtualinvoke $r6.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r17);

        throw $r11;

     label09:
        $r29 = new java.io.IOException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unknown type of position:");

        $r32 = r8.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$Position position>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.io.IOException: void <init>(java.lang.String)>($r34);

        throw $r29;

     label10:
        $r35 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CONTENTS>;

        virtualinvoke $r4.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r35, $r7);

        i6 = i6 + 1;

        goto label01;

     label11:
        return;
    }

    private void overlayPage(org.apache.pdfbox.cos.COSArray, org.apache.pdfbox.pdmodel.PDPage, int, int) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSArray r8;
        java.lang.Integer $r2, $r16;
        java.util.Map $r1, $r15;
        int i0, i1, $i2, $i3;
        java.lang.String $r7;
        org.apache.pdfbox.cos.COSStream $r6, $r9;
        boolean $z0;
        org.apache.pdfbox.util.Overlay r0;
        org.apache.pdfbox.pdmodel.PDResources $r5, $r10;
        org.apache.pdfbox.util.Overlay$LayoutPage $r3, $r11, $r12, $r13, $r14, r18;
        org.apache.pdfbox.pdmodel.PDPage r4;
        java.lang.Object $r17;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r8 := @parameter0: org.apache.pdfbox.cos.COSArray;

        r4 := @parameter1: org.apache.pdfbox.pdmodel.PDPage;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r18 = null;

        $r1 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlayPage>;

        $r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r15 = r0.<org.apache.pdfbox.util.Overlay: java.util.Map specificPageOverlayPage>;

        $r16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        $r17 = interfaceinvoke $r15.<java.util.Map: java.lang.Object get(java.lang.Object)>($r16);

        r18 = (org.apache.pdfbox.util.Overlay$LayoutPage) $r17;

        goto label6;

     label1:
        if i0 != 1 goto label2;

        $r14 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage firstPageOverlayPage>;

        if $r14 == null goto label2;

        r18 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage firstPageOverlayPage>;

        goto label6;

     label2:
        if i0 != i1 goto label3;

        $r13 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage lastPageOverlayPage>;

        if $r13 == null goto label3;

        r18 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage lastPageOverlayPage>;

        goto label6;

     label3:
        $i2 = i0 % 2;

        if $i2 != 1 goto label4;

        $r12 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage oddPageOverlayPage>;

        if $r12 == null goto label4;

        r18 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage oddPageOverlayPage>;

        goto label6;

     label4:
        $i3 = i0 % 2;

        if $i3 != 0 goto label5;

        $r11 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage evenPageOverlayPage>;

        if $r11 == null goto label5;

        r18 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage evenPageOverlayPage>;

        goto label6;

     label5:
        $r3 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage defaultOverlayPage>;

        if $r3 == null goto label6;

        r18 = r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$LayoutPage defaultOverlayPage>;

     label6:
        if r18 == null goto label8;

        $r5 = virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        if $r5 != null goto label7;

        $r10 = new org.apache.pdfbox.pdmodel.PDResources;

        specialinvoke $r10.<org.apache.pdfbox.pdmodel.PDResources: void <init>()>();

        virtualinvoke r4.<org.apache.pdfbox.pdmodel.PDPage: void setResources(org.apache.pdfbox.pdmodel.PDResources)>($r10);

     label7:
        $r6 = staticinvoke <org.apache.pdfbox.util.Overlay$LayoutPage: org.apache.pdfbox.cos.COSStream access$100(org.apache.pdfbox.util.Overlay$LayoutPage)>(r18);

        $r7 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: java.lang.String createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.util.Overlay$LayoutPage,org.apache.pdfbox.cos.COSStream)>(r4, r18, $r6);

        $r9 = specialinvoke r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage,org.apache.pdfbox.util.Overlay$LayoutPage,java.lang.String)>(r4, r18, $r7);

        virtualinvoke r8.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r9);

     label8:
        return;
    }

    private java.lang.String createOverlayXObject(org.apache.pdfbox.pdmodel.PDPage, org.apache.pdfbox.util.Overlay$LayoutPage, org.apache.pdfbox.cos.COSStream)
    {
        java.util.Map $r5;
        org.apache.pdfbox.pdmodel.PDResources $r1;
        org.apache.pdfbox.cos.COSDictionary $r2, $r10, $r32, $r33, r36;
        org.apache.pdfbox.cos.COSBase $r4;
        float $f0, $f1;
        org.apache.pdfbox.pdmodel.PDPage r0;
        org.apache.pdfbox.cos.COSArray $r16, $r24;
        long $l1, $l3;
        org.apache.pdfbox.cos.COSInteger $r17, $r18, $r19, $r20, $r21, $r22, $r25, $r26, $r28, $r30;
        int $i0, $i2;
        java.lang.String $r6;
        org.apache.pdfbox.cos.COSStream r7;
        org.apache.pdfbox.cos.COSName $r3, $r9, $r11, $r12, $r13, $r14, $r15, $r23, $r31, $r34;
        org.apache.pdfbox.util.Overlay r35;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r27, $r29;
        org.apache.pdfbox.util.Overlay$LayoutPage r8;

        r35 := @this: org.apache.pdfbox.util.Overlay;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        r8 := @parameter1: org.apache.pdfbox.util.Overlay$LayoutPage;

        r7 := @parameter2: org.apache.pdfbox.cos.COSStream;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.PDResources findResources()>();

        $r2 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r3 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        $r4 = virtualinvoke $r2.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r3);

        r36 = (org.apache.pdfbox.cos.COSDictionary) $r4;

        if r36 != null goto label1;

        $r32 = new org.apache.pdfbox.cos.COSDictionary;

        specialinvoke $r32.<org.apache.pdfbox.cos.COSDictionary: void <init>()>();

        r36 = $r32;

        $r33 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDResources: org.apache.pdfbox.cos.COSDictionary getCOSDictionary()>();

        $r34 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        virtualinvoke $r33.<org.apache.pdfbox.cos.COSDictionary: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r34, $r32);

     label1:
        $r5 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.PDResources: java.util.Map getXObjects()>();

        $r6 = staticinvoke <org.apache.pdfbox.util.Overlay: java.lang.String getNextUniqueKey(java.util.Map,java.lang.String)>($r5, "OL");

        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName RESOURCES>;

        $r10 = staticinvoke <org.apache.pdfbox.util.Overlay$LayoutPage: org.apache.pdfbox.cos.COSDictionary access$200(org.apache.pdfbox.util.Overlay$LayoutPage)>(r8);

        virtualinvoke r7.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r9, $r10);

        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName XOBJECT>;

        virtualinvoke r7.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r12, $r11);

        $r14 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r13 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FORM>;

        virtualinvoke r7.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r14, $r13);

        $r15 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FORMTYPE>;

        virtualinvoke r7.<org.apache.pdfbox.cos.COSStream: void setInt(org.apache.pdfbox.cos.COSName,int)>($r15, 1);

        $r16 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r16.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r17 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(1L);

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r17);

        $r18 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(0L);

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r18);

        $r19 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(0L);

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r19);

        $r20 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(1L);

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r20);

        $r21 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(0L);

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r21);

        $r22 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(0L);

        virtualinvoke $r16.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r22);

        $r23 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MATRIX>;

        virtualinvoke r7.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r23, $r16);

        $r24 = new org.apache.pdfbox.cos.COSArray;

        specialinvoke $r24.<org.apache.pdfbox.cos.COSArray: void <init>()>();

        $r25 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(0L);

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r25);

        $r26 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>(0L);

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r26);

        $r27 = staticinvoke <org.apache.pdfbox.util.Overlay$LayoutPage: org.apache.pdfbox.pdmodel.common.PDRectangle access$300(org.apache.pdfbox.util.Overlay$LayoutPage)>(r8);

        $f0 = virtualinvoke $r27.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $i0 = (int) $f0;

        $l1 = (long) $i0;

        $r28 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l1);

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r28);

        $r29 = staticinvoke <org.apache.pdfbox.util.Overlay$LayoutPage: org.apache.pdfbox.pdmodel.common.PDRectangle access$300(org.apache.pdfbox.util.Overlay$LayoutPage)>(r8);

        $f1 = virtualinvoke $r29.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $i2 = (int) $f1;

        $l3 = (long) $i2;

        $r30 = staticinvoke <org.apache.pdfbox.cos.COSInteger: org.apache.pdfbox.cos.COSInteger get(long)>($l3);

        virtualinvoke $r24.<org.apache.pdfbox.cos.COSArray: void add(org.apache.pdfbox.cos.COSBase)>($r30);

        $r31 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName BBOX>;

        virtualinvoke r7.<org.apache.pdfbox.cos.COSStream: void setItem(org.apache.pdfbox.cos.COSName,org.apache.pdfbox.cos.COSBase)>($r31, $r24);

        virtualinvoke r36.<org.apache.pdfbox.cos.COSDictionary: void setItem(java.lang.String,org.apache.pdfbox.cos.COSBase)>($r6, r7);

        return $r6;
    }

    private static java.lang.String getNextUniqueKey(java.util.Map, java.lang.String)
    {
        java.util.Map r0;
        int i0;
        java.lang.StringBuilder $r1, $r3, $r4, $r6, $r7, $r8;
        java.lang.Object $r10;
        java.lang.String r2, $r5, $r9;

        r0 := @parameter0: java.util.Map;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

     label1:
        if r0 == null goto label2;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        $r10 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r9);

        if $r10 == null goto label2;

        i0 = i0 + 1;

        goto label1;

     label2:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private org.apache.pdfbox.cos.COSStream createOverlayStream(org.apache.pdfbox.pdmodel.PDPage, org.apache.pdfbox.util.Overlay$LayoutPage, java.lang.String) throws java.io.IOException
    {
        java.lang.String r16, $r19;
        org.apache.pdfbox.cos.COSStream $r20;
        org.apache.pdfbox.util.Overlay r5;
        org.apache.pdfbox.pdmodel.common.PDRectangle $r1, $r3, $r4;
        org.apache.pdfbox.util.Overlay$LayoutPage r2;
        float $f0, $f1, $f2, f3, $f4, $f5, $f6, f7;
        org.apache.pdfbox.pdmodel.PDPage r0;
        java.lang.StringBuilder $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r17, $r18;

        r5 := @this: org.apache.pdfbox.util.Overlay;

        r0 := @parameter0: org.apache.pdfbox.pdmodel.PDPage;

        r2 := @parameter1: org.apache.pdfbox.util.Overlay$LayoutPage;

        r16 := @parameter2: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.pdfbox.pdmodel.PDPage: org.apache.pdfbox.pdmodel.common.PDRectangle getMediaBox()>();

        $f0 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $r3 = staticinvoke <org.apache.pdfbox.util.Overlay$LayoutPage: org.apache.pdfbox.pdmodel.common.PDRectangle access$300(org.apache.pdfbox.util.Overlay$LayoutPage)>(r2);

        $f1 = virtualinvoke $r3.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getWidth()>();

        $f2 = $f0 - $f1;

        f3 = $f2 / 2.0F;

        $f4 = virtualinvoke $r1.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $r4 = staticinvoke <org.apache.pdfbox.util.Overlay$LayoutPage: org.apache.pdfbox.pdmodel.common.PDRectangle access$300(org.apache.pdfbox.util.Overlay$LayoutPage)>(r2);

        $f5 = virtualinvoke $r4.<org.apache.pdfbox.pdmodel.common.PDRectangle: float getHeight()>();

        $f6 = $f4 - $f5;

        f7 = $f6 / 2.0F;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("q\nq ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(1.0F);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" 0 0 ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(1.0F);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f3);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(f7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" cm /");

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" Do Q\nQ\n");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = specialinvoke r5.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.cos.COSStream createStream(java.lang.String)>($r19);

        return $r20;
    }

    private org.apache.pdfbox.cos.COSStream createStream(java.lang.String) throws java.io.IOException
    {
        java.io.OutputStream $r2;
        org.apache.pdfbox.cos.COSName $r5;
        byte[] $r4;
        org.apache.pdfbox.util.Overlay r6;
        org.apache.pdfbox.io.RandomAccessBuffer $r1;
        java.lang.String r3;
        org.apache.pdfbox.cos.COSStream $r0;

        r6 := @this: org.apache.pdfbox.util.Overlay;

        r3 := @parameter0: java.lang.String;

        $r0 = new org.apache.pdfbox.cos.COSStream;

        $r1 = new org.apache.pdfbox.io.RandomAccessBuffer;

        specialinvoke $r1.<org.apache.pdfbox.io.RandomAccessBuffer: void <init>()>();

        specialinvoke $r0.<org.apache.pdfbox.cos.COSStream: void <init>(org.apache.pdfbox.io.RandomAccess)>($r1);

        $r2 = virtualinvoke $r0.<org.apache.pdfbox.cos.COSStream: java.io.OutputStream createUnfilteredStream()>();

        $r4 = virtualinvoke r3.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        virtualinvoke $r2.<java.io.OutputStream: void write(byte[])>($r4);

        virtualinvoke $r2.<java.io.OutputStream: void close()>();

        $r5 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FLATE_DECODE>;

        virtualinvoke $r0.<org.apache.pdfbox.cos.COSStream: void setFilters(org.apache.pdfbox.cos.COSBase)>($r5);

        return $r0;
    }

    public void setOverlayPosition(org.apache.pdfbox.util.Overlay$Position)
    {
        org.apache.pdfbox.util.Overlay r0;
        org.apache.pdfbox.util.Overlay$Position r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: org.apache.pdfbox.util.Overlay$Position;

        r0.<org.apache.pdfbox.util.Overlay: org.apache.pdfbox.util.Overlay$Position position> = r1;

        return;
    }

    public void setInputFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String inputFileName> = r1;

        return;
    }

    public java.lang.String getInputFile()
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String $r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        $r1 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String inputFileName>;

        return $r1;
    }

    public void setOutputFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String outputFilename> = r1;

        return;
    }

    public java.lang.String getOutputFile()
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String $r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        $r1 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String outputFilename>;

        return $r1;
    }

    public void setDefaultOverlayFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String defaultOverlayFilename> = r1;

        return;
    }

    public java.lang.String getDefaultOverlayFile()
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String $r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        $r1 = r0.<org.apache.pdfbox.util.Overlay: java.lang.String defaultOverlayFilename>;

        return $r1;
    }

    public void setFirstPageOverlayFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String firstPageOverlayFilename> = r1;

        return;
    }

    public void setLastPageOverlayFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String lastPageOverlayFilename> = r1;

        return;
    }

    public void setOddPageOverlayFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String oddPageOverlayFilename> = r1;

        return;
    }

    public void setEvenPageOverlayFile(java.lang.String)
    {
        org.apache.pdfbox.util.Overlay r0;
        java.lang.String r1;

        r0 := @this: org.apache.pdfbox.util.Overlay;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.pdfbox.util.Overlay: java.lang.String evenPageOverlayFilename> = r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.pdfbox.util.Overlay: java.lang.String XOBJECT_PREFIX> = "OL";

        return;
    }
}
