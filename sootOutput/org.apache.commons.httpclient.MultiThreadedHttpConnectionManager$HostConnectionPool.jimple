class org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool extends java.lang.Object
{
    public org.apache.commons.httpclient.HostConfiguration hostConfiguration;
    public java.util.LinkedList freeConnections;
    public java.util.LinkedList waitingThreads;
    public int numConnections;

    private void <init>()
    {
        org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool r0;
        java.util.LinkedList $r1, $r2;

        r0 := @this: org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool: java.util.LinkedList freeConnections> = $r1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool: java.util.LinkedList waitingThreads> = $r2;

        r0.<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool: int numConnections> = 0;

        return;
    }

    void <init>(org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1)
    {
        org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool r0;
        org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1 r1;

        r0 := @this: org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool;

        r1 := @parameter0: org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$1;

        specialinvoke r0.<org.apache.commons.httpclient.MultiThreadedHttpConnectionManager$HostConnectionPool: void <init>()>();

        return;
    }
}
