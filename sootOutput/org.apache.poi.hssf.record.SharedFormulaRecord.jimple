public final class org.apache.poi.hssf.record.SharedFormulaRecord extends org.apache.poi.hssf.record.SharedValueRecordBase
{
    public static final short sid;
    private int field_5_reserved;
    private org.apache.poi.ss.formula.Formula field_7_parsed_expr;

    public void <init>()
    {
        org.apache.poi.hssf.record.SharedFormulaRecord r0;
        org.apache.poi.hssf.util.CellRangeAddress8Bit $r1;

        r0 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        $r1 = new org.apache.poi.hssf.util.CellRangeAddress8Bit;

        specialinvoke $r1.<org.apache.poi.hssf.util.CellRangeAddress8Bit: void <init>(int,int,int,int)>(0, 0, 0, 0);

        specialinvoke r0.<org.apache.poi.hssf.record.SharedFormulaRecord: void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)>($r1);

        return;
    }

    private void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)
    {
        org.apache.poi.ss.formula.Formula $r3;
        org.apache.poi.ss.formula.ptg.Ptg[] $r2;
        org.apache.poi.hssf.record.SharedFormulaRecord r0;
        org.apache.poi.hssf.util.CellRangeAddress8Bit r1;

        r0 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        r1 := @parameter0: org.apache.poi.hssf.util.CellRangeAddress8Bit;

        specialinvoke r0.<org.apache.poi.hssf.record.SharedValueRecordBase: void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)>(r1);

        $r2 = <org.apache.poi.ss.formula.ptg.Ptg: org.apache.poi.ss.formula.ptg.Ptg[] EMPTY_PTG_ARRAY>;

        $r3 = staticinvoke <org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula create(org.apache.poi.ss.formula.ptg.Ptg[])>($r2);

        r0.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr> = $r3;

        return;
    }

    public void <init>(org.apache.poi.hssf.record.RecordInputStream)
    {
        org.apache.poi.ss.formula.Formula $r2;
        short $s0, $s1;
        org.apache.poi.hssf.record.RecordInputStream r1;
        org.apache.poi.hssf.record.SharedFormulaRecord r0;
        int $i2, $i3, $i4;

        r0 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.RecordInputStream;

        specialinvoke r0.<org.apache.poi.hssf.record.SharedValueRecordBase: void <init>(org.apache.poi.util.LittleEndianInput)>(r1);

        $s0 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i3 = (int) $s0;

        r0.<org.apache.poi.hssf.record.SharedFormulaRecord: int field_5_reserved> = $i3;

        $s1 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: short readShort()>();

        $i2 = virtualinvoke r1.<org.apache.poi.hssf.record.RecordInputStream: int available()>();

        $i4 = (int) $s1;

        $r2 = staticinvoke <org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula read(int,org.apache.poi.util.LittleEndianInput,int)>($i4, r1, $i2);

        r0.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr> = $r2;

        return;
    }

    protected void serializeExtraData(org.apache.poi.util.LittleEndianOutput)
    {
        org.apache.poi.ss.formula.Formula $r2;
        org.apache.poi.util.LittleEndianOutput r0;
        org.apache.poi.hssf.record.SharedFormulaRecord r1;
        int $i0;

        r1 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        r0 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        $i0 = r1.<org.apache.poi.hssf.record.SharedFormulaRecord: int field_5_reserved>;

        interfaceinvoke r0.<org.apache.poi.util.LittleEndianOutput: void writeShort(int)>($i0);

        $r2 = r1.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        virtualinvoke $r2.<org.apache.poi.ss.formula.Formula: void serialize(org.apache.poi.util.LittleEndianOutput)>(r0);

        return;
    }

    protected int getExtraDataSize()
    {
        org.apache.poi.ss.formula.Formula $r1;
        org.apache.poi.hssf.record.SharedFormulaRecord r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        $r1 = r0.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        $i0 = virtualinvoke $r1.<org.apache.poi.ss.formula.Formula: int getEncodedSize()>();

        $i1 = 2 + $i0;

        return $i1;
    }

    public java.lang.String toString()
    {
        org.apache.poi.ss.formula.ptg.Ptg r17;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r8, $r9, $r11, $r15, $r16, $r19, $r20;
        org.apache.poi.ss.formula.ptg.Ptg[] $r13;
        int $i0, $i1, i3;
        java.lang.String $r7, $r14, $r18;
        org.apache.poi.ss.formula.Formula $r12;
        org.apache.poi.hssf.util.CellRangeAddress8Bit $r6;
        char $c2;
        org.apache.poi.hssf.record.SharedFormulaRecord r5;
        char[] $r2, $r10;

        r5 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[SHARED FORMULA (");

        $r2 = staticinvoke <org.apache.poi.util.HexDump: char[] intToHex(int)>(1212);

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]\n");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .range      = ");

        $r6 = virtualinvoke r5.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.hssf.util.CellRangeAddress8Bit getRange()>();

        $r7 = virtualinvoke $r6.<org.apache.poi.hssf.util.CellRangeAddress8Bit: java.lang.String toString()>();

        $r8 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    .reserved    = ");

        $i0 = r5.<org.apache.poi.hssf.record.SharedFormulaRecord: int field_5_reserved>;

        $r10 = staticinvoke <org.apache.poi.util.HexDump: char[] shortToHex(int)>($i0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r10);

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        $r12 = r5.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        $r13 = virtualinvoke $r12.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.ptg.Ptg[] getTokens()>();

        i3 = 0;

     label1:
        $i1 = lengthof $r13;

        if i3 >= $i1 goto label2;

        $r15 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Formula[");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i3);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        r17 = $r13[i3];

        $r18 = virtualinvoke r17.<org.apache.poi.ss.formula.ptg.Ptg: java.lang.String toString()>();

        $r19 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $c2 = virtualinvoke r17.<org.apache.poi.ss.formula.ptg.Ptg: char getRVAType()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n");

        i3 = i3 + 1;

        goto label1;

     label2:
        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[/SHARED FORMULA]\n");

        $r14 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r14;
    }

    public short getSid()
    {
        org.apache.poi.hssf.record.SharedFormulaRecord r0;

        r0 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        return 1212;
    }

    public org.apache.poi.ss.formula.ptg.Ptg[] getFormulaTokens(org.apache.poi.hssf.record.FormulaRecord)
    {
        org.apache.poi.ss.formula.Formula $r4;
        java.lang.RuntimeException $r8;
        short $s1;
        org.apache.poi.ss.formula.SharedFormula $r9;
        org.apache.poi.ss.SpreadsheetVersion $r3;
        org.apache.poi.ss.formula.ptg.Ptg[] $r5, $r6;
        int $i0, $i2, $i3;
        org.apache.poi.hssf.record.SharedFormulaRecord r1;
        org.apache.poi.hssf.record.FormulaRecord r0;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        r0 := @parameter0: org.apache.poi.hssf.record.FormulaRecord;

        $i0 = virtualinvoke r0.<org.apache.poi.hssf.record.FormulaRecord: int getRow()>();

        $s1 = virtualinvoke r0.<org.apache.poi.hssf.record.FormulaRecord: short getColumn()>();

        $i2 = (int) $s1;

        $z0 = virtualinvoke r1.<org.apache.poi.hssf.record.SharedFormulaRecord: boolean isInRange(int,int)>($i0, $i2);

        if $z0 != 0 goto label1;

        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("Shared Formula Conversion: Coding Error");

        throw $r8;

     label1:
        $r9 = new org.apache.poi.ss.formula.SharedFormula;

        $r3 = <org.apache.poi.ss.SpreadsheetVersion: org.apache.poi.ss.SpreadsheetVersion EXCEL97>;

        specialinvoke $r9.<org.apache.poi.ss.formula.SharedFormula: void <init>(org.apache.poi.ss.SpreadsheetVersion)>($r3);

        $r4 = r1.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        $r5 = virtualinvoke $r4.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.ptg.Ptg[] getTokens()>();

        $i3 = (int) $s1;

        $r6 = virtualinvoke $r9.<org.apache.poi.ss.formula.SharedFormula: org.apache.poi.ss.formula.ptg.Ptg[] convertSharedFormulas(org.apache.poi.ss.formula.ptg.Ptg[],int,int)>($r5, $i0, $i3);

        return $r6;
    }

    public java.lang.Object clone()
    {
        org.apache.poi.ss.formula.Formula $r3, $r4;
        org.apache.poi.hssf.record.SharedFormulaRecord $r0, r1;
        org.apache.poi.hssf.util.CellRangeAddress8Bit $r2;
        int $i0;

        r1 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        $r0 = new org.apache.poi.hssf.record.SharedFormulaRecord;

        $r2 = virtualinvoke r1.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.hssf.util.CellRangeAddress8Bit getRange()>();

        specialinvoke $r0.<org.apache.poi.hssf.record.SharedFormulaRecord: void <init>(org.apache.poi.hssf.util.CellRangeAddress8Bit)>($r2);

        $i0 = r1.<org.apache.poi.hssf.record.SharedFormulaRecord: int field_5_reserved>;

        $r0.<org.apache.poi.hssf.record.SharedFormulaRecord: int field_5_reserved> = $i0;

        $r3 = r1.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        $r4 = virtualinvoke $r3.<org.apache.poi.ss.formula.Formula: org.apache.poi.ss.formula.Formula copy()>();

        $r0.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr> = $r4;

        return $r0;
    }

    public boolean isFormulaSame(org.apache.poi.hssf.record.SharedFormulaRecord)
    {
        org.apache.poi.ss.formula.Formula $r2, $r3;
        org.apache.poi.hssf.record.SharedFormulaRecord r0, r1;
        boolean $z0;

        r0 := @this: org.apache.poi.hssf.record.SharedFormulaRecord;

        r1 := @parameter0: org.apache.poi.hssf.record.SharedFormulaRecord;

        $r3 = r0.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        $r2 = r1.<org.apache.poi.hssf.record.SharedFormulaRecord: org.apache.poi.ss.formula.Formula field_7_parsed_expr>;

        $z0 = virtualinvoke $r3.<org.apache.poi.ss.formula.Formula: boolean isSame(org.apache.poi.ss.formula.Formula)>($r2);

        return $z0;
    }

    public static void <clinit>()
    {
        <org.apache.poi.hssf.record.SharedFormulaRecord: short sid> = 1212;

        return;
    }
}
