public class org.jsoup.helper.HttpConnection$Response extends org.jsoup.helper.HttpConnection$Base implements org.jsoup.Connection$Response
{
    private static final int MAX_REDIRECTS;
    private int statusCode;
    private java.lang.String statusMessage;
    private java.nio.ByteBuffer byteData;
    private java.lang.String charset;
    private java.lang.String contentType;
    private boolean executed;
    private int numRedirects;
    private org.jsoup.Connection$Request req;

    void <init>()
    {
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);

        r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 0;

        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = 0;

        return;
    }

    private void <init>(org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        java.lang.Object[] $r3;
        java.net.URL $r4;
        java.io.IOException $r2;
        int $i0, $i1, $i2;
        java.lang.String $r5;
        org.jsoup.helper.HttpConnection$Response r0, r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: org.jsoup.helper.HttpConnection$Response;

        specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: void <init>(org.jsoup.helper.HttpConnection$1)>(null);

        r0.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 0;

        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = 0;

        if r1 == null goto label1;

        $i0 = r1.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;

        $i1 = $i0 + 1;

        r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects> = $i1;

        $i2 = r0.<org.jsoup.helper.HttpConnection$Response: int numRedirects>;

        if $i2 < 20 goto label1;

        $r2 = new java.io.IOException;

        $r3 = newarray (java.lang.Object)[1];

        $r4 = virtualinvoke r1.<org.jsoup.helper.HttpConnection$Response: java.net.URL url()>();

        $r3[0] = $r4;

        $r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Too many redirects occurred trying to load URL %s", $r3);

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        return;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request) throws java.io.IOException
    {
        org.jsoup.Connection$Request r0;
        org.jsoup.helper.HttpConnection$Response $r1;

        r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>(r0, null);

        return $r1;
    }

    static org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request, org.jsoup.helper.HttpConnection$Response) throws java.io.IOException
    {
        java.net.HttpURLConnection $r36;
        java.util.zip.GZIPInputStream $r9;
        java.io.BufferedInputStream $r8, r41, $r45;
        java.util.Map $r18;
        java.util.Set $r19;
        java.lang.Throwable $r34, $r35;
        org.jsoup.UnsupportedMimeTypeException $r10;
        java.lang.String $r2, $r6, $r7, $r12, $r17, $r24, $r26, $r29, $r47, $r48;
        java.util.Map$Entry r40;
        org.jsoup.helper.HttpConnection$Response r5, $r21, $r39;
        java.net.URL $r1, $r11, $r15, $r16, $r28;
        org.jsoup.Connection$Request r0;
        org.jsoup.HttpStatusException $r27;
        java.nio.ByteBuffer $r46;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11;
        org.jsoup.Connection$Method $r3, $r4, $r13, $r37, $r38;
        java.util.Collection $r14, $r30, $r32;
        int $i0, $i1, $i2;
        java.io.OutputStream $r31;
        java.util.Iterator $r20;
        java.net.MalformedURLException $r33;
        java.lang.Object $r22, $r23, $r25;
        java.io.InputStream r42, $r43, $r44;

        r0 := @parameter0: org.jsoup.Connection$Request;

        r5 := @parameter1: org.jsoup.helper.HttpConnection$Response;

        staticinvoke <org.jsoup.helper.Validate: void notNull(java.lang.Object,java.lang.String)>(r0, "Request must not be null");

        $r1 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("http");

        if $z0 != 0 goto label01;

        $z10 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("https");

        if $z10 != 0 goto label01;

        $r33 = new java.net.MalformedURLException;

        specialinvoke $r33.<java.net.MalformedURLException: void <init>(java.lang.String)>("Only http & https protocols supported");

        throw $r33;

     label01:
        $r3 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r4 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        if $r3 != $r4 goto label02;

        $r32 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $i1 = interfaceinvoke $r32.<java.util.Collection: int size()>();

        if $i1 <= 0 goto label02;

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>(r0);

     label02:
        $r36 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request)>(r0);

     label03:
        virtualinvoke $r36.<java.net.HttpURLConnection: void connect()>();

        $r37 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r38 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        if $r37 != $r38 goto label04;

        $r30 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $r31 = virtualinvoke $r36.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();

        staticinvoke <org.jsoup.helper.HttpConnection$Response: void writePost(java.util.Collection,java.io.OutputStream)>($r30, $r31);

     label04:
        $i0 = virtualinvoke $r36.<java.net.HttpURLConnection: int getResponseCode()>();

        z11 = 0;

        if $i0 == 200 goto label07;

        if $i0 == 302 goto label05;

        if $i0 == 301 goto label05;

        if $i0 != 303 goto label06;

     label05:
        z11 = 1;

        goto label07;

     label06:
        $z9 = interfaceinvoke r0.<org.jsoup.Connection$Request: boolean ignoreHttpErrors()>();

        if $z9 != 0 goto label07;

        $r27 = new org.jsoup.HttpStatusException;

        $r28 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r29 = virtualinvoke $r28.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r27.<org.jsoup.HttpStatusException: void <init>(java.lang.String,int,java.lang.String)>("HTTP error fetching URL", $i0, $r29);

        throw $r27;

     label07:
        $r39 = new org.jsoup.helper.HttpConnection$Response;

        specialinvoke $r39.<org.jsoup.helper.HttpConnection$Response: void <init>(org.jsoup.helper.HttpConnection$Response)>(r5);

        specialinvoke $r39.<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>($r36, r5);

        if z11 == 0 goto label11;

        $z7 = interfaceinvoke r0.<org.jsoup.Connection$Request: boolean followRedirects()>();

        if $z7 == 0 goto label11;

        $r13 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method GET>;

        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base method(org.jsoup.Connection$Method)>($r13);

        $r14 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        interfaceinvoke $r14.<java.util.Collection: void clear()>();

        $r15 = new java.net.URL;

        $r16 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r17 = virtualinvoke $r39.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>("Location");

        specialinvoke $r15.<java.net.URL: void <init>(java.net.URL,java.lang.String)>($r16, $r17);

        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r15);

        $r18 = $r39.<org.jsoup.helper.HttpConnection$Response: java.util.Map cookies>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.util.Set entrySet()>();

        $r20 = interfaceinvoke $r19.<java.util.Set: java.util.Iterator iterator()>();

     label08:
        $z8 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label09;

        $r22 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r40 = (java.util.Map$Entry) $r22;

        $r23 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r24 = (java.lang.String) $r23;

        $r25 = interfaceinvoke r40.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r26 = (java.lang.String) $r25;

        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r24, $r26);

        goto label08;

     label09:
        $r21 = staticinvoke <org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>(r0, $r39);

     label10:
        virtualinvoke $r36.<java.net.HttpURLConnection: void disconnect()>();

        return $r21;

     label11:
        $r39.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req> = r0;

        $r6 = virtualinvoke $r39.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType()>();

        if $r6 == null goto label12;

        $z3 = interfaceinvoke r0.<org.jsoup.Connection$Request: boolean ignoreContentType()>();

        if $z3 != 0 goto label12;

        $z4 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("text/");

        if $z4 != 0 goto label12;

        $z5 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("application/xml");

        if $z5 != 0 goto label12;

        $z6 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>("application/xhtml+xml");

        if $z6 != 0 goto label12;

        $r10 = new org.jsoup.UnsupportedMimeTypeException;

        $r11 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r12 = virtualinvoke $r11.<java.net.URL: java.lang.String toString()>();

        specialinvoke $r10.<org.jsoup.UnsupportedMimeTypeException: void <init>(java.lang.String,java.lang.String,java.lang.String)>("Unhandled content type. Must be text/*, application/xml, or application/xhtml+xml", $r6, $r12);

        throw $r10;

     label12:
        r41 = null;

        r42 = null;

     label13:
        $r43 = virtualinvoke $r36.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        if $r43 == null goto label14;

        $r44 = virtualinvoke $r36.<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>();

        goto label15;

     label14:
        $r44 = virtualinvoke $r36.<java.net.HttpURLConnection: java.io.InputStream getInputStream()>();

     label15:
        r42 = $r44;

        $z1 = virtualinvoke $r39.<org.jsoup.helper.HttpConnection$Response: boolean hasHeader(java.lang.String)>("Content-Encoding");

        if $z1 == 0 goto label16;

        $r7 = virtualinvoke $r39.<org.jsoup.helper.HttpConnection$Response: java.lang.String header(java.lang.String)>("Content-Encoding");

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("gzip");

        if $z2 == 0 goto label16;

        $r8 = new java.io.BufferedInputStream;

        $r45 = $r8;

        $r9 = new java.util.zip.GZIPInputStream;

        specialinvoke $r9.<java.util.zip.GZIPInputStream: void <init>(java.io.InputStream)>($r44);

        specialinvoke $r8.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r9);

        goto label17;

     label16:
        $r45 = new java.io.BufferedInputStream;

        specialinvoke $r45.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>(r42);

     label17:
        r41 = $r45;

        $i2 = interfaceinvoke r0.<org.jsoup.Connection$Request: int maxBodySize()>();

        $r46 = staticinvoke <org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream,int)>($r45, $i2);

        $r39.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData> = $r46;

        $r47 = $r39.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        $r48 = staticinvoke <org.jsoup.helper.DataUtil: java.lang.String getCharsetFromContentType(java.lang.String)>($r47);

        $r39.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r48;

     label18:
        if $r45 == null goto label19;

        virtualinvoke $r45.<java.io.InputStream: void close()>();

     label19:
        if r42 == null goto label24;

        virtualinvoke r42.<java.io.InputStream: void close()>();

        goto label24;

     label20:
        $r35 := @caughtexception;

     label21:
        if r41 == null goto label22;

        virtualinvoke r41.<java.io.InputStream: void close()>();

     label22:
        if r42 == null goto label23;

        virtualinvoke r42.<java.io.InputStream: void close()>();

     label23:
        throw $r35;

     label24:
        virtualinvoke $r36.<java.net.HttpURLConnection: void disconnect()>();

        goto label27;

     label25:
        $r34 := @caughtexception;

     label26:
        virtualinvoke $r36.<java.net.HttpURLConnection: void disconnect()>();

        throw $r34;

     label27:
        $r39.<org.jsoup.helper.HttpConnection$Response: boolean executed> = 1;

        return $r39;

        catch java.lang.Throwable from label13 to label18 with label20;
        catch java.lang.Throwable from label20 to label21 with label20;
        catch java.lang.Throwable from label03 to label10 with label25;
        catch java.lang.Throwable from label11 to label24 with label25;
        catch java.lang.Throwable from label25 to label26 with label25;
    }

    public int statusCode()
    {
        int $i0;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $i0 = r0.<org.jsoup.helper.HttpConnection$Response: int statusCode>;

        return $i0;
    }

    public java.lang.String statusMessage()
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage>;

        return $r1;
    }

    public java.lang.String charset()
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        return $r1;
    }

    public java.lang.String contentType()
    {
        java.lang.String $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType>;

        return $r1;
    }

    public org.jsoup.nodes.Document parse() throws java.io.IOException
    {
        java.net.URL $r1;
        org.jsoup.Connection$Request $r5;
        java.nio.ByteBuffer $r2, $r8;
        org.jsoup.parser.Parser $r6;
        java.nio.charset.Charset $r10;
        org.jsoup.nodes.Document$OutputSettings $r9;
        org.jsoup.nodes.Document $r7;
        java.lang.String $r3, $r4, $r11;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before parsing response");

        $r2 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r3 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url>;

        $r4 = virtualinvoke $r1.<java.net.URL: java.lang.String toExternalForm()>();

        $r5 = r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Request req>;

        $r6 = interfaceinvoke $r5.<org.jsoup.Connection$Request: org.jsoup.parser.Parser parser()>();

        $r7 = staticinvoke <org.jsoup.helper.DataUtil: org.jsoup.nodes.Document parseByteData(java.nio.ByteBuffer,java.lang.String,java.lang.String,org.jsoup.parser.Parser)>($r2, $r3, $r4, $r6);

        $r8 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        virtualinvoke $r8.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        $r9 = virtualinvoke $r7.<org.jsoup.nodes.Document: org.jsoup.nodes.Document$OutputSettings outputSettings()>();

        $r10 = virtualinvoke $r9.<org.jsoup.nodes.Document$OutputSettings: java.nio.charset.Charset charset()>();

        $r11 = virtualinvoke $r10.<java.nio.charset.Charset: java.lang.String name()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset> = $r11;

        return $r7;
    }

    public java.lang.String body()
    {
        java.nio.CharBuffer $r5, $r9;
        java.nio.ByteBuffer $r4, $r6, $r8;
        java.nio.charset.Charset $r3, $r7;
        java.lang.String $r1, $r2, r10;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        if $r1 != null goto label1;

        $r7 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");

        $r8 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r9 = virtualinvoke $r7.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r8);

        r10 = virtualinvoke $r9.<java.nio.CharBuffer: java.lang.String toString()>();

        goto label2;

     label1:
        $r2 = r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String charset>;

        $r3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>($r2);

        $r4 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r5 = virtualinvoke $r3.<java.nio.charset.Charset: java.nio.CharBuffer decode(java.nio.ByteBuffer)>($r4);

        r10 = virtualinvoke $r5.<java.nio.CharBuffer: java.lang.String toString()>();

     label2:
        $r6 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        virtualinvoke $r6.<java.nio.ByteBuffer: java.nio.Buffer rewind()>();

        return r10;
    }

    public byte[] bodyAsBytes()
    {
        byte[] $r2;
        org.jsoup.helper.HttpConnection$Response r0;
        java.nio.ByteBuffer $r1;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $z0 = r0.<org.jsoup.helper.HttpConnection$Response: boolean executed>;

        staticinvoke <org.jsoup.helper.Validate: void isTrue(boolean,java.lang.String)>($z0, "Request must be executed (with .execute(), .get(), or .post() before getting response body");

        $r1 = r0.<org.jsoup.helper.HttpConnection$Response: java.nio.ByteBuffer byteData>;

        $r2 = virtualinvoke $r1.<java.nio.ByteBuffer: byte[] array()>();

        return $r2;
    }

    private static java.net.HttpURLConnection createConnection(org.jsoup.Connection$Request) throws java.io.IOException
    {
        java.net.HttpURLConnection r3;
        java.net.URL $r1;
        org.jsoup.Connection$Request r0;
        java.net.URLConnection $r2;
        java.util.Map $r8, $r9;
        int $i0, $i1, $i2;
        java.lang.String $r5, $r15, $r17, $r18;
        boolean $z0;
        org.jsoup.Connection$Method $r4, $r6, $r7;
        java.util.Map$Entry r13;
        java.util.Iterator $r11;
        java.util.Set $r10;
        java.lang.Object $r12, $r14, $r16;

        r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r2 = virtualinvoke $r1.<java.net.URL: java.net.URLConnection openConnection()>();

        r3 = (java.net.HttpURLConnection) $r2;

        $r4 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r5 = virtualinvoke $r4.<org.jsoup.Connection$Method: java.lang.String name()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>($r5);

        virtualinvoke r3.<java.net.HttpURLConnection: void setInstanceFollowRedirects(boolean)>(0);

        $i0 = interfaceinvoke r0.<org.jsoup.Connection$Request: int timeout()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setConnectTimeout(int)>($i0);

        $i1 = interfaceinvoke r0.<org.jsoup.Connection$Request: int timeout()>();

        virtualinvoke r3.<java.net.HttpURLConnection: void setReadTimeout(int)>($i1);

        $r6 = interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Method method()>();

        $r7 = <org.jsoup.Connection$Method: org.jsoup.Connection$Method POST>;

        if $r6 != $r7 goto label1;

        virtualinvoke r3.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);

     label1:
        $r8 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Map cookies()>();

        $i2 = interfaceinvoke $r8.<java.util.Map: int size()>();

        if $i2 <= 0 goto label2;

        $r18 = staticinvoke <org.jsoup.helper.HttpConnection$Response: java.lang.String getRequestCookieString(org.jsoup.Connection$Request)>(r0);

        virtualinvoke r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>("Cookie", $r18);

     label2:
        $r9 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Map headers()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        $r16 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r17 = (java.lang.String) $r16;

        virtualinvoke r3.<java.net.HttpURLConnection: void addRequestProperty(java.lang.String,java.lang.String)>($r15, $r17);

        goto label3;

     label4:
        return r3;
    }

    private void setupFromConnection(java.net.HttpURLConnection, org.jsoup.Connection$Response) throws java.io.IOException
    {
        java.net.HttpURLConnection r1;
        org.jsoup.Connection$Response r8;
        java.net.URL $r4;
        java.util.Map $r7, $r9;
        int $i0;
        java.lang.String $r2, $r5, $r6, $r15, $r17, $r19;
        boolean $z0, $z1;
        org.jsoup.Connection$Method $r3;
        java.util.Map$Entry r13;
        java.util.Iterator $r11;
        java.util.Set $r10;
        java.lang.Object $r12, $r14, $r16, $r18;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: java.net.HttpURLConnection;

        r8 := @parameter1: org.jsoup.Connection$Response;

        $r2 = virtualinvoke r1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();

        $r3 = staticinvoke <org.jsoup.Connection$Method: org.jsoup.Connection$Method valueOf(java.lang.String)>($r2);

        r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Method method> = $r3;

        $r4 = virtualinvoke r1.<java.net.HttpURLConnection: java.net.URL getURL()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.net.URL url> = $r4;

        $i0 = virtualinvoke r1.<java.net.HttpURLConnection: int getResponseCode()>();

        r0.<org.jsoup.helper.HttpConnection$Response: int statusCode> = $i0;

        $r5 = virtualinvoke r1.<java.net.HttpURLConnection: java.lang.String getResponseMessage()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String statusMessage> = $r5;

        $r6 = virtualinvoke r1.<java.net.HttpURLConnection: java.lang.String getContentType()>();

        r0.<org.jsoup.helper.HttpConnection$Response: java.lang.String contentType> = $r6;

        $r7 = virtualinvoke r1.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: void processResponseHeaders(java.util.Map)>($r7);

        if r8 == null goto label3;

        $r9 = interfaceinvoke r8.<org.jsoup.Connection$Response: java.util.Map cookies()>();

        $r10 = interfaceinvoke $r9.<java.util.Map: java.util.Set entrySet()>();

        $r11 = interfaceinvoke $r10.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (java.util.Map$Entry) $r12;

        $r14 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r15 = (java.lang.String) $r14;

        $z1 = virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: boolean hasCookie(java.lang.String)>($r15);

        if $z1 != 0 goto label2;

        $r16 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r17 = (java.lang.String) $r16;

        $r18 = interfaceinvoke r13.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r19 = (java.lang.String) $r18;

        virtualinvoke r0.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r17, $r19);

     label2:
        goto label1;

     label3:
        return;
    }

    void processResponseHeaders(java.util.Map)
    {
        java.util.Map r0;
        int $i0;
        java.lang.String r6, $r11, r14, $r16, $r17, $r18, $r19, r20;
        boolean $z0, $z1, $z2, $z3;
        java.util.Map$Entry r4;
        java.util.Iterator $r2, $r12;
        org.jsoup.parser.TokenQueue $r15;
        java.util.Set $r1;
        java.util.List r8;
        java.lang.Object $r3, $r5, $r7, $r10, $r13;
        org.jsoup.helper.HttpConnection$Response r9;

        r9 := @this: org.jsoup.helper.HttpConnection$Response;

        r0 := @parameter0: java.util.Map;

        $r1 = interfaceinvoke r0.<java.util.Map: java.util.Set entrySet()>();

        $r2 = interfaceinvoke $r1.<java.util.Set: java.util.Iterator iterator()>();

     label01:
        $z2 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (java.util.Map$Entry) $r3;

        $r5 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getKey()>();

        r6 = (java.lang.String) $r5;

        if r6 != null goto label02;

        goto label01;

     label02:
        $r7 = interfaceinvoke r4.<java.util.Map$Entry: java.lang.Object getValue()>();

        r8 = (java.util.List) $r7;

        $z0 = virtualinvoke r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Set-Cookie");

        if $z0 == 0 goto label08;

        $r12 = interfaceinvoke r8.<java.util.List: java.util.Iterator iterator()>();

     label03:
        $z3 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label07;

        $r13 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r14 = (java.lang.String) $r13;

        if r14 != null goto label04;

        goto label03;

     label04:
        $r15 = new org.jsoup.parser.TokenQueue;

        specialinvoke $r15.<org.jsoup.parser.TokenQueue: void <init>(java.lang.String)>(r14);

        $r16 = virtualinvoke $r15.<org.jsoup.parser.TokenQueue: java.lang.String chompTo(java.lang.String)>("=");

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String trim()>();

        $r18 = virtualinvoke $r15.<org.jsoup.parser.TokenQueue: java.lang.String consumeTo(java.lang.String)>(";");

        $r19 = virtualinvoke $r18.<java.lang.String: java.lang.String trim()>();

        r20 = $r19;

        if $r19 != null goto label05;

        r20 = "";

     label05:
        if $r17 == null goto label06;

        $i0 = virtualinvoke $r17.<java.lang.String: int length()>();

        if $i0 <= 0 goto label06;

        virtualinvoke r9.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base cookie(java.lang.String,java.lang.String)>($r17, r20);

     label06:
        goto label03;

     label07:
        goto label09;

     label08:
        $z1 = interfaceinvoke r8.<java.util.List: boolean isEmpty()>();

        if $z1 != 0 goto label09;

        $r10 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        $r11 = (java.lang.String) $r10;

        virtualinvoke r9.<org.jsoup.helper.HttpConnection$Response: org.jsoup.Connection$Base header(java.lang.String,java.lang.String)>(r6, $r11);

     label09:
        goto label01;

     label10:
        return;
    }

    private static void writePost(java.util.Collection, java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r1;
        java.util.Iterator $r3;
        java.util.Collection r2;
        org.jsoup.Connection$KeyVal r5;
        java.io.OutputStreamWriter $r0;
        java.lang.Object $r4;
        java.lang.String $r6, $r7, $r8, $r9;
        boolean $z0, z1;

        r2 := @parameter0: java.util.Collection;

        r1 := @parameter1: java.io.OutputStream;

        $r0 = new java.io.OutputStreamWriter;

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r1, "UTF-8");

        z1 = 1;

        $r3 = interfaceinvoke r2.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.jsoup.Connection$KeyVal) $r4;

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.io.OutputStreamWriter: java.io.Writer append(char)>(38);

        goto label3;

     label2:
        z1 = 0;

     label3:
        $r6 = interfaceinvoke r5.<org.jsoup.Connection$KeyVal: java.lang.String key()>();

        $r7 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r6, "UTF-8");

        virtualinvoke $r0.<java.io.OutputStreamWriter: void write(java.lang.String)>($r7);

        virtualinvoke $r0.<java.io.OutputStreamWriter: void write(int)>(61);

        $r8 = interfaceinvoke r5.<org.jsoup.Connection$KeyVal: java.lang.String value()>();

        $r9 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r8, "UTF-8");

        virtualinvoke $r0.<java.io.OutputStreamWriter: void write(java.lang.String)>($r9);

        goto label1;

     label4:
        virtualinvoke $r0.<java.io.OutputStreamWriter: void close()>();

        return;
    }

    private static java.lang.String getRequestCookieString(org.jsoup.Connection$Request)
    {
        org.jsoup.Connection$Request r1;
        java.util.Map $r2;
        java.lang.String $r5, $r9, $r13;
        boolean $z0, z1;
        java.util.Map$Entry r7;
        java.util.Iterator $r4;
        java.util.Set $r3;
        java.lang.StringBuilder $r0, $r10, $r11;
        java.lang.Object $r6, $r8, $r12;

        r1 := @parameter0: org.jsoup.Connection$Request;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        z1 = 1;

        $r2 = interfaceinvoke r1.<org.jsoup.Connection$Request: java.util.Map cookies()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.util.Map$Entry) $r6;

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        goto label3;

     label2:
        z1 = 0;

     label3:
        $r8 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r9 = (java.lang.String) $r8;

        $r10 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r12 = interfaceinvoke r7.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (java.lang.String) $r12;

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        goto label1;

     label4:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    private static void serialiseRequestUrl(org.jsoup.Connection$Request) throws java.io.IOException
    {
        java.net.URL $r1, $r13;
        org.jsoup.Connection$Request r0;
        java.lang.String $r3, $r6, $r8, $r10, $r14, $r18, $r19, $r22, $r23, $r24;
        boolean z0, $z1;
        java.util.Iterator $r12;
        java.util.Collection $r11, $r15;
        org.jsoup.Connection$KeyVal r17;
        java.lang.StringBuilder $r2, $r4, $r5, $r7, $r9, $r20, $r21;
        java.lang.Object $r16;

        r0 := @parameter0: org.jsoup.Connection$Request;

        $r1 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.net.URL url()>();

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        z0 = 1;

        $r3 = virtualinvoke $r1.<java.net.URL: java.lang.String getProtocol()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("://");

        $r6 = virtualinvoke $r1.<java.net.URL: java.lang.String getAuthority()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r1.<java.net.URL: java.lang.String getPath()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("?");

        $r10 = virtualinvoke $r1.<java.net.URL: java.lang.String getQuery()>();

        if $r10 == null goto label1;

        $r24 = virtualinvoke $r1.<java.net.URL: java.lang.String getQuery()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r24);

        z0 = 0;

     label1:
        $r11 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        $r12 = interfaceinvoke $r11.<java.util.Collection: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r16 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.jsoup.Connection$KeyVal) $r16;

        if z0 != 0 goto label3;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(38);

        goto label4;

     label3:
        z0 = 0;

     label4:
        $r18 = interfaceinvoke r17.<org.jsoup.Connection$KeyVal: java.lang.String key()>();

        $r19 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r18, "UTF-8");

        $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);

        $r22 = interfaceinvoke r17.<org.jsoup.Connection$KeyVal: java.lang.String value()>();

        $r23 = staticinvoke <java.net.URLEncoder: java.lang.String encode(java.lang.String,java.lang.String)>($r22, "UTF-8");

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23);

        goto label2;

     label5:
        $r13 = new java.net.URL;

        $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r13.<java.net.URL: void <init>(java.lang.String)>($r14);

        interfaceinvoke r0.<org.jsoup.Connection$Request: org.jsoup.Connection$Base url(java.net.URL)>($r13);

        $r15 = interfaceinvoke r0.<org.jsoup.Connection$Request: java.util.Collection data()>();

        interfaceinvoke $r15.<java.util.Collection: void clear()>();

        return;
    }

    public volatile java.util.Map cookies()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map cookies()>();

        return $r1;
    }

    public volatile boolean hasCookie(java.lang.String)
    {
        java.lang.String r1;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasCookie(java.lang.String)>(r1);

        return $z0;
    }

    public volatile java.lang.String cookie(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String cookie(java.lang.String)>(r1);

        return $r2;
    }

    public volatile java.util.Map headers()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.util.Map $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.util.Map headers()>();

        return $r1;
    }

    public volatile boolean hasHeader(java.lang.String)
    {
        java.lang.String r1;
        org.jsoup.helper.HttpConnection$Response r0;
        boolean $z0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: java.lang.String;

        $z0 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: boolean hasHeader(java.lang.String)>(r1);

        return $z0;
    }

    public volatile java.lang.String header(java.lang.String)
    {
        java.lang.String r1, $r2;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.lang.String header(java.lang.String)>(r1);

        return $r2;
    }

    public volatile org.jsoup.Connection$Method method()
    {
        org.jsoup.Connection$Method $r1;
        org.jsoup.helper.HttpConnection$Response r0;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: org.jsoup.Connection$Method method()>();

        return $r1;
    }

    public volatile java.net.URL url()
    {
        org.jsoup.helper.HttpConnection$Response r0;
        java.net.URL $r1;

        r0 := @this: org.jsoup.helper.HttpConnection$Response;

        $r1 = specialinvoke r0.<org.jsoup.helper.HttpConnection$Base: java.net.URL url()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.jsoup.helper.HttpConnection$Response: int MAX_REDIRECTS> = 20;

        return;
    }
}
