public class org.apache.zookeeper.server.auth.KerberosName extends java.lang.Object
{
    private final java.lang.String serviceName;
    private final java.lang.String hostName;
    private final java.lang.String realm;
    private static final java.util.regex.Pattern nameParser;
    private static java.util.regex.Pattern parameterPattern;
    private static final java.util.regex.Pattern ruleParser;
    private static final java.util.regex.Pattern nonSimplePattern;
    private static java.util.List rules;
    private static java.lang.String defaultRealm;

    public void <init>(java.lang.String)
    {
        java.lang.IllegalArgumentException $r7;
        java.util.regex.Matcher $r3;
        org.apache.zookeeper.server.auth.KerberosName r0;
        java.lang.StringBuilder $r8, $r9, $r10;
        java.lang.String r1, $r4, $r5, $r6, $r11;
        java.util.regex.Pattern $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern nameParser>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r1);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label2;

        $z1 = virtualinvoke r1.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z1 == 0 goto label1;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Malformed Kerberos name: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label1:
        r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName> = r1;

        r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName> = null;

        r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm> = null;

        goto label3;

     label2:
        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(1);

        r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName> = $r4;

        $r5 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(3);

        r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName> = $r5;

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm> = $r6;

     label3:
        return;
    }

    public java.lang.String getDefaultRealm()
    {
        org.apache.zookeeper.server.auth.KerberosName r1;
        java.lang.String $r0;

        r1 := @this: org.apache.zookeeper.server.auth.KerberosName;

        $r0 = <org.apache.zookeeper.server.auth.KerberosName: java.lang.String defaultRealm>;

        return $r0;
    }

    public java.lang.String toString()
    {
        org.apache.zookeeper.server.auth.KerberosName r1;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7;

        r1 := @this: org.apache.zookeeper.server.auth.KerberosName;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r3 = r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName>;

        if $r3 == null goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);

        $r7 = r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

     label1:
        $r4 = r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm>;

        if $r4 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);

        $r6 = r1.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm>;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

     label2:
        $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public java.lang.String getServiceName()
    {
        org.apache.zookeeper.server.auth.KerberosName r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName;

        $r1 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName>;

        return $r1;
    }

    public java.lang.String getHostName()
    {
        org.apache.zookeeper.server.auth.KerberosName r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName;

        $r1 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName>;

        return $r1;
    }

    public java.lang.String getRealm()
    {
        org.apache.zookeeper.server.auth.KerberosName r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName;

        $r1 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm>;

        return $r1;
    }

    static java.util.List parseRules(java.lang.String)
    {
        java.util.ArrayList $r0;
        java.util.regex.Matcher $r3;
        int $i0, $i1, $i2;
        java.lang.String r1, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r18, r19;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r14;
        org.apache.zookeeper.server.auth.KerberosName$Rule $r5, $r13;
        java.lang.StringBuilder $r15, $r16, $r17;
        java.util.regex.Pattern $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        r19 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>();

     label1:
        $i0 = virtualinvoke r19.<java.lang.String: int length()>();

        if $i0 <= 0 goto label5;

        $r2 = <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern ruleParser>;

        $r3 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r19);

        $z0 = virtualinvoke $r3.<java.util.regex.Matcher: boolean lookingAt()>();

        if $z0 != 0 goto label2;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid rule: ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r19);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label2:
        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(2);

        if $r4 == null goto label3;

        $r13 = new org.apache.zookeeper.server.auth.KerberosName$Rule;

        specialinvoke $r13.<org.apache.zookeeper.server.auth.KerberosName$Rule: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r13);

        goto label4;

     label3:
        $r5 = new org.apache.zookeeper.server.auth.KerberosName$Rule;

        $r6 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(4);

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r6);

        $r7 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(5);

        $r8 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(7);

        $r9 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(9);

        $r10 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(10);

        $r11 = "g";

        $r12 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String group(int)>(11);

        $z1 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r12);

        specialinvoke $r5.<org.apache.zookeeper.server.auth.KerberosName$Rule: void <init>(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean)>($i1, $r7, $r8, $r9, $r10, $z1);

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r5);

     label4:
        $i2 = virtualinvoke $r3.<java.util.regex.Matcher: int end()>();

        r19 = virtualinvoke r19.<java.lang.String: java.lang.String substring(int)>($i2);

        goto label1;

     label5:
        return $r0;
    }

    public static void setConfiguration() throws java.io.IOException
    {
        java.util.List $r1;
        java.lang.String $r0;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("zookeeper.security.auth_to_local", "DEFAULT");

        $r1 = staticinvoke <org.apache.zookeeper.server.auth.KerberosName: java.util.List parseRules(java.lang.String)>($r0);

        <org.apache.zookeeper.server.auth.KerberosName: java.util.List rules> = $r1;

        return;
    }

    public java.lang.String getShortName() throws java.io.IOException
    {
        java.lang.String[] $r2, $r18, r22;
        org.apache.zookeeper.server.auth.KerberosName$NoMatchingRule $r8;
        org.apache.zookeeper.server.auth.KerberosName r0;
        java.lang.String $r1, $r3, $r4, $r5, $r11, $r13, $r16, $r17, $r19, $r20, $r21;
        boolean $z0;
        java.util.Iterator $r7;
        org.apache.zookeeper.server.auth.KerberosName$Rule r15;
        java.util.List $r6;
        java.lang.StringBuilder $r9, $r10, $r12;
        java.lang.Object $r14;

        r0 := @this: org.apache.zookeeper.server.auth.KerberosName;

        $r1 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName>;

        if $r1 != null goto label2;

        $r17 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm>;

        if $r17 != null goto label1;

        $r21 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName>;

        return $r21;

     label1:
        $r18 = newarray (java.lang.String)[2];

        $r19 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm>;

        $r18[0] = $r19;

        $r20 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName>;

        $r18[1] = $r20;

        r22 = $r18;

        goto label3;

     label2:
        $r2 = newarray (java.lang.String)[3];

        $r3 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String realm>;

        $r2[0] = $r3;

        $r4 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String serviceName>;

        $r2[1] = $r4;

        $r5 = r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String hostName>;

        $r2[2] = $r5;

        r22 = $r2;

     label3:
        $r6 = <org.apache.zookeeper.server.auth.KerberosName: java.util.List rules>;

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label4:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r14 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r15 = (org.apache.zookeeper.server.auth.KerberosName$Rule) $r14;

        $r16 = virtualinvoke r15.<org.apache.zookeeper.server.auth.KerberosName$Rule: java.lang.String apply(java.lang.String[])>(r22);

        if $r16 == null goto label5;

        return $r16;

     label5:
        goto label4;

     label6:
        $r8 = new org.apache.zookeeper.server.auth.KerberosName$NoMatchingRule;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No rules applied to ");

        $r11 = virtualinvoke r0.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String toString()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<org.apache.zookeeper.server.auth.KerberosName$NoMatchingRule: void <init>(java.lang.String)>($r13);

        throw $r8;
    }

    static void printRules() throws java.io.IOException
    {
        java.io.PrintStream $r5;
        java.util.Iterator $r1;
        org.apache.zookeeper.server.auth.KerberosName$Rule r3;
        java.util.List $r0;
        int i0;
        java.lang.Object $r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r8;
        java.lang.String $r9;
        boolean $z0;

        i0 = 0;

        $r0 = <org.apache.zookeeper.server.auth.KerberosName: java.util.List rules>;

        $r1 = interfaceinvoke $r0.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (org.apache.zookeeper.server.auth.KerberosName$Rule) $r2;

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        i0 = i0 + 1;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        goto label1;

     label2:
        return;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        java.io.PrintStream $r4;
        java.lang.String[] r0;
        int i0, i1;
        org.apache.zookeeper.server.auth.KerberosName $r2;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r9;
        java.lang.String r1, $r8, $r10;

        r0 := @parameter0: java.lang.String[];

        i0 = lengthof r0;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        r1 = r0[i1];

        $r2 = new org.apache.zookeeper.server.auth.KerberosName;

        specialinvoke $r2.<org.apache.zookeeper.server.auth.KerberosName: void <init>(java.lang.String)>(r1);

        $r4 = <java.lang.System: java.io.PrintStream out>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Name: ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" to ");

        $r8 = virtualinvoke $r2.<org.apache.zookeeper.server.auth.KerberosName: java.lang.String getShortName()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10);

        i1 = i1 + 1;

        goto label1;

     label2:
        return;
    }

    static java.util.regex.Pattern access$000()
    {
        java.util.regex.Pattern $r0;

        $r0 = <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern parameterPattern>;

        return $r0;
    }

    static java.lang.String access$100()
    {
        java.lang.String $r0;

        $r0 = <org.apache.zookeeper.server.auth.KerberosName: java.lang.String defaultRealm>;

        return $r0;
    }

    static java.util.regex.Pattern access$200()
    {
        java.util.regex.Pattern $r0;

        $r0 = <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern nonSimplePattern>;

        return $r0;
    }

    static void <clinit>()
    {
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6, $r10;
        java.lang.Exception $r7;
        java.util.regex.Pattern $r0, $r1, $r2, $r3;
        java.lang.String $r4, $r8, $r9;
        boolean $z0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([^/@]*)(/([^/@]*))?@([^/@]*)");

        <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern nameParser> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("([^$]*)(\\$(\\d*))?");

        <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern parameterPattern> = $r1;

        $r2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s*((DEFAULT)|(RULE:\\[(\\d*):([^\\]]*)](\\(([^)]*)\\))?(s/([^/]*)/([^/]*)/(g)?)?))");

        <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern ruleParser> = $r2;

        $r3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[/@]");

        <org.apache.zookeeper.server.auth.KerberosName: java.util.regex.Pattern nonSimplePattern> = $r3;

     label1:
        $r4 = staticinvoke <org.apache.zookeeper.server.util.KerberosUtil: java.lang.String getDefaultRealm()>();

        <org.apache.zookeeper.server.auth.KerberosName: java.lang.String defaultRealm> = $r4;

     label2:
        goto label5;

     label3:
        $r7 := @caughtexception;

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.requireKerberosConfig");

        if $r8 == null goto label4;

        $r9 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("zookeeper.requireKerberosConfig");

        $z0 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("true");

        if $z0 == 0 goto label4;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Can\'t get Kerberos configuration", $r7);

        throw $r10;

     label4:
        <org.apache.zookeeper.server.auth.KerberosName: java.lang.String defaultRealm> = "";

     label5:
        staticinvoke <org.apache.zookeeper.server.auth.KerberosName: void setConfiguration()>();

     label6:
        goto label8;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Could not configure Kerberos principal name mapping.");

        throw $r6;

     label8:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.io.IOException from label5 to label6 with label7;
    }
}
