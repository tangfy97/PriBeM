public abstract class org.apache.batik.svggen.DefaultCachedImageHandler extends java.lang.Object implements org.apache.batik.svggen.CachedImageHandler, org.apache.batik.svggen.SVGSyntax, org.apache.batik.svggen.ErrorConstants
{
    static final java.lang.String XLINK_NAMESPACE_URI;
    static final java.awt.geom.AffineTransform IDENTITY;
    private static java.lang.reflect.Method createGraphics;
    private static boolean initDone;
    private static final java.lang.Class[] paramc;
    private static java.lang.Object[] paramo;
    protected org.apache.batik.svggen.ImageCacher imageCacher;
    static java.lang.Class class$java$awt$image$BufferedImage;

    public void <init>()
    {
        org.apache.batik.svggen.DefaultCachedImageHandler r0;

        r0 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.batik.svggen.ImageCacher getImageCacher()
    {
        org.apache.batik.svggen.DefaultCachedImageHandler r0;
        org.apache.batik.svggen.ImageCacher $r1;

        r0 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        $r1 = r0.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher>;

        return $r1;
    }

    void setImageCacher(org.apache.batik.svggen.ImageCacher)
    {
        org.apache.batik.svggen.ImageCacher r0, $r2, $r3, $r4;
        org.apache.batik.svggen.DOMTreeManager r6;
        java.lang.IllegalArgumentException $r5;
        org.apache.batik.svggen.DefaultCachedImageHandler r1;

        r1 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: org.apache.batik.svggen.ImageCacher;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label1:
        r6 = null;

        $r2 = r1.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher>;

        if $r2 == null goto label2;

        $r4 = r1.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher>;

        r6 = virtualinvoke $r4.<org.apache.batik.svggen.ImageCacher: org.apache.batik.svggen.DOMTreeManager getDOMTreeManager()>();

     label2:
        r1.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher> = r0;

        if r6 == null goto label3;

        $r3 = r1.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher>;

        virtualinvoke $r3.<org.apache.batik.svggen.ImageCacher: void setDOMTreeManager(org.apache.batik.svggen.DOMTreeManager)>(r6);

     label3:
        return;
    }

    public void setDOMTreeManager(org.apache.batik.svggen.DOMTreeManager)
    {
        org.apache.batik.svggen.DOMTreeManager r1;
        org.apache.batik.svggen.DefaultCachedImageHandler r0;
        org.apache.batik.svggen.ImageCacher $r2;

        r0 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r1 := @parameter0: org.apache.batik.svggen.DOMTreeManager;

        $r2 = r0.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher>;

        virtualinvoke $r2.<org.apache.batik.svggen.ImageCacher: void setDOMTreeManager(org.apache.batik.svggen.DOMTreeManager)>(r1);

        return;
    }

    private static java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)
    {
        java.lang.Throwable $r11, $r12;
        java.lang.Object[] $r1, $r2, $r9;
        java.awt.Graphics2D $r5, r14;
        java.lang.reflect.Method $r3, $r8, $r13;
        boolean $z0;
        java.awt.image.BufferedImage r0;
        java.lang.Class[] $r7;
        java.lang.Exception $r10;
        java.lang.Object $r4;
        java.lang.Class $r6;

        r0 := @parameter0: java.awt.image.BufferedImage;

        $z0 = <org.apache.batik.svggen.DefaultCachedImageHandler: boolean initDone>;

        if $z0 != 0 goto label08;

     label01:
        $r6 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.apache.batik.ext.awt.image.GraphicsUtil");

        $r7 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Class[] paramc>;

        $r8 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("createGraphics", $r7);

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.reflect.Method createGraphics> = $r8;

        $r9 = newarray (java.lang.Object)[1];

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Object[] paramo> = $r9;

     label02:
        goto label14;

     label03:
        goto label08;

     label04:
        $r12 := @caughtexception;

        goto label15;

     label05:
        goto label08;

     label06:
        $r11 := @caughtexception;

        goto label16;

     label07:
        throw $r11;

     label08:
        $r13 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.reflect.Method createGraphics>;

        if $r13 != null goto label09;

        $r5 = virtualinvoke r0.<java.awt.image.BufferedImage: java.awt.Graphics2D createGraphics()>();

        return $r5;

     label09:
        $r1 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Object[] paramo>;

        $r1[0] = r0;

        r14 = null;

     label10:
        $r3 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.reflect.Method createGraphics>;

        $r2 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Object[] paramo>;

        $r4 = virtualinvoke $r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r2);

        r14 = (java.awt.Graphics2D) $r4;

     label11:
        goto label13;

     label12:
        $r10 := @caughtexception;

     label13:
        return r14;

     label14:
        <org.apache.batik.svggen.DefaultCachedImageHandler: boolean initDone> = 1;

        goto label03;

     label15:
        <org.apache.batik.svggen.DefaultCachedImageHandler: boolean initDone> = 1;

        goto label05;

     label16:
        <org.apache.batik.svggen.DefaultCachedImageHandler: boolean initDone> = 1;

        goto label07;

        catch java.lang.Throwable from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label06 with label06;
        catch java.lang.Exception from label10 to label11 with label12;
    }

    public org.w3c.dom.Element createElement(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.w3c.dom.Element $r2;
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.w3c.dom.Document $r1;
        org.apache.batik.svggen.DefaultCachedImageHandler r3;

        r3 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        $r1 = virtualinvoke r0.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document getDOMFactory()>();

        $r2 = interfaceinvoke $r1.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "image");

        return $r2;
    }

    public java.awt.geom.AffineTransform handleImage(java.awt.Image, org.w3c.dom.Element, int, int, int, int, org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r5;
        int $i0, $i1, i2, i3, i4, i5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.batik.svggen.ErrorHandler $r7;
        java.awt.Image r0;
        org.apache.batik.svggen.SVGGraphics2DIOException $r4, $r6;
        java.awt.geom.AffineTransform r8;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.SVGGeneratorContext r3;
        org.apache.batik.svggen.DefaultCachedImageHandler r1;

        r1 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: java.awt.Image;

        r2 := @parameter1: org.w3c.dom.Element;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: org.apache.batik.svggen.SVGGeneratorContext;

        $i0 = virtualinvoke r0.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r0.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        r8 = null;

        if $i0 == 0 goto label1;

        if $i1 == 0 goto label1;

        if i2 == 0 goto label1;

        if i3 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label9;

     label2:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleHREF(java.awt.Image,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>(r0, r2, r3);

     label3:
        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = r3.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ErrorHandler errorHandler>;

        interfaceinvoke $r7.<org.apache.batik.svggen.ErrorHandler: void handleError(org.apache.batik.svggen.SVGGraphics2DIOException)>($r6);

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label8:
        $d5 = (double) i4;

        $d4 = (double) i5;

        $d3 = (double) $i0;

        $d2 = (double) $i1;

        $d1 = (double) i2;

        $d0 = (double) i3;

        r8 = virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.geom.AffineTransform handleTransform(org.w3c.dom.Element,double,double,double,double,double,double,org.apache.batik.svggen.SVGGeneratorContext)>(r2, $d5, $d4, $d3, $d2, $d1, $d0, r3);

     label9:
        return r8;

        catch org.apache.batik.svggen.SVGGraphics2DIOException from label2 to label3 with label4;
        catch org.apache.batik.svggen.SVGGraphics2DIOException from label5 to label6 with label7;
    }

    public java.awt.geom.AffineTransform handleImage(java.awt.image.RenderedImage, org.w3c.dom.Element, int, int, int, int, org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r5;
        int $i0, $i1, i2, i3, i4, i5;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        org.apache.batik.svggen.ErrorHandler $r7;
        org.apache.batik.svggen.SVGGraphics2DIOException $r4, $r6;
        java.awt.image.RenderedImage r0;
        java.awt.geom.AffineTransform r8;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.SVGGeneratorContext r3;
        org.apache.batik.svggen.DefaultCachedImageHandler r1;

        r1 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r2 := @parameter1: org.w3c.dom.Element;

        i4 := @parameter2: int;

        i5 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        r3 := @parameter6: org.apache.batik.svggen.SVGGeneratorContext;

        $i0 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getWidth()>();

        $i1 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getHeight()>();

        r8 = null;

        if $i0 == 0 goto label1;

        if $i1 == 0 goto label1;

        if i2 == 0 goto label1;

        if i3 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label9;

     label2:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>(r0, r2, r3);

     label3:
        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = r3.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ErrorHandler errorHandler>;

        interfaceinvoke $r7.<org.apache.batik.svggen.ErrorHandler: void handleError(org.apache.batik.svggen.SVGGraphics2DIOException)>($r6);

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label8:
        $d5 = (double) i4;

        $d4 = (double) i5;

        $d3 = (double) $i0;

        $d2 = (double) $i1;

        $d1 = (double) i2;

        $d0 = (double) i3;

        r8 = virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.geom.AffineTransform handleTransform(org.w3c.dom.Element,double,double,double,double,double,double,org.apache.batik.svggen.SVGGeneratorContext)>(r2, $d5, $d4, $d3, $d2, $d1, $d0, r3);

     label9:
        return r8;

        catch org.apache.batik.svggen.SVGGraphics2DIOException from label2 to label3 with label4;
        catch org.apache.batik.svggen.SVGGraphics2DIOException from label5 to label6 with label7;
    }

    public java.awt.geom.AffineTransform handleImage(java.awt.image.renderable.RenderableImage, org.w3c.dom.Element, double, double, double, double, org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r5;
        byte $b0, $b1, $b2, $b3;
        java.awt.image.renderable.RenderableImage r0;
        double d0, d1, d2, d3, d4, d5;
        org.apache.batik.svggen.ErrorHandler $r7;
        org.apache.batik.svggen.SVGGraphics2DIOException $r4, $r6;
        java.awt.geom.AffineTransform r8;
        org.w3c.dom.Element r2;
        org.apache.batik.svggen.SVGGeneratorContext r3;
        float $f0, $f1;
        org.apache.batik.svggen.DefaultCachedImageHandler r1;

        r1 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: java.awt.image.renderable.RenderableImage;

        r2 := @parameter1: org.w3c.dom.Element;

        d4 := @parameter2: double;

        d5 := @parameter3: double;

        d2 := @parameter4: double;

        d3 := @parameter5: double;

        r3 := @parameter6: org.apache.batik.svggen.SVGGeneratorContext;

        $f0 = interfaceinvoke r0.<java.awt.image.renderable.RenderableImage: float getWidth()>();

        d0 = (double) $f0;

        $f1 = interfaceinvoke r0.<java.awt.image.renderable.RenderableImage: float getHeight()>();

        d1 = (double) $f1;

        r8 = null;

        $b0 = d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b1 = d1 cmpl 0.0;

        if $b1 == 0 goto label1;

        $b2 = d2 cmpl 0.0;

        if $b2 == 0 goto label1;

        $b3 = d3 cmpl 0.0;

        if $b3 != 0 goto label2;

     label1:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label9;

     label2:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleHREF(java.awt.image.renderable.RenderableImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>(r0, r2, r3);

     label3:
        goto label8;

     label4:
        $r6 := @caughtexception;

     label5:
        $r7 = r3.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.ErrorHandler errorHandler>;

        interfaceinvoke $r7.<org.apache.batik.svggen.ErrorHandler: void handleError(org.apache.batik.svggen.SVGGraphics2DIOException)>($r6);

     label6:
        goto label8;

     label7:
        $r4 := @caughtexception;

        $r5 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r5.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.Exception)>($r4);

        throw $r5;

     label8:
        r8 = virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.geom.AffineTransform handleTransform(org.w3c.dom.Element,double,double,double,double,double,double,org.apache.batik.svggen.SVGGeneratorContext)>(r2, d4, d5, d0, d1, d2, d3, r3);

     label9:
        return r8;

        catch org.apache.batik.svggen.SVGGraphics2DIOException from label2 to label3 with label4;
        catch org.apache.batik.svggen.SVGGraphics2DIOException from label5 to label6 with label7;
    }

    protected java.awt.geom.AffineTransform handleTransform(org.w3c.dom.Element, double, double, double, double, double, double, org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;
        java.lang.String $r2, $r3, $r4, $r5;
        org.apache.batik.svggen.DefaultCachedImageHandler r6;
        double d0, d1, d2, d3, d4, d5;

        r6 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: org.w3c.dom.Element;

        d0 := @parameter1: double;

        d1 := @parameter2: double;

        d4 := @parameter3: double;

        d5 := @parameter4: double;

        d2 := @parameter5: double;

        d3 := @parameter6: double;

        r1 := @parameter7: org.apache.batik.svggen.SVGGeneratorContext;

        $r2 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d0);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "x", $r2);

        $r3 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d1);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "y", $r3);

        $r4 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d2);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", $r4);

        $r5 = virtualinvoke r1.<org.apache.batik.svggen.SVGGeneratorContext: java.lang.String doubleString(double)>(d3);

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", $r5);

        return null;
    }

    protected void handleEmptyImage(org.w3c.dom.Element)
    {
        org.w3c.dom.Element r0;
        org.apache.batik.svggen.DefaultCachedImageHandler r1;

        r1 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: org.w3c.dom.Element;

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "xlink:href", "");

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "width", "0");

        interfaceinvoke r0.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "height", "0");

        return;
    }

    public void handleHREF(java.awt.Image, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.awt.Image r0;
        java.awt.image.BufferedImage $r4;
        java.awt.image.RenderedImage $r7;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r8;
        java.awt.Dimension $r3;
        org.w3c.dom.Element r2;
        java.awt.Graphics2D $r5;
        org.apache.batik.svggen.SVGGeneratorContext r6;
        int $i0, $i1;
        org.apache.batik.svggen.DefaultCachedImageHandler r1;
        boolean $z0;

        r1 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: java.awt.Image;

        r2 := @parameter1: org.w3c.dom.Element;

        r6 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        if r0 != null goto label1;

        $r8 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r8.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("image should not be null");

        throw $r8;

     label1:
        $i0 = virtualinvoke r0.<java.awt.Image: int getWidth(java.awt.image.ImageObserver)>(null);

        $i1 = virtualinvoke r0.<java.awt.Image: int getHeight(java.awt.image.ImageObserver)>(null);

        if $i0 == 0 goto label2;

        if $i1 != 0 goto label3;

     label2:
        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleEmptyImage(org.w3c.dom.Element)>(r2);

        goto label5;

     label3:
        $z0 = r0 instanceof java.awt.image.RenderedImage;

        if $z0 == 0 goto label4;

        $r7 = (java.awt.image.RenderedImage) r0;

        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>($r7, r2, r6);

        goto label5;

     label4:
        $r3 = new java.awt.Dimension;

        specialinvoke $r3.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r4 = virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)>($r3);

        $r5 = staticinvoke <org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>($r4);

        virtualinvoke $r5.<java.awt.Graphics: boolean drawImage(java.awt.Image,int,int,java.awt.image.ImageObserver)>(r0, 0, 0, null);

        virtualinvoke $r5.<java.awt.Graphics: void dispose()>();

        virtualinvoke r1.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>($r4, r2, r6);

     label5:
        return;
    }

    public java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)
    {
        java.awt.Dimension r1;
        java.awt.image.BufferedImage $r0;
        int $i0, $i1, $i2;
        org.apache.batik.svggen.DefaultCachedImageHandler r2;

        r2 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r1 := @parameter0: java.awt.Dimension;

        $r0 = new java.awt.image.BufferedImage;

        $i0 = r1.<java.awt.Dimension: int width>;

        $i1 = r1.<java.awt.Dimension: int height>;

        $i2 = virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: int getBufferedImageType()>();

        specialinvoke $r0.<java.awt.image.BufferedImage: void <init>(int,int,int)>($i0, $i1, $i2);

        return $r0;
    }

    protected void handleHREF(java.awt.image.RenderedImage, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.awt.image.BufferedImage $r3, $r8, r9;
        java.awt.image.RenderedImage r0;
        java.awt.geom.AffineTransform $r5;
        java.awt.Dimension $r1;
        org.w3c.dom.Element r6;
        java.awt.Graphics2D $r4;
        org.apache.batik.svggen.SVGGeneratorContext r7;
        int $i0, $i1, $i2, $i3;
        org.apache.batik.svggen.DefaultCachedImageHandler r2;
        boolean $z0;

        r2 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r0 := @parameter0: java.awt.image.RenderedImage;

        r6 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $z0 = r0 instanceof java.awt.image.BufferedImage;

        if $z0 == 0 goto label1;

        $r8 = (java.awt.image.BufferedImage) r0;

        $i2 = virtualinvoke $r8.<java.awt.image.BufferedImage: int getType()>();

        $i3 = virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: int getBufferedImageType()>();

        if $i2 != $i3 goto label1;

        r9 = (java.awt.image.BufferedImage) r0;

        goto label2;

     label1:
        $r1 = new java.awt.Dimension;

        $i0 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getWidth()>();

        $i1 = interfaceinvoke r0.<java.awt.image.RenderedImage: int getHeight()>();

        specialinvoke $r1.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)>($r1);

        r9 = $r3;

        $r4 = staticinvoke <org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>($r3);

        $r5 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.geom.AffineTransform IDENTITY>;

        virtualinvoke $r4.<java.awt.Graphics2D: void drawRenderedImage(java.awt.image.RenderedImage,java.awt.geom.AffineTransform)>(r0, $r5);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

     label2:
        virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: void cacheBufferedImage(org.w3c.dom.Element,java.awt.image.BufferedImage,org.apache.batik.svggen.SVGGeneratorContext)>(r6, r9, r7);

        return;
    }

    protected void handleHREF(java.awt.image.renderable.RenderableImage, org.w3c.dom.Element, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.awt.Graphics2D $r4;
        int $i0, $i1;
        java.awt.image.renderable.RenderableImage r1;
        double $d0, $d1, $d2, $d3;
        java.awt.image.BufferedImage $r3;
        java.awt.geom.AffineTransform $r5;
        java.awt.Dimension $r0;
        org.w3c.dom.Element r6;
        org.apache.batik.svggen.SVGGeneratorContext r7;
        float $f0, $f1;
        org.apache.batik.svggen.DefaultCachedImageHandler r2;

        r2 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r1 := @parameter0: java.awt.image.renderable.RenderableImage;

        r6 := @parameter1: org.w3c.dom.Element;

        r7 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        $r0 = new java.awt.Dimension;

        $f0 = interfaceinvoke r1.<java.awt.image.renderable.RenderableImage: float getWidth()>();

        $d0 = (double) $f0;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d0);

        $i0 = (int) $d1;

        $f1 = interfaceinvoke r1.<java.awt.image.renderable.RenderableImage: float getHeight()>();

        $d2 = (double) $f1;

        $d3 = staticinvoke <java.lang.Math: double ceil(double)>($d2);

        $i1 = (int) $d3;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i0, $i1);

        $r3 = virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.image.BufferedImage buildBufferedImage(java.awt.Dimension)>($r0);

        $r4 = staticinvoke <org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.Graphics2D createGraphics(java.awt.image.BufferedImage)>($r3);

        $r5 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.geom.AffineTransform IDENTITY>;

        virtualinvoke $r4.<java.awt.Graphics2D: void drawRenderableImage(java.awt.image.renderable.RenderableImage,java.awt.geom.AffineTransform)>(r1, $r5);

        virtualinvoke $r4.<java.awt.Graphics: void dispose()>();

        virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: void handleHREF(java.awt.image.RenderedImage,org.w3c.dom.Element,org.apache.batik.svggen.SVGGeneratorContext)>($r3, r6, r7);

        return;
    }

    protected void cacheBufferedImage(org.w3c.dom.Element, java.awt.image.BufferedImage, org.apache.batik.svggen.SVGGeneratorContext) throws org.apache.batik.svggen.SVGGraphics2DIOException
    {
        java.io.ByteArrayOutputStream $r1;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r12;
        java.lang.StringBuffer $r7, $r9, $r10;
        int $i0, $i1;
        java.lang.String $r5, $r8, $r11;
        java.awt.image.BufferedImage r3;
        org.apache.batik.svggen.SVGGraphics2DIOException $r14;
        java.io.IOException $r13;
        org.w3c.dom.Element r6;
        org.apache.batik.svggen.SVGGeneratorContext r0;
        org.apache.batik.svggen.ImageCacher $r4;
        org.apache.batik.svggen.DefaultCachedImageHandler r2;

        r2 := @this: org.apache.batik.svggen.DefaultCachedImageHandler;

        r6 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: java.awt.image.BufferedImage;

        r0 := @parameter2: org.apache.batik.svggen.SVGGeneratorContext;

        if r0 != null goto label1;

        $r12 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r12.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("generatorContext should not be null");

        throw $r12;

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

        virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: void encodeImage(java.awt.image.BufferedImage,java.io.OutputStream)>(r3, $r1);

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        virtualinvoke $r1.<java.io.ByteArrayOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r13 := @caughtexception;

        $r14 = new org.apache.batik.svggen.SVGGraphics2DIOException;

        specialinvoke $r14.<org.apache.batik.svggen.SVGGraphics2DIOException: void <init>(java.lang.String,java.io.IOException)>("unexpected exception", $r13);

        throw $r14;

     label4:
        $r4 = r2.<org.apache.batik.svggen.DefaultCachedImageHandler: org.apache.batik.svggen.ImageCacher imageCacher>;

        $i0 = virtualinvoke r3.<java.awt.image.BufferedImage: int getWidth()>();

        $i1 = virtualinvoke r3.<java.awt.image.BufferedImage: int getHeight()>();

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.ImageCacher: java.lang.String lookup(java.io.ByteArrayOutputStream,int,int,org.apache.batik.svggen.SVGGeneratorContext)>($r1, $i0, $i1, r0);

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke r2.<org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.String getRefPrefix()>();

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>("http://www.w3.org/1999/xlink", "xlink:href", $r11);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public abstract java.lang.String getRefPrefix();

    public abstract void encodeImage(java.awt.image.BufferedImage, java.io.OutputStream) throws java.io.IOException;

    public abstract int getBufferedImageType();

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r1;
        java.lang.Class $r2, $r3;
        java.awt.geom.AffineTransform $r0;

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.String XLINK_NAMESPACE_URI> = "http://www.w3.org/1999/xlink";

        $r0 = new java.awt.geom.AffineTransform;

        specialinvoke $r0.<java.awt.geom.AffineTransform: void <init>()>();

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.awt.geom.AffineTransform IDENTITY> = $r0;

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.reflect.Method createGraphics> = null;

        <org.apache.batik.svggen.DefaultCachedImageHandler: boolean initDone> = 0;

        $r1 = newarray (java.lang.Class)[1];

        $r2 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Class class$java$awt$image$BufferedImage>;

        if $r2 != null goto label1;

        $r3 = staticinvoke <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Class class$(java.lang.String)>("java.awt.image.BufferedImage");

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Class class$java$awt$image$BufferedImage> = $r3;

        goto label2;

     label1:
        $r3 = <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Class class$java$awt$image$BufferedImage>;

     label2:
        $r1[0] = $r3;

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Class[] paramc> = $r1;

        <org.apache.batik.svggen.DefaultCachedImageHandler: java.lang.Object[] paramo> = null;

        return;
    }
}
