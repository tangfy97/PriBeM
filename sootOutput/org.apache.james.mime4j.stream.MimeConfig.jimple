public final class org.apache.james.mime4j.stream.MimeConfig extends java.lang.Object implements java.lang.Cloneable
{
    private boolean strictParsing;
    private int maxLineLen;
    private int maxHeaderCount;
    private int maxHeaderLen;
    private long maxContentLen;
    private boolean countLineNumbers;
    private java.lang.String headlessParsing;
    private boolean malformedHeaderStartsBody;

    public void <init>()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing> = 0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers> = 0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody> = 0;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen> = 1000;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount> = 1000;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen> = 10000;

        r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen> = -1L;

        r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing> = null;

        return;
    }

    public boolean isMalformedHeaderStartsBody()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody>;

        return $z0;
    }

    public void setMalformedHeaderStartsBody(boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean malformedHeaderStartsBody> = z0;

        return;
    }

    public boolean isStrictParsing()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing>;

        return $z0;
    }

    public void setStrictParsing(boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing> = z0;

        return;
    }

    public int getMaxLineLen()
    {
        int $i0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen>;

        return $i0;
    }

    public void setMaxLineLen(int)
    {
        int i0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen> = i0;

        return;
    }

    public int getMaxHeaderCount()
    {
        int $i0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount>;

        return $i0;
    }

    public void setMaxHeaderCount(int)
    {
        int i0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount> = i0;

        return;
    }

    public int getMaxHeaderLen()
    {
        int $i0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $i0 = r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen>;

        return $i0;
    }

    public void setMaxHeaderLen(int)
    {
        int i0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        i0 := @parameter0: int;

        r0.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderLen> = i0;

        return;
    }

    public long getMaxContentLen()
    {
        long $l0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $l0 = r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen>;

        return $l0;
    }

    public void setMaxContentLen(long)
    {
        long l0;
        org.apache.james.mime4j.stream.MimeConfig r0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        l0 := @parameter0: long;

        r0.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen> = l0;

        return;
    }

    public boolean isCountLineNumbers()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $z0 = r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers>;

        return $z0;
    }

    public void setCountLineNumbers(boolean)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        boolean z0;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        z0 := @parameter0: boolean;

        r0.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers> = z0;

        return;
    }

    public java.lang.String getHeadlessParsing()
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.String $r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $r1 = r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing>;

        return $r1;
    }

    public void setHeadlessParsing(java.lang.String)
    {
        org.apache.james.mime4j.stream.MimeConfig r0;
        java.lang.String r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.james.mime4j.stream.MimeConfig: java.lang.String headlessParsing> = r1;

        return;
    }

    public org.apache.james.mime4j.stream.MimeConfig clone()
    {
        java.lang.InternalError $r4;
        java.lang.Object $r1;
        org.apache.james.mime4j.stream.MimeConfig r0, $r2;
        java.lang.CloneNotSupportedException $r3;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        $r2 = (org.apache.james.mime4j.stream.MimeConfig) $r1;

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.InternalError;

        specialinvoke $r4.<java.lang.InternalError: void <init>()>();

        throw $r4;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label3;
    }

    public java.lang.String toString()
    {
        long $l2;
        org.apache.james.mime4j.stream.MimeConfig r2;
        int $i0, $i1;
        java.lang.String $r13;
        boolean $z0, $z1;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12;

        r2 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[strict parsing: ");

        $z0 = r2.<org.apache.james.mime4j.stream.MimeConfig: boolean strictParsing>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max line length: ");

        $i0 = r2.<org.apache.james.mime4j.stream.MimeConfig: int maxLineLen>;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max header count: ");

        $i1 = r2.<org.apache.james.mime4j.stream.MimeConfig: int maxHeaderCount>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", max content length: ");

        $l2 = r2.<org.apache.james.mime4j.stream.MimeConfig: long maxContentLen>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", count line numbers: ");

        $z1 = r2.<org.apache.james.mime4j.stream.MimeConfig: boolean countLineNumbers>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        org.apache.james.mime4j.stream.MimeConfig r0, $r1;

        r0 := @this: org.apache.james.mime4j.stream.MimeConfig;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.stream.MimeConfig: org.apache.james.mime4j.stream.MimeConfig clone()>();

        return $r1;
    }
}
