public class org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi extends java.security.cert.CertPathBuilderSpi
{
    private java.lang.Exception certPathException;

    public void <init>()
    {
        org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi r0;

        r0 := @this: org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi;

        specialinvoke r0.<java.security.cert.CertPathBuilderSpi: void <init>()>();

        return;
    }

    public java.security.cert.CertPathBuilderResult engineBuild(java.security.cert.CertPathParameters) throws java.security.cert.CertPathBuilderException, java.security.InvalidAlgorithmParameterException
    {
        java.security.cert.CertPathParameters r0;
        byte[] $r32;
        org.bouncycastle.jce.exception.ExtCertPathBuilderException $r13, $r59, $r61, $r63;
        org.bouncycastle.x509.X509CertStoreSelector $r17;
        org.bouncycastle.x509.X509AttributeCertStoreSelector $r5;
        org.bouncycastle.x509.ExtendedPKIXBuilderParameters r64;
        java.security.cert.CertPathBuilderResult r65;
        java.lang.Exception $r10, $r12, $r14;
        java.security.cert.PKIXBuilderParameters $r1;
        java.lang.StringBuilder $r35, $r36, $r39, $r40, $r43, $r44, $r47, $r48, $r51, $r52, $r55, $r56;
        java.util.ArrayList $r3;
        java.security.InvalidAlgorithmParameterException $r46;
        java.security.cert.CertPathBuilderException $r11, $r24, $r33, $r34;
        java.lang.String $r38, $r42, $r45, $r50, $r54, $r57;
        java.io.IOException $r58;
        java.security.cert.X509Certificate $r23;
        org.bouncycastle.x509.ExtendedPKIXParameters $r2;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        java.security.Principal[] $r19;
        java.util.Collection $r7, $r27, $r29;
        java.util.List $r6, $r26, $r28;
        java.security.Principal $r25, $r30;
        org.bouncycastle.x509.AttributeCertificateIssuer $r18;
        javax.security.auth.x500.X500Principal $r31;
        java.util.HashSet $r20;
        int $i0, i1;
        org.bouncycastle.jce.provider.AnnotatedException $r60, $r62;
        org.bouncycastle.util.Selector $r4;
        java.util.Iterator $r8, $r21;
        org.bouncycastle.x509.X509AttributeCertificate r16;
        org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi r9;
        java.lang.Object $r15, $r22;
        java.lang.Class $r37, $r41, $r49, $r53;

        r9 := @this: org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi;

        r0 := @parameter0: java.security.cert.CertPathParameters;

        $z0 = r0 instanceof java.security.cert.PKIXBuilderParameters;

        if $z0 != 0 goto label01;

        $z8 = r0 instanceof org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        if $z8 != 0 goto label01;

        $r46 = new java.security.InvalidAlgorithmParameterException;

        $r47 = new java.lang.StringBuilder;

        specialinvoke $r47.<java.lang.StringBuilder: void <init>()>();

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Parameters must be an instance of ");

        $r49 = class "Ljava/security/cert/PKIXBuilderParameters;";

        $r50 = virtualinvoke $r49.<java.lang.Class: java.lang.String getName()>();

        $r51 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r53 = class "Lorg/bouncycastle/x509/ExtendedPKIXBuilderParameters;";

        $r54 = virtualinvoke $r53.<java.lang.Class: java.lang.String getName()>();

        $r55 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r46.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>($r57);

        throw $r46;

     label01:
        $z1 = r0 instanceof org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        if $z1 == 0 goto label02;

        r64 = (org.bouncycastle.x509.ExtendedPKIXBuilderParameters) r0;

        goto label03;

     label02:
        $r1 = (java.security.cert.PKIXBuilderParameters) r0;

        $r2 = staticinvoke <org.bouncycastle.x509.ExtendedPKIXBuilderParameters: org.bouncycastle.x509.ExtendedPKIXParameters getInstance(java.security.cert.PKIXParameters)>($r1);

        r64 = (org.bouncycastle.x509.ExtendedPKIXBuilderParameters) $r2;

     label03:
        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        $r4 = virtualinvoke r64.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: org.bouncycastle.util.Selector getTargetConstraints()>();

        $z2 = $r4 instanceof org.bouncycastle.x509.X509AttributeCertStoreSelector;

        if $z2 != 0 goto label04;

        $r34 = new java.security.cert.CertPathBuilderException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TargetConstraints must be an instance of ");

        $r37 = class "Lorg/bouncycastle/x509/X509AttributeCertStoreSelector;";

        $r38 = virtualinvoke $r37.<java.lang.Class: java.lang.String getName()>();

        $r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r41 = virtualinvoke r9.<java.lang.Object: java.lang.Class getClass()>();

        $r42 = virtualinvoke $r41.<java.lang.Class: java.lang.String getName()>();

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" class.");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>($r45);

        throw $r34;

     label04:
        $r5 = (org.bouncycastle.x509.X509AttributeCertStoreSelector) $r4;

        $r6 = virtualinvoke r64.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

        $r7 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509AttributeCertStoreSelector,java.util.List)>($r5, $r6);

     label05:
        goto label07;

     label06:
        $r62 := @caughtexception;

        $r63 = new org.bouncycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r63.<org.bouncycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Error finding target attribute certificate.", $r62);

        throw $r63;

     label07:
        $z3 = interfaceinvoke $r7.<java.util.Collection: boolean isEmpty()>();

        if $z3 == 0 goto label08;

        $r33 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r33.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("No attribute certificate found matching targetContraints.");

        throw $r33;

     label08:
        r65 = null;

        $r8 = interfaceinvoke $r7.<java.util.Collection: java.util.Iterator iterator()>();

     label09:
        $z4 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label21;

        if r65 != null goto label21;

        $r15 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.bouncycastle.x509.X509AttributeCertificate) $r15;

        $r17 = new org.bouncycastle.x509.X509CertStoreSelector;

        specialinvoke $r17.<org.bouncycastle.x509.X509CertStoreSelector: void <init>()>();

        $r18 = interfaceinvoke r16.<org.bouncycastle.x509.X509AttributeCertificate: org.bouncycastle.x509.AttributeCertificateIssuer getIssuer()>();

        $r19 = virtualinvoke $r18.<org.bouncycastle.x509.AttributeCertificateIssuer: java.security.Principal[] getPrincipals()>();

        $r20 = new java.util.HashSet;

        specialinvoke $r20.<java.util.HashSet: void <init>()>();

        i1 = 0;

     label10:
        $i0 = lengthof $r19;

        if i1 >= $i0 goto label17;

     label11:
        $r25 = $r19[i1];

        $z7 = $r25 instanceof javax.security.auth.x500.X500Principal;

        if $z7 == 0 goto label12;

        $r30 = $r19[i1];

        $r31 = (javax.security.auth.x500.X500Principal) $r30;

        $r32 = virtualinvoke $r31.<javax.security.auth.x500.X500Principal: byte[] getEncoded()>();

        virtualinvoke $r17.<org.bouncycastle.x509.X509CertStoreSelector: void setSubject(byte[])>($r32);

     label12:
        $r26 = virtualinvoke r64.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getStores()>();

        $r27 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r17, $r26);

        interfaceinvoke $r20.<java.util.Set: boolean addAll(java.util.Collection)>($r27);

        $r28 = virtualinvoke r64.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.List getCertStores()>();

        $r29 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findCertificates(org.bouncycastle.x509.X509CertStoreSelector,java.util.List)>($r17, $r28);

        interfaceinvoke $r20.<java.util.Set: boolean addAll(java.util.Collection)>($r29);

     label13:
        goto label16;

     label14:
        $r60 := @caughtexception;

        $r61 = new org.bouncycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r61.<org.bouncycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Public key certificate for attribute certificate cannot be searched.", $r60);

        throw $r61;

     label15:
        $r58 := @caughtexception;

        $r59 = new org.bouncycastle.jce.exception.ExtCertPathBuilderException;

        specialinvoke $r59.<org.bouncycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("cannot encode X500Principal.", $r58);

        throw $r59;

     label16:
        i1 = i1 + 1;

        goto label10;

     label17:
        $z5 = interfaceinvoke $r20.<java.util.Set: boolean isEmpty()>();

        if $z5 == 0 goto label18;

        $r24 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r24.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("Public key certificate for attribute certificate cannot be found.");

        throw $r24;

     label18:
        $r21 = interfaceinvoke $r20.<java.util.Set: java.util.Iterator iterator()>();

     label19:
        $z6 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label20;

        if r65 != null goto label20;

        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        $r23 = (java.security.cert.X509Certificate) $r22;

        r65 = specialinvoke r9.<org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)>(r16, $r23, r64, $r3);

        goto label19;

     label20:
        goto label09;

     label21:
        if r65 != null goto label22;

        $r12 = r9.<org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException>;

        if $r12 == null goto label22;

        $r13 = new org.bouncycastle.jce.exception.ExtCertPathBuilderException;

        $r14 = r9.<org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException>;

        specialinvoke $r13.<org.bouncycastle.jce.exception.ExtCertPathBuilderException: void <init>(java.lang.String,java.lang.Throwable)>("Possible certificate chain could not be validated.", $r14);

        throw $r13;

     label22:
        if r65 != null goto label23;

        $r10 = r9.<org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException>;

        if $r10 != null goto label23;

        $r11 = new java.security.cert.CertPathBuilderException;

        specialinvoke $r11.<java.security.cert.CertPathBuilderException: void <init>(java.lang.String)>("Unable to find certificate chain.");

        throw $r11;

     label23:
        return r65;

        catch org.bouncycastle.jce.provider.AnnotatedException from label04 to label05 with label06;
        catch org.bouncycastle.jce.provider.AnnotatedException from label11 to label13 with label14;
        catch java.io.IOException from label11 to label13 with label15;
    }

    private java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate, java.security.cert.X509Certificate, org.bouncycastle.x509.ExtendedPKIXBuilderParameters, java.util.List)
    {
        java.security.cert.X509Certificate r1, r38;
        java.security.cert.CertificateFactory $r4;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.Collection $r10;
        org.bouncycastle.x509.ExtendedPKIXBuilderParameters r2;
        java.util.Set $r3, $r6;
        java.security.cert.CertPathValidator $r5;
        java.security.cert.CertPathBuilderResult r36;
        java.security.cert.CertPathValidatorResult $r19;
        java.lang.Exception $r30, $r32, $r34;
        java.security.cert.PolicyNode $r22;
        java.util.List r0;
        java.security.cert.TrustAnchor $r8, $r21;
        javax.security.auth.x500.X500Principal $r13, $r14;
        java.security.cert.CertificateParsingException $r28;
        java.security.cert.PKIXCertPathValidatorResult r37;
        java.util.HashSet $r44;
        int $i0, $i1, $i2, $i3, $i5;
        org.bouncycastle.jce.provider.AnnotatedException $r24, $r26, $r40, $r41, $r43, $r45, $r46, $r47;
        java.lang.String $r7;
        java.util.Iterator $r11;
        java.security.PublicKey $r23;
        java.security.cert.CertPath $r18;
        java.lang.RuntimeException $r39;
        org.bouncycastle.x509.X509AttributeCertificate r16;
        org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi r15;
        java.security.cert.PKIXCertPathBuilderResult $r42;
        java.lang.Object $r12;

        r15 := @this: org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi;

        r16 := @parameter0: org.bouncycastle.x509.X509AttributeCertificate;

        r1 := @parameter1: java.security.cert.X509Certificate;

        r2 := @parameter2: org.bouncycastle.x509.ExtendedPKIXBuilderParameters;

        r0 := @parameter3: java.util.List;

        $z0 = interfaceinvoke r0.<java.util.List: boolean contains(java.lang.Object)>(r1);

        if $z0 == 0 goto label01;

        return null;

     label01:
        $r3 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.Set getExcludedCerts()>();

        $z1 = interfaceinvoke $r3.<java.util.Set: boolean contains(java.lang.Object)>(r1);

        if $z1 == 0 goto label02;

        return null;

     label02:
        $i0 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: int getMaxPathLength()>();

        $i5 = (int) -1;

        if $i0 == $i5 goto label03;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        $i2 = $i1 - 1;

        $i3 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: int getMaxPathLength()>();

        if $i2 <= $i3 goto label03;

        return null;

     label03:
        interfaceinvoke r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        r36 = null;

     label04:
        $r4 = staticinvoke <java.security.cert.CertificateFactory: java.security.cert.CertificateFactory getInstance(java.lang.String,java.lang.String)>("X.509", "BC");

        $r5 = staticinvoke <java.security.cert.CertPathValidator: java.security.cert.CertPathValidator getInstance(java.lang.String,java.lang.String)>("RFC3281", "BC");

     label05:
        goto label07;

     label06:
        $r34 := @caughtexception;

        $r39 = new java.lang.RuntimeException;

        specialinvoke $r39.<java.lang.RuntimeException: void <init>(java.lang.String)>("Exception creating support classes.");

        throw $r39;

     label07:
        $r6 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.util.Set getTrustAnchors()>();

        $r7 = virtualinvoke r2.<org.bouncycastle.x509.ExtendedPKIXBuilderParameters: java.lang.String getSigProvider()>();

        $r8 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.security.cert.TrustAnchor findTrustAnchor(java.security.cert.X509Certificate,java.util.Set,java.lang.String)>(r1, $r6, $r7);

        if $r8 == null goto label16;

     label08:
        $r18 = virtualinvoke $r4.<java.security.cert.CertificateFactory: java.security.cert.CertPath generateCertPath(java.util.List)>(r0);

     label09:
        goto label11;

     label10:
        $r32 := @caughtexception;

        $r40 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r40.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path could not be constructed from certificate list.", $r32);

        throw $r40;

     label11:
        $r19 = virtualinvoke $r5.<java.security.cert.CertPathValidator: java.security.cert.CertPathValidatorResult validate(java.security.cert.CertPath,java.security.cert.CertPathParameters)>($r18, r2);

        r37 = (java.security.cert.PKIXCertPathValidatorResult) $r19;

     label12:
        goto label14;

     label13:
        $r30 := @caughtexception;

        $r41 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r41.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Certification path could not be validated.", $r30);

        throw $r41;

     label14:
        $r42 = new java.security.cert.PKIXCertPathBuilderResult;

        $r21 = virtualinvoke r37.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.TrustAnchor getTrustAnchor()>();

        $r22 = virtualinvoke r37.<java.security.cert.PKIXCertPathValidatorResult: java.security.cert.PolicyNode getPolicyTree()>();

        $r23 = virtualinvoke r37.<java.security.cert.PKIXCertPathValidatorResult: java.security.PublicKey getPublicKey()>();

        specialinvoke $r42.<java.security.cert.PKIXCertPathBuilderResult: void <init>(java.security.cert.CertPath,java.security.cert.TrustAnchor,java.security.cert.PolicyNode,java.security.PublicKey)>($r18, $r21, $r22, $r23);

     label15:
        return $r42;

     label16:
        staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: void addAdditionalStoresFromAltNames(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXParameters)>(r1, r2);

     label17:
        goto label19;

     label18:
        $r28 := @caughtexception;

        $r43 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r43.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No additional X.509 stores can be added from certificate locations.", $r28);

        throw $r43;

     label19:
        $r44 = new java.util.HashSet;

        specialinvoke $r44.<java.util.HashSet: void <init>()>();

     label20:
        $r10 = staticinvoke <org.bouncycastle.jce.provider.CertPathValidatorUtilities: java.util.Collection findIssuerCerts(java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters)>(r1, r2);

        interfaceinvoke $r44.<java.util.Collection: boolean addAll(java.util.Collection)>($r10);

     label21:
        goto label23;

     label22:
        $r26 := @caughtexception;

        $r45 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r45.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("Cannot find issuer certificate for certificate in certification path.", $r26);

        throw $r45;

     label23:
        $z2 = interfaceinvoke $r44.<java.util.Collection: boolean isEmpty()>();

        if $z2 == 0 goto label24;

        $r46 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r46.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String)>("No issuer certificate for certificate in certification path found.");

        throw $r46;

     label24:
        $r11 = interfaceinvoke $r44.<java.util.Collection: java.util.Iterator iterator()>();

     label25:
        $z4 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label27;

        if r36 != null goto label27;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r38 = (java.security.cert.X509Certificate) $r12;

        $r13 = virtualinvoke r38.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getIssuerX500Principal()>();

        $r14 = virtualinvoke r38.<java.security.cert.X509Certificate: javax.security.auth.x500.X500Principal getSubjectX500Principal()>();

        $z3 = virtualinvoke $r13.<javax.security.auth.x500.X500Principal: boolean equals(java.lang.Object)>($r14);

        if $z3 == 0 goto label26;

        goto label25;

     label26:
        r36 = specialinvoke r15.<org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.security.cert.CertPathBuilderResult build(org.bouncycastle.x509.X509AttributeCertificate,java.security.cert.X509Certificate,org.bouncycastle.x509.ExtendedPKIXBuilderParameters,java.util.List)>(r16, r38, r2, r0);

        goto label25;

     label27:
        goto label29;

     label28:
        $r24 := @caughtexception;

        $r47 = new org.bouncycastle.jce.provider.AnnotatedException;

        specialinvoke $r47.<org.bouncycastle.jce.provider.AnnotatedException: void <init>(java.lang.String,java.lang.Throwable)>("No valid certification path could be build.", $r24);

        r15.<org.bouncycastle.jce.provider.PKIXAttrCertPathBuilderSpi: java.lang.Exception certPathException> = $r47;

     label29:
        if r36 != null goto label30;

        interfaceinvoke r0.<java.util.List: boolean remove(java.lang.Object)>(r1);

     label30:
        return r36;

        catch java.lang.Exception from label04 to label05 with label06;
        catch java.lang.Exception from label08 to label09 with label10;
        catch java.lang.Exception from label11 to label12 with label13;
        catch java.security.cert.CertificateParsingException from label16 to label17 with label18;
        catch org.bouncycastle.jce.provider.AnnotatedException from label20 to label21 with label22;
        catch org.bouncycastle.jce.provider.AnnotatedException from label07 to label15 with label28;
        catch org.bouncycastle.jce.provider.AnnotatedException from label16 to label27 with label28;
    }
}
