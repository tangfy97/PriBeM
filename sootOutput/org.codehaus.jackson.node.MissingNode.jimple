public final class org.codehaus.jackson.node.MissingNode extends org.codehaus.jackson.node.BaseJsonNode
{
    private static final org.codehaus.jackson.node.MissingNode instance;

    private void <init>()
    {
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        specialinvoke r0.<org.codehaus.jackson.node.BaseJsonNode: void <init>()>();

        return;
    }

    public static org.codehaus.jackson.node.MissingNode getInstance()
    {
        org.codehaus.jackson.node.MissingNode $r0;

        $r0 = <org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.node.MissingNode instance>;

        return $r0;
    }

    public org.codehaus.jackson.JsonToken asToken()
    {
        org.codehaus.jackson.JsonToken $r0;
        org.codehaus.jackson.node.MissingNode r1;

        r1 := @this: org.codehaus.jackson.node.MissingNode;

        $r0 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken NOT_AVAILABLE>;

        return $r0;
    }

    public boolean isMissingNode()
    {
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        return 1;
    }

    public java.lang.String asText()
    {
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        return "";
    }

    public boolean asBoolean(boolean)
    {
        org.codehaus.jackson.node.MissingNode r0;
        boolean z0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        z0 := @parameter0: boolean;

        return z0;
    }

    public int asInt(int)
    {
        int i0;
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        i0 := @parameter0: int;

        return i0;
    }

    public long asLong(long)
    {
        long l0;
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        l0 := @parameter0: long;

        return l0;
    }

    public double asDouble(double)
    {
        org.codehaus.jackson.node.MissingNode r0;
        double d0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        d0 := @parameter0: double;

        return d0;
    }

    public org.codehaus.jackson.JsonNode path(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        r1 := @parameter0: java.lang.String;

        return r0;
    }

    public org.codehaus.jackson.JsonNode path(int)
    {
        int i0;
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        i0 := @parameter0: int;

        return r0;
    }

    public final void serialize(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.SerializerProvider r2;
        org.codehaus.jackson.node.MissingNode r1;
        org.codehaus.jackson.JsonGenerator r0;

        r1 := @this: org.codehaus.jackson.node.MissingNode;

        r0 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r2 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeNull()>();

        return;
    }

    public void serializeWithType(org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.node.MissingNode r1;
        org.codehaus.jackson.JsonGenerator r0;
        org.codehaus.jackson.map.TypeSerializer r3;
        org.codehaus.jackson.map.SerializerProvider r2;

        r1 := @this: org.codehaus.jackson.node.MissingNode;

        r0 := @parameter0: org.codehaus.jackson.JsonGenerator;

        r2 := @parameter1: org.codehaus.jackson.map.SerializerProvider;

        r3 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        virtualinvoke r0.<org.codehaus.jackson.JsonGenerator: void writeNull()>();

        return;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        org.codehaus.jackson.node.MissingNode r1;
        boolean $z0;

        r1 := @this: org.codehaus.jackson.node.MissingNode;

        r0 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.node.MissingNode r0;

        r0 := @this: org.codehaus.jackson.node.MissingNode;

        return "";
    }

    static void <clinit>()
    {
        org.codehaus.jackson.node.MissingNode $r0;

        $r0 = new org.codehaus.jackson.node.MissingNode;

        specialinvoke $r0.<org.codehaus.jackson.node.MissingNode: void <init>()>();

        <org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.node.MissingNode instance> = $r0;

        return;
    }
}
