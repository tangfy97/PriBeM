public class com.ctc.wstx.evt.WstxEventWriter extends java.lang.Object implements javax.xml.stream.XMLEventWriter, javax.xml.stream.XMLStreamConstants, com.ctc.wstx.cfg.OutputConfigFlags
{
    final javax.xml.stream.XMLStreamWriter mWriter;
    final com.ctc.wstx.sw.BaseStreamWriter mWstxWriter;

    public void <init>(javax.xml.stream.XMLStreamWriter)
    {
        com.ctc.wstx.sw.BaseStreamWriter $r2;
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter r1;
        boolean $z0;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r1 := @parameter0: javax.xml.stream.XMLStreamWriter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter> = r1;

        $z0 = r1 instanceof com.ctc.wstx.sw.BaseStreamWriter;

        if $z0 == 0 goto label1;

        $r2 = (com.ctc.wstx.sw.BaseStreamWriter) r1;

        goto label2;

     label1:
        $r2 = null;

     label2:
        r0.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter> = $r2;

        return;
    }

    public void add(javax.xml.stream.events.XMLEvent) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r1;
        javax.xml.stream.XMLStreamException $r54;
        javax.xml.stream.XMLStreamWriter $r2, $r5, $r9, $r12, $r18, $r20, $r21, $r24, $r27, $r31, $r32, $r33, $r37, $r44;
        javax.xml.stream.events.StartDocument r67;
        javax.xml.namespace.QName $r11, $r40, $r43;
        javax.xml.stream.events.EntityReference $r17;
        com.ctc.wstx.sw.BaseStreamWriter $r36, $r38, $r42, $r52, $r53, $r62, $r63;
        java.lang.StringBuffer $r55, $r56, $r57, $r58, $r60;
        javax.xml.stream.events.EndElement $r39;
        java.lang.String $r3, $r4, $r7, $r10, $r13, $r14, $r15, $r16, $r19, $r22, $r23, $r25, $r28, $r30, $r34, $r35, $r45, $r46, $r47, $r61;
        javax.xml.stream.events.DTD $r8;
        javax.xml.stream.events.XMLEvent r0;
        boolean $z0, $z1, $z2, $z3;
        javax.xml.stream.events.Namespace r66, r68;
        javax.xml.stream.events.Comment $r26;
        java.io.Writer $r64;
        javax.xml.stream.events.Attribute r65, r69;
        javax.xml.stream.events.ProcessingInstruction r70;
        int $i0, $i1;
        javax.xml.stream.events.StartElement $r41;
        java.util.Iterator $r48, $r49;
        javax.xml.stream.events.Characters $r6, $r29;
        java.lang.Object $r50, $r51;
        java.lang.Class $r59;

        r1 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r0 := @parameter0: javax.xml.stream.events.XMLEvent;

        $i0 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        tableswitch($i0)
        {
            case 1: goto label09;
            case 2: goto label03;
            case 3: goto label22;
            case 4: goto label15;
            case 5: goto label19;
            case 6: goto label23;
            case 7: goto label06;
            case 8: goto label02;
            case 9: goto label21;
            case 10: goto label01;
            case 11: goto label20;
            case 12: goto label18;
            case 13: goto label05;
            case 14: goto label23;
            case 15: goto label23;
            default: goto label23;
        };

     label01:
        r65 = (javax.xml.stream.events.Attribute) r0;

        $r11 = interfaceinvoke r65.<javax.xml.stream.events.Attribute: javax.xml.namespace.QName getName()>();

        $r12 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r13 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r14 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r15 = virtualinvoke $r11.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r16 = interfaceinvoke r65.<javax.xml.stream.events.Attribute: java.lang.String getValue()>();

        interfaceinvoke $r12.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r13, $r14, $r15, $r16);

        goto label25;

     label02:
        $r20 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r20.<javax.xml.stream.XMLStreamWriter: void writeEndDocument()>();

        goto label25;

     label03:
        $r36 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        if $r36 == null goto label04;

        $r38 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        $r39 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.EndElement asEndElement()>();

        $r40 = interfaceinvoke $r39.<javax.xml.stream.events.EndElement: javax.xml.namespace.QName getName()>();

        virtualinvoke $r38.<com.ctc.wstx.sw.BaseStreamWriter: void writeEndElement(javax.xml.namespace.QName)>($r40);

        goto label25;

     label04:
        $r37 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r37.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();

        goto label25;

     label05:
        r66 = (javax.xml.stream.events.Namespace) r0;

        $r2 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r3 = interfaceinvoke r66.<javax.xml.stream.events.Namespace: java.lang.String getPrefix()>();

        $r4 = interfaceinvoke r66.<javax.xml.stream.events.Namespace: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void writeNamespace(java.lang.String,java.lang.String)>($r3, $r4);

        goto label25;

     label06:
        r67 = (javax.xml.stream.events.StartDocument) r0;

        $z0 = interfaceinvoke r67.<javax.xml.stream.events.StartDocument: boolean encodingSet()>();

        if $z0 != 0 goto label07;

        $r24 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r25 = interfaceinvoke r67.<javax.xml.stream.events.StartDocument: java.lang.String getVersion()>();

        interfaceinvoke $r24.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String)>($r25);

        goto label08;

     label07:
        $r21 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r22 = interfaceinvoke r67.<javax.xml.stream.events.StartDocument: java.lang.String getCharacterEncodingScheme()>();

        $r23 = interfaceinvoke r67.<javax.xml.stream.events.StartDocument: java.lang.String getVersion()>();

        interfaceinvoke $r21.<javax.xml.stream.XMLStreamWriter: void writeStartDocument(java.lang.String,java.lang.String)>($r22, $r23);

     label08:
        goto label25;

     label09:
        $r41 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.StartElement asStartElement()>();

        $r42 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        if $r42 == null goto label10;

        $r52 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        virtualinvoke $r52.<com.ctc.wstx.sw.BaseStreamWriter: void writeStartElement(javax.xml.stream.events.StartElement)>($r41);

        goto label14;

     label10:
        $r43 = interfaceinvoke $r41.<javax.xml.stream.events.StartElement: javax.xml.namespace.QName getName()>();

        $r44 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r45 = virtualinvoke $r43.<javax.xml.namespace.QName: java.lang.String getPrefix()>();

        $r46 = virtualinvoke $r43.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r47 = virtualinvoke $r43.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        interfaceinvoke $r44.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String,java.lang.String,java.lang.String)>($r45, $r46, $r47);

        $r48 = interfaceinvoke $r41.<javax.xml.stream.events.StartElement: java.util.Iterator getNamespaces()>();

     label11:
        $z2 = interfaceinvoke $r48.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label12;

        $r51 = interfaceinvoke $r48.<java.util.Iterator: java.lang.Object next()>();

        r68 = (javax.xml.stream.events.Namespace) $r51;

        virtualinvoke r1.<com.ctc.wstx.evt.WstxEventWriter: void add(javax.xml.stream.events.XMLEvent)>(r68);

        goto label11;

     label12:
        $r49 = interfaceinvoke $r41.<javax.xml.stream.events.StartElement: java.util.Iterator getAttributes()>();

     label13:
        $z3 = interfaceinvoke $r49.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label14;

        $r50 = interfaceinvoke $r49.<java.util.Iterator: java.lang.Object next()>();

        r69 = (javax.xml.stream.events.Attribute) $r50;

        virtualinvoke r1.<com.ctc.wstx.evt.WstxEventWriter: void add(javax.xml.stream.events.XMLEvent)>(r69);

        goto label13;

     label14:
        goto label25;

     label15:
        $r29 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r30 = interfaceinvoke $r29.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        $z1 = interfaceinvoke $r29.<javax.xml.stream.events.Characters: boolean isCData()>();

        if $z1 == 0 goto label16;

        $r32 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r32.<javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>($r30);

        goto label17;

     label16:
        $r31 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r31.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>($r30);

     label17:
        goto label25;

     label18:
        $r5 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r6 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: javax.xml.stream.events.Characters asCharacters()>();

        $r7 = interfaceinvoke $r6.<javax.xml.stream.events.Characters: java.lang.String getData()>();

        interfaceinvoke $r5.<javax.xml.stream.XMLStreamWriter: void writeCData(java.lang.String)>($r7);

        goto label25;

     label19:
        $r27 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r26 = (javax.xml.stream.events.Comment) r0;

        $r28 = interfaceinvoke $r26.<javax.xml.stream.events.Comment: java.lang.String getText()>();

        interfaceinvoke $r27.<javax.xml.stream.XMLStreamWriter: void writeComment(java.lang.String)>($r28);

        goto label25;

     label20:
        $r9 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r8 = (javax.xml.stream.events.DTD) r0;

        $r10 = interfaceinvoke $r8.<javax.xml.stream.events.DTD: java.lang.String getDocumentTypeDeclaration()>();

        interfaceinvoke $r9.<javax.xml.stream.XMLStreamWriter: void writeDTD(java.lang.String)>($r10);

        goto label25;

     label21:
        $r18 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r17 = (javax.xml.stream.events.EntityReference) r0;

        $r19 = interfaceinvoke $r17.<javax.xml.stream.events.EntityReference: java.lang.String getName()>();

        interfaceinvoke $r18.<javax.xml.stream.XMLStreamWriter: void writeEntityRef(java.lang.String)>($r19);

        goto label25;

     label22:
        r70 = (javax.xml.stream.events.ProcessingInstruction) r0;

        $r33 = r1.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r34 = interfaceinvoke r70.<javax.xml.stream.events.ProcessingInstruction: java.lang.String getTarget()>();

        $r35 = interfaceinvoke r70.<javax.xml.stream.events.ProcessingInstruction: java.lang.String getData()>();

        interfaceinvoke $r33.<javax.xml.stream.XMLStreamWriter: void writeProcessingInstruction(java.lang.String,java.lang.String)>($r34, $r35);

        goto label25;

     label23:
        $r53 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        if $r53 == null goto label24;

        $r62 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        virtualinvoke $r62.<com.ctc.wstx.sw.BaseStreamWriter: void writeCharacters(java.lang.String)>("");

        $r63 = r1.<com.ctc.wstx.evt.WstxEventWriter: com.ctc.wstx.sw.BaseStreamWriter mWstxWriter>;

        $r64 = virtualinvoke $r63.<com.ctc.wstx.sw.BaseStreamWriter: java.io.Writer wrapAsRawWriter()>();

        interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: void writeAsEncodedUnicode(java.io.Writer)>($r64);

        goto label25;

     label24:
        $r54 = new javax.xml.stream.XMLStreamException;

        $r55 = new java.lang.StringBuffer;

        specialinvoke $r55.<java.lang.StringBuffer: void <init>()>();

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unrecognized event type (");

        $i1 = interfaceinvoke r0.<javax.xml.stream.events.XMLEvent: int getEventType()>();

        $r57 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("), for XMLEvent of type ");

        $r59 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r60 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r54.<javax.xml.stream.XMLStreamException: void <init>(java.lang.String)>($r61);

        throw $r54;

     label25:
        return;
    }

    public void add(javax.xml.stream.XMLEventReader) throws javax.xml.stream.XMLStreamException
    {
        javax.xml.stream.XMLEventReader r0;
        com.ctc.wstx.evt.WstxEventWriter r1;
        javax.xml.stream.events.XMLEvent $r2;
        boolean $z0;

        r1 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r0 := @parameter0: javax.xml.stream.XMLEventReader;

     label1:
        $z0 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<javax.xml.stream.XMLEventReader: javax.xml.stream.events.XMLEvent nextEvent()>();

        virtualinvoke r1.<com.ctc.wstx.evt.WstxEventWriter: void add(javax.xml.stream.events.XMLEvent)>($r2);

        goto label1;

     label2:
        return;
    }

    public void close() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r1;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void close()>();

        return;
    }

    public void flush() throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r1;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: void flush()>();

        return;
    }

    public javax.xml.namespace.NamespaceContext getNamespaceContext()
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r1;
        javax.xml.namespace.NamespaceContext $r2;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        $r1 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r2 = interfaceinvoke $r1.<javax.xml.stream.XMLStreamWriter: javax.xml.namespace.NamespaceContext getNamespaceContext()>();

        return $r2;
    }

    public java.lang.String getPrefix(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r2;
        java.lang.String r1, $r3;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        $r3 = interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: java.lang.String getPrefix(java.lang.String)>(r1);

        return $r3;
    }

    public void setDefaultNamespace(java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r2;
        java.lang.String r1;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void setDefaultNamespace(java.lang.String)>(r1);

        return;
    }

    public void setNamespaceContext(javax.xml.namespace.NamespaceContext) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.namespace.NamespaceContext r1;
        javax.xml.stream.XMLStreamWriter $r2;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r1 := @parameter0: javax.xml.namespace.NamespaceContext;

        $r2 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r2.<javax.xml.stream.XMLStreamWriter: void setNamespaceContext(javax.xml.namespace.NamespaceContext)>(r1);

        return;
    }

    public void setPrefix(java.lang.String, java.lang.String) throws javax.xml.stream.XMLStreamException
    {
        com.ctc.wstx.evt.WstxEventWriter r0;
        javax.xml.stream.XMLStreamWriter $r3;
        java.lang.String r1, r2;

        r0 := @this: com.ctc.wstx.evt.WstxEventWriter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        $r3 = r0.<com.ctc.wstx.evt.WstxEventWriter: javax.xml.stream.XMLStreamWriter mWriter>;

        interfaceinvoke $r3.<javax.xml.stream.XMLStreamWriter: void setPrefix(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }
}
