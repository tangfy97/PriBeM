public final class org.apache.lucene.analysis.cz.CzechAnalyzer extends org.apache.lucene.analysis.util.StopwordAnalyzerBase
{
    public static final java.lang.String DEFAULT_STOPWORD_FILE;
    private final org.apache.lucene.analysis.util.CharArraySet stemExclusionTable;

    public static final org.apache.lucene.analysis.util.CharArraySet getDefaultStopSet()
    {
        org.apache.lucene.analysis.util.CharArraySet $r0;

        $r0 = staticinvoke <org.apache.lucene.analysis.cz.CzechAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet access$000()>();

        return $r0;
    }

    public void <init>(org.apache.lucene.util.Version)
    {
        org.apache.lucene.analysis.util.CharArraySet $r2;
        org.apache.lucene.analysis.cz.CzechAnalyzer r0;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.cz.CzechAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        $r2 = staticinvoke <org.apache.lucene.analysis.cz.CzechAnalyzer$DefaultSetHolder: org.apache.lucene.analysis.util.CharArraySet access$000()>();

        specialinvoke r0.<org.apache.lucene.analysis.cz.CzechAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet)>(r1, $r2);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.cz.CzechAnalyzer r0;
        org.apache.lucene.analysis.util.CharArraySet r2, $r3;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.cz.CzechAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        $r3 = <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet EMPTY_SET>;

        specialinvoke r0.<org.apache.lucene.analysis.cz.CzechAnalyzer: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet,org.apache.lucene.analysis.util.CharArraySet)>(r1, r2, $r3);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.util.CharArraySet, org.apache.lucene.analysis.util.CharArraySet)
    {
        org.apache.lucene.analysis.cz.CzechAnalyzer r0;
        org.apache.lucene.analysis.util.CharArraySet r2, r3, $r4, $r5;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.cz.CzechAnalyzer;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.util.CharArraySet;

        r3 := @parameter2: org.apache.lucene.analysis.util.CharArraySet;

        specialinvoke r0.<org.apache.lucene.analysis.util.StopwordAnalyzerBase: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.util.CharArraySet)>(r1, r2);

        $r4 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet copy(org.apache.lucene.util.Version,java.util.Set)>(r1, r3);

        $r5 = staticinvoke <org.apache.lucene.analysis.util.CharArraySet: org.apache.lucene.analysis.util.CharArraySet unmodifiableSet(org.apache.lucene.analysis.util.CharArraySet)>($r4);

        r0.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.analysis.util.CharArraySet stemExclusionTable> = $r5;

        return;
    }

    protected org.apache.lucene.analysis.Analyzer$TokenStreamComponents createComponents(java.lang.String, java.io.Reader)
    {
        org.apache.lucene.analysis.standard.StandardTokenizer $r0;
        org.apache.lucene.analysis.core.LowerCaseFilter $r6;
        org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter $r15;
        org.apache.lucene.analysis.cz.CzechStemFilter $r14;
        org.apache.lucene.analysis.cz.CzechAnalyzer r1;
        java.lang.String r17;
        boolean $z0, $z1;
        java.io.Reader r2;
        org.apache.lucene.util.Version $r3, $r5, $r7, $r10, $r11, $r12;
        org.apache.lucene.analysis.core.StopFilter $r8;
        org.apache.lucene.analysis.Analyzer$TokenStreamComponents $r19;
        org.apache.lucene.analysis.util.CharArraySet $r9, $r13, $r16;
        org.apache.lucene.analysis.TokenFilter r18;
        org.apache.lucene.analysis.standard.StandardFilter $r4;

        r1 := @this: org.apache.lucene.analysis.cz.CzechAnalyzer;

        r17 := @parameter0: java.lang.String;

        r2 := @parameter1: java.io.Reader;

        $r0 = new org.apache.lucene.analysis.standard.StandardTokenizer;

        $r3 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r0.<org.apache.lucene.analysis.standard.StandardTokenizer: void <init>(org.apache.lucene.util.Version,java.io.Reader)>($r3, r2);

        $r4 = new org.apache.lucene.analysis.standard.StandardFilter;

        $r5 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r4.<org.apache.lucene.analysis.standard.StandardFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r5, $r0);

        $r6 = new org.apache.lucene.analysis.core.LowerCaseFilter;

        $r7 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.util.Version matchVersion>;

        specialinvoke $r6.<org.apache.lucene.analysis.core.LowerCaseFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream)>($r7, $r4);

        $r8 = new org.apache.lucene.analysis.core.StopFilter;

        $r10 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r9 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.analysis.util.CharArraySet stopwords>;

        specialinvoke $r8.<org.apache.lucene.analysis.core.StopFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r10, $r6, $r9);

        r18 = $r8;

        $r12 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.util.Version matchVersion>;

        $r11 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z0 = virtualinvoke $r12.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r11);

        if $z0 == 0 goto label2;

        $r13 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.analysis.util.CharArraySet stemExclusionTable>;

        $z1 = virtualinvoke $r13.<org.apache.lucene.analysis.util.CharArraySet: boolean isEmpty()>();

        if $z1 != 0 goto label1;

        $r15 = new org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter;

        $r16 = r1.<org.apache.lucene.analysis.cz.CzechAnalyzer: org.apache.lucene.analysis.util.CharArraySet stemExclusionTable>;

        specialinvoke $r15.<org.apache.lucene.analysis.miscellaneous.SetKeywordMarkerFilter: void <init>(org.apache.lucene.analysis.TokenStream,org.apache.lucene.analysis.util.CharArraySet)>($r8, $r16);

        r18 = $r15;

     label1:
        $r14 = new org.apache.lucene.analysis.cz.CzechStemFilter;

        specialinvoke $r14.<org.apache.lucene.analysis.cz.CzechStemFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r18);

        r18 = $r14;

     label2:
        $r19 = new org.apache.lucene.analysis.Analyzer$TokenStreamComponents;

        specialinvoke $r19.<org.apache.lucene.analysis.Analyzer$TokenStreamComponents: void <init>(org.apache.lucene.analysis.Tokenizer,org.apache.lucene.analysis.TokenStream)>($r0, r18);

        return $r19;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.cz.CzechAnalyzer: java.lang.String DEFAULT_STOPWORD_FILE> = "stopwords.txt";

        return;
    }
}
