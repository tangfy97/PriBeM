class org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer extends java.lang.Object
{
    private int currentPosition;
    private int maxPosition;
    private java.lang.String str;
    private final org.apache.xalan.transformer.NumeratorFormatter this$0;

    void <init>(org.apache.xalan.transformer.NumeratorFormatter, java.lang.String)
    {
        org.apache.xalan.transformer.NumeratorFormatter r1;
        org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer r0;
        int $i0;
        java.lang.String r2;

        r0 := @this: org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer;

        r1 := @parameter0: org.apache.xalan.transformer.NumeratorFormatter;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: org.apache.xalan.transformer.NumeratorFormatter this$0> = r1;

        r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: java.lang.String str> = r2;

        $i0 = virtualinvoke r2.<java.lang.String: int length()>();

        r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int maxPosition> = $i0;

        return;
    }

    void reset()
    {
        org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer r0;

        r0 := @this: org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer;

        r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition> = 0;

        return;
    }

    java.lang.String nextToken()
    {
        org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer r0;
        int $i0, $i1, i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i12, $i13, $i14;
        java.lang.String $r1, $r2, $r4, $r5;
        java.util.NoSuchElementException $r3;
        boolean $z0, $z1;
        char $c7, $c11;

        r0 := @this: org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer;

        $i1 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $i0 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int maxPosition>;

        if $i1 < $i0 goto label1;

        $r3 = new java.util.NoSuchElementException;

        specialinvoke $r3.<java.util.NoSuchElementException: void <init>()>();

        throw $r3;

     label1:
        i2 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        goto label3;

     label2:
        $i12 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $i13 = $i12 + 1;

        r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition> = $i13;

     label3:
        $i4 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $i3 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int maxPosition>;

        if $i4 >= $i3 goto label4;

        $r2 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: java.lang.String str>;

        $i10 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $c11 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i10);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c11);

        if $z1 != 0 goto label2;

     label4:
        $i5 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        if i2 != $i5 goto label5;

        $r1 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: java.lang.String str>;

        $i6 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $c7 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i6);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c7);

        if $z0 != 0 goto label5;

        $i8 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $i9 = $i8 + 1;

        r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition> = $i9;

     label5:
        $r4 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: java.lang.String str>;

        $i14 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $r5 = virtualinvoke $r4.<java.lang.String: java.lang.String substring(int,int)>(i2, $i14);

        return $r5;
    }

    boolean hasMoreTokens()
    {
        org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer;

        $i1 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        $i0 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int maxPosition>;

        if $i1 < $i0 goto label1;

        $z0 = 0;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        return $z0;
    }

    int countTokens()
    {
        org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer r0;
        char $c2, $c3;
        int i0, $i1, i4, i5, $i6;
        java.lang.String $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer;

        i4 = 0;

        i5 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int currentPosition>;

        goto label6;

     label1:
        i0 = i5;

        goto label3;

     label2:
        i5 = i5 + 1;

     label3:
        $i1 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int maxPosition>;

        if i5 >= $i1 goto label4;

        $r2 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: java.lang.String str>;

        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i5);

        $z1 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c3);

        if $z1 != 0 goto label2;

     label4:
        if i0 != i5 goto label5;

        $r1 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: java.lang.String str>;

        $c2 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(i5);

        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>($c2);

        if $z0 != 0 goto label5;

        i5 = i5 + 1;

     label5:
        i4 = i4 + 1;

     label6:
        $i6 = r0.<org.apache.xalan.transformer.NumeratorFormatter$NumberFormatStringTokenizer: int maxPosition>;

        if i5 < $i6 goto label1;

        return i4;
    }
}
