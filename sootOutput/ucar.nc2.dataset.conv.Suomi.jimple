public class ucar.nc2.dataset.conv.Suomi extends ucar.nc2.dataset.CoordSysBuilder
{

    public static boolean isMine(ucar.nc2.NetcdfFile)
    {
        ucar.nc2.Attribute $r3, $r4;
        ucar.nc2.Variable $r1;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r2;
        boolean $z0, $z1;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Variable findVariable(java.lang.String)>("time_offset");

        if $r1 == null goto label1;

        $z0 = virtualinvoke $r1.<ucar.nc2.Variable: boolean isCoordinateVariable()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getDescription()>();

        if $r2 == null goto label3;

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("Time delta from start_time");

        if $z1 != 0 goto label4;

     label3:
        return 0;

     label4:
        $r3 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("start_date");

        if null != $r3 goto label5;

        return 0;

     label5:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Attribute findGlobalAttribute(java.lang.String)>("start_time");

        if null != $r4 goto label6;

        return 0;

     label6:
        return 1;
    }

    public void <init>()
    {
        ucar.nc2.dataset.conv.Suomi r0;

        r0 := @this: ucar.nc2.dataset.conv.Suomi;

        specialinvoke r0.<ucar.nc2.dataset.CoordSysBuilder: void <init>()>();

        r0.<ucar.nc2.dataset.conv.Suomi: java.lang.String conventionName> = "Suomi";

        return;
    }

    public void augmentDataset(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.Date $r4;
        java.text.SimpleDateFormat $r2;
        ucar.nc2.util.CancelTask r21;
        ucar.nc2.dataset.conv.Suomi r20;
        ucar.nc2.Variable $r5;
        java.lang.String $r1, $r9, $r11, $r19;
        java.text.ParseException $r14;
        java.lang.RuntimeException $r15;
        ucar.nc2.Group $r12;
        ucar.nc2.Attribute $r6, $r13;
        java.lang.StringBuilder $r7, $r8, $r10, $r16, $r17, $r18;
        ucar.nc2.dataset.NetcdfDataset r0;
        ucar.nc2.units.DateFormatter $r3;

        r20 := @this: ucar.nc2.dataset.conv.Suomi;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r21 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "start_date", null);

        $r2 = new java.text.SimpleDateFormat;

        specialinvoke $r2.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy.DDD.HH.mm.ss");

        $r3 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r3.<ucar.nc2.units.DateFormatter: void <init>()>();

     label1:
        $r4 = virtualinvoke $r2.<java.text.SimpleDateFormat: java.util.Date parse(java.lang.String)>($r1);

     label2:
        goto label4;

     label3:
        $r14 := @caughtexception;

        $r15 = new java.lang.RuntimeException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cant read start_date=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>($r19);

        throw $r15;

     label4:
        $r5 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Variable findVariable(java.lang.String)>("time_offset");

        $r6 = new ucar.nc2.Attribute;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("seconds since ");

        $r9 = virtualinvoke $r3.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeString(java.util.Date)>($r4);

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r11);

        virtualinvoke $r5.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r6);

        $r12 = virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Group getRootGroup()>();

        $r13 = new ucar.nc2.Attribute;

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("Convention", "Suomi-Station-CDM");

        virtualinvoke $r12.<ucar.nc2.Group: void addAttribute(ucar.nc2.Attribute)>($r13);

        virtualinvoke r0.<ucar.nc2.dataset.NetcdfDataset: void finish()>();

        return;

        catch java.text.ParseException from label1 to label2 with label3;
    }

    protected ucar.nc2.constants.AxisType getAxisType(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.dataset.VariableEnhanced)
    {
        ucar.nc2.dataset.conv.Suomi r6;
        ucar.nc2.dataset.VariableEnhanced r0;
        ucar.nc2.constants.AxisType $r2, $r3, $r4, $r5;
        java.lang.String $r1;
        ucar.nc2.dataset.NetcdfDataset r7;
        boolean $z0, $z1, $z2, $z3;

        r6 := @this: ucar.nc2.dataset.conv.Suomi;

        r7 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r0 := @parameter1: ucar.nc2.dataset.VariableEnhanced;

        $r1 = interfaceinvoke r0.<ucar.nc2.dataset.VariableEnhanced: java.lang.String getShortName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("time_offset");

        if $z0 == 0 goto label1;

        $r5 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        return $r5;

     label1:
        $z1 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("lat");

        if $z1 == 0 goto label2;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        return $r4;

     label2:
        $z2 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("lon");

        if $z2 == 0 goto label3;

        $r3 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        return $r3;

     label3:
        $z3 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("height");

        if $z3 == 0 goto label4;

        $r2 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        return $r2;

     label4:
        return null;
    }
}
