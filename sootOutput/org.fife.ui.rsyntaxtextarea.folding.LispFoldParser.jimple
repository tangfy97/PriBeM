public class org.fife.ui.rsyntaxtextarea.folding.LispFoldParser extends org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser
{

    public void <init>()
    {
        org.fife.ui.rsyntaxtextarea.folding.LispFoldParser r0;

        r0 := @this: org.fife.ui.rsyntaxtextarea.folding.LispFoldParser;

        specialinvoke r0.<org.fife.ui.rsyntaxtextarea.folding.CurlyFoldParser: void <init>()>();

        return;
    }

    public boolean isLeftCurly(org.fife.ui.rsyntaxtextarea.Token)
    {
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.folding.LispFoldParser r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.folding.LispFoldParser;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(int,char)>(22, 40);

        return $z0;
    }

    public boolean isRightCurly(org.fife.ui.rsyntaxtextarea.Token)
    {
        org.fife.ui.rsyntaxtextarea.Token r0;
        boolean $z0;
        org.fife.ui.rsyntaxtextarea.folding.LispFoldParser r1;

        r1 := @this: org.fife.ui.rsyntaxtextarea.folding.LispFoldParser;

        r0 := @parameter0: org.fife.ui.rsyntaxtextarea.Token;

        $z0 = virtualinvoke r0.<org.fife.ui.rsyntaxtextarea.Token: boolean isSingleChar(int,char)>(22, 41);

        return $z0;
    }
}
