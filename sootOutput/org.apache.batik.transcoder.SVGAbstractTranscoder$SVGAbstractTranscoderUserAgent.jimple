public class org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent extends org.apache.batik.bridge.UserAgentAdapter
{
    protected java.util.List scripts;
    private final org.apache.batik.transcoder.SVGAbstractTranscoder this$0;

    public void <init>(org.apache.batik.transcoder.SVGAbstractTranscoder)
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        r1 := @parameter0: org.apache.batik.transcoder.SVGAbstractTranscoder;

        specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: void <init>()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0> = r1;

        virtualinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: void addStdFeatures()>();

        return;
    }

    public java.awt.geom.AffineTransform getTransform()
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        java.awt.geom.AffineTransform $r2;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r2 = $r1.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.AffineTransform curTxf>;

        return $r2;
    }

    public void setTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        java.awt.geom.AffineTransform r1;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r2;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        r1 := @parameter0: java.awt.geom.AffineTransform;

        $r2 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r2.<org.apache.batik.transcoder.SVGAbstractTranscoder: java.awt.geom.AffineTransform curTxf> = r1;

        return;
    }

    public java.awt.geom.Dimension2D getViewportSize()
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder $r2, $r3;
        java.awt.Dimension $r0;
        int $i0, $i1;
        float $f0, $f1;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r1;

        r1 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r0 = new java.awt.Dimension;

        $r2 = r1.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $f0 = $r2.<org.apache.batik.transcoder.SVGAbstractTranscoder: float width>;

        $i1 = (int) $f0;

        $r3 = r1.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $f1 = $r3.<org.apache.batik.transcoder.SVGAbstractTranscoder: float height>;

        $i0 = (int) $f1;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>($i1, $i0);

        return $r0;
    }

    public void displayError(java.lang.String)
    {
        org.apache.batik.transcoder.ErrorHandler $r4;
        java.lang.RuntimeException $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;
        org.apache.batik.transcoder.TranscoderException $r2, $r5;
        java.lang.String r3, $r7;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r4 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r2 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r2.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.String)>(r3);

        interfaceinvoke $r4.<org.apache.batik.transcoder.ErrorHandler: void error(org.apache.batik.transcoder.TranscoderException)>($r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r5.<org.apache.batik.transcoder.TranscoderException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        return;

        catch org.apache.batik.transcoder.TranscoderException from label1 to label2 with label3;
    }

    public void displayError(java.lang.Exception)
    {
        org.apache.batik.transcoder.ErrorHandler $r4;
        java.lang.RuntimeException $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r2;
        java.lang.Exception r0;
        org.apache.batik.transcoder.TranscoderException $r3, $r5;
        java.lang.String $r7;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r1;

        r1 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        r0 := @parameter0: java.lang.Exception;

     label1:
        virtualinvoke r0.<java.lang.Throwable: void printStackTrace()>();

        $r2 = r1.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r4 = $r2.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r3 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r3.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.Exception)>(r0);

        interfaceinvoke $r4.<org.apache.batik.transcoder.ErrorHandler: void error(org.apache.batik.transcoder.TranscoderException)>($r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r5.<org.apache.batik.transcoder.TranscoderException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        return;

        catch org.apache.batik.transcoder.TranscoderException from label1 to label2 with label3;
    }

    public void displayMessage(java.lang.String)
    {
        org.apache.batik.transcoder.ErrorHandler $r4;
        java.lang.RuntimeException $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;
        org.apache.batik.transcoder.TranscoderException $r2, $r5;
        java.lang.String r3, $r7;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        r3 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r4 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.ErrorHandler handler>;

        $r2 = new org.apache.batik.transcoder.TranscoderException;

        specialinvoke $r2.<org.apache.batik.transcoder.TranscoderException: void <init>(java.lang.String)>(r3);

        interfaceinvoke $r4.<org.apache.batik.transcoder.ErrorHandler: void warning(org.apache.batik.transcoder.TranscoderException)>($r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r5.<org.apache.batik.transcoder.TranscoderException: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label4:
        return;

        catch org.apache.batik.transcoder.TranscoderException from label1 to label2 with label3;
    }

    public float getPixelUnitToMillimeter()
    {
        java.lang.Float $r5;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;
        org.apache.batik.transcoder.TranscodingHints $r3;
        float $f0, $f1;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_PIXEL_UNIT_TO_MILLIMETER>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        if $r4 == null goto label1;

        $r5 = (java.lang.Float) $r4;

        $f1 = virtualinvoke $r5.<java.lang.Float: float floatValue()>();

        return $f1;

     label1:
        $f0 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: float getPixelUnitToMillimeter()>();

        return $f0;
    }

    public java.lang.String getLanguages()
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1, $r5;
        org.apache.batik.transcoder.TranscodingHints $r3, $r7;
        java.lang.Object $r8;
        org.apache.batik.transcoder.TranscodingHints$Key $r2, $r6;
        java.lang.String $r4, $r9;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        boolean $z0;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_LANGUAGE>;

        $z0 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r2);

        if $z0 == 0 goto label1;

        $r5 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r7 = $r5.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r6 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_LANGUAGE>;

        $r8 = virtualinvoke $r7.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r6);

        $r9 = (java.lang.String) $r8;

        return $r9;

     label1:
        $r4 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: java.lang.String getLanguages()>();

        return $r4;
    }

    public java.lang.String getMedia()
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        java.lang.String r5, $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_MEDIA>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: java.lang.String getMedia()>();

        return $r6;
    }

    public java.lang.String getDefaultFontFamily()
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        java.lang.String r5, $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_DEFAULT_FONT_FAMILY>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: java.lang.String getDefaultFontFamily()>();

        return $r6;
    }

    public java.lang.String getAlternateStyleSheet()
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        java.lang.String r5, $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_ALTERNATE_STYLESHEET>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: java.lang.String getAlternateStyleSheet()>();

        return $r6;
    }

    public java.lang.String getUserStyleSheetURI()
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        java.lang.String r5, $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_USER_STYLESHEET_URI>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: java.lang.String getUserStyleSheetURI()>();

        return $r6;
    }

    public java.lang.String getXMLParserClassName()
    {
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        java.lang.String r5, $r6;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_XML_PARSER_CLASSNAME>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.String) $r4;

        if r5 == null goto label1;

        return r5;

     label1:
        $r6 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: java.lang.String getXMLParserClassName()>();

        return $r6;
    }

    public boolean isXMLParserValidating()
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder $r1;
        org.apache.batik.transcoder.TranscodingHints $r3;
        java.lang.Boolean r5;
        java.lang.Object $r4;
        org.apache.batik.transcoder.TranscodingHints$Key $r2;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r3 = $r1.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r2 = <org.apache.batik.transcoder.XMLAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_XML_PARSER_VALIDATING>;

        $r4 = virtualinvoke $r3.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r2);

        r5 = (java.lang.Boolean) $r4;

        if r5 == null goto label1;

        $z1 = virtualinvoke r5.<java.lang.Boolean: boolean booleanValue()>();

        return $z1;

     label1:
        $z0 = specialinvoke r0.<org.apache.batik.bridge.UserAgentAdapter: boolean isXMLParserValidating()>();

        return $z0;
    }

    public org.apache.batik.bridge.ScriptSecurity getScriptSecurity(java.lang.String, org.apache.batik.util.ParsedURL, org.apache.batik.util.ParsedURL)
    {
        org.apache.batik.bridge.RelaxedScriptSecurity $r7;
        java.lang.Boolean $r15;
        java.lang.String r2;
        org.apache.batik.transcoder.TranscodingHints$Key $r5, $r12;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        boolean $z0, $z1, z2;
        org.apache.batik.bridge.DefaultScriptSecurity $r10;
        org.apache.batik.bridge.NoLoadScriptSecurity $r16;
        org.apache.batik.transcoder.SVGAbstractTranscoder $r4, $r11;
        java.util.List $r1, $r3;
        org.apache.batik.transcoder.TranscodingHints $r6, $r13;
        org.apache.batik.util.ParsedURL r8, r9;
        java.lang.Object $r14;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        r2 := @parameter0: java.lang.String;

        r8 := @parameter1: org.apache.batik.util.ParsedURL;

        r9 := @parameter2: org.apache.batik.util.ParsedURL;

        $r1 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: java.util.List scripts>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: void computeAllowedScripts()>();

     label1:
        $r3 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: java.util.List scripts>;

        $z0 = interfaceinvoke $r3.<java.util.List: boolean contains(java.lang.Object)>(r2);

        if $z0 != 0 goto label2;

        $r16 = new org.apache.batik.bridge.NoLoadScriptSecurity;

        specialinvoke $r16.<org.apache.batik.bridge.NoLoadScriptSecurity: void <init>(java.lang.String)>(r2);

        return $r16;

     label2:
        z2 = 1;

        $r4 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r6 = $r4.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r5 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_CONSTRAIN_SCRIPT_ORIGIN>;

        $z1 = virtualinvoke $r6.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r5);

        if $z1 == 0 goto label3;

        $r11 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r13 = $r11.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r12 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_CONSTRAIN_SCRIPT_ORIGIN>;

        $r14 = virtualinvoke $r13.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r12);

        $r15 = (java.lang.Boolean) $r14;

        z2 = virtualinvoke $r15.<java.lang.Boolean: boolean booleanValue()>();

     label3:
        if z2 == 0 goto label4;

        $r10 = new org.apache.batik.bridge.DefaultScriptSecurity;

        specialinvoke $r10.<org.apache.batik.bridge.DefaultScriptSecurity: void <init>(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r2, r8, r9);

        return $r10;

     label4:
        $r7 = new org.apache.batik.bridge.RelaxedScriptSecurity;

        specialinvoke $r7.<org.apache.batik.bridge.RelaxedScriptSecurity: void <init>(java.lang.String,org.apache.batik.util.ParsedURL,org.apache.batik.util.ParsedURL)>(r2, r8, r9);

        return $r7;
    }

    protected void computeAllowedScripts()
    {
        org.apache.batik.transcoder.SVGAbstractTranscoder $r2, $r5;
        org.apache.batik.transcoder.TranscodingHints $r4, $r7;
        java.util.List $r11;
        java.util.StringTokenizer $r10;
        java.lang.Object $r8;
        org.apache.batik.transcoder.TranscodingHints$Key $r3, $r6;
        java.lang.String r9, $r12;
        org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent r0;
        java.util.LinkedList $r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent;

        $r1 = new java.util.LinkedList;

        specialinvoke $r1.<java.util.LinkedList: void <init>()>();

        r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: java.util.List scripts> = $r1;

        $r2 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r4 = $r2.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r3 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_ALLOWED_SCRIPT_TYPES>;

        $z0 = virtualinvoke $r4.<org.apache.batik.transcoder.TranscodingHints: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label1;

        return;

     label1:
        $r5 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: org.apache.batik.transcoder.SVGAbstractTranscoder this$0>;

        $r7 = $r5.<org.apache.batik.transcoder.TranscoderSupport: org.apache.batik.transcoder.TranscodingHints hints>;

        $r6 = <org.apache.batik.transcoder.SVGAbstractTranscoder: org.apache.batik.transcoder.TranscodingHints$Key KEY_ALLOWED_SCRIPT_TYPES>;

        $r8 = virtualinvoke $r7.<org.apache.batik.transcoder.TranscodingHints: java.lang.Object get(java.lang.Object)>($r6);

        r9 = (java.lang.String) $r8;

        $r10 = new java.util.StringTokenizer;

        specialinvoke $r10.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r9, ",");

        goto label3;

     label2:
        $r11 = r0.<org.apache.batik.transcoder.SVGAbstractTranscoder$SVGAbstractTranscoderUserAgent: java.util.List scripts>;

        $r12 = virtualinvoke $r10.<java.util.StringTokenizer: java.lang.String nextToken()>();

        interfaceinvoke $r11.<java.util.List: boolean add(java.lang.Object)>($r12);

     label3:
        $z1 = virtualinvoke $r10.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label2;

        return;
    }
}
