public final class org.apache.poi.util.PackageHelper extends java.lang.Object
{

    public void <init>()
    {
        org.apache.poi.util.PackageHelper r0;

        r0 := @this: org.apache.poi.util.PackageHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream) throws java.io.IOException
    {
        org.apache.poi.openxml4j.exceptions.InvalidFormatException $r2;
        org.apache.poi.openxml4j.opc.OPCPackage $r1;
        org.apache.poi.POIXMLException $r3;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

     label1:
        $r1 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.io.InputStream)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new org.apache.poi.POIXMLException;

        specialinvoke $r3.<org.apache.poi.POIXMLException: void <init>(java.lang.Throwable)>($r2);

        throw $r3;

        catch org.apache.poi.openxml4j.exceptions.InvalidFormatException from label1 to label2 with label3;
    }

    public static org.apache.poi.openxml4j.opc.OPCPackage clone(org.apache.poi.openxml4j.opc.OPCPackage, java.io.File) throws org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackageProperties $r20, $r21;
        org.apache.poi.openxml4j.opc.PackageRelationship r9;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r4;
        org.apache.poi.openxml4j.opc.PackagePart $r10, $r17;
        java.lang.String $r1, $r11, $r14, $r16;
        boolean $z0, $z1, $z2;
        java.io.OutputStream $r18;
        java.util.Iterator $r5;
        org.apache.poi.openxml4j.opc.PackagePartName $r12, $r15;
        java.io.File r0, $r6;
        org.apache.poi.openxml4j.opc.TargetMode $r13;
        org.apache.poi.openxml4j.opc.OPCPackage $r2, r3, $r7;
        java.lang.Object $r8;
        java.io.InputStream $r19;

        r3 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r0 := @parameter1: java.io.File;

        $r1 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        $r2 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage create(java.lang.String)>($r1);

        $r4 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships()>();

        $r5 = virtualinvoke $r4.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label1:
        $z2 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label4;

        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r8;

        $r10 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackageRelationship)>(r9);

        $r11 = virtualinvoke r9.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $z0 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties");

        if $z0 == 0 goto label2;

        $r20 = virtualinvoke r3.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageProperties getPackageProperties()>();

        $r21 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageProperties getPackageProperties()>();

        staticinvoke <org.apache.poi.util.PackageHelper: void copyProperties(org.apache.poi.openxml4j.opc.PackageProperties,org.apache.poi.openxml4j.opc.PackageProperties)>($r20, $r21);

        goto label1;

     label2:
        $r12 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r13 = virtualinvoke r9.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r14 = virtualinvoke r9.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        virtualinvoke $r2.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String)>($r12, $r13, $r14);

        $r15 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r16 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: java.lang.String getContentType()>();

        $r17 = virtualinvoke $r2.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart createPart(org.apache.poi.openxml4j.opc.PackagePartName,java.lang.String)>($r15, $r16);

        $r18 = virtualinvoke $r17.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        $r19 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>($r19, $r18);

        virtualinvoke $r18.<java.io.OutputStream: void close()>();

        $z1 = virtualinvoke $r10.<org.apache.poi.openxml4j.opc.PackagePart: boolean hasRelationships()>();

        if $z1 == 0 goto label3;

        staticinvoke <org.apache.poi.util.PackageHelper: void copy(org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePart)>(r3, $r10, $r2, $r17);

     label3:
        goto label1;

     label4:
        virtualinvoke $r2.<org.apache.poi.openxml4j.opc.OPCPackage: void close()>();

        $r6 = new java.io.File;

        specialinvoke $r6.<java.io.File: void <init>(java.lang.String)>($r1);

        virtualinvoke $r6.<java.io.File: void deleteOnExit()>();

        $r7 = staticinvoke <org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.OPCPackage open(java.lang.String)>($r1);

        return $r7;
    }

    private static void copy(org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePart, org.apache.poi.openxml4j.opc.OPCPackage, org.apache.poi.openxml4j.opc.PackagePart) throws org.apache.poi.openxml4j.exceptions.OpenXML4JException, java.io.IOException
    {
        org.apache.poi.openxml4j.opc.PackagePart r0, $r12, r13, $r22;
        java.net.URI $r7, $r9, $r28;
        boolean $z0, $z1;
        org.apache.poi.openxml4j.opc.PackagePartName $r10, $r14, $r19, $r20;
        org.apache.poi.openxml4j.opc.OPCPackage r11, r18;
        org.apache.poi.openxml4j.opc.PackageRelationship r4;
        org.apache.poi.openxml4j.opc.PackageRelationshipCollection $r1;
        java.lang.String $r8, $r16, $r17, $r21, $r26, $r27, $r29, $r30, $r31;
        java.io.OutputStream $r23;
        java.util.Iterator $r2;
        org.apache.poi.openxml4j.opc.TargetMode $r5, $r6, $r15, $r25;
        java.lang.Object $r3;
        java.io.InputStream $r24;

        r11 := @parameter0: org.apache.poi.openxml4j.opc.OPCPackage;

        r0 := @parameter1: org.apache.poi.openxml4j.opc.PackagePart;

        r18 := @parameter2: org.apache.poi.openxml4j.opc.OPCPackage;

        r13 := @parameter3: org.apache.poi.openxml4j.opc.PackagePart;

        $r1 = virtualinvoke r0.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationshipCollection getRelationships()>();

        if $r1 == null goto label5;

        $r2 = virtualinvoke $r1.<org.apache.poi.openxml4j.opc.PackageRelationshipCollection: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r4 = (org.apache.poi.openxml4j.opc.PackageRelationship) $r3;

        $r5 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r6 = <org.apache.poi.openxml4j.opc.TargetMode: org.apache.poi.openxml4j.opc.TargetMode EXTERNAL>;

        if $r5 != $r6 goto label2;

        $r28 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r29 = virtualinvoke $r28.<java.net.URI: java.lang.String toString()>();

        $r30 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r31 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        virtualinvoke r13.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addExternalRelationship(java.lang.String,java.lang.String,java.lang.String)>($r29, $r30, $r31);

        goto label1;

     label2:
        $r7 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r8 = virtualinvoke $r7.<java.net.URI: java.lang.String getRawFragment()>();

        if $r8 == null goto label3;

        $r25 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r26 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r27 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        virtualinvoke r13.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(java.net.URI,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>($r7, $r25, $r26, $r27);

        goto label1;

     label3:
        $r9 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.net.URI getTargetURI()>();

        $r10 = staticinvoke <org.apache.poi.openxml4j.opc.PackagingURIHelper: org.apache.poi.openxml4j.opc.PackagePartName createPartName(java.net.URI)>($r9);

        $r12 = virtualinvoke r11.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart getPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r10);

        $r14 = virtualinvoke $r12.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r15 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: org.apache.poi.openxml4j.opc.TargetMode getTargetMode()>();

        $r16 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getRelationshipType()>();

        $r17 = virtualinvoke r4.<org.apache.poi.openxml4j.opc.PackageRelationship: java.lang.String getId()>();

        virtualinvoke r13.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackageRelationship addRelationship(org.apache.poi.openxml4j.opc.PackagePartName,org.apache.poi.openxml4j.opc.TargetMode,java.lang.String,java.lang.String)>($r14, $r15, $r16, $r17);

        $r19 = virtualinvoke $r12.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $z0 = virtualinvoke r18.<org.apache.poi.openxml4j.opc.OPCPackage: boolean containPart(org.apache.poi.openxml4j.opc.PackagePartName)>($r19);

        if $z0 != 0 goto label4;

        $r20 = virtualinvoke $r12.<org.apache.poi.openxml4j.opc.PackagePart: org.apache.poi.openxml4j.opc.PackagePartName getPartName()>();

        $r21 = virtualinvoke $r12.<org.apache.poi.openxml4j.opc.PackagePart: java.lang.String getContentType()>();

        $r22 = virtualinvoke r18.<org.apache.poi.openxml4j.opc.OPCPackage: org.apache.poi.openxml4j.opc.PackagePart createPart(org.apache.poi.openxml4j.opc.PackagePartName,java.lang.String)>($r20, $r21);

        $r23 = virtualinvoke $r22.<org.apache.poi.openxml4j.opc.PackagePart: java.io.OutputStream getOutputStream()>();

        $r24 = virtualinvoke $r12.<org.apache.poi.openxml4j.opc.PackagePart: java.io.InputStream getInputStream()>();

        staticinvoke <org.apache.poi.util.IOUtils: void copy(java.io.InputStream,java.io.OutputStream)>($r24, $r23);

        virtualinvoke $r23.<java.io.OutputStream: void close()>();

        staticinvoke <org.apache.poi.util.PackageHelper: void copy(org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePart,org.apache.poi.openxml4j.opc.OPCPackage,org.apache.poi.openxml4j.opc.PackagePart)>(r11, $r12, r18, $r22);

     label4:
        goto label1;

     label5:
        return;
    }

    private static void copyProperties(org.apache.poi.openxml4j.opc.PackageProperties, org.apache.poi.openxml4j.opc.PackageProperties)
    {
        org.apache.poi.openxml4j.opc.PackageProperties r0, r1;
        org.apache.poi.openxml4j.util.Nullable $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35;
        java.lang.String $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37;
        java.lang.Object $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36;

        r1 := @parameter0: org.apache.poi.openxml4j.opc.PackageProperties;

        r0 := @parameter1: org.apache.poi.openxml4j.opc.PackageProperties;

        $r2 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getCategoryProperty()>();

        $r3 = virtualinvoke $r2.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r4 = (java.lang.String) $r3;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setCategoryProperty(java.lang.String)>($r4);

        $r5 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getContentStatusProperty()>();

        $r6 = virtualinvoke $r5.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r7 = (java.lang.String) $r6;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setContentStatusProperty(java.lang.String)>($r7);

        $r8 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getContentTypeProperty()>();

        $r9 = virtualinvoke $r8.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r10 = (java.lang.String) $r9;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setContentTypeProperty(java.lang.String)>($r10);

        $r11 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getCreatorProperty()>();

        $r12 = virtualinvoke $r11.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r13 = (java.lang.String) $r12;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setCreatorProperty(java.lang.String)>($r13);

        $r14 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getDescriptionProperty()>();

        $r15 = virtualinvoke $r14.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r16 = (java.lang.String) $r15;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setDescriptionProperty(java.lang.String)>($r16);

        $r17 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getIdentifierProperty()>();

        $r18 = virtualinvoke $r17.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r19 = (java.lang.String) $r18;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setIdentifierProperty(java.lang.String)>($r19);

        $r20 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getKeywordsProperty()>();

        $r21 = virtualinvoke $r20.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r22 = (java.lang.String) $r21;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setKeywordsProperty(java.lang.String)>($r22);

        $r23 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getLanguageProperty()>();

        $r24 = virtualinvoke $r23.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r25 = (java.lang.String) $r24;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setLanguageProperty(java.lang.String)>($r25);

        $r26 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getRevisionProperty()>();

        $r27 = virtualinvoke $r26.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r28 = (java.lang.String) $r27;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setRevisionProperty(java.lang.String)>($r28);

        $r29 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getSubjectProperty()>();

        $r30 = virtualinvoke $r29.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r31 = (java.lang.String) $r30;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setSubjectProperty(java.lang.String)>($r31);

        $r32 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getTitleProperty()>();

        $r33 = virtualinvoke $r32.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r34 = (java.lang.String) $r33;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setTitleProperty(java.lang.String)>($r34);

        $r35 = interfaceinvoke r1.<org.apache.poi.openxml4j.opc.PackageProperties: org.apache.poi.openxml4j.util.Nullable getVersionProperty()>();

        $r36 = virtualinvoke $r35.<org.apache.poi.openxml4j.util.Nullable: java.lang.Object getValue()>();

        $r37 = (java.lang.String) $r36;

        interfaceinvoke r0.<org.apache.poi.openxml4j.opc.PackageProperties: void setVersionProperty(java.lang.String)>($r37);

        return;
    }
}
