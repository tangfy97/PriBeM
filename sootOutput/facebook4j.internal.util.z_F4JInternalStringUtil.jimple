public class facebook4j.internal.util.z_F4JInternalStringUtil extends java.lang.Object
{

    private void <init>()
    {
        facebook4j.internal.util.z_F4JInternalStringUtil r0;
        java.lang.AssertionError $r1;

        r0 := @this: facebook4j.internal.util.z_F4JInternalStringUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.AssertionError;

        specialinvoke $r1.<java.lang.AssertionError: void <init>()>();

        throw $r1;
    }

    public static java.lang.String maskString(java.lang.String)
    {
        int $i0, $i1, i2;
        java.lang.StringBuilder $r0;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i0);

        i2 = 0;

     label1:
        $i1 = virtualinvoke r1.<java.lang.String: int length()>();

        if i2 >= $i1 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("*");

        i2 = i2 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(int[])
    {
        int[] r1;
        int $i0, $i1, i2, i3, $i4, i5;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;

        r1 := @parameter0: int[];

        $r0 = new java.lang.StringBuilder;

        $i0 = lengthof r1;

        $i1 = 11 * $i0;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        i2 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i2 goto label3;

        i3 = r1[i5];

        $i4 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if 0 == $i4 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i3);

        i5 = i5 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(long[])
    {
        long l3;
        long[] r1;
        int $i0, $i1, i2, $i4, i5;
        java.lang.StringBuilder $r0;
        java.lang.String $r2;

        r1 := @parameter0: long[];

        $r0 = new java.lang.StringBuilder;

        $i0 = lengthof r1;

        $i1 = 11 * $i0;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        i2 = lengthof r1;

        i5 = 0;

     label1:
        if i5 >= i2 goto label3;

        l3 = r1[i5];

        $i4 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if 0 == $i4 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(l3);

        i5 = i5 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(java.lang.String[])
    {
        java.lang.String[] r1;
        int $i0, $i1, i2, $i3, i4;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, r3;

        r1 := @parameter0: java.lang.String[];

        $r0 = new java.lang.StringBuilder;

        $i0 = lengthof r1;

        $i1 = 11 * $i0;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        i2 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        r3 = r1[i4];

        $i3 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if 0 == $i3 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String join(java.lang.String[], java.lang.String)
    {
        java.lang.String[] r1;
        int $i0, $i1, i2, $i3, i4;
        java.lang.StringBuilder $r0;
        java.lang.String $r2, r3, r4;

        r1 := @parameter0: java.lang.String[];

        r4 := @parameter1: java.lang.String;

        $r0 = new java.lang.StringBuilder;

        $i0 = lengthof r1;

        $i1 = 11 * $i0;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i1);

        i2 = lengthof r1;

        i4 = 0;

     label1:
        if i4 >= i2 goto label3;

        r3 = r1[i4];

        $i3 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if 0 == $i3 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

     label2:
        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        i4 = i4 + 1;

        goto label1;

     label3:
        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.String formatISO8601Datetime(java.util.Calendar)
    {
        java.util.Calendar r1;
        java.util.TimeZone $r2;
        java.util.Date $r3;
        java.text.SimpleDateFormat $r0;
        java.lang.String $r4;

        r1 := @parameter0: java.util.Calendar;

        $r0 = new java.text.SimpleDateFormat;

        specialinvoke $r0.<java.text.SimpleDateFormat: void <init>(java.lang.String)>("yyyy-MM-dd\'T\'HH:mm:ssZ");

        $r2 = virtualinvoke r1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();

        virtualinvoke $r0.<java.text.SimpleDateFormat: void setTimeZone(java.util.TimeZone)>($r2);

        $r3 = virtualinvoke r1.<java.util.Calendar: java.util.Date getTime()>();

        $r4 = virtualinvoke $r0.<java.text.SimpleDateFormat: java.lang.String format(java.util.Date)>($r3);

        return $r4;
    }
}
