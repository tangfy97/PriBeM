public abstract class org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser extends java.lang.Object
{
    private static final java.lang.String XMLNS_BLUEPRINT;
    private static final java.lang.String COMPONENT_ID;
    private static final java.util.logging.Logger LOG;
    private javax.xml.bind.JAXBContext jaxbContext;
    private java.util.Set jaxbClasses;

    public void <init>()
    {
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected boolean hasBusProperty()
    {
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        return 0;
    }

    public org.osgi.service.blueprint.reflect.Metadata createValue(org.apache.aries.blueprint.ParserContext, javax.xml.namespace.QName)
    {
        org.osgi.service.blueprint.reflect.ValueMetadata $r5, $r7;
        org.osgi.service.blueprint.reflect.Metadata $r1, $r9, $r10, $r11;
        org.apache.aries.blueprint.ParserContext r0;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r2;
        javax.xml.namespace.QName r3;
        java.lang.String $r4, $r6;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r8;

        r8 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter1: javax.xml.namespace.QName;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableBeanMetadata;");

        r2 = (org.apache.aries.blueprint.mutable.MutableBeanMetadata) $r1;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setRuntimeClass(java.lang.Class)>(class "Ljavax/xml/namespace/QName;");

        $r4 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getNamespaceURI()>();

        $r5 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r0, $r4);

        $r9 = (org.osgi.service.blueprint.reflect.Metadata) $r5;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanArgument addArgument(org.osgi.service.blueprint.reflect.Metadata,java.lang.String,int)>($r9, null, 0);

        $r6 = virtualinvoke r3.<javax.xml.namespace.QName: java.lang.String getLocalPart()>();

        $r7 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r0, $r6);

        $r10 = (org.osgi.service.blueprint.reflect.Metadata) $r7;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanArgument addArgument(org.osgi.service.blueprint.reflect.Metadata,java.lang.String,int)>($r10, null, 1);

        $r11 = (org.osgi.service.blueprint.reflect.Metadata) r2;

        return $r11;
    }

    protected org.osgi.service.blueprint.reflect.Metadata parseListData(org.apache.aries.blueprint.ParserContext, org.osgi.service.blueprint.reflect.ComponentMetadata, org.w3c.dom.Element)
    {
        org.osgi.service.blueprint.reflect.ComponentMetadata r1;
        org.w3c.dom.Element r2;
        org.apache.aries.blueprint.mutable.MutableCollectionMetadata r4;
        org.apache.aries.blueprint.ParserContext r0;
        org.osgi.service.blueprint.reflect.Metadata $r6;
        java.lang.Object $r3;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r5;

        r5 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r1 := @parameter1: org.osgi.service.blueprint.reflect.ComponentMetadata;

        r2 := @parameter2: org.w3c.dom.Element;

        $r3 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: java.lang.Object parseElement(java.lang.Class,org.osgi.service.blueprint.reflect.ComponentMetadata,org.w3c.dom.Element)>(class "Lorg/osgi/service/blueprint/reflect/CollectionMetadata;", r1, r2);

        r4 = (org.apache.aries.blueprint.mutable.MutableCollectionMetadata) $r3;

        interfaceinvoke r4.<org.apache.aries.blueprint.mutable.MutableCollectionMetadata: void setCollectionClass(java.lang.Class)>(class "Ljava/util/List;");

        $r6 = (org.osgi.service.blueprint.reflect.Metadata) r4;

        return $r6;
    }

    protected org.osgi.service.blueprint.reflect.Metadata parseMapData(org.apache.aries.blueprint.ParserContext, org.osgi.service.blueprint.reflect.ComponentMetadata, org.w3c.dom.Element)
    {
        org.osgi.service.blueprint.reflect.ComponentMetadata r1;
        org.w3c.dom.Element r2;
        org.apache.aries.blueprint.ParserContext r0;
        org.osgi.service.blueprint.reflect.Metadata $r4;
        java.lang.Object $r3;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r5;

        r5 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r1 := @parameter1: org.osgi.service.blueprint.reflect.ComponentMetadata;

        r2 := @parameter2: org.w3c.dom.Element;

        $r3 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: java.lang.Object parseElement(java.lang.Class,org.osgi.service.blueprint.reflect.ComponentMetadata,org.w3c.dom.Element)>(class "Lorg/osgi/service/blueprint/reflect/MapMetadata;", r1, r2);

        $r4 = (org.osgi.service.blueprint.reflect.Metadata) $r3;

        return $r4;
    }

    protected void setFirstChildAsProperty(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, java.lang.String)
    {
        java.lang.IllegalStateException $r22, $r23;
        org.osgi.service.blueprint.reflect.Metadata $r7, $r11, $r24;
        org.osgi.service.blueprint.reflect.RefMetadata $r13;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r25, $r26;
        java.lang.String $r2, r4, $r8, $r9, $r12, $r19;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r20;
        boolean $z0, $z1;
        org.w3c.dom.Element r0, $r1;
        org.apache.aries.blueprint.ParserContext r5;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r3;
        java.lang.Object $r6, $r10;
        java.lang.StringBuilder $r17, $r18, $r21;

        r20 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r5 := @parameter1: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter2: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r4 := @parameter3: java.lang.String;

        $r1 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

        if $r1 != null goto label1;

        $r22 = new java.lang.IllegalStateException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" property must have child elements!");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r22.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r19);

        throw $r22;

     label1:
        $r2 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getNamespaceURI()>();

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("http://www.osgi.org/xmlns/blueprint/v1.0.0");

        if $z0 == 0 goto label5;

        $r8 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        $r9 = "ref";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z1 == 0 goto label3;

        $r12 = interfaceinvoke $r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("component-id");

        if $r12 != null goto label2;

        $r23 = new java.lang.IllegalStateException;

        specialinvoke $r23.<java.lang.IllegalStateException: void <init>(java.lang.String)>("<ref> elements must have a \"component-id\" attribute!");

        throw $r23;

     label2:
        $r13 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r5, $r12);

        $r24 = (org.osgi.service.blueprint.reflect.Metadata) $r13;

        interfaceinvoke r3.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r4, $r24);

        goto label4;

     label3:
        $r25 = (org.osgi.service.blueprint.reflect.ComponentMetadata) r3;

        $r10 = interfaceinvoke r5.<org.apache.aries.blueprint.ParserContext: java.lang.Object parseElement(java.lang.Class,org.osgi.service.blueprint.reflect.ComponentMetadata,org.w3c.dom.Element)>(class "Lorg/osgi/service/blueprint/reflect/Metadata;", $r25, $r1);

        $r11 = (org.osgi.service.blueprint.reflect.Metadata) $r10;

        interfaceinvoke r3.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r4, $r11);

     label4:
        goto label6;

     label5:
        $r26 = (org.osgi.service.blueprint.reflect.ComponentMetadata) r3;

        $r6 = interfaceinvoke r5.<org.apache.aries.blueprint.ParserContext: java.lang.Object parseElement(java.lang.Class,org.osgi.service.blueprint.reflect.ComponentMetadata,org.w3c.dom.Element)>(class "Lorg/osgi/service/blueprint/reflect/Metadata;", $r26, $r1);

        $r7 = (org.osgi.service.blueprint.reflect.Metadata) $r6;

        interfaceinvoke r3.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r4, $r7);

     label6:
        return;
    }

    public javax.xml.namespace.QName parseQName(org.w3c.dom.Element, java.lang.String)
    {
        int $i0, $i1, $i2, $i3, $i5, $i7;
        java.lang.String r0, $r1, r6, r7, r8, r9;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r5;
        boolean $z0;
        java.lang.RuntimeException $r10;
        org.w3c.dom.Element r2;
        javax.xml.namespace.QName $r11;

        r5 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r2 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: java.lang.String;

        r6 = r0;

        $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("{");

        if $z0 == 0 goto label2;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(125);

        $i5 = (int) -1;

        if $i2 != $i5 goto label1;

        $r10 = new java.lang.RuntimeException;

        specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>("Namespace bracket \'{\' must having a closing bracket \'}\'.");

        throw $r10;

     label1:
        virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, $i2);

        $i3 = $i2 + 1;

        r6 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i3);

     label2:
        $i0 = virtualinvoke r6.<java.lang.String: int indexOf(int)>(58);

        $i7 = (int) -1;

        if $i0 != $i7 goto label3;

        r7 = r6;

        r8 = "";

        r9 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)>(r2, "");

        goto label4;

     label3:
        $r1 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        r8 = $r1;

        $i1 = $i0 + 1;

        r7 = virtualinvoke r6.<java.lang.String: java.lang.String substring(int)>($i1);

        r9 = staticinvoke <org.apache.cxf.helpers.DOMUtils: java.lang.String getNamespace(org.w3c.dom.Node,java.lang.String)>(r2, $r1);

     label4:
        $r11 = new javax.xml.namespace.QName;

        specialinvoke $r11.<javax.xml.namespace.QName: void <init>(java.lang.String,java.lang.String,java.lang.String)>(r9, r7, r8);

        return $r11;
    }

    protected boolean parseAttributes(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata)
    {
        org.w3c.dom.Attr r3;
        org.w3c.dom.Node $r2;
        int $i0, i1;
        org.w3c.dom.NamedNodeMap $r1;
        java.lang.String $r4, $r5, $r6, $r7, $r9, $r11, $r12, $r13, $r14, $r15;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r8;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.w3c.dom.Element r0;
        org.apache.aries.blueprint.ParserContext r16;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r10;

        r8 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r16 := @parameter1: org.apache.aries.blueprint.ParserContext;

        r10 := @parameter2: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        $r1 = interfaceinvoke r0.<org.w3c.dom.Element: org.w3c.dom.NamedNodeMap getAttributes()>();

        i1 = 0;

     label1:
        $i0 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: int getLength()>();

        if i1 >= $i0 goto label9;

        $r2 = interfaceinvoke $r1.<org.w3c.dom.NamedNodeMap: org.w3c.dom.Node item(int)>(i1);

        r3 = (org.w3c.dom.Attr) $r2;

        $r4 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getValue()>();

        $r5 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $r6 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getLocalName()>();

        $r7 = interfaceinvoke r3.<org.w3c.dom.Attr: java.lang.String getPrefix()>();

        $z0 = virtualinvoke r8.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: boolean isNamespace(java.lang.String,java.lang.String)>($r6, $r7);

        if $z0 == 0 goto label2;

        goto label8;

     label2:
        $r9 = "createdFromAPI";

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z1 != 0 goto label3;

        $r11 = "abstract";

        $z2 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z2 == 0 goto label4;

     label3:
        interfaceinvoke r10.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setScope(java.lang.String)>("prototype");

        goto label8;

     label4:
        $r12 = "depends-on";

        $z3 = virtualinvoke $r12.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z3 == 0 goto label5;

        interfaceinvoke r10.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void addDependsOn(java.lang.String)>($r4);

        goto label8;

     label5:
        $r13 = "name";

        $z4 = virtualinvoke $r13.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z4 == 0 goto label6;

        virtualinvoke r8.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void processNameAttribute(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String)>(r0, r16, r10, $r4);

        goto label8;

     label6:
        $r14 = "bus";

        $z5 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z5 == 0 goto label7;

        virtualinvoke r8.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void processBusAttribute(org.w3c.dom.Element,org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String)>(r0, r16, r10, $r4);

        goto label8;

     label7:
        $r15 = "id";

        $z6 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z6 != 0 goto label8;

        $z7 = virtualinvoke r8.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: boolean isAttribute(java.lang.String,java.lang.String)>($r5, $r6);

        if $z7 == 0 goto label8;

        virtualinvoke r8.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)>(r10, r0, $r6, $r4, r16);

     label8:
        i1 = i1 + 1;

        goto label1;

     label9:
        return 0;
    }

    protected void processBusAttribute(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, java.lang.String)
    {
        org.osgi.service.blueprint.reflect.Metadata $r7, $r8;
        org.osgi.service.blueprint.reflect.RefMetadata $r4, $r5;
        org.w3c.dom.Element r6;
        org.apache.aries.blueprint.ParserContext r2;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r1;
        java.lang.String r3;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r6 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.apache.aries.blueprint.ParserContext;

        r1 := @parameter2: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r3 := @parameter3: java.lang.String;

        $z0 = virtualinvoke r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: boolean hasBusProperty()>();

        if $z0 == 0 goto label1;

        $r5 = virtualinvoke r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata getBusRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r2, r3);

        $r7 = (org.osgi.service.blueprint.reflect.Metadata) $r5;

        interfaceinvoke r1.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>("bus", $r7);

        goto label2;

     label1:
        $r4 = virtualinvoke r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata getBusRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r2, r3);

        $r8 = (org.osgi.service.blueprint.reflect.Metadata) $r4;

        interfaceinvoke r1.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanArgument addArgument(org.osgi.service.blueprint.reflect.Metadata,java.lang.String,int)>($r8, null, 0);

     label2:
        return;
    }

    protected void processNameAttribute(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, java.lang.String)
    {
        org.w3c.dom.Element r1;
        org.apache.aries.blueprint.ParserContext r2;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r3;
        java.lang.String r4;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter2: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r4 := @parameter3: java.lang.String;

        return;
    }

    protected void mapAttribute(org.apache.aries.blueprint.mutable.MutableBeanMetadata, org.w3c.dom.Element, java.lang.String, java.lang.String, org.apache.aries.blueprint.ParserContext)
    {
        org.w3c.dom.Element r5;
        org.apache.aries.blueprint.ParserContext r4;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r1;
        java.lang.String r2, r3;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r1 := @parameter0: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r5 := @parameter1: org.w3c.dom.Element;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String;

        r4 := @parameter4: org.apache.aries.blueprint.ParserContext;

        virtualinvoke r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata,java.lang.String,java.lang.String,org.apache.aries.blueprint.ParserContext)>(r1, r2, r3, r4);

        return;
    }

    protected boolean isAttribute(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, r2, $r3, $r4, $r5;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;

        r6 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = "xmlns";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label2;

        if r2 == null goto label1;

        $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("xmlns");

        if $z4 != 0 goto label2;

     label1:
        $r3 = "abstract";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 != 0 goto label2;

        $r4 = "lazy-init";

        $z2 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 != 0 goto label2;

        $r5 = "id";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 != 0 goto label2;

        $z5 = 1;

        goto label3;

     label2:
        $z5 = 0;

     label3:
        return $z5;
    }

    protected boolean isNamespace(java.lang.String, java.lang.String)
    {
        java.lang.String r0, $r1, r2, $r3;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r4;
        boolean $z0, $z1, $z2;

        r4 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = "xmlns";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        if r0 != null goto label2;

        $r3 = "xmlns";

        $z1 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r2);

        if $z1 == 0 goto label2;

     label1:
        $z2 = 1;

        goto label3;

     label2:
        $z2 = 0;

     label3:
        return $z2;
    }

    protected void mapElement(org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r3;
        org.apache.aries.blueprint.ParserContext r1;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r2;
        java.lang.String r4;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r1 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r2 := @parameter1: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r3 := @parameter2: org.w3c.dom.Element;

        r4 := @parameter3: java.lang.String;

        return;
    }

    protected void mapToProperty(org.apache.aries.blueprint.mutable.MutableBeanMetadata, java.lang.String, java.lang.String, org.apache.aries.blueprint.ParserContext)
    {
        org.osgi.service.blueprint.reflect.ValueMetadata $r5;
        org.osgi.service.blueprint.reflect.Metadata $r9, $r10;
        org.osgi.service.blueprint.reflect.RefMetadata $r7;
        org.apache.aries.blueprint.ParserContext r4;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r3;
        java.lang.String r0, $r1, r2, $r6;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r8;
        boolean $z0, $z1, $z2;

        r8 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r3 := @parameter0: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r0 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        r4 := @parameter3: org.apache.aries.blueprint.ParserContext;

        $r1 = "id";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return;

     label1:
        $z1 = staticinvoke <org.apache.cxf.common.util.StringUtils: boolean isEmpty(java.lang.String)>(r2);

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>("#");

        if $z2 == 0 goto label2;

        $r6 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>(1);

        $r7 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r4, $r6);

        $r9 = (org.osgi.service.blueprint.reflect.Metadata) $r7;

        interfaceinvoke r3.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r0, $r9);

        goto label3;

     label2:
        $r5 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r4, r2);

        $r10 = (org.osgi.service.blueprint.reflect.Metadata) $r5;

        interfaceinvoke r3.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r0, $r10);

     label3:
        return;
    }

    public static org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext, java.lang.String)
    {
        org.osgi.service.blueprint.reflect.ValueMetadata $r4;
        org.apache.aries.blueprint.ParserContext r0;
        org.osgi.service.blueprint.reflect.Metadata $r1;
        org.apache.aries.blueprint.mutable.MutableValueMetadata r2;
        java.lang.String r3;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableValueMetadata;");

        r2 = (org.apache.aries.blueprint.mutable.MutableValueMetadata) $r1;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableValueMetadata: void setStringValue(java.lang.String)>(r3);

        $r4 = (org.osgi.service.blueprint.reflect.ValueMetadata) r2;

        return $r4;
    }

    public static org.osgi.service.blueprint.reflect.RefMetadata createRef(org.apache.aries.blueprint.ParserContext, java.lang.String)
    {
        org.osgi.service.blueprint.reflect.RefMetadata $r4;
        org.apache.aries.blueprint.mutable.MutableRefMetadata r2;
        org.apache.aries.blueprint.ParserContext r0;
        org.osgi.service.blueprint.reflect.Metadata $r1;
        java.lang.String r3;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableRefMetadata;");

        r2 = (org.apache.aries.blueprint.mutable.MutableRefMetadata) $r1;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableRefMetadata: void setComponentId(java.lang.String)>(r3);

        $r4 = (org.osgi.service.blueprint.reflect.RefMetadata) r2;

        return $r4;
    }

    public static org.apache.aries.blueprint.PassThroughMetadata createPassThrough(org.apache.aries.blueprint.ParserContext, java.lang.Object)
    {
        org.apache.aries.blueprint.ParserContext r0;
        org.osgi.service.blueprint.reflect.Metadata $r1;
        java.lang.Object r3;
        org.apache.aries.blueprint.mutable.MutablePassThroughMetadata r2;
        org.apache.aries.blueprint.PassThroughMetadata $r4;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter1: java.lang.Object;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutablePassThroughMetadata;");

        r2 = (org.apache.aries.blueprint.mutable.MutablePassThroughMetadata) $r1;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutablePassThroughMetadata: void setObject(java.lang.Object)>(r3);

        $r4 = (org.apache.aries.blueprint.PassThroughMetadata) r2;

        return $r4;
    }

    public static org.apache.aries.blueprint.mutable.MutableBeanMetadata createObjectOfClass(org.apache.aries.blueprint.ParserContext, java.lang.String)
    {
        org.apache.aries.blueprint.ParserContext r0;
        org.osgi.service.blueprint.reflect.Metadata $r1;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r2;
        java.lang.String r3;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r3 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableBeanMetadata;");

        r2 = (org.apache.aries.blueprint.mutable.MutableBeanMetadata) $r1;

        interfaceinvoke r2.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setClassName(java.lang.String)>(r3);

        return r2;
    }

    protected org.apache.aries.blueprint.mutable.MutableBeanMetadata getBus(org.apache.aries.blueprint.ParserContext, java.lang.String)
    {
        org.apache.aries.blueprint.ComponentDefinitionRegistry $r1, $r11, $r16;
        org.osgi.service.blueprint.reflect.Metadata $r8, $r12, $r25, $r26;
        org.apache.aries.blueprint.mutable.MutablePassThroughMetadata r21;
        org.apache.aries.blueprint.PassThroughMetadata $r17;
        org.osgi.service.blueprint.reflect.RefMetadata $r9, $r10;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r2, $r6, $r27;
        org.osgi.service.blueprint.reflect.Target $r24;
        java.lang.String $r4, r5, $r15;
        org.osgi.framework.Bundle r20;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r19;
        boolean $z0, $z1, $z2;
        org.apache.cxf.configuration.blueprint.InterceptorTypeConverter $r23;
        org.apache.aries.blueprint.ParserContext r0;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata $r7, r22;
        java.lang.Class $r3, $r14;
        java.lang.Object $r18;

        r19 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r5 := @parameter1: java.lang.String;

        $r1 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.apache.aries.blueprint.ComponentDefinitionRegistry getComponentDefinitionRegistry()>();

        $r2 = interfaceinvoke $r1.<org.apache.aries.blueprint.ComponentDefinitionRegistry: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentDefinition(java.lang.String)>("blueprintBundle");

        r20 = null;

        $z0 = $r2 instanceof org.apache.aries.blueprint.PassThroughMetadata;

        if $z0 == 0 goto label1;

        $r17 = (org.apache.aries.blueprint.PassThroughMetadata) $r2;

        $r18 = interfaceinvoke $r17.<org.apache.aries.blueprint.PassThroughMetadata: java.lang.Object getObject()>();

        r20 = (org.osgi.framework.Bundle) $r18;

     label1:
        $r3 = class "Lorg/apache/cxf/configuration/blueprint/InterceptorTypeConverter;";

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $z1 = interfaceinvoke $r1.<org.apache.aries.blueprint.ComponentDefinitionRegistry: boolean containsComponentDefinition(java.lang.String)>($r4);

        if $z1 != 0 goto label2;

        $r12 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutablePassThroughMetadata;");

        r21 = (org.apache.aries.blueprint.mutable.MutablePassThroughMetadata) $r12;

        $r23 = new org.apache.cxf.configuration.blueprint.InterceptorTypeConverter;

        specialinvoke $r23.<org.apache.cxf.configuration.blueprint.InterceptorTypeConverter: void <init>()>();

        interfaceinvoke r21.<org.apache.aries.blueprint.mutable.MutablePassThroughMetadata: void setObject(java.lang.Object)>($r23);

        $r14 = class "Lorg/apache/cxf/configuration/blueprint/InterceptorTypeConverter;";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke r21.<org.apache.aries.blueprint.mutable.MutablePassThroughMetadata: void setId(java.lang.String)>($r15);

        $r16 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.apache.aries.blueprint.ComponentDefinitionRegistry getComponentDefinitionRegistry()>();

        $r24 = (org.osgi.service.blueprint.reflect.Target) r21;

        interfaceinvoke $r16.<org.apache.aries.blueprint.ComponentDefinitionRegistry: void registerTypeConverter(org.osgi.service.blueprint.reflect.Target)>($r24);

     label2:
        if r20 == null goto label3;

        $z2 = interfaceinvoke $r1.<org.apache.aries.blueprint.ComponentDefinitionRegistry: boolean containsComponentDefinition(java.lang.String)>(r5);

        if $z2 != 0 goto label3;

        $r8 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableBeanMetadata;");

        r22 = (org.apache.aries.blueprint.mutable.MutableBeanMetadata) $r8;

        interfaceinvoke r22.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setId(java.lang.String)>(r5);

        interfaceinvoke r22.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setRuntimeClass(java.lang.Class)>(class "Lorg/apache/cxf/bus/blueprint/BlueprintBus;");

        $r9 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r0, "blueprintBundleContext");

        $r25 = (org.osgi.service.blueprint.reflect.Metadata) $r9;

        interfaceinvoke r22.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>("bundleContext", $r25);

        $r10 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r0, "blueprintContainer");

        $r26 = (org.osgi.service.blueprint.reflect.Metadata) $r10;

        interfaceinvoke r22.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>("blueprintContainer", $r26);

        interfaceinvoke r22.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setDestroyMethod(java.lang.String)>("shutdown");

        interfaceinvoke r22.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setInitMethod(java.lang.String)>("initialize");

        $r11 = interfaceinvoke r0.<org.apache.aries.blueprint.ParserContext: org.apache.aries.blueprint.ComponentDefinitionRegistry getComponentDefinitionRegistry()>();

        $r27 = (org.osgi.service.blueprint.reflect.ComponentMetadata) r22;

        interfaceinvoke $r11.<org.apache.aries.blueprint.ComponentDefinitionRegistry: void registerComponentDefinition(org.osgi.service.blueprint.reflect.ComponentMetadata)>($r27);

        return r22;

     label3:
        $r6 = interfaceinvoke $r1.<org.apache.aries.blueprint.ComponentDefinitionRegistry: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentDefinition(java.lang.String)>(r5);

        $r7 = (org.apache.aries.blueprint.mutable.MutableBeanMetadata) $r6;

        return $r7;
    }

    protected org.osgi.service.blueprint.reflect.RefMetadata getBusRef(org.apache.aries.blueprint.ParserContext, java.lang.String)
    {
        org.osgi.service.blueprint.reflect.RefMetadata $r3;
        org.apache.aries.blueprint.ParserContext r2;
        java.lang.String r0, $r1;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r4;
        boolean $z0;

        r4 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r2 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r0 := @parameter1: java.lang.String;

        $r1 = "cxf";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        virtualinvoke r4.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.apache.aries.blueprint.mutable.MutableBeanMetadata getBus(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r2, r0);

     label1:
        $r3 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.RefMetadata createRef(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r2, r0);

        return $r3;
    }

    protected void parseChildElements(org.w3c.dom.Element, org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata)
    {
        org.w3c.dom.Element r0, r5;
        org.apache.aries.blueprint.ParserContext r3;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r4;
        java.lang.String $r1;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r2;

        r2 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r0 := @parameter0: org.w3c.dom.Element;

        r3 := @parameter1: org.apache.aries.blueprint.ParserContext;

        r4 := @parameter2: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r5 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstElement(org.w3c.dom.Node)>(r0);

     label1:
        if r5 == null goto label2;

        $r1 = interfaceinvoke r5.<org.w3c.dom.Element: java.lang.String getLocalName()>();

        virtualinvoke r2.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void mapElement(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String)>(r3, r4, r5, $r1);

        r5 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getNextElement(org.w3c.dom.Element)>(r5);

        goto label1;

     label2:
        return;
    }

    protected void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, org.w3c.dom.Element, javax.xml.namespace.QName, java.lang.String, java.lang.Class)
    {
        org.w3c.dom.Element r0, $r2;
        org.apache.aries.blueprint.ParserContext r4;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r5;
        java.lang.Class r7;
        javax.xml.namespace.QName r1;
        java.lang.String r6;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r3;

        r3 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r4 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r5 := @parameter1: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r0 := @parameter2: org.w3c.dom.Element;

        r1 := @parameter3: javax.xml.namespace.QName;

        r6 := @parameter4: java.lang.String;

        r7 := @parameter5: java.lang.Class;

        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstChildWithName(org.w3c.dom.Element,javax.xml.namespace.QName)>(r0, r1);

        if $r2 != null goto label1;

        return;

     label1:
        virtualinvoke r3.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext,org.apache.aries.blueprint.mutable.MutableBeanMetadata,org.w3c.dom.Element,java.lang.String,java.lang.Class)>(r4, r5, $r2, r6, r7);

        return;
    }

    protected void mapElementToJaxbProperty(org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, org.w3c.dom.Element, java.lang.String, java.lang.Class)
    {
        org.osgi.service.blueprint.reflect.Metadata $r5, $r21;
        org.apache.aries.blueprint.mutable.MutablePassThroughMetadata r6;
        java.lang.String r11, $r19;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;
        javax.xml.bind.JAXBContext $r2;
        javax.xml.bind.Unmarshaller $r3;
        javax.xml.bind.JAXBElement $r8;
        java.util.logging.Logger $r14;
        javax.xml.bind.JAXBException $r12;
        org.w3c.dom.Element r7;
        org.apache.aries.blueprint.ParserContext r4;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r10;
        java.lang.Class r1;
        java.lang.Object $r9;
        java.lang.StringBuilder $r15, $r16, $r17, $r18, $r20;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r4 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r10 := @parameter1: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r7 := @parameter2: org.w3c.dom.Element;

        r11 := @parameter3: java.lang.String;

        r1 := @parameter4: java.lang.Class;

     label1:
        $r2 = virtualinvoke r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: javax.xml.bind.JAXBContext getContext(java.lang.Class)>(r1);

        $r3 = virtualinvoke $r2.<javax.xml.bind.JAXBContext: javax.xml.bind.Unmarshaller createUnmarshaller()>();

        $r5 = interfaceinvoke r4.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutablePassThroughMetadata;");

        r6 = (org.apache.aries.blueprint.mutable.MutablePassThroughMetadata) $r5;

        $r8 = interfaceinvoke $r3.<javax.xml.bind.Unmarshaller: javax.xml.bind.JAXBElement unmarshal(org.w3c.dom.Node,java.lang.Class)>(r7, r1);

        $r9 = virtualinvoke $r8.<javax.xml.bind.JAXBElement: java.lang.Object getValue()>();

        interfaceinvoke r6.<org.apache.aries.blueprint.mutable.MutablePassThroughMetadata: void setObject(java.lang.Object)>($r9);

        $r21 = (org.osgi.service.blueprint.reflect.Metadata) r6;

        interfaceinvoke r10.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r11, $r21);

     label2:
        goto label4;

     label3:
        $r12 := @caughtexception;

        $r14 = <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.logging.Logger LOG>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to parse property ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" due to ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r12);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r14.<java.util.logging.Logger: void warning(java.lang.String)>($r19);

     label4:
        return;

        catch javax.xml.bind.JAXBException from label1 to label2 with label3;
    }

    protected void mapElementToHolder(org.apache.aries.blueprint.ParserContext, org.apache.aries.blueprint.mutable.MutableBeanMetadata, org.w3c.dom.Element, javax.xml.namespace.QName, java.lang.String, java.lang.Class)
    {
        org.osgi.service.blueprint.reflect.ValueMetadata $r8;
        org.osgi.service.blueprint.reflect.Metadata $r4, $r15, $r16;
        java.lang.String $r7, r10;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r13;
        java.lang.RuntimeException $r14;
        java.lang.Exception $r11;
        org.w3c.dom.Element r0, $r2;
        org.apache.aries.blueprint.ParserContext r3;
        org.apache.aries.blueprint.mutable.MutableBeanMetadata r5, r9;
        java.lang.Class r6;
        javax.xml.namespace.QName r1;

        r13 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r3 := @parameter0: org.apache.aries.blueprint.ParserContext;

        r9 := @parameter1: org.apache.aries.blueprint.mutable.MutableBeanMetadata;

        r0 := @parameter2: org.w3c.dom.Element;

        r1 := @parameter3: javax.xml.namespace.QName;

        r10 := @parameter4: java.lang.String;

        r6 := @parameter5: java.lang.Class;

        $r2 = staticinvoke <org.apache.cxf.helpers.DOMUtils: org.w3c.dom.Element getFirstChildWithName(org.w3c.dom.Element,javax.xml.namespace.QName)>(r0, r1);

        if $r2 != null goto label1;

        return;

     label1:
        $r4 = interfaceinvoke r3.<org.apache.aries.blueprint.ParserContext: org.osgi.service.blueprint.reflect.Metadata createMetadata(java.lang.Class)>(class "Lorg/apache/aries/blueprint/mutable/MutableBeanMetadata;");

        r5 = (org.apache.aries.blueprint.mutable.MutableBeanMetadata) $r4;

        interfaceinvoke r5.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setRuntimeClass(java.lang.Class)>(r6);

     label2:
        $r7 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: java.lang.String toString(org.w3c.dom.Element)>($r2);

        $r8 = staticinvoke <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: org.osgi.service.blueprint.reflect.ValueMetadata createValue(org.apache.aries.blueprint.ParserContext,java.lang.String)>(r3, $r7);

        $r15 = (org.osgi.service.blueprint.reflect.Metadata) $r8;

        interfaceinvoke r5.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>("parsedElement", $r15);

        interfaceinvoke r5.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setInitMethod(java.lang.String)>("init");

        interfaceinvoke r5.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: void setActivation(int)>(1);

        $r16 = (org.osgi.service.blueprint.reflect.Metadata) r5;

        interfaceinvoke r9.<org.apache.aries.blueprint.mutable.MutableBeanMetadata: org.osgi.service.blueprint.reflect.BeanProperty addProperty(java.lang.String,org.osgi.service.blueprint.reflect.Metadata)>(r10, $r16);

     label3:
        goto label5;

     label4:
        $r11 := @caughtexception;

        $r14 = new java.lang.RuntimeException;

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Could not process configuration.", $r11);

        throw $r14;

     label5:
        return;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    protected synchronized javax.xml.bind.JAXBContext getContext(java.lang.Class)
    {
        java.util.HashSet $r18;
        java.lang.String $r3, $r10, $r11;
        org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser r0;
        javax.xml.bind.JAXBContext $r1, $r4, $r23;
        boolean $z0, $z1, $z2, z3;
        java.util.Iterator $r5;
        java.lang.Package $r8, $r9;
        java.util.Set $r13, $r14, $r15, $r19, $r22;
        java.lang.RuntimeException $r17;
        org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas $r21;
        javax.xml.bind.JAXBException $r16;
        java.lang.Class r2, r7, $r12;
        java.lang.Object $r6;
        java.lang.ClassLoader $r20;

        r0 := @this: org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser;

        r2 := @parameter0: java.lang.Class;

        $r1 = r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: javax.xml.bind.JAXBContext jaxbContext>;

        if $r1 == null goto label01;

        $r14 = r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.Set jaxbClasses>;

        if $r14 == null goto label01;

        $r15 = r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.Set jaxbClasses>;

        $z2 = interfaceinvoke $r15.<java.util.Set: boolean contains(java.lang.Object)>(r2);

        if $z2 != 0 goto label11;

     label01:
        $r18 = new java.util.HashSet;

        specialinvoke $r18.<java.util.HashSet: void <init>()>();

        $r19 = r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.Set jaxbClasses>;

        if $r19 == null goto label02;

        $r13 = r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.Set jaxbClasses>;

        interfaceinvoke $r18.<java.util.Set: boolean addAll(java.util.Collection)>($r13);

     label02:
        $r3 = staticinvoke <org.apache.cxf.common.util.PackageUtils: java.lang.String getPackageName(java.lang.Class)>(r2);

        if r2 != null goto label03;

        $r12 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r12.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        goto label04;

     label03:
        $r20 = virtualinvoke r2.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

     label04:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void addPackage(java.util.Set,java.lang.String,java.lang.ClassLoader)>($r18, $r3, $r20);

        if r2 == null goto label08;

        z3 = 0;

        $r5 = interfaceinvoke $r18.<java.util.Set: java.util.Iterator iterator()>();

     label05:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.Class) $r6;

        $r8 = virtualinvoke r7.<java.lang.Class: java.lang.Package getPackage()>();

        $r9 = virtualinvoke r2.<java.lang.Class: java.lang.Package getPackage()>();

        if $r8 != $r9 goto label06;

        $r10 = "ObjectFactory";

        $r11 = virtualinvoke r7.<java.lang.Class: java.lang.String getSimpleName()>();

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r11);

        if $z1 == 0 goto label06;

        z3 = 1;

     label06:
        goto label05;

     label07:
        if z3 != 0 goto label08;

        interfaceinvoke $r18.<java.util.Set: boolean add(java.lang.Object)>(r2);

     label08:
        staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: void scanPackages(java.util.Set)>($r18);

        $r21 = staticinvoke <org.apache.cxf.common.jaxb.JAXBContextCache: org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas getCachedContextAndSchemas(java.util.Set,java.lang.String,java.util.Map,java.util.Collection,boolean)>($r18, null, null, null, 0);

        $r22 = virtualinvoke $r21.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: java.util.Set getClasses()>();

        r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.Set jaxbClasses> = $r22;

        $r23 = virtualinvoke $r21.<org.apache.cxf.common.jaxb.JAXBContextCache$CachedContextAndSchemas: javax.xml.bind.JAXBContext getContext()>();

        r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: javax.xml.bind.JAXBContext jaxbContext> = $r23;

     label09:
        goto label11;

     label10:
        $r16 := @caughtexception;

        $r17 = new java.lang.RuntimeException;

        specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label11:
        $r4 = r0.<org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: javax.xml.bind.JAXBContext jaxbContext>;

        return $r4;

        catch javax.xml.bind.JAXBException from label01 to label09 with label10;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.lang.String COMPONENT_ID> = "component-id";

        <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.lang.String XMLNS_BLUEPRINT> = "http://www.osgi.org/xmlns/blueprint/v1.0.0";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/configuration/blueprint/AbstractBPBeanDefinitionParser;");

        <org.apache.cxf.configuration.blueprint.AbstractBPBeanDefinitionParser: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
