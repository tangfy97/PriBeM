public final class com.google.inject.internal.InternalInjectorCreator extends java.lang.Object
{
    private final com.google.inject.internal.util.$Stopwatch stopwatch;
    private final com.google.inject.internal.Errors errors;
    private final com.google.inject.internal.Initializer initializer;
    private final com.google.inject.internal.ProcessedBindingData bindingData;
    private final com.google.inject.internal.InjectionRequestProcessor injectionRequestProcessor;
    private final com.google.inject.internal.InjectorShell$Builder shellBuilder;
    private java.util.List shells;

    public void <init>()
    {
        com.google.inject.internal.InjectorShell$Builder $r4;
        com.google.inject.internal.Initializer $r3, $r6;
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.Errors $r2, $r7;
        com.google.inject.internal.InjectionRequestProcessor $r5;
        com.google.inject.internal.ProcessedBindingData $r8;
        com.google.inject.internal.util.$Stopwatch $r1;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.google.inject.internal.util.$Stopwatch;

        specialinvoke $r1.<com.google.inject.internal.util.$Stopwatch: void <init>()>();

        r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch> = $r1;

        $r2 = new com.google.inject.internal.Errors;

        specialinvoke $r2.<com.google.inject.internal.Errors: void <init>()>();

        r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors> = $r2;

        $r3 = new com.google.inject.internal.Initializer;

        specialinvoke $r3.<com.google.inject.internal.Initializer: void <init>()>();

        r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Initializer initializer> = $r3;

        $r4 = new com.google.inject.internal.InjectorShell$Builder;

        specialinvoke $r4.<com.google.inject.internal.InjectorShell$Builder: void <init>()>();

        r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder> = $r4;

        $r5 = new com.google.inject.internal.InjectionRequestProcessor;

        $r7 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        $r6 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Initializer initializer>;

        specialinvoke $r5.<com.google.inject.internal.InjectionRequestProcessor: void <init>(com.google.inject.internal.Errors,com.google.inject.internal.Initializer)>($r7, $r6);

        r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectionRequestProcessor injectionRequestProcessor> = $r5;

        $r8 = new com.google.inject.internal.ProcessedBindingData;

        specialinvoke $r8.<com.google.inject.internal.ProcessedBindingData: void <init>()>();

        r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.ProcessedBindingData bindingData> = $r8;

        return;
    }

    public com.google.inject.internal.InternalInjectorCreator stage(com.google.inject.Stage)
    {
        com.google.inject.Stage r1;
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.InjectorShell$Builder $r2;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        r1 := @parameter0: com.google.inject.Stage;

        $r2 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        virtualinvoke $r2.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorShell$Builder stage(com.google.inject.Stage)>(r1);

        return r0;
    }

    public com.google.inject.internal.InternalInjectorCreator parentInjector(com.google.inject.internal.InjectorImpl)
    {
        com.google.inject.internal.InjectorImpl r1;
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.InjectorShell$Builder $r2;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl;

        $r2 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        virtualinvoke $r2.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.internal.InjectorShell$Builder parent(com.google.inject.internal.InjectorImpl)>(r1);

        return r0;
    }

    public com.google.inject.internal.InternalInjectorCreator addModules(java.lang.Iterable)
    {
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.InjectorShell$Builder $r2;
        java.lang.Iterable r1;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        virtualinvoke $r2.<com.google.inject.internal.InjectorShell$Builder: void addModules(java.lang.Iterable)>(r1);

        return r0;
    }

    public com.google.inject.Injector build()
    {
        java.lang.Throwable $r18;
        com.google.inject.internal.InjectorShell$Builder $r1, $r2, $r8, $r11;
        java.lang.AssertionError $r17;
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.Initializer $r7;
        com.google.inject.internal.InternalInjectorCreator$ToolStageInjector $r15;
        com.google.inject.Stage $r12, $r13;
        com.google.inject.Injector $r14, $r16;
        com.google.inject.internal.Errors $r4;
        java.util.List $r9;
        java.lang.Object $r3;
        com.google.inject.internal.ProcessedBindingData $r6;
        com.google.inject.internal.util.$Stopwatch $r5, $r10;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        $r1 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        if $r1 != null goto label1;

        $r17 = new java.lang.AssertionError;

        specialinvoke $r17.<java.lang.AssertionError: void <init>(java.lang.Object)>("Already built, builders are not reusable.");

        throw $r17;

     label1:
        $r2 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        $r3 = virtualinvoke $r2.<com.google.inject.internal.InjectorShell$Builder: java.lang.Object lock()>();

        entermonitor $r3;

     label2:
        $r8 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        $r7 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Initializer initializer>;

        $r6 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.ProcessedBindingData bindingData>;

        $r5 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        $r4 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        $r9 = virtualinvoke $r8.<com.google.inject.internal.InjectorShell$Builder: java.util.List build(com.google.inject.internal.Initializer,com.google.inject.internal.ProcessedBindingData,com.google.inject.internal.util.$Stopwatch,com.google.inject.internal.Errors)>($r7, $r6, $r5, $r4);

        r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells> = $r9;

        $r10 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r10.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Injector construction");

        specialinvoke r0.<com.google.inject.internal.InternalInjectorCreator: void initializeStatically()>();

        exitmonitor $r3;

     label3:
        goto label6;

     label4:
        $r18 := @caughtexception;

        exitmonitor $r3;

     label5:
        throw $r18;

     label6:
        specialinvoke r0.<com.google.inject.internal.InternalInjectorCreator: void injectDynamically()>();

        $r11 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        $r12 = virtualinvoke $r11.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage getStage()>();

        $r13 = <com.google.inject.Stage: com.google.inject.Stage TOOL>;

        if $r12 != $r13 goto label7;

        $r15 = new com.google.inject.internal.InternalInjectorCreator$ToolStageInjector;

        $r16 = specialinvoke r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.Injector primaryInjector()>();

        specialinvoke $r15.<com.google.inject.internal.InternalInjectorCreator$ToolStageInjector: void <init>(com.google.inject.Injector)>($r16);

        return $r15;

     label7:
        $r14 = specialinvoke r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.Injector primaryInjector()>();

        return $r14;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    private void initializeStatically()
    {
        com.google.inject.internal.Lookups $r36;
        com.google.inject.internal.DeferredLookups $r38;
        boolean $z0, $z1, $z2, $z3;
        com.google.inject.internal.Initializer $r15;
        java.util.List $r3, $r6, $r19, $r20, $r23, $r27, $r31;
        com.google.inject.internal.InjectorImpl $r35, $r40;
        java.lang.StringBuilder $r29, $r30, $r32;
        com.google.inject.internal.ProcessedBindingData $r1, $r10;
        com.google.inject.internal.util.$Stopwatch $r2, $r5, $r8, $r11, $r13, $r16, $r22;
        java.lang.AssertionError $r28;
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.InjectionRequestProcessor $r7, $r12;
        java.lang.String $r33;
        com.google.inject.internal.InjectorShell r41, r42, r43;
        java.util.Iterator $r4, $r21, $r24;
        com.google.inject.internal.LookupProcessor $r17;
        com.google.inject.internal.Errors $r9, $r14, $r18, $r25, $r37;
        java.lang.Object $r26, $r34, $r39;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        $r1 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.ProcessedBindingData bindingData>;

        virtualinvoke $r1.<com.google.inject.internal.ProcessedBindingData: void initializeBindings()>();

        $r2 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r2.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Binding initialization");

        $r3 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r39 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r41 = (com.google.inject.internal.InjectorShell) $r39;

        $r40 = virtualinvoke r41.<com.google.inject.internal.InjectorShell: com.google.inject.internal.InjectorImpl getInjector()>();

        virtualinvoke $r40.<com.google.inject.internal.InjectorImpl: void index()>();

        goto label1;

     label2:
        $r5 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r5.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Binding indexing");

        $r7 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectionRequestProcessor injectionRequestProcessor>;

        $r6 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        virtualinvoke $r7.<com.google.inject.internal.InjectionRequestProcessor: void process(java.lang.Iterable)>($r6);

        $r8 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r8.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Collecting injection requests");

        $r10 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.ProcessedBindingData bindingData>;

        $r9 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r10.<com.google.inject.internal.ProcessedBindingData: void runCreationListeners(com.google.inject.internal.Errors)>($r9);

        $r11 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r11.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Binding validation");

        $r12 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectionRequestProcessor injectionRequestProcessor>;

        virtualinvoke $r12.<com.google.inject.internal.InjectionRequestProcessor: void validate()>();

        $r13 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r13.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Static validation");

        $r15 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Initializer initializer>;

        $r14 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r15.<com.google.inject.internal.Initializer: void validateOustandingInjections(com.google.inject.internal.Errors)>($r14);

        $r16 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r16.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Instance member validation");

        $r17 = new com.google.inject.internal.LookupProcessor;

        $r18 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        specialinvoke $r17.<com.google.inject.internal.LookupProcessor: void <init>(com.google.inject.internal.Errors)>($r18);

        $r19 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        virtualinvoke $r17.<com.google.inject.internal.LookupProcessor: void process(java.lang.Iterable)>($r19);

        $r20 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        $r21 = interfaceinvoke $r20.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r34 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r42 = (com.google.inject.internal.InjectorShell) $r34;

        $r35 = virtualinvoke r42.<com.google.inject.internal.InjectorShell: com.google.inject.internal.InjectorImpl getInjector()>();

        $r36 = $r35.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.Lookups lookups>;

        $r38 = (com.google.inject.internal.DeferredLookups) $r36;

        $r37 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r38.<com.google.inject.internal.DeferredLookups: void initialize(com.google.inject.internal.Errors)>($r37);

        goto label3;

     label4:
        $r22 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r22.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Provider verification");

        $r23 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        $r24 = interfaceinvoke $r23.<java.util.List: java.util.Iterator iterator()>();

     label5:
        $z2 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label7;

        $r26 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r43 = (com.google.inject.internal.InjectorShell) $r26;

        $r27 = virtualinvoke r43.<com.google.inject.internal.InjectorShell: java.util.List getElements()>();

        $z3 = interfaceinvoke $r27.<java.util.List: boolean isEmpty()>();

        if $z3 != 0 goto label6;

        $r28 = new java.lang.AssertionError;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to execute ");

        $r31 = virtualinvoke r43.<com.google.inject.internal.InjectorShell: java.util.List getElements()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.lang.AssertionError: void <init>(java.lang.Object)>($r33);

        throw $r28;

     label6:
        goto label5;

     label7:
        $r25 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r25.<com.google.inject.internal.Errors: void throwCreationExceptionIfErrorsExist()>();

        return;
    }

    private com.google.inject.Injector primaryInjector()
    {
        java.util.List $r1;
        com.google.inject.internal.InjectorImpl $r4;
        java.lang.Object $r2;
        com.google.inject.internal.InjectorShell $r3;
        com.google.inject.internal.InternalInjectorCreator r0;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        $r1 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (com.google.inject.internal.InjectorShell) $r2;

        $r4 = virtualinvoke $r3.<com.google.inject.internal.InjectorShell: com.google.inject.internal.InjectorImpl getInjector()>();

        return $r4;
    }

    private void injectDynamically()
    {
        com.google.inject.internal.InjectorShell$Builder $r7, $r17;
        com.google.inject.internal.InternalInjectorCreator r0;
        com.google.inject.internal.InjectionRequestProcessor $r1;
        com.google.inject.internal.InjectorShell r15;
        boolean $z0;
        java.util.Iterator $r12;
        com.google.inject.internal.Initializer $r4;
        com.google.inject.Stage $r8, $r9, $r18;
        com.google.inject.internal.Errors $r3, $r6, $r10, $r19;
        java.util.List $r11;
        com.google.inject.internal.InjectorImpl $r16;
        java.lang.Object $r14;
        com.google.inject.internal.util.$Stopwatch $r2, $r5, $r13;

        r0 := @this: com.google.inject.internal.InternalInjectorCreator;

        $r1 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectionRequestProcessor injectionRequestProcessor>;

        virtualinvoke $r1.<com.google.inject.internal.InjectionRequestProcessor: void injectMembers()>();

        $r2 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r2.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Static member injection");

        $r4 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Initializer initializer>;

        $r3 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r4.<com.google.inject.internal.Initializer: void injectAll(com.google.inject.internal.Errors)>($r3);

        $r5 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r5.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Instance injection");

        $r6 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r6.<com.google.inject.internal.Errors: void throwCreationExceptionIfErrorsExist()>();

        $r7 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        $r8 = virtualinvoke $r7.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage getStage()>();

        $r9 = <com.google.inject.Stage: com.google.inject.Stage TOOL>;

        if $r8 == $r9 goto label3;

        $r11 = r0.<com.google.inject.internal.InternalInjectorCreator: java.util.List shells>;

        $r12 = interfaceinvoke $r11.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r14 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r15 = (com.google.inject.internal.InjectorShell) $r14;

        $r16 = virtualinvoke r15.<com.google.inject.internal.InjectorShell: com.google.inject.internal.InjectorImpl getInjector()>();

        $r17 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.InjectorShell$Builder shellBuilder>;

        $r18 = virtualinvoke $r17.<com.google.inject.internal.InjectorShell$Builder: com.google.inject.Stage getStage()>();

        $r19 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke r0.<com.google.inject.internal.InternalInjectorCreator: void loadEagerSingletons(com.google.inject.internal.InjectorImpl,com.google.inject.Stage,com.google.inject.internal.Errors)>($r16, $r18, $r19);

        goto label1;

     label2:
        $r13 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.util.$Stopwatch stopwatch>;

        virtualinvoke $r13.<com.google.inject.internal.util.$Stopwatch: void resetAndLog(java.lang.String)>("Preloading singletons");

     label3:
        $r10 = r0.<com.google.inject.internal.InternalInjectorCreator: com.google.inject.internal.Errors errors>;

        virtualinvoke $r10.<com.google.inject.internal.Errors: void throwCreationExceptionIfErrorsExist()>();

        return;
    }

    void loadEagerSingletons(com.google.inject.internal.InjectorImpl, com.google.inject.Stage, com.google.inject.internal.Errors)
    {
        java.lang.AssertionError $r16;
        com.google.inject.internal.InternalInjectorCreator r11;
        java.lang.Iterable $r6;
        com.google.inject.internal.ErrorsException $r15;
        java.util.Map $r2, $r4;
        com.google.inject.internal.State $r1;
        boolean $z0, $z1;
        com.google.inject.internal.util.$ImmutableList $r7;
        java.util.Iterator $r8;
        java.util.Collection $r3, $r5;
        com.google.inject.internal.InternalInjectorCreator$1 $r13;
        com.google.inject.Stage r12;
        com.google.inject.internal.Errors r14;
        com.google.inject.internal.InjectorImpl r0;
        com.google.inject.internal.BindingImpl r10;
        java.lang.Object $r9;

        r11 := @this: com.google.inject.internal.InternalInjectorCreator;

        r0 := @parameter0: com.google.inject.internal.InjectorImpl;

        r12 := @parameter1: com.google.inject.Stage;

        r14 := @parameter2: com.google.inject.internal.Errors;

        $r1 = r0.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.State state>;

        $r2 = interfaceinvoke $r1.<com.google.inject.internal.State: java.util.Map getExplicitBindingsThisLevel()>();

        $r3 = interfaceinvoke $r2.<java.util.Map: java.util.Collection values()>();

        $r4 = r0.<com.google.inject.internal.InjectorImpl: java.util.Map jitBindings>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Collection values()>();

        $r6 = staticinvoke <com.google.inject.internal.util.$Iterables: java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable)>($r3, $r5);

        $r7 = staticinvoke <com.google.inject.internal.util.$ImmutableList: com.google.inject.internal.util.$ImmutableList copyOf(java.lang.Iterable)>($r6);

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (com.google.inject.internal.BindingImpl) $r9;

        $z1 = specialinvoke r11.<com.google.inject.internal.InternalInjectorCreator: boolean isEagerSingleton(com.google.inject.internal.InjectorImpl,com.google.inject.internal.BindingImpl,com.google.inject.Stage)>(r0, r10, r12);

        if $z1 == 0 goto label5;

     label2:
        $r13 = new com.google.inject.internal.InternalInjectorCreator$1;

        specialinvoke $r13.<com.google.inject.internal.InternalInjectorCreator$1: void <init>(com.google.inject.internal.InternalInjectorCreator,com.google.inject.internal.BindingImpl,com.google.inject.internal.Errors)>(r11, r10, r14);

        virtualinvoke r0.<com.google.inject.internal.InjectorImpl: java.lang.Object callInContext(com.google.inject.internal.ContextualCallable)>($r13);

     label3:
        goto label5;

     label4:
        $r15 := @caughtexception;

        $r16 = new java.lang.AssertionError;

        specialinvoke $r16.<java.lang.AssertionError: void <init>()>();

        throw $r16;

     label5:
        goto label1;

     label6:
        return;

        catch com.google.inject.internal.ErrorsException from label2 to label3 with label4;
    }

    private boolean isEagerSingleton(com.google.inject.internal.InjectorImpl, com.google.inject.internal.BindingImpl, com.google.inject.Stage)
    {
        com.google.inject.internal.Scoping $r1;
        com.google.inject.Key $r4;
        com.google.inject.internal.LinkedBindingImpl $r3;
        com.google.inject.internal.InternalInjectorCreator r5;
        com.google.inject.Stage r2;
        com.google.inject.internal.InjectorImpl r6;
        com.google.inject.internal.BindingImpl r0, $r7;
        boolean $z0, $z1, $z2;

        r5 := @this: com.google.inject.internal.InternalInjectorCreator;

        r6 := @parameter0: com.google.inject.internal.InjectorImpl;

        r0 := @parameter1: com.google.inject.internal.BindingImpl;

        r2 := @parameter2: com.google.inject.Stage;

        $r1 = virtualinvoke r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping getScoping()>();

        $z0 = virtualinvoke $r1.<com.google.inject.internal.Scoping: boolean isEagerSingleton(com.google.inject.Stage)>(r2);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z1 = r0 instanceof com.google.inject.internal.LinkedBindingImpl;

        if $z1 == 0 goto label2;

        $r3 = (com.google.inject.internal.LinkedBindingImpl) r0;

        $r4 = virtualinvoke $r3.<com.google.inject.internal.LinkedBindingImpl: com.google.inject.Key getLinkedKey()>();

        $r7 = virtualinvoke r6.<com.google.inject.internal.InjectorImpl: com.google.inject.internal.BindingImpl getBinding(com.google.inject.Key)>($r4);

        $z2 = specialinvoke r5.<com.google.inject.internal.InternalInjectorCreator: boolean isEagerSingleton(com.google.inject.internal.InjectorImpl,com.google.inject.internal.BindingImpl,com.google.inject.Stage)>(r6, $r7, r2);

        return $z2;

     label2:
        return 0;
    }
}
