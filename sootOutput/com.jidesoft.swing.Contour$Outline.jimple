class com.jidesoft.swing.Contour$Outline extends javax.swing.JWindow
{
    final com.jidesoft.swing.Contour this$0;

    public void <init>(com.jidesoft.swing.Contour)
    {
        com.jidesoft.swing.Contour r1;
        java.awt.Color $r2;
        com.jidesoft.swing.Contour$Outline r0;

        r0 := @this: com.jidesoft.swing.Contour$Outline;

        r1 := @parameter0: com.jidesoft.swing.Contour;

        r0.<com.jidesoft.swing.Contour$Outline: com.jidesoft.swing.Contour this$0> = r1;

        specialinvoke r0.<javax.swing.JWindow: void <init>()>();

        virtualinvoke r0.<com.jidesoft.swing.Contour$Outline: void setVisible(boolean)>(0);

        $r2 = staticinvoke <com.jidesoft.swing.Contour: java.awt.Color access$000(com.jidesoft.swing.Contour)>(r1);

        virtualinvoke r0.<com.jidesoft.swing.Contour$Outline: void setBackground(java.awt.Color)>($r2);

        return;
    }

    public void paint(java.awt.Graphics)
    {
        java.awt.Color $r3;
        com.jidesoft.swing.Contour$Outline r1;
        java.awt.Graphics r0;
        com.jidesoft.swing.Contour $r2;
        int $i0, $i1;

        r1 := @this: com.jidesoft.swing.Contour$Outline;

        r0 := @parameter0: java.awt.Graphics;

        $r2 = r1.<com.jidesoft.swing.Contour$Outline: com.jidesoft.swing.Contour this$0>;

        $r3 = staticinvoke <com.jidesoft.swing.Contour: java.awt.Color access$000(com.jidesoft.swing.Contour)>($r2);

        virtualinvoke r0.<java.awt.Graphics: void setColor(java.awt.Color)>($r3);

        $i0 = virtualinvoke r1.<com.jidesoft.swing.Contour$Outline: int getWidth()>();

        $i1 = virtualinvoke r1.<com.jidesoft.swing.Contour$Outline: int getHeight()>();

        virtualinvoke r0.<java.awt.Graphics: void fillRect(int,int,int,int)>(0, 0, $i0, $i1);

        return;
    }
}
