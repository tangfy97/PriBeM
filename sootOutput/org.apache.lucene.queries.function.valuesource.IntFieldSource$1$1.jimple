class org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1 extends org.apache.lucene.queries.function.ValueSourceScorer
{
    final int val$ll;
    final int val$uu;
    final org.apache.lucene.queries.function.valuesource.IntFieldSource$1 this$1;

    void <init>(org.apache.lucene.queries.function.valuesource.IntFieldSource$1, org.apache.lucene.index.IndexReader, org.apache.lucene.queries.function.FunctionValues, int, int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1 r0;
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 r1;
        int i0, i1;
        org.apache.lucene.queries.function.FunctionValues r3;
        org.apache.lucene.index.IndexReader r2;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1;

        r1 := @parameter0: org.apache.lucene.queries.function.valuesource.IntFieldSource$1;

        r2 := @parameter1: org.apache.lucene.index.IndexReader;

        r3 := @parameter2: org.apache.lucene.queries.function.FunctionValues;

        i0 := @parameter3: int;

        i1 := @parameter4: int;

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: org.apache.lucene.queries.function.valuesource.IntFieldSource$1 this$1> = r1;

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: int val$ll> = i0;

        r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: int val$uu> = i1;

        specialinvoke r0.<org.apache.lucene.queries.function.ValueSourceScorer: void <init>(org.apache.lucene.index.IndexReader,org.apache.lucene.queries.function.FunctionValues)>(r2, r3);

        return;
    }

    public boolean matchesValue(int)
    {
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1 r0;
        org.apache.lucene.queries.function.valuesource.IntFieldSource$1 $r1;
        int i0, $i1, $i2, $i3;
        org.apache.lucene.search.FieldCache$Ints $r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: org.apache.lucene.queries.function.valuesource.IntFieldSource$1 this$1>;

        $r2 = $r1.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1: org.apache.lucene.search.FieldCache$Ints val$arr>;

        $i1 = virtualinvoke $r2.<org.apache.lucene.search.FieldCache$Ints: int get(int)>(i0);

        $i2 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: int val$ll>;

        if $i1 < $i2 goto label1;

        $i3 = r0.<org.apache.lucene.queries.function.valuesource.IntFieldSource$1$1: int val$uu>;

        if $i1 > $i3 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }
}
