final class com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node extends java.lang.Object
{
    final java.lang.Object key;
    java.lang.Object value;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node next;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previous;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node nextSibling;
    com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node previousSibling;

    void <init>(java.lang.Object, java.lang.Object)
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r0;
        java.lang.Object r1, r2;

        r0 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key> = r1;

        r0.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object value> = r2;

        return;
    }

    public java.lang.String toString()
    {
        com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node r1;
        java.lang.StringBuilder $r0, $r3, $r4, $r6;
        java.lang.Object $r2, $r5;
        java.lang.String $r7;

        r1 := @this: com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object key>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $r5 = r1.<com.mycila.inject.internal.guava.collect.LinkedListMultimap$Node: java.lang.Object value>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
