public final class com.google.common.collect.ImmutableMultiset$Builder extends com.google.common.collect.ImmutableCollection$Builder
{
    private final com.google.common.collect.Multiset contents;

    public void <init>()
    {
        com.google.common.collect.LinkedHashMultiset $r1;
        com.google.common.collect.ImmutableMultiset$Builder r0;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: void <init>()>();

        $r1 = staticinvoke <com.google.common.collect.LinkedHashMultiset: com.google.common.collect.LinkedHashMultiset create()>();

        r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.Multiset contents> = $r1;

        return;
    }

    public com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.Multiset $r2;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.Multiset contents>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke $r2.<com.google.common.collect.Multiset: boolean add(java.lang.Object)>($r3);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object, int)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.Multiset $r2;
        int i0;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.Multiset contents>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke $r2.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>($r3, i0);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder setCount(java.lang.Object, int)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.Multiset $r2;
        int i0;
        java.lang.Object r1, $r3;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        $r2 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.Multiset contents>;

        $r3 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(r1);

        interfaceinvoke $r2.<com.google.common.collect.Multiset: int setCount(java.lang.Object,int)>($r3, i0);

        return r0;
    }

    public transient com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[])
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.lang.Object[] r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object[];

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable)
    {
        java.util.Iterator $r4;
        com.google.common.collect.Multiset $r2;
        java.util.Set $r3;
        com.google.common.collect.Multiset$Entry r6;
        java.lang.Iterable r0;
        com.google.common.collect.ImmutableMultiset$Builder r1;
        int $i0;
        java.lang.Object $r5, $r7;
        boolean $z0, $z1;

        r1 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r0 := @parameter0: java.lang.Iterable;

        $z0 = r0 instanceof com.google.common.collect.Multiset;

        if $z0 == 0 goto label3;

        $r2 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset cast(java.lang.Iterable)>(r0);

        $r3 = interfaceinvoke $r2.<com.google.common.collect.Multiset: java.util.Set entrySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (com.google.common.collect.Multiset$Entry) $r5;

        $r7 = interfaceinvoke r6.<com.google.common.collect.Multiset$Entry: java.lang.Object getElement()>();

        $i0 = interfaceinvoke r6.<com.google.common.collect.Multiset$Entry: int getCount()>();

        virtualinvoke r1.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addCopies(java.lang.Object,int)>($r7, $i0);

        goto label1;

     label2:
        goto label4;

     label3:
        specialinvoke r1.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)>(r0);

     label4:
        return r1;
    }

    public com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        java.util.Iterator r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.util.Iterator;

        specialinvoke r0.<com.google.common.collect.ImmutableCollection$Builder: com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)>(r1);

        return r0;
    }

    public com.google.common.collect.ImmutableMultiset build()
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.Multiset $r1;
        com.google.common.collect.ImmutableMultiset $r2;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 = r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.Multiset contents>;

        $r2 = staticinvoke <com.google.common.collect.ImmutableMultiset: com.google.common.collect.ImmutableMultiset copyOf(java.lang.Iterable)>($r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection build()
    {
        com.google.common.collect.ImmutableMultiset$Builder r0;
        com.google.common.collect.ImmutableMultiset $r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        $r1 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset build()>();

        return $r1;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder addAll(java.util.Iterator)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0, $r2;
        java.util.Iterator r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.util.Iterator;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addAll(java.util.Iterator)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder addAll(java.lang.Iterable)
    {
        com.google.common.collect.ImmutableMultiset$Builder r0, $r2;
        java.lang.Iterable r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Iterable;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder addAll(java.lang.Iterable)>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object[])
    {
        com.google.common.collect.ImmutableMultiset$Builder r0, $r2;
        java.lang.Object[] r1;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object[];

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object[])>(r1);

        return $r2;
    }

    public volatile com.google.common.collect.ImmutableCollection$Builder add(java.lang.Object)
    {
        java.lang.Object r1;
        com.google.common.collect.ImmutableMultiset$Builder r0, $r2;

        r0 := @this: com.google.common.collect.ImmutableMultiset$Builder;

        r1 := @parameter0: java.lang.Object;

        $r2 = virtualinvoke r0.<com.google.common.collect.ImmutableMultiset$Builder: com.google.common.collect.ImmutableMultiset$Builder add(java.lang.Object)>(r1);

        return $r2;
    }
}
