public final class org.apache.poi.hssf.record.cont.ContinuableRecordOutput extends java.lang.Object implements org.apache.poi.util.LittleEndianOutput
{
    private final org.apache.poi.util.LittleEndianOutput _out;
    private org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput;
    private int _totalPreviousRecordsSize;
    private static final org.apache.poi.util.LittleEndianOutput NOPOutput;

    public void <init>(org.apache.poi.util.LittleEndianOutput, int)
    {
        org.apache.poi.util.LittleEndianOutput r2;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;
        int i0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        r2 := @parameter0: org.apache.poi.util.LittleEndianOutput;

        i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        specialinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void <init>(org.apache.poi.util.LittleEndianOutput,int)>(r2, i0);

        r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput> = $r1;

        r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.util.LittleEndianOutput _out> = r2;

        r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: int _totalPreviousRecordsSize> = 0;

        return;
    }

    public static org.apache.poi.hssf.record.cont.ContinuableRecordOutput createForCountingOnly()
    {
        int $i1;
        org.apache.poi.util.LittleEndianOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput $r2;

        $r2 = new org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        $r1 = <org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.util.LittleEndianOutput NOPOutput>;

        $i1 = (int) -777;

        specialinvoke $r2.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void <init>(org.apache.poi.util.LittleEndianOutput,int)>($r1, $i1);

        return $r2;
    }

    public int getTotalSize()
    {
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        $i0 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: int _totalPreviousRecordsSize>;

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i1 = virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getTotalSize()>();

        $i2 = $i0 + $i1;

        return $i2;
    }

    void terminate()
    {
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void terminate()>();

        return;
    }

    public int getAvailableSpace()
    {
        int $i0;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getAvailableSpace()>();

        return $i0;
    }

    public void writeContinue()
    {
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1, $r2, $r3;
        org.apache.poi.util.LittleEndianOutput $r4;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;
        int $i0, $i1, $i2;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void terminate()>();

        $i0 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: int _totalPreviousRecordsSize>;

        $r2 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i1 = virtualinvoke $r2.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getTotalSize()>();

        $i2 = $i0 + $i1;

        r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: int _totalPreviousRecordsSize> = $i2;

        $r3 = new org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput;

        $r4 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.util.LittleEndianOutput _out>;

        specialinvoke $r3.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void <init>(org.apache.poi.util.LittleEndianOutput,int)>($r4, 60);

        r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput> = $r3;

        return;
    }

    public void writeContinueIfRequired(int)
    {
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;
        int $i0, i1;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i0 = virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getAvailableSpace()>();

        if $i0 >= i1 goto label1;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinue()>();

     label1:
        return;
    }

    public void writeStringData(java.lang.String)
    {
        byte b0, b1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.poi.util.StringUtil: boolean hasMultibyte(java.lang.String)>(r0);

        b0 = 2;

        b1 = 0;

        if $z0 == 0 goto label1;

        b1 = 1;

        b0 = 3;

     label1:
        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(b0);

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeByte(int)>(b1);

        specialinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeCharacterData(java.lang.String,boolean)>(r0, $z0);

        return;
    }

    public void writeString(java.lang.String, int, int)
    {
        byte b4;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r1;
        int i0, i1, $i2, i3;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $z0 = staticinvoke <org.apache.poi.util.StringUtil: boolean hasMultibyte(java.lang.String)>(r0);

        i3 = 4;

        b4 = 0;

        if $z0 == 0 goto label1;

        b4 = 1;

        i3 = 5;

     label1:
        if i0 <= 0 goto label2;

        b4 = b4 | 8;

        i3 = i3 + 2;

     label2:
        if i1 <= 0 goto label3;

        b4 = b4 | 4;

        i3 = i3 + 4;

     label3:
        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(i3);

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeShort(int)>($i2);

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeByte(int)>(b4);

        if i0 <= 0 goto label4;

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeShort(int)>(i0);

     label4:
        if i1 <= 0 goto label5;

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeInt(int)>(i1);

     label5:
        specialinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeCharacterData(java.lang.String,boolean)>(r0, $z0);

        return;
    }

    private void writeCharacterData(java.lang.String, boolean)
    {
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r2, $r3, $r4, $r5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, i11, i12, i13, $i14, $i16, $i17, $i19;
        java.lang.String r0;
        boolean z0;
        char $c5, $c10;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r1;

        r1 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        r0 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        i11 = 0;

        if z0 == 0 goto label5;

     label1:
        $i6 = $i0 - i11;

        $r4 = r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i7 = virtualinvoke $r4.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getAvailableSpace()>();

        $i8 = $i7 / 2;

        i12 = staticinvoke <java.lang.Math: int min(int,int)>($i6, $i8);

     label2:
        if i12 <= 0 goto label3;

        $r5 = r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i9 = i11;

        i11 = i11 + 1;

        $c10 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i9);

        $i14 = (int) $c10;

        virtualinvoke $r5.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeShort(int)>($i14);

        $i16 = (int) -1;

        i12 = i12 + $i16;

        goto label2;

     label3:
        if i11 < $i0 goto label4;

        goto label9;

     label4:
        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinue()>();

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeByte(int)>(1);

        goto label1;

     label5:
        $i1 = $i0 - i11;

        $r2 = r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i2 = virtualinvoke $r2.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getAvailableSpace()>();

        $i3 = $i2 / 1;

        i13 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

     label6:
        if i13 <= 0 goto label7;

        $r3 = r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i4 = i11;

        i11 = i11 + 1;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $i17 = (int) $c5;

        virtualinvoke $r3.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeByte(int)>($i17);

        $i19 = (int) -1;

        i13 = i13 + $i19;

        goto label6;

     label7:
        if i11 < $i0 goto label8;

        goto label9;

     label8:
        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinue()>();

        virtualinvoke r1.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeByte(int)>(0);

        goto label5;

     label9:
        return;
    }

    public void write(byte[])
    {
        byte[] r1;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r2;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;
        int $i0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>($i0);

        $r2 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r2.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void write(byte[])>(r1);

        return;
    }

    public void write(byte[], int, int)
    {
        byte[] r2;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1, $r3;
        byte $b7;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, i8, i9, $i10, $i12;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        r2 := @parameter0: byte[];

        i4 := @parameter1: int;

        i0 := @parameter2: int;

        i8 = 0;

     label1:
        $i1 = i0 - i8;

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i2 = virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: int getAvailableSpace()>();

        $i3 = $i2 / 1;

        i9 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i3);

     label2:
        if i9 <= 0 goto label3;

        $r3 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        $i5 = i8;

        i8 = i8 + 1;

        $i6 = i4 + $i5;

        $b7 = r2[$i6];

        $i10 = (int) $b7;

        virtualinvoke $r3.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeByte(int)>($i10);

        $i12 = (int) -1;

        i9 = i9 + $i12;

        goto label2;

     label3:
        if i8 < i0 goto label4;

        goto label5;

     label4:
        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinue()>();

        goto label1;

     label5:
        return;
    }

    public void writeByte(int)
    {
        int i0;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(1);

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeByte(int)>(i0);

        return;
    }

    public void writeDouble(double)
    {
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;
        double d0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        d0 := @parameter0: double;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(8);

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeDouble(double)>(d0);

        return;
    }

    public void writeInt(int)
    {
        int i0;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(4);

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeInt(int)>(i0);

        return;
    }

    public void writeLong(long)
    {
        long l0;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        l0 := @parameter0: long;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(8);

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeLong(long)>(l0);

        return;
    }

    public void writeShort(int)
    {
        int i0;
        org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput $r1;
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput r0;

        r0 := @this: org.apache.poi.hssf.record.cont.ContinuableRecordOutput;

        i0 := @parameter0: int;

        virtualinvoke r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: void writeContinueIfRequired(int)>(2);

        $r1 = r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput _ulrOutput>;

        virtualinvoke $r1.<org.apache.poi.hssf.record.cont.UnknownLengthRecordOutput: void writeShort(int)>(i0);

        return;
    }

    static void <clinit>()
    {
        org.apache.poi.hssf.record.cont.ContinuableRecordOutput$1 $r0;

        $r0 = new org.apache.poi.hssf.record.cont.ContinuableRecordOutput$1;

        specialinvoke $r0.<org.apache.poi.hssf.record.cont.ContinuableRecordOutput$1: void <init>()>();

        <org.apache.poi.hssf.record.cont.ContinuableRecordOutput: org.apache.poi.util.LittleEndianOutput NOPOutput> = $r0;

        return;
    }
}
