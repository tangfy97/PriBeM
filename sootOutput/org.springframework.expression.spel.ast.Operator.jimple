public abstract class org.springframework.expression.spel.ast.Operator extends org.springframework.expression.spel.ast.SpelNodeImpl
{
    java.lang.String operatorName;

    public transient void <init>(java.lang.String, int, org.springframework.expression.spel.ast.SpelNodeImpl[])
    {
        org.springframework.expression.spel.ast.Operator r0;
        int i0;
        java.lang.String r2;
        org.springframework.expression.spel.ast.SpelNodeImpl[] r1;

        r0 := @this: org.springframework.expression.spel.ast.Operator;

        r2 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r1 := @parameter2: org.springframework.expression.spel.ast.SpelNodeImpl[];

        specialinvoke r0.<org.springframework.expression.spel.ast.SpelNodeImpl: void <init>(int,org.springframework.expression.spel.ast.SpelNodeImpl[])>(i0, r1);

        r0.<org.springframework.expression.spel.ast.Operator: java.lang.String operatorName> = r2;

        return;
    }

    public org.springframework.expression.spel.ast.SpelNodeImpl getLeftOperand()
    {
        org.springframework.expression.spel.ast.Operator r0;
        org.springframework.expression.spel.ast.SpelNodeImpl $r2;
        org.springframework.expression.spel.ast.SpelNodeImpl[] $r1;

        r0 := @this: org.springframework.expression.spel.ast.Operator;

        $r1 = r0.<org.springframework.expression.spel.ast.Operator: org.springframework.expression.spel.ast.SpelNodeImpl[] children>;

        $r2 = $r1[0];

        return $r2;
    }

    public org.springframework.expression.spel.ast.SpelNodeImpl getRightOperand()
    {
        org.springframework.expression.spel.ast.Operator r0;
        org.springframework.expression.spel.ast.SpelNodeImpl $r2;
        org.springframework.expression.spel.ast.SpelNodeImpl[] $r1;

        r0 := @this: org.springframework.expression.spel.ast.Operator;

        $r1 = r0.<org.springframework.expression.spel.ast.Operator: org.springframework.expression.spel.ast.SpelNodeImpl[] children>;

        $r2 = $r1[1];

        return $r2;
    }

    public final java.lang.String getOperatorName()
    {
        org.springframework.expression.spel.ast.Operator r0;
        java.lang.String $r1;

        r0 := @this: org.springframework.expression.spel.ast.Operator;

        $r1 = r0.<org.springframework.expression.spel.ast.Operator: java.lang.String operatorName>;

        return $r1;
    }

    public java.lang.String toStringAST()
    {
        org.springframework.expression.spel.ast.Operator r1;
        int $i0, i1;
        java.lang.StringBuilder $r0, $r4, $r6;
        java.lang.String $r3, $r5, $r8, $r9;
        org.springframework.expression.spel.SpelNode $r2, $r7;

        r1 := @this: org.springframework.expression.spel.ast.Operator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r2 = virtualinvoke r1.<org.springframework.expression.spel.ast.Operator: org.springframework.expression.spel.SpelNode getChild(int)>(0);

        $r3 = interfaceinvoke $r2.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        i1 = 1;

        goto label2;

     label1:
        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r5 = virtualinvoke r1.<org.springframework.expression.spel.ast.Operator: java.lang.String getOperatorName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r7 = virtualinvoke r1.<org.springframework.expression.spel.ast.Operator: org.springframework.expression.spel.SpelNode getChild(int)>(i1);

        $r8 = interfaceinvoke $r7.<org.springframework.expression.spel.SpelNode: java.lang.String toStringAST()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);

        i1 = i1 + 1;

     label2:
        $i0 = virtualinvoke r1.<org.springframework.expression.spel.ast.Operator: int getChildCount()>();

        if i1 < $i0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }
}
