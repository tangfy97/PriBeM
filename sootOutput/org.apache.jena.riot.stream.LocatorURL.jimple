public class org.apache.jena.riot.stream.LocatorURL extends java.lang.Object implements org.apache.jena.riot.stream.Locator
{
    private static org.slf4j.Logger log;
    private static final java.lang.String[] schemeNames;

    public void <init>()
    {
        org.apache.jena.riot.stream.LocatorURL r0;

        r0 := @this: org.apache.jena.riot.stream.LocatorURL;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.apache.jena.atlas.web.TypedInputStream open(java.lang.String)
    {
        org.apache.jena.atlas.web.TypedInputStream $r1;
        org.slf4j.Logger $r2, $r4;
        java.lang.StringBuilder $r3, $r5, $r6;
        java.lang.String r0, $r7;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.jena.riot.stream.LocatorURL r8;

        r8 := @this: org.apache.jena.riot.stream.LocatorURL;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.jena.riot.stream.LocatorURL: boolean acceptByScheme(java.lang.String)>(r0);

        if $z0 != 0 goto label2;

        $z3 = <org.apache.jena.riot.stream.StreamManager: boolean logAllLookups>;

        if $z3 == 0 goto label1;

        $r2 = <org.apache.jena.riot.stream.LocatorURL: org.slf4j.Logger log>;

        $z4 = interfaceinvoke $r2.<org.slf4j.Logger: boolean isTraceEnabled()>();

        if $z4 == 0 goto label1;

        $r4 = <org.apache.jena.riot.stream.LocatorURL: org.slf4j.Logger log>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not found : ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r4.<org.slf4j.Logger: void trace(java.lang.String)>($r7);

     label1:
        return null;

     label2:
        $z1 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("http://");

        if $z1 != 0 goto label3;

        $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>("https://");

        if $z2 == 0 goto label4;

     label3:
        $r1 = staticinvoke <org.apache.jena.riot.web.HttpOp: org.apache.jena.atlas.web.TypedInputStream execHttpGet(java.lang.String,java.lang.String)>(r0, "text/turtle,application/n-triples;q=0.9,application/rdf+xml;q=0.8,application/xml;q=0.7,*/*;q=0.5");

        return $r1;

     label4:
        return null;
    }

    public java.lang.String getName()
    {
        org.apache.jena.riot.stream.LocatorURL r0;

        r0 := @this: org.apache.jena.riot.stream.LocatorURL;

        return "LocatorURL";
    }

    private static boolean acceptByScheme(java.lang.String)
    {
        java.lang.String[] $r4, $r5;
        java.util.Locale $r2;
        int $i0, i1;
        java.lang.String r0, $r1, $r3, $r6;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.lang.String getScheme(java.lang.String)>(r0);

        if $r1 != null goto label1;

        return 0;

     label1:
        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2);

        i1 = 0;

     label2:
        $r4 = <org.apache.jena.riot.stream.LocatorURL: java.lang.String[] schemeNames>;

        $i0 = lengthof $r4;

        if i1 >= $i0 goto label4;

        $r5 = <org.apache.jena.riot.stream.LocatorURL: java.lang.String[] schemeNames>;

        $r6 = $r5[i1];

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label3;

        return 1;

     label3:
        i1 = i1 + 1;

        goto label2;

     label4:
        return 0;
    }

    public int hashCode()
    {
        org.apache.jena.riot.stream.LocatorURL r0;

        r0 := @this: org.apache.jena.riot.stream.LocatorURL;

        return 57;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r1;
        java.lang.Class $r2, $r3;
        org.apache.jena.riot.stream.LocatorURL r0;
        boolean $z0;

        r0 := @this: org.apache.jena.riot.stream.LocatorURL;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 != $r3 goto label3;

        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r1;
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lorg/apache/jena/riot/stream/LocatorURL;");

        <org.apache.jena.riot.stream.LocatorURL: org.slf4j.Logger log> = $r0;

        $r1 = newarray (java.lang.String)[2];

        $r1[0] = "http";

        $r1[1] = "https";

        <org.apache.jena.riot.stream.LocatorURL: java.lang.String[] schemeNames> = $r1;

        return;
    }
}
