public class org.springframework.core.type.filter.AspectJTypeFilter extends java.lang.Object implements org.springframework.core.type.filter.TypeFilter
{
    private final org.aspectj.weaver.World world;
    private final org.aspectj.weaver.patterns.TypePattern typePattern;

    public void <init>(java.lang.String, java.lang.ClassLoader)
    {
        org.aspectj.weaver.patterns.Bindings $r12;
        org.aspectj.weaver.patterns.PatternParser $r15;
        org.aspectj.bridge.IMessageHandler $r3;
        org.aspectj.weaver.patterns.TypePattern $r7, $r13;
        org.aspectj.weaver.patterns.FormalBinding[] $r10;
        java.lang.String r6;
        org.aspectj.weaver.bcel.BcelWorld $r14;
        org.springframework.core.type.filter.AspectJTypeFilter r0;
        org.aspectj.weaver.World $r4, $r8, $r11, $r17;
        org.aspectj.weaver.patterns.SimpleScope $r16;
        org.aspectj.weaver.patterns.IScope $r18;
        java.lang.ClassLoader r2;

        r0 := @this: org.springframework.core.type.filter.AspectJTypeFilter;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.ClassLoader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r14 = new org.aspectj.weaver.bcel.BcelWorld;

        $r3 = <org.aspectj.bridge.IMessageHandler: org.aspectj.bridge.IMessageHandler THROW>;

        specialinvoke $r14.<org.aspectj.weaver.bcel.BcelWorld: void <init>(java.lang.ClassLoader,org.aspectj.bridge.IMessageHandler,org.aspectj.weaver.ICrossReferenceHandler)>(r2, $r3, null);

        $r17 = (org.aspectj.weaver.World) $r14;

        r0.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.World world> = $r17;

        $r4 = r0.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.World world>;

        virtualinvoke $r4.<org.aspectj.weaver.World: void setBehaveInJava5Way(boolean)>(1);

        $r15 = new org.aspectj.weaver.patterns.PatternParser;

        specialinvoke $r15.<org.aspectj.weaver.patterns.PatternParser: void <init>(java.lang.String)>(r6);

        $r7 = virtualinvoke $r15.<org.aspectj.weaver.patterns.PatternParser: org.aspectj.weaver.patterns.TypePattern parseTypePattern()>();

        $r8 = r0.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.World world>;

        virtualinvoke $r7.<org.aspectj.weaver.patterns.TypePattern: void resolve(org.aspectj.weaver.World)>($r8);

        $r16 = new org.aspectj.weaver.patterns.SimpleScope;

        $r11 = r0.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.World world>;

        $r10 = newarray (org.aspectj.weaver.patterns.FormalBinding)[0];

        specialinvoke $r16.<org.aspectj.weaver.patterns.SimpleScope: void <init>(org.aspectj.weaver.World,org.aspectj.weaver.patterns.FormalBinding[])>($r11, $r10);

        $r12 = <org.aspectj.weaver.patterns.Bindings: org.aspectj.weaver.patterns.Bindings NONE>;

        $r18 = (org.aspectj.weaver.patterns.IScope) $r16;

        $r13 = virtualinvoke $r7.<org.aspectj.weaver.patterns.TypePattern: org.aspectj.weaver.patterns.TypePattern resolveBindings(org.aspectj.weaver.patterns.IScope,org.aspectj.weaver.patterns.Bindings,boolean,boolean)>($r18, $r12, 0, 0);

        r0.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.patterns.TypePattern typePattern> = $r13;

        return;
    }

    public boolean match(org.springframework.core.type.classreading.MetadataReader, org.springframework.core.type.classreading.MetadataReaderFactory) throws java.io.IOException
    {
        org.aspectj.weaver.World $r4;
        org.springframework.core.type.ClassMetadata $r1;
        org.springframework.core.type.classreading.MetadataReaderFactory r7;
        org.springframework.core.type.classreading.MetadataReader r0;
        org.aspectj.weaver.patterns.TypePattern $r6;
        java.lang.String $r2;
        org.aspectj.weaver.ResolvedType $r5;
        org.springframework.core.type.filter.AspectJTypeFilter r3;
        boolean $z0;

        r3 := @this: org.springframework.core.type.filter.AspectJTypeFilter;

        r0 := @parameter0: org.springframework.core.type.classreading.MetadataReader;

        r7 := @parameter1: org.springframework.core.type.classreading.MetadataReaderFactory;

        $r1 = interfaceinvoke r0.<org.springframework.core.type.classreading.MetadataReader: org.springframework.core.type.ClassMetadata getClassMetadata()>();

        $r2 = interfaceinvoke $r1.<org.springframework.core.type.ClassMetadata: java.lang.String getClassName()>();

        $r4 = r3.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.World world>;

        $r5 = virtualinvoke $r4.<org.aspectj.weaver.World: org.aspectj.weaver.ResolvedType resolve(java.lang.String)>($r2);

        $r6 = r3.<org.springframework.core.type.filter.AspectJTypeFilter: org.aspectj.weaver.patterns.TypePattern typePattern>;

        $z0 = virtualinvoke $r6.<org.aspectj.weaver.patterns.TypePattern: boolean matchesStatically(org.aspectj.weaver.ResolvedType)>($r5);

        return $z0;
    }
}
