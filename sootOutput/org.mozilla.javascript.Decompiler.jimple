public class org.mozilla.javascript.Decompiler extends java.lang.Object
{
    public static final int ONLY_BODY_FLAG;
    public static final int TO_SOURCE_FLAG;
    public static final int INITIAL_INDENT_PROP;
    public static final int INDENT_GAP_PROP;
    public static final int CASE_GAP_PROP;
    private static final int FUNCTION_END;
    private char[] sourceBuffer;
    private int sourceTop;
    private static final boolean printSource;

    public void <init>()
    {
        org.mozilla.javascript.Decompiler r0;
        char[] $r1;

        r0 := @this: org.mozilla.javascript.Decompiler;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[128];

        r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer> = $r1;

        return;
    }

    java.lang.String getEncodedSource()
    {
        org.mozilla.javascript.Decompiler r0;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.Decompiler;

        $r1 = specialinvoke r0.<org.mozilla.javascript.Decompiler: java.lang.String sourceToString(int)>(0);

        return $r1;
    }

    int getCurrentOffset()
    {
        org.mozilla.javascript.Decompiler r0;
        int $i0;

        r0 := @this: org.mozilla.javascript.Decompiler;

        $i0 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        return $i0;
    }

    int markFunctionStart(int)
    {
        org.mozilla.javascript.Decompiler r0;
        int $i0, i1;
        char $c2;

        r0 := @this: org.mozilla.javascript.Decompiler;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Decompiler: int getCurrentOffset()>();

        virtualinvoke r0.<org.mozilla.javascript.Decompiler: void addToken(int)>(105);

        $c2 = (char) i1;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c2);

        return $i0;
    }

    int markFunctionEnd(int)
    {
        org.mozilla.javascript.Decompiler r0;
        int $i0, i1;

        r0 := @this: org.mozilla.javascript.Decompiler;

        i1 := @parameter0: int;

        $i0 = virtualinvoke r0.<org.mozilla.javascript.Decompiler: int getCurrentOffset()>();

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>(147);

        return $i0;
    }

    void addToken(int)
    {
        org.mozilla.javascript.Decompiler r1;
        int i0;
        char $c1;
        java.lang.IllegalArgumentException $r0;

        r1 := @this: org.mozilla.javascript.Decompiler;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        if i0 <= 146 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $c1 = (char) i0;

        specialinvoke r1.<org.mozilla.javascript.Decompiler: void append(char)>($c1);

        return;
    }

    void addEOL(int)
    {
        org.mozilla.javascript.Decompiler r1;
        int i0;
        char $c1;
        java.lang.IllegalArgumentException $r0;

        r1 := @this: org.mozilla.javascript.Decompiler;

        i0 := @parameter0: int;

        if 0 > i0 goto label1;

        if i0 <= 146 goto label2;

     label1:
        $r0 = new java.lang.IllegalArgumentException;

        specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r0;

     label2:
        $c1 = (char) i0;

        specialinvoke r1.<org.mozilla.javascript.Decompiler: void append(char)>($c1);

        specialinvoke r1.<org.mozilla.javascript.Decompiler: void append(char)>(1);

        return;
    }

    void addName(java.lang.String)
    {
        org.mozilla.javascript.Decompiler r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.Decompiler;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.mozilla.javascript.Decompiler: void addToken(int)>(38);

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void appendString(java.lang.String)>(r1);

        return;
    }

    void addString(java.lang.String)
    {
        org.mozilla.javascript.Decompiler r0;
        java.lang.String r1;

        r0 := @this: org.mozilla.javascript.Decompiler;

        r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.mozilla.javascript.Decompiler: void addToken(int)>(40);

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void appendString(java.lang.String)>(r1);

        return;
    }

    void addRegexp(java.lang.String, java.lang.String)
    {
        org.mozilla.javascript.Decompiler r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r7;
        java.lang.String r3, r6, $r8;

        r0 := @this: org.mozilla.javascript.Decompiler;

        r3 := @parameter0: java.lang.String;

        r6 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.mozilla.javascript.Decompiler: void addToken(int)>(47);

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void appendString(java.lang.String)>($r8);

        return;
    }

    void addNumber(double)
    {
        byte $b0, $b1, $b2;
        long $l3, $l6, $l9, $l16, $l17, $l20, $l23, l28;
        org.mozilla.javascript.Decompiler r0;
        int $i4, $i7, $i10, $i12, $i14, $i18, $i21, $i24, $i26, $i29, $i30;
        double d0, $d1;
        char $c5, $c8, $c11, $c13, $c15, $c19, $c22, $c25, $c27;

        r0 := @this: org.mozilla.javascript.Decompiler;

        d0 := @parameter0: double;

        virtualinvoke r0.<org.mozilla.javascript.Decompiler: void addToken(int)>(39);

        l28 = (long) d0;

        $d1 = (double) l28;

        $b0 = $d1 cmpl d0;

        if $b0 == 0 goto label1;

        $l16 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(d0);

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>(68);

        $l17 = $l16 >> 48;

        $i18 = (int) $l17;

        $c19 = (char) $i18;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c19);

        $l20 = $l16 >> 32;

        $i21 = (int) $l20;

        $c22 = (char) $i21;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c22);

        $l23 = $l16 >> 16;

        $i24 = (int) $l23;

        $c25 = (char) $i24;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c25);

        $i26 = (int) $l16;

        $c27 = (char) $i26;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c27);

        goto label4;

     label1:
        $b1 = l28 cmp 0L;

        $i29 = (int) $b1;

        if $i29 >= 0 goto label2;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label2:
        $b2 = l28 cmp 65535L;

        $i30 = (int) $b2;

        if $i30 > 0 goto label3;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>(83);

        $i14 = (int) l28;

        $c15 = (char) $i14;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c15);

        goto label4;

     label3:
        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>(74);

        $l3 = l28 >> 48;

        $i4 = (int) $l3;

        $c5 = (char) $i4;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c5);

        $l6 = l28 >> 32;

        $i7 = (int) $l6;

        $c8 = (char) $i7;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c8);

        $l9 = l28 >> 16;

        $i10 = (int) $l9;

        $c11 = (char) $i10;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c11);

        $i12 = (int) l28;

        $c13 = (char) $i12;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void append(char)>($c13);

     label4:
        return;
    }

    private void appendString(java.lang.String)
    {
        org.mozilla.javascript.Decompiler r1;
        byte b16;
        int $i0, $i1, $i2, $i3, $i5, $i6, $i7, $i8, $i9, $i10, $i12, $i13, $i14, $i15, $i18, $i20, $i22;
        java.lang.String r0;
        char $c4, $c11;
        char[] $r2, $r3, $r4, $r5;

        r1 := @this: org.mozilla.javascript.Decompiler;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        b16 = 1;

        $i18 = (int) 32768;

        if $i0 < $i18 goto label1;

        b16 = 2;

     label1:
        $i1 = r1.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i2 = $i1 + b16;

        $i15 = $i2 + $i0;

        $r2 = r1.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i3 = lengthof $r2;

        if $i15 <= $i3 goto label2;

        specialinvoke r1.<org.mozilla.javascript.Decompiler: void increaseSourceCapacity(int)>($i15);

     label2:
        $i20 = (int) 32768;

        if $i0 < $i20 goto label3;

        $r5 = r1.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i12 = r1.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i9 = $i0 >>> 16;

        $i22 = (int) 32768;

        $i10 = $i22 | $i9;

        $c11 = (char) $i10;

        $r5[$i12] = $c11;

        $i13 = r1.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i14 = $i13 + 1;

        r1.<org.mozilla.javascript.Decompiler: int sourceTop> = $i14;

     label3:
        $r3 = r1.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i5 = r1.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $c4 = (char) $i0;

        $r3[$i5] = $c4;

        $i6 = r1.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i7 = $i6 + 1;

        r1.<org.mozilla.javascript.Decompiler: int sourceTop> = $i7;

        $r4 = r1.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i8 = r1.<org.mozilla.javascript.Decompiler: int sourceTop>;

        virtualinvoke r0.<java.lang.String: void getChars(int,int,char[],int)>(0, $i0, $r4, $i8);

        r1.<org.mozilla.javascript.Decompiler: int sourceTop> = $i15;

        return;
    }

    private void append(char)
    {
        char c2;
        org.mozilla.javascript.Decompiler r0;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7;
        char[] $r1, $r2;

        r0 := @this: org.mozilla.javascript.Decompiler;

        c2 := @parameter0: char;

        $i1 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $r1 = r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i0 = lengthof $r1;

        if $i1 != $i0 goto label1;

        $i6 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i7 = $i6 + 1;

        specialinvoke r0.<org.mozilla.javascript.Decompiler: void increaseSourceCapacity(int)>($i7);

     label1:
        $r2 = r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i3 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $r2[$i3] = c2;

        $i4 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i5 = $i4 + 1;

        r0.<org.mozilla.javascript.Decompiler: int sourceTop> = $i5;

        return;
    }

    private void increaseSourceCapacity(int)
    {
        org.mozilla.javascript.Decompiler r0;
        int i0, $i1, $i2, $i3, $i4, i5;
        char[] $r1, $r2, $r3, $r4;

        r0 := @this: org.mozilla.javascript.Decompiler;

        i0 := @parameter0: int;

        $r1 = r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i1 = lengthof $r1;

        if i0 > $i1 goto label1;

        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label1:
        $r2 = r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i2 = lengthof $r2;

        $i4 = $i2 * 2;

        i5 = $i4;

        if $i4 >= i0 goto label2;

        i5 = i0;

     label2:
        $r4 = newarray (char)[i5];

        $r3 = r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i3 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i3);

        r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer> = $r4;

        return;
    }

    private java.lang.String sourceToString(int)
    {
        org.mozilla.javascript.Decompiler r0;
        int i0, $i1, $i2, $i3;
        char[] $r2;
        java.lang.String $r1;

        r0 := @this: org.mozilla.javascript.Decompiler;

        i0 := @parameter0: int;

        if i0 < 0 goto label1;

        $i1 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        if $i1 >= i0 goto label2;

     label1:
        staticinvoke <org.mozilla.javascript.Kit: java.lang.RuntimeException codeBug()>();

     label2:
        $r1 = new java.lang.String;

        $r2 = r0.<org.mozilla.javascript.Decompiler: char[] sourceBuffer>;

        $i2 = r0.<org.mozilla.javascript.Decompiler: int sourceTop>;

        $i3 = $i2 - i0;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, i0, $i3);

        return $r1;
    }

    public static java.lang.String decompile(java.lang.String, int, org.mozilla.javascript.UintMap)
    {
        boolean z0, z1, $z2, $z3, z4, z5;
        java.lang.StringBuffer $r11;
        int $i0, $i1, $i2, $i3, i4, $i5, $i6, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i23, $i24, i26, i27, i28, i29, i30, i31, $i32, $i33, $i35, $i36, $i37, $i38, $i39, $i40;
        java.lang.String r0, $r7;
        char $c7, $c8, $c22, $c25;
        java.lang.RuntimeException $r12;
        org.mozilla.javascript.UintMap r1;
        java.lang.IllegalArgumentException $r8, $r9, $r10;

        r0 := @parameter0: java.lang.String;

        i4 := @parameter1: int;

        r1 := @parameter2: org.mozilla.javascript.UintMap;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label001;

        return "";

     label001:
        $i1 = virtualinvoke r1.<org.mozilla.javascript.UintMap: int getInt(int,int)>(1, 0);

        i26 = $i1;

        if $i1 >= 0 goto label002;

        $r8 = new java.lang.IllegalArgumentException;

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r8;

     label002:
        $i2 = virtualinvoke r1.<org.mozilla.javascript.UintMap: int getInt(int,int)>(2, 4);

        if $i2 >= 0 goto label003;

        $r9 = new java.lang.IllegalArgumentException;

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r9;

     label003:
        $i3 = virtualinvoke r1.<org.mozilla.javascript.UintMap: int getInt(int,int)>(3, 2);

        if $i3 >= 0 goto label004;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r10;

     label004:
        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $i5 = i4 & 1;

        if 0 == $i5 goto label005;

        $z2 = 1;

        goto label006;

     label005:
        $z2 = 0;

     label006:
        z0 = $z2;

        $i6 = i4 & 2;

        if 0 == $i6 goto label007;

        $z3 = 1;

        goto label008;

     label007:
        $z3 = 0;

     label008:
        z1 = $z3;

        i27 = 0;

        z4 = 0;

        i28 = 0;

        $c7 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i32 = (int) $c7;

        if $i32 != 132 goto label009;

        i28 = 1;

        i29 = -1;

        goto label010;

     label009:
        i29 = virtualinvoke r0.<java.lang.String: char charAt(int)>(1);

     label010:
        if z1 != 0 goto label012;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        i30 = 0;

     label011:
        if i30 >= $i1 goto label013;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i30 = i30 + 1;

        goto label011;

     label012:
        if i29 != 2 goto label013;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

     label013:
        if i28 >= $i0 goto label117;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i28);

        $i33 = (int) $c8;

        tableswitch($i33)
        {
            case 1: goto label035;
            case 2: goto label115;
            case 3: goto label115;
            case 4: goto label062;
            case 5: goto label115;
            case 6: goto label115;
            case 7: goto label115;
            case 8: goto label115;
            case 9: goto label083;
            case 10: goto label084;
            case 11: goto label085;
            case 12: goto label088;
            case 13: goto label089;
            case 14: goto label091;
            case 15: goto label090;
            case 16: goto label093;
            case 17: goto label092;
            case 18: goto label095;
            case 19: goto label096;
            case 20: goto label097;
            case 21: goto label106;
            case 22: goto label107;
            case 23: goto label108;
            case 24: goto label109;
            case 25: goto label110;
            case 26: goto label100;
            case 27: goto label101;
            case 28: goto label102;
            case 29: goto label103;
            case 30: goto label044;
            case 31: goto label045;
            case 32: goto label098;
            case 33: goto label115;
            case 34: goto label115;
            case 35: goto label115;
            case 36: goto label115;
            case 37: goto label115;
            case 38: goto label014;
            case 39: goto label016;
            case 40: goto label015;
            case 41: goto label019;
            case 42: goto label020;
            case 43: goto label018;
            case 44: goto label017;
            case 45: goto label086;
            case 46: goto label087;
            case 47: goto label014;
            case 48: goto label115;
            case 49: goto label056;
            case 50: goto label115;
            case 51: goto label049;
            case 52: goto label094;
            case 53: goto label115;
            case 54: goto label115;
            case 55: goto label115;
            case 56: goto label115;
            case 57: goto label115;
            case 58: goto label115;
            case 59: goto label115;
            case 60: goto label115;
            case 61: goto label115;
            case 62: goto label115;
            case 63: goto label115;
            case 64: goto label078;
            case 65: goto label115;
            case 66: goto label115;
            case 67: goto label115;
            case 68: goto label115;
            case 69: goto label115;
            case 70: goto label115;
            case 71: goto label115;
            case 72: goto label115;
            case 73: goto label115;
            case 74: goto label115;
            case 75: goto label115;
            case 76: goto label115;
            case 77: goto label053;
            case 78: goto label064;
            case 79: goto label033;
            case 80: goto label034;
            case 81: goto label024;
            case 82: goto label026;
            case 83: goto label031;
            case 84: goto label032;
            case 85: goto label023;
            case 86: goto label065;
            case 87: goto label071;
            case 88: goto label072;
            case 89: goto label073;
            case 90: goto label074;
            case 91: goto label075;
            case 92: goto label076;
            case 93: goto label066;
            case 94: goto label067;
            case 95: goto label068;
            case 96: goto label069;
            case 97: goto label070;
            case 98: goto label077;
            case 99: goto label079;
            case 100: goto label081;
            case 101: goto label082;
            case 102: goto label104;
            case 103: goto label105;
            case 104: goto label043;
            case 105: goto label021;
            case 106: goto label115;
            case 107: goto label115;
            case 108: goto label046;
            case 109: goto label047;
            case 110: goto label057;
            case 111: goto label060;
            case 112: goto label061;
            case 113: goto label051;
            case 114: goto label052;
            case 115: goto label048;
            case 116: goto label058;
            case 117: goto label059;
            case 118: goto label063;
            case 119: goto label050;
            case 120: goto label054;
            case 121: goto label055;
            case 122: goto label099;
            case 123: goto label115;
            case 124: goto label115;
            case 125: goto label115;
            case 126: goto label115;
            case 127: goto label115;
            case 128: goto label115;
            case 129: goto label115;
            case 130: goto label115;
            case 131: goto label115;
            case 132: goto label115;
            case 133: goto label115;
            case 134: goto label115;
            case 135: goto label115;
            case 136: goto label115;
            case 137: goto label115;
            case 138: goto label115;
            case 139: goto label112;
            case 140: goto label111;
            case 141: goto label115;
            case 142: goto label113;
            case 143: goto label114;
            case 144: goto label115;
            case 145: goto label115;
            case 146: goto label115;
            case 147: goto label022;
            default: goto label115;
        };

     label014:
        $i18 = i28 + 1;

        i28 = staticinvoke <org.mozilla.javascript.Decompiler: int printSourceString(java.lang.String,int,boolean,java.lang.StringBuffer)>(r0, $i18, 0, $r11);

        goto label013;

     label015:
        $i16 = i28 + 1;

        i28 = staticinvoke <org.mozilla.javascript.Decompiler: int printSourceString(java.lang.String,int,boolean,java.lang.StringBuffer)>(r0, $i16, 1, $r11);

        goto label013;

     label016:
        $i17 = i28 + 1;

        i28 = staticinvoke <org.mozilla.javascript.Decompiler: int printSourceNumber(java.lang.String,int,java.lang.StringBuffer)>(r0, $i17, $r11);

        goto label013;

     label017:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("true");

        goto label116;

     label018:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("false");

        goto label116;

     label019:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("null");

        goto label116;

     label020:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("this");

        goto label116;

     label021:
        i28 = i28 + 1;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("function ");

        goto label116;

     label022:
        goto label116;

     label023:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        goto label116;

     label024:
        i27 = i27 + 1;

        $i14 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 1 != $i14 goto label025;

        i26 = i26 + $i2;

     label025:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(123);

        goto label116;

     label026:
        $i35 = (int) -1;

        i27 = i27 + $i35;

        if z0 == 0 goto label027;

        if i27 != 0 goto label027;

        goto label116;

     label027:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(125);

        $i13 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        lookupswitch($i13)
        {
            case 1: goto label028;
            case 109: goto label029;
            case 113: goto label029;
            case 147: goto label028;
            default: goto label030;
        };

     label028:
        i26 = i26 - $i2;

        goto label030;

     label029:
        i26 = i26 - $i2;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

     label030:
        goto label116;

     label031:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        goto label116;

     label032:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $i12 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 81 != $i12 goto label116;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label116;

     label033:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(91);

        goto label116;

     label034:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93);

        goto label116;

     label035:
        if z1 == 0 goto label036;

        goto label116;

     label036:
        z5 = 1;

        if z4 != 0 goto label037;

        z4 = 1;

        if z0 == 0 goto label037;

        virtualinvoke $r11.<java.lang.StringBuffer: void setLength(int)>(0);

        i26 = i26 - $i2;

        z5 = 0;

     label037:
        if z5 == 0 goto label038;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

     label038:
        $i20 = i28 + 1;

        if $i20 >= $i0 goto label116;

        i31 = 0;

        $i21 = i28 + 1;

        $c22 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i21);

        $i36 = (int) $c22;

        if $i36 == 111 goto label039;

        $i37 = (int) $c22;

        if $i37 != 112 goto label040;

     label039:
        i31 = $i2 - $i3;

        goto label042;

     label040:
        $i38 = (int) $c22;

        if $i38 != 82 goto label041;

        i31 = $i2;

        goto label042;

     label041:
        $i39 = (int) $c22;

        if $i39 != 38 goto label042;

        $i23 = i28 + 2;

        $i24 = staticinvoke <org.mozilla.javascript.Decompiler: int getSourceStringEnd(java.lang.String,int)>(r0, $i23);

        $c25 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i24);

        $i40 = (int) $c25;

        if $i40 != 99 goto label042;

        i31 = $i2;

     label042:
        if i31 >= i26 goto label116;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i31 = i31 + 1;

        goto label042;

     label043:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        goto label116;

     label044:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("new ");

        goto label116;

     label045:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("delete ");

        goto label116;

     label046:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("if ");

        goto label116;

     label047:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("else ");

        goto label116;

     label048:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("for ");

        goto label116;

     label049:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" in ");

        goto label116;

     label050:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("with ");

        goto label116;

     label051:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("while ");

        goto label116;

     label052:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("do ");

        goto label116;

     label053:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("try ");

        goto label116;

     label054:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("catch ");

        goto label116;

     label055:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("finally ");

        goto label116;

     label056:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("throw ");

        goto label116;

     label057:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("switch ");

        goto label116;

     label058:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("break");

        $i10 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 38 != $i10 goto label116;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label116;

     label059:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("continue");

        $i9 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 38 != $i9 goto label116;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label116;

     label060:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("case ");

        goto label116;

     label061:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("default");

        goto label116;

     label062:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("return");

        $i19 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 78 == $i19 goto label116;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label116;

     label063:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("var ");

        goto label116;

     label064:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(59);

        $i15 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 1 == $i15 goto label116;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        goto label116;

     label065:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ");

        goto label116;

     label066:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" += ");

        goto label116;

     label067:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" -= ");

        goto label116;

     label068:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" *= ");

        goto label116;

     label069:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" /= ");

        goto label116;

     label070:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" %= ");

        goto label116;

     label071:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" |= ");

        goto label116;

     label072:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ^= ");

        goto label116;

     label073:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" &= ");

        goto label116;

     label074:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <<= ");

        goto label116;

     label075:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >>= ");

        goto label116;

     label076:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >>>= ");

        goto label116;

     label077:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ? ");

        goto label116;

     label078:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        goto label116;

     label079:
        $i11 = staticinvoke <org.mozilla.javascript.Decompiler: int getNext(java.lang.String,int,int)>(r0, $i0, i28);

        if 1 != $i11 goto label080;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(58);

        goto label116;

     label080:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" : ");

        goto label116;

     label081:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" || ");

        goto label116;

     label082:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" && ");

        goto label116;

     label083:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" | ");

        goto label116;

     label084:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ^ ");

        goto label116;

     label085:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" & ");

        goto label116;

     label086:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" === ");

        goto label116;

     label087:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" !== ");

        goto label116;

     label088:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" == ");

        goto label116;

     label089:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" != ");

        goto label116;

     label090:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" <= ");

        goto label116;

     label091:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" < ");

        goto label116;

     label092:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >= ");

        goto label116;

     label093:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" > ");

        goto label116;

     label094:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" instanceof ");

        goto label116;

     label095:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" << ");

        goto label116;

     label096:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >> ");

        goto label116;

     label097:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" >>> ");

        goto label116;

     label098:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("typeof ");

        goto label116;

     label099:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("void ");

        goto label116;

     label100:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(33);

        goto label116;

     label101:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(126);

        goto label116;

     label102:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(43);

        goto label116;

     label103:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        goto label116;

     label104:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("++");

        goto label116;

     label105:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("--");

        goto label116;

     label106:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" + ");

        goto label116;

     label107:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" - ");

        goto label116;

     label108:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" * ");

        goto label116;

     label109:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" / ");

        goto label116;

     label110:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" % ");

        goto label116;

     label111:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("::");

        goto label116;

     label112:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("..");

        goto label116;

     label113:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".(");

        goto label116;

     label114:
        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        goto label116;

     label115:
        $r12 = new java.lang.RuntimeException;

        specialinvoke $r12.<java.lang.RuntimeException: void <init>()>();

        throw $r12;

     label116:
        i28 = i28 + 1;

        goto label013;

     label117:
        if z1 != 0 goto label118;

        if z0 != 0 goto label119;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(10);

        goto label119;

     label118:
        if i29 != 2 goto label119;

        virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

     label119:
        $r7 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    private static int getNext(java.lang.String, int, int)
    {
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        $i2 = i0 + 1;

        if $i2 >= i1 goto label1;

        $i3 = i0 + 1;

        $i4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        goto label2;

     label1:
        $i4 = 0;

     label2:
        return $i4;
    }

    private static int getSourceStringEnd(java.lang.String, int)
    {
        int i0, $i1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $i1 = staticinvoke <org.mozilla.javascript.Decompiler: int printSourceString(java.lang.String,int,boolean,java.lang.StringBuffer)>(r0, i0, 0, null);

        return $i1;
    }

    private static int printSourceString(java.lang.String, int, boolean, java.lang.StringBuffer)
    {
        short $s3;
        java.lang.StringBuffer r1;
        int $i2, $i4, i6, i7, i8, $i9, $i10, $i11;
        java.lang.String r0, $r2, $r3;
        boolean z0;
        char $c0, $c1, $c5;

        r0 := @parameter0: java.lang.String;

        i6 := @parameter1: int;

        z0 := @parameter2: boolean;

        r1 := @parameter3: java.lang.StringBuffer;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i10 = (int) $c0;

        i7 = $i10;

        i8 = i6 + 1;

        $c1 = 32768 & $c0;

        if $c1 == 0 goto label1;

        $s3 = 32767 & $c0;

        $i4 = $s3 << 16;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i8);

        $i11 = (int) $c5;

        i7 = $i4 | $i11;

        i8 = i8 + 1;

     label1:
        if r1 == null goto label3;

        $i2 = i8 + i7;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i8, $i2);

        if z0 != 0 goto label2;

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        goto label3;

     label2:
        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

        $r3 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String escapeString(java.lang.String)>($r2);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34);

     label3:
        $i9 = i8 + i7;

        return $i9;
    }

    private static int printSourceNumber(java.lang.String, int, java.lang.StringBuffer)
    {
        long $l2, $l5, $l6, $l9, $l10, $l13, l18, l19, l20, l21;
        java.lang.StringBuffer r1;
        int $i3, $i7, $i11, i15, i16, i17, $i22, $i23, $i24, $i25;
        java.lang.String r0, $r2;
        double d0;
        char $c0, $c1, $c4, $c8, $c12, $c14;
        java.lang.RuntimeException $r4;

        r0 := @parameter0: java.lang.String;

        i15 := @parameter1: int;

        r1 := @parameter2: java.lang.StringBuffer;

        d0 = 0.0;

        $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i15);

        i16 = i15 + 1;

        $i22 = (int) $c0;

        if $i22 != 83 goto label2;

        if r1 == null goto label1;

        $c14 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        d0 = (double) $c14;

     label1:
        i17 = i16 + 1;

        goto label7;

     label2:
        $i23 = (int) $c0;

        if $i23 == 74 goto label3;

        $i24 = (int) $c0;

        if $i24 != 68 goto label6;

     label3:
        if r1 == null goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i16);

        $l2 = (long) $c1;

        l18 = $l2 << 48;

        $i3 = i16 + 1;

        $c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3);

        $l5 = (long) $c4;

        $l6 = $l5 << 32;

        l19 = l18 | $l6;

        $i7 = i16 + 2;

        $c8 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i7);

        $l9 = (long) $c8;

        $l10 = $l9 << 16;

        l20 = l19 | $l10;

        $i11 = i16 + 3;

        $c12 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i11);

        $l13 = (long) $c12;

        l21 = l20 | $l13;

        $i25 = (int) $c0;

        if $i25 != 74 goto label4;

        d0 = (double) l21;

        goto label5;

     label4:
        d0 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(l21);

     label5:
        i17 = i16 + 4;

        goto label7;

     label6:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>()>();

        throw $r4;

     label7:
        if r1 == null goto label8;

        $r2 = staticinvoke <org.mozilla.javascript.ScriptRuntime: java.lang.String numberToString(double,int)>(d0, 10);

        virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

     label8:
        return i17;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.Decompiler: boolean printSource> = 0;

        <org.mozilla.javascript.Decompiler: int FUNCTION_END> = 147;

        <org.mozilla.javascript.Decompiler: int CASE_GAP_PROP> = 3;

        <org.mozilla.javascript.Decompiler: int INDENT_GAP_PROP> = 2;

        <org.mozilla.javascript.Decompiler: int INITIAL_INDENT_PROP> = 1;

        <org.mozilla.javascript.Decompiler: int TO_SOURCE_FLAG> = 2;

        <org.mozilla.javascript.Decompiler: int ONLY_BODY_FLAG> = 1;

        return;
    }
}
