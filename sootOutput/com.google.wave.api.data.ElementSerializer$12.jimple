final class com.google.wave.api.data.ElementSerializer$12 extends com.google.wave.api.data.ElementSerializer
{

    void <init>(java.lang.String, com.google.wave.api.ElementType)
    {
        java.lang.String r1;
        com.google.wave.api.ElementType r2;
        com.google.wave.api.data.ElementSerializer$12 r0;

        r0 := @this: com.google.wave.api.data.ElementSerializer$12;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: com.google.wave.api.ElementType;

        specialinvoke r0.<com.google.wave.api.data.ElementSerializer: void <init>(java.lang.String,com.google.wave.api.ElementType)>(r1, r2);

        return;
    }

    public org.waveprotocol.wave.model.document.util.XmlStringBuilder toXml(com.google.wave.api.Element)
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r0, $r6, $r8, $r9;
        com.google.wave.api.Element r1;
        java.lang.String[] $r4;
        java.util.Map $r2;
        java.lang.String $r3, $r5, $r7;
        com.google.wave.api.data.ElementSerializer$12 r10;
        boolean $z0;

        r10 := @this: com.google.wave.api.data.ElementSerializer$12;

        r1 := @parameter0: com.google.wave.api.Element;

        $r0 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createEmpty()>();

        $r2 = virtualinvoke r1.<com.google.wave.api.Element: java.util.Map getProperties()>();

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>("attachmentId");

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r1.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("caption");

        if $r3 == null goto label1;

        $r7 = virtualinvoke r1.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("caption");

        $r8 = staticinvoke <org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder createText(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String)>("caption");

        virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder append(org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r9);

     label1:
        $r4 = newarray (java.lang.String)[2];

        $r4[0] = "attachment";

        $r5 = virtualinvoke r1.<com.google.wave.api.Element: java.lang.String getProperty(java.lang.String)>("attachmentId");

        $r4[1] = $r5;

        $r6 = virtualinvoke $r0.<org.waveprotocol.wave.model.document.util.XmlStringBuilder: org.waveprotocol.wave.model.document.util.XmlStringBuilder wrap(java.lang.String,java.lang.String[])>("image", $r4);

        return $r6;

     label2:
        return $r0;
    }

    public com.google.wave.api.Element fromXml(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E, org.waveprotocol.wave.model.wave.Wavelet)
    {
        java.util.HashMap $r0;
        java.lang.String $r3, $r5, $r10, $r12, $r14, $r16, $r18, $r20;
        com.google.wave.api.data.ElementSerializer$12 r4;
        org.waveprotocol.wave.model.document.ObservableDocument $r11;
        org.waveprotocol.wave.model.document.Document r1;
        org.waveprotocol.wave.model.wave.Wavelet r6;
        com.google.wave.api.Attachment $r21;
        java.lang.StringBuilder $r7, $r8, $r9, $r15, $r17, $r19;
        java.util.regex.Pattern $r13;
        org.waveprotocol.wave.model.document.Doc$E r2;

        r4 := @this: com.google.wave.api.data.ElementSerializer$12;

        r1 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r2 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        r6 := @parameter2: org.waveprotocol.wave.model.wave.Wavelet;

        $r0 = staticinvoke <com.google.common.collect.Maps: java.util.HashMap newHashMap()>();

        $r3 = interfaceinvoke r1.<org.waveprotocol.wave.model.document.Document: java.lang.String getAttribute(java.lang.Object,java.lang.String)>(r2, "attachment");

        if $r3 == null goto label1;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attachmentId", $r3);

     label1:
        $r5 = specialinvoke r4.<com.google.wave.api.data.ElementSerializer$12: java.lang.String getCaption(org.waveprotocol.wave.model.document.Document,org.waveprotocol.wave.model.document.Doc$E)>(r1, r2);

        if $r5 == null goto label2;

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("caption", $r5);

     label2:
        if r6 == null goto label3;

        if $r3 == null goto label3;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("attach+");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        $r11 = interfaceinvoke r6.<org.waveprotocol.wave.model.wave.Wavelet: org.waveprotocol.wave.model.document.ObservableDocument getDocument(java.lang.String)>($r10);

        if $r11 == null goto label3;

        $r12 = interfaceinvoke $r11.<org.waveprotocol.wave.model.document.Document: java.lang.String toXmlString()>();

        if $r12 == null goto label3;

        $r13 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.util.regex.Pattern access$100()>();

        $r14 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.lang.String access$200(java.lang.String,java.util.regex.Pattern)>($r12, $r13);

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("mimeType", $r14);

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.lang.String access$300()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = staticinvoke <com.google.wave.api.data.ElementSerializer: java.lang.String access$400(java.lang.String)>($r12);

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("attachmentUrl", $r20);

     label3:
        $r21 = new com.google.wave.api.Attachment;

        specialinvoke $r21.<com.google.wave.api.Attachment: void <init>(java.util.Map,byte[])>($r0, null);

        return $r21;
    }

    private java.lang.String getCaption(org.waveprotocol.wave.model.document.Document, org.waveprotocol.wave.model.document.Doc$E)
    {
        org.waveprotocol.wave.model.document.Doc$N r11;
        org.waveprotocol.wave.model.document.Document r0;
        java.lang.Object $r2, $r3, $r6, $r7, $r8, $r12;
        java.lang.String $r5, $r9;
        org.waveprotocol.wave.model.document.Doc$E r1, r4;
        com.google.wave.api.data.ElementSerializer$12 r10;
        boolean $z0;

        r10 := @this: com.google.wave.api.data.ElementSerializer$12;

        r0 := @parameter0: org.waveprotocol.wave.model.document.Document;

        r1 := @parameter1: org.waveprotocol.wave.model.document.Doc$E;

        $r2 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.Object getFirstChild(java.lang.Object)>(r1);

        r11 = (org.waveprotocol.wave.model.document.Doc$N) $r2;

     label1:
        if r11 == null goto label3;

        $r3 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.Object asElement(java.lang.Object)>(r11);

        r4 = (org.waveprotocol.wave.model.document.Doc$E) $r3;

        if r4 == null goto label2;

        $r5 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.String getTagName(java.lang.Object)>(r4);

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>("caption");

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.Object getFirstChild(java.lang.Object)>(r4);

        if $r6 == null goto label2;

        $r7 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.Object getFirstChild(java.lang.Object)>(r4);

        $r8 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.Object asText(java.lang.Object)>($r7);

        $r9 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.String getData(java.lang.Object)>($r8);

        return $r9;

     label2:
        $r12 = interfaceinvoke r0.<org.waveprotocol.wave.model.document.Document: java.lang.Object getNextSibling(java.lang.Object)>(r11);

        r11 = (org.waveprotocol.wave.model.document.Doc$N) $r12;

        goto label1;

     label3:
        return null;
    }
}
