public class org.eclipse.jdt.internal.compiler.parser.ScannerHelper extends java.lang.Object
{
    public static final long[] Bits;
    private static final int START_INDEX;
    private static final int PART_INDEX;
    private static long[][][] Tables;
    public static final int MAX_OBVIOUS;
    public static final int[] OBVIOUS_IDENT_CHAR_NATURES;
    public static final int C_JLS_SPACE;
    public static final int C_SPECIAL;
    public static final int C_IDENT_START;
    public static final int C_UPPER_LETTER;
    public static final int C_LOWER_LETTER;
    public static final int C_IDENT_PART;
    public static final int C_DIGIT;
    public static final int C_SEPARATOR;
    public static final int C_SPACE;
    static java.lang.Class class$0;

    static void <clinit>()
    {
        long $l0, $l1, $l2, $l3, $l4;
        long[][] $r68, $r70, $r75, $r79, $r83, $r87, $r91;
        java.io.IOException $r97, $r102, $r107, $r112, $r117;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r34, $r35, $r36, $r37, $r38, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r66;
        java.io.DataInputStream $r72, $r76, $r80, $r84, $r88;
        long[] $r0, $r92, $r93, $r94, $r95, $r96;
        int i5, i6, i7, i8, i9, i10, i11, i12;
        java.lang.Class $r122, $r123, $r124, $r125, $r126, $r127, $r128, $r129, $r130;
        java.lang.String $r101, $r106, $r111, $r116, $r121;
        java.lang.ClassNotFoundException $r99, $r104, $r109, $r114, $r119;
        java.io.FileNotFoundException $r98, $r103, $r108, $r113, $r118;
        java.lang.NoClassDefFoundError $r100, $r105, $r110, $r115, $r120;
        long[][][] $r67, $r69, $r71, $r74, $r78, $r82, $r86, $r90;
        java.io.InputStream $r73, $r77, $r81, $r85, $r89;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_SPACE> = 1;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_SEPARATOR> = 2;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_DIGIT> = 4;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_IDENT_PART> = 8;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_LOWER_LETTER> = 16;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_UPPER_LETTER> = 32;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_IDENT_START> = 64;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_SPECIAL> = 128;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int C_JLS_SPACE> = 256;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int MAX_OBVIOUS> = 128;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int PART_INDEX> = 1;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int START_INDEX> = 0;

        $r0 = newarray (long)[64];

        $r0[0] = 1L;

        $r0[1] = 2L;

        $r0[2] = 4L;

        $r0[3] = 8L;

        $r0[4] = 16L;

        $r0[5] = 32L;

        $r0[6] = 64L;

        $r0[7] = 128L;

        $r0[8] = 256L;

        $r0[9] = 512L;

        $r0[10] = 1024L;

        $r0[11] = 2048L;

        $r0[12] = 4096L;

        $r0[13] = 8192L;

        $r0[14] = 16384L;

        $r0[15] = 32768L;

        $r0[16] = 65536L;

        $r0[17] = 131072L;

        $r0[18] = 262144L;

        $r0[19] = 524288L;

        $r0[20] = 1048576L;

        $r0[21] = 2097152L;

        $r0[22] = 4194304L;

        $r0[23] = 8388608L;

        $r0[24] = 16777216L;

        $r0[25] = 33554432L;

        $r0[26] = 67108864L;

        $r0[27] = 134217728L;

        $r0[28] = 268435456L;

        $r0[29] = 536870912L;

        $r0[30] = 1073741824L;

        $r0[31] = -2147483648L;

        $r0[32] = 4294967296L;

        $r0[33] = 8589934592L;

        $r0[34] = 17179869184L;

        $r0[35] = 34359738368L;

        $r0[36] = 68719476736L;

        $r0[37] = 137438953472L;

        $r0[38] = 274877906944L;

        $r0[39] = 549755813888L;

        $r0[40] = 1099511627776L;

        $r0[41] = 2199023255552L;

        $r0[42] = 4398046511104L;

        $r0[43] = 8796093022208L;

        $r0[44] = 17592186044416L;

        $r0[45] = 35184372088832L;

        $r0[46] = 70368744177664L;

        $r0[47] = 140737488355328L;

        $r0[48] = 281474976710656L;

        $r0[49] = 562949953421312L;

        $r0[50] = 1125899906842624L;

        $r0[51] = 2251799813685248L;

        $r0[52] = 4503599627370496L;

        $r0[53] = 9007199254740992L;

        $r0[54] = 18014398509481984L;

        $r0[55] = 36028797018963968L;

        $r0[56] = 72057594037927936L;

        $r0[57] = 144115188075855872L;

        $r0[58] = 288230376151711744L;

        $r0[59] = 576460752303423488L;

        $r0[60] = 1152921504606846976L;

        $r0[61] = 2305843009213693952L;

        $r0[62] = 4611686018427387904L;

        $r0[63] = -9223372036854775808L;

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[] Bits> = $r0;

        $r1 = newarray (int)[128];

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES> = $r1;

        $r2 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r2[0] = 8;

        $r3 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r3[1] = 8;

        $r4 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r4[2] = 8;

        $r5 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r5[3] = 8;

        $r6 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r6[4] = 8;

        $r7 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r7[5] = 8;

        $r8 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r8[6] = 8;

        $r9 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r9[7] = 8;

        $r10 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r10[8] = 8;

        $r11 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r11[14] = 8;

        $r12 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r12[15] = 8;

        $r13 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r13[16] = 8;

        $r14 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r14[17] = 8;

        $r15 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r15[18] = 8;

        $r16 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r16[19] = 8;

        $r17 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r17[20] = 8;

        $r18 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r18[21] = 8;

        $r19 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r19[22] = 8;

        $r20 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r20[23] = 8;

        $r21 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r21[24] = 8;

        $r22 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r22[25] = 8;

        $r23 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r23[26] = 8;

        $r24 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r24[27] = 8;

        $r25 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r25[127] = 8;

        i5 = 48;

        goto label02;

     label01:
        $r26 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r26[i5] = 12;

        i5 = i5 + 1;

     label02:
        if i5 <= 57 goto label01;

        i6 = 97;

        goto label04;

     label03:
        $r27 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r27[i6] = 88;

        i6 = i6 + 1;

     label04:
        if i6 <= 122 goto label03;

        i7 = 65;

        goto label06;

     label05:
        $r28 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r28[i7] = 104;

        i7 = i7 + 1;

     label06:
        if i7 <= 90 goto label05;

        $r29 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r29[95] = 200;

        $r30 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r30[36] = 200;

        $r31 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r31[9] = 257;

        $r32 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r32[10] = 257;

        $r33 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r33[11] = 1;

        $r34 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r34[12] = 257;

        $r35 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r35[13] = 257;

        $r36 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r36[28] = 1;

        $r37 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r37[29] = 1;

        $r38 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r38[30] = 1;

        $r39 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r39[31] = 1;

        $r40 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r40[32] = 257;

        $r41 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r41[46] = 2;

        $r42 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r42[58] = 2;

        $r43 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r43[59] = 2;

        $r44 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r44[44] = 2;

        $r45 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r45[91] = 2;

        $r46 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r46[93] = 2;

        $r47 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r47[40] = 2;

        $r48 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r48[41] = 2;

        $r49 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r49[123] = 2;

        $r50 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r50[125] = 2;

        $r51 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r51[43] = 2;

        $r52 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r52[45] = 2;

        $r53 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r53[42] = 2;

        $r54 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r54[47] = 2;

        $r55 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r55[61] = 2;

        $r56 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r56[38] = 2;

        $r57 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r57[124] = 2;

        $r58 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r58[63] = 2;

        $r59 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r59[60] = 2;

        $r60 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r60[62] = 2;

        $r61 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r61[33] = 2;

        $r62 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r62[37] = 2;

        $r63 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r63[94] = 2;

        $r64 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r64[126] = 2;

        $r65 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r65[34] = 2;

        $r66 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $r66[39] = 2;

        $r67 = newarray (long[][])[2];

        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables> = $r67;

        $r69 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r68 = newarray (long[])[2];

        $r69[0] = $r68;

        $r71 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r70 = newarray (long[])[3];

        $r71[1] = $r70;

     label07:
        $r72 = new java.io.DataInputStream;

        $r122 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0>;

        if $r122 != null goto label11;

     label08:
        $r122 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.eclipse.jdt.internal.compiler.parser.ScannerHelper");

     label09:
        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0> = $r122;

        goto label11;

     label10:
        $r119 := @caughtexception;

        $r120 = new java.lang.NoClassDefFoundError;

        $r121 = virtualinvoke $r119.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r120.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r121);

        throw $r120;

     label11:
        $r73 = virtualinvoke $r122.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("start1.rsc");

        specialinvoke $r72.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r73);

        $r96 = newarray (long)[1024];

        i8 = 0;

        goto label13;

     label12:
        $l0 = virtualinvoke $r72.<java.io.DataInputStream: long readLong()>();

        $r96[i8] = $l0;

        i8 = i8 + 1;

     label13:
        if i8 < 1024 goto label12;

        virtualinvoke $r72.<java.io.DataInputStream: void close()>();

        $r74 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r75 = $r74[0];

        $r75[0] = $r96;

     label14:
        goto label17;

     label15:
        $r118 := @caughtexception;

        virtualinvoke $r118.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label17;

     label16:
        $r117 := @caughtexception;

        virtualinvoke $r117.<java.io.IOException: void printStackTrace()>();

     label17:
        $r76 = new java.io.DataInputStream;

        $r123 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0>;

        $r124 = $r123;

        if $r123 != null goto label21;

     label18:
        $r124 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.eclipse.jdt.internal.compiler.parser.ScannerHelper");

     label19:
        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0> = $r124;

        goto label21;

     label20:
        $r114 := @caughtexception;

        $r115 = new java.lang.NoClassDefFoundError;

        $r116 = virtualinvoke $r114.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r115.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r116);

        throw $r115;

     label21:
        $r77 = virtualinvoke $r124.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("start2.rsc");

        specialinvoke $r76.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r77);

        $r95 = newarray (long)[1024];

        i9 = 0;

        goto label23;

     label22:
        $l1 = virtualinvoke $r76.<java.io.DataInputStream: long readLong()>();

        $r95[i9] = $l1;

        i9 = i9 + 1;

     label23:
        if i9 < 1024 goto label22;

        virtualinvoke $r76.<java.io.DataInputStream: void close()>();

        $r78 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r79 = $r78[0];

        $r79[1] = $r95;

     label24:
        goto label27;

     label25:
        $r113 := @caughtexception;

        virtualinvoke $r113.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label27;

     label26:
        $r112 := @caughtexception;

        virtualinvoke $r112.<java.io.IOException: void printStackTrace()>();

     label27:
        $r80 = new java.io.DataInputStream;

        $r125 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0>;

        $r126 = $r125;

        if $r125 != null goto label31;

     label28:
        $r126 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.eclipse.jdt.internal.compiler.parser.ScannerHelper");

     label29:
        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0> = $r126;

        goto label31;

     label30:
        $r109 := @caughtexception;

        $r110 = new java.lang.NoClassDefFoundError;

        $r111 = virtualinvoke $r109.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r110.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r111);

        throw $r110;

     label31:
        $r81 = virtualinvoke $r126.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("part1.rsc");

        specialinvoke $r80.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r81);

        $r94 = newarray (long)[1024];

        i10 = 0;

        goto label33;

     label32:
        $l2 = virtualinvoke $r80.<java.io.DataInputStream: long readLong()>();

        $r94[i10] = $l2;

        i10 = i10 + 1;

     label33:
        if i10 < 1024 goto label32;

        virtualinvoke $r80.<java.io.DataInputStream: void close()>();

        $r82 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r83 = $r82[1];

        $r83[0] = $r94;

     label34:
        goto label37;

     label35:
        $r108 := @caughtexception;

        virtualinvoke $r108.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label37;

     label36:
        $r107 := @caughtexception;

        virtualinvoke $r107.<java.io.IOException: void printStackTrace()>();

     label37:
        $r84 = new java.io.DataInputStream;

        $r127 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0>;

        $r128 = $r127;

        if $r127 != null goto label41;

     label38:
        $r128 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.eclipse.jdt.internal.compiler.parser.ScannerHelper");

     label39:
        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0> = $r128;

        goto label41;

     label40:
        $r104 := @caughtexception;

        $r105 = new java.lang.NoClassDefFoundError;

        $r106 = virtualinvoke $r104.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r105.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r106);

        throw $r105;

     label41:
        $r85 = virtualinvoke $r128.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("part2.rsc");

        specialinvoke $r84.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r85);

        $r93 = newarray (long)[1024];

        i11 = 0;

        goto label43;

     label42:
        $l3 = virtualinvoke $r84.<java.io.DataInputStream: long readLong()>();

        $r93[i11] = $l3;

        i11 = i11 + 1;

     label43:
        if i11 < 1024 goto label42;

        virtualinvoke $r84.<java.io.DataInputStream: void close()>();

        $r86 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r87 = $r86[1];

        $r87[1] = $r93;

     label44:
        goto label47;

     label45:
        $r103 := @caughtexception;

        virtualinvoke $r103.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label47;

     label46:
        $r102 := @caughtexception;

        virtualinvoke $r102.<java.io.IOException: void printStackTrace()>();

     label47:
        $r88 = new java.io.DataInputStream;

        $r129 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0>;

        $r130 = $r129;

        if $r129 != null goto label51;

     label48:
        $r130 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("org.eclipse.jdt.internal.compiler.parser.ScannerHelper");

     label49:
        <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: java.lang.Class class$0> = $r130;

        goto label51;

     label50:
        $r99 := @caughtexception;

        $r100 = new java.lang.NoClassDefFoundError;

        $r101 = virtualinvoke $r99.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r100.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r101);

        throw $r100;

     label51:
        $r89 = virtualinvoke $r130.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>("part14.rsc");

        specialinvoke $r88.<java.io.DataInputStream: void <init>(java.io.InputStream)>($r89);

        $r92 = newarray (long)[1024];

        i12 = 0;

        goto label53;

     label52:
        $l4 = virtualinvoke $r88.<java.io.DataInputStream: long readLong()>();

        $r92[i12] = $l4;

        i12 = i12 + 1;

     label53:
        if i12 < 1024 goto label52;

        virtualinvoke $r88.<java.io.DataInputStream: void close()>();

        $r90 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r91 = $r90[1];

        $r91[2] = $r92;

     label54:
        goto label57;

     label55:
        $r98 := @caughtexception;

        virtualinvoke $r98.<java.io.FileNotFoundException: void printStackTrace()>();

        goto label57;

     label56:
        $r97 := @caughtexception;

        virtualinvoke $r97.<java.io.IOException: void printStackTrace()>();

     label57:
        return;

        catch java.lang.ClassNotFoundException from label08 to label09 with label10;
        catch java.io.FileNotFoundException from label07 to label14 with label15;
        catch java.io.IOException from label07 to label14 with label16;
        catch java.lang.ClassNotFoundException from label18 to label19 with label20;
        catch java.io.FileNotFoundException from label17 to label24 with label25;
        catch java.io.IOException from label17 to label24 with label26;
        catch java.lang.ClassNotFoundException from label28 to label29 with label30;
        catch java.io.FileNotFoundException from label27 to label34 with label35;
        catch java.io.IOException from label27 to label34 with label36;
        catch java.lang.ClassNotFoundException from label38 to label39 with label40;
        catch java.io.FileNotFoundException from label37 to label44 with label45;
        catch java.io.IOException from label37 to label44 with label46;
        catch java.lang.ClassNotFoundException from label48 to label49 with label50;
        catch java.io.FileNotFoundException from label47 to label54 with label55;
        catch java.io.IOException from label47 to label54 with label56;
    }

    public void <init>()
    {
        org.eclipse.jdt.internal.compiler.parser.ScannerHelper r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.parser.ScannerHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static final boolean isBitSet(long[], int)
    {
        long $l3, $l4, $l5;
        java.lang.NullPointerException $r2;
        long[] r0, $r1;
        byte $b6;
        int i0, $i1, $i2;

        r0 := @parameter0: long[];

        i0 := @parameter1: int;

     label1:
        $i1 = i0 / 64;

        $l4 = r0[$i1];

        $r1 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[] Bits>;

        $i2 = i0 % 64;

        $l3 = $r1[$i2];

        $l5 = $l4 & $l3;

        $b6 = $l5 cmp 0L;

        if $b6 == 0 goto label2;

        return 1;

     label2:
        return 0;

     label3:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.NullPointerException from label1 to label2 with label3;
    }

    public static boolean isJavaIdentifierPart(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 8;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(c0);

        return $z0;
    }

    public static boolean isJavaIdentifierPart(char, char)
    {
        long[] $r2, $r5, $r8;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i10, $i12, $i14;
        boolean $z0, $z1, $z2, $z3;
        long[][] $r1, $r4, $r7;
        char c0, c1, $c8;
        long[][][] $r0, $r3, $r6;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int toCodePoint(char,char)>(c0, c1);

        $i3 = $i2 & 2031616;

        $i4 = $i3 >> 16;

        lookupswitch($i4)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            case 14: goto label4;
            default: goto label5;
        };

     label1:
        $c8 = (char) $i2;

        $z3 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>($c8);

        return $z3;

     label2:
        $r6 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r7 = $r6[1];

        $r8 = $r7[0];

        $i10 = (int) 65535;

        $i7 = $i2 & $i10;

        $z2 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isBitSet(long[],int)>($r8, $i7);

        return $z2;

     label3:
        $r3 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r4 = $r3[1];

        $r5 = $r4[1];

        $i12 = (int) 65535;

        $i6 = $i2 & $i12;

        $z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isBitSet(long[],int)>($r5, $i6);

        return $z1;

     label4:
        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r1 = $r0[1];

        $r2 = $r1[2];

        $i14 = (int) 65535;

        $i5 = $i2 & $i14;

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isBitSet(long[],int)>($r2, $i5);

        return $z0;

     label5:
        return 0;
    }

    public static boolean isJavaIdentifierStart(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 64;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>(c0);

        return $z0;
    }

    public static boolean isJavaIdentifierStart(char, char)
    {
        long[] $r2, $r5;
        int $i2, $i3, $i4, $i5, $i6, $i9, $i11;
        boolean $z0, $z1, $z2;
        long[][] $r1, $r4;
        char c0, c1, $c7;
        long[][][] $r0, $r3;

        c0 := @parameter0: char;

        c1 := @parameter1: char;

        $i2 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int toCodePoint(char,char)>(c0, c1);

        $i3 = $i2 & 2031616;

        $i4 = $i3 >> 16;

        tableswitch($i4)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 2: goto label3;
            default: goto label4;
        };

     label1:
        $c7 = (char) $i2;

        $z2 = staticinvoke <java.lang.Character: boolean isJavaIdentifierStart(char)>($c7);

        return $z2;

     label2:
        $r3 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r4 = $r3[0];

        $r5 = $r4[0];

        $i9 = (int) 65535;

        $i6 = $i2 & $i9;

        $z1 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isBitSet(long[],int)>($r5, $i6);

        return $z1;

     label3:
        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: long[][][] Tables>;

        $r1 = $r0[0];

        $r2 = $r1[1];

        $i11 = (int) 65535;

        $i5 = $i2 & $i11;

        $z0 = staticinvoke <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: boolean isBitSet(long[],int)>($r2, $i5);

        return $z0;

     label4:
        return 0;
    }

    private static int toCodePoint(char, char)
    {
        char c0, c2;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i12;

        c0 := @parameter0: char;

        c2 := @parameter1: char;

        $i7 = (int) c0;

        $i9 = (int) 55296;

        $i1 = $i7 - $i9;

        $i4 = $i1 * 1024;

        $i10 = (int) c2;

        $i12 = (int) 56320;

        $i3 = $i10 - $i12;

        $i5 = $i4 + $i3;

        $i6 = $i5 + 65536;

        return $i6;
    }

    public static boolean isDigit(char) throws org.eclipse.jdt.core.compiler.InvalidInputException
    {
        char c0;
        org.eclipse.jdt.core.compiler.InvalidInputException $r2;
        int[] $r1;
        int $i1, $i2, $i3, $i4;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r1 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r1[$i4];

        $i2 = $i1 & 4;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isDigit(char)>(c0);

        if $z0 == 0 goto label3;

        $r2 = new org.eclipse.jdt.core.compiler.InvalidInputException;

        specialinvoke $r2.<org.eclipse.jdt.core.compiler.InvalidInputException: void <init>(java.lang.String)>("Invalid_Digit");

        throw $r2;

     label3:
        return 0;
    }

    public static int digit(char, int)
    {
        int i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i18, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i31;
        char c0;

        c0 := @parameter0: char;

        i1 := @parameter1: int;

        $i10 = (int) c0;

        if $i10 >= 128 goto label9;

        lookupswitch(i1)
        {
            case 8: goto label1;
            case 10: goto label3;
            case 16: goto label5;
            default: goto label9;
        };

     label1:
        $i11 = (int) c0;

        if $i11 < 48 goto label2;

        $i12 = (int) c0;

        if $i12 > 55 goto label2;

        $i13 = (int) c0;

        $i9 = $i13 - 48;

        return $i9;

     label2:
        $i15 = (int) -1;

        return $i15;

     label3:
        $i16 = (int) c0;

        if $i16 < 48 goto label4;

        $i17 = (int) c0;

        if $i17 > 57 goto label4;

        $i18 = (int) c0;

        $i8 = $i18 - 48;

        return $i8;

     label4:
        $i20 = (int) -1;

        return $i20;

     label5:
        $i21 = (int) c0;

        if $i21 < 48 goto label6;

        $i22 = (int) c0;

        if $i22 > 57 goto label6;

        $i23 = (int) c0;

        $i7 = $i23 - 48;

        return $i7;

     label6:
        $i24 = (int) c0;

        if $i24 < 65 goto label7;

        $i25 = (int) c0;

        if $i25 > 70 goto label7;

        $i26 = (int) c0;

        $i5 = $i26 - 65;

        $i6 = $i5 + 10;

        return $i6;

     label7:
        $i27 = (int) c0;

        if $i27 < 97 goto label8;

        $i28 = (int) c0;

        if $i28 > 102 goto label8;

        $i29 = (int) c0;

        $i3 = $i29 - 97;

        $i4 = $i3 + 10;

        return $i4;

     label8:
        $i31 = (int) -1;

        return $i31;

     label9:
        $i2 = staticinvoke <java.lang.Character: int digit(char,int)>(c0, i1);

        return $i2;
    }

    public static int getNumericValue(char)
    {
        char c0;
        int[] $r0;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12;

        c0 := @parameter0: char;

        $i8 = (int) c0;

        if $i8 >= 128 goto label4;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i9 = (int) c0;

        $i2 = $r0[$i9];

        lookupswitch($i2)
        {
            case 4: goto label1;
            case 16: goto label2;
            case 32: goto label3;
            default: goto label4;
        };

     label1:
        $i10 = (int) c0;

        $i7 = $i10 - 48;

        return $i7;

     label2:
        $i11 = (int) c0;

        $i5 = 10 + $i11;

        $i6 = $i5 - 97;

        return $i6;

     label3:
        $i12 = (int) c0;

        $i3 = 10 + $i12;

        $i4 = $i3 - 65;

        return $i4;

     label4:
        $i1 = staticinvoke <java.lang.Character: int getNumericValue(char)>(c0);

        return $i1;
    }

    public static char toUpperCase(char)
    {
        char c0, $c1, $c7;
        int[] $r0, $r1;
        int $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;

        c0 := @parameter0: char;

        $i8 = (int) c0;

        if $i8 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i9 = (int) c0;

        $i2 = $r0[$i9];

        $i3 = $i2 & 32;

        if $i3 == 0 goto label1;

        return c0;

     label1:
        $r1 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i10 = (int) c0;

        $i4 = $r1[$i10];

        $i5 = $i4 & 16;

        if $i5 == 0 goto label2;

        $i11 = (int) c0;

        $i6 = $i11 - 32;

        $c7 = (char) $i6;

        return $c7;

     label2:
        $c1 = staticinvoke <java.lang.Character: char toUpperCase(char)>(c0);

        return $c1;
    }

    public static char toLowerCase(char)
    {
        char c0, $c1, $c7;
        int[] $r0, $r1;
        int $i2, $i3, $i4, $i5, $i6, $i8, $i9, $i10, $i11;

        c0 := @parameter0: char;

        $i8 = (int) c0;

        if $i8 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i9 = (int) c0;

        $i2 = $r0[$i9];

        $i3 = $i2 & 16;

        if $i3 == 0 goto label1;

        return c0;

     label1:
        $r1 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i10 = (int) c0;

        $i4 = $r1[$i10];

        $i5 = $i4 & 32;

        if $i5 == 0 goto label2;

        $i11 = (int) c0;

        $i6 = 32 + $i11;

        $c7 = (char) $i6;

        return $c7;

     label2:
        $c1 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c0);

        return $c1;
    }

    public static boolean isLowerCase(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 16;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(c0);

        return $z0;
    }

    public static boolean isUpperCase(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 32;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isUpperCase(char)>(c0);

        return $z0;
    }

    public static boolean isWhitespace(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 1;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(c0);

        return $z0;
    }

    public static boolean isLetter(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 48;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c0);

        return $z0;
    }

    public static boolean isLetterOrDigit(char)
    {
        int[] $r0;
        int $i1, $i2, $i3, $i4;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i3 = (int) c0;

        if $i3 >= 128 goto label2;

        $r0 = <org.eclipse.jdt.internal.compiler.parser.ScannerHelper: int[] OBVIOUS_IDENT_CHAR_NATURES>;

        $i4 = (int) c0;

        $i1 = $r0[$i4];

        $i2 = $i1 & 52;

        if $i2 == 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $z0 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c0);

        return $z0;
    }
}
