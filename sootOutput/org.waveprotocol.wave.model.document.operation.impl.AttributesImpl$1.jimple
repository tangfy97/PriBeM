final class org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1 extends java.lang.Object implements org.waveprotocol.wave.model.util.ReadableStringMap$ProcV
{
    final java.util.List val$attrs;

    void <init>(java.util.List)
    {
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1 r0;
        java.util.List r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1;

        r1 := @parameter0: java.util.List;

        r0.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1: java.util.List val$attrs> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void apply(java.lang.String, java.lang.String)
    {
        java.util.List $r4;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1 r0;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute $r1;
        java.lang.String r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1: java.util.List val$attrs>;

        $r1 = new org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap$Attribute: void <init>(java.lang.String,java.lang.String)>(r2, r3);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r1);

        return;
    }

    public volatile void apply(java.lang.String, java.lang.Object)
    {
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1 r0;
        java.lang.Object r2;
        java.lang.String r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = (java.lang.String) r2;

        virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl$1: void apply(java.lang.String,java.lang.String)>(r1, $r3);

        return;
    }
}
