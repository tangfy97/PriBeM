public final class org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder extends java.lang.Object
{
    private java.lang.String documentId;
    private org.waveprotocol.wave.federation.ProtocolDocumentOperation state;
    private org.waveprotocol.wave.federation.ProtocolDocumentOperation diff;
    private java.lang.String author;
    private final java.util.List contributor;
    private final java.util.List addedContributor;
    private final java.util.List removedContributor;
    private java.lang.Double lastModifiedVersion;
    private java.lang.Double lastModifiedTime;

    public void <init>()
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.util.ArrayList $r1, $r2, $r3;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List contributor> = $r1;

        $r2 = new java.util.ArrayList;

        specialinvoke $r2.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List addedContributor> = $r2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List removedContributor> = $r3;

        return;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setDocumentId(java.lang.String)
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.String documentId> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder clearState()
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolDocumentOperation state> = null;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolDocumentOperation state> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder clearDiff()
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolDocumentOperation diff> = null;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)
    {
        org.waveprotocol.wave.federation.ProtocolDocumentOperation r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: org.waveprotocol.wave.federation.ProtocolDocumentOperation;

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolDocumentOperation diff> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setAuthor(java.lang.String)
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.String author> = r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder addAllContributor(java.util.List)
    {
        java.util.List r1, $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List contributor>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setContributor(int, java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List contributor>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder addContributor(java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List contributor>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder clearContributor()
    {
        java.util.List $r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List contributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder addAllAddedContributor(java.util.List)
    {
        java.util.List r1, $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setAddedContributor(int, java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder addAddedContributor(java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List addedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder clearAddedContributor()
    {
        java.util.List $r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List addedContributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder addAllRemovedContributor(java.util.List)
    {
        java.util.List r1, $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.util.List;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List removedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean addAll(java.util.Collection)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setRemovedContributor(int, java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        int i0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List removedContributor>;

        interfaceinvoke $r2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(i0, r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder addRemovedContributor(java.lang.String)
    {
        java.util.List $r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.String r1;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List removedContributor>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder clearRemovedContributor()
    {
        java.util.List $r1;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        $r1 = r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List removedContributor>;

        interfaceinvoke $r1.<java.util.List: void clear()>();

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setLastModifiedVersion(double)
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.Double lastModifiedVersion> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder setLastModifiedTime(double)
    {
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r0;
        java.lang.Double $r1;
        double d0;

        r0 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        d0 := @parameter0: double;

        $r1 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0);

        r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.Double lastModifiedTime> = $r1;

        return r0;
    }

    public org.waveprotocol.wave.diff.DocumentDiffSnapshot build(org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder$Factory)
    {
        java.lang.Double $r10, $r11;
        java.util.List $r7, $r8, $r9;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder$Factory r0;
        org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder r2;
        org.waveprotocol.wave.diff.DocumentDiffSnapshot $r1;
        org.waveprotocol.wave.federation.ProtocolDocumentOperation $r4, $r5;
        java.lang.String $r3, $r6;
        double $d0, $d1;

        r2 := @this: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder;

        r0 := @parameter0: org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder$Factory;

        $r1 = interfaceinvoke r0.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder$Factory: org.waveprotocol.wave.diff.DocumentDiffSnapshot create()>();

        $r3 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.String documentId>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void setDocumentId(java.lang.String)>($r3);

        $r4 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolDocumentOperation state>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void setState(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r4);

        $r5 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: org.waveprotocol.wave.federation.ProtocolDocumentOperation diff>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void setDiff(org.waveprotocol.wave.federation.ProtocolDocumentOperation)>($r5);

        $r6 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.String author>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void setAuthor(java.lang.String)>($r6);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void clearContributor()>();

        $r7 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List contributor>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void addAllContributor(java.util.List)>($r7);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void clearAddedContributor()>();

        $r8 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List addedContributor>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void addAllAddedContributor(java.util.List)>($r8);

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void clearRemovedContributor()>();

        $r9 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.util.List removedContributor>;

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void addAllRemovedContributor(java.util.List)>($r9);

        $r10 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.Double lastModifiedVersion>;

        $d0 = virtualinvoke $r10.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void setLastModifiedVersion(double)>($d0);

        $r11 = r2.<org.waveprotocol.wave.diff.DocumentDiffSnapshotBuilder: java.lang.Double lastModifiedTime>;

        $d1 = virtualinvoke $r11.<java.lang.Double: double doubleValue()>();

        interfaceinvoke $r1.<org.waveprotocol.wave.diff.DocumentDiffSnapshot: void setLastModifiedTime(double)>($d1);

        return $r1;
    }
}
