final class com.hp.hpl.jena.util.iterator.NiceIterator$1 extends com.hp.hpl.jena.util.iterator.NiceIterator
{
    private int index;
    private java.util.Iterator current;
    private java.util.Iterator removeFrom;
    final java.util.Iterator val$a;
    final java.util.List val$pending;

    void <init>(java.util.Iterator, java.util.List)
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.util.List r2;
        java.util.Iterator r1, $r3;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

        r1 := @parameter0: java.util.Iterator;

        r2 := @parameter1: java.util.List;

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator val$a> = r1;

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending> = r2;

        specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator: void <init>()>();

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index> = 0;

        $r3 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator val$a>;

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current> = $r3;

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator removeFrom> = null;

        return;
    }

    public boolean hasNext()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.util.Iterator $r1, $r2, $r4;
        java.util.List $r3;
        int $i0, $i1;
        boolean $z0, $z1;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

     label1:
        $r1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label2;

        $i0 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index>;

        $r3 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r4 = specialinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator advance()>();

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current> = $r4;

        goto label1;

     label2:
        $r2 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current>;

        $z1 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        return $z1;
    }

    private java.util.Iterator advance()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.util.Iterator r3;
        java.util.List $r1, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        $i0 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        r3 = (java.util.Iterator) $r2;

        $r4 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        $i1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index>;

        interfaceinvoke $r4.<java.util.List: java.lang.Object set(int,java.lang.Object)>($i1, null);

        $i2 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index>;

        $i3 = $i2 + 1;

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index> = $i3;

        return r3;
    }

    public java.lang.Object next()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.util.Iterator $r1, $r2;
        java.lang.Object $r3;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: boolean hasNext()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.lang.Object noElements(java.lang.String)>("concatenation");

     label1:
        $r1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current>;

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator removeFrom> = $r1;

        $r2 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current>;

        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        return $r3;
    }

    public void close()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.util.Iterator $r1, $r6;
        java.util.List $r2, $r3, $r4;
        int $i0, i1;
        java.lang.Object $r5;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator current>;

        staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator$1: void close(java.util.Iterator)>($r1);

        i1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: int index>;

     label1:
        $r2 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.util.Iterator) $r5;

        staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator$1: void close(java.util.Iterator)>($r6);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        interfaceinvoke $r3.<java.util.List: void clear()>();

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator removeFrom> = null;

        return;
    }

    public void remove()
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.lang.IllegalStateException $r3;
        java.util.Iterator $r1, $r2;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

        $r1 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator removeFrom>;

        if null != $r1 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("no calls to next() since last call to remove()");

        throw $r3;

     label1:
        $r2 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator removeFrom>;

        interfaceinvoke $r2.<java.util.Iterator: void remove()>();

        r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.Iterator removeFrom> = null;

        return;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator andThen(java.util.Iterator)
    {
        com.hp.hpl.jena.util.iterator.NiceIterator$1 r0;
        java.util.List $r2;
        java.util.Iterator r1;

        r0 := @this: com.hp.hpl.jena.util.iterator.NiceIterator$1;

        r1 := @parameter0: java.util.Iterator;

        $r2 = r0.<com.hp.hpl.jena.util.iterator.NiceIterator$1: java.util.List val$pending>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return r0;
    }
}
