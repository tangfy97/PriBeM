public abstract class org.springframework.scripting.config.LangNamespaceUtils extends java.lang.Object
{
    private static final java.lang.String SCRIPT_FACTORY_POST_PROCESSOR_BEAN_NAME;

    public void <init>()
    {
        org.springframework.scripting.config.LangNamespaceUtils r0;

        r0 := @this: org.springframework.scripting.config.LangNamespaceUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.beans.factory.config.BeanDefinition registerScriptFactoryPostProcessorIfNecessary(org.springframework.beans.factory.support.BeanDefinitionRegistry)
    {
        org.springframework.beans.factory.support.RootBeanDefinition $r1;
        org.springframework.beans.factory.config.BeanDefinition r2;
        org.springframework.beans.factory.support.BeanDefinitionRegistry r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.beans.factory.support.BeanDefinitionRegistry;

        $z0 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.scripting.config.scriptFactoryPostProcessor");

        if $z0 == 0 goto label1;

        r2 = interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>("org.springframework.scripting.config.scriptFactoryPostProcessor");

        goto label2;

     label1:
        $r1 = new org.springframework.beans.factory.support.RootBeanDefinition;

        specialinvoke $r1.<org.springframework.beans.factory.support.RootBeanDefinition: void <init>(java.lang.Class)>(class "Lorg/springframework/scripting/support/ScriptFactoryPostProcessor;");

        r2 = $r1;

        interfaceinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>("org.springframework.scripting.config.scriptFactoryPostProcessor", $r1);

     label2:
        return r2;
    }

    public static void <clinit>()
    {
        <org.springframework.scripting.config.LangNamespaceUtils: java.lang.String SCRIPT_FACTORY_POST_PROCESSOR_BEAN_NAME> = "org.springframework.scripting.config.scriptFactoryPostProcessor";

        return;
    }
}
