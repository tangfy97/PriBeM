public final class org.apache.poi.hsmf.datatypes.Types$MAPIType extends java.lang.Object
{
    private final int id;
    private final java.lang.String name;
    private final int length;

    private void <init>(int, java.lang.String, int)
    {
        java.util.Map $r2;
        int i0, i1;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        java.lang.String r1;
        java.lang.Integer $r3;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int id> = i0;

        r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: java.lang.String name> = r1;

        r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int length> = i1;

        $r2 = staticinvoke <org.apache.poi.hsmf.datatypes.Types: java.util.Map access$100()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r0);

        return;
    }

    private void <init>(int, int)
    {
        java.util.Map $r2;
        int i0, i1;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        java.lang.String $r1;
        java.lang.Integer $r3;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int id> = i0;

        $r1 = staticinvoke <org.apache.poi.hsmf.datatypes.Types: java.lang.String access$200(int)>(i0);

        r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: java.lang.String name> = $r1;

        r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int length> = i1;

        $r2 = staticinvoke <org.apache.poi.hsmf.datatypes.Types: java.util.Map access$300()>();

        $r3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0);

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, r0);

        return;
    }

    public int getLength()
    {
        int $i0;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $i0 = r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int length>;

        return $i0;
    }

    public boolean isFixedLength()
    {
        int $i0, $i2;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        boolean $z0;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $i0 = r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int length>;

        $i2 = (int) -1;

        if $i0 == $i2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public int getId()
    {
        int $i0;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $i0 = r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int id>;

        return $i0;
    }

    public java.lang.String getName()
    {
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: java.lang.String name>;

        return $r1;
    }

    public java.lang.String toString()
    {
        int $i0, $i1;
        java.lang.StringBuilder $r0, $r2, $r3, $r5, $r6, $r8, $r9, $r10;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r1;
        java.lang.String $r4, $r7, $r11;

        r1 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $i0 = r1.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int id>;

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" / 0x");

        $r4 = virtualinvoke r1.<org.apache.poi.hsmf.datatypes.Types$MAPIType: java.lang.String asFileEnding()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" - ");

        $r7 = r1.<org.apache.poi.hsmf.datatypes.Types$MAPIType: java.lang.String name>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" @ ");

        $i1 = r1.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int length>;

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String asFileEnding()
    {
        int $i0;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        java.lang.String $r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $i0 = r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: int id>;

        $r1 = staticinvoke <org.apache.poi.hsmf.datatypes.Types: java.lang.String asFileEnding(int)>($i0);

        return $r1;
    }

    void <init>(int, java.lang.String, int, org.apache.poi.hsmf.datatypes.Types$1)
    {
        int i0, i1;
        org.apache.poi.hsmf.datatypes.Types$1 r2;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        java.lang.String r1;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        i0 := @parameter0: int;

        r1 := @parameter1: java.lang.String;

        i1 := @parameter2: int;

        r2 := @parameter3: org.apache.poi.hsmf.datatypes.Types$1;

        specialinvoke r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: void <init>(int,java.lang.String,int)>(i0, r1, i1);

        return;
    }

    static java.lang.String access$400(org.apache.poi.hsmf.datatypes.Types$MAPIType)
    {
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;
        java.lang.String $r1;

        r0 := @parameter0: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        $r1 = r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: java.lang.String name>;

        return $r1;
    }

    void <init>(int, int, org.apache.poi.hsmf.datatypes.Types$1)
    {
        int i0, i1;
        org.apache.poi.hsmf.datatypes.Types$1 r1;
        org.apache.poi.hsmf.datatypes.Types$MAPIType r0;

        r0 := @this: org.apache.poi.hsmf.datatypes.Types$MAPIType;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: org.apache.poi.hsmf.datatypes.Types$1;

        specialinvoke r0.<org.apache.poi.hsmf.datatypes.Types$MAPIType: void <init>(int,int)>(i0, i1);

        return;
    }
}
