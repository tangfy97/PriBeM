abstract class org.sat4j.minisat.learning.AbstractLearning extends java.lang.Object implements org.sat4j.minisat.core.LearningStrategy
{
    private static final long serialVersionUID;
    private org.sat4j.minisat.core.VarActivityListener val;
    static final boolean $assertionsDisabled;

    void <init>()
    {
        org.sat4j.minisat.learning.AbstractLearning r0;

        r0 := @this: org.sat4j.minisat.learning.AbstractLearning;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setVarActivityListener(org.sat4j.minisat.core.VarActivityListener)
    {
        org.sat4j.minisat.core.VarActivityListener r1;
        org.sat4j.minisat.learning.AbstractLearning r0;

        r0 := @this: org.sat4j.minisat.learning.AbstractLearning;

        r1 := @parameter0: org.sat4j.minisat.core.VarActivityListener;

        r0.<org.sat4j.minisat.learning.AbstractLearning: org.sat4j.minisat.core.VarActivityListener val> = r1;

        return;
    }

    public void setSolver(org.sat4j.minisat.core.Solver)
    {
        org.sat4j.minisat.learning.AbstractLearning r0;
        org.sat4j.minisat.core.Solver r1;

        r0 := @this: org.sat4j.minisat.learning.AbstractLearning;

        r1 := @parameter0: org.sat4j.minisat.core.Solver;

        r0.<org.sat4j.minisat.learning.AbstractLearning: org.sat4j.minisat.core.VarActivityListener val> = r1;

        return;
    }

    public final void claBumpActivity(org.sat4j.minisat.core.Constr)
    {
        org.sat4j.minisat.learning.AbstractLearning r1;
        org.sat4j.minisat.core.VarActivityListener $r2;
        java.lang.AssertionError $r3;
        org.sat4j.minisat.core.Constr r0;
        int $i0, $i1, i2;
        boolean $z0;

        r1 := @this: org.sat4j.minisat.learning.AbstractLearning;

        r0 := @parameter0: org.sat4j.minisat.core.Constr;

        i2 = 0;

     label1:
        $i0 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int size()>();

        if i2 >= $i0 goto label3;

        $i1 = interfaceinvoke r0.<org.sat4j.minisat.core.Constr: int get(int)>(i2);

        $z0 = <org.sat4j.minisat.learning.AbstractLearning: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if $i1 > 1 goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r2 = r1.<org.sat4j.minisat.learning.AbstractLearning: org.sat4j.minisat.core.VarActivityListener val>;

        interfaceinvoke $r2.<org.sat4j.minisat.core.VarActivityListener: void varBumpActivity(int)>($i1);

        i2 = i2 + 1;

        goto label1;

     label3:
        return;
    }

    public void init()
    {
        org.sat4j.minisat.learning.AbstractLearning r0;

        r0 := @this: org.sat4j.minisat.learning.AbstractLearning;

        return;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <org.sat4j.minisat.learning.AbstractLearning: long serialVersionUID> = 1L;

        $r0 = class "Lorg/sat4j/minisat/learning/AbstractLearning;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.sat4j.minisat.learning.AbstractLearning: boolean $assertionsDisabled> = $z1;

        return;
    }
}
