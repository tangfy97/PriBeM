public class org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo extends org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct implements org.eclipse.jdt.internal.compiler.env.IBinaryAnnotation
{
    private char[] typename;
    private org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs;
    long standardAnnotationTagBits;
    int readOffset;
    static java.lang.Object[] EmptyValueArray;

    static void <clinit>()
    {
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: java.lang.Object[] EmptyValueArray> = $r0;

        return;
    }

    void <init>(byte[], int[], int)
    {
        byte[] r1;
        int[] r2;
        int i0;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.ClassFileStruct: void <init>(byte[],int[],int)>(r1, r2, i0);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = 0L;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = 0;

        return;
    }

    void <init>(byte[], int[], int, boolean, boolean)
    {
        byte[] r1;
        int[] r2;
        int i0, $i1;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;
        boolean z0, z1;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        r1 := @parameter0: byte[];

        r2 := @parameter1: int[];

        i0 := @parameter2: int;

        z1 := @parameter3: boolean;

        z0 := @parameter4: boolean;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void <init>(byte[],int[],int)>(r1, r2, i0);

        if z0 == 0 goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void decodeAnnotation()>();

        goto label2;

     label1:
        $i1 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanAnnotation(int,boolean,boolean)>(0, z1, 1);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i1;

     label2:
        return;
    }

    private void decodeAnnotation()
    {
        int[] $r1, $r3;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, i18, i19, i20;
        org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo $r6;
        org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] $r7, $r8;
        char[] $r2, $r4;
        java.lang.Object $r5;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = 0;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(0);

        $i2 = $r1[$i0];

        $i1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i18 = $i2 - $i1;

        $i4 = i18 + 3;

        $i3 = i18 + 1;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i3);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i4, $i5);

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] typename> = $r2;

        $i6 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(2);

        $i7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i8 = $i7 + 4;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i8;

        if $i6 != 0 goto label1;

        $r8 = <org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] NoMembers>;

        goto label2;

     label1:
        $r8 = newarray (org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo)[$i6];

     label2:
        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs> = $r8;

        i19 = 0;

        goto label4;

     label3:
        $r3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i9 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i9);

        $i12 = $r3[$i10];

        $i11 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i20 = $i12 - $i11;

        $i14 = i20 + 3;

        $i13 = i20 + 1;

        $i15 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i13);

        $r4 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i14, $i15);

        $i16 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i17 = $i16 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i17;

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: java.lang.Object decodeDefaultValue()>();

        $r7 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        $r6 = new org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo;

        specialinvoke $r6.<org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo: void <init>(char[],java.lang.Object)>($r4, $r5);

        $r7[i19] = $r6;

        i19 = i19 + 1;

     label4:
        if i19 < $i6 goto label3;

        return;
    }

    java.lang.Object decodeDefaultValue()
    {
        byte[] $r24;
        byte $b106;
        java.lang.Object[] r12;
        long $l66;
        short $s58;
        org.eclipse.jdt.internal.compiler.env.ClassSignature $r11;
        java.lang.StringBuffer $r27, $r28;
        org.eclipse.jdt.internal.compiler.env.EnumConstantSignature $r8;
        int[] $r1, $r4, $r6, $r9, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r23;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42, $i43, $i44, $i45, $i46, $i47, $i48, $i49, $i50, $i51, $i52, $i53, $i54, $i55, $i56, $i57, $i59, $i60, $i61, $i62, $i63, $i64, $i65, $i67, $i68, $i69, $i70, $i71, $i72, $i73, $i74, $i75, $i76, $i77, $i78, $i79, $i80, $i81, $i82, $i83, $i84, $i85, $i86, $i87, $i88, $i89, $i90, $i91, $i92, $i93, $i94, $i95, $i96, $i98, $i99, $i100, $i101, $i102, $i103, $i104, $i105, $i107, $i108, $i109, $i110, $i111, $i112, $i113, $i114, i116, i117, i118, i119, i120, i121, i122, i123, i124, i125, i126, i127, i128;
        java.lang.Object $r13, r30;
        java.lang.String $r3, $r29;
        char[] $r2, $r5, $r7, $r10;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0, $r22, $r25;
        java.lang.IllegalStateException $r26;
        boolean $z0;
        float $f0;
        double $d0;
        char $c97, $c115;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $i0 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u1At(int)>($i0);

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i3 = $i2 + 1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i3;

        lookupswitch($i1)
        {
            case 64: goto label14;
            case 66: goto label06;
            case 67: goto label05;
            case 68: goto label08;
            case 70: goto label09;
            case 73: goto label04;
            case 74: goto label10;
            case 83: goto label07;
            case 90: goto label01;
            case 91: goto label15;
            case 99: goto label13;
            case 101: goto label12;
            case 115: goto label11;
            default: goto label19;
        };

     label01:
        $r14 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i44 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i45 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i44);

        $i47 = $r14[$i45];

        $i46 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i116 = $i47 - $i46;

        $i48 = i116 + 1;

        $i49 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int i4At(int)>($i48);

        if $i49 != 1 goto label02;

        $z0 = 1;

        goto label03;

     label02:
        $z0 = 0;

     label03:
        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.BooleanConstant: org.eclipse.jdt.internal.compiler.impl.BooleanConstant fromValue(boolean)>($z0);

        $i50 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i51 = $i50 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i51;

        goto label20;

     label04:
        $r17 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i69 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i70 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i69);

        $i72 = $r17[$i70];

        $i71 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i117 = $i72 - $i71;

        $i73 = i117 + 1;

        $i74 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int i4At(int)>($i73);

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.IntConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(int)>($i74);

        $i75 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i76 = $i75 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i76;

        goto label20;

     label05:
        $r20 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i91 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i92 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i91);

        $i94 = $r20[$i92];

        $i93 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i118 = $i94 - $i93;

        $i95 = i118 + 1;

        $i96 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int i4At(int)>($i95);

        $c97 = (char) $i96;

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.CharConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(char)>($c97);

        $i98 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i99 = $i98 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i99;

        goto label20;

     label06:
        $r21 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i100 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i101 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i100);

        $i103 = $r21[$i101];

        $i102 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i119 = $i103 - $i102;

        $i104 = i119 + 1;

        $i105 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int i4At(int)>($i104);

        $b106 = (byte) $i105;

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.ByteConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(byte)>($b106);

        $i107 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i108 = $i107 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i108;

        goto label20;

     label07:
        $r15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i52 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i53 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i52);

        $i55 = $r15[$i53];

        $i54 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i120 = $i55 - $i54;

        $i56 = i120 + 1;

        $i57 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int i4At(int)>($i56);

        $s58 = (short) $i57;

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.ShortConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(short)>($s58);

        $i59 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i60 = $i59 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i60;

        goto label20;

     label08:
        $r19 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i84 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i85 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i84);

        $i87 = $r19[$i85];

        $i86 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i121 = $i87 - $i86;

        $i88 = i121 + 1;

        $d0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: double doubleAt(int)>($i88);

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.DoubleConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(double)>($d0);

        $i89 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i90 = $i89 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i90;

        goto label20;

     label09:
        $r18 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i77 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i78 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i77);

        $i80 = $r18[$i78];

        $i79 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i122 = $i80 - $i79;

        $i81 = i122 + 1;

        $f0 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: float floatAt(int)>($i81);

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.FloatConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(float)>($f0);

        $i82 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i83 = $i82 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i83;

        goto label20;

     label10:
        $r16 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i61 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i62 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i61);

        $i64 = $r16[$i62];

        $i63 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i123 = $i64 - $i63;

        $i65 = i123 + 1;

        $l66 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long i8At(int)>($i65);

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.LongConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(long)>($l66);

        $i67 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i68 = $i67 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i68;

        goto label20;

     label11:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i4);

        $i7 = $r1[$i5];

        $i6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i124 = $i7 - $i6;

        $i9 = i124 + 3;

        $i8 = i124 + 1;

        $i10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i8);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i9, $i10);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>($r2);

        r30 = staticinvoke <org.eclipse.jdt.internal.compiler.impl.StringConstant: org.eclipse.jdt.internal.compiler.impl.Constant fromValue(java.lang.String)>($r3);

        $i11 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i12 = $i11 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i12;

        goto label20;

     label12:
        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i13 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i13);

        $i16 = $r4[$i14];

        $i15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i125 = $i16 - $i15;

        $i18 = i125 + 3;

        $i17 = i125 + 1;

        $i19 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i17);

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i18, $i19);

        $i20 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i21 = $i20 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i21;

        $r6 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i22 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i23 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i22);

        $i25 = $r6[$i23];

        $i24 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i126 = $i25 - $i24;

        $i27 = i126 + 3;

        $i26 = i126 + 1;

        $i28 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i26);

        $r7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i27, $i28);

        $i29 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i30 = $i29 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i30;

        $r8 = new org.eclipse.jdt.internal.compiler.env.EnumConstantSignature;

        specialinvoke $r8.<org.eclipse.jdt.internal.compiler.env.EnumConstantSignature: void <init>(char[],char[])>($r5, $r7);

        r30 = $r8;

        goto label20;

     label13:
        $r9 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i31 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i32 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i31);

        $i34 = $r9[$i32];

        $i33 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i127 = $i34 - $i33;

        $i36 = i127 + 3;

        $i35 = i127 + 1;

        $i37 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i35);

        $r10 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i36, $i37);

        $r11 = new org.eclipse.jdt.internal.compiler.env.ClassSignature;

        specialinvoke $r11.<org.eclipse.jdt.internal.compiler.env.ClassSignature: void <init>(char[])>($r10);

        r30 = $r11;

        $i38 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i39 = $i38 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i39;

        goto label20;

     label14:
        $r22 = new org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r24 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: byte[] reference>;

        $r23 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i110 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i109 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        $i111 = $i110 + $i109;

        specialinvoke $r22.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void <init>(byte[],int[],int,boolean,boolean)>($r24, $r23, $i111, 0, 1);

        r30 = $r22;

        $i113 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $r25 = (org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo) $r22;

        $i112 = $r25.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i114 = $i113 + $i112;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i114;

        goto label20;

     label15:
        $i40 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i41 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i40);

        $i42 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset>;

        $i43 = $i42 + 2;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readOffset> = $i43;

        if $i41 != 0 goto label16;

        r30 = <org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: java.lang.Object[] EmptyValueArray>;

        goto label20;

     label16:
        r12 = newarray (java.lang.Object)[$i41];

        r30 = r12;

        i128 = 0;

        goto label18;

     label17:
        $r13 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: java.lang.Object decodeDefaultValue()>();

        r12[i128] = $r13;

        i128 = i128 + 1;

     label18:
        if i128 < $i41 goto label17;

        goto label20;

     label19:
        $r26 = new java.lang.IllegalStateException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>(java.lang.String)>("Unrecognized tag ");

        $c115 = (char) $i1;

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c115);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r29);

        throw $r26;

     label20:
        return r30;
    }

    public org.eclipse.jdt.internal.compiler.env.IBinaryElementValuePair[] getElementValuePairs()
    {
        org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] $r1, $r2;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        if $r1 != null goto label1;

        virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void initialize()>();

     label1:
        $r2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        return $r2;
    }

    public char[] getTypeName()
    {
        char[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] typename>;

        return $r1;
    }

    void initialize()
    {
        org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] $r1;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        if $r1 != null goto label1;

        specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: void decodeAnnotation()>();

     label1:
        return;
    }

    private int readRetentionPolicy(int)
    {
        java.lang.IllegalStateException $r6;
        int[] $r1, $r4;
        boolean $z0;
        long $l15, $l16, $l17;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i18, i19, i20, i21, i22, i23, i24;
        char[] $r2, $r3, $r5;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u1At(int)>(i0);

        i19 = i0 + 1;

        lookupswitch($i1)
        {
            case 64: goto label4;
            case 66: goto label3;
            case 67: goto label3;
            case 68: goto label3;
            case 70: goto label3;
            case 73: goto label3;
            case 74: goto label3;
            case 83: goto label3;
            case 90: goto label3;
            case 91: goto label5;
            case 99: goto label3;
            case 101: goto label1;
            case 115: goto label3;
            default: goto label8;
        };

     label1:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i19);

        $i4 = $r1[$i2];

        $i3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i20 = $i4 - $i3;

        $i6 = i20 + 3;

        $i5 = i20 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i6, $i7);

        i21 = i19 + 2;

        $i8 = lengthof $r2;

        if $i8 != 38 goto label2;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_ANNOTATION_RETENTIONPOLICY>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label2;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i21);

        $i11 = $r4[$i9];

        $i10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i22 = $i11 - $i10;

        $i13 = i22 + 3;

        $i12 = i22 + 1;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i12);

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i13, $i14);

        $l15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l16 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Annotation: long getRetentionPolicy(char[])>($r5);

        $l17 = $l15 | $l16;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = $l17;

     label2:
        i23 = i21 + 2;

        goto label9;

     label3:
        i23 = i19 + 2;

        goto label9;

     label4:
        i23 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanAnnotation(int,boolean,boolean)>(i19, 0, 0);

        goto label9;

     label5:
        $i18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i19);

        i23 = i19 + 2;

        i24 = 0;

        goto label7;

     label6:
        i23 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanElementValue(int)>(i23);

        i24 = i24 + 1;

     label7:
        if i24 < $i18 goto label6;

        goto label9;

     label8:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label9:
        return i23;
    }

    private int readTargetValue(int)
    {
        java.lang.IllegalStateException $r6;
        int[] $r1, $r4;
        boolean $z0;
        long $l15, $l16, $l17, $l19, $l20;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i18, i21, i22, i23, i24, i25, i26;
        char[] $r2, $r3, $r5;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u1At(int)>(i0);

        i21 = i0 + 1;

        lookupswitch($i1)
        {
            case 64: goto label04;
            case 66: goto label03;
            case 67: goto label03;
            case 68: goto label03;
            case 70: goto label03;
            case 73: goto label03;
            case 74: goto label03;
            case 83: goto label03;
            case 90: goto label03;
            case 91: goto label05;
            case 99: goto label03;
            case 101: goto label01;
            case 115: goto label03;
            default: goto label09;
        };

     label01:
        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i21);

        $i4 = $r1[$i2];

        $i3 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i22 = $i4 - $i3;

        $i6 = i22 + 3;

        $i5 = i22 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i6, $i7);

        i23 = i21 + 2;

        $i8 = lengthof $r2;

        if $i8 != 34 goto label02;

        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_ANNOTATION_ELEMENTTYPE>;

        $z0 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z0 == 0 goto label02;

        $r4 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i23);

        $i11 = $r4[$i9];

        $i10 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i24 = $i11 - $i10;

        $i13 = i24 + 3;

        $i12 = i24 + 1;

        $i14 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i12);

        $r5 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i13, $i14);

        $l15 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l16 = staticinvoke <org.eclipse.jdt.internal.compiler.ast.Annotation: long getTargetElementType(char[])>($r5);

        $l17 = $l15 | $l16;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = $l17;

     label02:
        i25 = i23 + 2;

        goto label10;

     label03:
        i25 = i21 + 2;

        goto label10;

     label04:
        i25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanAnnotation(int,boolean,boolean)>(i21, 0, 0);

        goto label10;

     label05:
        $i18 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i21);

        i25 = i21 + 2;

        if $i18 != 0 goto label06;

        $l19 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l20 = $l19 | 34359738368L;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = $l20;

        goto label10;

     label06:
        i26 = 0;

        goto label08;

     label07:
        i25 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readTargetValue(int)>(i25);

        i26 = i26 + 1;

     label08:
        if i26 < $i18 goto label07;

        goto label10;

     label09:
        $r6 = new java.lang.IllegalStateException;

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>()>();

        throw $r6;

     label10:
        return i25;
    }

    private int scanAnnotation(int, boolean, boolean)
    {
        int[] $r1;
        boolean z0, z1, $z2, $z3, $z4, $z5, $z6;
        long $l11, $l12, $l13, $l14, $l17, $l18;
        int i0, $i1, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i15, $i16, i19, i20, i21, i22, i23;
        char[] $r2, $r3, $r4, $r5, $r6, $r7;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        i0 := @parameter0: int;

        z1 := @parameter1: boolean;

        z0 := @parameter2: boolean;

        $r1 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int[] constantPoolOffsets>;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i0);

        $i3 = $r1[$i1];

        $i2 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int structOffset>;

        i4 = $i3 - $i2;

        $i6 = i4 + 3;

        $i5 = i4 + 1;

        $i7 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i5);

        $r2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] utf8At(int,int)>($i6, $i7);

        if z0 == 0 goto label1;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] typename> = $r2;

     label1:
        $i8 = i0 + 2;

        $i9 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>($i8);

        i19 = i0 + 4;

        if z1 == 0 goto label7;

        if z0 == 0 goto label7;

        $i10 = lengthof $r2;

        lookupswitch($i10)
        {
            case 22: goto label2;
            case 29: goto label3;
            case 32: goto label5;
            case 33: goto label4;
            default: goto label7;
        };

     label2:
        $r7 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_DEPRECATED>;

        $z6 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r7);

        if $z6 == 0 goto label7;

        $l17 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l18 = $l17 | 70368744177664L;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = $l18;

        return i19;

     label3:
        $r6 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_ANNOTATION_TARGET>;

        $z5 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r6);

        if $z5 == 0 goto label7;

        i20 = i19 + 2;

        $i16 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readTargetValue(int)>(i20);

        return $i16;

     label4:
        $r3 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_ANNOTATION_DOCUMENTED>;

        $z2 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r3);

        if $z2 == 0 goto label7;

        $l11 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l12 = $l11 | 140737488355328L;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = $l12;

        return i19;

     label5:
        $r4 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_ANNOTATION_RETENTION>;

        $z3 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r4);

        if $z3 == 0 goto label6;

        i21 = i19 + 2;

        $i15 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int readRetentionPolicy(int)>(i21);

        return $i15;

     label6:
        $r5 = <org.eclipse.jdt.internal.compiler.codegen.ConstantPool: char[] JAVA_LANG_ANNOTATION_INHERITED>;

        $z4 = staticinvoke <org.eclipse.jdt.core.compiler.CharOperation: boolean equals(char[],char[])>($r2, $r5);

        if $z4 == 0 goto label7;

        $l13 = r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits>;

        $l14 = $l13 | 281474976710656L;

        r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: long standardAnnotationTagBits> = $l14;

        return i19;

     label7:
        i22 = 0;

        goto label9;

     label8:
        i23 = i19 + 2;

        i19 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanElementValue(int)>(i23);

        i22 = i22 + 1;

     label9:
        if i22 < $i9 goto label8;

        return i19;
    }

    private int scanElementValue(int)
    {
        java.lang.IllegalStateException $r1;
        int i0, $i1, $i2, i3, i4, i5;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r0;

        r0 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        i0 := @parameter0: int;

        $i1 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u1At(int)>(i0);

        i3 = i0 + 1;

        lookupswitch($i1)
        {
            case 64: goto label3;
            case 66: goto label1;
            case 67: goto label1;
            case 68: goto label1;
            case 70: goto label1;
            case 73: goto label1;
            case 74: goto label1;
            case 83: goto label1;
            case 90: goto label1;
            case 91: goto label4;
            case 99: goto label1;
            case 101: goto label2;
            case 115: goto label1;
            default: goto label7;
        };

     label1:
        i4 = i3 + 2;

        goto label8;

     label2:
        i4 = i3 + 4;

        goto label8;

     label3:
        i4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanAnnotation(int,boolean,boolean)>(i3, 0, 0);

        goto label8;

     label4:
        $i2 = virtualinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int u2At(int)>(i3);

        i4 = i3 + 2;

        i5 = 0;

        goto label6;

     label5:
        i4 = specialinvoke r0.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: int scanElementValue(int)>(i4);

        i5 = i5 + 1;

     label6:
        if i5 < $i2 goto label5;

        goto label8;

     label7:
        $r1 = new java.lang.IllegalStateException;

        specialinvoke $r1.<java.lang.IllegalStateException: void <init>()>();

        throw $r1;

     label8:
        return i4;
    }

    public java.lang.String toString()
    {
        org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] $r3, $r5, $r6;
        java.lang.StringBuffer $r0;
        int i0, i1;
        char[] $r2;
        org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo $r7;
        java.lang.String $r4;
        org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo r1;

        r1 := @this: org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $r2 = r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: char[] typename>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[])>($r2);

        $r3 = r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        if $r3 == null goto label4;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(40);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\n\t");

        i1 = 0;

        $r5 = r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        i0 = lengthof $r5;

        goto label3;

     label1:
        if i1 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",\n\t");

     label2:
        $r6 = r1.<org.eclipse.jdt.internal.compiler.classfmt.AnnotationInfo: org.eclipse.jdt.internal.compiler.classfmt.ElementValuePairInfo[] pairs>;

        $r7 = $r6[i1];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        i1 = i1 + 1;

     label3:
        if i1 < i0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

     label4:
        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
