public class nu.xom.Builder extends java.lang.Object
{
    private org.xml.sax.XMLReader parser;
    private nu.xom.NodeFactory factory;
    private static double xercesVersion;
    private static java.lang.String[] parsers;
    private static java.lang.String fileURLPrefix;

    public void <init>()
    {
        nu.xom.Builder r0;

        r0 := @this: nu.xom.Builder;

        specialinvoke r0.<nu.xom.Builder: void <init>(boolean)>(0);

        return;
    }

    public void <init>(boolean)
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader $r1;
        boolean z0;

        r0 := @this: nu.xom.Builder;

        z0 := @parameter0: boolean;

        $r1 = staticinvoke <nu.xom.Builder: org.xml.sax.XMLReader findParser(boolean)>(z0);

        specialinvoke r0.<nu.xom.Builder: void <init>(org.xml.sax.XMLReader,boolean,nu.xom.NodeFactory)>($r1, z0, null);

        return;
    }

    public void <init>(boolean, nu.xom.NodeFactory)
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader $r1;
        nu.xom.NodeFactory r2;
        boolean z0;

        r0 := @this: nu.xom.Builder;

        z0 := @parameter0: boolean;

        r2 := @parameter1: nu.xom.NodeFactory;

        $r1 = staticinvoke <nu.xom.Builder: org.xml.sax.XMLReader findParser(boolean)>(z0);

        specialinvoke r0.<nu.xom.Builder: void <init>(org.xml.sax.XMLReader,boolean,nu.xom.NodeFactory)>($r1, z0, r2);

        return;
    }

    static org.xml.sax.XMLReader findParser(boolean)
    {
        java.lang.String[] $r5, $r19;
        org.xml.sax.XMLReader $r4, $r7, $r18, $r22, $r23;
        java.lang.InstantiationException $r12;
        int i0, $i1;
        nu.xom.XML1_0Parser $r20;
        java.lang.String $r6;
        java.lang.NoClassDefFoundError $r3, $r9, $r14;
        boolean z0;
        java.lang.IllegalAccessException $r10;
        org.xml.sax.SAXException $r1, $r8, $r13, $r17;
        nu.xom.XMLException $r21;
        java.lang.ClassNotFoundException $r11;
        java.lang.Class $r15;
        java.lang.Object $r16;

        z0 := @parameter0: boolean;

     label01:
        $r20 = new nu.xom.XML1_0Parser;

        specialinvoke $r20.<nu.xom.XML1_0Parser: void <init>()>();

        $r22 = (org.xml.sax.XMLReader) $r20;

        staticinvoke <nu.xom.Builder: void setupParser(org.xml.sax.XMLReader,boolean)>($r22, z0);

     label02:
        $r23 = (org.xml.sax.XMLReader) $r20;

        return $r23;

     label03:
        $r17 := @caughtexception;

        goto label05;

     label04:
        $r14 := @caughtexception;

     label05:
        $r15 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("nu.xom.JDK15XML1_0Parser");

        $r16 = virtualinvoke $r15.<java.lang.Class: java.lang.Object newInstance()>();

        $r18 = (org.xml.sax.XMLReader) $r16;

        staticinvoke <nu.xom.Builder: void setupParser(org.xml.sax.XMLReader,boolean)>($r18, z0);

     label06:
        return $r18;

     label07:
        $r13 := @caughtexception;

        goto label12;

     label08:
        $r12 := @caughtexception;

        goto label12;

     label09:
        $r11 := @caughtexception;

        goto label12;

     label10:
        $r10 := @caughtexception;

        goto label12;

     label11:
        $r9 := @caughtexception;

     label12:
        i0 = 2;

     label13:
        $r19 = <nu.xom.Builder: java.lang.String[] parsers>;

        $i1 = lengthof $r19;

        if i0 >= $i1 goto label19;

     label14:
        $r5 = <nu.xom.Builder: java.lang.String[] parsers>;

        $r6 = $r5[i0];

        $r7 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader(java.lang.String)>($r6);

        staticinvoke <nu.xom.Builder: void setupParser(org.xml.sax.XMLReader,boolean)>($r7, z0);

     label15:
        return $r7;

     label16:
        $r8 := @caughtexception;

        goto label18;

     label17:
        $r3 := @caughtexception;

     label18:
        i0 = i0 + 1;

        goto label13;

     label19:
        $r4 = staticinvoke <org.xml.sax.helpers.XMLReaderFactory: org.xml.sax.XMLReader createXMLReader()>();

        staticinvoke <nu.xom.Builder: void setupParser(org.xml.sax.XMLReader,boolean)>($r4, z0);

     label20:
        return $r4;

     label21:
        $r1 := @caughtexception;

        $r21 = new nu.xom.XMLException;

        specialinvoke $r21.<nu.xom.XMLException: void <init>(java.lang.String,java.lang.Throwable)>("Could not find a suitable SAX2 parser", $r1);

        throw $r21;

        catch org.xml.sax.SAXException from label01 to label02 with label03;
        catch java.lang.NoClassDefFoundError from label01 to label02 with label04;
        catch org.xml.sax.SAXException from label05 to label06 with label07;
        catch java.lang.InstantiationException from label05 to label06 with label08;
        catch java.lang.ClassNotFoundException from label05 to label06 with label09;
        catch java.lang.IllegalAccessException from label05 to label06 with label10;
        catch java.lang.NoClassDefFoundError from label05 to label06 with label11;
        catch org.xml.sax.SAXException from label14 to label15 with label16;
        catch java.lang.NoClassDefFoundError from label14 to label15 with label17;
        catch org.xml.sax.SAXException from label19 to label20 with label21;
    }

    private static void setupParser(org.xml.sax.XMLReader, boolean) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.XMLFilter $r5;
        org.xml.sax.XMLReader r0, $r6, r10;
        java.lang.String $r2;
        boolean $z0, z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        nu.xom.Builder$ValidityRequired $r3;
        nu.xom.Builder$NamespaceWellformednessRequired $r4;
        org.xml.sax.SAXException $r7, $r8, $r9;
        java.lang.Class $r1;

        r0 := @parameter0: org.xml.sax.XMLReader;

        z1 := @parameter1: boolean;

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 1);

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        r10 = r0;

     label01:
        $z0 = r10 instanceof org.xml.sax.XMLFilter;

        if $z0 == 0 goto label03;

        $r5 = (org.xml.sax.XMLFilter) r10;

        $r6 = interfaceinvoke $r5.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        if $r6 != null goto label02;

        goto label03;

     label02:
        r10 = $r6;

        goto label01;

     label03:
        $r1 = virtualinvoke r10.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        if z1 != 0 goto label05;

        $z8 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.crimson.parser.XMLReaderImpl");

        if $z8 == 0 goto label04;

        $r4 = new nu.xom.Builder$NamespaceWellformednessRequired;

        specialinvoke $r4.<nu.xom.Builder$NamespaceWellformednessRequired: void <init>(nu.xom.Builder$1)>(null);

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r4);

        goto label06;

     label04:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-general-entities", 1);

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/external-parameter-entities", 1);

        goto label06;

     label05:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", 1);

        $r3 = new nu.xom.Builder$ValidityRequired;

        specialinvoke $r3.<nu.xom.Builder$ValidityRequired: void <init>(nu.xom.Builder$1)>(null);

        interfaceinvoke r0.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r3);

     label06:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/string-interning", 1);

     label07:
        goto label09;

     label08:
        $r9 := @caughtexception;

     label09:
        $z2 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("nu.xom.XML1_0Parser");

        if $z2 != 0 goto label10;

        $z3 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("nu.xom.JDK15XML1_0Parser");

        if $z3 != 0 goto label10;

        $z4 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xerces.parsers.SAXParser");

        if $z4 != 0 goto label10;

        $z5 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.org.apache.xerces.internal.parsers.SAXParser");

        if $z5 != 0 goto label10;

        $z6 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser");

        if $z6 != 0 goto label10;

        $z7 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser");

        if $z7 == 0 goto label16;

     label10:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/allow-java-encodings", 1);

     label11:
        goto label13;

     label12:
        $r8 := @caughtexception;

     label13:
        interfaceinvoke r0.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/standard-uri-conformant", 1);

     label14:
        goto label16;

     label15:
        $r7 := @caughtexception;

     label16:
        return;

        catch org.xml.sax.SAXException from label06 to label07 with label08;
        catch org.xml.sax.SAXException from label10 to label11 with label12;
        catch org.xml.sax.SAXException from label13 to label14 with label15;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader r1;

        r0 := @this: nu.xom.Builder;

        r1 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<nu.xom.Builder: void <init>(org.xml.sax.XMLReader,boolean)>(r1, 0);

        return;
    }

    public void <init>(nu.xom.NodeFactory)
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader $r1;
        nu.xom.NodeFactory r2;

        r0 := @this: nu.xom.Builder;

        r2 := @parameter0: nu.xom.NodeFactory;

        $r1 = staticinvoke <nu.xom.Builder: org.xml.sax.XMLReader findParser(boolean)>(0);

        specialinvoke r0.<nu.xom.Builder: void <init>(org.xml.sax.XMLReader,boolean,nu.xom.NodeFactory)>($r1, 0, r2);

        return;
    }

    public void <init>(org.xml.sax.XMLReader, boolean)
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader r1;
        boolean z0;

        r0 := @this: nu.xom.Builder;

        r1 := @parameter0: org.xml.sax.XMLReader;

        z0 := @parameter1: boolean;

        specialinvoke r0.<nu.xom.Builder: void <init>(org.xml.sax.XMLReader,boolean,nu.xom.NodeFactory)>(r1, z0, null);

        return;
    }

    public void <init>(org.xml.sax.XMLReader, boolean, nu.xom.NodeFactory)
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader r1;
        java.lang.StringBuffer $r5, $r8, $r9, $r10, $r13, $r16, $r17;
        java.lang.String $r7, $r11, $r15, $r18;
        boolean z0;
        nu.xom.NodeFactory r2;
        org.xml.sax.SAXException $r3;
        nu.xom.XMLException $r4, $r12;
        java.lang.Class $r6, $r14;

        r0 := @this: nu.xom.Builder;

        r1 := @parameter0: org.xml.sax.XMLReader;

        z0 := @parameter1: boolean;

        r2 := @parameter2: nu.xom.NodeFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

     label1:
        staticinvoke <nu.xom.Builder: void setupParser(org.xml.sax.XMLReader,boolean)>(r1, z0);

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        if z0 == 0 goto label4;

        $r12 = new nu.xom.XMLException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not support validation.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<nu.xom.XMLException: void <init>(java.lang.String,java.lang.Throwable)>($r18, $r3);

        throw $r12;

     label4:
        $r4 = new nu.xom.XMLException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not support the entity resolution");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" features XOM requires.");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<nu.xom.XMLException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r3);

        throw $r4;

     label5:
        r0.<nu.xom.Builder: org.xml.sax.XMLReader parser> = r1;

        r0.<nu.xom.Builder: nu.xom.NodeFactory factory> = r2;

        specialinvoke r0.<nu.xom.Builder: void setHandlers()>();

        return;

        catch org.xml.sax.SAXException from label1 to label2 with label3;
    }

    private static boolean knownGoodParser(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLFilter r8;
        java.lang.String[] $r3, $r9;
        org.xml.sax.XMLReader r0, $r5;
        byte $b0;
        int i1, $i2, $i3;
        java.lang.String $r2, $r4, r7;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        double $d0;
        java.lang.Class $r1, $r6;

        r0 := @parameter0: org.xml.sax.XMLReader;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        r7 = $r2;

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xml.resolver.tools.ResolvingXMLFilter");

        if $z0 == 0 goto label1;

        r8 = (org.xml.sax.XMLFilter) r0;

        $r5 = interfaceinvoke r8.<org.xml.sax.XMLFilter: org.xml.sax.XMLReader getParent()>();

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

     label1:
        $z1 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("gnu.xml.aelfred2.XmlReader");

        if $z1 == 0 goto label2;

        return 0;

     label2:
        $z2 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("net.sf.saxon.aelfred.SAXDriver");

        if $z2 == 0 goto label3;

        return 0;

     label3:
        $z3 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("com.icl.saxon.aelfred.SAXDriver");

        if $z3 == 0 goto label4;

        return 0;

     label4:
        $z4 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xerces.parsers.SAXParser");

        if $z4 == 0 goto label5;

        $d0 = <nu.xom.Builder: double xercesVersion>;

        $b0 = $d0 cmpl 2.4;

        $i3 = (int) $b0;

        if $i3 < 0 goto label5;

        return 0;

     label5:
        i1 = 0;

     label6:
        $r9 = <nu.xom.Builder: java.lang.String[] parsers>;

        $i2 = lengthof $r9;

        if i1 >= $i2 goto label8;

        $r3 = <nu.xom.Builder: java.lang.String[] parsers>;

        $r4 = $r3[i1];

        $z5 = virtualinvoke r7.<java.lang.String: boolean equals(java.lang.Object)>($r4);

        if $z5 == 0 goto label7;

        return 1;

     label7:
        i1 = i1 + 1;

        goto label6;

     label8:
        return 0;
    }

    private void setHandlers()
    {
        nu.xom.Builder r0;
        org.xml.sax.XMLReader $r2, $r6, $r7, $r20, $r21, $r22;
        java.lang.String $r9, $r15;
        boolean $z0, $z1, $z2;
        nu.xom.XOMHandler $r4, r19;
        nu.xom.NonVerifyingHandler $r11;
        nu.xom.NodeFactory $r1, $r3, $r5, $r10, $r12, $r13, r18;
        org.xml.sax.SAXException $r16, $r17;
        java.lang.Class $r8, $r14;

        r0 := @this: nu.xom.Builder;

        $r1 = r0.<nu.xom.Builder: nu.xom.NodeFactory factory>;

        if $r1 == null goto label01;

        $r13 = r0.<nu.xom.Builder: nu.xom.NodeFactory factory>;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $z2 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>("nu.xom.NodeFactory");

        if $z2 == 0 goto label03;

     label01:
        $r2 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        $z0 = staticinvoke <nu.xom.Builder: boolean knownGoodParser(org.xml.sax.XMLReader)>($r2);

        if $z0 == 0 goto label03;

        r18 = r0.<nu.xom.Builder: nu.xom.NodeFactory factory>;

        if r18 != null goto label02;

        $r12 = new nu.xom.NodeFactory;

        specialinvoke $r12.<nu.xom.NodeFactory: void <init>()>();

        r18 = $r12;

     label02:
        $r11 = new nu.xom.NonVerifyingHandler;

        specialinvoke $r11.<nu.xom.NonVerifyingHandler: void <init>(nu.xom.NodeFactory)>(r18);

        r19 = $r11;

        goto label05;

     label03:
        $r3 = r0.<nu.xom.Builder: nu.xom.NodeFactory factory>;

        if $r3 != null goto label04;

        $r10 = new nu.xom.NodeFactory;

        specialinvoke $r10.<nu.xom.NodeFactory: void <init>()>();

        r0.<nu.xom.Builder: nu.xom.NodeFactory factory> = $r10;

     label04:
        $r4 = new nu.xom.XOMHandler;

        $r5 = r0.<nu.xom.Builder: nu.xom.NodeFactory factory>;

        specialinvoke $r4.<nu.xom.XOMHandler: void <init>(nu.xom.NodeFactory)>($r5);

        r19 = $r4;

     label05:
        $r20 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r20.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>(r19);

        $r21 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r21.<org.xml.sax.XMLReader: void setDTDHandler(org.xml.sax.DTDHandler)>(r19);

     label06:
        $r22 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r22.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/lexical-handler", r19);

     label07:
        goto label09;

     label08:
        $r17 := @caughtexception;

     label09:
        $r6 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r6.<org.xml.sax.XMLReader: void setProperty(java.lang.String,java.lang.Object)>("http://xml.org/sax/properties/declaration-handler", r19);

        $r7 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        $r8 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.crimson.parser.XMLReaderImpl");

        if $z1 == 0 goto label10;

        r19.<nu.xom.XOMHandler: boolean usingCrimson> = 1;

     label10:
        goto label12;

     label11:
        $r16 := @caughtexception;

     label12:
        return;

        catch org.xml.sax.SAXException from label06 to label07 with label08;
        catch org.xml.sax.SAXException from label09 to label10 with label11;
    }

    public nu.xom.Document build(java.lang.String) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r0;
        org.xml.sax.InputSource $r2;
        java.lang.String $r1, r4;
        nu.xom.Document $r3;

        r0 := @this: nu.xom.Builder;

        r4 := @parameter0: java.lang.String;

        $r1 = specialinvoke r0.<nu.xom.Builder: java.lang.String canonicalizeURL(java.lang.String)>(r4);

        $r2 = new org.xml.sax.InputSource;

        specialinvoke $r2.<org.xml.sax.InputSource: void <init>(java.lang.String)>($r1);

        $r3 = specialinvoke r0.<nu.xom.Builder: nu.xom.Document build(org.xml.sax.InputSource)>($r2);

        return $r3;
    }

    public nu.xom.Document build(java.io.InputStream) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r2;
        org.xml.sax.InputSource $r1;
        nu.xom.Document $r3;
        java.lang.NullPointerException $r4;
        java.io.InputStream r0;

        r2 := @this: nu.xom.Builder;

        r0 := @parameter0: java.io.InputStream;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null InputStream");

        throw $r4;

     label1:
        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r0);

        $r3 = specialinvoke r2.<nu.xom.Builder: nu.xom.Document build(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public nu.xom.Document build(java.io.InputStream, java.lang.String) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r2;
        org.xml.sax.InputSource $r0;
        java.lang.String $r4, r5;
        nu.xom.Document $r3;
        java.io.InputStream r1;

        r2 := @this: nu.xom.Builder;

        r1 := @parameter0: java.io.InputStream;

        r5 := @parameter1: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.InputStream)>(r1);

        if r5 == null goto label1;

        $r4 = specialinvoke r2.<nu.xom.Builder: java.lang.String canonicalizeURL(java.lang.String)>(r5);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r4);

     label1:
        $r3 = specialinvoke r2.<nu.xom.Builder: nu.xom.Document build(org.xml.sax.InputSource)>($r0);

        return $r3;
    }

    public nu.xom.Document build(java.io.File) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r6;
        byte[] $r15;
        java.lang.IndexOutOfBoundsException $r20;
        byte $b4;
        java.lang.Throwable $r19;
        java.lang.StringBuffer $r12, $r13, r22, $r24, $r25, $r26, $r27;
        int $i0, $i5, $i6, i7, i8, $i9, $i10, $i11, $i12, $i14, $i15, $i17, $i18, $i20, $i21;
        java.lang.String $r2, $r4, $r5, $r8, $r11, $r14, $r16, $r17, $r18;
        char c1, $c2, $c3;
        java.io.FileInputStream $r23;
        java.io.File r1;
        nu.xom.Document $r7;

        r6 := @this: nu.xom.Builder;

        r1 := @parameter0: java.io.File;

        $r23 = new java.io.FileInputStream;

        specialinvoke $r23.<java.io.FileInputStream: void <init>(java.io.File)>(r1);

        $r2 = virtualinvoke r1.<java.io.File: java.lang.String getAbsolutePath()>();

        $r24 = new java.lang.StringBuffer;

        $r4 = <nu.xom.Builder: java.lang.String fileURLPrefix>;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        r22 = $r24;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        c1 = <java.io.File: char separatorChar>;

        i7 = 0;

     label001:
        if i7 >= $i0 goto label107;

        $c2 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i7);

        $i9 = (int) $c2;

        $i10 = (int) c1;

        if $i9 != $i10 goto label002;

        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        goto label106;

     label002:
        $i11 = (int) $c2;

        tableswitch($i11)
        {
            case 32: goto label003;
            case 33: goto label004;
            case 34: goto label005;
            case 35: goto label006;
            case 36: goto label007;
            case 37: goto label008;
            case 38: goto label009;
            case 39: goto label010;
            case 40: goto label011;
            case 41: goto label012;
            case 42: goto label013;
            case 43: goto label014;
            case 44: goto label015;
            case 45: goto label016;
            case 46: goto label017;
            case 47: goto label018;
            case 48: goto label019;
            case 49: goto label020;
            case 50: goto label021;
            case 51: goto label022;
            case 52: goto label023;
            case 53: goto label024;
            case 54: goto label025;
            case 55: goto label026;
            case 56: goto label027;
            case 57: goto label028;
            case 58: goto label029;
            case 59: goto label030;
            case 60: goto label031;
            case 61: goto label032;
            case 62: goto label033;
            case 63: goto label034;
            case 64: goto label035;
            case 65: goto label036;
            case 66: goto label037;
            case 67: goto label038;
            case 68: goto label039;
            case 69: goto label040;
            case 70: goto label041;
            case 71: goto label042;
            case 72: goto label043;
            case 73: goto label044;
            case 74: goto label045;
            case 75: goto label046;
            case 76: goto label047;
            case 77: goto label048;
            case 78: goto label049;
            case 79: goto label050;
            case 80: goto label051;
            case 81: goto label052;
            case 82: goto label053;
            case 83: goto label054;
            case 84: goto label055;
            case 85: goto label056;
            case 86: goto label057;
            case 87: goto label058;
            case 88: goto label059;
            case 89: goto label060;
            case 90: goto label061;
            case 91: goto label062;
            case 92: goto label063;
            case 93: goto label064;
            case 94: goto label065;
            case 95: goto label066;
            case 96: goto label067;
            case 97: goto label068;
            case 98: goto label069;
            case 99: goto label070;
            case 100: goto label071;
            case 101: goto label072;
            case 102: goto label073;
            case 103: goto label074;
            case 104: goto label075;
            case 105: goto label076;
            case 106: goto label077;
            case 107: goto label078;
            case 108: goto label079;
            case 109: goto label080;
            case 110: goto label081;
            case 111: goto label082;
            case 112: goto label083;
            case 113: goto label084;
            case 114: goto label085;
            case 115: goto label086;
            case 116: goto label087;
            case 117: goto label088;
            case 118: goto label089;
            case 119: goto label090;
            case 120: goto label091;
            case 121: goto label092;
            case 122: goto label093;
            case 123: goto label094;
            case 124: goto label095;
            case 125: goto label096;
            case 126: goto label097;
            default: goto label098;
        };

     label003:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%20");

        goto label106;

     label004:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label005:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%22");

        goto label106;

     label006:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%23");

        goto label106;

     label007:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label008:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%25");

        goto label106;

     label009:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(38);

        goto label106;

     label010:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label011:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label012:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label013:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label014:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%2B");

        goto label106;

     label015:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label016:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label017:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label018:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%2F");

        goto label106;

     label019:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label020:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label021:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label022:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label023:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label024:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label025:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label026:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label027:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label028:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label029:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label030:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label031:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3C");

        goto label106;

     label032:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label033:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3E");

        goto label106;

     label034:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%3F");

        goto label106;

     label035:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%40");

        goto label106;

     label036:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label037:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label038:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label039:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label040:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label041:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label042:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label043:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label044:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label045:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label046:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label047:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label048:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label049:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label050:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label051:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label052:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label053:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label054:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label055:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label056:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label057:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label058:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label059:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label060:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label061:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label062:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%5B");

        goto label106;

     label063:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%5C");

        goto label106;

     label064:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%5D");

        goto label106;

     label065:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%5E");

        goto label106;

     label066:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label067:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%60");

        goto label106;

     label068:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label069:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label070:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label071:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label072:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label073:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label074:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label075:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label076:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label077:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label078:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label079:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label080:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label081:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label082:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label083:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label084:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label085:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label086:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label087:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label088:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label089:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label090:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label091:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label092:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label093:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label094:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%7B");

        goto label106;

     label095:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%7C");

        goto label106;

     label096:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("%7D");

        goto label106;

     label097:
        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c2);

        goto label106;

     label098:
        $i12 = (int) $c2;

        $i14 = (int) 55296;

        if $i12 < $i14 goto label099;

        $i15 = (int) $c2;

        $i17 = (int) 57343;

        if $i15 <= $i17 goto label100;

     label099:
        $r8 = staticinvoke <nu.xom.URIUtil: java.lang.String percentEscape(char)>($c2);

        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label106;

     label100:
        $i18 = (int) $c2;

        $i20 = (int) 56319;

        if $i18 > $i20 goto label105;

        i7 = i7 + 1;

     label101:
        $c3 = virtualinvoke $r2.<java.lang.String: char charAt(int)>(i7);

        $r25 = new java.lang.StringBuffer;

        specialinvoke $r25.<java.lang.StringBuffer: void <init>()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c2);

        $r12 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF8");

        i8 = 0;

     label102:
        if i8 >= 4 goto label103;

        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(37);

        $b4 = $r15[i8];

        $i21 = (int) $b4;

        $r16 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i21);

        $r17 = virtualinvoke $r16.<java.lang.String: java.lang.String toUpperCase()>();

        $i5 = virtualinvoke $r17.<java.lang.String: int length()>();

        $i6 = $i5 - 2;

        $r18 = virtualinvoke $r17.<java.lang.String: java.lang.String substring(int)>($i6);

        virtualinvoke r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        i8 = i8 + 1;

        goto label102;

     label103:
        goto label106;

     label104:
        $r20 := @caughtexception;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>(int)>(0);

        r22 = $r26;

        goto label106;

     label105:
        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>(int)>(0);

        r22 = $r27;

     label106:
        i7 = i7 + 1;

        goto label001;

     label107:
        $r5 = virtualinvoke r22.<java.lang.StringBuffer: java.lang.String toString()>();

     label108:
        $r7 = virtualinvoke r6.<nu.xom.Builder: nu.xom.Document build(java.io.InputStream,java.lang.String)>($r23, $r5);

     label109:
        virtualinvoke $r23.<java.io.InputStream: void close()>();

        return $r7;

     label110:
        $r19 := @caughtexception;

     label111:
        virtualinvoke $r23.<java.io.InputStream: void close()>();

        throw $r19;

        catch java.lang.IndexOutOfBoundsException from label101 to label103 with label104;
        catch java.lang.Throwable from label108 to label109 with label110;
        catch java.lang.Throwable from label110 to label111 with label110;
    }

    public nu.xom.Document build(java.io.Reader) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r2;
        org.xml.sax.InputSource $r1;
        java.io.Reader r0;
        nu.xom.Document $r3;
        java.lang.NullPointerException $r4;

        r2 := @this: nu.xom.Builder;

        r0 := @parameter0: java.io.Reader;

        if r0 != null goto label1;

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("Attempted to build from null reader");

        throw $r4;

     label1:
        $r1 = new org.xml.sax.InputSource;

        specialinvoke $r1.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r0);

        $r3 = specialinvoke r2.<nu.xom.Builder: nu.xom.Document build(org.xml.sax.InputSource)>($r1);

        return $r3;
    }

    public nu.xom.Document build(java.io.Reader, java.lang.String) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r2;
        org.xml.sax.InputSource $r0;
        java.io.Reader r1;
        java.lang.String $r4, r5;
        nu.xom.Document $r3;

        r2 := @this: nu.xom.Builder;

        r1 := @parameter0: java.io.Reader;

        r5 := @parameter1: java.lang.String;

        $r0 = new org.xml.sax.InputSource;

        specialinvoke $r0.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(r1);

        if r5 == null goto label1;

        $r4 = specialinvoke r2.<nu.xom.Builder: java.lang.String canonicalizeURL(java.lang.String)>(r5);

        virtualinvoke $r0.<org.xml.sax.InputSource: void setSystemId(java.lang.String)>($r4);

     label1:
        $r3 = specialinvoke r2.<nu.xom.Builder: nu.xom.Document build(org.xml.sax.InputSource)>($r0);

        return $r3;
    }

    public nu.xom.Document build(java.lang.String, java.lang.String) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r2;
        java.io.StringReader $r0;
        java.lang.String r1, r3;
        nu.xom.Document $r4;

        r2 := @this: nu.xom.Builder;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r0 = new java.io.StringReader;

        specialinvoke $r0.<java.io.StringReader: void <init>(java.lang.String)>(r1);

        $r4 = virtualinvoke r2.<nu.xom.Builder: nu.xom.Document build(java.io.Reader,java.lang.String)>($r0, r3);

        return $r4;
    }

    private java.lang.String canonicalizeURL(java.lang.String)
    {
        nu.xom.Builder r17;
        java.net.URL $r0;
        java.lang.StringBuffer $r7, $r8, $r9, $r11, $r12, $r13, $r19, $r20, $r21, $r23;
        int $i0, $i1, $i2;
        java.lang.String r1, $r2, $r3, $r4, $r5, $r6, $r10, $r14, $r15, r18, $r22;
        boolean $z0, $z1;
        java.net.MalformedURLException $r16;

        r17 := @this: nu.xom.Builder;

        r1 := @parameter0: java.lang.String;

     label1:
        $r0 = new java.net.URL;

        specialinvoke $r0.<java.net.URL: void <init>(java.lang.String)>(r1);

        $r2 = virtualinvoke $r0.<java.net.URL: java.lang.String getFile()>();

        r18 = $r2;

        $r3 = virtualinvoke $r0.<java.net.URL: java.lang.String getProtocol()>();

        $r4 = virtualinvoke $r0.<java.net.URL: java.lang.String getHost()>();

        $r5 = virtualinvoke $r0.<java.net.URL: java.lang.String getQuery()>();

        $i0 = virtualinvoke $r0.<java.net.URL: int getPort()>();

        if $r2 == null goto label2;

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 == 0 goto label2;

        $r15 = "/";

        $z0 = virtualinvoke $r15.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 == 0 goto label3;

        $z1 = virtualinvoke r1.<java.lang.String: boolean endsWith(java.lang.String)>("/");

        if $z1 != 0 goto label3;

     label2:
        $r19 = new java.lang.StringBuffer;

        specialinvoke $r19.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(47);

        r18 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r22 = staticinvoke <nu.xom.URIUtil: java.lang.String removeDotSegments(java.lang.String)>(r18);

        $r23 = new java.lang.StringBuffer;

        $i2 = virtualinvoke r1.<java.lang.String: int length()>();

        specialinvoke $r23.<java.lang.StringBuffer: void <init>(int)>($i2);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("://");

        if $r4 == null goto label4;

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

     label4:
        if $i0 < 0 goto label5;

        $r11 = new java.lang.StringBuffer;

        specialinvoke $r11.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r14);

     label5:
        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        if $r5 == null goto label6;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("?");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

     label6:
        $r6 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

     label7:
        return $r6;

     label8:
        $r16 := @caughtexception;

        return r1;

        catch java.net.MalformedURLException from label1 to label7 with label8;
    }

    private nu.xom.Document build(org.xml.sax.InputSource) throws nu.xom.ParsingException, nu.xom.ValidityException, java.io.IOException
    {
        nu.xom.Builder r0;
        org.xml.sax.ErrorHandler $r10;
        nu.xom.ValidityException r45;
        boolean $z0, $z1, $z2, $z3;
        java.io.CharConversionException $r21;
        org.xml.sax.SAXException $r36;
        nu.xom.XMLException $r33;
        java.io.UTFDataFormatException $r25;
        java.lang.Throwable $r14;
        org.xml.sax.XMLReader $r1, $r5, $r9;
        int $i0, $i1, $i3, $i5;
        org.xml.sax.ContentHandler $r2;
        java.lang.String $r7, $r8, $r11, $r13, $r17, $r19, $r20, $r23, $r24, $r27, $r28, $r31, $r32, $r35, $r38, $r39, $r42, $r43;
        nu.xom.XOMHandler r3;
        org.xml.sax.InputSource r4;
        nu.xom.Builder$ValidityRequired r44;
        java.io.IOException $r15;
        java.lang.RuntimeException $r29;
        nu.xom.ParsingException $r46, $r47, $r48, $r49, $r50, $r51, $r52, $r53;
        org.xml.sax.SAXParseException $r40;
        java.lang.Class $r16;
        nu.xom.Document $r6;

        r0 := @this: nu.xom.Builder;

        r4 := @parameter0: org.xml.sax.InputSource;

        $r1 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.XMLReader: org.xml.sax.ContentHandler getContentHandler()>();

        r3 = (nu.xom.XOMHandler) $r2;

     label01:
        $r5 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>(r4);

        $r6 = virtualinvoke r3.<nu.xom.XOMHandler: nu.xom.Document getDocument()>();

     label02:
        virtualinvoke r3.<nu.xom.XOMHandler: void freeMemory()>();

        goto label13;

     label03:
        $r40 := @caughtexception;

        $r46 = new nu.xom.ParsingException;

        $r42 = virtualinvoke $r40.<org.xml.sax.SAXParseException: java.lang.String getMessage()>();

        $r43 = virtualinvoke $r40.<org.xml.sax.SAXParseException: java.lang.String getSystemId()>();

        $i0 = virtualinvoke $r40.<org.xml.sax.SAXParseException: int getLineNumber()>();

        $i1 = virtualinvoke $r40.<org.xml.sax.SAXParseException: int getColumnNumber()>();

        specialinvoke $r46.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,int,int,java.lang.Throwable)>($r42, $r43, $i0, $i1, $r40);

        throw $r46;

     label04:
        $r36 := @caughtexception;

        $r47 = new nu.xom.ParsingException;

        $r38 = virtualinvoke $r36.<org.xml.sax.SAXException: java.lang.String getMessage()>();

        $r39 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r47.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r38, $r39, $r36);

        throw $r47;

     label05:
        $r33 := @caughtexception;

        $r48 = new nu.xom.ParsingException;

        $r35 = virtualinvoke $r33.<nu.xom.XMLException: java.lang.String getMessage()>();

        specialinvoke $r48.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.Throwable)>($r35, $r33);

        throw $r48;

     label06:
        $r29 := @caughtexception;

        $r49 = new nu.xom.ParsingException;

        $r31 = virtualinvoke $r29.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r32 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r49.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r31, $r32, $r29);

        throw $r49;

     label07:
        $r25 := @caughtexception;

        $r50 = new nu.xom.ParsingException;

        $r27 = virtualinvoke $r25.<java.io.UTFDataFormatException: java.lang.String getMessage()>();

        $r28 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r50.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r27, $r28, $r25);

        throw $r50;

     label08:
        $r21 := @caughtexception;

        $r51 = new nu.xom.ParsingException;

        $r23 = virtualinvoke $r21.<java.io.CharConversionException: java.lang.String getMessage()>();

        $r24 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r51.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r23, $r24, $r21);

        throw $r51;

     label09:
        $r15 := @caughtexception;

        $r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.lang.String getName()>();

        $z3 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>("org.apache.xerces.util.URI$MalformedURIException");

        if $z3 == 0 goto label10;

        $r52 = new nu.xom.ParsingException;

        $r19 = virtualinvoke $r15.<java.io.IOException: java.lang.String getMessage()>();

        $r20 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        specialinvoke $r52.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>($r19, $r20, $r15);

        throw $r52;

     label10:
        throw $r15;

     label11:
        $r14 := @caughtexception;

     label12:
        virtualinvoke r3.<nu.xom.XOMHandler: void freeMemory()>();

        throw $r14;

     label13:
        if $r6 != null goto label14;

        $r53 = new nu.xom.ParsingException;

        $r13 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        $i3 = (int) -1;

        $i5 = (int) -1;

        specialinvoke $r53.<nu.xom.ParsingException: void <init>(java.lang.String,java.lang.String,int,int)>("Parser did not build document", $r13, $i3, $i5);

        throw $r53;

     label14:
        $r7 = "";

        $r8 = virtualinvoke $r6.<nu.xom.Document: java.lang.String getBaseURI()>();

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label15;

        $r11 = virtualinvoke r4.<org.xml.sax.InputSource: java.lang.String getSystemId()>();

        virtualinvoke $r6.<nu.xom.Document: void setBaseURI(java.lang.String)>($r11);

     label15:
        $r9 = r0.<nu.xom.Builder: org.xml.sax.XMLReader parser>;

        $r10 = interfaceinvoke $r9.<org.xml.sax.XMLReader: org.xml.sax.ErrorHandler getErrorHandler()>();

        $z1 = $r10 instanceof nu.xom.Builder$ValidityRequired;

        if $z1 == 0 goto label16;

        r44 = (nu.xom.Builder$ValidityRequired) $r10;

        $z2 = virtualinvoke r44.<nu.xom.Builder$ValidityRequired: boolean isValid()>();

        if $z2 != 0 goto label16;

        r45 = r44.<nu.xom.Builder$ValidityRequired: nu.xom.ValidityException vexception>;

        virtualinvoke r45.<nu.xom.ValidityException: void setDocument(nu.xom.Document)>($r6);

        virtualinvoke r44.<nu.xom.Builder$ValidityRequired: void reset()>();

        throw r45;

     label16:
        return $r6;

        catch org.xml.sax.SAXParseException from label01 to label02 with label03;
        catch org.xml.sax.SAXException from label01 to label02 with label04;
        catch nu.xom.XMLException from label01 to label02 with label05;
        catch java.lang.RuntimeException from label01 to label02 with label06;
        catch java.io.UTFDataFormatException from label01 to label02 with label07;
        catch java.io.CharConversionException from label01 to label02 with label08;
        catch java.io.IOException from label01 to label02 with label09;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label03 to label12 with label11;
    }

    public nu.xom.NodeFactory getNodeFactory()
    {
        nu.xom.Builder r0;
        nu.xom.NodeFactory $r1;

        r0 := @this: nu.xom.Builder;

        $r1 = r0.<nu.xom.Builder: nu.xom.NodeFactory factory>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Error $r5;
        java.lang.String[] $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r8;
        double $d0;
        java.lang.Exception $r6;

        <nu.xom.Builder: double xercesVersion> = 2.6;

     label1:
        $r0 = staticinvoke <org.apache.xerces.impl.Version: java.lang.String getVersion()>();

        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(9);

        $i0 = virtualinvoke $r1.<java.lang.String: int indexOf(java.lang.String)>(".");

        $i1 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        $r2 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i2 = $i0 + 1;

        $r3 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i2, $i1);

        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r3);

        if $i3 >= 10 goto label2;

        $i4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2);

        if $i4 >= 3 goto label2;

        $r4 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>(9, 12);

        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        <nu.xom.Builder: double xercesVersion> = $d0;

     label2:
        goto label5;

     label3:
        $r6 := @caughtexception;

        goto label5;

     label4:
        $r5 := @caughtexception;

     label5:
        $r7 = newarray (java.lang.String)[15];

        $r7[0] = "nu.xom.XML1_0Parser";

        $r7[1] = "nu.xom.JDK15XML1_0Parser";

        $r7[2] = "org.apache.xerces.parsers.SAXParser";

        $r7[3] = "org.apache.xerces.jaxp.SAXParserImpl$JAXPSAXParser";

        $r7[4] = "com.sun.org.apache.xerces.internal.jaxp.SAXParserImpl$JAXPSAXParser";

        $r7[5] = "com.sun.org.apache.xerces.internal.parsers.SAXParser";

        $r7[6] = "gnu.xml.aelfred2.XmlReader";

        $r7[7] = "org.apache.crimson.parser.XMLReaderImpl";

        $r7[8] = "com.bluecast.xml.Piccolo";

        $r7[9] = "oracle.xml.parser.v2.SAXParser";

        $r7[10] = "com.jclark.xml.sax.SAX2Driver";

        $r7[11] = "net.sf.saxon.aelfred.SAXDriver";

        $r7[12] = "com.icl.saxon.aelfred.SAXDriver";

        $r7[13] = "org.dom4j.io.aelfred2.SAXDriver";

        $r7[14] = "org.dom4j.io.aelfred.SAXDriver";

        <nu.xom.Builder: java.lang.String[] parsers> = $r7;

        <nu.xom.Builder: java.lang.String fileURLPrefix> = "file://";

        $r8 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("os.name", "Unix");

        $i5 = virtualinvoke $r8.<java.lang.String: int indexOf(java.lang.String)>("Windows");

        if $i5 < 0 goto label6;

        <nu.xom.Builder: java.lang.String fileURLPrefix> = "file:/";

     label6:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.Error from label1 to label2 with label4;
    }
}
