public abstract class com.hp.hpl.jena.sparql.algebra.op.OpExt extends com.hp.hpl.jena.sparql.algebra.op.OpBase
{
    protected final java.lang.String tag;

    public void <init>(java.lang.String)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpExt r0;
        java.lang.String r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.algebra.op.OpBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.algebra.op.OpExt: java.lang.String tag> = r1;

        return;
    }

    public abstract com.hp.hpl.jena.sparql.algebra.Op effectiveOp();

    public abstract com.hp.hpl.jena.sparql.engine.QueryIterator eval(com.hp.hpl.jena.sparql.engine.QueryIterator, com.hp.hpl.jena.sparql.engine.ExecutionContext);

    public final java.lang.String getName()
    {
        com.hp.hpl.jena.sparql.algebra.op.OpExt r0;
        java.lang.String $r1;

        r0 := @this: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        $r1 = r0.<com.hp.hpl.jena.sparql.algebra.op.OpExt: java.lang.String tag>;

        return $r1;
    }

    public final void visit(com.hp.hpl.jena.sparql.algebra.OpVisitor)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpExt r1;
        com.hp.hpl.jena.sparql.algebra.OpVisitor r0;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        r0 := @parameter0: com.hp.hpl.jena.sparql.algebra.OpVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.algebra.OpVisitor: void visit(com.hp.hpl.jena.sparql.algebra.op.OpExt)>(r1);

        return;
    }

    public void output(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.serializer.SerializationContext r3;
        org.apache.jena.atlas.io.IndentedWriter r0;
        int $i0, $i1, $i3;
        com.hp.hpl.jena.sparql.algebra.op.OpExt r1;
        java.lang.String $r2, $r4;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        r0 := @parameter0: org.apache.jena.atlas.io.IndentedWriter;

        r3 := @parameter1: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        $i0 = virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        $r2 = r1.<com.hp.hpl.jena.sparql.algebra.op.OpExt: java.lang.String tag>;

        $i3 = (int) -1;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void start(org.apache.jena.atlas.io.IndentedWriter,java.lang.String,int)>(r0, $r2, $i3);

        virtualinvoke r1.<com.hp.hpl.jena.sparql.algebra.op.OpExt: void outputArgs(org.apache.jena.atlas.io.IndentedWriter,com.hp.hpl.jena.sparql.serializer.SerializationContext)>(r0, r3);

        $r4 = r1.<com.hp.hpl.jena.sparql.algebra.op.OpExt: java.lang.String tag>;

        staticinvoke <com.hp.hpl.jena.sparql.sse.writers.WriterLib: void finish(org.apache.jena.atlas.io.IndentedWriter,java.lang.String)>(r0, $r4);

        $i1 = virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: int getRow()>();

        if $i0 == $i1 goto label1;

        virtualinvoke r0.<org.apache.jena.atlas.io.IndentedWriter: void ensureStartOfLine()>();

     label1:
        return;
    }

    public com.hp.hpl.jena.sparql.algebra.Op apply(com.hp.hpl.jena.sparql.algebra.Transform)
    {
        com.hp.hpl.jena.sparql.algebra.op.OpExt r1;
        com.hp.hpl.jena.sparql.algebra.Transform r2;
        com.hp.hpl.jena.sparql.ARQNotImplemented $r0;

        r1 := @this: com.hp.hpl.jena.sparql.algebra.op.OpExt;

        r2 := @parameter0: com.hp.hpl.jena.sparql.algebra.Transform;

        $r0 = new com.hp.hpl.jena.sparql.ARQNotImplemented;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.ARQNotImplemented: void <init>(java.lang.String)>("OpExt.appy(Transform)");

        throw $r0;
    }

    public abstract void outputArgs(org.apache.jena.atlas.io.IndentedWriter, com.hp.hpl.jena.sparql.serializer.SerializationContext);
}
