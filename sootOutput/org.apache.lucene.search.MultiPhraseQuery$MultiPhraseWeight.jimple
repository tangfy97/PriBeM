class org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight extends org.apache.lucene.search.Weight
{
    private final org.apache.lucene.search.similarities.Similarity similarity;
    private final org.apache.lucene.search.similarities.Similarity$SimWeight stats;
    private final java.util.Map termContexts;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.search.MultiPhraseQuery this$0;

    public void <init>(org.apache.lucene.search.MultiPhraseQuery, org.apache.lucene.search.IndexSearcher) throws java.io.IOException
    {
        org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight r0;
        java.lang.Object[] $r13;
        org.apache.lucene.index.Term r18;
        java.util.HashMap $r2;
        java.util.ArrayList $r6, $r7;
        org.apache.lucene.search.TermStatistics[] $r12, $r14;
        org.apache.lucene.search.MultiPhraseQuery r1;
        org.apache.lucene.search.similarities.Similarity $r4, $r9;
        java.util.Map $r19, $r23;
        int $i0, i1, i2;
        java.lang.String $r10;
        org.apache.lucene.index.Term[] r17;
        org.apache.lucene.search.TermStatistics $r21;
        boolean $z0;
        org.apache.lucene.search.similarities.Similarity$SimWeight $r15;
        java.util.Iterator $r8;
        org.apache.lucene.index.TermContext $r22, r24;
        org.apache.lucene.search.CollectionStatistics $r11;
        float $f0;
        java.lang.Object $r16, $r20;
        org.apache.lucene.search.IndexSearcher r3;
        org.apache.lucene.index.IndexReaderContext $r5;

        r0 := @this: org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight;

        r1 := @parameter0: org.apache.lucene.search.MultiPhraseQuery;

        r3 := @parameter1: org.apache.lucene.search.IndexSearcher;

        r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0> = r1;

        specialinvoke r0.<org.apache.lucene.search.Weight: void <init>()>();

        $r2 = new java.util.HashMap;

        specialinvoke $r2.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: java.util.Map termContexts> = $r2;

        $r4 = virtualinvoke r3.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.similarities.Similarity getSimilarity()>();

        r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity similarity> = $r4;

        $r5 = virtualinvoke r3.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.index.IndexReaderContext getTopReaderContext()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        $r7 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$000(org.apache.lucene.search.MultiPhraseQuery)>(r1);

        $r8 = virtualinvoke $r7.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r16 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r17 = (org.apache.lucene.index.Term[]) $r16;

        i1 = lengthof r17;

        i2 = 0;

     label2:
        if i2 >= i1 goto label4;

        r18 = r17[i2];

        $r19 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: java.util.Map termContexts>;

        $r20 = interfaceinvoke $r19.<java.util.Map: java.lang.Object get(java.lang.Object)>(r18);

        r24 = (org.apache.lucene.index.TermContext) $r20;

        if r24 != null goto label3;

        $r22 = staticinvoke <org.apache.lucene.index.TermContext: org.apache.lucene.index.TermContext build(org.apache.lucene.index.IndexReaderContext,org.apache.lucene.index.Term,boolean)>($r5, r18, 1);

        r24 = $r22;

        $r23 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: java.util.Map termContexts>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r18, $r22);

     label3:
        $r21 = virtualinvoke r3.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.TermStatistics termStatistics(org.apache.lucene.index.Term,org.apache.lucene.index.TermContext)>(r18, r24);

        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r21);

        i2 = i2 + 1;

        goto label2;

     label4:
        goto label1;

     label5:
        $r9 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity similarity>;

        $f0 = virtualinvoke r1.<org.apache.lucene.search.MultiPhraseQuery: float getBoost()>();

        $r10 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.lang.String access$100(org.apache.lucene.search.MultiPhraseQuery)>(r1);

        $r11 = virtualinvoke r3.<org.apache.lucene.search.IndexSearcher: org.apache.lucene.search.CollectionStatistics collectionStatistics(java.lang.String)>($r10);

        $i0 = virtualinvoke $r6.<java.util.ArrayList: int size()>();

        $r12 = newarray (org.apache.lucene.search.TermStatistics)[$i0];

        $r13 = virtualinvoke $r6.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>($r12);

        $r14 = (org.apache.lucene.search.TermStatistics[]) $r13;

        $r15 = virtualinvoke $r9.<org.apache.lucene.search.similarities.Similarity: org.apache.lucene.search.similarities.Similarity$SimWeight computeWeight(float,org.apache.lucene.search.CollectionStatistics,org.apache.lucene.search.TermStatistics[])>($f0, $r11, $r14);

        r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity$SimWeight stats> = $r15;

        return;
    }

    public org.apache.lucene.search.Query getQuery()
    {
        org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight r0;
        org.apache.lucene.search.MultiPhraseQuery $r1;

        r0 := @this: org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight;

        $r1 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        return $r1;
    }

    public float getValueForNormalization()
    {
        org.apache.lucene.search.similarities.Similarity$SimWeight $r1;
        float $f0;
        org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight r0;

        r0 := @this: org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight;

        $r1 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity$SimWeight stats>;

        $f0 = virtualinvoke $r1.<org.apache.lucene.search.similarities.Similarity$SimWeight: float getValueForNormalization()>();

        return $f0;
    }

    public void normalize(float, float)
    {
        org.apache.lucene.search.similarities.Similarity$SimWeight $r1;
        org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight r0;
        float f0, f1;

        r0 := @this: org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight;

        f0 := @parameter0: float;

        f1 := @parameter1: float;

        $r1 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity$SimWeight stats>;

        virtualinvoke $r1.<org.apache.lucene.search.similarities.Similarity$SimWeight: void normalize(float,float)>(f0, f1);

        return;
    }

    public org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext, boolean, boolean, org.apache.lucene.util.Bits) throws java.io.IOException
    {
        org.apache.lucene.index.Term r60, r61;
        java.lang.Integer $r35;
        org.apache.lucene.index.TermsEnum $r9;
        java.util.Map $r25, $r49, $r50;
        org.apache.lucene.index.Term[] r24;
        org.apache.lucene.search.similarities.Similarity$SimWeight $r14, $r18;
        java.lang.StringBuilder $r37, $r38, $r40, $r41, $r43, $r44;
        org.apache.lucene.index.AtomicReader $r1;
        org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight r3;
        java.lang.AssertionError $r47, $r58;
        java.util.ArrayList $r5, $r22, $r33, $r56;
        org.apache.lucene.search.MultiPhraseQuery $r4, $r6, $r10, $r11, $r13, $r21, $r32, $r55;
        org.apache.lucene.search.similarities.Similarity $r15, $r19;
        org.apache.lucene.search.ExactPhraseScorer $r17;
        java.lang.String $r7, $r39, $r42, $r45;
        org.apache.lucene.util.Bits r2;
        org.apache.lucene.index.DocsEnum $r46;
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq $r31;
        org.apache.lucene.search.SloppyPhraseScorer $r12;
        java.lang.IllegalStateException $r36;
        org.apache.lucene.search.UnionDocsAndPositionsEnum $r48;
        org.apache.lucene.index.DocsAndPositionsEnum $r30, r59;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        org.apache.lucene.index.Terms $r8;
        org.apache.lucene.util.BytesRef $r29, $r54;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, i11, i12, i13;
        org.apache.lucene.index.TermState $r28, $r53;
        org.apache.lucene.search.similarities.Similarity$SloppySimScorer $r16;
        org.apache.lucene.index.TermContext $r27, $r52;
        java.lang.Object $r23, $r26, $r34, $r51;
        org.apache.lucene.search.similarities.Similarity$ExactSimScorer $r20;
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.search.PhraseQuery$PostingsAndFreq[] $r57;

        r3 := @this: org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight;

        r0 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        z4 := @parameter1: boolean;

        z5 := @parameter2: boolean;

        r2 := @parameter3: org.apache.lucene.util.Bits;

        $z0 = <org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: boolean $assertionsDisabled>;

        if $z0 != 0 goto label01;

        $r55 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $r56 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$000(org.apache.lucene.search.MultiPhraseQuery)>($r55);

        $z3 = virtualinvoke $r56.<java.util.ArrayList: boolean isEmpty()>();

        if $z3 == 0 goto label01;

        $r58 = new java.lang.AssertionError;

        specialinvoke $r58.<java.lang.AssertionError: void <init>()>();

        throw $r58;

     label01:
        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r4 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $r5 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$000(org.apache.lucene.search.MultiPhraseQuery)>($r4);

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $r57 = newarray (org.apache.lucene.search.PhraseQuery$PostingsAndFreq)[$i0];

        $r6 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $r7 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.lang.String access$100(org.apache.lucene.search.MultiPhraseQuery)>($r6);

        $r8 = virtualinvoke $r1.<org.apache.lucene.index.AtomicReader: org.apache.lucene.index.Terms terms(java.lang.String)>($r7);

        if $r8 != null goto label02;

        return null;

     label02:
        $r9 = virtualinvoke $r8.<org.apache.lucene.index.Terms: org.apache.lucene.index.TermsEnum iterator(org.apache.lucene.index.TermsEnum)>(null);

        i11 = 0;

     label03:
        $i1 = lengthof $r57;

        if i11 >= $i1 goto label13;

        $r21 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $r22 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$000(org.apache.lucene.search.MultiPhraseQuery)>($r21);

        $r23 = virtualinvoke $r22.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        r24 = (org.apache.lucene.index.Term[]) $r23;

        $i5 = lengthof r24;

        if $i5 <= 1 goto label08;

        $r48 = new org.apache.lucene.search.UnionDocsAndPositionsEnum;

        $r49 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: java.util.Map termContexts>;

        specialinvoke $r48.<org.apache.lucene.search.UnionDocsAndPositionsEnum: void <init>(org.apache.lucene.util.Bits,org.apache.lucene.index.AtomicReaderContext,org.apache.lucene.index.Term[],java.util.Map,org.apache.lucene.index.TermsEnum)>(r2, r0, r24, $r49, $r9);

        r59 = $r48;

        i12 = 0;

        i13 = 0;

     label04:
        $i8 = lengthof r24;

        if i13 >= $i8 goto label07;

        r60 = r24[i13];

        $r50 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: java.util.Map termContexts>;

        $r51 = interfaceinvoke $r50.<java.util.Map: java.lang.Object get(java.lang.Object)>(r60);

        $r52 = (org.apache.lucene.index.TermContext) $r51;

        $i9 = r0.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r53 = virtualinvoke $r52.<org.apache.lucene.index.TermContext: org.apache.lucene.index.TermState get(int)>($i9);

        if $r53 != null goto label05;

        goto label06;

     label05:
        $r54 = virtualinvoke r60.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: void seekExact(org.apache.lucene.util.BytesRef,org.apache.lucene.index.TermState)>($r54, $r53);

        $i10 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: int docFreq()>();

        i12 = i12 + $i10;

     label06:
        i13 = i13 + 1;

        goto label04;

     label07:
        if i12 != 0 goto label12;

        return null;

     label08:
        r61 = r24[0];

        $r25 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: java.util.Map termContexts>;

        $r26 = interfaceinvoke $r25.<java.util.Map: java.lang.Object get(java.lang.Object)>(r61);

        $r27 = (org.apache.lucene.index.TermContext) $r26;

        $i6 = r0.<org.apache.lucene.index.AtomicReaderContext: int ord>;

        $r28 = virtualinvoke $r27.<org.apache.lucene.index.TermContext: org.apache.lucene.index.TermState get(int)>($i6);

        if $r28 != null goto label09;

        return null;

     label09:
        $r29 = virtualinvoke r61.<org.apache.lucene.index.Term: org.apache.lucene.util.BytesRef bytes()>();

        virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: void seekExact(org.apache.lucene.util.BytesRef,org.apache.lucene.index.TermState)>($r29, $r28);

        $r30 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsAndPositionsEnum docsAndPositions(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsAndPositionsEnum,int)>(r2, null, 0);

        r59 = $r30;

        if $r30 != null goto label11;

        $z2 = <org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: boolean $assertionsDisabled>;

        if $z2 != 0 goto label10;

        $r46 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: org.apache.lucene.index.DocsEnum docs(org.apache.lucene.util.Bits,org.apache.lucene.index.DocsEnum,int)>(r2, null, 0);

        if $r46 != null goto label10;

        $r47 = new java.lang.AssertionError;

        specialinvoke $r47.<java.lang.AssertionError: void <init>(java.lang.Object)>("termstate found but no term exists in reader");

        throw $r47;

     label10:
        $r36 = new java.lang.IllegalStateException;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field \"");

        $r39 = virtualinvoke r61.<org.apache.lucene.index.Term: java.lang.String field()>();

        $r40 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39);

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" was indexed without position data; cannot run PhraseQuery (term=");

        $r42 = virtualinvoke r61.<org.apache.lucene.index.Term: java.lang.String text()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r36.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r45);

        throw $r36;

     label11:
        i12 = virtualinvoke $r9.<org.apache.lucene.index.TermsEnum: int docFreq()>();

     label12:
        $r31 = new org.apache.lucene.search.PhraseQuery$PostingsAndFreq;

        $r32 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $r33 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: java.util.ArrayList access$200(org.apache.lucene.search.MultiPhraseQuery)>($r32);

        $r34 = virtualinvoke $r33.<java.util.ArrayList: java.lang.Object get(int)>(i11);

        $r35 = (java.lang.Integer) $r34;

        $i7 = virtualinvoke $r35.<java.lang.Integer: int intValue()>();

        specialinvoke $r31.<org.apache.lucene.search.PhraseQuery$PostingsAndFreq: void <init>(org.apache.lucene.index.DocsAndPositionsEnum,int,int,org.apache.lucene.index.Term[])>(r59, i12, $i7, r24);

        $r57[i11] = $r31;

        i11 = i11 + 1;

        goto label03;

     label13:
        $r10 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $i2 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: int access$300(org.apache.lucene.search.MultiPhraseQuery)>($r10);

        if $i2 != 0 goto label14;

        staticinvoke <org.apache.lucene.util.ArrayUtil: void mergeSort(java.lang.Comparable[])>($r57);

     label14:
        $r11 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $i3 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: int access$300(org.apache.lucene.search.MultiPhraseQuery)>($r11);

        if $i3 != 0 goto label16;

        $r17 = new org.apache.lucene.search.ExactPhraseScorer;

        $r19 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity similarity>;

        $r18 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity$SimWeight stats>;

        $r20 = virtualinvoke $r19.<org.apache.lucene.search.similarities.Similarity: org.apache.lucene.search.similarities.Similarity$ExactSimScorer exactSimScorer(org.apache.lucene.search.similarities.Similarity$SimWeight,org.apache.lucene.index.AtomicReaderContext)>($r18, r0);

        specialinvoke $r17.<org.apache.lucene.search.ExactPhraseScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.PhraseQuery$PostingsAndFreq[],org.apache.lucene.search.similarities.Similarity$ExactSimScorer)>(r3, $r57, $r20);

        $z1 = $r17.<org.apache.lucene.search.ExactPhraseScorer: boolean noDocs>;

        if $z1 == 0 goto label15;

        return null;

     label15:
        return $r17;

     label16:
        $r12 = new org.apache.lucene.search.SloppyPhraseScorer;

        $r13 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $i4 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: int access$300(org.apache.lucene.search.MultiPhraseQuery)>($r13);

        $r15 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity similarity>;

        $r14 = r3.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity$SimWeight stats>;

        $r16 = virtualinvoke $r15.<org.apache.lucene.search.similarities.Similarity: org.apache.lucene.search.similarities.Similarity$SloppySimScorer sloppySimScorer(org.apache.lucene.search.similarities.Similarity$SimWeight,org.apache.lucene.index.AtomicReaderContext)>($r14, r0);

        specialinvoke $r12.<org.apache.lucene.search.SloppyPhraseScorer: void <init>(org.apache.lucene.search.Weight,org.apache.lucene.search.PhraseQuery$PostingsAndFreq[],int,org.apache.lucene.search.similarities.Similarity$SloppySimScorer)>(r3, $r57, $i4, $r16);

        return $r12;
    }

    public org.apache.lucene.search.Explanation explain(org.apache.lucene.index.AtomicReaderContext, int) throws java.io.IOException
    {
        org.apache.lucene.search.Query $r14;
        org.apache.lucene.search.ComplexExplanation $r5, $r11;
        org.apache.lucene.search.similarities.Similarity$SimWeight $r8;
        org.apache.lucene.search.Scorer $r4;
        org.apache.lucene.search.Explanation $r25, $r30;
        float $f0, $f1;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18, $r22, $r23, $r26, $r27, $r28;
        org.apache.lucene.index.AtomicReader $r2;
        org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight r0;
        org.apache.lucene.search.MultiPhraseQuery $r6;
        org.apache.lucene.search.similarities.Similarity $r9, $r19;
        int i0, $i1, $i2, $i3;
        java.lang.Boolean $r31;
        java.lang.String $r21, $r24, $r29;
        org.apache.lucene.util.Bits $r3;
        org.apache.lucene.search.similarities.Similarity$SloppySimScorer $r10;
        java.lang.Class $r20;
        org.apache.lucene.search.SloppyPhraseScorer $r7;
        org.apache.lucene.index.AtomicReaderContext r1;

        r0 := @this: org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight;

        r1 := @parameter0: org.apache.lucene.index.AtomicReaderContext;

        i0 := @parameter1: int;

        $r2 = virtualinvoke r1.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        $r3 = virtualinvoke $r2.<org.apache.lucene.index.AtomicReader: org.apache.lucene.util.Bits getLiveDocs()>();

        $r4 = virtualinvoke r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.Scorer scorer(org.apache.lucene.index.AtomicReaderContext,boolean,boolean,org.apache.lucene.util.Bits)>(r1, 1, 0, $r3);

        if $r4 == null goto label3;

        $i1 = virtualinvoke $r4.<org.apache.lucene.search.Scorer: int advance(int)>(i0);

        if $i1 != i0 goto label3;

        $r6 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.MultiPhraseQuery this$0>;

        $i2 = staticinvoke <org.apache.lucene.search.MultiPhraseQuery: int access$300(org.apache.lucene.search.MultiPhraseQuery)>($r6);

        if $i2 != 0 goto label1;

        $i3 = virtualinvoke $r4.<org.apache.lucene.search.Scorer: int freq()>();

        $f1 = (float) $i3;

        goto label2;

     label1:
        $r7 = (org.apache.lucene.search.SloppyPhraseScorer) $r4;

        $f1 = virtualinvoke $r7.<org.apache.lucene.search.SloppyPhraseScorer: float sloppyFreq()>();

     label2:
        $r9 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity similarity>;

        $r8 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity$SimWeight stats>;

        $r10 = virtualinvoke $r9.<org.apache.lucene.search.similarities.Similarity: org.apache.lucene.search.similarities.Similarity$SloppySimScorer sloppySimScorer(org.apache.lucene.search.similarities.Similarity$SimWeight,org.apache.lucene.index.AtomicReaderContext)>($r8, r1);

        $r11 = new org.apache.lucene.search.ComplexExplanation;

        specialinvoke $r11.<org.apache.lucene.search.ComplexExplanation: void <init>()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("weight(");

        $r14 = virtualinvoke r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.Query getQuery()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") [");

        $r19 = r0.<org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: org.apache.lucene.search.similarities.Similarity similarity>;

        $r20 = virtualinvoke $r19.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getSimpleName()>();

        $r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("], result of:");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.lucene.search.ComplexExplanation: void setDescription(java.lang.String)>($r24);

        $r25 = new org.apache.lucene.search.Explanation;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("phraseFreq=");

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<org.apache.lucene.search.Explanation: void <init>(float,java.lang.String)>($f1, $r29);

        $r30 = virtualinvoke $r10.<org.apache.lucene.search.similarities.Similarity$SloppySimScorer: org.apache.lucene.search.Explanation explain(int,org.apache.lucene.search.Explanation)>(i0, $r25);

        virtualinvoke $r11.<org.apache.lucene.search.ComplexExplanation: void addDetail(org.apache.lucene.search.Explanation)>($r30);

        $f0 = virtualinvoke $r30.<org.apache.lucene.search.Explanation: float getValue()>();

        virtualinvoke $r11.<org.apache.lucene.search.ComplexExplanation: void setValue(float)>($f0);

        $r31 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r11.<org.apache.lucene.search.ComplexExplanation: void setMatch(java.lang.Boolean)>($r31);

        return $r11;

     label3:
        $r5 = new org.apache.lucene.search.ComplexExplanation;

        specialinvoke $r5.<org.apache.lucene.search.ComplexExplanation: void <init>(boolean,float,java.lang.String)>(0, 0.0F, "no matching term");

        return $r5;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/search/MultiPhraseQuery;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.search.MultiPhraseQuery$MultiPhraseWeight: boolean $assertionsDisabled> = $z1;

        return;
    }
}
