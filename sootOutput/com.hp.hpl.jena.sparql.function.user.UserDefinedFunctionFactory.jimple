public class com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory extends java.lang.Object implements com.hp.hpl.jena.sparql.function.FunctionFactory
{
    private static com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory factory;
    private java.util.Map definitions;
    private boolean preserveDependencies;

    public static com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory getFactory()
    {
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory $r0;

        $r0 = <com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory factory>;

        return $r0;
    }

    private void <init>()
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions> = $r1;

        r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: boolean preserveDependencies> = 0;

        return;
    }

    public boolean getPreserveDependencies()
    {
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        $z0 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: boolean preserveDependencies>;

        return $z0;
    }

    public void setPreserveDependencies(boolean)
    {
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        boolean z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        z0 := @parameter0: boolean;

        r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: boolean preserveDependencies> = z0;

        return;
    }

    public com.hp.hpl.jena.sparql.function.Function create(java.lang.String)
    {
        com.hp.hpl.jena.sparql.sse.builders.ExprBuildException $r6;
        com.hp.hpl.jena.sparql.function.Function $r5;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        java.util.Map $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r7, $r8, $r9, $r10;
        java.lang.String r1, $r11;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition r4;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition) $r3;

        if r4 != null goto label1;

        $r6 = new com.hp.hpl.jena.sparql.sse.builders.ExprBuildException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Function <");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> not known by this function factory");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<com.hp.hpl.jena.sparql.sse.builders.ExprBuildException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label1:
        $r5 = virtualinvoke r4.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition: com.hp.hpl.jena.sparql.function.Function newFunctionInstance()>();

        return $r5;
    }

    public void add(java.lang.String, com.hp.hpl.jena.sparql.expr.Expr, java.util.List)
    {
        java.util.List r3;
        com.hp.hpl.jena.sparql.function.FunctionRegistry $r5;
        com.hp.hpl.jena.sparql.expr.Expr r8;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        java.util.Map $r4, $r7;
        com.hp.hpl.jena.sparql.function.user.ExprTransformExpand $r6;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition $r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        r2 := @parameter0: java.lang.String;

        r8 := @parameter1: com.hp.hpl.jena.sparql.expr.Expr;

        r3 := @parameter2: java.util.List;

        $z0 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: boolean preserveDependencies>;

        if $z0 != 0 goto label1;

        $r6 = new com.hp.hpl.jena.sparql.function.user.ExprTransformExpand;

        $r7 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        specialinvoke $r6.<com.hp.hpl.jena.sparql.function.user.ExprTransformExpand: void <init>(java.util.Map)>($r7);

        r8 = staticinvoke <com.hp.hpl.jena.sparql.expr.ExprTransformer: com.hp.hpl.jena.sparql.expr.Expr transform(com.hp.hpl.jena.sparql.expr.ExprTransform,com.hp.hpl.jena.sparql.expr.Expr)>($r6, r8);

     label1:
        $r1 = new com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.Expr,java.util.List)>(r2, r8, r3);

        $r4 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        interfaceinvoke $r4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, $r1);

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionRegistry get()>();

        virtualinvoke $r5.<com.hp.hpl.jena.sparql.function.FunctionRegistry: void put(java.lang.String,com.hp.hpl.jena.sparql.function.FunctionFactory)>(r2, r0);

        return;
    }

    public void add(java.lang.String, java.lang.String, java.util.List) throws com.hp.hpl.jena.sparql.lang.sparql_11.ParseException
    {
        com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11 $r0;
        java.util.List r7;
        com.hp.hpl.jena.sparql.function.FunctionRegistry $r9;
        java.io.StringReader $r1;
        com.hp.hpl.jena.sparql.expr.Expr $r3, r12;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r4;
        java.util.Map $r8, $r11;
        com.hp.hpl.jena.sparql.function.user.ExprTransformExpand $r10;
        java.lang.String r2, r6;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition $r5;
        boolean $z0;

        r4 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r7 := @parameter2: java.util.List;

        $r0 = new com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11;

        $r1 = new java.io.StringReader;

        specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2);

        specialinvoke $r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: void <init>(java.io.Reader)>($r1);

        $r3 = virtualinvoke $r0.<com.hp.hpl.jena.sparql.lang.sparql_11.SPARQLParser11: com.hp.hpl.jena.sparql.expr.Expr Expression()>();

        r12 = $r3;

        $z0 = r4.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: boolean preserveDependencies>;

        if $z0 != 0 goto label1;

        $r10 = new com.hp.hpl.jena.sparql.function.user.ExprTransformExpand;

        $r11 = r4.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        specialinvoke $r10.<com.hp.hpl.jena.sparql.function.user.ExprTransformExpand: void <init>(java.util.Map)>($r11);

        r12 = staticinvoke <com.hp.hpl.jena.sparql.expr.ExprTransformer: com.hp.hpl.jena.sparql.expr.Expr transform(com.hp.hpl.jena.sparql.expr.ExprTransform,com.hp.hpl.jena.sparql.expr.Expr)>($r10, $r3);

     label1:
        $r5 = new com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition;

        specialinvoke $r5.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition: void <init>(java.lang.String,com.hp.hpl.jena.sparql.expr.Expr,java.util.List)>(r6, r12, r7);

        $r8 = r4.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        interfaceinvoke $r8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r6, $r5);

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionRegistry get()>();

        virtualinvoke $r9.<com.hp.hpl.jena.sparql.function.FunctionRegistry: void put(java.lang.String,com.hp.hpl.jena.sparql.function.FunctionFactory)>(r6, r4);

        return;
    }

    public void remove(java.lang.String)
    {
        com.hp.hpl.jena.sparql.function.FunctionRegistry $r4;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        java.util.Map $r2, $r3;
        java.lang.StringBuilder $r6, $r7, $r8, $r9;
        java.lang.String r1, $r10;
        java.util.NoSuchElementException $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r5 = new java.util.NoSuchElementException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No function definition is associated with the URI <");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r1);

        $r4 = staticinvoke <com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionRegistry get()>();

        virtualinvoke $r4.<com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionFactory remove(java.lang.String)>(r1);

        return;
    }

    public com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition get(java.lang.String)
    {
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        java.util.Map $r2, $r3;
        java.lang.Object $r4;
        java.lang.String r1;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition $r5;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r3 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        $r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r5 = (com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionDefinition) $r4;

        return $r5;
    }

    public boolean isRegistered(java.lang.String)
    {
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        java.util.Map $r2;
        java.lang.String r1;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        $z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public void clear()
    {
        java.util.Iterator $r3;
        java.util.Set $r2;
        com.hp.hpl.jena.sparql.function.FunctionRegistry $r7;
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory r0;
        java.util.Map $r1, $r4;
        java.lang.Object $r5;
        java.lang.String r6;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        $r1 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        $r2 = interfaceinvoke $r1.<java.util.Map: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r6 = (java.lang.String) $r5;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionRegistry get()>();

        virtualinvoke $r7.<com.hp.hpl.jena.sparql.function.FunctionRegistry: com.hp.hpl.jena.sparql.function.FunctionFactory remove(java.lang.String)>(r6);

        goto label1;

     label2:
        $r4 = r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: java.util.Map definitions>;

        interfaceinvoke $r4.<java.util.Map: void clear()>();

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory $r0;

        $r0 = new com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory;

        specialinvoke $r0.<com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: void <init>()>();

        <com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory: com.hp.hpl.jena.sparql.function.user.UserDefinedFunctionFactory factory> = $r0;

        return;
    }
}
