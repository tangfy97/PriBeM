public class org.apache.xml.serializer.Encodings extends java.lang.Object
{
    static final int m_defaultLastPrintable;
    static final java.lang.String ENCODINGS_FILE;
    static final java.lang.String ENCODINGS_PROP;
    private static final java.lang.reflect.Method SUN_CHAR2BYTE_CONVERTER_METHOD;
    public static final java.lang.String DEFAULT_MIME_ENCODING;
    private static final java.util.Hashtable _encodingTableKeyJava;
    private static final java.util.Hashtable _encodingTableKeyMime;
    private static final org.apache.xml.serializer.EncodingInfo[] _encodings;

    public void <init>()
    {
        org.apache.xml.serializer.Encodings r0;

        r0 := @this: org.apache.xml.serializer.Encodings;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.reflect.Method findCharToByteConverterMethod()
    {
        java.io.PrintStream $r2;
        org.apache.xml.serializer.Encodings$1 $r0;
        java.lang.Exception $r1;

     label1:
        $r0 = new org.apache.xml.serializer.Encodings$1;

        specialinvoke $r0.<org.apache.xml.serializer.Encodings$1: void <init>()>();

        staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r0);

     label2:
        goto label4;

     label3:
        $r1 := @caughtexception;

        $r2 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Warning: Could not get charToByteConverterClass!");

     label4:
        return null;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.io.Writer getWriter(java.io.OutputStream, java.lang.String) throws java.io.UnsupportedEncodingException
    {
        org.apache.xml.serializer.EncodingInfo $r1, $r7;
        int i0, $i1;
        java.io.OutputStreamWriter $r4, $r9;
        java.lang.String r2, $r3, $r8;
        boolean $z0;
        java.io.OutputStream r5;
        org.apache.xml.serializer.EncodingInfo[] $r0, $r6, $r14;
        java.lang.IllegalArgumentException $r10, $r13;
        java.io.UnsupportedEncodingException $r11, $r12;

        r5 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: java.lang.String;

        i0 = 0;

        goto label6;

     label1:
        $r0 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $r1 = $r0[i0];

        $r3 = $r1.<org.apache.xml.serializer.EncodingInfo: java.lang.String name>;

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r2);

        if $z0 == 0 goto label5;

     label2:
        $r4 = new java.io.OutputStreamWriter;

        $r6 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $r7 = $r6[i0];

        $r8 = $r7.<org.apache.xml.serializer.EncodingInfo: java.lang.String javaName>;

        specialinvoke $r4.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r5, $r8);

        return $r4;

     label3:
        $r13 := @caughtexception;

        goto label5;

     label4:
        $r12 := @caughtexception;

     label5:
        i0 = i0 + 1;

     label6:
        $r14 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $i1 = lengthof $r14;

        if i0 < $i1 goto label1;

     label7:
        $r9 = new java.io.OutputStreamWriter;

        specialinvoke $r9.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(r5, r2);

        return $r9;

     label8:
        $r10 := @caughtexception;

        $r11 = new java.io.UnsupportedEncodingException;

        specialinvoke $r11.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r2);

        throw $r11;

        catch java.lang.IllegalArgumentException from label2 to label3 with label3;
        catch java.io.UnsupportedEncodingException from label2 to label3 with label4;
        catch java.lang.IllegalArgumentException from label7 to label8 with label8;
    }

    public static java.lang.Object getCharToByteConverter(java.lang.String)
    {
        java.lang.Object[] r1;
        org.apache.xml.serializer.EncodingInfo $r3, $r7;
        int i0, $i1;
        java.lang.String r4, $r5, $r8;
        java.lang.reflect.Method $r0, $r9;
        boolean $z0;
        org.apache.xml.serializer.EncodingInfo[] $r2, $r6, $r12;
        java.lang.Exception $r11;
        java.lang.Object $r10;

        r4 := @parameter0: java.lang.String;

        $r0 = <org.apache.xml.serializer.Encodings: java.lang.reflect.Method SUN_CHAR2BYTE_CONVERTER_METHOD>;

        if $r0 != null goto label1;

        return null;

     label1:
        r1 = newarray (java.lang.Object)[1];

        i0 = 0;

        goto label7;

     label2:
        $r2 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $r3 = $r2[i0];

        $r5 = $r3.<org.apache.xml.serializer.EncodingInfo: java.lang.String name>;

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r4);

        if $z0 == 0 goto label6;

     label3:
        $r6 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $r7 = $r6[i0];

        $r8 = $r7.<org.apache.xml.serializer.EncodingInfo: java.lang.String javaName>;

        r1[0] = $r8;

        $r9 = <org.apache.xml.serializer.Encodings: java.lang.reflect.Method SUN_CHAR2BYTE_CONVERTER_METHOD>;

        $r10 = virtualinvoke $r9.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r1);

        if null == $r10 goto label4;

        return $r10;

     label4:
        goto label6;

     label5:
        $r11 := @caughtexception;

     label6:
        i0 = i0 + 1;

     label7:
        $r12 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $i1 = lengthof $r12;

        if i0 < $i1 goto label2;

        return null;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public static int getLastPrintable(java.lang.String)
    {
        org.apache.xml.serializer.EncodingInfo r6;
        int $i0;
        java.lang.Object $r3, $r5;
        java.lang.String r0, $r1;
        java.util.Hashtable $r2, $r4;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r2 = <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyJava>;

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (org.apache.xml.serializer.EncodingInfo) $r3;

        if r6 != null goto label1;

        $r4 = <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyMime>;

        $r5 = virtualinvoke $r4.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r1);

        r6 = (org.apache.xml.serializer.EncodingInfo) $r5;

     label1:
        if r6 == null goto label2;

        $i0 = r6.<org.apache.xml.serializer.EncodingInfo: int lastPrintable>;

        return $i0;

     label2:
        return 127;
    }

    public static int getLastPrintable()
    {
        return 127;
    }

    public static java.lang.String getMimeEncoding(java.lang.String)
    {
        java.lang.SecurityException $r1;
        java.lang.String $r0, r2, $r3, $r4, r5;
        boolean $z0, $z1, $z2, $z3;

        r2 := @parameter0: java.lang.String;

        if null != r2 goto label11;

     label01:
        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("file.encoding", "UTF8");

        if null == $r0 goto label07;

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("Cp1252");

        if $z0 != 0 goto label02;

        $z1 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ISO8859_1");

        if $z1 != 0 goto label02;

        $z2 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("8859_1");

        if $z2 != 0 goto label02;

        $z3 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("UTF8");

        if $z3 == 0 goto label03;

     label02:
        $r3 = "UTF-8";

        goto label04;

     label03:
        $r3 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String convertJava2MimeEncoding(java.lang.String)>($r0);

     label04:
        if null == $r3 goto label05;

        $r4 = $r3;

        goto label06;

     label05:
        $r4 = "UTF-8";

     label06:
        r5 = $r4;

        goto label08;

     label07:
        r5 = "UTF-8";

     label08:
        goto label10;

     label09:
        $r1 := @caughtexception;

        r5 = "UTF-8";

     label10:
        goto label12;

     label11:
        r5 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.String convertJava2MimeEncoding(java.lang.String)>(r2);

     label12:
        return r5;

        catch java.lang.SecurityException from label01 to label08 with label09;
    }

    public static java.lang.String convertJava2MimeEncoding(java.lang.String)
    {
        org.apache.xml.serializer.EncodingInfo r4;
        java.lang.Object $r3;
        java.lang.String r0, $r2, $r5;
        java.util.Hashtable $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyJava>;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>();

        $r3 = virtualinvoke $r1.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>($r2);

        r4 = (org.apache.xml.serializer.EncodingInfo) $r3;

        if null == r4 goto label1;

        $r5 = r4.<org.apache.xml.serializer.EncodingInfo: java.lang.String name>;

        return $r5;

     label1:
        return r0;
    }

    public static java.lang.String convertMime2JavaEncoding(java.lang.String)
    {
        org.apache.xml.serializer.EncodingInfo[] $r0, $r1, $r5;
        org.apache.xml.serializer.EncodingInfo $r2, $r6;
        int $i0, i1;
        java.lang.String r3, $r4, $r7;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        i1 = 0;

        goto label3;

     label1:
        $r1 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $r2 = $r1[i1];

        $r4 = $r2.<org.apache.xml.serializer.EncodingInfo: java.lang.String name>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r3);

        if $z0 == 0 goto label2;

        $r5 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $r6 = $r5[i1];

        $r7 = $r6.<org.apache.xml.serializer.EncodingInfo: java.lang.String javaName>;

        return $r7;

     label2:
        i1 = i1 + 1;

     label3:
        $r0 = <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings>;

        $i0 = lengthof $r0;

        if i1 < $i0 goto label1;

        return r3;
    }

    private static org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()
    {
        java.util.Enumeration $r1, $r4;
        java.net.URL $r33;
        java.lang.Integer $r9;
        org.apache.xml.serializer.EncodingInfo $r16, $r19, $r36;
        java.lang.SecurityException $r27;
        org.apache.xml.serializer.SecuritySupport $r20;
        boolean z0, $z1;
        org.apache.xml.serializer.EncodingInfo[] r31;
        java.lang.ClassLoader $r21;
        java.util.StringTokenizer $r35;
        int $i0, $i1, $i3, $i4, $i5, i6, i7, i8, i9, i10, $i11;
        java.lang.String $r3, $r6, $r7, $r8, $r11, $r12, $r15, $r18, r28, r30, r32;
        java.util.Hashtable $r14, $r17;
        org.apache.xml.utils.WrappedRuntimeException $r37, $r38;
        java.util.Properties $r34;
        java.net.MalformedURLException $r25;
        char $c2;
        java.io.IOException $r23;
        java.lang.Object $r2, $r5;
        java.io.InputStream r29;

     label01:
        r28 = null;

        r29 = null;

     label02:
        r28 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("org.apache.xalan.serialize.encodings", "");

     label03:
        goto label05;

     label04:
        $r27 := @caughtexception;

     label05:
        if r28 == null goto label06;

        $i5 = virtualinvoke r28.<java.lang.String: int length()>();

        if $i5 <= 0 goto label06;

        $r33 = new java.net.URL;

        specialinvoke $r33.<java.net.URL: void <init>(java.lang.String)>(r28);

        r29 = virtualinvoke $r33.<java.net.URL: java.io.InputStream openStream()>();

     label06:
        if r29 != null goto label07;

        $r20 = staticinvoke <org.apache.xml.serializer.SecuritySupport: org.apache.xml.serializer.SecuritySupport getInstance()>();

        $r21 = staticinvoke <org.apache.xml.serializer.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r29 = virtualinvoke $r20.<org.apache.xml.serializer.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r21, "org/apache/xml/serializer/Encodings.properties");

     label07:
        $r34 = new java.util.Properties;

        specialinvoke $r34.<java.util.Properties: void <init>()>();

        if r29 == null goto label08;

        virtualinvoke $r34.<java.util.Properties: void load(java.io.InputStream)>(r29);

        virtualinvoke r29.<java.io.InputStream: void close()>();

     label08:
        $i0 = virtualinvoke $r34.<java.util.Hashtable: int size()>();

        i6 = 0;

        $r1 = virtualinvoke $r34.<java.util.Hashtable: java.util.Enumeration keys()>();

        i7 = 0;

        goto label13;

     label09:
        $r2 = interfaceinvoke $r1.<java.util.Enumeration: java.lang.Object nextElement()>();

        r30 = (java.lang.String) $r2;

        $r3 = virtualinvoke $r34.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r30);

        i6 = i6 + 1;

        $i1 = virtualinvoke $r3.<java.lang.String: int indexOf(int)>(32);

        i8 = 0;

        goto label12;

     label10:
        $c2 = virtualinvoke $r3.<java.lang.String: char charAt(int)>(i8);

        $i11 = (int) $c2;

        if $i11 != 44 goto label11;

        i6 = i6 + 1;

     label11:
        i8 = i8 + 1;

     label12:
        if i8 < $i1 goto label10;

        i7 = i7 + 1;

     label13:
        if i7 < $i0 goto label09;

        r31 = newarray (org.apache.xml.serializer.EncodingInfo)[i6];

        i9 = 0;

        $r4 = virtualinvoke $r34.<java.util.Hashtable: java.util.Enumeration keys()>();

        i10 = 0;

        goto label20;

     label14:
        $r5 = interfaceinvoke $r4.<java.util.Enumeration: java.lang.Object nextElement()>();

        r32 = (java.lang.String) $r5;

        $r6 = virtualinvoke $r34.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r32);

        $i3 = virtualinvoke $r6.<java.lang.String: int indexOf(int)>(32);

        if $i3 >= 0 goto label15;

        goto label19;

     label15:
        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int)>($i3);

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $r9 = staticinvoke <java.lang.Integer: java.lang.Integer decode(java.lang.String)>($r8);

        $i4 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

        $r35 = new java.util.StringTokenizer;

        $r11 = virtualinvoke $r6.<java.lang.String: java.lang.String substring(int,int)>(0, $i3);

        specialinvoke $r35.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r11, ",");

        z0 = 1;

        goto label18;

     label16:
        $r12 = virtualinvoke $r35.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r36 = new org.apache.xml.serializer.EncodingInfo;

        specialinvoke $r36.<org.apache.xml.serializer.EncodingInfo: void <init>(java.lang.String,java.lang.String,int)>($r12, r32, $i4);

        r31[i9] = $r36;

        $r14 = <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyMime>;

        $r15 = virtualinvoke $r12.<java.lang.String: java.lang.String toUpperCase()>();

        $r16 = r31[i9];

        virtualinvoke $r14.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r16);

        if z0 == 0 goto label17;

        $r17 = <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyJava>;

        $r18 = virtualinvoke r32.<java.lang.String: java.lang.String toUpperCase()>();

        $r19 = r31[i9];

        virtualinvoke $r17.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r19);

     label17:
        i9 = i9 + 1;

        z0 = 0;

     label18:
        $z1 = virtualinvoke $r35.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 != 0 goto label16;

     label19:
        i10 = i10 + 1;

     label20:
        if i10 < $i0 goto label14;

        return r31;

     label21:
        $r25 := @caughtexception;

        $r37 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r37.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r25);

        throw $r37;

     label22:
        $r23 := @caughtexception;

        $r38 = new org.apache.xml.utils.WrappedRuntimeException;

        specialinvoke $r38.<org.apache.xml.utils.WrappedRuntimeException: void <init>(java.lang.Exception)>($r23);

        throw $r38;

        catch java.lang.SecurityException from label02 to label03 with label04;
        catch java.net.MalformedURLException from label01 to label21 with label21;
        catch java.io.IOException from label01 to label21 with label22;
    }

    static void <clinit>()
    {
        org.apache.xml.serializer.EncodingInfo[] $r3;
        java.lang.reflect.Method $r0;
        java.util.Hashtable $r1, $r2;

        <org.apache.xml.serializer.Encodings: java.lang.String DEFAULT_MIME_ENCODING> = "UTF-8";

        <org.apache.xml.serializer.Encodings: java.lang.String ENCODINGS_PROP> = "org.apache.xalan.serialize.encodings";

        <org.apache.xml.serializer.Encodings: java.lang.String ENCODINGS_FILE> = "org/apache/xml/serializer/Encodings.properties";

        <org.apache.xml.serializer.Encodings: int m_defaultLastPrintable> = 127;

        $r0 = staticinvoke <org.apache.xml.serializer.Encodings: java.lang.reflect.Method findCharToByteConverterMethod()>();

        <org.apache.xml.serializer.Encodings: java.lang.reflect.Method SUN_CHAR2BYTE_CONVERTER_METHOD> = $r0;

        $r1 = new java.util.Hashtable;

        specialinvoke $r1.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyJava> = $r1;

        $r2 = new java.util.Hashtable;

        specialinvoke $r2.<java.util.Hashtable: void <init>()>();

        <org.apache.xml.serializer.Encodings: java.util.Hashtable _encodingTableKeyMime> = $r2;

        $r3 = staticinvoke <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] loadEncodingInfo()>();

        <org.apache.xml.serializer.Encodings: org.apache.xml.serializer.EncodingInfo[] _encodings> = $r3;

        return;
    }
}
