final class com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1 extends java.lang.Object implements java.lang.Runnable
{
    final java.util.concurrent.ExecutorService val$service;
    final long val$terminationTimeout;
    final java.util.concurrent.TimeUnit val$timeUnit;

    void <init>(java.util.concurrent.ExecutorService, long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r2;
        long l0;
        com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1 r0;
        java.util.concurrent.ExecutorService r1;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1;

        r1 := @parameter0: java.util.concurrent.ExecutorService;

        l0 := @parameter1: long;

        r2 := @parameter2: java.util.concurrent.TimeUnit;

        r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: java.util.concurrent.ExecutorService val$service> = r1;

        r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: long val$terminationTimeout> = l0;

        r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: java.util.concurrent.TimeUnit val$timeUnit> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void run()
    {
        java.util.concurrent.TimeUnit $r2;
        java.lang.InterruptedException $r4;
        long $l0;
        com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1 r0;
        java.util.concurrent.ExecutorService $r1, $r3;

        r0 := @this: com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1;

     label1:
        $r1 = r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: java.util.concurrent.ExecutorService val$service>;

        interfaceinvoke $r1.<java.util.concurrent.ExecutorService: void shutdown()>();

        $r3 = r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: java.util.concurrent.ExecutorService val$service>;

        $l0 = r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: long val$terminationTimeout>;

        $r2 = r0.<com.mycila.inject.internal.guava.util.concurrent.MoreExecutors$1: java.util.concurrent.TimeUnit val$timeUnit>;

        interfaceinvoke $r3.<java.util.concurrent.ExecutorService: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>($l0, $r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

     label4:
        return;

        catch java.lang.InterruptedException from label1 to label2 with label3;
    }
}
