class org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider extends java.lang.Object
{
    final org.springframework.remoting.jaxws.JaxWsPortClientInterceptor this$0;

    private void <init>(org.springframework.remoting.jaxws.JaxWsPortClientInterceptor)
    {
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor r1;
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider r0;

        r0 := @this: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider;

        r1 := @parameter0: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor;

        r0.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Object getPortStub(javax.xml.ws.Service, javax.xml.namespace.QName, java.lang.Object[])
    {
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor $r7, $r9;
        java.lang.Object[] r0;
        javax.xml.ws.WebServiceFeature[] r1;
        javax.xml.ws.Service r6;
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider r2;
        int $i0, $i1, i2;
        javax.xml.ws.WebServiceFeature $r4;
        java.lang.Object $r3, $r11;
        java.lang.Class $r8, $r10;
        javax.xml.namespace.QName r5;

        r2 := @this: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider;

        r6 := @parameter0: javax.xml.ws.Service;

        r5 := @parameter1: javax.xml.namespace.QName;

        r0 := @parameter2: java.lang.Object[];

        $i0 = lengthof r0;

        r1 = newarray (javax.xml.ws.WebServiceFeature)[$i0];

        i2 = 0;

        goto label2;

     label1:
        $r3 = r0[i2];

        $r4 = specialinvoke r2.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider: javax.xml.ws.WebServiceFeature convertWebServiceFeature(java.lang.Object)>($r3);

        r1[i2] = $r4;

        i2 = i2 + 1;

     label2:
        $i1 = lengthof r0;

        if i2 < $i1 goto label1;

        if r5 == null goto label3;

        $r9 = r2.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor this$0>;

        $r10 = virtualinvoke $r9.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.Class getServiceInterface()>();

        $r11 = virtualinvoke r6.<javax.xml.ws.Service: java.lang.Object getPort(javax.xml.namespace.QName,java.lang.Class,javax.xml.ws.WebServiceFeature[])>(r5, $r10, r1);

        goto label4;

     label3:
        $r7 = r2.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor this$0>;

        $r8 = virtualinvoke $r7.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.Class getServiceInterface()>();

        $r11 = virtualinvoke r6.<javax.xml.ws.Service: java.lang.Object getPort(java.lang.Class,javax.xml.ws.WebServiceFeature[])>($r8, r1);

     label4:
        return $r11;
    }

    private javax.xml.ws.WebServiceFeature convertWebServiceFeature(java.lang.Object)
    {
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider r6;
        javax.xml.ws.WebServiceFeature $r12, $r15, $r16;
        java.lang.String $r5, $r9, $r22;
        boolean $z0, $z1, $z2;
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor $r7;
        java.lang.IllegalArgumentException $r1, $r18;
        java.lang.Object r0, $r11, $r14;
        java.lang.StringBuilder $r2, $r4, $r19, $r20, $r21;
        java.lang.Class $r3, $r10, $r13;
        java.lang.ClassNotFoundException $r17;
        java.lang.ClassLoader $r8;

        r6 := @this: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider;

        r0 := @parameter0: java.lang.Object;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "WebServiceFeature specification object must not be null");

        $z0 = r0 instanceof javax.xml.ws.WebServiceFeature;

        if $z0 == 0 goto label1;

        $r16 = (javax.xml.ws.WebServiceFeature) r0;

        return $r16;

     label1:
        $z1 = r0 instanceof java.lang.Class;

        if $z1 == 0 goto label2;

        $r13 = (java.lang.Class) r0;

        $r14 = staticinvoke <org.springframework.beans.BeanUtils: java.lang.Object instantiate(java.lang.Class)>($r13);

        $r15 = (javax.xml.ws.WebServiceFeature) $r14;

        return $r15;

     label2:
        $z2 = r0 instanceof java.lang.String;

        if $z2 == 0 goto label6;

     label3:
        $r7 = r6.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor this$0>;

        $r8 = virtualinvoke $r7.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor: java.lang.ClassLoader getBeanClassLoader()>();

        $r9 = (java.lang.String) r0;

        $r10 = virtualinvoke $r8.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>($r9);

        $r11 = staticinvoke <org.springframework.beans.BeanUtils: java.lang.Object instantiate(java.lang.Class)>($r10);

        $r12 = (javax.xml.ws.WebServiceFeature) $r11;

     label4:
        return $r12;

     label5:
        $r17 := @caughtexception;

        $r18 = new java.lang.IllegalArgumentException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>(java.lang.String)>("Could not load WebServiceFeature class [");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r18;

     label6:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown WebServiceFeature specification type: ");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r1;

        catch java.lang.ClassNotFoundException from label3 to label4 with label5;
    }

    void <init>(org.springframework.remoting.jaxws.JaxWsPortClientInterceptor, org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider)
    {
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor r1;
        org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider r0, r2;

        r0 := @this: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider;

        r1 := @parameter0: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor;

        r2 := @parameter1: org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider;

        specialinvoke r0.<org.springframework.remoting.jaxws.JaxWsPortClientInterceptor$FeaturePortProvider: void <init>(org.springframework.remoting.jaxws.JaxWsPortClientInterceptor)>(r1);

        return;
    }
}
