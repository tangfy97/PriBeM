public final class org.apache.lucene.index.AtomicReaderContext extends org.apache.lucene.index.IndexReaderContext
{
    public final int ord;
    public final int docBase;
    private final org.apache.lucene.index.AtomicReader reader;
    private final java.util.List leaves;
    static final boolean $assertionsDisabled;

    void <init>(org.apache.lucene.index.CompositeReaderContext, org.apache.lucene.index.AtomicReader, int, int, int, int)
    {
        org.apache.lucene.index.CompositeReaderContext r1;
        java.util.List $r3;
        int i0, i1, i2, i3;
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader r2;
        boolean $z0;

        r0 := @this: org.apache.lucene.index.AtomicReaderContext;

        r1 := @parameter0: org.apache.lucene.index.CompositeReaderContext;

        r2 := @parameter1: org.apache.lucene.index.AtomicReader;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        i3 := @parameter5: int;

        specialinvoke r0.<org.apache.lucene.index.IndexReaderContext: void <init>(org.apache.lucene.index.CompositeReaderContext,int,int)>(r1, i0, i1);

        r0.<org.apache.lucene.index.AtomicReaderContext: int ord> = i2;

        r0.<org.apache.lucene.index.AtomicReaderContext: int docBase> = i3;

        r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader> = r2;

        $z0 = r0.<org.apache.lucene.index.AtomicReaderContext: boolean isTopLevel>;

        if $z0 == 0 goto label1;

        $r3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(r0);

        goto label2;

     label1:
        $r3 = null;

     label2:
        r0.<org.apache.lucene.index.AtomicReaderContext: java.util.List leaves> = $r3;

        return;
    }

    void <init>(org.apache.lucene.index.AtomicReader)
    {
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader r1;

        r0 := @this: org.apache.lucene.index.AtomicReaderContext;

        r1 := @parameter0: org.apache.lucene.index.AtomicReader;

        specialinvoke r0.<org.apache.lucene.index.AtomicReaderContext: void <init>(org.apache.lucene.index.CompositeReaderContext,org.apache.lucene.index.AtomicReader,int,int,int,int)>(null, r1, 0, 0, 0, 0);

        return;
    }

    public java.util.List leaves()
    {
        java.lang.UnsupportedOperationException $r4;
        java.util.List $r1, $r2;
        java.lang.AssertionError $r3;
        org.apache.lucene.index.AtomicReaderContext r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.lucene.index.AtomicReaderContext;

        $z0 = r0.<org.apache.lucene.index.AtomicReaderContext: boolean isTopLevel>;

        if $z0 != 0 goto label1;

        $r4 = new java.lang.UnsupportedOperationException;

        specialinvoke $r4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This is not a top-level context.");

        throw $r4;

     label1:
        $z1 = <org.apache.lucene.index.AtomicReaderContext: boolean $assertionsDisabled>;

        if $z1 != 0 goto label2;

        $r2 = r0.<org.apache.lucene.index.AtomicReaderContext: java.util.List leaves>;

        if $r2 != null goto label2;

        $r3 = new java.lang.AssertionError;

        specialinvoke $r3.<java.lang.AssertionError: void <init>()>();

        throw $r3;

     label2:
        $r1 = r0.<org.apache.lucene.index.AtomicReaderContext: java.util.List leaves>;

        return $r1;
    }

    public java.util.List children()
    {
        org.apache.lucene.index.AtomicReaderContext r0;

        r0 := @this: org.apache.lucene.index.AtomicReaderContext;

        return null;
    }

    public org.apache.lucene.index.AtomicReader reader()
    {
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.AtomicReaderContext;

        $r1 = r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader>;

        return $r1;
    }

    public volatile org.apache.lucene.index.IndexReader reader()
    {
        org.apache.lucene.index.AtomicReaderContext r0;
        org.apache.lucene.index.AtomicReader $r1;

        r0 := @this: org.apache.lucene.index.AtomicReaderContext;

        $r1 = virtualinvoke r0.<org.apache.lucene.index.AtomicReaderContext: org.apache.lucene.index.AtomicReader reader()>();

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/index/AtomicReaderContext;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.index.AtomicReaderContext: boolean $assertionsDisabled> = $z1;

        return;
    }
}
