public class com.hp.hpl.jena.sparql.util.NodeIsomorphismMap extends java.lang.Object
{
    private java.util.Map map;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r0;
        java.util.HashMap $r1;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.util.NodeIsomorphismMap: java.util.Map map> = $r1;

        return;
    }

    private com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.graph.Node)
    {
        java.util.Map $r2;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r0;
        java.lang.Object $r3;
        com.hp.hpl.jena.graph.Node r1, $r4;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        $r2 = r0.<com.hp.hpl.jena.sparql.util.NodeIsomorphismMap: java.util.Map map>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        $r4 = (com.hp.hpl.jena.graph.Node) $r3;

        return $r4;
    }

    private void put(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        java.util.Map $r3;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r0;
        com.hp.hpl.jena.graph.Node r1, r2;

        r0 := @this: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.graph.Node;

        $r3 = r0.<com.hp.hpl.jena.sparql.util.NodeIsomorphismMap: java.util.Map map>;

        interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r2);

        return;
    }

    public boolean makeIsomorphic(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r0, r1, $r3;
        com.hp.hpl.jena.sparql.util.NodeIsomorphismMap r2;
        boolean $z0, $z1, $z2, $z3;

        r2 := @this: com.hp.hpl.jena.sparql.util.NodeIsomorphismMap;

        r0 := @parameter0: com.hp.hpl.jena.graph.Node;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z0 == 0 goto label2;

        $z2 = virtualinvoke r1.<com.hp.hpl.jena.graph.Node: boolean isBlank()>();

        if $z2 == 0 goto label2;

        $r3 = specialinvoke r2.<com.hp.hpl.jena.sparql.util.NodeIsomorphismMap: com.hp.hpl.jena.graph.Node get(com.hp.hpl.jena.graph.Node)>(r0);

        if $r3 != null goto label1;

        specialinvoke r2.<com.hp.hpl.jena.sparql.util.NodeIsomorphismMap: void put(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r0, r1);

        return 1;

     label1:
        $z3 = virtualinvoke $r3.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>(r1);

        return $z3;

     label2:
        $z1 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>(r1);

        return $z1;
    }
}
