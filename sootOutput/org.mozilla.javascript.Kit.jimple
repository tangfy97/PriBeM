public class org.mozilla.javascript.Kit extends java.lang.Object
{
    private static java.lang.reflect.Method Throwable_initCause;

    public void <init>()
    {
        org.mozilla.javascript.Kit r0;

        r0 := @this: org.mozilla.javascript.Kit;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.Class classOrNull(java.lang.String)
    {
        java.lang.LinkageError $r3;
        java.lang.Class $r1;
        java.lang.SecurityException $r4;
        java.lang.ClassNotFoundException $r5;
        java.lang.String r0;
        java.lang.IllegalArgumentException $r2;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

        goto label7;

     label5:
        $r3 := @caughtexception;

        goto label7;

     label6:
        $r2 := @caughtexception;

     label7:
        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.LinkageError from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
    }

    public static java.lang.Class classOrNull(java.lang.ClassLoader, java.lang.String)
    {
        java.lang.LinkageError $r4;
        java.lang.Class $r2;
        java.lang.SecurityException $r5;
        java.lang.ClassNotFoundException $r6;
        java.lang.ClassLoader r0;
        java.lang.String r1;
        java.lang.IllegalArgumentException $r3;

        r0 := @parameter0: java.lang.ClassLoader;

        r1 := @parameter1: java.lang.String;

     label1:
        $r2 = virtualinvoke r0.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label2:
        return $r2;

     label3:
        $r6 := @caughtexception;

        goto label7;

     label4:
        $r5 := @caughtexception;

        goto label7;

     label5:
        $r4 := @caughtexception;

        goto label7;

     label6:
        $r3 := @caughtexception;

     label7:
        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
        catch java.lang.SecurityException from label1 to label2 with label4;
        catch java.lang.LinkageError from label1 to label2 with label5;
        catch java.lang.IllegalArgumentException from label1 to label2 with label6;
    }

    static java.lang.Object newInstanceOrNull(java.lang.Class)
    {
        java.lang.IllegalAccessException $r2;
        java.lang.LinkageError $r4;
        java.lang.InstantiationException $r3;
        java.lang.Class r0;
        java.lang.Object $r1;
        java.lang.SecurityException $r5;

        r0 := @parameter0: java.lang.Class;

     label1:
        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r1;

     label3:
        $r5 := @caughtexception;

        goto label7;

     label4:
        $r4 := @caughtexception;

        goto label7;

     label5:
        $r3 := @caughtexception;

        goto label7;

     label6:
        $r2 := @caughtexception;

     label7:
        return null;

        catch java.lang.SecurityException from label1 to label2 with label3;
        catch java.lang.LinkageError from label1 to label2 with label4;
        catch java.lang.InstantiationException from label1 to label2 with label5;
        catch java.lang.IllegalAccessException from label1 to label2 with label6;
    }

    static boolean testIfCanLoadRhinoClasses(java.lang.ClassLoader)
    {
        java.lang.Class r0, $r3;
        java.lang.ClassLoader r1;
        java.lang.String $r2;

        r1 := @parameter0: java.lang.ClassLoader;

        r0 = <org.mozilla.javascript.ScriptRuntime: java.lang.Class ContextFactoryClass>;

        $r2 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>();

        $r3 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.ClassLoader,java.lang.String)>(r1, $r2);

        if $r3 == r0 goto label1;

        return 0;

     label1:
        return 1;
    }

    public static java.lang.RuntimeException initCause(java.lang.RuntimeException, java.lang.Throwable)
    {
        java.lang.Throwable r3;
        java.lang.Object[] $r2;
        java.lang.RuntimeException r1;
        java.lang.reflect.Method $r0, $r4;
        java.lang.Exception $r5;

        r1 := @parameter0: java.lang.RuntimeException;

        r3 := @parameter1: java.lang.Throwable;

        $r0 = <org.mozilla.javascript.Kit: java.lang.reflect.Method Throwable_initCause>;

        if $r0 == null goto label4;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

     label1:
        $r4 = <org.mozilla.javascript.Kit: java.lang.reflect.Method Throwable_initCause>;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

     label4:
        return r1;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static java.lang.String[] semicolonSplit(java.lang.String)
    {
        java.lang.String[] r3;
        java.lang.IllegalArgumentException $r2;
        int $i0, i1, i2, $i3;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        r3 = null;

     label1:
        i1 = 0;

        i2 = 0;

     label2:
        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int,int)>(59, i2);

        if $i3 >= 0 goto label3;

        goto label5;

     label3:
        if r3 == null goto label4;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i3);

        r3[i1] = $r1;

     label4:
        i1 = i1 + 1;

        i2 = $i3 + 1;

        goto label2;

     label5:
        if r3 != null goto label7;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if i2 == $i0 goto label6;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label6:
        r3 = newarray (java.lang.String)[i1];

        goto label1;

     label7:
        return r3;
    }

    public static int xDigitToInt(int, int)
    {
        int i0, i1, i2, $i3, $i4, $i6, $i8, $i10, $i12;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        if i1 > 57 goto label1;

        $i6 = (int) -48;

        i2 = i1 + $i6;

        if 0 > i2 goto label3;

        goto label4;

     label1:
        if i1 > 70 goto label2;

        if 65 > i1 goto label3;

        $i8 = (int) -55;

        i2 = i1 + $i8;

        goto label4;

     label2:
        if i1 > 102 goto label3;

        if 97 > i1 goto label3;

        $i10 = (int) -87;

        i2 = i1 + $i10;

        goto label4;

     label3:
        $i12 = (int) -1;

        return $i12;

     label4:
        $i3 = i0 << 4;

        $i4 = $i3 | i2;

        return $i4;
    }

    public static java.lang.Object addListener(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] r1, r2, $r4;
        java.lang.IllegalArgumentException $r3, $r5, $r6;
        int i0, $i1;
        java.lang.Object r0, r7, r8;
        boolean $z0, $z1;

        r7 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label1:
        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label2;

        $r5 = new java.lang.IllegalArgumentException;

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r5;

     label2:
        if r7 != null goto label3;

        r8 = r0;

        goto label6;

     label3:
        $z1 = r7 instanceof java.lang.Object[];

        if $z1 != 0 goto label4;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = r7;

        $r4[1] = r0;

        r8 = $r4;

        goto label6;

     label4:
        r1 = (java.lang.Object[]) r7;

        i0 = lengthof r1;

        if i0 >= 2 goto label5;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label5:
        $i1 = i0 + 1;

        r2 = newarray (java.lang.Object)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r2, 0, i0);

        r2[i0] = r0;

        r8 = r2;

     label6:
        return r8;
    }

    public static java.lang.Object removeListener(java.lang.Object, java.lang.Object)
    {
        java.lang.Object[] r1, r3;
        int i0, $i1, $i2, $i3, $i4, i5, $i7;
        boolean $z0, $z1;
        java.lang.IllegalArgumentException $r10, $r11, $r12;
        java.lang.Object r0, $r2, $r4, $r5, r9;

        r9 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r10;

     label1:
        $z0 = r0 instanceof java.lang.Object[];

        if $z0 == 0 goto label2;

        $r11 = new java.lang.IllegalArgumentException;

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r11;

     label2:
        if r9 != r0 goto label3;

        r9 = null;

        goto label9;

     label3:
        $z1 = r9 instanceof java.lang.Object[];

        if $z1 == 0 goto label9;

        r1 = (java.lang.Object[]) r9;

        i0 = lengthof r1;

        if i0 >= 2 goto label4;

        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r12;

     label4:
        if i0 != 2 goto label6;

        $r4 = r1[1];

        if $r4 != r0 goto label5;

        r9 = r1[0];

        goto label9;

     label5:
        $r5 = r1[0];

        if $r5 != r0 goto label9;

        r9 = r1[1];

        goto label9;

     label6:
        i5 = i0;

     label7:
        $i7 = (int) -1;

        i5 = i5 + $i7;

        $r2 = r1[i5];

        if $r2 != r0 goto label8;

        $i1 = i0 - 1;

        r3 = newarray (java.lang.Object)[$i1];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, 0, r3, 0, i5);

        $i4 = i5 + 1;

        $i2 = i5 + 1;

        $i3 = i0 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r1, $i4, r3, i5, $i3);

        r9 = r3;

        goto label9;

     label8:
        if i5 != 0 goto label7;

     label9:
        return r9;
    }

    public static java.lang.Object getListener(java.lang.Object, int)
    {
        java.lang.Object[] r7, r8, r9;
        java.lang.IllegalArgumentException $r2, $r4, $r6;
        int i0, i1, $i2;
        java.lang.Object r0, $r1, $r3, $r5;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.Object;

        i0 := @parameter1: int;

        if i0 != 0 goto label4;

        if r0 != null goto label1;

        return null;

     label1:
        $z1 = r0 instanceof java.lang.Object[];

        if $z1 != 0 goto label2;

        return r0;

     label2:
        r7 = (java.lang.Object[]) r0;

        $i2 = lengthof r7;

        if $i2 >= 2 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r6;

     label3:
        $r5 = r7[0];

        return $r5;

     label4:
        if i0 != 1 goto label7;

        $z0 = r0 instanceof java.lang.Object[];

        if $z0 != 0 goto label6;

        if r0 != null goto label5;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label5:
        return null;

     label6:
        r8 = (java.lang.Object[]) r0;

        $r3 = r8[1];

        return $r3;

     label7:
        r9 = (java.lang.Object[]) r0;

        i1 = lengthof r9;

        if i1 >= 2 goto label8;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r2;

     label8:
        if i0 != i1 goto label9;

        return null;

     label9:
        $r1 = r9[i0];

        return $r1;
    }

    static java.lang.Object initHash(java.util.Hashtable, java.lang.Object, java.lang.Object)
    {
        java.lang.Throwable $r3;
        java.lang.Object r1, $r2, r4;
        java.util.Hashtable r0;

        r0 := @parameter0: java.util.Hashtable;

        r1 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        entermonitor r0;

     label1:
        $r2 = virtualinvoke r0.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r1);

        if $r2 != null goto label2;

        virtualinvoke r0.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r4);

        goto label3;

     label2:
        r4 = $r2;

     label3:
        exitmonitor r0;

     label4:
        goto label7;

     label5:
        $r3 := @caughtexception;

        exitmonitor r0;

     label6:
        throw $r3;

     label7:
        return r4;

        catch java.lang.Throwable from label1 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public static java.lang.Object makeHashKeyFromPair(java.lang.Object, java.lang.Object)
    {
        org.mozilla.javascript.Kit$ComplexKey $r2;
        java.lang.Object r0, r1;
        java.lang.IllegalArgumentException $r3, $r4;

        r0 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label2:
        $r2 = new org.mozilla.javascript.Kit$ComplexKey;

        specialinvoke $r2.<org.mozilla.javascript.Kit$ComplexKey: void <init>(java.lang.Object,java.lang.Object)>(r0, r1);

        return $r2;
    }

    public static java.lang.String readReader(java.io.Reader) throws java.io.IOException
    {
        java.io.Reader r0;
        int $i0, $i1, $i2, i3, $i4, $i5, $i6;
        char[] r1, r3;
        java.lang.String $r2;

        r0 := @parameter0: java.io.Reader;

        r3 = newarray (char)[512];

        i3 = 0;

     label1:
        $i4 = lengthof r3;

        $i5 = $i4 - i3;

        $i6 = virtualinvoke r0.<java.io.Reader: int read(char[],int,int)>(r3, i3, $i5);

        if $i6 >= 0 goto label2;

        goto label3;

     label2:
        i3 = i3 + $i6;

        $i0 = lengthof r3;

        if i3 != $i0 goto label1;

        $i1 = lengthof r3;

        $i2 = $i1 * 2;

        r1 = newarray (char)[$i2];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r3, 0, r1, 0, i3);

        r3 = r1;

        goto label1;

     label3:
        $r2 = new java.lang.String;

        specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>(r3, 0, i3);

        return $r2;
    }

    public static byte[] readStream(java.io.InputStream, int) throws java.io.IOException
    {
        byte[] r1, r7, r8;
        java.lang.StringBuffer $r3, $r4, $r5;
        int i0, $i1, $i2, $i3, $i4, i5, $i6, $i7, $i8;
        java.lang.String $r6;
        java.lang.IllegalArgumentException $r2;
        java.io.InputStream r0;

        r0 := @parameter0: java.io.InputStream;

        i0 := @parameter1: int;

        if i0 > 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Bad initialBufferCapacity: ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r2;

     label1:
        r7 = newarray (byte)[i0];

        i5 = 0;

     label2:
        $i6 = lengthof r7;

        $i7 = $i6 - i5;

        $i8 = virtualinvoke r0.<java.io.InputStream: int read(byte[],int,int)>(r7, i5, $i7);

        if $i8 >= 0 goto label3;

        goto label4;

     label3:
        i5 = i5 + $i8;

        $i1 = lengthof r7;

        if i5 != $i1 goto label2;

        $i2 = lengthof r7;

        $i3 = $i2 * 2;

        r1 = newarray (byte)[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r1, 0, i5);

        r7 = r1;

        goto label2;

     label4:
        $i4 = lengthof r7;

        if i5 == $i4 goto label5;

        r8 = newarray (byte)[i5];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r7, 0, r8, 0, i5);

        r7 = r8;

     label5:
        return r7;
    }

    public static java.lang.RuntimeException codeBug() throws java.lang.RuntimeException
    {
        java.io.PrintStream $r1;
        java.lang.IllegalStateException $r0;

        $r0 = new java.lang.IllegalStateException;

        specialinvoke $r0.<java.lang.IllegalStateException: void <init>(java.lang.String)>("FAILED ASSERTION");

        $r1 = <java.lang.System: java.io.PrintStream err>;

        virtualinvoke $r0.<java.lang.RuntimeException: void printStackTrace(java.io.PrintStream)>($r1);

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r1;
        java.lang.Class $r0;
        java.lang.reflect.Method $r2;
        java.lang.Exception $r3;

        <org.mozilla.javascript.Kit: java.lang.reflect.Method Throwable_initCause> = null;

     label1:
        $r0 = staticinvoke <org.mozilla.javascript.Kit: java.lang.Class classOrNull(java.lang.String)>("java.lang.Throwable");

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = $r0;

        $r2 = virtualinvoke $r0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r1);

        <org.mozilla.javascript.Kit: java.lang.reflect.Method Throwable_initCause> = $r2;

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
