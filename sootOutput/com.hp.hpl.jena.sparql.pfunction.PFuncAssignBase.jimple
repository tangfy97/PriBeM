abstract class com.hp.hpl.jena.sparql.pfunction.PFuncAssignBase extends com.hp.hpl.jena.sparql.pfunction.PFuncSimple
{

    void <init>()
    {
        com.hp.hpl.jena.sparql.pfunction.PFuncAssignBase r0;

        r0 := @this: com.hp.hpl.jena.sparql.pfunction.PFuncAssignBase;

        specialinvoke r0.<com.hp.hpl.jena.sparql.pfunction.PFuncSimple: void <init>()>();

        return;
    }

    public com.hp.hpl.jena.sparql.engine.QueryIterator execEvaluated(com.hp.hpl.jena.sparql.engine.binding.Binding, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.sparql.engine.ExecutionContext)
    {
        com.hp.hpl.jena.graph.Node r0, $r2, r3, r21;
        com.hp.hpl.jena.sparql.engine.ExecutionContext r4;
        java.lang.String $r13, $r18, $r20;
        boolean $z0, $z1, $z2;
        com.hp.hpl.jena.sparql.pfunction.PFuncAssignBase r1;
        com.hp.hpl.jena.sparql.core.Var $r8;
        java.lang.Exception $r15;
        com.hp.hpl.jena.sparql.engine.binding.Binding r6;
        java.lang.StringBuilder $r10, $r11, $r12, $r16, $r17, $r19;
        com.hp.hpl.jena.sparql.engine.QueryIterator $r5, $r7, $r9, $r14;

        r1 := @this: com.hp.hpl.jena.sparql.pfunction.PFuncAssignBase;

        r6 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        r0 := @parameter1: com.hp.hpl.jena.graph.Node;

        r21 := @parameter2: com.hp.hpl.jena.graph.Node;

        r3 := @parameter3: com.hp.hpl.jena.graph.Node;

        r4 := @parameter4: com.hp.hpl.jena.sparql.engine.ExecutionContext;

     label1:
        $z0 = virtualinvoke r0.<com.hp.hpl.jena.graph.Node: boolean isVariable()>();

        if $z0 == 0 goto label3;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Variable found: expected a value: ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r1, $r13);

        $r14 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator noResults(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4);

     label2:
        return $r14;

     label3:
        $r2 = virtualinvoke r1.<com.hp.hpl.jena.sparql.pfunction.PFuncAssignBase: com.hp.hpl.jena.graph.Node calc(com.hp.hpl.jena.graph.Node)>(r0);

        $z1 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: boolean isVar(com.hp.hpl.jena.graph.Node)>(r3);

        if $z1 == 0 goto label5;

        $r8 = staticinvoke <com.hp.hpl.jena.sparql.core.Var: com.hp.hpl.jena.sparql.core.Var alloc(com.hp.hpl.jena.graph.Node)>(r3);

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator oneResult(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6, $r8, $r2, r4);

     label4:
        return $r9;

     label5:
        $z2 = virtualinvoke $r2.<com.hp.hpl.jena.graph.Node: boolean equals(java.lang.Object)>(r3);

        if $z2 == 0 goto label7;

        $r7 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator result(com.hp.hpl.jena.sparql.engine.binding.Binding,com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r6, r4);

     label6:
        return $r7;

     label7:
        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.IterLib: com.hp.hpl.jena.sparql.engine.QueryIterator noResults(com.hp.hpl.jena.sparql.engine.ExecutionContext)>(r4);

     label8:
        return $r5;

     label9:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception: ");

        $r18 = virtualinvoke $r15.<java.lang.Exception: java.lang.String getMessage()>();

        $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String,java.lang.Throwable)>(r1, $r20, $r15);

        return null;

        catch java.lang.Exception from label1 to label2 with label9;
        catch java.lang.Exception from label3 to label4 with label9;
        catch java.lang.Exception from label5 to label6 with label9;
        catch java.lang.Exception from label7 to label8 with label9;
    }

    public abstract com.hp.hpl.jena.graph.Node calc(com.hp.hpl.jena.graph.Node);
}
