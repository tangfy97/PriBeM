public class org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap
{
    private static final java.lang.String[] EMPTY_ARRAY;
    public static final org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl EMPTY_MAP;
    private final java.lang.String[] changeKeys;
    private final java.lang.String[] changeOldValues;
    private final java.lang.String[] changeNewValues;
    private final java.lang.String[] endKeys;

    public static org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder builder()
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder $r0;

        $r0 = new org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder;

        specialinvoke $r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: void <init>(org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$1)>(null);

        return $r0;
    }

    public void <init>(java.lang.String[], java.lang.String[], java.lang.String[], java.lang.String[])
    {
        java.lang.NullPointerException $r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.List $r6, $r9;
        java.lang.String[] r1, r2, r4, r8, $r13, $r14, $r15, $r16;
        java.util.HashSet $r5, $r7;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, i8, i9, i10, i11;
        java.lang.String r18, r19;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        java.lang.IllegalArgumentException $r3, $r10, $r12, $r17;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        r8 := @parameter0: java.lang.String[];

        r1 := @parameter1: java.lang.String[];

        r2 := @parameter2: java.lang.String[];

        r4 := @parameter3: java.lang.String[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = lengthof r1;

        $i0 = lengthof r2;

        if $i1 != $i0 goto label01;

        $i3 = lengthof r1;

        $i2 = lengthof r4;

        if $i3 == $i2 goto label02;

     label01:
        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Change keys, new values, and old values sizes don\'t match");

        throw $r3;

     label02:
        $r5 = new java.util.HashSet;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r1);

        specialinvoke $r5.<java.util.HashSet: void <init>(java.util.Collection)>($r6);

        $r7 = new java.util.HashSet;

        $r9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r8);

        specialinvoke $r7.<java.util.HashSet: void <init>(java.util.Collection)>($r9);

        $i4 = interfaceinvoke $r5.<java.util.Set: int size()>();

        $i5 = lengthof r1;

        if $i4 != $i5 goto label03;

        $i6 = interfaceinvoke $r7.<java.util.Set: int size()>();

        $i7 = lengthof r8;

        if $i6 == $i7 goto label04;

     label03:
        $r10 = new java.lang.IllegalArgumentException;

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Keys must all be unique");

        throw $r10;

     label04:
        $z0 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(null);

        if $z0 != 0 goto label05;

        $z1 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>(null);

        if $z1 == 0 goto label06;

     label05:
        $r11 = new java.lang.NullPointerException;

        specialinvoke $r11.<java.lang.NullPointerException: void <init>(java.lang.String)>("Null keys are not permitted");

        throw $r11;

     label06:
        $z2 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>("");

        if $z2 != 0 goto label07;

        $z3 = interfaceinvoke $r7.<java.util.Set: boolean contains(java.lang.Object)>("");

        if $z3 == 0 goto label08;

     label07:
        $r12 = new java.lang.IllegalArgumentException;

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Empty-string keys are not permitted");

        throw $r12;

     label08:
        i8 = lengthof r1;

        i9 = 0;

     label09:
        if i9 >= i8 goto label10;

        r18 = r1[i9];

        staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: void validateAnnotationKey(java.lang.String)>(r18);

        i9 = i9 + 1;

        goto label09;

     label10:
        i10 = lengthof r8;

        i11 = 0;

     label11:
        if i11 >= i10 goto label13;

        r19 = r8[i11];

        staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: void validateAnnotationKey(java.lang.String)>(r19);

        $z4 = interfaceinvoke $r5.<java.util.Set: boolean contains(java.lang.Object)>(r19);

        if $z4 == 0 goto label12;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Change keys and end keys must be disjoint sets");

        throw $r17;

     label12:
        i11 = i11 + 1;

        goto label11;

     label13:
        $r13 = specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] copy(java.lang.String[])>(r1);

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeKeys> = $r13;

        $r14 = specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] copy(java.lang.String[])>(r2);

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeOldValues> = $r14;

        $r15 = specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] copy(java.lang.String[])>(r4);

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeNewValues> = $r15;

        $r16 = specialinvoke r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] copy(java.lang.String[])>(r8);

        r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] endKeys> = $r16;

        return;
    }

    private java.lang.String[] copy(java.lang.String[])
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r3;
        int $i0, $i1, i2;
        java.lang.String[] r0, r1;
        java.lang.String $r2;

        r3 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        r1 = newarray (java.lang.String)[$i0];

        i2 = 0;

     label1:
        $i1 = lengthof r0;

        if i2 >= $i1 goto label2;

        $r2 = r0[i2];

        r1[i2] = $r2;

        i2 = i2 + 1;

        goto label1;

     label2:
        return r1;
    }

    public static void validateAnnotationKey(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.String r0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("?");

        if $z0 != 0 goto label1;

        $z1 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>("@");

        if $z1 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Annotation keys must not contain the \'?\' or \'@\' characters");

        throw $r1;

     label2:
        return;
    }

    public int changeSize()
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        int $i0;
        java.lang.String[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int endSize()
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        int $i0;
        java.lang.String[] $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] endKeys>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public java.lang.String getChangeKey(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeKeys>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String getNewValue(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeNewValues>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String getOldValue(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] changeOldValues>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String getEndKey(int)
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        int i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] endKeys>;

        $r2 = $r1[i0];

        return $r2;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl r0;
        java.lang.String $r1;

        r0 := @this: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.DocOpUtil: java.lang.String toConciseString(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r0);

        return $r1;
    }

    static java.lang.String[] access$000()
    {
        java.lang.String[] $r0;

        $r0 = <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] EMPTY_ARRAY>;

        return $r0;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl $r2;
        java.lang.String[] $r0;
        org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder $r1;

        $r0 = newarray (java.lang.String)[0];

        <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: java.lang.String[] EMPTY_ARRAY> = $r0;

        $r1 = staticinvoke <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder builder()>();

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl$Builder: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl build()>();

        <org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl: org.waveprotocol.wave.model.document.operation.impl.AnnotationBoundaryMapImpl EMPTY_MAP> = $r2;

        return;
    }
}
