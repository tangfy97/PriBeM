class org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker extends org.eclipse.jetty.servlets.DoSFilter$RateTracker
{
    final org.eclipse.jetty.servlets.DoSFilter this$0;

    public void <init>(org.eclipse.jetty.servlets.DoSFilter, java.lang.String, int, int)
    {
        org.eclipse.jetty.servlets.DoSFilter r1;
        int i0, i1;
        org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker r0;
        java.lang.String r2;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker;

        r1 := @parameter0: org.eclipse.jetty.servlets.DoSFilter;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r0.<org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker: org.eclipse.jetty.servlets.DoSFilter this$0> = r1;

        specialinvoke r0.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: void <init>(org.eclipse.jetty.servlets.DoSFilter,java.lang.String,int,int)>(r1, r2, i0, i1);

        return;
    }

    public boolean isRateExceeded(long)
    {
        java.lang.Throwable $r3;
        long l0;
        long[] $r1, $r2;
        int $i1, $i2, $i3, $i4, $i5;
        org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker r0;

        r0 := @this: org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker;

        l0 := @parameter0: long;

        entermonitor r0;

     label1:
        $r1 = r0.<org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker: long[] _timestamps>;

        $i1 = r0.<org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker: int _next>;

        $r1[$i1] = l0;

        $i2 = r0.<org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker: int _next>;

        $i4 = $i2 + 1;

        $r2 = r0.<org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker: long[] _timestamps>;

        $i3 = lengthof $r2;

        $i5 = $i4 % $i3;

        r0.<org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker: int _next> = $i5;

        exitmonitor r0;

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        exitmonitor r0;

     label4:
        throw $r3;

     label5:
        return 0;

        catch java.lang.Throwable from label1 to label2 with label3;
        catch java.lang.Throwable from label3 to label4 with label3;
    }

    public java.lang.String toString()
    {
        java.lang.StringBuilder $r0, $r1, $r4;
        org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker r2;
        java.lang.String $r3, $r5;

        r2 := @this: org.eclipse.jetty.servlets.DoSFilter$FixedRateTracker;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Fixed");

        $r3 = specialinvoke r2.<org.eclipse.jetty.servlets.DoSFilter$RateTracker: java.lang.String toString()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }
}
