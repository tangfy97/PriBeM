public class org.apache.http.auth.AuthState extends java.lang.Object
{
    private org.apache.http.auth.AuthProtocolState state;
    private org.apache.http.auth.AuthScheme authScheme;
    private org.apache.http.auth.AuthScope authScope;
    private org.apache.http.auth.Credentials credentials;
    private java.util.Queue authOptions;

    public void <init>()
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.AuthProtocolState $r1;

        r0 := @this: org.apache.http.auth.AuthState;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.apache.http.auth.AuthProtocolState: org.apache.http.auth.AuthProtocolState UNCHALLENGED>;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState state> = $r1;

        return;
    }

    public void reset()
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.AuthProtocolState $r1;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = <org.apache.http.auth.AuthProtocolState: org.apache.http.auth.AuthProtocolState UNCHALLENGED>;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState state> = $r1;

        r0.<org.apache.http.auth.AuthState: java.util.Queue authOptions> = null;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme> = null;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope authScope> = null;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials credentials> = null;

        return;
    }

    public org.apache.http.auth.AuthProtocolState getState()
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.AuthProtocolState $r1;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState state>;

        return $r1;
    }

    public void setState(org.apache.http.auth.AuthProtocolState)
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.AuthProtocolState r1, $r2;

        r0 := @this: org.apache.http.auth.AuthState;

        r1 := @parameter0: org.apache.http.auth.AuthProtocolState;

        if r1 == null goto label1;

        $r2 = r1;

        goto label2;

     label1:
        $r2 = <org.apache.http.auth.AuthProtocolState: org.apache.http.auth.AuthProtocolState UNCHALLENGED>;

     label2:
        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState state> = $r2;

        return;
    }

    public org.apache.http.auth.AuthScheme getAuthScheme()
    {
        org.apache.http.auth.AuthScheme $r1;
        org.apache.http.auth.AuthState r0;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme>;

        return $r1;
    }

    public org.apache.http.auth.Credentials getCredentials()
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.Credentials $r1;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials credentials>;

        return $r1;
    }

    public void update(org.apache.http.auth.AuthScheme, org.apache.http.auth.Credentials)
    {
        org.apache.http.auth.Credentials r1;
        org.apache.http.auth.AuthScheme r0;
        org.apache.http.auth.AuthState r2;
        java.lang.IllegalArgumentException $r3, $r4;

        r2 := @this: org.apache.http.auth.AuthState;

        r0 := @parameter0: org.apache.http.auth.AuthScheme;

        r1 := @parameter1: org.apache.http.auth.Credentials;

        if r0 != null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Auth scheme may not be null or empty");

        throw $r4;

     label1:
        if r1 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Credentials may not be null or empty");

        throw $r3;

     label2:
        r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme> = r0;

        r2.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials credentials> = r1;

        r2.<org.apache.http.auth.AuthState: java.util.Queue authOptions> = null;

        return;
    }

    public java.util.Queue getAuthOptions()
    {
        org.apache.http.auth.AuthState r0;
        java.util.Queue $r1;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: java.util.Queue authOptions>;

        return $r1;
    }

    public boolean hasAuthOptions()
    {
        org.apache.http.auth.AuthState r0;
        java.util.Queue $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: java.util.Queue authOptions>;

        if $r1 == null goto label1;

        $r2 = r0.<org.apache.http.auth.AuthState: java.util.Queue authOptions>;

        $z0 = interfaceinvoke $r2.<java.util.Queue: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void update(java.util.Queue)
    {
        java.util.Queue r0;
        org.apache.http.auth.AuthState r2;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r2 := @this: org.apache.http.auth.AuthState;

        r0 := @parameter0: java.util.Queue;

        if r0 == null goto label1;

        $z0 = interfaceinvoke r0.<java.util.Queue: boolean isEmpty()>();

        if $z0 == 0 goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Queue of auth options may not be null or empty");

        throw $r1;

     label2:
        r2.<org.apache.http.auth.AuthState: java.util.Queue authOptions> = r0;

        r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme> = null;

        r2.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials credentials> = null;

        return;
    }

    public void invalidate()
    {
        org.apache.http.auth.AuthState r0;

        r0 := @this: org.apache.http.auth.AuthState;

        virtualinvoke r0.<org.apache.http.auth.AuthState: void reset()>();

        return;
    }

    public boolean isValid()
    {
        org.apache.http.auth.AuthScheme $r1;
        org.apache.http.auth.AuthState r0;
        boolean $z0;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setAuthScheme(org.apache.http.auth.AuthScheme)
    {
        org.apache.http.auth.AuthScheme r0;
        org.apache.http.auth.AuthState r1;

        r1 := @this: org.apache.http.auth.AuthState;

        r0 := @parameter0: org.apache.http.auth.AuthScheme;

        if r0 != null goto label1;

        virtualinvoke r1.<org.apache.http.auth.AuthState: void reset()>();

        return;

     label1:
        r1.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme> = r0;

        return;
    }

    public void setCredentials(org.apache.http.auth.Credentials)
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.Credentials r1;

        r0 := @this: org.apache.http.auth.AuthState;

        r1 := @parameter0: org.apache.http.auth.Credentials;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials credentials> = r1;

        return;
    }

    public org.apache.http.auth.AuthScope getAuthScope()
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.AuthScope $r1;

        r0 := @this: org.apache.http.auth.AuthState;

        $r1 = r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope authScope>;

        return $r1;
    }

    public void setAuthScope(org.apache.http.auth.AuthScope)
    {
        org.apache.http.auth.AuthState r0;
        org.apache.http.auth.AuthScope r1;

        r0 := @this: org.apache.http.auth.AuthState;

        r1 := @parameter0: org.apache.http.auth.AuthScope;

        r0.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScope authScope> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.apache.http.auth.AuthProtocolState $r3;
        org.apache.http.auth.Credentials $r6;
        org.apache.http.auth.AuthScheme $r5, $r9;
        java.lang.StringBuilder $r0, $r1, $r4, $r8, $r11;
        org.apache.http.auth.AuthState r2;
        java.lang.String $r7, $r10;

        r2 := @this: org.apache.http.auth.AuthState;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("state:");

        $r3 = r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthProtocolState state>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

        $r5 = r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme>;

        if $r5 == null goto label1;

        $r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("auth scheme:");

        $r9 = r2.<org.apache.http.auth.AuthState: org.apache.http.auth.AuthScheme authScheme>;

        $r10 = interfaceinvoke $r9.<org.apache.http.auth.AuthScheme: java.lang.String getSchemeName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(";");

     label1:
        $r6 = r2.<org.apache.http.auth.AuthState: org.apache.http.auth.Credentials credentials>;

        if $r6 == null goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("credentials present");

     label2:
        $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }
}
