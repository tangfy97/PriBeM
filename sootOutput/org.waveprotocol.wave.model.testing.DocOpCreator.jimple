public class org.waveprotocol.wave.model.testing.DocOpCreator extends java.lang.Object
{

    public void <init>()
    {
        org.waveprotocol.wave.model.testing.DocOpCreator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.DocOpCreator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp insertCharacters(int, int, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r3, $r4;
        org.waveprotocol.wave.model.document.operation.DocOp $r5;
        int i0, i1, $i2;
        java.lang.String r2;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r3 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder characters(java.lang.String)>(r2);

        $i2 = i1 - i0;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i2);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r5;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp insertElement(int, int, java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r4, $r5, $r6;
        org.waveprotocol.wave.model.document.operation.DocOp $r7;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        int i0, i1, $i2;
        java.lang.String r2;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.waveprotocol.wave.model.document.operation.Attributes;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder elementEnd()>();

        $i2 = i1 - i0;

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i2);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r7;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp deleteCharacters(int, int, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r3, $r4;
        org.waveprotocol.wave.model.document.operation.DocOp $r5;
        int i0, i1, $i2, $i3, $i4;
        java.lang.String r2;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r3 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder deleteCharacters(java.lang.String)>(r2);

        $i2 = i1 - i0;

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = $i2 - $i3;

        $r4 = virtualinvoke $r3.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i4);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r5;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp deleteElement(int, int, java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r4, $r5, $r6;
        org.waveprotocol.wave.model.document.operation.DocOp $r7;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        int i0, i1, $i2, $i3;
        java.lang.String r2;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: org.waveprotocol.wave.model.document.operation.Attributes;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder deleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder deleteElementEnd()>();

        $i2 = i1 - i0;

        $i3 = $i2 - 2;

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i3);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r7;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp replaceAttributes(int, int, org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r4, $r5;
        org.waveprotocol.wave.model.document.operation.DocOp $r6;
        org.waveprotocol.wave.model.document.operation.Attributes r2, r3;
        int i0, i1, $i2, $i3;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r2 := @parameter2: org.waveprotocol.wave.model.document.operation.Attributes;

        r3 := @parameter3: org.waveprotocol.wave.model.document.operation.Attributes;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r4 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        $i2 = i1 - i0;

        $i3 = $i2 - 1;

        $r5 = virtualinvoke $r4.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i3);

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r6;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp setAttribute(int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r7, $r8;
        org.waveprotocol.wave.model.document.operation.DocOp $r9;
        java.lang.String[] $r3;
        int i0, i1, $i2, $i3;
        java.lang.String r4, r5, r6;
        org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl $r2;

        i1 := @parameter0: int;

        i0 := @parameter1: int;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r2 = new org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl;

        $r3 = newarray (java.lang.String)[3];

        $r3[0] = r4;

        $r3[1] = r5;

        $r3[2] = r6;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.impl.AttributesUpdateImpl: void <init>(java.lang.String[])>($r3);

        $r7 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>($r2);

        $i2 = i1 - i0;

        $i3 = $i2 - 1;

        $r8 = virtualinvoke $r7.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i3);

        $r9 = virtualinvoke $r8.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r9;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp setAnnotation(int, int, int, java.lang.String, java.lang.String, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1, $r5, $r6;
        org.waveprotocol.wave.model.document.operation.DocOp $r7;
        int i0, i1, $i2, i3, $i4;
        java.lang.String r2, r3, r4;

        i3 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r2 := @parameter3: java.lang.String;

        r3 := @parameter4: java.lang.String;

        r4 := @parameter5: java.lang.String;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $i2 = i1 - i0;

        $r5 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder setAnnotation(int,java.lang.String,java.lang.String,java.lang.String)>($i2, r2, r3, r4);

        $i4 = i3 - i1;

        $r6 = virtualinvoke $r5.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>($i4);

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r7;
    }

    public static org.waveprotocol.wave.model.document.operation.DocOp identity(int)
    {
        org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder $r0, $r1;
        int i0;
        org.waveprotocol.wave.model.document.operation.DocOp $r2;

        i0 := @parameter0: int;

        $r0 = new org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder;

        specialinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: void <init>(org.waveprotocol.wave.model.testing.DocOpCreator$1)>(null);

        $r1 = virtualinvoke $r0.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder retain(int)>(i0);

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.testing.DocOpCreator$SimplifyingDocOpBuilder: org.waveprotocol.wave.model.document.operation.DocOp build()>();

        return $r2;
    }
}
