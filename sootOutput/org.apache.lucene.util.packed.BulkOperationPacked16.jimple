final class org.apache.lucene.util.packed.BulkOperationPacked16 extends org.apache.lucene.util.packed.BulkOperationPacked
{

    public void <init>()
    {
        org.apache.lucene.util.packed.BulkOperationPacked16 r0;

        r0 := @this: org.apache.lucene.util.packed.BulkOperationPacked16;

        specialinvoke r0.<org.apache.lucene.util.packed.BulkOperationPacked: void <init>(int)>(16);

        return;
    }

    public void decode(long[], int, int[], int, int)
    {
        long l2, $l4, $l5;
        long[] r0;
        int[] r1;
        int i0, $i1, $i3, $i6, i7, i8, i9, i10, $i12;
        org.apache.lucene.util.packed.BulkOperationPacked16 r2;

        r2 := @this: org.apache.lucene.util.packed.BulkOperationPacked16;

        r0 := @parameter0: long[];

        i7 := @parameter1: int;

        r1 := @parameter2: int[];

        i8 := @parameter3: int;

        i0 := @parameter4: int;

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $i1 = i7;

        i7 = i7 + 1;

        l2 = r0[$i1];

        i10 = 48;

     label2:
        if i10 < 0 goto label3;

        $i3 = i8;

        i8 = i8 + 1;

        $l4 = l2 >>> i10;

        $l5 = $l4 & 65535L;

        $i6 = (int) $l5;

        r1[$i3] = $i6;

        $i12 = (int) -16;

        i10 = i10 + $i12;

        goto label2;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    public void decode(byte[], int, int[], int, int)
    {
        byte[] r1;
        short $s3, $s5, $s12, $s14;
        byte $b2, $b4;
        int[] r0;
        int i0, $i1, $i6, $i7, i8, i9, i10, i11, $i13, $i15;
        org.apache.lucene.util.packed.BulkOperationPacked16 r2;

        r2 := @this: org.apache.lucene.util.packed.BulkOperationPacked16;

        r1 := @parameter0: byte[];

        i8 := @parameter1: int;

        r0 := @parameter2: int[];

        i9 := @parameter3: int;

        i0 := @parameter4: int;

        i10 = 0;

     label1:
        if i10 >= i0 goto label2;

        $i1 = i9;

        i9 = i9 + 1;

        i11 = i8 + 1;

        $b2 = r1[i8];

        $s12 = (short) $b2;

        $s3 = $s12 & 255;

        $i13 = (int) $s3;

        $i6 = $i13 << 8;

        i8 = i11 + 1;

        $b4 = r1[i11];

        $s14 = (short) $b4;

        $s5 = $s14 & 255;

        $i15 = (int) $s5;

        $i7 = $i6 | $i15;

        r0[$i1] = $i7;

        i10 = i10 + 1;

        goto label1;

     label2:
        return;
    }

    public void decode(long[], int, long[], int, int)
    {
        long l2, $l4, $l5;
        long[] r0, r1;
        int i0, $i1, $i3, i6, i7, i8, i9, $i11;
        org.apache.lucene.util.packed.BulkOperationPacked16 r2;

        r2 := @this: org.apache.lucene.util.packed.BulkOperationPacked16;

        r0 := @parameter0: long[];

        i6 := @parameter1: int;

        r1 := @parameter2: long[];

        i7 := @parameter3: int;

        i0 := @parameter4: int;

        i8 = 0;

     label1:
        if i8 >= i0 goto label4;

        $i1 = i6;

        i6 = i6 + 1;

        l2 = r0[$i1];

        i9 = 48;

     label2:
        if i9 < 0 goto label3;

        $i3 = i7;

        i7 = i7 + 1;

        $l4 = l2 >>> i9;

        $l5 = $l4 & 65535L;

        r1[$i3] = $l5;

        $i11 = (int) -16;

        i9 = i9 + $i11;

        goto label2;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        return;
    }

    public void decode(byte[], int, long[], int, int)
    {
        byte[] r1;
        long $l3, $l4, $l6, $l7, $l8, $l9;
        long[] r0;
        byte $b2, $b5;
        int i0, $i1, i10, i11, i12, i13;
        org.apache.lucene.util.packed.BulkOperationPacked16 r2;

        r2 := @this: org.apache.lucene.util.packed.BulkOperationPacked16;

        r1 := @parameter0: byte[];

        i10 := @parameter1: int;

        r0 := @parameter2: long[];

        i11 := @parameter3: int;

        i0 := @parameter4: int;

        i12 = 0;

     label1:
        if i12 >= i0 goto label2;

        $i1 = i11;

        i11 = i11 + 1;

        i13 = i10 + 1;

        $b2 = r1[i10];

        $l3 = (long) $b2;

        $l4 = $l3 & 255L;

        $l8 = $l4 << 8;

        i10 = i13 + 1;

        $b5 = r1[i13];

        $l6 = (long) $b5;

        $l7 = $l6 & 255L;

        $l9 = $l8 | $l7;

        r0[$i1] = $l9;

        i12 = i12 + 1;

        goto label1;

     label2:
        return;
    }
}
