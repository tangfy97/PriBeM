public final class com.mycila.inject.scope.RenewableSingleton extends com.mycila.inject.scope.MycilaScope
{
    final long expirationDelay;

    public void <init>(long, java.util.concurrent.TimeUnit)
    {
        java.util.concurrent.TimeUnit r1;
        com.mycila.inject.scope.RenewableSingleton r0;
        long l0, $l1;

        r0 := @this: com.mycila.inject.scope.RenewableSingleton;

        l0 := @parameter0: long;

        r1 := @parameter1: java.util.concurrent.TimeUnit;

        specialinvoke r0.<com.mycila.inject.scope.MycilaScope: void <init>()>();

        $l1 = virtualinvoke r1.<java.util.concurrent.TimeUnit: long toMillis(long)>(l0);

        r0.<com.mycila.inject.scope.RenewableSingleton: long expirationDelay> = $l1;

        return;
    }

    public com.google.inject.Provider scope(com.google.inject.Key, com.google.inject.Provider)
    {
        com.mycila.inject.scope.RenewableSingleton$1 $r0;
        com.google.inject.Provider r2;
        com.mycila.inject.scope.RenewableSingleton r1;
        com.google.inject.Key r3;

        r1 := @this: com.mycila.inject.scope.RenewableSingleton;

        r3 := @parameter0: com.google.inject.Key;

        r2 := @parameter1: com.google.inject.Provider;

        $r0 = new com.mycila.inject.scope.RenewableSingleton$1;

        specialinvoke $r0.<com.mycila.inject.scope.RenewableSingleton$1: void <init>(com.mycila.inject.scope.RenewableSingleton,com.google.inject.Provider)>(r1, r2);

        return $r0;
    }
}
