public class org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider extends java.lang.Object implements org.apache.cxf.jaxrs.ext.RequestHandler
{
    public static final java.lang.String CODE_QUERY;
    public static final java.lang.String LANGUAGE_QUERY;
    public static final java.lang.String OS_QUERY;
    public static final java.lang.String SOURCE_QUERY;
    public static final java.lang.String CODE_TYPE_QUERY;
    private static final java.util.logging.Logger LOG;
    private static final java.util.Set SUPPORTED_LANGUAGES;
    private static final java.io.File TMPDIR;
    private java.util.Comparator importsComparator;
    private javax.ws.rs.core.UriInfo ui;
    private java.lang.String resourcePackageName;
    private java.lang.String resourceName;
    private boolean generateInterfaces;
    private org.apache.cxf.Bus bus;

    public void <init>()
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: boolean generateInterfaces> = 1;

        return;
    }

    public void setUriInfo(javax.ws.rs.core.UriInfo)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        javax.ws.rs.core.UriInfo r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r1 := @parameter0: javax.ws.rs.core.UriInfo;

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui> = r1;

        return;
    }

    public void setBus(org.apache.cxf.Bus)
    {
        org.apache.cxf.Bus r1;
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r1 := @parameter0: org.apache.cxf.Bus;

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: org.apache.cxf.Bus bus> = r1;

        return;
    }

    public javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        boolean $z0, $z1, $z2;
        java.util.Set $r14;
        javax.ws.rs.core.Response $r13, $r22, $r26;
        javax.ws.rs.core.Response$ResponseBuilder $r15, $r20, $r21;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r12;
        java.lang.StringBuilder $r16, $r17, $r18;
        javax.ws.rs.core.UriInfo $r4, $r6, $r9;
        java.lang.Throwable $r27;
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r3;
        java.lang.String $r1, $r19, $r25, r28, r29;
        org.apache.cxf.message.Message r0;
        java.io.File $r23, $r24;
        javax.ws.rs.core.MultivaluedMap $r5, $r7, $r10;
        java.lang.Object $r2, $r8, $r11;

        r3 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r12 := @parameter1: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = "GET";

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("org.apache.cxf.request.method");

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r2);

        if $z0 != 0 goto label1;

        return null;

     label1:
        $r4 = r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r5 = interfaceinvoke $r4.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        $z1 = interfaceinvoke $r5.<javax.ws.rs.core.MultivaluedMap: boolean containsKey(java.lang.Object)>("_source");

        if $z1 == 0 goto label6;

        entermonitor r3;

     label2:
        $r23 = new java.io.File;

        $r24 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.io.File TMPDIR>;

        $r25 = virtualinvoke r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getStem(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String)>(r12, "zip");

        specialinvoke $r23.<java.io.File: void <init>(java.io.File,java.lang.String)>($r24, $r25);

        $r26 = specialinvoke r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.Response getSource(java.io.File)>($r23);

        exitmonitor r3;

     label3:
        return $r26;

     label4:
        $r27 := @caughtexception;

        exitmonitor r3;

     label5:
        throw $r27;

     label6:
        $r6 = r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r7 = interfaceinvoke $r6.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        $r8 = interfaceinvoke $r7.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_code");

        r28 = (java.lang.String) $r8;

        if r28 != null goto label7;

        return null;

     label7:
        $r9 = r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r10 = interfaceinvoke $r9.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        $r11 = interfaceinvoke $r10.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_lang");

        r29 = (java.lang.String) $r11;

        if r29 == null goto label8;

        $r14 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.Set SUPPORTED_LANGUAGES>;

        $z2 = interfaceinvoke $r14.<java.util.Set: boolean contains(java.lang.Object)>(r29);

        if $z2 != 0 goto label8;

        $r15 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder noContent()>();

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported language");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r29);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        $r20 = virtualinvoke $r15.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r19);

        $r21 = virtualinvoke $r20.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>("text/plain");

        $r22 = virtualinvoke $r21.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r22;

     label8:
        $r13 = virtualinvoke r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.Response doHandleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r0, r12);

        return $r13;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
    }

    protected javax.ws.rs.core.Response doHandleRequest(org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        java.lang.IllegalStateException $r31;
        org.apache.cxf.jaxrs.ext.codegen.SourceGenerator $r15;
        java.util.Map $r14;
        boolean $z0, $z1, $z2;
        java.util.logging.Logger $r22, $r41;
        java.lang.Exception $r39;
        javax.ws.rs.core.Response $r6, $r20, $r28, $r47;
        javax.ws.rs.core.Response$ResponseBuilder $r27, $r46;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r2;
        java.lang.StringBuilder $r21, $r23, $r24, $r25, $r32, $r33, $r35, $r40, $r43, $r44;
        javax.ws.rs.core.UriInfo $r10;
        org.apache.cxf.Bus $r19;
        java.lang.Throwable $r37, $r38;
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        java.util.logging.Level $r42;
        java.lang.String $r4, $r9, $r13, $r17, $r18, $r26, $r30, $r34, $r36, $r45, $r49, $r50;
        org.apache.cxf.message.Message r5;
        java.io.File $r1, $r3, $r7, $r8;
        javax.ws.rs.core.MultivaluedMap $r11;
        java.lang.Object $r12;
        java.lang.Class $r29, $r48;
        java.util.Comparator $r16;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r5 := @parameter0: org.apache.cxf.message.Message;

        r2 := @parameter1: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        entermonitor r0;

     label01:
        $r1 = new java.io.File;

        $r3 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.io.File TMPDIR>;

        $r4 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getStem(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String)>(r2, "zip");

        specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r4);

        $r6 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.Response getLink(java.io.File,org.apache.cxf.message.Message)>($r1, r5);

        if $r6 == null goto label03;

        exitmonitor r0;

     label02:
        return $r6;

     label03:
        $r7 = new java.io.File;

        $r8 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.io.File TMPDIR>;

        $r9 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getStem(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String)>(r2, "src");

        specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r8, $r9);

        $z0 = virtualinvoke $r7.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label04;

        $z2 = virtualinvoke $r7.<java.io.File: boolean mkdir()>();

        if $z2 != 0 goto label04;

        $r31 = new java.lang.IllegalStateException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unable to create working directory ");

        $r34 = virtualinvoke $r7.<java.io.File: java.lang.String getPath()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r36);

        throw $r31;

     label04:
        $r10 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r11 = interfaceinvoke $r10.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        $r12 = interfaceinvoke $r11.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_codeType");

        $r30 = (java.lang.String) $r12;

     label05:
        $r13 = virtualinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getWadl(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r5, r2);

        if $r13 != null goto label10;

        $r22 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.logging.Logger LOG>;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("WADL for ");

        if r2 == null goto label06;

        $r29 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r49 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        goto label07;

     label06:
        $r49 = "this service";

     label07:
        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" can not be loaded");

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r22.<java.util.logging.Logger: void warning(java.lang.String)>($r26);

        $r27 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder noContent()>();

        $r28 = virtualinvoke $r27.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

     label08:
        staticinvoke <org.apache.cxf.helpers.FileUtils: void removeDir(java.io.File)>($r7);

        exitmonitor r0;

     label09:
        return $r28;

     label10:
        $r14 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.Map getProperties()>();

        $r15 = new org.apache.cxf.jaxrs.ext.codegen.SourceGenerator;

        specialinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void <init>(java.util.Map)>($r14);

        $z1 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: boolean generateInterfaces>;

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void setGenerateInterfaces(boolean)>($z1);

        $r16 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.Comparator importsComparator>;

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void setImportsComparator(java.util.Comparator)>($r16);

        $r17 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String resourceName>;

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void setResourceName(java.lang.String)>($r17);

        $r18 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String resourcePackageName>;

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void setPackageName(java.lang.String)>($r18);

        $r19 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: org.apache.cxf.Bus bus>;

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void setBus(org.apache.cxf.Bus)>($r19);

        virtualinvoke $r15.<org.apache.cxf.jaxrs.ext.codegen.SourceGenerator: void generateSource(java.lang.String,java.io.File,java.lang.String)>($r13, $r7, $r30);

        specialinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: void zipSource(java.io.File,java.io.File)>($r7, $r1);

        $r20 = specialinvoke r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.Response getLink(java.io.File,org.apache.cxf.message.Message)>($r1, r5);

     label11:
        staticinvoke <org.apache.cxf.helpers.FileUtils: void removeDir(java.io.File)>($r7);

        exitmonitor r0;

     label12:
        return $r20;

     label13:
        $r39 := @caughtexception;

        $r41 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.logging.Logger LOG>;

        $r42 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r43 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Code can not be generated for ");

        if r2 == null goto label14;

        $r48 = virtualinvoke r2.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r50 = virtualinvoke $r48.<java.lang.Class: java.lang.String getName()>();

        goto label15;

     label14:
        $r50 = "this service";

     label15:
        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r41.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r42, $r45, $r39);

        staticinvoke <org.apache.cxf.helpers.FileUtils: void removeDir(java.io.File)>($r1);

        $r46 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder noContent()>();

        $r47 = virtualinvoke $r46.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

     label16:
        staticinvoke <org.apache.cxf.helpers.FileUtils: void removeDir(java.io.File)>($r7);

        exitmonitor r0;

     label17:
        return $r47;

     label18:
        $r38 := @caughtexception;

     label19:
        staticinvoke <org.apache.cxf.helpers.FileUtils: void removeDir(java.io.File)>($r7);

        throw $r38;

     label20:
        $r37 := @caughtexception;

        exitmonitor r0;

     label21:
        throw $r37;

        catch java.lang.Exception from label05 to label08 with label13;
        catch java.lang.Exception from label10 to label11 with label13;
        catch java.lang.Throwable from label05 to label08 with label18;
        catch java.lang.Throwable from label10 to label11 with label18;
        catch java.lang.Throwable from label13 to label16 with label18;
        catch java.lang.Throwable from label18 to label19 with label18;
        catch java.lang.Throwable from label01 to label02 with label20;
        catch java.lang.Throwable from label03 to label09 with label20;
        catch java.lang.Throwable from label10 to label12 with label20;
        catch java.lang.Throwable from label13 to label17 with label20;
        catch java.lang.Throwable from label18 to label21 with label20;
    }

    private java.util.Map getProperties()
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r1;
        java.util.HashMap $r0;
        java.lang.String $r2, $r3;

        r1 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        $r0 = new java.util.HashMap;

        specialinvoke $r0.<java.util.HashMap: void <init>()>();

        $r2 = specialinvoke r1.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getLineSep()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("line.separator", $r2);

        $r3 = specialinvoke r1.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getFileSep()>();

        interfaceinvoke $r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("file.separator", $r3);

        return $r0;
    }

    private void zipSource(java.io.File, java.io.File) throws java.lang.Exception
    {
        java.util.zip.ZipOutputStream $r3;
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r15;
        int $i0, $i1;
        java.lang.String $r2, $r10, $r11, $r12;
        java.util.zip.ZipEntry $r13;
        boolean $z0, $z1;
        java.util.Iterator $r7;
        java.io.FileOutputStream $r4;
        java.io.FileInputStream $r14;
        java.io.File r0, $r1, r5, r9;
        java.util.List $r6;
        java.lang.Object $r8;

        r15 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r5 := @parameter0: java.io.File;

        r0 := @parameter1: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        virtualinvoke r0.<java.io.File: boolean mkdir()>();

     label1:
        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, "src.zip");

        virtualinvoke $r1.<java.io.File: boolean createNewFile()>();

        $r3 = new java.util.zip.ZipOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>($r1);

        specialinvoke $r3.<java.util.zip.ZipOutputStream: void <init>(java.io.OutputStream)>($r4);

        $r6 = staticinvoke <org.apache.cxf.helpers.FileUtils: java.util.List getFilesRecurse(java.io.File,java.lang.String)>(r5, ".+\\.java$");

        $r7 = interfaceinvoke $r6.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (java.io.File) $r8;

        $r10 = virtualinvoke r9.<java.io.File: java.lang.String getAbsolutePath()>();

        $r11 = virtualinvoke r5.<java.io.File: java.lang.String getAbsolutePath()>();

        $i0 = virtualinvoke $r11.<java.lang.String: int length()>();

        $i1 = $i0 + 1;

        $r12 = virtualinvoke $r10.<java.lang.String: java.lang.String substring(int)>($i1);

        $r13 = new java.util.zip.ZipEntry;

        specialinvoke $r13.<java.util.zip.ZipEntry: void <init>(java.lang.String)>($r12);

        virtualinvoke $r3.<java.util.zip.ZipOutputStream: void putNextEntry(java.util.zip.ZipEntry)>($r13);

        $r14 = new java.io.FileInputStream;

        specialinvoke $r14.<java.io.FileInputStream: void <init>(java.io.File)>(r9);

        staticinvoke <org.apache.cxf.helpers.IOUtils: int copy(java.io.InputStream,java.io.OutputStream)>($r14, $r3);

        goto label2;

     label3:
        virtualinvoke $r3.<java.util.zip.ZipOutputStream: void close()>();

        return;
    }

    private java.lang.String getLineSep()
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        javax.ws.rs.core.MultivaluedMap $r2;
        java.lang.Object $r3;
        javax.ws.rs.core.UriInfo $r1;
        java.lang.String r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_os");

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        $r6 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("line.separator");

        return $r6;

     label1:
        $r5 = "unix";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r7 = "\r";

        goto label3;

     label2:
        $r7 = "\r\n";

     label3:
        return $r7;
    }

    private java.lang.String getFileSep()
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        javax.ws.rs.core.MultivaluedMap $r2;
        java.lang.Object $r3;
        javax.ws.rs.core.UriInfo $r1;
        java.lang.String r4, $r5, $r6, $r7;
        boolean $z0;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        $r1 = r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r2 = interfaceinvoke $r1.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.MultivaluedMap getQueryParameters()>();

        $r3 = interfaceinvoke $r2.<javax.ws.rs.core.MultivaluedMap: java.lang.Object getFirst(java.lang.Object)>("_os");

        r4 = (java.lang.String) $r3;

        if r4 != null goto label1;

        $r6 = staticinvoke <org.apache.cxf.common.util.SystemPropertyAction: java.lang.String getProperty(java.lang.String)>("file.separator");

        return $r6;

     label1:
        $r5 = "unix";

        $z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label2;

        $r7 = "/";

        goto label3;

     label2:
        $r7 = "\\";

     label3:
        return $r7;
    }

    private javax.ws.rs.core.Response getSource(java.io.File)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r12;
        java.io.FileInputStream $r7;
        java.io.File r0, $r3;
        java.io.FileNotFoundException $r10;
        javax.ws.rs.core.Response $r2, $r9;
        javax.ws.rs.core.Response$ResponseBuilder $r1, $r5, $r6, $r8;
        javax.ws.rs.WebApplicationException $r11;
        java.lang.String $r4;
        boolean $z0, $z1;

        r12 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label4;

        $r3 = new java.io.File;

        $r4 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r4, "src.zip");

        $z1 = virtualinvoke $r3.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label4;

     label1:
        $r5 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok()>();

        $r6 = virtualinvoke $r5.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>("application/zip");

        $r7 = new java.io.FileInputStream;

        specialinvoke $r7.<java.io.FileInputStream: void <init>(java.io.File)>($r3);

        $r8 = virtualinvoke $r6.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

     label2:
        return $r9;

     label3:
        $r10 := @caughtexception;

        $r11 = new javax.ws.rs.WebApplicationException;

        specialinvoke $r11.<javax.ws.rs.WebApplicationException: void <init>()>();

        throw $r11;

     label4:
        $r1 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder noContent()>();

        $r2 = virtualinvoke $r1.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r2;

        catch java.io.FileNotFoundException from label1 to label2 with label3;
    }

    private javax.ws.rs.core.Response getLink(java.io.File, org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r3;
        java.lang.Object[] $r6, $r8;
        java.lang.Boolean $r22;
        javax.ws.rs.core.UriBuilder $r5, $r7;
        java.lang.String $r2, $r10, $r19, $r25;
        java.net.URI $r9;
        boolean $z0, $z1;
        org.apache.cxf.message.Message r20;
        org.apache.cxf.message.Exchange $r21;
        java.io.File r0, $r1;
        javax.ws.rs.core.Response $r27;
        javax.ws.rs.core.Response$ResponseBuilder $r23, $r24, $r26;
        java.lang.StringBuilder $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18;
        javax.ws.rs.core.UriInfo $r4;

        r3 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r0 := @parameter0: java.io.File;

        r20 := @parameter1: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        $r1 = new java.io.File;

        $r2 = virtualinvoke r0.<java.io.File: java.lang.String getAbsolutePath()>();

        specialinvoke $r1.<java.io.File: void <init>(java.lang.String,java.lang.String)>($r2, "src.zip");

        $z1 = virtualinvoke $r1.<java.io.File: boolean exists()>();

        if $z1 == 0 goto label1;

        $r4 = r3.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: javax.ws.rs.core.UriInfo ui>;

        $r5 = interfaceinvoke $r4.<javax.ws.rs.core.UriInfo: javax.ws.rs.core.UriBuilder getAbsolutePathBuilder()>();

        $r6 = newarray (java.lang.Object)[0];

        $r7 = virtualinvoke $r5.<javax.ws.rs.core.UriBuilder: javax.ws.rs.core.UriBuilder queryParam(java.lang.String,java.lang.Object[])>("_source", $r6);

        $r8 = newarray (java.lang.Object)[0];

        $r9 = virtualinvoke $r7.<javax.ws.rs.core.UriBuilder: java.net.URI build(java.lang.Object[])>($r8);

        $r10 = virtualinvoke $r9.<java.net.URI: java.lang.String toString()>();

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<html xmlns=\"http://www.w3.org/1999/xhtml\">");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<head><title>Download the source</title></head>");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<body>");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<h1>Link:</h1><br/>");

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<ul><a href=\"");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</a>");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</ul>");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</body>");

        virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</html>");

        $r21 = interfaceinvoke r20.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r22 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        interfaceinvoke $r21.<org.apache.cxf.message.Exchange: java.lang.Object put(java.lang.Object,java.lang.Object)>("ignore.message.writers", $r22);

        $r23 = staticinvoke <javax.ws.rs.core.Response: javax.ws.rs.core.Response$ResponseBuilder ok()>();

        $r24 = virtualinvoke $r23.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder type(java.lang.String)>("application/xhtml+xml");

        $r25 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = virtualinvoke $r24.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response$ResponseBuilder entity(java.lang.Object)>($r25);

        $r27 = virtualinvoke $r26.<javax.ws.rs.core.Response$ResponseBuilder: javax.ws.rs.core.Response build()>();

        return $r27;

     label1:
        return null;
    }

    public void removeCode(org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r1;
        java.io.File $r0, $r3, $r5, $r6;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r2;
        java.lang.String $r4, $r7;

        r1 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r2 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r0 = new java.io.File;

        $r3 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.io.File TMPDIR>;

        $r4 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getStem(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String)>(r2, "src");

        specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r3, $r4);

        staticinvoke <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: void removeCode(java.io.File)>($r0);

        $r5 = new java.io.File;

        $r6 = <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.io.File TMPDIR>;

        $r7 = virtualinvoke r1.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String getStem(org.apache.cxf.jaxrs.model.ClassResourceInfo,java.lang.String)>(r2, "zip");

        specialinvoke $r5.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r7);

        staticinvoke <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: void removeCode(java.io.File)>($r5);

        return;
    }

    protected java.lang.String getStem(org.apache.cxf.jaxrs.model.ClassResourceInfo, java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r14;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r0;
        java.lang.StringBuilder $r1, $r2, $r5, $r6, $r8, $r10, $r11, $r12;
        java.lang.Class $r3;
        java.lang.String $r4, r7, $r9, $r13;

        r14 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r0 := @parameter0: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        r7 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cxf-jaxrs-");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r13;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cxf-jaxrs-");

        $r3 = virtualinvoke r0.<org.apache.cxf.jaxrs.model.ClassResourceInfo: java.lang.Class getServiceClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    private static void removeCode(java.io.File)
    {
        java.io.File r0;
        boolean $z0;

        r0 := @parameter0: java.io.File;

        $z0 = virtualinvoke r0.<java.io.File: boolean exists()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.apache.cxf.helpers.FileUtils: void removeDir(java.io.File)>(r0);

     label1:
        return;
    }

    protected java.lang.String getWadl(org.apache.cxf.message.Message, org.apache.cxf.jaxrs.model.ClassResourceInfo)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r14;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r2;
        org.apache.cxf.jaxrs.model.ProviderInfo $r5, $r8;
        int $i0;
        java.lang.String $r1, $r16;
        org.apache.cxf.jaxrs.model.wadl.WadlGenerator $r10, r15;
        boolean $z0;
        org.apache.cxf.message.Message r0;
        java.util.List $r3;
        javax.ws.rs.core.Response $r12;
        org.apache.cxf.jaxrs.model.ClassResourceInfo r11;
        java.lang.Object $r4, $r6, $r7, $r9, $r13;

        r14 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r0 := @parameter0: org.apache.cxf.message.Message;

        r11 := @parameter1: org.apache.cxf.jaxrs.model.ClassResourceInfo;

        $r1 = <org.apache.cxf.message.Message: java.lang.String QUERY_STRING>;

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, "_wadl");

        $r2 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        $r3 = virtualinvoke $r2.<org.apache.cxf.jaxrs.provider.ProviderFactory: java.util.List getRequestHandlers()>();

        $i0 = interfaceinvoke $r3.<java.util.List: int size()>();

        if $i0 <= 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r5 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r4;

        $r6 = virtualinvoke $r5.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        $z0 = $r6 instanceof org.apache.cxf.jaxrs.model.wadl.WadlGenerator;

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r3.<java.util.List: java.lang.Object get(int)>(0);

        $r8 = (org.apache.cxf.jaxrs.model.ProviderInfo) $r7;

        $r9 = virtualinvoke $r8.<org.apache.cxf.jaxrs.model.ProviderInfo: java.lang.Object getProvider()>();

        r15 = (org.apache.cxf.jaxrs.model.wadl.WadlGenerator) $r9;

        $r10 = new org.apache.cxf.jaxrs.model.wadl.WadlGenerator;

        specialinvoke $r10.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator: void <init>(org.apache.cxf.jaxrs.model.wadl.WadlGenerator)>(r15);

        virtualinvoke $r10.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator: void setAddResourceAndMethodIds(boolean)>(1);

        $r12 = virtualinvoke $r10.<org.apache.cxf.jaxrs.model.wadl.WadlGenerator: javax.ws.rs.core.Response handleRequest(org.apache.cxf.message.Message,org.apache.cxf.jaxrs.model.ClassResourceInfo)>(r0, r11);

        if $r12 != null goto label1;

        $r16 = null;

        goto label2;

     label1:
        $r13 = virtualinvoke $r12.<javax.ws.rs.core.Response: java.lang.Object getEntity()>();

        $r16 = (java.lang.String) $r13;

     label2:
        return $r16;

     label3:
        return null;
    }

    public void setImportsComparator(java.util.Comparator)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        java.util.Comparator r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r1 := @parameter0: java.util.Comparator;

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.Comparator importsComparator> = r1;

        return;
    }

    public void setGenerateInterfaces(boolean)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        boolean z0;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        z0 := @parameter0: boolean;

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: boolean generateInterfaces> = z0;

        return;
    }

    public void setPackageName(java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String resourcePackageName> = r1;

        return;
    }

    public void setResourceName(java.lang.String)
    {
        org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String resourceName> = r1;

        return;
    }

    static void <clinit>()
    {
        java.util.HashSet $r1;
        java.util.List $r3;
        java.lang.String[] $r2;
        java.util.logging.Logger $r0;
        java.io.File $r4;

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String CODE_TYPE_QUERY> = "_codeType";

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String SOURCE_QUERY> = "_source";

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String OS_QUERY> = "_os";

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String LANGUAGE_QUERY> = "_lang";

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.lang.String CODE_QUERY> = "_code";

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/ext/codegen/CodeGeneratorProvider;");

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.logging.Logger LOG> = $r0;

        $r1 = new java.util.HashSet;

        $r2 = newarray (java.lang.String)[1];

        $r2[0] = "java";

        $r3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>($r2);

        specialinvoke $r1.<java.util.HashSet: void <init>(java.util.Collection)>($r3);

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.util.Set SUPPORTED_LANGUAGES> = $r1;

        $r4 = staticinvoke <org.apache.cxf.helpers.FileUtils: java.io.File getDefaultTempDir()>();

        <org.apache.cxf.jaxrs.ext.codegen.CodeGeneratorProvider: java.io.File TMPDIR> = $r4;

        return;
    }
}
