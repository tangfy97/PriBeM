public abstract class org.springframework.util.SerializationUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.util.SerializationUtils r0;

        r0 := @this: org.springframework.util.SerializationUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] serialize(java.lang.Object)
    {
        byte[] $r3;
        java.io.ByteArrayOutputStream $r1;
        java.io.IOException $r4;
        java.lang.IllegalArgumentException $r5;
        java.lang.Object r0;
        java.io.ObjectOutputStream $r2;
        java.lang.StringBuilder $r6, $r8;
        java.lang.Class $r7;
        java.lang.String $r9;

        r0 := @parameter0: java.lang.Object;

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.ByteArrayOutputStream;

        specialinvoke $r1.<java.io.ByteArrayOutputStream: void <init>()>();

     label2:
        $r2 = new java.io.ObjectOutputStream;

        specialinvoke $r2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>($r1);

        virtualinvoke $r2.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(r0);

        virtualinvoke $r2.<java.io.ObjectOutputStream: void flush()>();

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to serialize object of type: ");

        $r7 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r4);

        throw $r5;

     label5:
        $r3 = virtualinvoke $r1.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();

        return $r3;

        catch java.io.IOException from label2 to label3 with label4;
    }

    public static java.lang.Object deserialize(byte[])
    {
        byte[] r0;
        java.lang.IllegalStateException $r5;
        java.io.ObjectInputStream $r1;
        java.io.IOException $r6;
        java.lang.IllegalArgumentException $r7;
        java.io.ByteArrayInputStream $r2;
        java.lang.Object $r3;
        java.lang.ClassNotFoundException $r4;

        r0 := @parameter0: byte[];

        if r0 != null goto label1;

        return null;

     label1:
        $r1 = new java.io.ObjectInputStream;

        $r2 = new java.io.ByteArrayInputStream;

        specialinvoke $r2.<java.io.ByteArrayInputStream: void <init>(byte[])>(r0);

        specialinvoke $r1.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>($r2);

        $r3 = virtualinvoke $r1.<java.io.ObjectInputStream: java.lang.Object readObject()>();

     label2:
        return $r3;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.IllegalArgumentException;

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to deserialize object", $r6);

        throw $r7;

     label4:
        $r4 := @caughtexception;

        $r5 = new java.lang.IllegalStateException;

        specialinvoke $r5.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to deserialize object type", $r4);

        throw $r5;

        catch java.io.IOException from label1 to label2 with label3;
        catch java.lang.ClassNotFoundException from label1 to label2 with label4;
    }
}
