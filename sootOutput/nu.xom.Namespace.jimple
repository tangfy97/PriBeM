public final class nu.xom.Namespace extends nu.xom.Node
{
    private final java.lang.String prefix;
    private final java.lang.String uri;
    public static final java.lang.String XML_NAMESPACE;

    public void <init>(java.lang.String, java.lang.String, nu.xom.Element)
    {
        nu.xom.Element r3;
        nu.xom.Namespace r0;
        int $i0, $i1, $i2;
        java.lang.String $r1, $r2, $r5, $r7, r10, r11;
        boolean $z0, $z1, $z2, $z3, $z4;
        nu.xom.NamespaceConflictException $r4, $r6, $r8;
        nu.xom.IllegalNameException $r9;

        r0 := @this: nu.xom.Namespace;

        r10 := @parameter0: java.lang.String;

        r11 := @parameter1: java.lang.String;

        r3 := @parameter2: nu.xom.Element;

        specialinvoke r0.<nu.xom.Node: void <init>()>();

        if r10 != null goto label1;

        r10 = "";

        goto label3;

     label1:
        $r1 = "xmlns";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label2;

        $r9 = new nu.xom.IllegalNameException;

        specialinvoke $r9.<nu.xom.IllegalNameException: void <init>(java.lang.String)>("The xmlns prefix may not be bound to a URI.");

        throw $r9;

     label2:
        $r2 = "xml";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z1 == 0 goto label3;

        $r7 = "http://www.w3.org/XML/1998/namespace";

        $z4 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r11);

        if $z4 != 0 goto label3;

        $r8 = new nu.xom.NamespaceConflictException;

        specialinvoke $r8.<nu.xom.NamespaceConflictException: void <init>(java.lang.String)>("The prefix xml can only be bound to the URI http://www.w3.org/XML/1998/namespace");

        throw $r8;

     label3:
        $i1 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i1 == 0 goto label4;

        staticinvoke <nu.xom.Verifier: void checkNCName(java.lang.String)>(r10);

     label4:
        if r11 != null goto label5;

        r11 = "";

        goto label6;

     label5:
        $z2 = virtualinvoke r11.<java.lang.String: boolean equals(java.lang.Object)>("http://www.w3.org/XML/1998/namespace");

        if $z2 == 0 goto label6;

        $r5 = "xml";

        $z3 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z3 != 0 goto label6;

        $r6 = new nu.xom.NamespaceConflictException;

        specialinvoke $r6.<nu.xom.NamespaceConflictException: void <init>(java.lang.String)>("The URI http://www.w3.org/XML/1998/namespace can only be bound to the prefix xml");

        throw $r6;

     label6:
        $i2 = virtualinvoke r11.<java.lang.String: int length()>();

        if $i2 != 0 goto label7;

        $i0 = virtualinvoke r10.<java.lang.String: int length()>();

        if $i0 == 0 goto label8;

        $r4 = new nu.xom.NamespaceConflictException;

        specialinvoke $r4.<nu.xom.NamespaceConflictException: void <init>(java.lang.String)>("Prefixed elements must have namespace URIs.");

        throw $r4;

     label7:
        staticinvoke <nu.xom.Verifier: void checkAbsoluteURIReference(java.lang.String)>(r11);

     label8:
        r0.<nu.xom.Namespace: java.lang.String prefix> = r10;

        r0.<nu.xom.Namespace: java.lang.String uri> = r11;

        specialinvoke r0.<nu.xom.Node: void setParent(nu.xom.ParentNode)>(r3);

        return;
    }

    public java.lang.String getPrefix()
    {
        java.lang.String $r1;
        nu.xom.Namespace r0;

        r0 := @this: nu.xom.Namespace;

        $r1 = r0.<nu.xom.Namespace: java.lang.String prefix>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        java.lang.String $r1;
        nu.xom.Namespace r0;

        r0 := @this: nu.xom.Namespace;

        $r1 = r0.<nu.xom.Namespace: java.lang.String uri>;

        return $r1;
    }

    public nu.xom.Node getChild(int)
    {
        int i0;
        java.lang.IndexOutOfBoundsException $r0;
        nu.xom.Namespace r1;

        r1 := @this: nu.xom.Namespace;

        i0 := @parameter0: int;

        $r0 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r0.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("Namespaces do not have children");

        throw $r0;
    }

    public int getChildCount()
    {
        nu.xom.Namespace r0;

        r0 := @this: nu.xom.Namespace;

        return 0;
    }

    public nu.xom.Node copy()
    {
        nu.xom.Namespace $r0, r1;
        java.lang.String $r2, $r3;

        r1 := @this: nu.xom.Namespace;

        $r0 = new nu.xom.Namespace;

        $r3 = r1.<nu.xom.Namespace: java.lang.String prefix>;

        $r2 = r1.<nu.xom.Namespace: java.lang.String uri>;

        specialinvoke $r0.<nu.xom.Namespace: void <init>(java.lang.String,java.lang.String,nu.xom.Element)>($r3, $r2, null);

        return $r0;
    }

    public void detach()
    {
        nu.xom.Namespace r0;

        r0 := @this: nu.xom.Namespace;

        specialinvoke r0.<nu.xom.Node: void setParent(nu.xom.ParentNode)>(null);

        return;
    }

    public java.lang.String toXML()
    {
        nu.xom.Namespace r0;
        java.lang.StringBuffer $r2, $r3, $r4, $r6, $r7, $r9, $r10;
        java.lang.String $r1, $r5, $r8, $r11, $r12;
        boolean $z0;

        r0 := @this: nu.xom.Namespace;

        $r1 = r0.<nu.xom.Namespace: java.lang.String prefix>;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("");

        if $z0 == 0 goto label1;

        $r12 = "";

        goto label2;

     label1:
        $r12 = ":";

     label2:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xmlns");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r5 = r0.<nu.xom.Namespace: java.lang.String prefix>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("=\"");

        $r8 = r0.<nu.xom.Namespace: java.lang.String uri>;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r11;
    }

    public java.lang.String toString()
    {
        nu.xom.Namespace r2;
        java.lang.StringBuffer $r0, $r1, $r4, $r5;
        java.lang.String $r3, $r6;

        r2 := @this: nu.xom.Namespace;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[Namespace: ");

        $r3 = virtualinvoke r2.<nu.xom.Namespace: java.lang.String toXML()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;
    }

    public static void <clinit>()
    {
        <nu.xom.Namespace: java.lang.String XML_NAMESPACE> = "http://www.w3.org/XML/1998/namespace";

        return;
    }
}
