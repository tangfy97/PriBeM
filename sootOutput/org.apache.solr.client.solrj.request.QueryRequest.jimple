public class org.apache.solr.client.solrj.request.QueryRequest extends org.apache.solr.client.solrj.SolrRequest
{
    private org.apache.solr.common.params.SolrParams query;

    public void <init>()
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r1;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        $r1 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD GET>;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r1, null);

        return;
    }

    public void <init>(org.apache.solr.common.params.SolrParams)
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;
        org.apache.solr.client.solrj.SolrRequest$METHOD $r1;
        org.apache.solr.common.params.SolrParams r2;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        r2 := @parameter0: org.apache.solr.common.params.SolrParams;

        $r1 = <org.apache.solr.client.solrj.SolrRequest$METHOD: org.apache.solr.client.solrj.SolrRequest$METHOD GET>;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>($r1, null);

        r0.<org.apache.solr.client.solrj.request.QueryRequest: org.apache.solr.common.params.SolrParams query> = r2;

        return;
    }

    public void <init>(org.apache.solr.common.params.SolrParams, org.apache.solr.client.solrj.SolrRequest$METHOD)
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;
        org.apache.solr.client.solrj.SolrRequest$METHOD r1;
        org.apache.solr.common.params.SolrParams r2;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        r2 := @parameter0: org.apache.solr.common.params.SolrParams;

        r1 := @parameter1: org.apache.solr.client.solrj.SolrRequest$METHOD;

        specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: void <init>(org.apache.solr.client.solrj.SolrRequest$METHOD,java.lang.String)>(r1, null);

        r0.<org.apache.solr.client.solrj.request.QueryRequest: org.apache.solr.common.params.SolrParams query> = r2;

        return;
    }

    public java.lang.String getPath()
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;
        java.lang.String $r3, r4;
        org.apache.solr.common.params.SolrParams $r1, $r2;
        boolean $z0;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.QueryRequest: org.apache.solr.common.params.SolrParams query>;

        if $r1 != null goto label1;

        $r3 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.solr.client.solrj.request.QueryRequest: org.apache.solr.common.params.SolrParams query>;

        $r3 = virtualinvoke $r2.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("qt");

     label2:
        r4 = $r3;

        if $r3 != null goto label3;

        r4 = specialinvoke r0.<org.apache.solr.client.solrj.SolrRequest: java.lang.String getPath()>();

     label3:
        if r4 == null goto label4;

        $z0 = virtualinvoke r4.<java.lang.String: boolean startsWith(java.lang.String)>("/");

        if $z0 == 0 goto label4;

        return r4;

     label4:
        return "/select";
    }

    public java.util.Collection getContentStreams()
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        return null;
    }

    public org.apache.solr.common.params.SolrParams getParams()
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;
        org.apache.solr.common.params.SolrParams $r1;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        $r1 = r0.<org.apache.solr.client.solrj.request.QueryRequest: org.apache.solr.common.params.SolrParams query>;

        return $r1;
    }

    public org.apache.solr.client.solrj.response.QueryResponse process(org.apache.solr.client.solrj.SolrServer) throws org.apache.solr.client.solrj.SolrServerException
    {
        org.apache.solr.client.solrj.SolrServer r1;
        org.apache.solr.client.solrj.response.QueryResponse $r0;
        long $l0, $l1, $l2;
        org.apache.solr.common.util.NamedList $r3;
        java.lang.Exception $r4;
        org.apache.solr.client.solrj.SolrServerException $r5, $r7;
        org.apache.solr.common.SolrException $r6;
        org.apache.solr.client.solrj.request.QueryRequest r2;

        r2 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        r1 := @parameter0: org.apache.solr.client.solrj.SolrServer;

     label1:
        $l0 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r0 = new org.apache.solr.client.solrj.response.QueryResponse;

        $r3 = virtualinvoke r1.<org.apache.solr.client.solrj.SolrServer: org.apache.solr.common.util.NamedList request(org.apache.solr.client.solrj.SolrRequest)>(r2);

        specialinvoke $r0.<org.apache.solr.client.solrj.response.QueryResponse: void <init>(org.apache.solr.common.util.NamedList,org.apache.solr.client.solrj.SolrServer)>($r3, r1);

        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $l2 = $l1 - $l0;

        virtualinvoke $r0.<org.apache.solr.client.solrj.response.QueryResponse: void setElapsedTime(long)>($l2);

     label2:
        return $r0;

     label3:
        $r7 := @caughtexception;

        throw $r7;

     label4:
        $r6 := @caughtexception;

        throw $r6;

     label5:
        $r4 := @caughtexception;

        $r5 = new org.apache.solr.client.solrj.SolrServerException;

        specialinvoke $r5.<org.apache.solr.client.solrj.SolrServerException: void <init>(java.lang.String,java.lang.Throwable)>("Error executing query", $r4);

        throw $r5;

        catch org.apache.solr.client.solrj.SolrServerException from label1 to label2 with label3;
        catch org.apache.solr.common.SolrException from label1 to label2 with label4;
        catch java.lang.Exception from label1 to label2 with label5;
    }

    public volatile org.apache.solr.client.solrj.SolrResponse process(org.apache.solr.client.solrj.SolrServer) throws org.apache.solr.client.solrj.SolrServerException, java.io.IOException
    {
        org.apache.solr.client.solrj.request.QueryRequest r0;
        org.apache.solr.client.solrj.SolrServer r1;
        org.apache.solr.client.solrj.response.QueryResponse $r2;

        r0 := @this: org.apache.solr.client.solrj.request.QueryRequest;

        r1 := @parameter0: org.apache.solr.client.solrj.SolrServer;

        $r2 = virtualinvoke r0.<org.apache.solr.client.solrj.request.QueryRequest: org.apache.solr.client.solrj.response.QueryResponse process(org.apache.solr.client.solrj.SolrServer)>(r1);

        return $r2;
    }
}
