public class com.coremedia.iso.boxes.SchemeTypeBox extends com.googlecode.mp4parser.AbstractFullBox
{
    public static final java.lang.String TYPE;
    java.lang.String schemeType;
    long schemeVersion;
    java.lang.String schemeUri;
    static final boolean $assertionsDisabled;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5;
    private static final org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6;

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        <com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String TYPE> = "schm";

        staticinvoke <com.coremedia.iso.boxes.SchemeTypeBox: void ajc$preClinit()>();

        $r0 = class "Lcom/coremedia/iso/boxes/SchemeTypeBox;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <com.coremedia.iso.boxes.SchemeTypeBox: boolean $assertionsDisabled> = $z1;

        return;
    }

    public void <init>()
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        specialinvoke r0.<com.googlecode.mp4parser.AbstractFullBox: void <init>(java.lang.String)>("schm");

        r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeType> = "    ";

        r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri> = null;

        return;
    }

    public java.lang.String getSchemeType()
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.String $r4;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        $r1 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeType>;

        return $r4;
    }

    public long getSchemeVersion()
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        long $l0;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        $r1 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $l0 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: long schemeVersion>;

        return $l0;
    }

    public java.lang.String getSchemeUri()
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.String $r4;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        $r1 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri>;

        return $r4;
    }

    public void setSchemeType(java.lang.String)
    {
        com.coremedia.iso.boxes.SchemeTypeBox r1;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        java.lang.AssertionError $r5;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        int $i0;
        java.lang.String r0;
        org.aspectj.lang.JoinPoint $r3;
        boolean $z0;

        r1 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $z0 = <com.coremedia.iso.boxes.SchemeTypeBox: boolean $assertionsDisabled>;

        if $z0 != 0 goto label2;

        if r0 == null goto label1;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 == 4 goto label2;

     label1:
        $r5 = new java.lang.AssertionError;

        specialinvoke $r5.<java.lang.AssertionError: void <init>(java.lang.Object)>("SchemeType may not be null or not 4 bytes long");

        throw $r5;

     label2:
        r1.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeType> = r0;

        return;
    }

    public void setSchemeVersion(int)
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        int i0;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.Object $r2;
        long $l1;
        org.aspectj.lang.JoinPoint $r3;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        i0 := @parameter0: int;

        $r1 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4>;

        $r2 = staticinvoke <org.aspectj.runtime.internal.Conversions: java.lang.Object intObject(int)>(i0);

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r1, r0, r0, $r2);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        $l1 = (long) i0;

        r0.<com.coremedia.iso.boxes.SchemeTypeBox: long schemeVersion> = $l1;

        return;
    }

    public void setSchemeUri(java.lang.String)
    {
        com.coremedia.iso.boxes.SchemeTypeBox r1;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r4;
        org.aspectj.lang.JoinPoint$StaticPart $r2;
        java.lang.String r0;
        org.aspectj.lang.JoinPoint $r3;

        r1 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        r0 := @parameter0: java.lang.String;

        $r2 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5>;

        $r3 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object,java.lang.Object)>($r2, r1, r1, r0);

        $r4 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r4.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r3);

        r1.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri> = r0;

        return;
    }

    protected long getContentSize()
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        long $l3;
        int $i0, $i1, $i2, $i4, $i5;
        java.lang.String $r1;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        $i0 = virtualinvoke r0.<com.coremedia.iso.boxes.SchemeTypeBox: int getFlags()>();

        $i1 = $i0 & 1;

        if $i1 != 1 goto label1;

        $r1 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri>;

        $i4 = staticinvoke <com.coremedia.iso.Utf8: int utf8StringLengthInBytes(java.lang.String)>($r1);

        $i5 = $i4 + 1;

        goto label2;

     label1:
        $i5 = 0;

     label2:
        $i2 = 12 + $i5;

        $l3 = (long) $i2;

        return $l3;
    }

    public void _parseDetails(java.nio.ByteBuffer)
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        int $i1, $i2;
        long $l0;
        java.lang.String $r2, $r3;
        java.nio.ByteBuffer r1;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SchemeTypeBox: long parseVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String read4cc(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeType> = $r2;

        $l0 = staticinvoke <com.coremedia.iso.IsoTypeReader: long readUInt32(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SchemeTypeBox: long schemeVersion> = $l0;

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.SchemeTypeBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        $r3 = staticinvoke <com.coremedia.iso.IsoTypeReader: java.lang.String readString(java.nio.ByteBuffer)>(r1);

        r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri> = $r3;

     label1:
        return;
    }

    protected void getContent(java.nio.ByteBuffer)
    {
        byte[] $r3, $r5;
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        long $l0;
        java.nio.ByteBuffer r1;
        int $i1, $i2;
        java.lang.String $r2, $r4;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        r1 := @parameter0: java.nio.ByteBuffer;

        virtualinvoke r0.<com.coremedia.iso.boxes.SchemeTypeBox: void writeVersionAndFlags(java.nio.ByteBuffer)>(r1);

        $r2 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeType>;

        $r3 = staticinvoke <com.coremedia.iso.IsoFile: byte[] fourCCtoBytes(java.lang.String)>($r2);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r3);

        $l0 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: long schemeVersion>;

        staticinvoke <com.coremedia.iso.IsoTypeWriter: void writeUInt32(java.nio.ByteBuffer,long)>(r1, $l0);

        $i1 = virtualinvoke r0.<com.coremedia.iso.boxes.SchemeTypeBox: int getFlags()>();

        $i2 = $i1 & 1;

        if $i2 != 1 goto label1;

        $r4 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri>;

        $r5 = staticinvoke <com.coremedia.iso.Utf8: byte[] convert(java.lang.String)>($r4);

        virtualinvoke r1.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>($r5);

     label1:
        return;
    }

    public java.lang.String toString()
    {
        com.coremedia.iso.boxes.SchemeTypeBox r0;
        com.googlecode.mp4parser.RequiresParseDetailAspect $r3;
        org.aspectj.lang.JoinPoint$StaticPart $r1;
        java.lang.StringBuilder $r4, $r5, $r7, $r8, $r10, $r11, $r13;
        java.lang.String $r6, $r9, $r12, $r14;
        org.aspectj.lang.JoinPoint $r2;

        r0 := @this: com.coremedia.iso.boxes.SchemeTypeBox;

        $r1 = <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6>;

        $r2 = staticinvoke <org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint makeJP(org.aspectj.lang.JoinPoint$StaticPart,java.lang.Object,java.lang.Object)>($r1, r0, r0);

        $r3 = staticinvoke <com.googlecode.mp4parser.RequiresParseDetailAspect: com.googlecode.mp4parser.RequiresParseDetailAspect aspectOf()>();

        virtualinvoke $r3.<com.googlecode.mp4parser.RequiresParseDetailAspect: void before(org.aspectj.lang.JoinPoint)>($r2);

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Schema Type Box[");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("schemeUri=");

        $r6 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r8 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("schemeType=");

        $r9 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeType>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r11 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("schemeVersion=");

        $r12 = r0.<com.coremedia.iso.boxes.SchemeTypeBox: java.lang.String schemeUri>;

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r14;
    }

    private static void ajc$preClinit()
    {
        org.aspectj.runtime.reflect.Factory $r0;
        org.aspectj.lang.JoinPoint$StaticPart $r2, $r4, $r6, $r8, $r10, $r12, $r14;
        org.aspectj.lang.reflect.MethodSignature $r1, $r3, $r5, $r7, $r9, $r11, $r13;

        $r0 = new org.aspectj.runtime.reflect.Factory;

        specialinvoke $r0.<org.aspectj.runtime.reflect.Factory: void <init>(java.lang.String,java.lang.Class)>("SchemeTypeBox.java", class "Lcom/coremedia/iso/boxes/SchemeTypeBox;");

        $r1 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSchemeType", "com.coremedia.iso.boxes.SchemeTypeBox", "", "", "", "java.lang.String");

        $r2 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r1, 44);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_0> = $r2;

        $r3 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSchemeVersion", "com.coremedia.iso.boxes.SchemeTypeBox", "", "", "", "long");

        $r4 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r3, 48);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_1> = $r4;

        $r5 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "getSchemeUri", "com.coremedia.iso.boxes.SchemeTypeBox", "", "", "", "java.lang.String");

        $r6 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r5, 52);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_2> = $r6;

        $r7 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSchemeType", "com.coremedia.iso.boxes.SchemeTypeBox", "java.lang.String", "schemeType", "", "void");

        $r8 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r7, 56);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_3> = $r8;

        $r9 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSchemeVersion", "com.coremedia.iso.boxes.SchemeTypeBox", "int", "schemeVersion", "", "void");

        $r10 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r9, 61);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_4> = $r10;

        $r11 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "setSchemeUri", "com.coremedia.iso.boxes.SchemeTypeBox", "java.lang.String", "schemeUri", "", "void");

        $r12 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r11, 65);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_5> = $r12;

        $r13 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.reflect.MethodSignature makeMethodSig(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>("1", "toString", "com.coremedia.iso.boxes.SchemeTypeBox", "", "", "", "java.lang.String");

        $r14 = virtualinvoke $r0.<org.aspectj.runtime.reflect.Factory: org.aspectj.lang.JoinPoint$StaticPart makeSJP(java.lang.String,org.aspectj.lang.Signature,int)>("method-execution", $r13, 93);

        <com.coremedia.iso.boxes.SchemeTypeBox: org.aspectj.lang.JoinPoint$StaticPart ajc$tjp_6> = $r14;

        return;
    }
}
