public class ucar.nc2.dataset.VariableDS extends ucar.nc2.Variable implements ucar.nc2.dataset.VariableEnhanced, ucar.nc2.dataset.EnhanceScaleMissing
{
    private ucar.nc2.dataset.EnhancementsImpl enhanceProxy;
    private ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy;
    private java.util.EnumSet enhanceMode;
    private boolean needScaleOffsetMissing;
    private boolean needEnumConversion;
    protected ucar.nc2.Variable orgVar;
    protected ucar.ma2.DataType orgDataType;
    protected java.lang.String orgName;

    public void <init>(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.Group, ucar.nc2.Structure, java.lang.String, ucar.ma2.DataType, java.lang.String, java.lang.String, java.lang.String)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r11;
        ucar.nc2.Structure r3;
        ucar.nc2.dataset.EnhancementsImpl $r10;
        java.lang.String r4, r6, r8, r9, $r18;
        ucar.nc2.dataset.VariableDS r0;
        ucar.ma2.DataType r5, $r7;
        java.lang.IllegalArgumentException $r14;
        ucar.nc2.Group r2;
        ucar.nc2.Attribute $r12, $r13;
        java.lang.StringBuilder $r15, $r16, $r17;
        ucar.nc2.dataset.NetcdfDataset r1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r2 := @parameter1: ucar.nc2.Group;

        r3 := @parameter2: ucar.nc2.Structure;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: ucar.ma2.DataType;

        r6 := @parameter5: java.lang.String;

        r8 := @parameter6: java.lang.String;

        r9 := @parameter7: java.lang.String;

        specialinvoke r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r2, r3, r4);

        r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing> = 0;

        r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion> = 0;

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void setDataType(ucar.ma2.DataType)>(r5);

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void setDimensions(java.lang.String)>(r6);

        $r7 = <ucar.ma2.DataType: ucar.ma2.DataType STRUCTURE>;

        if r5 != $r7 goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = new java.lang.StringBuilder;

        specialinvoke $r15.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VariableDS must not wrap a Structure; name=");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r18);

        throw $r14;

     label1:
        if r8 == null goto label2;

        $r13 = new ucar.nc2.Attribute;

        specialinvoke $r13.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", r8);

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r13);

     label2:
        if r9 == null goto label3;

        $r12 = new ucar.nc2.Attribute;

        specialinvoke $r12.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r9);

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r12);

     label3:
        $r10 = new ucar.nc2.dataset.EnhancementsImpl;

        specialinvoke $r10.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r0, r8, r9);

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy> = $r10;

        $r11 = new ucar.nc2.dataset.EnhanceScaleMissingImpl;

        specialinvoke $r11.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void <init>()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy> = $r11;

        return;
    }

    public void <init>(ucar.nc2.Group, ucar.nc2.Structure, java.lang.String, ucar.nc2.Variable)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r8;
        ucar.nc2.Structure r2;
        ucar.nc2.dataset.EnhancementsImpl $r7;
        ucar.nc2.Variable r5;
        java.lang.String r3, $r4, $r12, $r14;
        boolean $z0;
        ucar.nc2.dataset.VariableDS r0;
        ucar.ma2.DataType $r6;
        java.lang.IllegalArgumentException $r9;
        ucar.nc2.Group r1;
        java.lang.StringBuilder $r10, $r11, $r13;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: ucar.nc2.Group;

        r2 := @parameter1: ucar.nc2.Structure;

        r3 := @parameter2: java.lang.String;

        r5 := @parameter3: ucar.nc2.Variable;

        specialinvoke r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(null, r1, r2, r3);

        r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing> = 0;

        r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion> = 0;

        $r4 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: java.lang.String getDimensionsString()>();

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void setDimensions(java.lang.String)>($r4);

        $z0 = r5 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label1;

        $r9 = new java.lang.IllegalArgumentException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VariableDS must not wrap a Structure; name=");

        $r12 = virtualinvoke r5.<ucar.nc2.Variable: java.lang.String getName()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r9;

     label1:
        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.NetcdfFile ncfile> = null;

        r0.<ucar.nc2.dataset.VariableDS: java.lang.Object spiObject> = null;

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void createNewCache()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar> = r5;

        $r6 = virtualinvoke r5.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType orgDataType> = $r6;

        $r7 = new ucar.nc2.dataset.EnhancementsImpl;

        specialinvoke $r7.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable)>(r0);

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy> = $r7;

        $r8 = new ucar.nc2.dataset.EnhanceScaleMissingImpl;

        specialinvoke $r8.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void <init>()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy> = $r8;

        return;
    }

    public void <init>(ucar.nc2.Group, ucar.nc2.Variable, boolean)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r6, $r10;
        ucar.nc2.dataset.EnhancementsImpl $r5, $r9;
        ucar.nc2.Variable r1;
        java.lang.String $r3, $r15, $r17;
        java.util.EnumSet $r11;
        boolean $z0, $z1, z2;
        ucar.nc2.dataset.VariableDS r0, r8;
        ucar.ma2.DataType $r4;
        java.util.Set $r7;
        java.lang.IllegalArgumentException $r12;
        ucar.nc2.Group r2;
        java.lang.StringBuilder $r13, $r14, $r16;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r2 := @parameter0: ucar.nc2.Group;

        r1 := @parameter1: ucar.nc2.Variable;

        z2 := @parameter2: boolean;

        specialinvoke r0.<ucar.nc2.Variable: void <init>(ucar.nc2.Variable)>(r1);

        r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing> = 0;

        r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion> = 0;

        if r2 == null goto label1;

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Group group> = r2;

     label1:
        $r3 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: java.lang.String getDimensionsString()>();

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void setDimensions(java.lang.String)>($r3);

        $z0 = r1 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label2;

        $r12 = new java.lang.IllegalArgumentException;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VariableDS must not wrap a Structure; name=");

        $r15 = virtualinvoke r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17);

        throw $r12;

     label2:
        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.NetcdfFile ncfile> = null;

        r0.<ucar.nc2.dataset.VariableDS: java.lang.Object spiObject> = null;

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void createNewCache()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar> = r1;

        $r4 = virtualinvoke r1.<ucar.nc2.Variable: ucar.ma2.DataType getDataType()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType orgDataType> = $r4;

        $z1 = r1 instanceof ucar.nc2.dataset.VariableDS;

        if $z1 == 0 goto label3;

        r8 = (ucar.nc2.dataset.VariableDS) r1;

        $r9 = r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy> = $r9;

        $r10 = r8.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy> = $r10;

        $r11 = r8.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode>;

        r0.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode> = $r11;

        goto label5;

     label3:
        $r5 = new ucar.nc2.dataset.EnhancementsImpl;

        specialinvoke $r5.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable)>(r0);

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy> = $r5;

        if z2 == 0 goto label4;

        $r7 = staticinvoke <ucar.nc2.dataset.NetcdfDataset: java.util.Set getDefaultEnhanceMode()>();

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void enhance(java.util.Set)>($r7);

        goto label5;

     label4:
        $r6 = new ucar.nc2.dataset.EnhanceScaleMissingImpl;

        specialinvoke $r6.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void <init>()>();

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy> = $r6;

     label5:
        return;
    }

    protected void <init>(ucar.nc2.dataset.VariableDS, boolean)
    {
        ucar.nc2.dataset.VariableDS r0, r1;
        ucar.ma2.DataType $r2;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r4;
        ucar.nc2.dataset.EnhancementsImpl $r5;
        java.lang.String $r3;
        java.util.EnumSet $r6;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: ucar.nc2.dataset.VariableDS;

        z0 := @parameter1: boolean;

        specialinvoke r0.<ucar.nc2.Variable: void <init>(ucar.nc2.Variable)>(r1);

        r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing> = 0;

        r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion> = 0;

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar> = r1;

        $r2 = r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType orgDataType>;

        r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType orgDataType> = $r2;

        $r3 = r1.<ucar.nc2.dataset.VariableDS: java.lang.String orgName>;

        r0.<ucar.nc2.dataset.VariableDS: java.lang.String orgName> = $r3;

        $r4 = r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy> = $r4;

        $r5 = new ucar.nc2.dataset.EnhancementsImpl;

        specialinvoke $r5.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable)>(r0);

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy> = $r5;

        $r6 = r1.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode>;

        r0.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode> = $r6;

        if z0 == 0 goto label1;

        goto label2;

     label1:
        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void createNewCache()>();

     label2:
        return;
    }

    protected ucar.nc2.Variable copy()
    {
        ucar.nc2.dataset.VariableDS $r0, r1;

        r1 := @this: ucar.nc2.dataset.VariableDS;

        $r0 = new ucar.nc2.dataset.VariableDS;

        specialinvoke $r0.<ucar.nc2.dataset.VariableDS: void <init>(ucar.nc2.dataset.VariableDS,boolean)>(r1, 1);

        return $r0;
    }

    public void clearCoordinateSystems()
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhancementsImpl $r1;
        java.lang.String $r2, $r3;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = new ucar.nc2.dataset.EnhancementsImpl;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: java.lang.String getUnitsString()>();

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: java.lang.String getDescription()>();

        specialinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: void <init>(ucar.nc2.Variable,java.lang.String,java.lang.String)>(r0, $r2, $r3);

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy> = $r1;

        return;
    }

    public void enhance(java.util.Set)
    {
        java.util.EnumSet $r2, $r24, $r28, $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, z11, z12, $z13, $z14, $z15;
        ucar.nc2.dataset.VariableDS r0, r23;
        java.util.Set r1;
        ucar.ma2.DataType $r5, $r6, $r13, $r14, $r16, $r17, $r19, $r20;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r7, $r9, $r10, $r11, $r12, $r15;
        ucar.nc2.Variable $r3, $r21, $r22;
        ucar.nc2.dataset.NetcdfDataset$Enhance $r4, $r8, $r18, $r25, $r26, $r27, $r29, $r31, $r32;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: java.util.Set;

        $r2 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>(r1);

        r0.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode> = $r2;

        z11 = 0;

        z12 = 0;

        $r3 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r3 == null goto label02;

        $r21 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $z8 = $r21 instanceof ucar.nc2.dataset.VariableDS;

        if $z8 == 0 goto label02;

        $r22 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        r23 = (ucar.nc2.dataset.VariableDS) $r22;

        $r24 = virtualinvoke r23.<ucar.nc2.dataset.VariableDS: java.util.EnumSet getEnhanceMode()>();

        if $r24 == null goto label02;

        $r25 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissing>;

        $z9 = virtualinvoke $r24.<java.util.EnumSet: boolean contains(java.lang.Object)>($r25);

        if $z9 == 0 goto label01;

        z11 = 1;

        $r30 = r0.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode>;

        $r29 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissing>;

        virtualinvoke $r30.<java.util.EnumSet: boolean add(java.lang.Object)>($r29);

     label01:
        $r26 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ConvertEnums>;

        $z10 = virtualinvoke $r24.<java.util.EnumSet: boolean contains(java.lang.Object)>($r26);

        if $z10 == 0 goto label02;

        z12 = 1;

        $r28 = r0.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode>;

        $r27 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ConvertEnums>;

        virtualinvoke $r28.<java.util.EnumSet: boolean add(java.lang.Object)>($r27);

     label02:
        if z11 != 0 goto label04;

        $r17 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType dataType>;

        $z6 = virtualinvoke $r17.<ucar.ma2.DataType: boolean isNumeric()>();

        if $z6 != 0 goto label03;

        $r20 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType dataType>;

        $r19 = <ucar.ma2.DataType: ucar.ma2.DataType CHAR>;

        if $r20 != $r19 goto label04;

     label03:
        $r18 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissing>;

        $z7 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r18);

        if $z7 != 0 goto label05;

     label04:
        $r31 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissingDefer>;

        $z13 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r31);

        if $z13 == 0 goto label10;

     label05:
        $r7 = new ucar.nc2.dataset.EnhanceScaleMissingImpl;

        specialinvoke $r7.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void <init>(ucar.nc2.dataset.VariableDS)>(r0);

        r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy> = $r7;

        $r8 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissing>;

        $z2 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r8);

        if $z2 == 0 goto label06;

        $r11 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z5 = virtualinvoke $r11.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasScaleOffset()>();

        if $z5 == 0 goto label06;

        $r12 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r13 = virtualinvoke $r12.<ucar.nc2.dataset.EnhanceScaleMissingImpl: ucar.ma2.DataType getConvertedDataType()>();

        $r14 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        if $r13 == $r14 goto label06;

        $r15 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r16 = virtualinvoke $r15.<ucar.nc2.dataset.EnhanceScaleMissingImpl: ucar.ma2.DataType getConvertedDataType()>();

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void setDataType(ucar.ma2.DataType)>($r16);

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: boolean removeAttributeIgnoreCase(java.lang.String)>("_Unsigned");

     label06:
        $r32 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ScaleMissing>;

        $z14 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r32);

        if $z14 == 0 goto label08;

        $r9 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z3 = virtualinvoke $r9.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasScaleOffset()>();

        if $z3 != 0 goto label07;

        $r10 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z4 = virtualinvoke $r10.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean getUseNaNs()>();

        if $z4 == 0 goto label08;

     label07:
        $z15 = 1;

        goto label09;

     label08:
        $z15 = 0;

     label09:
        r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing> = $z15;

     label10:
        if z12 != 0 goto label11;

        $r4 = <ucar.nc2.dataset.NetcdfDataset$Enhance: ucar.nc2.dataset.NetcdfDataset$Enhance ConvertEnums>;

        $z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>($r4);

        if $z0 == 0 goto label11;

        $r5 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType dataType>;

        $z1 = virtualinvoke $r5.<ucar.ma2.DataType: boolean isEnum()>();

        if $z1 == 0 goto label11;

        r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion> = 1;

        $r6 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: void setDataType(ucar.ma2.DataType)>($r6);

        virtualinvoke r0.<ucar.nc2.dataset.VariableDS: boolean removeAttributeIgnoreCase(java.lang.String)>("_Unsigned");

     label11:
        return;
    }

    boolean needConvert()
    {
        ucar.nc2.dataset.VariableDS r0, $r4;
        ucar.nc2.Variable $r1, $r2, $r3;
        boolean $z0, $z1, $z2, $z3;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $z0 = r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing>;

        if $z0 != 0 goto label1;

        $z1 = r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion>;

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r1 == null goto label3;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $z2 = $r2 instanceof ucar.nc2.dataset.VariableDS;

        if $z2 == 0 goto label3;

        $r3 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $r4 = (ucar.nc2.dataset.VariableDS) $r3;

        $z3 = virtualinvoke $r4.<ucar.nc2.dataset.VariableDS: boolean needConvert()>();

        return $z3;

     label3:
        return 0;
    }

    ucar.ma2.Array convert(ucar.ma2.Array)
    {
        ucar.nc2.dataset.VariableDS r0, $r5;
        ucar.ma2.Array r2, $r6, $r7, $r8;
        ucar.nc2.Variable $r1, $r3, $r4;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r2 := @parameter0: ucar.ma2.Array;

        $z0 = r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing>;

        if $z0 == 0 goto label1;

        $r8 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convertScaleOffsetMissing(ucar.ma2.Array)>(r2);

        return $r8;

     label1:
        $z1 = r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion>;

        if $z1 == 0 goto label2;

        $r7 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convertEnums(ucar.ma2.Array)>(r2);

        return $r7;

     label2:
        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r1 == null goto label3;

        $r3 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $z2 = $r3 instanceof ucar.nc2.dataset.VariableDS;

        if $z2 == 0 goto label3;

        $r4 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $r5 = (ucar.nc2.dataset.VariableDS) $r4;

        $r6 = virtualinvoke $r5.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convert(ucar.ma2.Array)>(r2);

        return $r6;

     label3:
        return r2;
    }

    public java.util.EnumSet getEnhanceMode()
    {
        ucar.nc2.dataset.VariableDS r0;
        java.util.EnumSet $r1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: java.util.EnumSet enhanceMode>;

        return $r1;
    }

    public void addCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.CoordinateSystem r1;
        ucar.nc2.dataset.EnhancementsImpl $r2;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        virtualinvoke $r2.<ucar.nc2.dataset.EnhancementsImpl: void addCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)>(r1);

        return;
    }

    public void removeCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.CoordinateSystem r1;
        ucar.nc2.dataset.EnhancementsImpl $r2;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: ucar.nc2.dataset.CoordinateSystem;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        virtualinvoke $r2.<ucar.nc2.dataset.EnhancementsImpl: void removeCoordinateSystem(ucar.nc2.dataset.CoordinateSystem)>(r1);

        return;
    }

    public java.util.List getCoordinateSystems()
    {
        java.util.List $r2;
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhancementsImpl $r1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: java.util.List getCoordinateSystems()>();

        return $r2;
    }

    public java.lang.String getDescription()
    {
        ucar.nc2.dataset.VariableDS r0;
        java.lang.String $r2;
        ucar.nc2.dataset.EnhancementsImpl $r1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: java.lang.String getDescription()>();

        return $r2;
    }

    public java.lang.String getUnitsString()
    {
        ucar.nc2.dataset.VariableDS r0;
        java.lang.String $r2;
        ucar.nc2.dataset.EnhancementsImpl $r1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.EnhancementsImpl: java.lang.String getUnitsString()>();

        return $r2;
    }

    public void setUnitsString(java.lang.String)
    {
        ucar.nc2.dataset.VariableDS r0;
        java.lang.String r1;
        ucar.nc2.dataset.EnhancementsImpl $r2;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhancementsImpl enhanceProxy>;

        virtualinvoke $r2.<ucar.nc2.dataset.EnhancementsImpl: void setUnitsString(java.lang.String)>(r1);

        return;
    }

    public ucar.ma2.Array convertScaleOffsetMissing(ucar.ma2.Array)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r2;
        ucar.ma2.Array r1, $r3;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r1 := @parameter0: ucar.ma2.Array;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.EnhanceScaleMissingImpl: ucar.ma2.Array convertScaleOffsetMissing(ucar.ma2.Array)>(r1);

        return $r3;
    }

    public double getValidMax()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        double $d0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double getValidMax()>();

        return $d0;
    }

    public double getValidMin()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        double $d0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double getValidMin()>();

        return $d0;
    }

    public boolean hasFillValue()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasFillValue()>();

        return $z0;
    }

    public boolean hasInvalidData()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasInvalidData()>();

        return $z0;
    }

    public boolean hasMissing()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasMissing()>();

        return $z0;
    }

    public boolean hasMissingValue()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasMissingValue()>();

        return $z0;
    }

    public boolean hasScaleOffset()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasScaleOffset()>();

        return $z0;
    }

    public boolean isFillValue(double)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean isFillValue(double)>(d0);

        return $z0;
    }

    public boolean isInvalidData(double)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean isInvalidData(double)>(d0);

        return $z0;
    }

    public boolean isMissing(double)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean isMissing(double)>(d0);

        return $z0;
    }

    public boolean isMissingFast(double)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean isMissingFast(double)>(d0);

        return $z0;
    }

    public boolean isMissingValue(double)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double d0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean isMissingValue(double)>(d0);

        return $z0;
    }

    public void setFillValueIsMissing(boolean)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void setFillValueIsMissing(boolean)>(z0);

        return;
    }

    public void setInvalidDataIsMissing(boolean)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void setInvalidDataIsMissing(boolean)>(z0);

        return;
    }

    public void setMissingDataIsMissing(boolean)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void setMissingDataIsMissing(boolean)>(z0);

        return;
    }

    public void setUseNaNs(boolean)
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        z0 := @parameter0: boolean;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: void setUseNaNs(boolean)>(z0);

        return;
    }

    public boolean getUseNaNs()
    {
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.nc2.dataset.VariableDS r0;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean getUseNaNs()>();

        return $z0;
    }

    public double convertScaleOffsetMissing(byte)
    {
        ucar.nc2.dataset.VariableDS r0;
        byte b0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double $d0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        b0 := @parameter0: byte;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(byte)>(b0);

        return $d0;
    }

    public double convertScaleOffsetMissing(short)
    {
        short s0;
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double $d0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        s0 := @parameter0: short;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(short)>(s0);

        return $d0;
    }

    public double convertScaleOffsetMissing(int)
    {
        ucar.nc2.dataset.VariableDS r0;
        int i0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double $d0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(int)>(i0);

        return $d0;
    }

    public double convertScaleOffsetMissing(long)
    {
        ucar.nc2.dataset.VariableDS r0;
        long l0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double $d0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        l0 := @parameter0: long;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(long)>(l0);

        return $d0;
    }

    public double convertScaleOffsetMissing(double)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        double d0, $d1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        d0 := @parameter0: double;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d1 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(double)>(d0);

        return $d1;
    }

    public ucar.nc2.Variable getOriginalVariable()
    {
        ucar.nc2.Variable $r1;
        ucar.nc2.dataset.VariableDS r0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        return $r1;
    }

    public void setOriginalVariable(ucar.nc2.Variable)
    {
        ucar.nc2.dataset.VariableDS r1;
        java.lang.IllegalArgumentException $r2;
        ucar.nc2.Variable r0;
        java.lang.StringBuilder $r3, $r4, $r6;
        java.lang.String $r5, $r7;
        boolean $z0;

        r1 := @this: ucar.nc2.dataset.VariableDS;

        r0 := @parameter0: ucar.nc2.Variable;

        $z0 = r0 instanceof ucar.nc2.Structure;

        if $z0 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("VariableDS must not wrap a Structure; name=");

        $r5 = virtualinvoke r0.<ucar.nc2.Variable: java.lang.String getName()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r2;

     label1:
        r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar> = r0;

        return;
    }

    public ucar.ma2.DataType getOriginalDataType()
    {
        ucar.ma2.DataType $r1, $r2;
        ucar.nc2.dataset.VariableDS r0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType orgDataType>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType orgDataType>;

        goto label2;

     label1:
        $r2 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

     label2:
        return $r2;
    }

    public java.lang.String getOriginalName()
    {
        ucar.nc2.dataset.VariableDS r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: java.lang.String orgName>;

        return $r1;
    }

    public java.lang.String lookupEnumString(int)
    {
        ucar.nc2.dataset.VariableDS r0;
        int i0;
        ucar.ma2.DataType $r1;
        ucar.nc2.Variable $r2;
        java.lang.String $r3, $r4;
        boolean $z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType dataType>;

        $z0 = virtualinvoke $r1.<ucar.ma2.DataType: boolean isEnum()>();

        if $z0 == 0 goto label1;

        $r4 = specialinvoke r0.<ucar.nc2.Variable: java.lang.String lookupEnumString(int)>(i0);

        return $r4;

     label1:
        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String lookupEnumString(int)>(i0);

        return $r3;
    }

    public void setName(java.lang.String)
    {
        ucar.nc2.dataset.VariableDS r0;
        java.lang.String $r1, r2;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: java.lang.String shortName>;

        r0.<ucar.nc2.dataset.VariableDS: java.lang.String orgName> = $r1;

        specialinvoke r0.<ucar.nc2.Variable: void setName(java.lang.String)>(r2);

        return;
    }

    public java.lang.String toStringDebug()
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.Variable $r1, $r2;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: java.lang.String toStringDebug()>();

        goto label2;

     label1:
        $r3 = "";

     label2:
        return $r3;
    }

    public boolean hasCachedDataRecurse()
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.Variable $r1, $r2;
        boolean $z0, $z1;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $z0 = specialinvoke r0.<ucar.nc2.Variable: boolean hasCachedData()>();

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r1 == null goto label2;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $z1 = virtualinvoke $r2.<ucar.nc2.Variable: boolean hasCachedData()>();

        if $z1 == 0 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void setCaching(boolean)
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.nc2.Variable $r1, $r2;
        boolean z0;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        z0 := @parameter0: boolean;

        if z0 == 0 goto label1;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r1 == null goto label1;

        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        virtualinvoke $r2.<ucar.nc2.Variable: void setCaching(boolean)>(z0);

     label1:
        return;
    }

    protected ucar.ma2.Array _read() throws java.io.IOException
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.ma2.Array $r2, $r3, r4;
        ucar.nc2.ProxyReader $r1;
        boolean $z0, $z1, $z2;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        $z0 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: boolean hasCachedData()>();

        if $z0 == 0 goto label1;

        r4 = specialinvoke r0.<ucar.nc2.Variable: ucar.ma2.Array _read()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.ProxyReader proxyReader>;

        r4 = interfaceinvoke $r1.<ucar.nc2.ProxyReader: ucar.ma2.Array reallyRead(ucar.nc2.Variable,ucar.nc2.util.CancelTask)>(r0, null);

     label2:
        $z1 = r0.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing>;

        if $z1 == 0 goto label3;

        $r3 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convertScaleOffsetMissing(ucar.ma2.Array)>(r4);

        return $r3;

     label3:
        $z2 = r0.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion>;

        if $z2 == 0 goto label4;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convertEnums(ucar.ma2.Array)>(r4);

        return $r2;

     label4:
        return r4;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.ma2.Array $r3, $r5;
        ucar.nc2.util.CancelTask r7;
        int[] $r4;
        ucar.nc2.Variable $r1, $r2, r6;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r6 := @parameter0: ucar.nc2.Variable;

        r7 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r1 != null goto label1;

        $r4 = r0.<ucar.nc2.dataset.VariableDS: int[] shape>;

        $r5 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array getMissingDataArray(int[])>($r4);

        return $r5;

     label1:
        $r2 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $r3 = virtualinvoke $r2.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        return $r3;
    }

    protected ucar.ma2.Array _read(ucar.ma2.Section) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.VariableDS r1;
        ucar.ma2.Section r0;
        long $l0, $l1;
        ucar.ma2.Array $r2, $r4, $r5, r6;
        byte $b2;
        ucar.nc2.ProxyReader $r3;
        boolean $z0, $z1, $z2;

        r1 := @this: ucar.nc2.dataset.VariableDS;

        r0 := @parameter0: ucar.ma2.Section;

        if null == r0 goto label1;

        $l0 = virtualinvoke r0.<ucar.ma2.Section: long computeSize()>();

        $l1 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: long getSize()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

     label1:
        $r2 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array _read()>();

        return $r2;

     label2:
        $z0 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: boolean hasCachedData()>();

        if $z0 == 0 goto label3;

        r6 = specialinvoke r1.<ucar.nc2.Variable: ucar.ma2.Array _read(ucar.ma2.Section)>(r0);

        goto label4;

     label3:
        $r3 = r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.ProxyReader proxyReader>;

        r6 = interfaceinvoke $r3.<ucar.nc2.ProxyReader: ucar.ma2.Array reallyRead(ucar.nc2.Variable,ucar.ma2.Section,ucar.nc2.util.CancelTask)>(r1, r0, null);

     label4:
        $z1 = r1.<ucar.nc2.dataset.VariableDS: boolean needScaleOffsetMissing>;

        if $z1 == 0 goto label5;

        $r5 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convertScaleOffsetMissing(ucar.ma2.Array)>(r6);

        return $r5;

     label5:
        $z2 = r1.<ucar.nc2.dataset.VariableDS: boolean needEnumConversion>;

        if $z2 == 0 goto label6;

        $r4 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array convertEnums(ucar.ma2.Array)>(r6);

        return $r4;

     label6:
        return r6;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        ucar.nc2.dataset.VariableDS r1;
        ucar.ma2.Section r0;
        long $l0, $l1;
        ucar.ma2.Array $r4, $r7, $r9;
        ucar.nc2.util.CancelTask r3;
        byte $b2;
        int[] $r8;
        ucar.nc2.Variable r2, $r5, $r6;

        r1 := @this: ucar.nc2.dataset.VariableDS;

        r2 := @parameter0: ucar.nc2.Variable;

        r0 := @parameter1: ucar.ma2.Section;

        r3 := @parameter2: ucar.nc2.util.CancelTask;

        if null == r0 goto label1;

        $l0 = virtualinvoke r0.<ucar.ma2.Section: long computeSize()>();

        $l1 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: long getSize()>();

        $b2 = $l0 cmp $l1;

        if $b2 != 0 goto label2;

     label1:
        $r4 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array reallyRead(ucar.nc2.Variable,ucar.nc2.util.CancelTask)>(r2, r3);

        return $r4;

     label2:
        $r5 = r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        if $r5 != null goto label3;

        $r8 = virtualinvoke r0.<ucar.ma2.Section: int[] getShape()>();

        $r9 = virtualinvoke r1.<ucar.nc2.dataset.VariableDS: ucar.ma2.Array getMissingDataArray(int[])>($r8);

        return $r9;

     label3:
        $r6 = r1.<ucar.nc2.dataset.VariableDS: ucar.nc2.Variable orgVar>;

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>(r0);

        return $r7;
    }

    public ucar.ma2.Array getMissingDataArray(int[])
    {
        ucar.nc2.dataset.VariableDS r0;
        ucar.ma2.DataType $r2, $r4;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r1;
        ucar.ma2.Array $r7;
        int[] r6;
        java.lang.Object $r3;
        java.lang.Class $r5;

        r0 := @this: ucar.nc2.dataset.VariableDS;

        r6 := @parameter0: int[];

        $r1 = r0.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r2 = virtualinvoke r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r3 = virtualinvoke $r1.<ucar.nc2.dataset.EnhanceScaleMissingImpl: java.lang.Object getFillValue(ucar.ma2.DataType)>($r2);

        $r4 = r0.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType dataType>;

        $r5 = virtualinvoke $r4.<ucar.ma2.DataType: java.lang.Class getPrimitiveClassType()>();

        $r7 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factoryConstant(java.lang.Class,int[],java.lang.Object)>($r5, r6, $r3);

        return $r7;
    }

    public void showScaleMissingProxy(java.util.Formatter)
    {
        java.lang.Object[] $r1, $r5, $r10, $r11, $r15, $r17, $r22, $r28, $r33, $r36, $r39, $r40;
        java.lang.Double $r23, $r24, $r30, $r32, $r35, $r41;
        double[] $r38;
        java.lang.String $r45;
        java.util.Formatter r0;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        ucar.nc2.dataset.VariableDS r2;
        ucar.ma2.DataType $r16, $r19, $r43;
        ucar.nc2.dataset.EnhanceScaleMissingImpl $r3, $r6, $r8, $r12, $r14, $r18, $r20, $r21, $r25, $r26, $r27, $r29, $r31, $r34, $r37, $r42;
        int i0, i1;
        java.lang.Boolean $r4, $r7, $r13;
        double $d0, $d1, d2, $d3, $d4, $d5, d6;
        java.lang.Object $r9, $r44;

        r2 := @this: ucar.nc2.dataset.VariableDS;

        r0 := @parameter0: java.util.Formatter;

        $r1 = newarray (java.lang.Object)[1];

        $r3 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z0 = virtualinvoke $r3.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean getUseNaNs()>();

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r1[0] = $r4;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("use NaNs = %s%n", $r1);

        $r5 = newarray (java.lang.Object)[1];

        $r6 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z1 = virtualinvoke $r6.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasMissing()>();

        $r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z1);

        $r5[0] = $r7;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("has missing = %s%n", $r5);

        $r8 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z2 = virtualinvoke $r8.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasMissing()>();

        if $z2 == 0 goto label5;

        $r25 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z5 = virtualinvoke $r25.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasMissingValue()>();

        if $z5 == 0 goto label3;

        $r36 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   missing value(s) = ", $r36);

        $r37 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r38 = virtualinvoke $r37.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double[] getMissingValues()>();

        i0 = lengthof $r38;

        i1 = 0;

     label1:
        if i1 >= i0 goto label2;

        d6 = $r38[i1];

        $r40 = newarray (java.lang.Object)[1];

        $r41 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d6);

        $r40[0] = $r41;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(" %f", $r40);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r39 = newarray (java.lang.Object)[0];

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%n", $r39);

     label3:
        $r26 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z6 = virtualinvoke $r26.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasFillValue()>();

        if $z6 == 0 goto label4;

        $r33 = newarray (java.lang.Object)[1];

        $r34 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d5 = virtualinvoke $r34.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double getFillValue()>();

        $r35 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d5);

        $r33[0] = $r35;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   fillValue = %f%n", $r33);

     label4:
        $r27 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z7 = virtualinvoke $r27.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasInvalidData()>();

        if $z7 == 0 goto label5;

        $r28 = newarray (java.lang.Object)[2];

        $r29 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d3 = virtualinvoke $r29.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double getValidMin()>();

        $r30 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d3);

        $r28[0] = $r30;

        $r31 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d4 = virtualinvoke $r31.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double getValidMax()>();

        $r32 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d4);

        $r28[1] = $r32;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   valid min/max = [%f,%f]%n", $r28);

     label5:
        $r42 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r43 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r44 = virtualinvoke $r42.<ucar.nc2.dataset.EnhanceScaleMissingImpl: java.lang.Object getFillValue(ucar.ma2.DataType)>($r43);

        $z8 = $r44 instanceof java.lang.String;

        if $z8 == 0 goto label6;

        $r45 = (java.lang.String) $r44;

        goto label7;

     label6:
        $r9 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>($r44, 0);

        $r45 = virtualinvoke $r9.<java.lang.Object: java.lang.String toString()>();

     label7:
        $r10 = newarray (java.lang.Object)[1];

        $r10[0] = $r45;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("FillValue or default = %s%n", $r10);

        $r11 = newarray (java.lang.Object)[1];

        $r12 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z3 = virtualinvoke $r12.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasScaleOffset()>();

        $r13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z3);

        $r11[0] = $r13;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("%nhas scale/offset = %s%n", $r11);

        $r14 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $z4 = virtualinvoke $r14.<ucar.nc2.dataset.EnhanceScaleMissingImpl: boolean hasScaleOffset()>();

        if $z4 == 0 goto label8;

        $r20 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d0 = virtualinvoke $r20.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(double)>(0.0);

        $r21 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $d1 = virtualinvoke $r21.<ucar.nc2.dataset.EnhanceScaleMissingImpl: double convertScaleOffsetMissing(double)>(1.0);

        d2 = $d1 - $d0;

        $r22 = newarray (java.lang.Object)[2];

        $r23 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2);

        $r22[0] = $r23;

        $r24 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>($d0);

        $r22[1] = $r24;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("   scale_factor = %f add_offset = %f%n", $r22);

     label8:
        $r15 = newarray (java.lang.Object)[1];

        $r16 = virtualinvoke r2.<ucar.nc2.dataset.VariableDS: ucar.ma2.DataType getDataType()>();

        $r15[0] = $r16;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("original data type = %s%n", $r15);

        $r17 = newarray (java.lang.Object)[1];

        $r18 = r2.<ucar.nc2.dataset.VariableDS: ucar.nc2.dataset.EnhanceScaleMissingImpl scaleMissingProxy>;

        $r19 = virtualinvoke $r18.<ucar.nc2.dataset.EnhanceScaleMissingImpl: ucar.ma2.DataType getConvertedDataType()>();

        $r17[0] = $r19;

        virtualinvoke r0.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("converted data type = %s%n", $r17);

        return;
    }

    protected ucar.ma2.Array convertEnums(ucar.ma2.Array)
    {
        java.io.PrintStream $r9;
        ucar.nc2.dataset.VariableDS r7;
        ucar.ma2.IndexIterator $r6;
        ucar.ma2.DataType $r2, $r3;
        ucar.ma2.Array r0, $r5;
        int[] $r4;
        int $i0;
        java.lang.Class $r1;
        java.lang.String $r8;
        boolean $z0, $z1;

        r7 := @this: ucar.nc2.dataset.VariableDS;

        r0 := @parameter0: ucar.ma2.Array;

        $r1 = virtualinvoke r0.<ucar.ma2.Array: java.lang.Class getElementType()>();

        $r2 = staticinvoke <ucar.ma2.DataType: ucar.ma2.DataType getType(java.lang.Class)>($r1);

        $z0 = virtualinvoke $r2.<ucar.ma2.DataType: boolean isNumeric()>();

        if $z0 != 0 goto label1;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>("HEY !dt.isNumeric()");

     label1:
        $r3 = <ucar.ma2.DataType: ucar.ma2.DataType STRING>;

        $r4 = virtualinvoke r0.<ucar.ma2.Array: int[] getShape()>();

        $r5 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r3, $r4);

        $r6 = virtualinvoke $r5.<ucar.ma2.Array: ucar.ma2.IndexIterator getIndexIterator()>();

        virtualinvoke r0.<ucar.ma2.Array: void resetLocalIterator()>();

     label2:
        $z1 = virtualinvoke r0.<ucar.ma2.Array: boolean hasNext()>();

        if $z1 == 0 goto label3;

        $i0 = virtualinvoke r0.<ucar.ma2.Array: int nextInt()>();

        $r8 = virtualinvoke r7.<ucar.nc2.dataset.VariableDS: java.lang.String lookupEnumString(int)>($i0);

        interfaceinvoke $r6.<ucar.ma2.IndexIterator: void setObjectNext(java.lang.Object)>($r8);

        goto label2;

     label3:
        return $r5;
    }
}
