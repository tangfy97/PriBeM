final class org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD extends org.codehaus.jackson.map.deser.std.StdKeyDeserializer
{

    void <init>()
    {
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD r0;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD;

        specialinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Character;");

        return;
    }

    public java.lang.Character _parse(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws org.codehaus.jackson.map.JsonMappingException
    {
        char $c1;
        org.codehaus.jackson.map.DeserializationContext r1;
        org.codehaus.jackson.map.JsonMappingException $r4;
        java.lang.Character $r5;
        int $i0;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD r2;
        java.lang.Class $r3;
        java.lang.String r0;

        r2 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 1 goto label1;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $r5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1);

        return $r5;

     label1:
        $r3 = r2.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD: java.lang.Class _keyClass>;

        $r4 = virtualinvoke r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdKeyException(java.lang.Class,java.lang.String,java.lang.String)>($r3, r0, "can only convert 1-character Strings");

        throw $r4;
    }

    public volatile java.lang.Object _parse(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws java.lang.Exception
    {
        java.lang.Character $r3;
        org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD r0;
        java.lang.String r1;
        org.codehaus.jackson.map.DeserializationContext r2;

        r0 := @this: org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.std.StdKeyDeserializer$CharKD: java.lang.Character _parse(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>(r1, r2);

        return $r3;
    }
}
