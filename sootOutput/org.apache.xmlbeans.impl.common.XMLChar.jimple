public class org.apache.xmlbeans.impl.common.XMLChar extends java.lang.Object
{
    private static final byte[] CHARS;
    public static final int MASK_VALID;
    public static final int MASK_SPACE;
    public static final int MASK_NAME_START;
    public static final int MASK_NAME;
    public static final int MASK_PUBID;
    public static final int MASK_CONTENT;
    public static final int MASK_NCNAME_START;
    public static final int MASK_NCNAME;

    public void <init>()
    {
        org.apache.xmlbeans.impl.common.XMLChar r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XMLChar;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSupplemental(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 < 65536 goto label1;

        if i0 > 1114111 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static int supplemental(char, char)
    {
        char c0, c2;
        int $i1, $i3, $i4, $i5, $i6, $i7, $i9, $i10, $i12;

        c0 := @parameter0: char;

        c2 := @parameter1: char;

        $i7 = (int) c0;

        $i9 = (int) 55296;

        $i1 = $i7 - $i9;

        $i4 = $i1 * 1024;

        $i10 = (int) c2;

        $i12 = (int) 56320;

        $i3 = $i10 - $i12;

        $i5 = $i4 + $i3;

        $i6 = $i5 + 65536;

        return $i6;
    }

    public static char highSurrogate(int)
    {
        int i0, $i1, $i2, $i3, $i6;
        char $c4;

        i0 := @parameter0: int;

        $i1 = i0 - 65536;

        $i2 = $i1 >> 10;

        $i6 = (int) 55296;

        $i3 = $i2 + $i6;

        $c4 = (char) $i3;

        return $c4;
    }

    public static char lowSurrogate(int)
    {
        int i0, $i1, $i2, $i3, $i6;
        char $c4;

        i0 := @parameter0: int;

        $i1 = i0 - 65536;

        $i2 = $i1 & 1023;

        $i6 = (int) 56320;

        $i3 = $i2 + $i6;

        $c4 = (char) $i3;

        return $c4;
    }

    public static boolean isHighSurrogate(int)
    {
        int i0, $i2, $i4;
        boolean $z0;

        i0 := @parameter0: int;

        $i2 = (int) 55296;

        if $i2 > i0 goto label1;

        $i4 = (int) 56319;

        if i0 > $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isLowSurrogate(int)
    {
        int i0, $i2, $i4;
        boolean $z0;

        i0 := @parameter0: int;

        $i2 = (int) 56320;

        if $i2 > i0 goto label1;

        $i4 = (int) 57343;

        if i0 > $i4 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValid(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 1;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isInvalid(int)
    {
        int i0;
        boolean $z0, $z1;

        i0 := @parameter0: int;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isValid(int)>(i0);

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public static boolean isContent(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 32;

        if $b2 != 0 goto label2;

     label1:
        if 65536 > i0 goto label3;

        if i0 > 1114111 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isMarkup(int)
    {
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 == 60 goto label1;

        if i0 == 38 goto label1;

        if i0 != 37 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    public static boolean isSpace(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 2;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isXML11Space(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 2;

        if $b2 != 0 goto label2;

     label1:
        if i0 == 133 goto label2;

        if i0 != 8232 goto label3;

     label2:
        $z0 = 1;

        goto label4;

     label3:
        $z0 = 0;

     label4:
        return $z0;
    }

    public static boolean isNameStart(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 4;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isName(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 8;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNCNameStart(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 64;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isNCName(int)
    {
        byte[] $r0;
        short $s2, $s3;
        byte $b1;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $s3 = (short) $b1;

        $s2 = $s3 & 128;

        if $s2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isPubid(int)
    {
        byte[] $r0;
        byte $b1, $b2;
        int i0;
        boolean $z0;

        i0 := @parameter0: int;

        if i0 >= 65536 goto label1;

        $r0 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b1 = $r0[i0];

        $b2 = $b1 & 16;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isValidName(java.lang.String)
    {
        char $c1, $c3;
        int $i0, $i2, i4, $i5, $i6;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c1;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNameStart(int)>($i5);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i4 = 1;

     label3:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i2 goto label5;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c3;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isName(int)>($i6);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return 1;
    }

    public static boolean isValidNCName(java.lang.String)
    {
        char $c1, $c3;
        int $i0, $i2, i4, $i5, $i6;
        java.lang.String r0;
        boolean $z0, $z1;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i5 = (int) $c1;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNCNameStart(int)>($i5);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i4 = 1;

     label3:
        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        if i4 >= $i2 goto label5;

        $c3 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i4);

        $i6 = (int) $c3;

        $z1 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isNCName(int)>($i6);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        i4 = i4 + 1;

        goto label3;

     label5:
        return 1;
    }

    public static boolean isValidNmtoken(java.lang.String)
    {
        int $i0, $i1, i3, $i4;
        char $c2;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label1;

        return 0;

     label1:
        i3 = 0;

     label2:
        $i1 = virtualinvoke r0.<java.lang.String: int length()>();

        if i3 >= $i1 goto label4;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i4 = (int) $c2;

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XMLChar: boolean isName(int)>($i4);

        if $z0 != 0 goto label3;

        return 0;

     label3:
        i3 = i3 + 1;

        goto label2;

     label4:
        return 1;
    }

    public static boolean isValidIANAEncoding(java.lang.String)
    {
        int $i0, i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16;
        java.lang.String r0;
        char $c1, $c2;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label9;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label9;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0);

        $i4 = (int) $c1;

        if $i4 < 65 goto label1;

        $i5 = (int) $c1;

        if $i5 <= 90 goto label2;

     label1:
        $i6 = (int) $c1;

        if $i6 < 97 goto label9;

        $i7 = (int) $c1;

        if $i7 > 122 goto label9;

     label2:
        i3 = 1;

     label3:
        if i3 >= $i0 goto label8;

        $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $i8 = (int) $c2;

        if $i8 < 65 goto label4;

        $i9 = (int) $c2;

        if $i9 <= 90 goto label7;

     label4:
        $i10 = (int) $c2;

        if $i10 < 97 goto label5;

        $i11 = (int) $c2;

        if $i11 <= 122 goto label7;

     label5:
        $i12 = (int) $c2;

        if $i12 < 48 goto label6;

        $i13 = (int) $c2;

        if $i13 <= 57 goto label7;

     label6:
        $i14 = (int) $c2;

        if $i14 == 46 goto label7;

        $i15 = (int) $c2;

        if $i15 == 95 goto label7;

        $i16 = (int) $c2;

        if $i16 == 45 goto label7;

        return 0;

     label7:
        i3 = i3 + 1;

        goto label3;

     label8:
        return 1;

     label9:
        return 0;
    }

    public static boolean isValidJavaEncoding(java.lang.String)
    {
        char $c1;
        int $i0, i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        if r0 == null goto label7;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        if $i0 <= 0 goto label7;

        i2 = 1;

     label1:
        if i2 >= $i0 goto label6;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $i3 = (int) $c1;

        if $i3 < 65 goto label2;

        $i4 = (int) $c1;

        if $i4 <= 90 goto label5;

     label2:
        $i5 = (int) $c1;

        if $i5 < 97 goto label3;

        $i6 = (int) $c1;

        if $i6 <= 122 goto label5;

     label3:
        $i7 = (int) $c1;

        if $i7 < 48 goto label4;

        $i8 = (int) $c1;

        if $i8 <= 57 goto label5;

     label4:
        $i9 = (int) $c1;

        if $i9 == 46 goto label5;

        $i10 = (int) $c1;

        if $i10 == 95 goto label5;

        $i11 = (int) $c1;

        if $i11 == 45 goto label5;

        return 0;

     label5:
        i2 = i2 + 1;

        goto label1;

     label6:
        return 1;

     label7:
        return 0;
    }

    static void <clinit>()
    {
        byte[] $r0, $r15, $r16, $r17, $r18, $r19, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30;
        byte $b12, $b14, $b19, $b20, $b21, $b23, $b24, $b25, $b27, $b29, $b32, $b34, $b36, $b38, $b41, $b43, $b46, $b48, $b50, $b52, $b54, $b56, $b59, $b61, $b63, $b65, $b67, $b68, $b69, $b71, $b72, $b73, $b77, $b78, $b79;
        short $s13, $s28, $s33, $s37, $s42, $s47, $s51, $s55, $s60, $s64, $s112, $s113, $s114, $s115, $s116, $s117, $s118, $s119, $s120, $s121;
        int[] $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i15, $i16, $i17, $i18, $i22, $i26, $i30, $i31, $i35, $i39, $i40, $i44, $i45, $i49, $i53, $i57, $i58, $i62, $i66, $i70, $i74, $i75, $i76, i80, i81, i82, i83, i84, i85, i86, i87, i88, i89, i90, i91, i92, i93, i94, i95, i96, i97, i98, i99, $i101, $i103, $i105, $i107, $i109, $i111;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_NCNAME> = 128;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_NCNAME_START> = 64;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_CONTENT> = 32;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_PUBID> = 16;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_NAME> = 8;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_NAME_START> = 4;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_SPACE> = 2;

        <org.apache.xmlbeans.impl.common.XMLChar: int MASK_VALID> = 1;

        $r0 = newarray (byte)[65536];

        <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS> = $r0;

        $r1 = newarray (int)[8];

        $r1[0] = 9;

        $r1[1] = 10;

        $r1[2] = 13;

        $r1[3] = 13;

        $r1[4] = 32;

        $i101 = (int) 55295;

        $r1[5] = $i101;

        $i103 = (int) 57344;

        $r1[6] = $i103;

        $i105 = (int) 65533;

        $r1[7] = $i105;

        $r2 = newarray (int)[4];

        $r2[0] = 32;

        $r2[1] = 9;

        $r2[2] = 13;

        $r2[3] = 10;

        $r3 = newarray (int)[2];

        $r3[0] = 45;

        $r3[1] = 46;

        $r4 = newarray (int)[2];

        $r4[0] = 58;

        $r4[1] = 95;

        $r5 = newarray (int)[9];

        $r5[0] = 10;

        $r5[1] = 13;

        $r5[2] = 32;

        $r5[3] = 33;

        $r5[4] = 35;

        $r5[5] = 36;

        $r5[6] = 37;

        $r5[7] = 61;

        $r5[8] = 95;

        $r6 = newarray (int)[6];

        $r6[0] = 39;

        $r6[1] = 59;

        $r6[2] = 63;

        $r6[3] = 90;

        $r6[4] = 97;

        $r6[5] = 122;

        $r7 = newarray (int)[302];

        $r7[0] = 65;

        $r7[1] = 90;

        $r7[2] = 97;

        $r7[3] = 122;

        $r7[4] = 192;

        $r7[5] = 214;

        $r7[6] = 216;

        $r7[7] = 246;

        $r7[8] = 248;

        $r7[9] = 305;

        $r7[10] = 308;

        $r7[11] = 318;

        $r7[12] = 321;

        $r7[13] = 328;

        $r7[14] = 330;

        $r7[15] = 382;

        $r7[16] = 384;

        $r7[17] = 451;

        $r7[18] = 461;

        $r7[19] = 496;

        $r7[20] = 500;

        $r7[21] = 501;

        $r7[22] = 506;

        $r7[23] = 535;

        $r7[24] = 592;

        $r7[25] = 680;

        $r7[26] = 699;

        $r7[27] = 705;

        $r7[28] = 904;

        $r7[29] = 906;

        $r7[30] = 910;

        $r7[31] = 929;

        $r7[32] = 931;

        $r7[33] = 974;

        $r7[34] = 976;

        $r7[35] = 982;

        $r7[36] = 994;

        $r7[37] = 1011;

        $r7[38] = 1025;

        $r7[39] = 1036;

        $r7[40] = 1038;

        $r7[41] = 1103;

        $r7[42] = 1105;

        $r7[43] = 1116;

        $r7[44] = 1118;

        $r7[45] = 1153;

        $r7[46] = 1168;

        $r7[47] = 1220;

        $r7[48] = 1223;

        $r7[49] = 1224;

        $r7[50] = 1227;

        $r7[51] = 1228;

        $r7[52] = 1232;

        $r7[53] = 1259;

        $r7[54] = 1262;

        $r7[55] = 1269;

        $r7[56] = 1272;

        $r7[57] = 1273;

        $r7[58] = 1329;

        $r7[59] = 1366;

        $r7[60] = 1377;

        $r7[61] = 1414;

        $r7[62] = 1488;

        $r7[63] = 1514;

        $r7[64] = 1520;

        $r7[65] = 1522;

        $r7[66] = 1569;

        $r7[67] = 1594;

        $r7[68] = 1601;

        $r7[69] = 1610;

        $r7[70] = 1649;

        $r7[71] = 1719;

        $r7[72] = 1722;

        $r7[73] = 1726;

        $r7[74] = 1728;

        $r7[75] = 1742;

        $r7[76] = 1744;

        $r7[77] = 1747;

        $r7[78] = 1765;

        $r7[79] = 1766;

        $r7[80] = 2309;

        $r7[81] = 2361;

        $r7[82] = 2392;

        $r7[83] = 2401;

        $r7[84] = 2437;

        $r7[85] = 2444;

        $r7[86] = 2447;

        $r7[87] = 2448;

        $r7[88] = 2451;

        $r7[89] = 2472;

        $r7[90] = 2474;

        $r7[91] = 2480;

        $r7[92] = 2486;

        $r7[93] = 2489;

        $r7[94] = 2524;

        $r7[95] = 2525;

        $r7[96] = 2527;

        $r7[97] = 2529;

        $r7[98] = 2544;

        $r7[99] = 2545;

        $r7[100] = 2565;

        $r7[101] = 2570;

        $r7[102] = 2575;

        $r7[103] = 2576;

        $r7[104] = 2579;

        $r7[105] = 2600;

        $r7[106] = 2602;

        $r7[107] = 2608;

        $r7[108] = 2610;

        $r7[109] = 2611;

        $r7[110] = 2613;

        $r7[111] = 2614;

        $r7[112] = 2616;

        $r7[113] = 2617;

        $r7[114] = 2649;

        $r7[115] = 2652;

        $r7[116] = 2674;

        $r7[117] = 2676;

        $r7[118] = 2693;

        $r7[119] = 2699;

        $r7[120] = 2703;

        $r7[121] = 2705;

        $r7[122] = 2707;

        $r7[123] = 2728;

        $r7[124] = 2730;

        $r7[125] = 2736;

        $r7[126] = 2738;

        $r7[127] = 2739;

        $r7[128] = 2741;

        $r7[129] = 2745;

        $r7[130] = 2821;

        $r7[131] = 2828;

        $r7[132] = 2831;

        $r7[133] = 2832;

        $r7[134] = 2835;

        $r7[135] = 2856;

        $r7[136] = 2858;

        $r7[137] = 2864;

        $r7[138] = 2866;

        $r7[139] = 2867;

        $r7[140] = 2870;

        $r7[141] = 2873;

        $r7[142] = 2908;

        $r7[143] = 2909;

        $r7[144] = 2911;

        $r7[145] = 2913;

        $r7[146] = 2949;

        $r7[147] = 2954;

        $r7[148] = 2958;

        $r7[149] = 2960;

        $r7[150] = 2962;

        $r7[151] = 2965;

        $r7[152] = 2969;

        $r7[153] = 2970;

        $r7[154] = 2974;

        $r7[155] = 2975;

        $r7[156] = 2979;

        $r7[157] = 2980;

        $r7[158] = 2984;

        $r7[159] = 2986;

        $r7[160] = 2990;

        $r7[161] = 2997;

        $r7[162] = 2999;

        $r7[163] = 3001;

        $r7[164] = 3077;

        $r7[165] = 3084;

        $r7[166] = 3086;

        $r7[167] = 3088;

        $r7[168] = 3090;

        $r7[169] = 3112;

        $r7[170] = 3114;

        $r7[171] = 3123;

        $r7[172] = 3125;

        $r7[173] = 3129;

        $r7[174] = 3168;

        $r7[175] = 3169;

        $r7[176] = 3205;

        $r7[177] = 3212;

        $r7[178] = 3214;

        $r7[179] = 3216;

        $r7[180] = 3218;

        $r7[181] = 3240;

        $r7[182] = 3242;

        $r7[183] = 3251;

        $r7[184] = 3253;

        $r7[185] = 3257;

        $r7[186] = 3296;

        $r7[187] = 3297;

        $r7[188] = 3333;

        $r7[189] = 3340;

        $r7[190] = 3342;

        $r7[191] = 3344;

        $r7[192] = 3346;

        $r7[193] = 3368;

        $r7[194] = 3370;

        $r7[195] = 3385;

        $r7[196] = 3424;

        $r7[197] = 3425;

        $r7[198] = 3585;

        $r7[199] = 3630;

        $r7[200] = 3634;

        $r7[201] = 3635;

        $r7[202] = 3648;

        $r7[203] = 3653;

        $r7[204] = 3713;

        $r7[205] = 3714;

        $r7[206] = 3719;

        $r7[207] = 3720;

        $r7[208] = 3732;

        $r7[209] = 3735;

        $r7[210] = 3737;

        $r7[211] = 3743;

        $r7[212] = 3745;

        $r7[213] = 3747;

        $r7[214] = 3754;

        $r7[215] = 3755;

        $r7[216] = 3757;

        $r7[217] = 3758;

        $r7[218] = 3762;

        $r7[219] = 3763;

        $r7[220] = 3776;

        $r7[221] = 3780;

        $r7[222] = 3904;

        $r7[223] = 3911;

        $r7[224] = 3913;

        $r7[225] = 3945;

        $r7[226] = 4256;

        $r7[227] = 4293;

        $r7[228] = 4304;

        $r7[229] = 4342;

        $r7[230] = 4354;

        $r7[231] = 4355;

        $r7[232] = 4357;

        $r7[233] = 4359;

        $r7[234] = 4363;

        $r7[235] = 4364;

        $r7[236] = 4366;

        $r7[237] = 4370;

        $r7[238] = 4436;

        $r7[239] = 4437;

        $r7[240] = 4447;

        $r7[241] = 4449;

        $r7[242] = 4461;

        $r7[243] = 4462;

        $r7[244] = 4466;

        $r7[245] = 4467;

        $r7[246] = 4526;

        $r7[247] = 4527;

        $r7[248] = 4535;

        $r7[249] = 4536;

        $r7[250] = 4540;

        $r7[251] = 4546;

        $r7[252] = 7680;

        $r7[253] = 7835;

        $r7[254] = 7840;

        $r7[255] = 7929;

        $r7[256] = 7936;

        $r7[257] = 7957;

        $r7[258] = 7960;

        $r7[259] = 7965;

        $r7[260] = 7968;

        $r7[261] = 8005;

        $r7[262] = 8008;

        $r7[263] = 8013;

        $r7[264] = 8016;

        $r7[265] = 8023;

        $r7[266] = 8031;

        $r7[267] = 8061;

        $r7[268] = 8064;

        $r7[269] = 8116;

        $r7[270] = 8118;

        $r7[271] = 8124;

        $r7[272] = 8130;

        $r7[273] = 8132;

        $r7[274] = 8134;

        $r7[275] = 8140;

        $r7[276] = 8144;

        $r7[277] = 8147;

        $r7[278] = 8150;

        $r7[279] = 8155;

        $r7[280] = 8160;

        $r7[281] = 8172;

        $r7[282] = 8178;

        $r7[283] = 8180;

        $r7[284] = 8182;

        $r7[285] = 8188;

        $r7[286] = 8490;

        $r7[287] = 8491;

        $r7[288] = 8576;

        $r7[289] = 8578;

        $r7[290] = 12353;

        $r7[291] = 12436;

        $r7[292] = 12449;

        $r7[293] = 12538;

        $r7[294] = 12549;

        $r7[295] = 12588;

        $i107 = (int) 44032;

        $r7[296] = $i107;

        $i109 = (int) 55203;

        $r7[297] = $i109;

        $r7[298] = 12321;

        $r7[299] = 12329;

        $r7[300] = 19968;

        $i111 = (int) 40869;

        $r7[301] = $i111;

        $r8 = newarray (int)[53];

        $r8[0] = 902;

        $r8[1] = 908;

        $r8[2] = 986;

        $r8[3] = 988;

        $r8[4] = 990;

        $r8[5] = 992;

        $r8[6] = 1369;

        $r8[7] = 1749;

        $r8[8] = 2365;

        $r8[9] = 2482;

        $r8[10] = 2654;

        $r8[11] = 2701;

        $r8[12] = 2749;

        $r8[13] = 2784;

        $r8[14] = 2877;

        $r8[15] = 2972;

        $r8[16] = 3294;

        $r8[17] = 3632;

        $r8[18] = 3716;

        $r8[19] = 3722;

        $r8[20] = 3725;

        $r8[21] = 3749;

        $r8[22] = 3751;

        $r8[23] = 3760;

        $r8[24] = 3773;

        $r8[25] = 4352;

        $r8[26] = 4361;

        $r8[27] = 4412;

        $r8[28] = 4414;

        $r8[29] = 4416;

        $r8[30] = 4428;

        $r8[31] = 4430;

        $r8[32] = 4432;

        $r8[33] = 4441;

        $r8[34] = 4451;

        $r8[35] = 4453;

        $r8[36] = 4455;

        $r8[37] = 4457;

        $r8[38] = 4469;

        $r8[39] = 4510;

        $r8[40] = 4520;

        $r8[41] = 4523;

        $r8[42] = 4538;

        $r8[43] = 4587;

        $r8[44] = 4592;

        $r8[45] = 4601;

        $r8[46] = 8025;

        $r8[47] = 8027;

        $r8[48] = 8029;

        $r8[49] = 8126;

        $r8[50] = 8486;

        $r8[51] = 8494;

        $r8[52] = 12295;

        $r9 = newarray (int)[132];

        $r9[0] = 768;

        $r9[1] = 837;

        $r9[2] = 864;

        $r9[3] = 865;

        $r9[4] = 1155;

        $r9[5] = 1158;

        $r9[6] = 1425;

        $r9[7] = 1441;

        $r9[8] = 1443;

        $r9[9] = 1465;

        $r9[10] = 1467;

        $r9[11] = 1469;

        $r9[12] = 1473;

        $r9[13] = 1474;

        $r9[14] = 1611;

        $r9[15] = 1618;

        $r9[16] = 1750;

        $r9[17] = 1756;

        $r9[18] = 1757;

        $r9[19] = 1759;

        $r9[20] = 1760;

        $r9[21] = 1764;

        $r9[22] = 1767;

        $r9[23] = 1768;

        $r9[24] = 1770;

        $r9[25] = 1773;

        $r9[26] = 2305;

        $r9[27] = 2307;

        $r9[28] = 2366;

        $r9[29] = 2380;

        $r9[30] = 2385;

        $r9[31] = 2388;

        $r9[32] = 2402;

        $r9[33] = 2403;

        $r9[34] = 2433;

        $r9[35] = 2435;

        $r9[36] = 2496;

        $r9[37] = 2500;

        $r9[38] = 2503;

        $r9[39] = 2504;

        $r9[40] = 2507;

        $r9[41] = 2509;

        $r9[42] = 2530;

        $r9[43] = 2531;

        $r9[44] = 2624;

        $r9[45] = 2626;

        $r9[46] = 2631;

        $r9[47] = 2632;

        $r9[48] = 2635;

        $r9[49] = 2637;

        $r9[50] = 2672;

        $r9[51] = 2673;

        $r9[52] = 2689;

        $r9[53] = 2691;

        $r9[54] = 2750;

        $r9[55] = 2757;

        $r9[56] = 2759;

        $r9[57] = 2761;

        $r9[58] = 2763;

        $r9[59] = 2765;

        $r9[60] = 2817;

        $r9[61] = 2819;

        $r9[62] = 2878;

        $r9[63] = 2883;

        $r9[64] = 2887;

        $r9[65] = 2888;

        $r9[66] = 2891;

        $r9[67] = 2893;

        $r9[68] = 2902;

        $r9[69] = 2903;

        $r9[70] = 2946;

        $r9[71] = 2947;

        $r9[72] = 3006;

        $r9[73] = 3010;

        $r9[74] = 3014;

        $r9[75] = 3016;

        $r9[76] = 3018;

        $r9[77] = 3021;

        $r9[78] = 3073;

        $r9[79] = 3075;

        $r9[80] = 3134;

        $r9[81] = 3140;

        $r9[82] = 3142;

        $r9[83] = 3144;

        $r9[84] = 3146;

        $r9[85] = 3149;

        $r9[86] = 3157;

        $r9[87] = 3158;

        $r9[88] = 3202;

        $r9[89] = 3203;

        $r9[90] = 3262;

        $r9[91] = 3268;

        $r9[92] = 3270;

        $r9[93] = 3272;

        $r9[94] = 3274;

        $r9[95] = 3277;

        $r9[96] = 3285;

        $r9[97] = 3286;

        $r9[98] = 3330;

        $r9[99] = 3331;

        $r9[100] = 3390;

        $r9[101] = 3395;

        $r9[102] = 3398;

        $r9[103] = 3400;

        $r9[104] = 3402;

        $r9[105] = 3405;

        $r9[106] = 3636;

        $r9[107] = 3642;

        $r9[108] = 3655;

        $r9[109] = 3662;

        $r9[110] = 3764;

        $r9[111] = 3769;

        $r9[112] = 3771;

        $r9[113] = 3772;

        $r9[114] = 3784;

        $r9[115] = 3789;

        $r9[116] = 3864;

        $r9[117] = 3865;

        $r9[118] = 3953;

        $r9[119] = 3972;

        $r9[120] = 3974;

        $r9[121] = 3979;

        $r9[122] = 3984;

        $r9[123] = 3989;

        $r9[124] = 3993;

        $r9[125] = 4013;

        $r9[126] = 4017;

        $r9[127] = 4023;

        $r9[128] = 8400;

        $r9[129] = 8412;

        $r9[130] = 12330;

        $r9[131] = 12335;

        $r10 = newarray (int)[29];

        $r10[0] = 1471;

        $r10[1] = 1476;

        $r10[2] = 1648;

        $r10[3] = 2364;

        $r10[4] = 2381;

        $r10[5] = 2492;

        $r10[6] = 2494;

        $r10[7] = 2495;

        $r10[8] = 2519;

        $r10[9] = 2562;

        $r10[10] = 2620;

        $r10[11] = 2622;

        $r10[12] = 2623;

        $r10[13] = 2748;

        $r10[14] = 2876;

        $r10[15] = 3031;

        $r10[16] = 3415;

        $r10[17] = 3633;

        $r10[18] = 3761;

        $r10[19] = 3893;

        $r10[20] = 3895;

        $r10[21] = 3897;

        $r10[22] = 3902;

        $r10[23] = 3903;

        $r10[24] = 3991;

        $r10[25] = 4025;

        $r10[26] = 8417;

        $r10[27] = 12441;

        $r10[28] = 12442;

        $r11 = newarray (int)[30];

        $r11[0] = 48;

        $r11[1] = 57;

        $r11[2] = 1632;

        $r11[3] = 1641;

        $r11[4] = 1776;

        $r11[5] = 1785;

        $r11[6] = 2406;

        $r11[7] = 2415;

        $r11[8] = 2534;

        $r11[9] = 2543;

        $r11[10] = 2662;

        $r11[11] = 2671;

        $r11[12] = 2790;

        $r11[13] = 2799;

        $r11[14] = 2918;

        $r11[15] = 2927;

        $r11[16] = 3047;

        $r11[17] = 3055;

        $r11[18] = 3174;

        $r11[19] = 3183;

        $r11[20] = 3302;

        $r11[21] = 3311;

        $r11[22] = 3430;

        $r11[23] = 3439;

        $r11[24] = 3664;

        $r11[25] = 3673;

        $r11[26] = 3792;

        $r11[27] = 3801;

        $r11[28] = 3872;

        $r11[29] = 3881;

        $r12 = newarray (int)[6];

        $r12[0] = 12337;

        $r12[1] = 12341;

        $r12[2] = 12445;

        $r12[3] = 12446;

        $r12[4] = 12540;

        $r12[5] = 12542;

        $r13 = newarray (int)[8];

        $r13[0] = 183;

        $r13[1] = 720;

        $r13[2] = 721;

        $r13[3] = 903;

        $r13[4] = 1600;

        $r13[5] = 3654;

        $r13[6] = 3782;

        $r13[7] = 12293;

        $r14 = newarray (int)[5];

        $r14[0] = 60;

        $r14[1] = 38;

        $r14[2] = 10;

        $r14[3] = 13;

        $r14[4] = 93;

        i80 = 0;

     label01:
        $i0 = lengthof $r1;

        if i80 >= $i0 goto label04;

        i81 = $r1[i80];

     label02:
        $i75 = i80 + 1;

        $i76 = $r1[$i75];

        if i81 > $i76 goto label03;

        $r30 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b77 = $r30[i81];

        $b78 = $b77 | 33;

        $b79 = (byte) $b78;

        $r30[i81] = $b79;

        i81 = i81 + 1;

        goto label02;

     label03:
        i80 = i80 + 2;

        goto label01;

     label04:
        i82 = 0;

     label05:
        $i1 = lengthof $r14;

        if i82 >= $i1 goto label06;

        $r29 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i74 = $r14[i82];

        $r28 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i70 = $r14[i82];

        $b71 = $r28[$i70];

        $b72 = $b71 & -33;

        $b73 = (byte) $b72;

        $r29[$i74] = $b73;

        i82 = i82 + 1;

        goto label05;

     label06:
        i83 = 0;

     label07:
        $i2 = lengthof $r2;

        if i83 >= $i2 goto label08;

        $r27 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i66 = $r2[i83];

        $b67 = $r27[$i66];

        $b68 = $b67 | 2;

        $b69 = (byte) $b68;

        $r27[$i66] = $b69;

        i83 = i83 + 1;

        goto label07;

     label08:
        i84 = 0;

     label09:
        $i3 = lengthof $r4;

        if i84 >= $i3 goto label10;

        $r26 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i62 = $r4[i84];

        $b63 = $r26[$i62];

        $s112 = (short) $b63;

        $s64 = $s112 | 204;

        $b65 = (byte) $s64;

        $r26[$i62] = $b65;

        i84 = i84 + 1;

        goto label09;

     label10:
        i85 = 0;

     label11:
        $i4 = lengthof $r7;

        if i85 >= $i4 goto label14;

        i86 = $r7[i85];

     label12:
        $i57 = i85 + 1;

        $i58 = $r7[$i57];

        if i86 > $i58 goto label13;

        $r25 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b59 = $r25[i86];

        $s113 = (short) $b59;

        $s60 = $s113 | 204;

        $b61 = (byte) $s60;

        $r25[i86] = $b61;

        i86 = i86 + 1;

        goto label12;

     label13:
        i85 = i85 + 2;

        goto label11;

     label14:
        i87 = 0;

     label15:
        $i5 = lengthof $r8;

        if i87 >= $i5 goto label16;

        $r24 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i53 = $r8[i87];

        $b54 = $r24[$i53];

        $s114 = (short) $b54;

        $s55 = $s114 | 204;

        $b56 = (byte) $s55;

        $r24[$i53] = $b56;

        i87 = i87 + 1;

        goto label15;

     label16:
        i88 = 0;

     label17:
        $i6 = lengthof $r3;

        if i88 >= $i6 goto label18;

        $r23 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i49 = $r3[i88];

        $b50 = $r23[$i49];

        $s115 = (short) $b50;

        $s51 = $s115 | 136;

        $b52 = (byte) $s51;

        $r23[$i49] = $b52;

        i88 = i88 + 1;

        goto label17;

     label18:
        i89 = 0;

     label19:
        $i7 = lengthof $r11;

        if i89 >= $i7 goto label22;

        i90 = $r11[i89];

     label20:
        $i44 = i89 + 1;

        $i45 = $r11[$i44];

        if i90 > $i45 goto label21;

        $r22 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b46 = $r22[i90];

        $s116 = (short) $b46;

        $s47 = $s116 | 136;

        $b48 = (byte) $s47;

        $r22[i90] = $b48;

        i90 = i90 + 1;

        goto label20;

     label21:
        i89 = i89 + 2;

        goto label19;

     label22:
        i91 = 0;

     label23:
        $i8 = lengthof $r9;

        if i91 >= $i8 goto label26;

        i92 = $r9[i91];

     label24:
        $i39 = i91 + 1;

        $i40 = $r9[$i39];

        if i92 > $i40 goto label25;

        $r21 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b41 = $r21[i92];

        $s117 = (short) $b41;

        $s42 = $s117 | 136;

        $b43 = (byte) $s42;

        $r21[i92] = $b43;

        i92 = i92 + 1;

        goto label24;

     label25:
        i91 = i91 + 2;

        goto label23;

     label26:
        i93 = 0;

     label27:
        $i9 = lengthof $r10;

        if i93 >= $i9 goto label28;

        $r20 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i35 = $r10[i93];

        $b36 = $r20[$i35];

        $s118 = (short) $b36;

        $s37 = $s118 | 136;

        $b38 = (byte) $s37;

        $r20[$i35] = $b38;

        i93 = i93 + 1;

        goto label27;

     label28:
        i94 = 0;

     label29:
        $i10 = lengthof $r12;

        if i94 >= $i10 goto label32;

        i95 = $r12[i94];

     label30:
        $i30 = i94 + 1;

        $i31 = $r12[$i30];

        if i95 > $i31 goto label31;

        $r19 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b32 = $r19[i95];

        $s119 = (short) $b32;

        $s33 = $s119 | 136;

        $b34 = (byte) $s33;

        $r19[i95] = $b34;

        i95 = i95 + 1;

        goto label30;

     label31:
        i94 = i94 + 2;

        goto label29;

     label32:
        i96 = 0;

     label33:
        $i11 = lengthof $r13;

        if i96 >= $i11 goto label34;

        $r18 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i26 = $r13[i96];

        $b27 = $r18[$i26];

        $s120 = (short) $b27;

        $s28 = $s120 | 136;

        $b29 = (byte) $s28;

        $r18[$i26] = $b29;

        i96 = i96 + 1;

        goto label33;

     label34:
        $r15 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b12 = $r15[58];

        $s121 = (short) $b12;

        $s13 = $s121 & -193;

        $b14 = (byte) $s13;

        $r15[58] = $b14;

        i97 = 0;

     label35:
        $i15 = lengthof $r5;

        if i97 >= $i15 goto label36;

        $r17 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $i22 = $r5[i97];

        $b23 = $r17[$i22];

        $b24 = $b23 | 16;

        $b25 = (byte) $b24;

        $r17[$i22] = $b25;

        i97 = i97 + 1;

        goto label35;

     label36:
        i98 = 0;

     label37:
        $i16 = lengthof $r6;

        if i98 >= $i16 goto label40;

        i99 = $r6[i98];

     label38:
        $i17 = i98 + 1;

        $i18 = $r6[$i17];

        if i99 > $i18 goto label39;

        $r16 = <org.apache.xmlbeans.impl.common.XMLChar: byte[] CHARS>;

        $b19 = $r16[i99];

        $b20 = $b19 | 16;

        $b21 = (byte) $b20;

        $r16[i99] = $b21;

        i99 = i99 + 1;

        goto label38;

     label39:
        i98 = i98 + 2;

        goto label37;

     label40:
        return;
    }
}
