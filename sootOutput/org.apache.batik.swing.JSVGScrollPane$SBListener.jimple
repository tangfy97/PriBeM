public class org.apache.batik.swing.JSVGScrollPane$SBListener extends java.lang.Object implements javax.swing.event.ChangeListener
{
    protected boolean inDrag;
    protected int startValue;
    protected boolean isVertical;
    private final org.apache.batik.swing.JSVGScrollPane this$0;

    public void <init>(org.apache.batik.swing.JSVGScrollPane, boolean)
    {
        org.apache.batik.swing.JSVGScrollPane$SBListener r0;
        org.apache.batik.swing.JSVGScrollPane r1;
        boolean z0;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane$SBListener;

        r1 := @parameter0: org.apache.batik.swing.JSVGScrollPane;

        z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0> = r1;

        r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean inDrag> = 0;

        r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean isVertical> = z0;

        return;
    }

    public synchronized void stateChanged(javax.swing.event.ChangeEvent)
    {
        javax.swing.BoundedRangeModel $r14;
        org.apache.batik.swing.JSVGScrollPane$SBListener r0;
        org.apache.batik.swing.JSVGCanvas $r9, $r11;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        double $d0, $d1;
        javax.swing.event.ChangeEvent r2;
        java.awt.geom.AffineTransform $r8, r15;
        org.apache.batik.swing.JSVGScrollPane $r1, $r4, $r6, $r7, $r10, $r12;
        javax.swing.JScrollBar $r5, $r13;
        java.lang.Object $r3;

        r0 := @this: org.apache.batik.swing.JSVGScrollPane$SBListener;

        r2 := @parameter0: javax.swing.event.ChangeEvent;

        $r1 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0>;

        $z0 = $r1.<org.apache.batik.swing.JSVGScrollPane: boolean ignoreScrollChange>;

        if $z0 == 0 goto label01;

        return;

     label01:
        $r3 = virtualinvoke r2.<java.util.EventObject: java.lang.Object getSource()>();

        $z1 = $r3 instanceof javax.swing.BoundedRangeModel;

        if $z1 != 0 goto label02;

        return;

     label02:
        $z2 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean isVertical>;

        if $z2 == 0 goto label03;

        $r12 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0>;

        $r13 = $r12.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar vertical>;

        $i5 = virtualinvoke $r13.<javax.swing.JScrollBar: int getValue()>();

        goto label04;

     label03:
        $r4 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0>;

        $r5 = $r4.<org.apache.batik.swing.JSVGScrollPane: javax.swing.JScrollBar horizontal>;

        $i5 = virtualinvoke $r5.<javax.swing.JScrollBar: int getValue()>();

     label04:
        $r14 = (javax.swing.BoundedRangeModel) $r3;

        $z3 = interfaceinvoke $r14.<javax.swing.BoundedRangeModel: boolean getValueIsAdjusting()>();

        if $z3 == 0 goto label08;

        $z5 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean inDrag>;

        if $z5 != 0 goto label05;

        r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean inDrag> = 1;

        r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: int startValue> = $i5;

        goto label10;

     label05:
        $z6 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean isVertical>;

        if $z6 == 0 goto label06;

        $i3 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: int startValue>;

        $i4 = $i3 - $i5;

        $d1 = (double) $i4;

        r15 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>(0.0, $d1);

        goto label07;

     label06:
        $i1 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: int startValue>;

        $i2 = $i1 - $i5;

        $d0 = (double) $i2;

        r15 = staticinvoke <java.awt.geom.AffineTransform: java.awt.geom.AffineTransform getTranslateInstance(double,double)>($d0, 0.0);

     label07:
        $r10 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0>;

        $r11 = $r10.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        virtualinvoke $r11.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setPaintingTransform(java.awt.geom.AffineTransform)>(r15);

        goto label10;

     label08:
        $z4 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean inDrag>;

        if $z4 == 0 goto label09;

        r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: boolean inDrag> = 0;

        $i0 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: int startValue>;

        if $i5 != $i0 goto label09;

        $r7 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0>;

        $r9 = $r7.<org.apache.batik.swing.JSVGScrollPane: org.apache.batik.swing.JSVGCanvas canvas>;

        $r8 = new java.awt.geom.AffineTransform;

        specialinvoke $r8.<java.awt.geom.AffineTransform: void <init>()>();

        virtualinvoke $r9.<org.apache.batik.swing.gvt.AbstractJGVTComponent: void setPaintingTransform(java.awt.geom.AffineTransform)>($r8);

        return;

     label09:
        $r6 = r0.<org.apache.batik.swing.JSVGScrollPane$SBListener: org.apache.batik.swing.JSVGScrollPane this$0>;

        virtualinvoke $r6.<org.apache.batik.swing.JSVGScrollPane: void setScrollPosition()>();

     label10:
        return;
    }
}
