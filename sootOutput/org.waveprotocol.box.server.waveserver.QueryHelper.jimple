public class org.waveprotocol.box.server.waveserver.QueryHelper extends java.lang.Object
{
    static final org.waveprotocol.wave.model.wave.ParticipantId UNKNOWN_CREATOR;
    static final java.util.Comparator ASC_LMT_COMPARATOR;
    public static final java.util.Comparator DESC_LMT_COMPARATOR;
    public static final java.util.Comparator ASC_CREATED_COMPARATOR;
    public static final java.util.Comparator DESC_CREATED_COMPARATOR;
    public static final java.util.Comparator ASC_CREATOR_COMPARATOR;
    public static final java.util.Comparator DESC_CREATOR_COMPARATOR;
    public static final java.util.Comparator ID_COMPARATOR;
    public static final com.google.common.collect.Ordering ASC_LMT_ORDERING;
    public static final com.google.common.collect.Ordering DESC_LMT_ORDERING;
    public static final com.google.common.collect.Ordering ASC_CREATED_ORDERING;
    public static final com.google.common.collect.Ordering DESC_CREATED_ORDERING;
    public static final com.google.common.collect.Ordering ASC_CREATOR_ORDERING;
    public static final com.google.common.collect.Ordering DESC_CREATOR_ORDERING;
    public static final com.google.common.collect.Ordering DEFAULT_ORDERING;

    public static java.util.List buildValidatedParticipantIds(java.util.Map, org.waveprotocol.box.server.waveserver.TokenQueryType, java.lang.String) throws org.waveprotocol.wave.model.wave.InvalidParticipantAddress
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r17;
        java.util.ArrayList $r4;
        java.util.Map r0;
        int $i0, $i1, $i3;
        java.lang.String r9, r16;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r5;
        java.util.Set r3;
        org.waveprotocol.box.server.waveserver.TokenQueryType r1;
        java.util.List r15;
        java.lang.Object $r2, $r6;
        java.lang.StringBuilder $r8, $r10, $r12, $r13, $r14, $r18, $r19;

        r0 := @parameter0: java.util.Map;

        r1 := @parameter1: org.waveprotocol.box.server.waveserver.TokenQueryType;

        r9 := @parameter2: java.lang.String;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r3 = (java.util.Set) $r2;

        if r3 == null goto label5;

        $i0 = interfaceinvoke r3.<java.util.Set: int size()>();

        $r4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayListWithCapacity(int)>($i0);

        r15 = $r4;

        $r5 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r16 = (java.lang.String) $r6;

        $z1 = virtualinvoke r16.<java.lang.String: boolean isEmpty()>();

        if $z1 != 0 goto label2;

        $i1 = virtualinvoke r16.<java.lang.String: int indexOf(java.lang.String)>("@");

        $i3 = (int) -1;

        if $i1 != $i3 goto label2;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label3;

     label2:
        $z2 = virtualinvoke r16.<java.lang.String: boolean equals(java.lang.Object)>("@");

        if $z2 == 0 goto label3;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r9);

        r16 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>();

     label3:
        $r17 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>(r16);

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>($r17);

        goto label1;

     label4:
        goto label6;

     label5:
        r15 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

     label6:
        return r15;
    }

    public static com.google.common.collect.Ordering computeSorter(java.util.Map)
    {
        java.util.Iterator $r6;
        org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType $r9;
        java.util.Set r3;
        org.waveprotocol.box.server.waveserver.TokenQueryType $r1;
        com.google.common.collect.Ordering $r5, $r10, r11;
        java.util.Map r0;
        java.lang.Object $r2, $r7;
        java.lang.String r8;
        java.util.Comparator $r4;
        boolean $z0;

        r0 := @parameter0: java.util.Map;

        r11 = null;

        $r1 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType ORDERBY>;

        $r2 = interfaceinvoke r0.<java.util.Map: java.lang.Object get(java.lang.Object)>($r1);

        r3 = (java.util.Set) $r2;

        if r3 == null goto label5;

        $r6 = interfaceinvoke r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.lang.String) $r7;

        $r9 = staticinvoke <org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType: org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType fromToken(java.lang.String)>(r8);

        if r11 != null goto label2;

        r11 = virtualinvoke $r9.<org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType: com.google.common.collect.Ordering getOrdering()>();

        goto label3;

     label2:
        $r10 = virtualinvoke $r9.<org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType: com.google.common.collect.Ordering getOrdering()>();

        r11 = virtualinvoke r11.<com.google.common.collect.Ordering: com.google.common.collect.Ordering compound(java.util.Comparator)>($r10);

     label3:
        goto label1;

     label4:
        goto label6;

     label5:
        r11 = <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering DEFAULT_ORDERING>;

     label6:
        $r4 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ID_COMPARATOR>;

        $r5 = virtualinvoke r11.<com.google.common.collect.Ordering: com.google.common.collect.Ordering compound(java.util.Comparator)>($r4);

        return $r5;
    }

    public static java.util.Map parseQuery(java.lang.String) throws org.waveprotocol.box.server.waveserver.QueryHelper$InvalidQueryException
    {
        org.waveprotocol.box.server.waveserver.QueryHelper$InvalidQueryException $r9, $r23;
        java.util.Map $r17;
        boolean $z0, $z1, $z2, $z3;
        java.util.EnumMap $r2;
        java.util.Set $r16, r26;
        org.waveprotocol.box.server.waveserver.TokenQueryType $r12, $r13;
        java.lang.StringBuilder $r5, $r6, $r7, $r19, $r20, $r21;
        java.lang.String[] $r1, $r4;
        int i0, $i1, i2;
        java.lang.String $r0, r3, $r8, $r10, $r11, $r22, r24, r25;
        java.util.LinkedHashSet $r15;
        java.lang.IllegalArgumentException $r18;
        java.lang.Object $r14;

        r24 := @parameter0: java.lang.String;

        if r24 == null goto label01;

        $z3 = 1;

        goto label02;

     label01:
        $z3 = 0;

     label02:
        staticinvoke <com.google.common.base.Preconditions: void checkArgument(boolean)>($z3);

        $r0 = virtualinvoke r24.<java.lang.String: java.lang.String trim()>();

        $z0 = virtualinvoke $r0.<java.lang.String: boolean isEmpty()>();

        if $z0 == 0 goto label03;

        $r17 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();

        return $r17;

     label03:
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\s+");

        $r2 = staticinvoke <com.google.common.collect.Maps: java.util.EnumMap newEnumMap(java.lang.Class)>(class "Lorg/waveprotocol/box/server/waveserver/TokenQueryType;");

        i0 = lengthof $r1;

        i2 = 0;

     label04:
        if i2 >= i0 goto label12;

        r3 = $r1[i2];

        $r4 = virtualinvoke r3.<java.lang.String: java.lang.String[] split(java.lang.String)>(":");

        $i1 = lengthof $r4;

        if $i1 != 2 goto label05;

        $r10 = $r4[0];

        $z1 = staticinvoke <org.waveprotocol.box.server.waveserver.TokenQueryType: boolean hasToken(java.lang.String)>($r10);

        if $z1 != 0 goto label06;

     label05:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid query param: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = new org.waveprotocol.box.server.waveserver.QueryHelper$InvalidQueryException;

        specialinvoke $r9.<org.waveprotocol.box.server.waveserver.QueryHelper$InvalidQueryException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label06:
        r25 = $r4[1];

        $r11 = $r4[0];

        $r12 = staticinvoke <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType fromToken(java.lang.String)>($r11);

        $r13 = <org.waveprotocol.box.server.waveserver.TokenQueryType: org.waveprotocol.box.server.waveserver.TokenQueryType ORDERBY>;

        $z2 = virtualinvoke $r12.<org.waveprotocol.box.server.waveserver.TokenQueryType: boolean equals(java.lang.Object)>($r13);

        if $z2 == 0 goto label10;

     label07:
        staticinvoke <org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType: org.waveprotocol.box.server.waveserver.QueryHelper$OrderByValueType fromToken(java.lang.String)>(r25);

     label08:
        goto label10;

     label09:
        $r18 := @caughtexception;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid orderby query value: ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        $r23 = new org.waveprotocol.box.server.waveserver.QueryHelper$InvalidQueryException;

        specialinvoke $r23.<org.waveprotocol.box.server.waveserver.QueryHelper$InvalidQueryException: void <init>(java.lang.String)>($r22);

        throw $r23;

     label10:
        $r14 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r12);

        $r16 = (java.util.Set) $r14;

        r26 = $r16;

        if $r16 != null goto label11;

        $r15 = staticinvoke <com.google.common.collect.Sets: java.util.LinkedHashSet newLinkedHashSet()>();

        r26 = $r15;

        interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r12, $r15);

     label11:
        interfaceinvoke r26.<java.util.Set: boolean add(java.lang.Object)>(r25);

        i2 = i2 + 1;

        goto label04;

     label12:
        return $r2;

        catch java.lang.IllegalArgumentException from label07 to label08 with label09;
    }

    private void <init>()
    {
        org.waveprotocol.box.server.waveserver.QueryHelper r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.QueryHelper;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static void <clinit>()
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r0;
        org.waveprotocol.box.server.waveserver.QueryHelper$6 $r6;
        org.waveprotocol.box.server.waveserver.QueryHelper$5 $r5;
        org.waveprotocol.box.server.waveserver.QueryHelper$4 $r4;
        org.waveprotocol.box.server.waveserver.QueryHelper$3 $r3;
        com.google.common.collect.Ordering $r9, $r11, $r13, $r15, $r17, $r19, $r20;
        org.waveprotocol.box.server.waveserver.QueryHelper$7 $r7;
        org.waveprotocol.box.server.waveserver.QueryHelper$2 $r2;
        java.util.Comparator $r8, $r10, $r12, $r14, $r16, $r18;
        org.waveprotocol.box.server.waveserver.QueryHelper$1 $r1;

        $r0 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId ofUnsafe(java.lang.String)>("unknown@example.com");

        <org.waveprotocol.box.server.waveserver.QueryHelper: org.waveprotocol.wave.model.wave.ParticipantId UNKNOWN_CREATOR> = $r0;

        $r1 = new org.waveprotocol.box.server.waveserver.QueryHelper$1;

        specialinvoke $r1.<org.waveprotocol.box.server.waveserver.QueryHelper$1: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ASC_LMT_COMPARATOR> = $r1;

        $r2 = new org.waveprotocol.box.server.waveserver.QueryHelper$2;

        specialinvoke $r2.<org.waveprotocol.box.server.waveserver.QueryHelper$2: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator DESC_LMT_COMPARATOR> = $r2;

        $r3 = new org.waveprotocol.box.server.waveserver.QueryHelper$3;

        specialinvoke $r3.<org.waveprotocol.box.server.waveserver.QueryHelper$3: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ASC_CREATED_COMPARATOR> = $r3;

        $r4 = new org.waveprotocol.box.server.waveserver.QueryHelper$4;

        specialinvoke $r4.<org.waveprotocol.box.server.waveserver.QueryHelper$4: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator DESC_CREATED_COMPARATOR> = $r4;

        $r5 = new org.waveprotocol.box.server.waveserver.QueryHelper$5;

        specialinvoke $r5.<org.waveprotocol.box.server.waveserver.QueryHelper$5: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ASC_CREATOR_COMPARATOR> = $r5;

        $r6 = new org.waveprotocol.box.server.waveserver.QueryHelper$6;

        specialinvoke $r6.<org.waveprotocol.box.server.waveserver.QueryHelper$6: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator DESC_CREATOR_COMPARATOR> = $r6;

        $r7 = new org.waveprotocol.box.server.waveserver.QueryHelper$7;

        specialinvoke $r7.<org.waveprotocol.box.server.waveserver.QueryHelper$7: void <init>()>();

        <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ID_COMPARATOR> = $r7;

        $r8 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ASC_LMT_COMPARATOR>;

        $r9 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r8);

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering ASC_LMT_ORDERING> = $r9;

        $r10 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator DESC_LMT_COMPARATOR>;

        $r11 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r10);

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering DESC_LMT_ORDERING> = $r11;

        $r12 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ASC_CREATED_COMPARATOR>;

        $r13 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r12);

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering ASC_CREATED_ORDERING> = $r13;

        $r14 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator DESC_CREATED_COMPARATOR>;

        $r15 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r14);

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering DESC_CREATED_ORDERING> = $r15;

        $r16 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator ASC_CREATOR_COMPARATOR>;

        $r17 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r16);

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering ASC_CREATOR_ORDERING> = $r17;

        $r18 = <org.waveprotocol.box.server.waveserver.QueryHelper: java.util.Comparator DESC_CREATOR_COMPARATOR>;

        $r19 = staticinvoke <com.google.common.collect.Ordering: com.google.common.collect.Ordering 'from'(java.util.Comparator)>($r18);

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering DESC_CREATOR_ORDERING> = $r19;

        $r20 = <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering DESC_LMT_ORDERING>;

        <org.waveprotocol.box.server.waveserver.QueryHelper: com.google.common.collect.Ordering DEFAULT_ORDERING> = $r20;

        return;
    }
}
