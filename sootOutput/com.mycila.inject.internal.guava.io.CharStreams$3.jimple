final class com.mycila.inject.internal.guava.io.CharStreams$3 extends java.lang.Object implements com.mycila.inject.internal.guava.io.OutputSupplier
{
    final com.mycila.inject.internal.guava.io.OutputSupplier val$out;
    final java.nio.charset.Charset val$charset;

    void <init>(com.mycila.inject.internal.guava.io.OutputSupplier, java.nio.charset.Charset)
    {
        com.mycila.inject.internal.guava.io.CharStreams$3 r0;
        com.mycila.inject.internal.guava.io.OutputSupplier r1;
        java.nio.charset.Charset r2;

        r0 := @this: com.mycila.inject.internal.guava.io.CharStreams$3;

        r1 := @parameter0: com.mycila.inject.internal.guava.io.OutputSupplier;

        r2 := @parameter1: java.nio.charset.Charset;

        r0.<com.mycila.inject.internal.guava.io.CharStreams$3: com.mycila.inject.internal.guava.io.OutputSupplier val$out> = r1;

        r0.<com.mycila.inject.internal.guava.io.CharStreams$3: java.nio.charset.Charset val$charset> = r2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.io.OutputStreamWriter getOutput() throws java.io.IOException
    {
        java.io.OutputStream $r5;
        com.mycila.inject.internal.guava.io.CharStreams$3 r1;
        java.nio.charset.Charset $r4;
        java.io.OutputStreamWriter $r0;
        com.mycila.inject.internal.guava.io.OutputSupplier $r2;
        java.lang.Object $r3;

        r1 := @this: com.mycila.inject.internal.guava.io.CharStreams$3;

        $r0 = new java.io.OutputStreamWriter;

        $r2 = r1.<com.mycila.inject.internal.guava.io.CharStreams$3: com.mycila.inject.internal.guava.io.OutputSupplier val$out>;

        $r3 = interfaceinvoke $r2.<com.mycila.inject.internal.guava.io.OutputSupplier: java.lang.Object getOutput()>();

        $r5 = (java.io.OutputStream) $r3;

        $r4 = r1.<com.mycila.inject.internal.guava.io.CharStreams$3: java.nio.charset.Charset val$charset>;

        specialinvoke $r0.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>($r5, $r4);

        return $r0;
    }

    public volatile java.lang.Object getOutput() throws java.io.IOException
    {
        com.mycila.inject.internal.guava.io.CharStreams$3 r0;
        java.io.OutputStreamWriter $r1;

        r0 := @this: com.mycila.inject.internal.guava.io.CharStreams$3;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.io.CharStreams$3: java.io.OutputStreamWriter getOutput()>();

        return $r1;
    }
}
