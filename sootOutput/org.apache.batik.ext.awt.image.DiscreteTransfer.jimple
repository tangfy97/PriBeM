public class org.apache.batik.ext.awt.image.DiscreteTransfer extends java.lang.Object implements org.apache.batik.ext.awt.image.TransferFunction
{
    public byte[] lutData;
    public int[] tableValues;
    private int n;

    public void <init>(int[])
    {
        int $i0;
        org.apache.batik.ext.awt.image.DiscreteTransfer r0;
        int[] r1;

        r0 := @this: org.apache.batik.ext.awt.image.DiscreteTransfer;

        r1 := @parameter0: int[];

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: int[] tableValues> = r1;

        $i0 = lengthof r1;

        r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: int n> = $i0;

        return;
    }

    private void buildLutData()
    {
        byte[] $r1, $r3;
        byte $b5;
        int[] $r2;
        int $i0, $i1, $i2, $i3, $i4, $i6, i7, i8;
        double $d0, $d1;
        float $f0, $f1;
        org.apache.batik.ext.awt.image.DiscreteTransfer r0;

        r0 := @this: org.apache.batik.ext.awt.image.DiscreteTransfer;

        $r1 = newarray (byte)[256];

        r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: byte[] lutData> = $r1;

        i7 = 0;

        goto label3;

     label1:
        $i0 = r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: int n>;

        $i1 = i7 * $i0;

        $f0 = (float) $i1;

        $f1 = $f0 / 255.0F;

        $d0 = (double) $f1;

        $d1 = staticinvoke <java.lang.Math: double floor(double)>($d0);

        i8 = (int) $d1;

        $i2 = r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: int n>;

        if i8 != $i2 goto label2;

        $i6 = r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: int n>;

        i8 = $i6 - 1;

     label2:
        $r3 = r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: byte[] lutData>;

        $r2 = r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: int[] tableValues>;

        $i3 = $r2[i8];

        $i4 = $i3 & 255;

        $b5 = (byte) $i4;

        $r3[i7] = $b5;

        i7 = i7 + 1;

     label3:
        if i7 <= 255 goto label1;

        return;
    }

    public byte[] getLookupTable()
    {
        byte[] $r1;
        org.apache.batik.ext.awt.image.DiscreteTransfer r0;

        r0 := @this: org.apache.batik.ext.awt.image.DiscreteTransfer;

        specialinvoke r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: void buildLutData()>();

        $r1 = r0.<org.apache.batik.ext.awt.image.DiscreteTransfer: byte[] lutData>;

        return $r1;
    }
}
