class org.springframework.beans.factory.support.BeanDefinitionResource extends org.springframework.core.io.AbstractResource
{
    private final org.springframework.beans.factory.config.BeanDefinition beanDefinition;

    public void <init>(org.springframework.beans.factory.config.BeanDefinition)
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r0;
        org.springframework.beans.factory.config.BeanDefinition r1;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        r1 := @parameter0: org.springframework.beans.factory.config.BeanDefinition;

        specialinvoke r0.<org.springframework.core.io.AbstractResource: void <init>()>();

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r1, "BeanDefinition must not be null");

        r0.<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition beanDefinition> = r1;

        return;
    }

    public final org.springframework.beans.factory.config.BeanDefinition getBeanDefinition()
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r0;
        org.springframework.beans.factory.config.BeanDefinition $r1;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition beanDefinition>;

        return $r1;
    }

    public boolean exists()
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        return 0;
    }

    public boolean isReadable()
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r0;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        return 0;
    }

    public java.io.InputStream getInputStream() throws java.io.IOException
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r2;
        java.lang.StringBuilder $r1, $r4;
        java.lang.String $r3, $r5;
        java.io.FileNotFoundException $r0;

        r2 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        $r0 = new java.io.FileNotFoundException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>("Resource cannot be opened because it points to ");

        $r3 = virtualinvoke r2.<org.springframework.beans.factory.support.BeanDefinitionResource: java.lang.String getDescription()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.FileNotFoundException: void <init>(java.lang.String)>($r5);

        throw $r0;
    }

    public java.lang.String getDescription()
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r1;
        org.springframework.beans.factory.config.BeanDefinition $r2;
        java.lang.StringBuilder $r0, $r4;
        java.lang.String $r3, $r5;

        r1 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("BeanDefinition defined in ");

        $r2 = r1.<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition beanDefinition>;

        $r3 = interfaceinvoke $r2.<org.springframework.beans.factory.config.BeanDefinition: java.lang.String getResourceDescription()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        org.springframework.beans.factory.support.BeanDefinitionResource r1, $r2;
        org.springframework.beans.factory.config.BeanDefinition $r3, $r4;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        r0 := @parameter0: java.lang.Object;

        if r0 == r1 goto label2;

        $z0 = r0 instanceof org.springframework.beans.factory.support.BeanDefinitionResource;

        if $z0 == 0 goto label1;

        $r2 = (org.springframework.beans.factory.support.BeanDefinitionResource) r0;

        $r4 = $r2.<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition beanDefinition>;

        $r3 = r1.<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition beanDefinition>;

        $z1 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label2;

     label1:
        return 0;

     label2:
        return 1;
    }

    public int hashCode()
    {
        int $i0;
        org.springframework.beans.factory.support.BeanDefinitionResource r0;
        org.springframework.beans.factory.config.BeanDefinition $r1;

        r0 := @this: org.springframework.beans.factory.support.BeanDefinitionResource;

        $r1 = r0.<org.springframework.beans.factory.support.BeanDefinitionResource: org.springframework.beans.factory.config.BeanDefinition beanDefinition>;

        $i0 = virtualinvoke $r1.<java.lang.Object: int hashCode()>();

        return $i0;
    }
}
