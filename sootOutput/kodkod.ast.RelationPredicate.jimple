public abstract class kodkod.ast.RelationPredicate extends kodkod.ast.Formula
{
    private final kodkod.ast.Relation relation;

    private void <init>(kodkod.ast.Relation)
    {
        java.lang.IllegalArgumentException $r2;
        int $i0, $i1;
        java.lang.StringBuilder $r3, $r4;
        java.lang.String $r5;
        kodkod.ast.RelationPredicate r0;
        kodkod.ast.Relation r1;

        r0 := @this: kodkod.ast.RelationPredicate;

        r1 := @parameter0: kodkod.ast.Relation;

        specialinvoke r0.<kodkod.ast.Formula: void <init>()>();

        $i0 = virtualinvoke r1.<kodkod.ast.Relation: int arity()>();

        if $i0 == 2 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("invalid arity: ");

        $i1 = virtualinvoke r1.<kodkod.ast.Relation: int arity()>();

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r2;

     label1:
        r0.<kodkod.ast.RelationPredicate: kodkod.ast.Relation relation> = r1;

        return;
    }

    public kodkod.ast.Relation relation()
    {
        kodkod.ast.RelationPredicate r0;
        kodkod.ast.Relation $r1;

        r0 := @this: kodkod.ast.RelationPredicate;

        $r1 = r0.<kodkod.ast.RelationPredicate: kodkod.ast.Relation relation>;

        return $r1;
    }

    public abstract kodkod.ast.RelationPredicate$Name name();

    public abstract kodkod.ast.Formula toConstraints();

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        java.lang.Object $r2;
        kodkod.ast.RelationPredicate r1;
        kodkod.ast.visitor.ReturnVisitor r0;

        r1 := @this: kodkod.ast.RelationPredicate;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.RelationPredicate)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.RelationPredicate r1;
        kodkod.ast.visitor.VoidVisitor r0;

        r1 := @this: kodkod.ast.RelationPredicate;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.RelationPredicate)>(r1);

        return;
    }

    void <init>(kodkod.ast.Relation, kodkod.ast.RelationPredicate)
    {
        kodkod.ast.RelationPredicate r0, r2;
        kodkod.ast.Relation r1;

        r0 := @this: kodkod.ast.RelationPredicate;

        r1 := @parameter0: kodkod.ast.Relation;

        r2 := @parameter1: kodkod.ast.RelationPredicate;

        specialinvoke r0.<kodkod.ast.RelationPredicate: void <init>(kodkod.ast.Relation)>(r1);

        return;
    }
}
