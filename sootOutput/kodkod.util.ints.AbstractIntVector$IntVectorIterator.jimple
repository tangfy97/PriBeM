abstract class kodkod.util.ints.AbstractIntVector$IntVectorIterator extends java.lang.Object implements kodkod.util.ints.IntIterator
{
    int next;
    int end;
    int last;
    final kodkod.util.ints.AbstractIntVector this$0;

    void <init>(kodkod.util.ints.AbstractIntVector, int, int)
    {
        int i0, i1, $i3;
        kodkod.util.ints.AbstractIntVector r1;
        kodkod.util.ints.AbstractIntVector$IntVectorIterator r0;

        r0 := @this: kodkod.util.ints.AbstractIntVector$IntVectorIterator;

        r1 := @parameter0: kodkod.util.ints.AbstractIntVector;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: kodkod.util.ints.AbstractIntVector this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int next> = i0;

        r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int end> = i1;

        $i3 = (int) -1;

        r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int last> = $i3;

        return;
    }

    public final void remove()
    {
        java.lang.IllegalStateException $r3;
        int $i0, $i1, $i2, $i4;
        kodkod.util.ints.AbstractIntVector $r1;
        kodkod.util.ints.AbstractIntVector$IntVectorIterator r0;

        r0 := @this: kodkod.util.ints.AbstractIntVector$IntVectorIterator;

        $i0 = r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int last>;

        if $i0 >= 0 goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>()>();

        throw $r3;

     label1:
        $r1 = r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: kodkod.util.ints.AbstractIntVector this$0>;

        $i1 = r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int last>;

        virtualinvoke $r1.<kodkod.util.ints.AbstractIntVector: int removeAt(int)>($i1);

        $i2 = r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int last>;

        r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int next> = $i2;

        $i4 = (int) -1;

        r0.<kodkod.util.ints.AbstractIntVector$IntVectorIterator: int last> = $i4;

        return;
    }
}
