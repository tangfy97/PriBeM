public class org.apache.http.message.BufferedHeader extends java.lang.Object implements org.apache.http.FormattedHeader, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    private final java.lang.String name;
    private final org.apache.http.util.CharArrayBuffer buffer;
    private final int valuePos;

    public void <init>(org.apache.http.util.CharArrayBuffer) throws org.apache.http.ParseException
    {
        int $i0, $i1, $i2, $i4;
        java.lang.String $r2, $r6, $r8, $r12, $r14;
        org.apache.http.ParseException $r18, $r20;
        org.apache.http.message.BufferedHeader r0;
        java.lang.IllegalArgumentException $r16;
        org.apache.http.util.CharArrayBuffer r1;
        java.lang.StringBuilder $r5, $r7, $r11, $r13, $r17, $r19;

        r0 := @this: org.apache.http.message.BufferedHeader;

        r1 := @parameter0: org.apache.http.util.CharArrayBuffer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if r1 != null goto label1;

        $r16 = new java.lang.IllegalArgumentException;

        specialinvoke $r16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Char array buffer may not be null");

        throw $r16;

     label1:
        $i0 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: int indexOf(int)>(58);

        $i4 = (int) -1;

        if $i0 != $i4 goto label2;

        $r18 = new org.apache.http.ParseException;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid header: ");

        $r12 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r18.<org.apache.http.ParseException: void <init>(java.lang.String)>($r14);

        throw $r18;

     label2:
        $r2 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>(0, $i0);

        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != 0 goto label3;

        $r20 = new org.apache.http.ParseException;

        $r19 = new java.lang.StringBuilder;

        specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid header: ");

        $r6 = virtualinvoke r1.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<org.apache.http.ParseException: void <init>(java.lang.String)>($r8);

        throw $r20;

     label3:
        r0.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer> = r1;

        r0.<org.apache.http.message.BufferedHeader: java.lang.String name> = $r2;

        $i2 = $i0 + 1;

        r0.<org.apache.http.message.BufferedHeader: int valuePos> = $i2;

        return;
    }

    public java.lang.String getName()
    {
        java.lang.String $r1;
        org.apache.http.message.BufferedHeader r0;

        r0 := @this: org.apache.http.message.BufferedHeader;

        $r1 = r0.<org.apache.http.message.BufferedHeader: java.lang.String name>;

        return $r1;
    }

    public java.lang.String getValue()
    {
        org.apache.http.util.CharArrayBuffer $r1, $r2;
        int $i0, $i1;
        java.lang.String $r3;
        org.apache.http.message.BufferedHeader r0;

        r0 := @this: org.apache.http.message.BufferedHeader;

        $r2 = r0.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer>;

        $i0 = r0.<org.apache.http.message.BufferedHeader: int valuePos>;

        $r1 = r0.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer>;

        $i1 = virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: int length()>();

        $r3 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: java.lang.String substringTrimmed(int,int)>($i0, $i1);

        return $r3;
    }

    public org.apache.http.HeaderElement[] getElements() throws org.apache.http.ParseException
    {
        org.apache.http.HeaderElement[] $r5;
        org.apache.http.message.BasicHeaderValueParser $r4;
        org.apache.http.message.BufferedHeader r1;
        org.apache.http.util.CharArrayBuffer $r2, $r3;
        int $i0, $i1;
        org.apache.http.message.ParserCursor $r0;

        r1 := @this: org.apache.http.message.BufferedHeader;

        $r0 = new org.apache.http.message.ParserCursor;

        $r2 = r1.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer>;

        $i0 = virtualinvoke $r2.<org.apache.http.util.CharArrayBuffer: int length()>();

        specialinvoke $r0.<org.apache.http.message.ParserCursor: void <init>(int,int)>(0, $i0);

        $i1 = r1.<org.apache.http.message.BufferedHeader: int valuePos>;

        virtualinvoke $r0.<org.apache.http.message.ParserCursor: void updatePos(int)>($i1);

        $r4 = <org.apache.http.message.BasicHeaderValueParser: org.apache.http.message.BasicHeaderValueParser DEFAULT>;

        $r3 = r1.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer>;

        $r5 = virtualinvoke $r4.<org.apache.http.message.BasicHeaderValueParser: org.apache.http.HeaderElement[] parseElements(org.apache.http.util.CharArrayBuffer,org.apache.http.message.ParserCursor)>($r3, $r0);

        return $r5;
    }

    public int getValuePos()
    {
        int $i0;
        org.apache.http.message.BufferedHeader r0;

        r0 := @this: org.apache.http.message.BufferedHeader;

        $i0 = r0.<org.apache.http.message.BufferedHeader: int valuePos>;

        return $i0;
    }

    public org.apache.http.util.CharArrayBuffer getBuffer()
    {
        org.apache.http.util.CharArrayBuffer $r1;
        org.apache.http.message.BufferedHeader r0;

        r0 := @this: org.apache.http.message.BufferedHeader;

        $r1 = r0.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.apache.http.util.CharArrayBuffer $r1;
        java.lang.String $r2;
        org.apache.http.message.BufferedHeader r0;

        r0 := @this: org.apache.http.message.BufferedHeader;

        $r1 = r0.<org.apache.http.message.BufferedHeader: org.apache.http.util.CharArrayBuffer buffer>;

        $r2 = virtualinvoke $r1.<org.apache.http.util.CharArrayBuffer: java.lang.String toString()>();

        return $r2;
    }

    public java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        java.lang.Object $r1;
        org.apache.http.message.BufferedHeader r0;

        r0 := @this: org.apache.http.message.BufferedHeader;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    public static void <clinit>()
    {
        <org.apache.http.message.BufferedHeader: long serialVersionUID> = -2768352615787625448L;

        return;
    }
}
