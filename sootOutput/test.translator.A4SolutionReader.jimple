public final class test.translator.A4SolutionReader extends java.lang.Object
{
    private final test.translator.A4Solution sol;
    private final java.util.LinkedHashSet choices;
    private final java.util.TreeSet atoms;
    private final java.util.TreeSet strings;
    private final java.util.Map nmap;
    private final java.util.Map id2sig;
    private final java.util.Set allsigs;
    private final java.util.Map expr2ts;
    private final kodkod.instance.TupleFactory factory;

    private static boolean yes(edu.mit.csail.sdg.alloy4.XMLNode, java.lang.String)
    {
        edu.mit.csail.sdg.alloy4.XMLNode r0;
        java.lang.String r1, $r2;
        boolean $z0;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        r1 := @parameter1: java.lang.String;

        $r2 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>(r1);

        $z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>("yes");

        return $z0;
    }

    private static java.lang.String label(edu.mit.csail.sdg.alloy4.XMLNode)
    {
        edu.mit.csail.sdg.alloy4.XMLNode r0;
        java.lang.String $r1;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("label");

        return $r1;
    }

    private static boolean sameset(java.lang.Iterable, java.lang.Iterable)
    {
        java.util.Iterator $r2, $r5;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r7, r8;
        java.lang.Iterable r1, r4;
        java.util.ArrayList $r0;
        java.lang.Object $r3, $r6;
        boolean $z0, $z1, $z2, $z3;

        r4 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: java.lang.Iterable;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r3;

        virtualinvoke $r0.<java.util.ArrayList: boolean add(java.lang.Object)>(r7);

     label2:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        $r5 = interfaceinvoke r4.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label5;

     label3:
        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r8 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r6;

        $z2 = virtualinvoke $r0.<java.util.ArrayList: boolean contains(java.lang.Object)>(r8);

        if $z2 == 0 goto label4;

        virtualinvoke $r0.<java.util.ArrayList: boolean remove(java.lang.Object)>(r8);

        goto label5;

     label4:
        return 0;

     label5:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label3;

        $z3 = virtualinvoke $r0.<java.util.ArrayList: boolean isEmpty()>();

        return $z3;
    }

    private kodkod.instance.Tuple parseTuple(edu.mit.csail.sdg.alloy4.XMLNode, int) throws edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4.ErrorFatal $r8, $r14, $r16;
        java.lang.Throwable $r15;
        java.lang.Object[] $r4;
        int $i0, i1, $i2;
        java.lang.String $r6, $r13;
        kodkod.instance.TupleFactory $r5;
        boolean $z0, $z1;
        kodkod.instance.Tuple $r7, r17;
        java.util.Iterator $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r9, $r10, $r11, $r12;
        edu.mit.csail.sdg.alloy4.XMLNode r0, r18;
        test.translator.A4SolutionReader r3;

        r3 := @this: test.translator.A4SolutionReader;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        i1 := @parameter1: int;

        r17 = null;

     label1:
        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r18 = (edu.mit.csail.sdg.alloy4.XMLNode) $r2;

        $z0 = virtualinvoke r18.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("atom");

        if $z0 == 0 goto label4;

        $r5 = r3.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory>;

        $r4 = newarray (java.lang.Object)[1];

        $r6 = virtualinvoke r18.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("label");

        $r4[0] = $r6;

        $r7 = virtualinvoke $r5.<kodkod.instance.TupleFactory: kodkod.instance.Tuple tuple(java.lang.Object[])>($r4);

        if r17 != null goto label3;

        r17 = $r7;

        goto label4;

     label3:
        r17 = virtualinvoke r17.<kodkod.instance.Tuple: kodkod.instance.Tuple product(kodkod.instance.Tuple)>($r7);

     label4:
        $z1 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label2;

        if r17 != null goto label5;

        $r14 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        specialinvoke $r14.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(java.lang.String)>("Expecting: <tuple> <atom label=\"..\"/> .. </tuple>");

        throw $r14;

     label5:
        $i0 = virtualinvoke r17.<kodkod.instance.Tuple: int arity()>();

        if $i0 == i1 goto label6;

        $r8 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Expecting: tuple of arity ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" but got tuple of arity ");

        $i2 = virtualinvoke r17.<kodkod.instance.Tuple: int arity()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(java.lang.String)>($r13);

        throw $r8;

     label6:
        return r17;

     label7:
        $r15 := @caughtexception;

        $r16 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        specialinvoke $r16.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(java.lang.String,java.lang.Throwable)>("Expecting: <tuple> <atom label=\"..\"/> .. </tuple>", $r15);

        throw $r16;

        catch java.lang.Throwable from label1 to label6 with label7;
    }

    private kodkod.instance.TupleSet parseTuples(edu.mit.csail.sdg.alloy4.XMLNode, int) throws edu.mit.csail.sdg.alloy4.Err
    {
        kodkod.instance.Tuple $r7;
        java.util.Iterator $r4;
        int i0;
        java.lang.Object $r5;
        edu.mit.csail.sdg.alloy4.XMLNode r3, r6;
        test.translator.A4SolutionReader r0;
        kodkod.instance.TupleFactory $r1;
        kodkod.instance.TupleSet $r2;
        boolean $z0, $z1;

        r0 := @this: test.translator.A4SolutionReader;

        r3 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        i0 := @parameter1: int;

        $r1 = r0.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory>;

        $r2 = virtualinvoke $r1.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(i0);

        $r4 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label2;

     label1:
        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (edu.mit.csail.sdg.alloy4.XMLNode) $r5;

        $z0 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("tuple");

        if $z0 == 0 goto label2;

        $r7 = specialinvoke r0.<test.translator.A4SolutionReader: kodkod.instance.Tuple parseTuple(edu.mit.csail.sdg.alloy4.XMLNode,int)>(r6, i0);

        virtualinvoke $r2.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>($r7);

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label1;

        return $r2;
    }

    private edu.mit.csail.sdg.alloy4compiler.ast.Sig parseSig(java.lang.String, int) throws java.io.IOException, edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r2, $r4, $r16, $r37, $r40, $r88, $r91, $r94, $r97, $r122, $r123;
        java.lang.StringBuilder $r59, $r60, $r61, $r62, $r63, $r66, $r67, $r68, $r69, $r70, $r81, $r82, $r83, $r84, $r85, $r100, $r101, $r102, $r105, $r106, $r107;
        edu.mit.csail.sdg.alloy4.XMLNode r6, r119;
        java.lang.Object[] $r24;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig $r33, $r41;
        kodkod.instance.Tuple $r27;
        edu.mit.csail.sdg.alloy4.ConstList $r34;
        java.io.IOException $r58, $r65, $r80, $r99, $r104;
        edu.mit.csail.sdg.alloy4compiler.ast.Attr r8, r9, r10, r11, r12, r13, r14, r15, $r110, $r111, $r112, $r113, $r114, $r115, $r116, $r117;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r120, r121;
        edu.mit.csail.sdg.alloy4compiler.ast.Attr[] $r42, $r55;
        test.translator.A4SolutionReader r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig $r22, $r31, $r45, $r51, r109;
        int i0, $i1, $i2, $i3;
        kodkod.instance.TupleFactory $r17, $r25;
        kodkod.instance.TupleSet $r18, $r39, r125, r126;
        java.lang.Object $r3, $r5, $r20, $r30, $r38, $r48;
        java.util.Set $r43, $r57;
        java.util.ArrayList $r23, r118;
        java.lang.String r1, $r7, $r21, $r26, $r32, $r44, $r52, $r64, $r71, $r73, $r75, $r77, $r79, $r86, $r103, $r108;
        java.util.LinkedHashSet $r28, $r35, $r46, $r53;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r36, $r49, $r50, $r54, $r56, $r72, $r74, $r76, $r78, $r87, $r89, $r90, $r92, $r93, $r95, $r96, $r98, r124;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        java.util.Iterator $r19, $r29, $r47;

        r0 := @this: test.translator.A4SolutionReader;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        $r2 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r109 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r3;

        if r109 == null goto label01;

        return r109;

     label01:
        $r4 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r6 = (edu.mit.csail.sdg.alloy4.XMLNode) $r5;

        if r6 != null goto label02;

        $r104 = new java.io.IOException;

        $r105 = new java.lang.StringBuilder;

        specialinvoke $r105.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown SigID ");

        $r106 = virtualinvoke $r105.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered.");

        $r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r104.<java.io.IOException: void <init>(java.lang.String)>($r108);

        throw $r104;

     label02:
        $z0 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("sig");

        if $z0 != 0 goto label03;

        $r99 = new java.io.IOException;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID ");

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sig.");

        $r103 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r99.<java.io.IOException: void <init>(java.lang.String)>($r103);

        throw $r99;

     label03:
        $r7 = staticinvoke <test.translator.A4SolutionReader: java.lang.String label(edu.mit.csail.sdg.alloy4.XMLNode)>(r6);

        $z1 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "abstract");

        if $z1 == 0 goto label04;

        $r110 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr ABSTRACT>;

        goto label05;

     label04:
        $r110 = null;

     label05:
        r8 = $r110;

        $z2 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "one");

        if $z2 == 0 goto label06;

        $r111 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr ONE>;

        goto label07;

     label06:
        $r111 = null;

     label07:
        r9 = $r111;

        $z3 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "lone");

        if $z3 == 0 goto label08;

        $r112 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr LONE>;

        goto label09;

     label08:
        $r112 = null;

     label09:
        r10 = $r112;

        $z4 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "some");

        if $z4 == 0 goto label10;

        $r113 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr SOME>;

        goto label11;

     label10:
        $r113 = null;

     label11:
        r11 = $r113;

        $z5 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "private");

        if $z5 == 0 goto label12;

        $r114 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr PRIVATE>;

        goto label13;

     label12:
        $r114 = null;

     label13:
        r12 = $r114;

        $z6 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "meta");

        if $z6 == 0 goto label14;

        $r115 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr META>;

        goto label15;

     label14:
        $r115 = null;

     label15:
        r13 = $r115;

        $z7 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "enum");

        if $z7 == 0 goto label16;

        $r116 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr ENUM>;

        goto label17;

     label16:
        $r116 = null;

     label17:
        r14 = $r116;

        $z8 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "exact");

        if $z8 == 0 goto label18;

        $r117 = <edu.mit.csail.sdg.alloy4compiler.ast.Attr: edu.mit.csail.sdg.alloy4compiler.ast.Attr EXACT>;

        goto label19;

     label18:
        $r117 = null;

     label19:
        r15 = $r117;

        $z9 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r6, "builtin");

        if $z9 == 0 goto label24;

        $r72 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r73 = $r72.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $z19 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r73);

        if $z19 == 0 goto label20;

        $r97 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        $r96 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        interfaceinvoke $r97.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r96);

        $r98 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        return $r98;

     label20:
        $r74 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $r75 = $r74.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $z20 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r75);

        if $z20 == 0 goto label21;

        $r94 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        $r93 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        interfaceinvoke $r94.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r93);

        $r95 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        return $r95;

     label21:
        $r76 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        $r77 = $r76.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $z21 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r77);

        if $z21 == 0 goto label22;

        $r91 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        $r90 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        interfaceinvoke $r91.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r90);

        $r92 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        return $r92;

     label22:
        $r78 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        $r79 = $r78.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $z22 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r79);

        if $z22 == 0 goto label23;

        $r88 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        $r87 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        interfaceinvoke $r88.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r87);

        $r89 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        return $r89;

     label23:
        $r80 = new java.io.IOException;

        $r81 = new java.lang.StringBuilder;

        specialinvoke $r81.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown builtin sig: ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (id=");

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r85 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r86 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r80.<java.io.IOException: void <init>(java.lang.String)>($r86);

        throw $r80;

     label24:
        $r16 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $i1 = interfaceinvoke $r16.<java.util.Map: int size()>();

        if i0 <= $i1 goto label25;

        $r65 = new java.io.IOException;

        $r66 = new java.lang.StringBuilder;

        specialinvoke $r66.<java.lang.StringBuilder: void <init>(java.lang.String)>("Sig ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (id=");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") is in a cyclic inheritance relationship.");

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r65.<java.io.IOException: void <init>(java.lang.String)>($r71);

        throw $r65;

     label25:
        r118 = null;

        $r17 = r0.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory>;

        $r18 = virtualinvoke $r17.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(1);

        $r19 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label30;

     label26:
        $r20 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        r119 = (edu.mit.csail.sdg.alloy4.XMLNode) $r20;

        $z10 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("atom");

        if $z10 == 0 goto label27;

        $r25 = r0.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory>;

        $r24 = newarray (java.lang.Object)[1];

        $r26 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("label");

        $r24[0] = $r26;

        $r27 = virtualinvoke $r25.<kodkod.instance.TupleFactory: kodkod.instance.Tuple tuple(java.lang.Object[])>($r24);

        virtualinvoke $r18.<kodkod.instance.TupleSet: boolean add(kodkod.instance.Tuple)>($r27);

        goto label30;

     label27:
        $z11 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("type");

        if $z11 != 0 goto label28;

        goto label30;

     label28:
        $r21 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("ID");

        $i2 = i0 + 1;

        $r22 = specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Sig parseSig(java.lang.String,int)>($r21, $i2);

        if r118 != null goto label29;

        $r23 = new java.util.ArrayList;

        specialinvoke $r23.<java.util.ArrayList: void <init>()>();

        r118 = $r23;

     label29:
        interfaceinvoke r118.<java.util.List: boolean add(java.lang.Object)>($r22);

     label30:
        $z23 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z23 != 0 goto label26;

        if r118 != null goto label35;

        $r44 = virtualinvoke r6.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("parentID");

        $i3 = i0 + 1;

        $r45 = specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Sig parseSig(java.lang.String,int)>($r44, $i3);

        $z16 = $r45 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z16 != 0 goto label31;

        $r58 = new java.io.IOException;

        $r59 = new java.lang.StringBuilder;

        specialinvoke $r59.<java.lang.StringBuilder: void <init>(java.lang.String)>("Parent of sig ");

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (id=");

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must not be a subset sig.");

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r58.<java.io.IOException: void <init>(java.lang.String)>($r64);

        throw $r58;

     label31:
        $r46 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        $r47 = virtualinvoke $r46.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        goto label33;

     label32:
        $r48 = interfaceinvoke $r47.<java.util.Iterator: java.lang.Object next()>();

        r120 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r48;

        $z17 = r120 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z17 == 0 goto label33;

        $r49 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r120;

        $r50 = $r49.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

        if $r45 != $r50 goto label33;

        $r51 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r120;

        $r52 = $r51.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $z18 = virtualinvoke $r52.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z18 == 0 goto label33;

        r109 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r120;

        $r53 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        virtualinvoke $r53.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r120);

        goto label34;

     label33:
        $z24 = interfaceinvoke $r47.<java.util.Iterator: boolean hasNext()>();

        if $z24 != 0 goto label32;

     label34:
        if r109 != null goto label39;

        $r54 = new edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        $r56 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) $r45;

        $r55 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Attr)[7];

        $r55[0] = r8;

        $r55[1] = r10;

        $r55[2] = r9;

        $r55[3] = r11;

        $r55[4] = r12;

        $r55[5] = r13;

        $r55[6] = r14;

        specialinvoke $r54.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: void <init>(java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig,edu.mit.csail.sdg.alloy4compiler.ast.Attr[])>($r7, $r56, $r55);

        r109 = $r54;

        $r57 = r0.<test.translator.A4SolutionReader: java.util.Set allsigs>;

        interfaceinvoke $r57.<java.util.Set: boolean add(java.lang.Object)>($r54);

        goto label39;

     label35:
        $r28 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        $r29 = virtualinvoke $r28.<java.util.LinkedHashSet: java.util.Iterator iterator()>();

        goto label37;

     label36:
        $r30 = interfaceinvoke $r29.<java.util.Iterator: java.lang.Object next()>();

        r121 = (edu.mit.csail.sdg.alloy4compiler.ast.Expr) $r30;

        $z12 = r121 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        if $z12 == 0 goto label37;

        $r31 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r121;

        $r32 = $r31.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $z13 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>($r7);

        if $z13 == 0 goto label37;

        $r33 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig) r121;

        $r34 = $r33.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: edu.mit.csail.sdg.alloy4.ConstList parents>;

        $z14 = staticinvoke <test.translator.A4SolutionReader: boolean sameset(java.lang.Iterable,java.lang.Iterable)>(r118, $r34);

        if $z14 == 0 goto label37;

        r109 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) r121;

        $r35 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        virtualinvoke $r35.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r121);

        goto label38;

     label37:
        $z25 = interfaceinvoke $r29.<java.util.Iterator: boolean hasNext()>();

        if $z25 != 0 goto label36;

     label38:
        if r109 != null goto label39;

        $r41 = new edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig;

        $r42 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Attr)[6];

        $r42[0] = r15;

        $r42[1] = r10;

        $r42[2] = r9;

        $r42[3] = r11;

        $r42[4] = r12;

        $r42[5] = r13;

        specialinvoke $r41.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$SubsetSig: void <init>(java.lang.String,java.util.Collection,edu.mit.csail.sdg.alloy4compiler.ast.Attr[])>($r7, r118, $r42);

        r109 = $r41;

        $r43 = r0.<test.translator.A4SolutionReader: java.util.Set allsigs>;

        interfaceinvoke $r43.<java.util.Set: boolean add(java.lang.Object)>($r41);

     label39:
        $r122 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        interfaceinvoke $r122.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, r109);

        $r123 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        interfaceinvoke $r123.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r109, $r18);

        $z26 = r109 instanceof edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig;

        if $z26 == 0 goto label44;

        $r36 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig) r109;

        r124 = $r36.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

        goto label43;

     label40:
        $r37 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        $r38 = interfaceinvoke $r37.<java.util.Map: java.lang.Object get(java.lang.Object)>(r124);

        r125 = (kodkod.instance.TupleSet) $r38;

        if r125 != null goto label41;

        r126 = virtualinvoke $r18.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        goto label42;

     label41:
        $r39 = virtualinvoke r125.<kodkod.instance.TupleSet: kodkod.instance.TupleSet clone()>();

        r126 = $r39;

        virtualinvoke $r39.<kodkod.instance.TupleSet: boolean addAll(java.util.Collection)>($r18);

     label42:
        $r40 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        interfaceinvoke $r40.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r124, r126);

        r124 = r124.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig parent>;

     label43:
        if r124 == null goto label44;

        $z15 = r124.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: boolean builtin>;

        if $z15 == 0 goto label40;

     label44:
        return r109;
    }

    private edu.mit.csail.sdg.alloy4compiler.ast.Expr parseType(edu.mit.csail.sdg.alloy4.XMLNode) throws java.io.IOException, edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Iterator $r1;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig $r6;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr r9;
        java.io.IOException $r7, $r8;
        java.lang.Object $r2;
        edu.mit.csail.sdg.alloy4.XMLNode r0, r3;
        java.lang.String $r5;
        test.translator.A4SolutionReader r4;
        boolean $z0, $z1, $z2;

        r4 := @this: test.translator.A4SolutionReader;

        r0 := @parameter0: edu.mit.csail.sdg.alloy4.XMLNode;

        r9 = null;

        $z0 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("types");

        if $z0 != 0 goto label1;

        $r8 = new java.io.IOException;

        specialinvoke $r8.<java.io.IOException: void <init>(java.lang.String)>("<types>...</type> expected");

        throw $r8;

     label1:
        $r1 = virtualinvoke r0.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label4;

     label2:
        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (edu.mit.csail.sdg.alloy4.XMLNode) $r2;

        $z1 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("type");

        if $z1 == 0 goto label4;

        $r5 = virtualinvoke r3.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("ID");

        $r6 = specialinvoke r4.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Sig parseSig(java.lang.String,int)>($r5, 0);

        if r9 != null goto label3;

        r9 = $r6;

        goto label4;

     label3:
        r9 = virtualinvoke r9.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr product(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r6);

     label4:
        $z2 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label2;

        if r9 != null goto label5;

        $r7 = new java.io.IOException;

        specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>("<type ID=../> expected");

        throw $r7;

     label5:
        return r9;
    }

    private edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field parseField(java.lang.String) throws java.io.IOException, edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r2, $r18, $r28;
        edu.mit.csail.sdg.alloy4.SafeList $r20;
        java.lang.StringBuilder $r12, $r13, $r14, $r35, $r36, $r37, $r40, $r41, $r42, $r45, $r46, $r47;
        edu.mit.csail.sdg.alloy4.XMLNode r4, r52;
        java.lang.String r1, $r5, $r15, $r17, $r23, $r38, $r43, $r48;
        java.util.LinkedHashSet $r25, $r26;
        java.io.IOException $r11, $r34, $r39, $r44;
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r10, $r32, r51;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r30;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r54, r55;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field[] $r33;
        edu.mit.csail.sdg.alloy4.Pos r6, r7, $r31, $r49, $r50;
        test.translator.A4SolutionReader r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r16, $r24;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r53;
        java.lang.String[] $r29;
        int $i0, $i1;
        kodkod.instance.TupleSet $r27;
        java.util.Iterator $r8, $r21;
        java.lang.Object $r3, $r9, $r19, $r22;

        r0 := @this: test.translator.A4SolutionReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (edu.mit.csail.sdg.alloy4.XMLNode) $r3;

        if r4 != null goto label01;

        $r44 = new java.io.IOException;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown FieldID ");

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered.");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r44.<java.io.IOException: void <init>(java.lang.String)>($r48);

        throw $r44;

     label01:
        $z0 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("field");

        if $z0 != 0 goto label02;

        $r39 = new java.io.IOException;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID ");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a field.");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r39.<java.io.IOException: void <init>(java.lang.String)>($r43);

        throw $r39;

     label02:
        $r5 = staticinvoke <test.translator.A4SolutionReader: java.lang.String label(edu.mit.csail.sdg.alloy4.XMLNode)>(r4);

        $z1 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r4, "private");

        if $z1 == 0 goto label03;

        $r49 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        goto label04;

     label03:
        $r49 = null;

     label04:
        r6 = $r49;

        $z2 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r4, "meta");

        if $z2 == 0 goto label05;

        $r50 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        goto label06;

     label05:
        $r50 = null;

     label06:
        r7 = $r50;

        r51 = null;

        $r8 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label09;

     label07:
        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r52 = (edu.mit.csail.sdg.alloy4.XMLNode) $r9;

        $z3 = virtualinvoke r52.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("types");

        if $z3 == 0 goto label09;

        $r10 = specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Expr parseType(edu.mit.csail.sdg.alloy4.XMLNode)>(r52);

        if r51 != null goto label08;

        r51 = $r10;

        goto label09;

     label08:
        r51 = virtualinvoke r51.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr plus(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r10);

     label09:
        $z6 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z6 != 0 goto label07;

        if r51 == null goto label10;

        $r16 = virtualinvoke r51.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i0 = virtualinvoke $r16.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 >= 2 goto label11;

     label10:
        $r11 = new java.io.IOException;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("Field ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is maltyped.");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r11.<java.io.IOException: void <init>(java.lang.String)>($r15);

        throw $r11;

     label11:
        $r17 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("parentID");

        $r18 = r0.<test.translator.A4SolutionReader: java.util.Map id2sig>;

        $r19 = interfaceinvoke $r18.<java.util.Map: java.lang.Object get(java.lang.Object)>($r17);

        r53 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r19;

        if r53 != null goto label12;

        $r34 = new java.io.IOException;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a sig.");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r34.<java.io.IOException: void <init>(java.lang.String)>($r38);

        throw $r34;

     label12:
        r54 = null;

        $r20 = virtualinvoke r53.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r21 = virtualinvoke $r20.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label14;

     label13:
        $r22 = interfaceinvoke $r21.<java.util.Iterator: java.lang.Object next()>();

        r55 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r22;

        $r23 = r55.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $z4 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r5);

        if $z4 == 0 goto label14;

        $r24 = virtualinvoke r55.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i1 = virtualinvoke $r24.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i1 != $i0 goto label14;

        $r25 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        $z5 = virtualinvoke $r25.<java.util.LinkedHashSet: boolean contains(java.lang.Object)>(r55);

        if $z5 == 0 goto label14;

        r54 = r55;

        $r26 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        virtualinvoke $r26.<java.util.LinkedHashSet: boolean remove(java.lang.Object)>(r55);

        goto label15;

     label14:
        $z7 = interfaceinvoke $r21.<java.util.Iterator: boolean hasNext()>();

        if $z7 != 0 goto label13;

     label15:
        if r54 != null goto label16;

        $r31 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        $r29 = newarray (java.lang.String)[1];

        $r29[0] = $r5;

        $r30 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r32 = virtualinvoke $r30.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: edu.mit.csail.sdg.alloy4compiler.ast.Expr join(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>(r51);

        $r33 = virtualinvoke r53.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field[] addTrickyField(edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,edu.mit.csail.sdg.alloy4.Pos,java.lang.String[],edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r31, r6, null, null, r7, $r29, $r32);

        r54 = $r33[0];

     label16:
        $r27 = specialinvoke r0.<test.translator.A4SolutionReader: kodkod.instance.TupleSet parseTuples(edu.mit.csail.sdg.alloy4.XMLNode,int)>(r4, $i0);

        $r28 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r54, $r27);

        return r54;
    }

    private edu.mit.csail.sdg.alloy4compiler.ast.ExprVar parseSkolem(java.lang.String) throws java.io.IOException, edu.mit.csail.sdg.alloy4.Err
    {
        edu.mit.csail.sdg.alloy4compiler.ast.Expr $r8, r30;
        java.util.Map $r2, $r19;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar $r17;
        boolean $z0, $z1, $z2;
        edu.mit.csail.sdg.alloy4.Pos $r15;
        java.lang.StringBuilder $r10, $r11, $r12, $r21, $r22, $r23, $r26, $r27, $r28;
        edu.mit.csail.sdg.alloy4.XMLNode r4, r31;
        test.translator.A4SolutionReader r0;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r14, $r16;
        int $i0;
        java.lang.String r1, $r5, $r13, $r24, $r29;
        kodkod.instance.TupleSet $r18;
        java.util.Iterator $r6;
        java.io.IOException $r9, $r20, $r25;
        java.lang.Object $r3, $r7;

        r0 := @this: test.translator.A4SolutionReader;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r4 = (edu.mit.csail.sdg.alloy4.XMLNode) $r3;

        if r4 != null goto label1;

        $r25 = new java.io.IOException;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>(java.lang.String)>("Unknown ID ");

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" encountered.");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r25.<java.io.IOException: void <init>(java.lang.String)>($r29);

        throw $r25;

     label1:
        $z0 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("skolem");

        if $z0 != 0 goto label2;

        $r20 = new java.io.IOException;

        $r21 = new java.lang.StringBuilder;

        specialinvoke $r21.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a skolem.");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r20.<java.io.IOException: void <init>(java.lang.String)>($r24);

        throw $r20;

     label2:
        $r5 = staticinvoke <test.translator.A4SolutionReader: java.lang.String label(edu.mit.csail.sdg.alloy4.XMLNode)>(r4);

        r30 = null;

        $r6 = virtualinvoke r4.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label5;

     label3:
        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r31 = (edu.mit.csail.sdg.alloy4.XMLNode) $r7;

        $z1 = virtualinvoke r31.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("types");

        if $z1 == 0 goto label5;

        $r8 = specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Expr parseType(edu.mit.csail.sdg.alloy4.XMLNode)>(r31);

        if r30 != null goto label4;

        r30 = $r8;

        goto label5;

     label4:
        r30 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Expr plus(edu.mit.csail.sdg.alloy4compiler.ast.Expr)>($r8);

     label5:
        $z2 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z2 != 0 goto label3;

        if r30 == null goto label6;

        $r14 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i0 = virtualinvoke $r14.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        if $i0 >= 1 goto label7;

     label6:
        $r9 = new java.io.IOException;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>(java.lang.String)>("Skolem ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is maltyped.");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<java.io.IOException: void <init>(java.lang.String)>($r13);

        throw $r9;

     label7:
        $r15 = <edu.mit.csail.sdg.alloy4.Pos: edu.mit.csail.sdg.alloy4.Pos UNKNOWN>;

        $r16 = virtualinvoke r30.<edu.mit.csail.sdg.alloy4compiler.ast.Expr: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $r17 = staticinvoke <edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar make(edu.mit.csail.sdg.alloy4.Pos,java.lang.String,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r15, $r5, $r16);

        $r18 = specialinvoke r0.<test.translator.A4SolutionReader: kodkod.instance.TupleSet parseTuples(edu.mit.csail.sdg.alloy4.XMLNode,int)>(r4, $i0);

        $r19 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r17, $r18);

        return $r17;
    }

    private void <init>(java.lang.Iterable, edu.mit.csail.sdg.alloy4.XMLNode) throws java.io.IOException, edu.mit.csail.sdg.alloy4.Err
    {
        java.util.Map $r50, $r58, $r66, $r77, $r86, $r101, $r123;
        edu.mit.csail.sdg.alloy4.SafeList $r19, $r83;
        java.lang.StringBuilder $r38, $r39, $r40, $r88, $r92, $r94;
        edu.mit.csail.sdg.alloy4.XMLNode r23, $r55, $r63, $r71, r119, r120, r122, r126;
        java.util.LinkedHashMap $r4, $r5, $r13;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig[] $r6;
        java.io.IOException $r37;
        edu.mit.csail.sdg.alloy4.ErrorSyntax $r115, $r116;
        test.translator.A4SolutionReader r0;
        kodkod.ast.Relation $r81, $r96, $r109;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig r117, r130;
        test.translator.A4Options $r42;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, $i7, $i8, i9, i10;
        kodkod.instance.TupleFactory $r49, $r98, $r100;
        kodkod.instance.TupleSet r131, r133, r136;
        java.lang.Object $r16, $r21, $r25, $r28, $r33, $r53, $r54, $r56, $r61, $r62, $r64, $r69, $r70, $r72, $r76, $r78, $r85, $r87, $r104, $r105, $r106, $r124;
        java.util.Set $r17, $r51, $r59, $r67, $r74, $r102;
        java.util.TreeSet $r2, $r3, $r35, $r36, $r46, $r47, $r113;
        java.lang.String $r26, $r27, $r29, $r31, $r32, $r34, $r41, $r43, $r45, $r57, $r65, $r73, $r79, $r89, $r91, $r93, $r95, $r107, $r114;
        java.util.LinkedHashSet $r1, $r12, $r18, $r22;
        java.util.Map$Entry r127, r128, r129, r134;
        test.translator.A4Solution $r44, $r48, $r80, $r82, $r90, $r97, $r108, $r110, $r112;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig $r7, $r8, $r9, $r10, $r11, $r30;
        edu.mit.csail.sdg.alloy4compiler.ast.ExprVar r135;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, z19, $z20, $z21, $z22, $z23, $z24, $z25, $z26;
        edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field r118, r132;
        edu.mit.csail.sdg.alloy4compiler.ast.Type $r99, $r111;
        java.lang.Iterable r14;
        java.util.Iterator $r15, $r20, $r24, $r52, $r60, $r68, $r75, $r84, $r103, $r121, $r125;

        r0 := @this: test.translator.A4SolutionReader;

        r14 := @parameter0: java.lang.Iterable;

        r23 := @parameter1: edu.mit.csail.sdg.alloy4.XMLNode;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.LinkedHashSet;

        specialinvoke $r1.<java.util.LinkedHashSet: void <init>()>();

        r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices> = $r1;

        $r2 = new java.util.TreeSet;

        specialinvoke $r2.<java.util.TreeSet: void <init>()>();

        r0.<test.translator.A4SolutionReader: java.util.TreeSet atoms> = $r2;

        $r3 = new java.util.TreeSet;

        specialinvoke $r3.<java.util.TreeSet: void <init>()>();

        r0.<test.translator.A4SolutionReader: java.util.TreeSet strings> = $r3;

        $r4 = new java.util.LinkedHashMap;

        specialinvoke $r4.<java.util.LinkedHashMap: void <init>()>();

        r0.<test.translator.A4SolutionReader: java.util.Map nmap> = $r4;

        $r5 = new java.util.LinkedHashMap;

        specialinvoke $r5.<java.util.LinkedHashMap: void <init>()>();

        r0.<test.translator.A4SolutionReader: java.util.Map id2sig> = $r5;

        $r6 = newarray (edu.mit.csail.sdg.alloy4compiler.ast.Sig)[5];

        $r7 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig UNIV>;

        $r6[0] = $r7;

        $r8 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SIGINT>;

        $r6[1] = $r8;

        $r9 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig SEQIDX>;

        $r6[2] = $r9;

        $r10 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        $r6[3] = $r10;

        $r11 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig NONE>;

        $r6[4] = $r11;

        $r12 = staticinvoke <minalloy.Util: java.util.LinkedHashSet asSet(java.lang.Object[])>($r6);

        r0.<test.translator.A4SolutionReader: java.util.Set allsigs> = $r12;

        $r13 = new java.util.LinkedHashMap;

        specialinvoke $r13.<java.util.LinkedHashMap: void <init>()>();

        r0.<test.translator.A4SolutionReader: java.util.Map expr2ts> = $r13;

        $r15 = interfaceinvoke r14.<java.lang.Iterable: java.util.Iterator iterator()>();

        goto label04;

     label01:
        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        r117 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r16;

        $z0 = r117.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z0 != 0 goto label04;

        $r17 = r0.<test.translator.A4SolutionReader: java.util.Set allsigs>;

        interfaceinvoke $r17.<java.util.Set: boolean add(java.lang.Object)>(r117);

        $r18 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        virtualinvoke $r18.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r117);

        $r19 = virtualinvoke r117.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r20 = virtualinvoke $r19.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label03;

     label02:
        $r21 = interfaceinvoke $r20.<java.util.Iterator: java.lang.Object next()>();

        r118 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r21;

        $r22 = r0.<test.translator.A4SolutionReader: java.util.LinkedHashSet choices>;

        virtualinvoke $r22.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(r118);

     label03:
        $z1 = interfaceinvoke $r20.<java.util.Iterator: boolean hasNext()>();

        if $z1 != 0 goto label02;

     label04:
        $z17 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z17 != 0 goto label01;

        $z2 = virtualinvoke r23.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("alloy");

        if $z2 != 0 goto label05;

        $r116 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r116.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(java.lang.String)>("The XML file\'s root node must be <alloy> or <instance>.");

        throw $r116;

     label05:
        r119 = null;

        $r24 = virtualinvoke r23.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label07;

     label06:
        $r25 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r120 = (edu.mit.csail.sdg.alloy4.XMLNode) $r25;

        $z4 = virtualinvoke r120.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("instance");

        if $z4 == 0 goto label07;

        r119 = r120;

        goto label08;

     label07:
        $z3 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label06;

     label08:
        if r119 != null goto label09;

        $r115 = new edu.mit.csail.sdg.alloy4.ErrorSyntax;

        specialinvoke $r115.<edu.mit.csail.sdg.alloy4.ErrorSyntax: void <init>(java.lang.String)>("The XML file must contain an <instance> element.");

        throw $r115;

     label09:
        $r26 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("bitwidth");

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r26);

        $r27 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("maxseq");

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r27);

        $i2 = $i0 - 1;

        $i3 = 1 << $i2;

        i9 = $i3 - 1;

        $i4 = $i0 - 1;

        $i5 = 1 << $i4;

        i6 = 0 - $i5;

        if $i0 < 1 goto label12;

        if $i0 > 30 goto label12;

        i10 = i6;

        goto label11;

     label10:
        $r113 = r0.<test.translator.A4SolutionReader: java.util.TreeSet atoms>;

        $r114 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i10);

        virtualinvoke $r113.<java.util.TreeSet: boolean add(java.lang.Object)>($r114);

        i10 = i10 + 1;

     label11:
        if i10 <= i9 goto label10;

     label12:
        $r121 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label20;

     label13:
        $r28 = interfaceinvoke $r121.<java.util.Iterator: java.lang.Object next()>();

        r122 = (edu.mit.csail.sdg.alloy4.XMLNode) $r28;

        $r29 = virtualinvoke r122.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("ID");

        $i7 = virtualinvoke $r29.<java.lang.String: int length()>();

        if $i7 <= 0 goto label20;

        $z5 = virtualinvoke r122.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("field");

        if $z5 != 0 goto label14;

        $z10 = virtualinvoke r122.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("skolem");

        if $z10 != 0 goto label14;

        $z11 = virtualinvoke r122.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("sig");

        if $z11 == 0 goto label20;

     label14:
        $r123 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r124 = interfaceinvoke $r123.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, r122);

        if $r124 == null goto label15;

        $r37 = new java.io.IOException;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>(java.lang.String)>("ID ");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is repeated.");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r37.<java.io.IOException: void <init>(java.lang.String)>($r41);

        throw $r37;

     label15:
        $z6 = virtualinvoke r122.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("sig");

        if $z6 == 0 goto label20;

        $r30 = <edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig STRING>;

        $r31 = $r30.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$PrimSig: java.lang.String label>;

        $r32 = staticinvoke <test.translator.A4SolutionReader: java.lang.String label(edu.mit.csail.sdg.alloy4.XMLNode)>(r122);

        $z7 = virtualinvoke $r31.<java.lang.String: boolean equals(java.lang.Object)>($r32);

        if $z7 == 0 goto label16;

        $z9 = staticinvoke <test.translator.A4SolutionReader: boolean yes(edu.mit.csail.sdg.alloy4.XMLNode,java.lang.String)>(r122, "builtin");

        if $z9 == 0 goto label16;

        $z18 = 1;

        goto label17;

     label16:
        $z18 = 0;

     label17:
        z19 = $z18;

        $r125 = virtualinvoke r122.<edu.mit.csail.sdg.alloy4.XMLNode: java.util.Iterator iterator()>();

        goto label19;

     label18:
        $r33 = interfaceinvoke $r125.<java.util.Iterator: java.lang.Object next()>();

        r126 = (edu.mit.csail.sdg.alloy4.XMLNode) $r33;

        $z8 = virtualinvoke r126.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("atom");

        if $z8 == 0 goto label19;

        $r34 = virtualinvoke r126.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("label");

        $r35 = r0.<test.translator.A4SolutionReader: java.util.TreeSet atoms>;

        virtualinvoke $r35.<java.util.TreeSet: boolean add(java.lang.Object)>($r34);

        if z19 == 0 goto label19;

        $r36 = r0.<test.translator.A4SolutionReader: java.util.TreeSet strings>;

        virtualinvoke $r36.<java.util.TreeSet: boolean add(java.lang.Object)>($r34);

     label19:
        $z20 = interfaceinvoke $r125.<java.util.Iterator: boolean hasNext()>();

        if $z20 != 0 goto label18;

     label20:
        $z21 = interfaceinvoke $r121.<java.util.Iterator: boolean hasNext()>();

        if $z21 != 0 goto label13;

        $r42 = new test.translator.A4Options;

        specialinvoke $r42.<test.translator.A4Options: void <init>()>();

        $r43 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("filename");

        $r42.<test.translator.A4Options: java.lang.String originalFilename> = $r43;

        $r44 = new test.translator.A4Solution;

        $r45 = virtualinvoke r119.<edu.mit.csail.sdg.alloy4.XMLNode: java.lang.String getAttribute(java.lang.String)>("command");

        $r47 = r0.<test.translator.A4SolutionReader: java.util.TreeSet strings>;

        $r46 = r0.<test.translator.A4SolutionReader: java.util.TreeSet atoms>;

        specialinvoke $r44.<test.translator.A4Solution: void <init>(java.lang.String,int,int,java.util.Set,java.util.Collection,edu.mit.csail.sdg.alloy4.A4Reporter,test.translator.A4Options,int)>($r45, $i0, $i1, $r47, $r46, null, $r42, 1);

        r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol> = $r44;

        $r48 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        $r49 = virtualinvoke $r48.<test.translator.A4Solution: kodkod.instance.TupleFactory getFactory()>();

        r0.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory> = $r49;

        $r50 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r51 = interfaceinvoke $r50.<java.util.Map: java.util.Set entrySet()>();

        $r52 = interfaceinvoke $r51.<java.util.Set: java.util.Iterator iterator()>();

        goto label22;

     label21:
        $r53 = interfaceinvoke $r52.<java.util.Iterator: java.lang.Object next()>();

        r127 = (java.util.Map$Entry) $r53;

        $r54 = interfaceinvoke r127.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r55 = (edu.mit.csail.sdg.alloy4.XMLNode) $r54;

        $z12 = virtualinvoke $r55.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("sig");

        if $z12 == 0 goto label22;

        $r56 = interfaceinvoke r127.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r57 = (java.lang.String) $r56;

        specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Sig parseSig(java.lang.String,int)>($r57, 0);

     label22:
        $z22 = interfaceinvoke $r52.<java.util.Iterator: boolean hasNext()>();

        if $z22 != 0 goto label21;

        $r58 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r59 = interfaceinvoke $r58.<java.util.Map: java.util.Set entrySet()>();

        $r60 = interfaceinvoke $r59.<java.util.Set: java.util.Iterator iterator()>();

        goto label24;

     label23:
        $r61 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        r128 = (java.util.Map$Entry) $r61;

        $r62 = interfaceinvoke r128.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r63 = (edu.mit.csail.sdg.alloy4.XMLNode) $r62;

        $z13 = virtualinvoke $r63.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("field");

        if $z13 == 0 goto label24;

        $r64 = interfaceinvoke r128.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r65 = (java.lang.String) $r64;

        specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field parseField(java.lang.String)>($r65);

     label24:
        $z23 = interfaceinvoke $r60.<java.util.Iterator: boolean hasNext()>();

        if $z23 != 0 goto label23;

        $r66 = r0.<test.translator.A4SolutionReader: java.util.Map nmap>;

        $r67 = interfaceinvoke $r66.<java.util.Map: java.util.Set entrySet()>();

        $r68 = interfaceinvoke $r67.<java.util.Set: java.util.Iterator iterator()>();

        goto label26;

     label25:
        $r69 = interfaceinvoke $r68.<java.util.Iterator: java.lang.Object next()>();

        r129 = (java.util.Map$Entry) $r69;

        $r70 = interfaceinvoke r129.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r71 = (edu.mit.csail.sdg.alloy4.XMLNode) $r70;

        $z14 = virtualinvoke $r71.<edu.mit.csail.sdg.alloy4.XMLNode: boolean is(java.lang.String)>("skolem");

        if $z14 == 0 goto label26;

        $r72 = interfaceinvoke r129.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r73 = (java.lang.String) $r72;

        specialinvoke r0.<test.translator.A4SolutionReader: edu.mit.csail.sdg.alloy4compiler.ast.ExprVar parseSkolem(java.lang.String)>($r73);

     label26:
        $z24 = interfaceinvoke $r68.<java.util.Iterator: boolean hasNext()>();

        if $z24 != 0 goto label25;

        $r74 = r0.<test.translator.A4SolutionReader: java.util.Set allsigs>;

        $r75 = interfaceinvoke $r74.<java.util.Set: java.util.Iterator iterator()>();

        goto label32;

     label27:
        $r76 = interfaceinvoke $r75.<java.util.Iterator: java.lang.Object next()>();

        r130 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig) $r76;

        $z15 = r130.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: boolean builtin>;

        if $z15 != 0 goto label32;

        $r77 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        $r78 = interfaceinvoke $r77.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r130);

        r131 = (kodkod.instance.TupleSet) $r78;

        if r131 != null goto label28;

        $r100 = r0.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory>;

        r131 = virtualinvoke $r100.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>(1);

     label28:
        $r80 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        $r79 = r130.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r81 = virtualinvoke $r80.<test.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r79, r131, r131);

        $r82 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        virtualinvoke $r82.<test.translator.A4Solution: void addSig(edu.mit.csail.sdg.alloy4compiler.ast.Sig,kodkod.ast.Expression)>(r130, $r81);

        $r83 = virtualinvoke r130.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: edu.mit.csail.sdg.alloy4.SafeList getFields()>();

        $r84 = virtualinvoke $r83.<edu.mit.csail.sdg.alloy4.SafeList: java.util.Iterator iterator()>();

        goto label31;

     label29:
        $r85 = interfaceinvoke $r84.<java.util.Iterator: java.lang.Object next()>();

        r132 = (edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field) $r85;

        $r86 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        $r87 = interfaceinvoke $r86.<java.util.Map: java.lang.Object remove(java.lang.Object)>(r132);

        r133 = (kodkod.instance.TupleSet) $r87;

        if r133 != null goto label30;

        $r98 = r0.<test.translator.A4SolutionReader: kodkod.instance.TupleFactory factory>;

        $r99 = virtualinvoke r132.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        $i8 = virtualinvoke $r99.<edu.mit.csail.sdg.alloy4compiler.ast.Type: int arity()>();

        r133 = virtualinvoke $r98.<kodkod.instance.TupleFactory: kodkod.instance.TupleSet noneOf(int)>($i8);

     label30:
        $r90 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        $r88 = new java.lang.StringBuilder;

        $r89 = r130.<edu.mit.csail.sdg.alloy4compiler.ast.Sig: java.lang.String label>;

        $r91 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r89);

        specialinvoke $r88.<java.lang.StringBuilder: void <init>(java.lang.String)>($r91);

        $r92 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r93 = r132.<edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field: java.lang.String label>;

        $r94 = virtualinvoke $r92.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r93);

        $r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.String toString()>();

        $r96 = virtualinvoke $r90.<test.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r95, r133, r133);

        $r97 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        virtualinvoke $r97.<test.translator.A4Solution: void addField(edu.mit.csail.sdg.alloy4compiler.ast.Sig$Field,kodkod.ast.Expression)>(r132, $r96);

     label31:
        $z25 = interfaceinvoke $r84.<java.util.Iterator: boolean hasNext()>();

        if $z25 != 0 goto label29;

     label32:
        $z26 = interfaceinvoke $r75.<java.util.Iterator: boolean hasNext()>();

        if $z26 != 0 goto label27;

        $r101 = r0.<test.translator.A4SolutionReader: java.util.Map expr2ts>;

        $r102 = interfaceinvoke $r101.<java.util.Map: java.util.Set entrySet()>();

        $r103 = interfaceinvoke $r102.<java.util.Set: java.util.Iterator iterator()>();

        goto label34;

     label33:
        $r104 = interfaceinvoke $r103.<java.util.Iterator: java.lang.Object next()>();

        r134 = (java.util.Map$Entry) $r104;

        $r105 = interfaceinvoke r134.<java.util.Map$Entry: java.lang.Object getKey()>();

        r135 = (edu.mit.csail.sdg.alloy4compiler.ast.ExprVar) $r105;

        $r106 = interfaceinvoke r134.<java.util.Map$Entry: java.lang.Object getValue()>();

        r136 = (kodkod.instance.TupleSet) $r106;

        $r108 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        $r107 = r135.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: java.lang.String label>;

        $r109 = virtualinvoke $r108.<test.translator.A4Solution: kodkod.ast.Relation addRel(java.lang.String,kodkod.instance.TupleSet,kodkod.instance.TupleSet)>($r107, r136, r136);

        $r110 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        $r111 = virtualinvoke r135.<edu.mit.csail.sdg.alloy4compiler.ast.ExprVar: edu.mit.csail.sdg.alloy4compiler.ast.Type type()>();

        virtualinvoke $r110.<test.translator.A4Solution: void kr2type(kodkod.ast.Relation,edu.mit.csail.sdg.alloy4compiler.ast.Type)>($r109, $r111);

     label34:
        $z16 = interfaceinvoke $r103.<java.util.Iterator: boolean hasNext()>();

        if $z16 != 0 goto label33;

        $r112 = r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

        virtualinvoke $r112.<test.translator.A4Solution: test.translator.A4Solution solve(edu.mit.csail.sdg.alloy4.A4Reporter,edu.mit.csail.sdg.alloy4compiler.ast.Command,test.translator.Simplifier,boolean)>(null, null, null, 0);

        return;
    }

    public static test.translator.A4Solution read(java.lang.Iterable, edu.mit.csail.sdg.alloy4.XMLNode) throws edu.mit.csail.sdg.alloy4.Err
    {
        java.lang.Throwable $r4;
        edu.mit.csail.sdg.alloy4.ErrorFatal $r5;
        test.translator.A4Solution $r2;
        java.lang.Iterable r10;
        java.util.ArrayList $r3;
        edu.mit.csail.sdg.alloy4.Err $r9;
        java.lang.StringBuilder $r6, $r7;
        edu.mit.csail.sdg.alloy4.XMLNode r1;
        java.lang.String $r8;
        test.translator.A4SolutionReader $r0;
        boolean $z0;

        r10 := @parameter0: java.lang.Iterable;

        r1 := @parameter1: edu.mit.csail.sdg.alloy4.XMLNode;

     label1:
        if r10 != null goto label2;

        $r3 = new java.util.ArrayList;

        specialinvoke $r3.<java.util.ArrayList: void <init>()>();

        r10 = $r3;

     label2:
        $r0 = new test.translator.A4SolutionReader;

        specialinvoke $r0.<test.translator.A4SolutionReader: void <init>(java.lang.Iterable,edu.mit.csail.sdg.alloy4.XMLNode)>(r10, r1);

        $r2 = $r0.<test.translator.A4SolutionReader: test.translator.A4Solution sol>;

     label3:
        return $r2;

     label4:
        $r4 := @caughtexception;

        $z0 = $r4 instanceof edu.mit.csail.sdg.alloy4.Err;

        if $z0 == 0 goto label5;

        $r9 = (edu.mit.csail.sdg.alloy4.Err) $r4;

        throw $r9;

     label5:
        $r5 = new edu.mit.csail.sdg.alloy4.ErrorFatal;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("Fatal error occured: ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<edu.mit.csail.sdg.alloy4.ErrorFatal: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r4);

        throw $r5;

        catch java.lang.Throwable from label1 to label3 with label4;
    }
}
