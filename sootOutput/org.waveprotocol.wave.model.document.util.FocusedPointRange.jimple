public class org.waveprotocol.wave.model.document.util.FocusedPointRange extends java.lang.Object
{
    private final org.waveprotocol.wave.model.document.util.Point anchor;
    private final org.waveprotocol.wave.model.document.util.Point focus;
    private final boolean isCollapsed;
    static final boolean $assertionsDisabled;

    public void <init>(org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        java.lang.AssertionError $r2;
        org.waveprotocol.wave.model.document.util.Point r1;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = <org.waveprotocol.wave.model.document.util.FocusedPointRange: boolean $assertionsDisabled>;

        if $z0 != 0 goto label1;

        if r1 != null goto label1;

        $r2 = new java.lang.AssertionError;

        specialinvoke $r2.<java.lang.AssertionError: void <init>()>();

        throw $r2;

     label1:
        r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point anchor> = r1;

        r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point focus> = r1;

        r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: boolean isCollapsed> = 1;

        return;
    }

    public void <init>(org.waveprotocol.wave.model.document.util.Point, org.waveprotocol.wave.model.document.util.Point)
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        java.lang.Object $r2, $r5;
        org.waveprotocol.wave.model.document.util.Point r1, $r3, r4, $r6;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        r1 := @parameter0: org.waveprotocol.wave.model.document.util.Point;

        r4 := @parameter1: org.waveprotocol.wave.model.document.util.Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r2 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r1, "anchor");

        $r3 = (org.waveprotocol.wave.model.document.util.Point) $r2;

        r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point anchor> = $r3;

        $r5 = staticinvoke <org.waveprotocol.wave.model.util.Preconditions: java.lang.Object checkNotNull(java.lang.Object,java.lang.Object)>(r4, "focus");

        $r6 = (org.waveprotocol.wave.model.document.util.Point) $r5;

        r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point focus> = $r6;

        $z0 = virtualinvoke r1.<org.waveprotocol.wave.model.document.util.Point: boolean equals(java.lang.Object)>(r4);

        r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: boolean isCollapsed> = $z0;

        return;
    }

    public boolean isCollapsed()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        boolean $z0;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        $z0 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: boolean isCollapsed>;

        return $z0;
    }

    public org.waveprotocol.wave.model.document.util.Point getAnchor()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        org.waveprotocol.wave.model.document.util.Point $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point anchor>;

        return $r1;
    }

    public org.waveprotocol.wave.model.document.util.Point getFocus()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        org.waveprotocol.wave.model.document.util.Point $r1;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point focus>;

        return $r1;
    }

    public java.lang.String toString()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r2;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r7, $r8;
        java.lang.String $r9;
        org.waveprotocol.wave.model.document.util.Point $r3, $r6;

        r2 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("FocusedPointRange(");

        $r3 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getAnchor()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" -> ");

        $r6 = virtualinvoke r2.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point getFocus()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public final int hashCode()
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0;
        int $i0, $i1, $i2, i3, i4;
        org.waveprotocol.wave.model.document.util.Point $r1, $r2;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        $r1 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point anchor>;

        $i0 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.util.Point: int hashCode()>();

        i3 = 31 + $i0;

        $i1 = 31 * i3;

        $r2 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point focus>;

        $i2 = virtualinvoke $r2.<org.waveprotocol.wave.model.document.util.Point: int hashCode()>();

        i4 = $i1 + $i2;

        return i4;
    }

    public final boolean equals(java.lang.Object)
    {
        org.waveprotocol.wave.model.document.util.FocusedPointRange r0, r2;
        java.lang.Object r1;
        org.waveprotocol.wave.model.document.util.Point $r3, $r4, $r5, $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.waveprotocol.wave.model.document.util.FocusedPointRange;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $z0 = r1 instanceof org.waveprotocol.wave.model.document.util.FocusedPointRange;

        if $z0 != 0 goto label3;

        return 0;

     label3:
        r2 = (org.waveprotocol.wave.model.document.util.FocusedPointRange) r1;

        $r4 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point anchor>;

        $r3 = r2.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point anchor>;

        $z1 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.util.Point: boolean equals(java.lang.Object)>($r3);

        if $z1 != 0 goto label4;

        return 0;

     label4:
        $r6 = r0.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point focus>;

        $r5 = r2.<org.waveprotocol.wave.model.document.util.FocusedPointRange: org.waveprotocol.wave.model.document.util.Point focus>;

        $z2 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.util.Point: boolean equals(java.lang.Object)>($r5);

        if $z2 != 0 goto label5;

        return 0;

     label5:
        return 1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/document/util/FocusedPointRange;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.document.util.FocusedPointRange: boolean $assertionsDisabled> = $z1;

        return;
    }
}
