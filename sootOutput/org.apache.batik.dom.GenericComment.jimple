public class org.apache.batik.dom.GenericComment extends org.apache.batik.dom.AbstractComment
{
    protected boolean readonly;

    public void <init>()
    {
        org.apache.batik.dom.GenericComment r0;

        r0 := @this: org.apache.batik.dom.GenericComment;

        specialinvoke r0.<org.apache.batik.dom.AbstractComment: void <init>()>();

        return;
    }

    public void <init>(java.lang.String, org.apache.batik.dom.AbstractDocument)
    {
        org.apache.batik.dom.GenericComment r0;
        org.apache.batik.dom.AbstractDocument r1;
        java.lang.String r2;

        r0 := @this: org.apache.batik.dom.GenericComment;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.batik.dom.AbstractDocument;

        specialinvoke r0.<org.apache.batik.dom.AbstractComment: void <init>()>();

        r0.<org.apache.batik.dom.AbstractNode: org.apache.batik.dom.AbstractDocument ownerDocument> = r1;

        virtualinvoke r0.<org.apache.batik.dom.AbstractCharacterData: void setNodeValue(java.lang.String)>(r2);

        return;
    }

    public boolean isReadonly()
    {
        org.apache.batik.dom.GenericComment r0;
        boolean $z0;

        r0 := @this: org.apache.batik.dom.GenericComment;

        $z0 = r0.<org.apache.batik.dom.GenericComment: boolean readonly>;

        return $z0;
    }

    public void setReadonly(boolean)
    {
        org.apache.batik.dom.GenericComment r0;
        boolean z0;

        r0 := @this: org.apache.batik.dom.GenericComment;

        z0 := @parameter0: boolean;

        r0.<org.apache.batik.dom.GenericComment: boolean readonly> = z0;

        return;
    }

    protected org.w3c.dom.Node newNode()
    {
        org.apache.batik.dom.GenericComment $r0, r1;

        r1 := @this: org.apache.batik.dom.GenericComment;

        $r0 = new org.apache.batik.dom.GenericComment;

        specialinvoke $r0.<org.apache.batik.dom.GenericComment: void <init>()>();

        return $r0;
    }
}
