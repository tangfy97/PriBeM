public abstract class javax.xml.bind.helpers.AbstractMarshallerImpl extends java.lang.Object implements javax.xml.bind.Marshaller
{
    private javax.xml.bind.ValidationEventHandler eventHandler;
    private java.lang.String encoding;
    private java.lang.String schemaLocation;
    private java.lang.String noNSSchemaLocation;
    private boolean formattedOutput;
    private boolean fragment;
    static java.lang.String[] aliases;

    public void <init>()
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        javax.xml.bind.helpers.DefaultValidationEventHandler $r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new javax.xml.bind.helpers.DefaultValidationEventHandler;

        specialinvoke $r1.<javax.xml.bind.helpers.DefaultValidationEventHandler: void <init>()>();

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler> = $r1;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String encoding> = "UTF-8";

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String schemaLocation> = null;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String noNSSchemaLocation> = null;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean formattedOutput> = 0;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean fragment> = 0;

        return;
    }

    public final void marshal(java.lang.Object, java.io.OutputStream) throws javax.xml.bind.JAXBException
    {
        java.io.OutputStream r2;
        javax.xml.transform.stream.StreamResult $r3;
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.Object r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.OutputStream;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>(r1, "obj", r2, "os");

        $r3 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r3.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>(r2);

        virtualinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void marshal(java.lang.Object,javax.xml.transform.Result)>(r1, $r3);

        return;
    }

    public void marshal(java.lang.Object, java.io.File) throws javax.xml.bind.JAXBException
    {
        java.lang.Throwable $r8;
        javax.xml.transform.stream.StreamResult $r5;
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.io.FileOutputStream $r4;
        java.io.IOException $r6;
        javax.xml.bind.JAXBException $r7;
        java.io.File r2;
        java.io.BufferedOutputStream $r3;
        java.lang.Object r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.File;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>(r1, "jaxbElement", r2, "output");

     label1:
        $r3 = new java.io.BufferedOutputStream;

        $r4 = new java.io.FileOutputStream;

        specialinvoke $r4.<java.io.FileOutputStream: void <init>(java.io.File)>(r2);

        specialinvoke $r3.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>($r4);

     label2:
        $r5 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r5.<javax.xml.transform.stream.StreamResult: void <init>(java.io.OutputStream)>($r3);

        virtualinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void marshal(java.lang.Object,javax.xml.transform.Result)>(r1, $r5);

     label3:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        goto label6;

     label4:
        $r8 := @caughtexception;

     label5:
        virtualinvoke $r3.<java.io.OutputStream: void close()>();

        throw $r8;

     label6:
        goto label8;

     label7:
        $r6 := @caughtexception;

        $r7 = new javax.xml.bind.JAXBException;

        specialinvoke $r7.<javax.xml.bind.JAXBException: void <init>(java.lang.Throwable)>($r6);

        throw $r7;

     label8:
        return;

        catch java.lang.Throwable from label2 to label3 with label4;
        catch java.lang.Throwable from label4 to label5 with label4;
        catch java.io.IOException from label1 to label6 with label7;
    }

    public final void marshal(java.lang.Object, java.io.Writer) throws javax.xml.bind.JAXBException
    {
        javax.xml.transform.stream.StreamResult $r3;
        java.io.Writer r2;
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.Object r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.io.Writer;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>(r1, "obj", r2, "writer");

        $r3 = new javax.xml.transform.stream.StreamResult;

        specialinvoke $r3.<javax.xml.transform.stream.StreamResult: void <init>(java.io.Writer)>(r2);

        virtualinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void marshal(java.lang.Object,javax.xml.transform.Result)>(r1, $r3);

        return;
    }

    public final void marshal(java.lang.Object, org.xml.sax.ContentHandler) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.Object r1;
        org.xml.sax.ContentHandler r2;
        javax.xml.transform.sax.SAXResult $r3;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>(r1, "obj", r2, "handler");

        $r3 = new javax.xml.transform.sax.SAXResult;

        specialinvoke $r3.<javax.xml.transform.sax.SAXResult: void <init>(org.xml.sax.ContentHandler)>(r2);

        virtualinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void marshal(java.lang.Object,javax.xml.transform.Result)>(r1, $r3);

        return;
    }

    public final void marshal(java.lang.Object, org.w3c.dom.Node) throws javax.xml.bind.JAXBException
    {
        org.w3c.dom.Node r2;
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.Object r1;
        javax.xml.transform.dom.DOMResult $r3;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.w3c.dom.Node;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>(r1, "obj", r2, "node");

        $r3 = new javax.xml.transform.dom.DOMResult;

        specialinvoke $r3.<javax.xml.transform.dom.DOMResult: void <init>(org.w3c.dom.Node)>(r2);

        virtualinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void marshal(java.lang.Object,javax.xml.transform.Result)>(r1, $r3);

        return;
    }

    public org.w3c.dom.Node getNode(java.lang.Object) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r3;
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.Boolean $r2;
        java.lang.Object r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        specialinvoke r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkNotNull(java.lang.Object,java.lang.String,java.lang.Object,java.lang.String)>(r1, "obj", $r2, "foo");

        $r3 = new java.lang.UnsupportedOperationException;

        specialinvoke $r3.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r3;
    }

    protected java.lang.String getEncoding()
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r1 = r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String encoding>;

        return $r1;
    }

    protected void setEncoding(java.lang.String)
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.String r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String encoding> = r1;

        return;
    }

    protected java.lang.String getSchemaLocation()
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r1 = r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String schemaLocation>;

        return $r1;
    }

    protected void setSchemaLocation(java.lang.String)
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.String r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String schemaLocation> = r1;

        return;
    }

    protected java.lang.String getNoNSSchemaLocation()
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.String $r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r1 = r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String noNSSchemaLocation>;

        return $r1;
    }

    protected void setNoNSSchemaLocation(java.lang.String)
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        java.lang.String r1;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String noNSSchemaLocation> = r1;

        return;
    }

    protected boolean isFormattedOutput()
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        boolean $z0;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $z0 = r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean formattedOutput>;

        return $z0;
    }

    protected void setFormattedOutput(boolean)
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        boolean z0;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        z0 := @parameter0: boolean;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean formattedOutput> = z0;

        return;
    }

    protected boolean isFragment()
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        boolean $z0;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $z0 = r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean fragment>;

        return $z0;
    }

    protected void setFragment(boolean)
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;
        boolean z0;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        z0 := @parameter0: boolean;

        r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean fragment> = z0;

        return;
    }

    protected java.lang.String getJavaEncoding(java.lang.String) throws java.io.UnsupportedEncodingException
    {
        java.lang.String[] $r3, $r5, $r7, $r10;
        int $i0, $i1, $i2, i3;
        java.lang.String r0, $r1, $r6, $r8, $r9, $r11;
        boolean $z0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r12;
        java.io.UnsupportedEncodingException $r2, $r4;

        r12 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = "1";

        virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>(r0);

     label2:
        return r0;

     label3:
        $r2 := @caughtexception;

        i3 = 0;

     label4:
        $r3 = <javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String[] aliases>;

        $i0 = lengthof $r3;

        if i3 >= $i0 goto label6;

        $r5 = <javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String[] aliases>;

        $r6 = $r5[i3];

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label5;

        $r9 = "1";

        $r7 = <javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String[] aliases>;

        $i1 = i3 + 1;

        $r8 = $r7[$i1];

        virtualinvoke $r9.<java.lang.String: byte[] getBytes(java.lang.String)>($r8);

        $r10 = <javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String[] aliases>;

        $i2 = i3 + 1;

        $r11 = $r10[$i2];

        return $r11;

     label5:
        i3 = i3 + 2;

        goto label4;

     label6:
        $r4 = new java.io.UnsupportedEncodingException;

        specialinvoke $r4.<java.io.UnsupportedEncodingException: void <init>(java.lang.String)>(r0);

        throw $r4;

        catch java.io.UnsupportedEncodingException from label1 to label2 with label3;
    }

    public void setProperty(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.PropertyException $r6;
        java.lang.Boolean $r9, $r12;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r10, $r11, $r13, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.xml.bind.helpers.AbstractMarshallerImpl r8;
        java.lang.IllegalArgumentException $r14;
        java.lang.Object r7;

        r8 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r0 := @parameter0: java.lang.String;

        r7 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "name");

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label1:
        $r1 = "jaxb.encoding";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label2;

        specialinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkString(java.lang.String,java.lang.Object)>(r0, r7);

        $r13 = (java.lang.String) r7;

        virtualinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setEncoding(java.lang.String)>($r13);

        return;

     label2:
        $r2 = "jaxb.formatted.output";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label3;

        specialinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkBoolean(java.lang.String,java.lang.Object)>(r0, r7);

        $r12 = (java.lang.Boolean) r7;

        $z6 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setFormattedOutput(boolean)>($z6);

        return;

     label3:
        $r3 = "jaxb.noNamespaceSchemaLocation";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label4;

        specialinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkString(java.lang.String,java.lang.Object)>(r0, r7);

        $r11 = (java.lang.String) r7;

        virtualinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setNoNSSchemaLocation(java.lang.String)>($r11);

        return;

     label4:
        $r4 = "jaxb.schemaLocation";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label5;

        specialinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkString(java.lang.String,java.lang.Object)>(r0, r7);

        $r10 = (java.lang.String) r7;

        virtualinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setSchemaLocation(java.lang.String)>($r10);

        return;

     label5:
        $r5 = "jaxb.fragment";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label6;

        specialinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void checkBoolean(java.lang.String,java.lang.Object)>(r0, r7);

        $r9 = (java.lang.Boolean) r7;

        $z5 = virtualinvoke $r9.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke r8.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setFragment(boolean)>($z5);

        return;

     label6:
        $r6 = new javax.xml.bind.PropertyException;

        specialinvoke $r6.<javax.xml.bind.PropertyException: void <init>(java.lang.String,java.lang.Object)>(r0, r7);

        throw $r6;
    }

    public java.lang.Object getProperty(java.lang.String) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.PropertyException $r6;
        java.lang.Boolean $r13, $r14;
        java.lang.String r0, $r1, $r2, $r3, $r4, $r5, $r8, $r9, $r10, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        javax.xml.bind.helpers.AbstractMarshallerImpl r7;
        java.lang.IllegalArgumentException $r11;

        r7 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label01;

        $r11 = new java.lang.IllegalArgumentException;

        $r12 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", "name");

        specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r11;

     label01:
        $r1 = "jaxb.encoding";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label02;

        $r10 = virtualinvoke r7.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String getEncoding()>();

        return $r10;

     label02:
        $r2 = "jaxb.formatted.output";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label05;

        $z6 = virtualinvoke r7.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean isFormattedOutput()>();

        if $z6 == 0 goto label03;

        $r13 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label04;

     label03:
        $r13 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label04:
        return $r13;

     label05:
        $r3 = "jaxb.noNamespaceSchemaLocation";

        $z2 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z2 == 0 goto label06;

        $r9 = virtualinvoke r7.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String getNoNSSchemaLocation()>();

        return $r9;

     label06:
        $r4 = "jaxb.schemaLocation";

        $z3 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z3 == 0 goto label07;

        $r8 = virtualinvoke r7.<javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String getSchemaLocation()>();

        return $r8;

     label07:
        $r5 = "jaxb.fragment";

        $z4 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z4 == 0 goto label10;

        $z5 = virtualinvoke r7.<javax.xml.bind.helpers.AbstractMarshallerImpl: boolean isFragment()>();

        if $z5 == 0 goto label08;

        $r14 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        goto label09;

     label08:
        $r14 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label09:
        return $r14;

     label10:
        $r6 = new javax.xml.bind.PropertyException;

        specialinvoke $r6.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>(r0);

        throw $r6;
    }

    public javax.xml.bind.ValidationEventHandler getEventHandler() throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.ValidationEventHandler $r1;
        javax.xml.bind.helpers.AbstractMarshallerImpl r0;

        r0 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r1 = r0.<javax.xml.bind.helpers.AbstractMarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler>;

        return $r1;
    }

    public void setEventHandler(javax.xml.bind.ValidationEventHandler) throws javax.xml.bind.JAXBException
    {
        javax.xml.bind.ValidationEventHandler r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        javax.xml.bind.helpers.DefaultValidationEventHandler $r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r0 := @parameter0: javax.xml.bind.ValidationEventHandler;

        if r0 != null goto label1;

        $r2 = new javax.xml.bind.helpers.DefaultValidationEventHandler;

        specialinvoke $r2.<javax.xml.bind.helpers.DefaultValidationEventHandler: void <init>()>();

        r1.<javax.xml.bind.helpers.AbstractMarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler> = $r2;

        goto label2;

     label1:
        r1.<javax.xml.bind.helpers.AbstractMarshallerImpl: javax.xml.bind.ValidationEventHandler eventHandler> = r0;

     label2:
        return;
    }

    private void checkBoolean(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r4;
        java.lang.Object r0;
        javax.xml.bind.PropertyException $r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r4 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.Boolean;

        if $z0 != 0 goto label1;

        $r1 = new javax.xml.bind.PropertyException;

        $r3 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("AbstractMarshallerImpl.MustBeBoolean", r2);

        specialinvoke $r1.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        return;
    }

    private void checkString(java.lang.String, java.lang.Object) throws javax.xml.bind.PropertyException
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r4;
        java.lang.Object r0;
        javax.xml.bind.PropertyException $r1;
        java.lang.String r2, $r3;
        boolean $z0;

        r4 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        $z0 = r0 instanceof java.lang.String;

        if $z0 != 0 goto label1;

        $r1 = new javax.xml.bind.PropertyException;

        $r3 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("AbstractMarshallerImpl.MustBeString", r2);

        specialinvoke $r1.<javax.xml.bind.PropertyException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        return;
    }

    private void checkNotNull(java.lang.Object, java.lang.String, java.lang.Object, java.lang.String)
    {
        javax.xml.bind.helpers.AbstractMarshallerImpl r8;
        java.lang.IllegalArgumentException $r2, $r5;
        java.lang.Object r0, r1;
        java.lang.String r3, $r4, r6, $r7;

        r8 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r0 := @parameter0: java.lang.Object;

        r6 := @parameter1: java.lang.String;

        r1 := @parameter2: java.lang.Object;

        r3 := @parameter3: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r7 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        if r1 != null goto label2;

        $r2 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <javax.xml.bind.helpers.Messages: java.lang.String format(java.lang.String,java.lang.Object)>("Shared.MustNotBeNull", r3);

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        return;
    }

    public void marshal(java.lang.Object, javax.xml.stream.XMLEventWriter) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.stream.XMLEventWriter r3;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        java.lang.Object r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.xml.stream.XMLEventWriter;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void marshal(java.lang.Object, javax.xml.stream.XMLStreamWriter) throws javax.xml.bind.JAXBException
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        java.lang.Object r2;
        javax.xml.stream.XMLStreamWriter r3;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: javax.xml.stream.XMLStreamWriter;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setSchema(javax.xml.validation.Schema)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        javax.xml.validation.Schema r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: javax.xml.validation.Schema;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.validation.Schema getSchema()
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setAdapter(javax.xml.bind.'annotation'.adapters.XmlAdapter)
    {
        javax.xml.bind.'annotation'.adapters.XmlAdapter r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        java.lang.Class $r2;
        java.lang.IllegalArgumentException $r3;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r0 := @parameter0: javax.xml.bind.'annotation'.adapters.XmlAdapter;

        if r0 != null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        virtualinvoke r1.<javax.xml.bind.helpers.AbstractMarshallerImpl: void setAdapter(java.lang.Class,javax.xml.bind.'annotation'.adapters.XmlAdapter)>($r2, r0);

        return;
    }

    public void setAdapter(java.lang.Class, javax.xml.bind.'annotation'.adapters.XmlAdapter)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.'annotation'.adapters.XmlAdapter r3;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        java.lang.Class r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: javax.xml.bind.'annotation'.adapters.XmlAdapter;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.'annotation'.adapters.XmlAdapter getAdapter(java.lang.Class)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        java.lang.Class r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: java.lang.Class;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setAttachmentMarshaller(javax.xml.bind.attachment.AttachmentMarshaller)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        javax.xml.bind.attachment.AttachmentMarshaller r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: javax.xml.bind.attachment.AttachmentMarshaller;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.attachment.AttachmentMarshaller getAttachmentMarshaller()
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void setListener(javax.xml.bind.Marshaller$Listener)
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;
        javax.xml.bind.Marshaller$Listener r2;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        r2 := @parameter0: javax.xml.bind.Marshaller$Listener;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public javax.xml.bind.Marshaller$Listener getListener()
    {
        java.lang.UnsupportedOperationException $r0;
        javax.xml.bind.helpers.AbstractMarshallerImpl r1;

        r1 := @this: javax.xml.bind.helpers.AbstractMarshallerImpl;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        $r0 = newarray (java.lang.String)[54];

        $r0[0] = "UTF-8";

        $r0[1] = "UTF8";

        $r0[2] = "UTF-16";

        $r0[3] = "Unicode";

        $r0[4] = "UTF-16BE";

        $r0[5] = "UnicodeBigUnmarked";

        $r0[6] = "UTF-16LE";

        $r0[7] = "UnicodeLittleUnmarked";

        $r0[8] = "US-ASCII";

        $r0[9] = "ASCII";

        $r0[10] = "TIS-620";

        $r0[11] = "TIS620";

        $r0[12] = "ISO-10646-UCS-2";

        $r0[13] = "Unicode";

        $r0[14] = "EBCDIC-CP-US";

        $r0[15] = "cp037";

        $r0[16] = "EBCDIC-CP-CA";

        $r0[17] = "cp037";

        $r0[18] = "EBCDIC-CP-NL";

        $r0[19] = "cp037";

        $r0[20] = "EBCDIC-CP-WT";

        $r0[21] = "cp037";

        $r0[22] = "EBCDIC-CP-DK";

        $r0[23] = "cp277";

        $r0[24] = "EBCDIC-CP-NO";

        $r0[25] = "cp277";

        $r0[26] = "EBCDIC-CP-FI";

        $r0[27] = "cp278";

        $r0[28] = "EBCDIC-CP-SE";

        $r0[29] = "cp278";

        $r0[30] = "EBCDIC-CP-IT";

        $r0[31] = "cp280";

        $r0[32] = "EBCDIC-CP-ES";

        $r0[33] = "cp284";

        $r0[34] = "EBCDIC-CP-GB";

        $r0[35] = "cp285";

        $r0[36] = "EBCDIC-CP-FR";

        $r0[37] = "cp297";

        $r0[38] = "EBCDIC-CP-AR1";

        $r0[39] = "cp420";

        $r0[40] = "EBCDIC-CP-HE";

        $r0[41] = "cp424";

        $r0[42] = "EBCDIC-CP-BE";

        $r0[43] = "cp500";

        $r0[44] = "EBCDIC-CP-CH";

        $r0[45] = "cp500";

        $r0[46] = "EBCDIC-CP-ROECE";

        $r0[47] = "cp870";

        $r0[48] = "EBCDIC-CP-YU";

        $r0[49] = "cp870";

        $r0[50] = "EBCDIC-CP-IS";

        $r0[51] = "cp871";

        $r0[52] = "EBCDIC-CP-AR2";

        $r0[53] = "cp918";

        <javax.xml.bind.helpers.AbstractMarshallerImpl: java.lang.String[] aliases> = $r0;

        return;
    }
}
