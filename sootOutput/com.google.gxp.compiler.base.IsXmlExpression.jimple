public class com.google.gxp.compiler.base.IsXmlExpression extends com.google.gxp.compiler.base.Expression
{

    public void <init>(com.google.gxp.compiler.base.Node, com.google.gxp.compiler.schema.Schema)
    {
        com.google.gxp.compiler.base.IsXmlExpression r0;
        com.google.gxp.compiler.schema.Schema r2;
        com.google.gxp.compiler.base.Node r1;

        r0 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        r1 := @parameter0: com.google.gxp.compiler.base.Node;

        r2 := @parameter1: com.google.gxp.compiler.schema.Schema;

        specialinvoke r0.<com.google.gxp.compiler.base.Expression: void <init>(com.google.gxp.compiler.base.Node,com.google.gxp.compiler.schema.Schema)>(r1, r2);

        return;
    }

    public boolean alwaysEquals(com.google.gxp.compiler.base.Expression)
    {
        com.google.gxp.compiler.base.Expression r0;
        com.google.gxp.compiler.base.IsXmlExpression r1;
        boolean $z0;

        r1 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        r0 := @parameter0: com.google.gxp.compiler.base.Expression;

        $z0 = r0 instanceof com.google.gxp.compiler.base.IsXmlExpression;

        return $z0;
    }

    public boolean alwaysEqualToXmlEnabled()
    {
        com.google.gxp.compiler.base.IsXmlExpression r0;

        r0 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        return 1;
    }

    public java.lang.Object acceptVisitor(com.google.gxp.compiler.base.ExpressionVisitor)
    {
        com.google.gxp.compiler.base.IsXmlExpression r1;
        java.lang.Object $r2;
        com.google.gxp.compiler.base.ExpressionVisitor r0;

        r1 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        r0 := @parameter0: com.google.gxp.compiler.base.ExpressionVisitor;

        $r2 = interfaceinvoke r0.<com.google.gxp.compiler.base.ExpressionVisitor: java.lang.Object visitIsXmlExpression(com.google.gxp.compiler.base.IsXmlExpression)>(r1);

        return $r2;
    }

    public java.lang.String toString()
    {
        com.google.gxp.compiler.alerts.SourcePosition $r3;
        java.lang.StringBuilder $r0, $r1, $r4;
        com.google.gxp.compiler.base.IsXmlExpression r2;
        java.lang.String $r5;

        r2 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("IsXmlExpression@");

        $r3 = virtualinvoke r2.<com.google.gxp.compiler.base.IsXmlExpression: com.google.gxp.compiler.alerts.SourcePosition getSourcePosition()>();

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r5;
    }

    public boolean equals(java.lang.Object)
    {
        java.lang.Object r0;
        com.google.gxp.compiler.base.IsXmlExpression r1, $r2;
        boolean $z0, $z1, $z2;

        r1 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof com.google.gxp.compiler.base.IsXmlExpression;

        if $z0 == 0 goto label1;

        $r2 = (com.google.gxp.compiler.base.IsXmlExpression) r0;

        $z1 = virtualinvoke r1.<com.google.gxp.compiler.base.IsXmlExpression: boolean equals(com.google.gxp.compiler.base.IsXmlExpression)>($r2);

        if $z1 == 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public boolean equals(com.google.gxp.compiler.base.IsXmlExpression)
    {
        com.google.gxp.compiler.base.IsXmlExpression r0, r1;
        boolean $z0;

        r0 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        r1 := @parameter0: com.google.gxp.compiler.base.IsXmlExpression;

        $z0 = virtualinvoke r0.<com.google.gxp.compiler.base.IsXmlExpression: boolean equalsExpression(com.google.gxp.compiler.base.Expression)>(r1);

        return $z0;
    }

    public int hashCode()
    {
        int $i0;
        com.google.gxp.compiler.base.IsXmlExpression r0;

        r0 := @this: com.google.gxp.compiler.base.IsXmlExpression;

        $i0 = virtualinvoke r0.<com.google.gxp.compiler.base.IsXmlExpression: int expressionHashCode()>();

        return $i0;
    }
}
