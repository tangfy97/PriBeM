class org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2 extends java.lang.Object implements java.util.concurrent.Callable
{
    final org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0;

    void <init>(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)
    {
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2 r0;
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState r1;

        r0 := @this: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2;

        r1 := @parameter0: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState;

        r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.Void call() throws org.waveprotocol.box.server.persistence.PersistenceException
    {
        org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta $r49;
        org.waveprotocol.box.server.waveserver.ByteStringMessage $r45;
        com.google.common.util.concurrent.ListenableFutureTask $r21, $r26;
        byte $b2, $b5;
        org.waveprotocol.wave.util.logging.Log $r29;
        org.waveprotocol.box.server.waveserver.WaveletDeltaRecord $r52;
        boolean $z0, $z1;
        java.util.concurrent.ConcurrentNavigableMap $r43, $r47;
        java.lang.StringBuilder $r31, $r32, $r33, $r34, $r51;
        com.google.common.collect.ImmutableList$Builder $r9;
        java.lang.Throwable $r36, $r37;
        long $l0, $l1, $l3, $l4;
        java.util.concurrent.atomic.AtomicReference $r4, $r16, $r19;
        com.google.common.collect.ImmutableList $r12;
        org.waveprotocol.wave.model.version.HashedVersion r6, $r8, r38, $r39, r40, $r50;
        int $i6, $i7;
        java.lang.String $r35;
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState $r1, $r3, $r7, $r10, $r13, $r15, $r18, $r20, $r22, $r23, $r25, $r27, $r28, $r42, $r46;
        java.util.concurrent.Executor $r24;
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2 r0;
        java.lang.Object $r2, $r5, $r14, $r17, $r44, $r48;
        org.waveprotocol.box.server.waveserver.DeltaStore$DeltasAccess $r11;

        r0 := @this: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2;

        $r1 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r2 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.lang.Object access$000(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r1);

        entermonitor $r2;

     label01:
        $r3 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r4 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.util.concurrent.atomic.AtomicReference access$100(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r3);

        $r5 = virtualinvoke $r4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        r6 = (org.waveprotocol.wave.model.version.HashedVersion) $r5;

        $r7 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r8 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: org.waveprotocol.wave.model.version.HashedVersion access$200(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r7);

        r38 = $r8;

        exitmonitor $r2;

     label02:
        goto label05;

     label03:
        $r37 := @caughtexception;

        exitmonitor $r2;

     label04:
        throw $r37;

     label05:
        if r6 == null goto label06;

        $l0 = virtualinvoke $r8.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $l1 = virtualinvoke r6.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $b2 = $l0 cmp $l1;

        $i6 = (int) $b2;

        if $i6 > 0 goto label06;

        $r29 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: org.waveprotocol.wave.util.logging.Log access$300()>();

        $r51 = new java.lang.StringBuilder;

        specialinvoke $r51.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Attempt to persist version ");

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" smaller than last persisted version ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r29.<org.waveprotocol.wave.util.logging.Log: void info(java.lang.String)>($r35);

        r38 = r6;

        goto label10;

     label06:
        $r9 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList$Builder builder()>();

        if r6 != null goto label07;

        $r28 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r39 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: org.waveprotocol.wave.model.version.HashedVersion access$400(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r28);

        goto label08;

     label07:
        $r39 = r6;

     label08:
        r40 = $r39;

     label09:
        $r52 = new org.waveprotocol.box.server.waveserver.WaveletDeltaRecord;

        $r42 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r43 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.util.concurrent.ConcurrentNavigableMap access$500(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r42);

        $r44 = interfaceinvoke $r43.<java.util.concurrent.ConcurrentNavigableMap: java.lang.Object get(java.lang.Object)>(r40);

        $r45 = (org.waveprotocol.box.server.waveserver.ByteStringMessage) $r44;

        $r46 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r47 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.util.concurrent.ConcurrentNavigableMap access$600(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r46);

        $r48 = interfaceinvoke $r47.<java.util.concurrent.ConcurrentNavigableMap: java.lang.Object get(java.lang.Object)>(r40);

        $r49 = (org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta) $r48;

        specialinvoke $r52.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: void <init>(org.waveprotocol.wave.model.version.HashedVersion,org.waveprotocol.box.server.waveserver.ByteStringMessage,org.waveprotocol.wave.model.operation.wave.TransformedWaveletDelta)>(r40, $r45, $r49);

        virtualinvoke $r9.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList$Builder add(java.lang.Object)>($r52);

        $r50 = virtualinvoke $r52.<org.waveprotocol.box.server.waveserver.WaveletDeltaRecord: org.waveprotocol.wave.model.version.HashedVersion getResultingVersion()>();

        r40 = $r50;

        $l3 = virtualinvoke $r50.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $l4 = virtualinvoke $r8.<org.waveprotocol.wave.model.version.HashedVersion: long getVersion()>();

        $b5 = $l3 cmp $l4;

        $i7 = (int) $b5;

        if $i7 < 0 goto label09;

        $z0 = virtualinvoke $r50.<org.waveprotocol.wave.model.version.HashedVersion: boolean equals(java.lang.Object)>($r8);

        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean)>($z0);

        $r10 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r11 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: org.waveprotocol.box.server.waveserver.DeltaStore$DeltasAccess access$700(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r10);

        $r12 = virtualinvoke $r9.<com.google.common.collect.ImmutableList$Builder: com.google.common.collect.ImmutableList build()>();

        interfaceinvoke $r11.<org.waveprotocol.box.server.waveserver.DeltaStore$DeltasAccess: void append(java.util.Collection)>($r12);

     label10:
        $r13 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r14 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.lang.Object access$000(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r13);

        entermonitor $r14;

     label11:
        $r15 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r16 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.util.concurrent.atomic.AtomicReference access$100(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r15);

        $r17 = virtualinvoke $r16.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();

        if r6 != $r17 goto label12;

        $z1 = 1;

        goto label13;

     label12:
        $z1 = 0;

     label13:
        staticinvoke <com.google.common.base.Preconditions: void checkState(boolean,java.lang.Object)>($z1, "lastPersistedVersion changed while we were writing to storage");

        $r18 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r19 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.util.concurrent.atomic.AtomicReference access$100(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r18);

        virtualinvoke $r19.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(r38);

        $r20 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r21 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: com.google.common.util.concurrent.ListenableFutureTask access$800(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r20);

        if $r21 == null goto label14;

        $r23 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r24 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: java.util.concurrent.Executor access$900(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r23);

        $r25 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        $r26 = staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: com.google.common.util.concurrent.ListenableFutureTask access$800(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState)>($r25);

        interfaceinvoke $r24.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>($r26);

        $r27 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: com.google.common.util.concurrent.ListenableFutureTask access$802(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState,com.google.common.util.concurrent.ListenableFutureTask)>($r27, null);

        goto label15;

     label14:
        $r22 = r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState this$0>;

        staticinvoke <org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState: org.waveprotocol.wave.model.version.HashedVersion access$202(org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState,org.waveprotocol.wave.model.version.HashedVersion)>($r22, null);

     label15:
        exitmonitor $r14;

     label16:
        goto label19;

     label17:
        $r36 := @caughtexception;

        exitmonitor $r14;

     label18:
        throw $r36;

     label19:
        return null;

        catch java.lang.Throwable from label01 to label02 with label03;
        catch java.lang.Throwable from label03 to label04 with label03;
        catch java.lang.Throwable from label11 to label16 with label17;
        catch java.lang.Throwable from label17 to label18 with label17;
    }

    public volatile java.lang.Object call() throws java.lang.Exception
    {
        java.lang.Void $r1;
        org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2 r0;

        r0 := @this: org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2;

        $r1 = virtualinvoke r0.<org.waveprotocol.box.server.waveserver.DeltaStoreBasedWaveletState$2: java.lang.Void call()>();

        return $r1;
    }
}
