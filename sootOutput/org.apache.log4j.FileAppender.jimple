public class org.apache.log4j.FileAppender extends org.apache.log4j.WriterAppender
{
    protected boolean fileAppend;
    protected java.lang.String fileName;
    protected boolean bufferedIO;
    protected int bufferSize;

    public void <init>()
    {
        org.apache.log4j.FileAppender r0;

        r0 := @this: org.apache.log4j.FileAppender;

        specialinvoke r0.<org.apache.log4j.WriterAppender: void <init>()>();

        r0.<org.apache.log4j.FileAppender: boolean fileAppend> = 1;

        r0.<org.apache.log4j.FileAppender: java.lang.String fileName> = null;

        r0.<org.apache.log4j.FileAppender: boolean bufferedIO> = 0;

        r0.<org.apache.log4j.FileAppender: int bufferSize> = 8192;

        return;
    }

    public void <init>(org.apache.log4j.Layout, java.lang.String, boolean, boolean, int) throws java.io.IOException
    {
        org.apache.log4j.FileAppender r0;
        int i0;
        org.apache.log4j.Layout r1;
        java.lang.String r2;
        boolean z0, z1;

        r0 := @this: org.apache.log4j.FileAppender;

        r1 := @parameter0: org.apache.log4j.Layout;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        i0 := @parameter4: int;

        specialinvoke r0.<org.apache.log4j.WriterAppender: void <init>()>();

        r0.<org.apache.log4j.FileAppender: boolean fileAppend> = 1;

        r0.<org.apache.log4j.FileAppender: java.lang.String fileName> = null;

        r0.<org.apache.log4j.FileAppender: boolean bufferedIO> = 0;

        r0.<org.apache.log4j.FileAppender: int bufferSize> = 8192;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout> = r1;

        virtualinvoke r0.<org.apache.log4j.FileAppender: void setFile(java.lang.String,boolean,boolean,int)>(r2, z0, z1, i0);

        return;
    }

    public void <init>(org.apache.log4j.Layout, java.lang.String, boolean) throws java.io.IOException
    {
        org.apache.log4j.FileAppender r0;
        int $i0;
        org.apache.log4j.Layout r1;
        java.lang.String r2;
        boolean z0;

        r0 := @this: org.apache.log4j.FileAppender;

        r1 := @parameter0: org.apache.log4j.Layout;

        r2 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        specialinvoke r0.<org.apache.log4j.WriterAppender: void <init>()>();

        r0.<org.apache.log4j.FileAppender: boolean fileAppend> = 1;

        r0.<org.apache.log4j.FileAppender: java.lang.String fileName> = null;

        r0.<org.apache.log4j.FileAppender: boolean bufferedIO> = 0;

        r0.<org.apache.log4j.FileAppender: int bufferSize> = 8192;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout> = r1;

        $i0 = r0.<org.apache.log4j.FileAppender: int bufferSize>;

        virtualinvoke r0.<org.apache.log4j.FileAppender: void setFile(java.lang.String,boolean,boolean,int)>(r2, z0, 0, $i0);

        return;
    }

    public void <init>(org.apache.log4j.Layout, java.lang.String) throws java.io.IOException
    {
        org.apache.log4j.FileAppender r0;
        org.apache.log4j.Layout r1;
        java.lang.String r2;

        r0 := @this: org.apache.log4j.FileAppender;

        r1 := @parameter0: org.apache.log4j.Layout;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.log4j.FileAppender: void <init>(org.apache.log4j.Layout,java.lang.String,boolean)>(r1, r2, 1);

        return;
    }

    public void setFile(java.lang.String)
    {
        org.apache.log4j.FileAppender r2;
        java.lang.String r0, $r1;

        r2 := @this: org.apache.log4j.FileAppender;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>();

        r2.<org.apache.log4j.FileAppender: java.lang.String fileName> = $r1;

        return;
    }

    public boolean getAppend()
    {
        org.apache.log4j.FileAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.FileAppender;

        $z0 = r0.<org.apache.log4j.FileAppender: boolean fileAppend>;

        return $z0;
    }

    public java.lang.String getFile()
    {
        org.apache.log4j.FileAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.FileAppender;

        $r1 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        return $r1;
    }

    public void activateOptions()
    {
        java.lang.StringBuffer $r2, $r3, $r5, $r6, $r10, $r12, $r14, $r15, $r16, $r17;
        int $i0;
        java.lang.String $r1, $r4, $r7, $r8, $r13, $r18;
        boolean $z0, $z1, $z2;
        org.apache.log4j.spi.ErrorHandler $r11;
        java.io.IOException $r9;
        org.apache.log4j.FileAppender r0;

        r0 := @this: org.apache.log4j.FileAppender;

        $r1 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        if $r1 == null goto label4;

     label1:
        $r8 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $z1 = r0.<org.apache.log4j.FileAppender: boolean fileAppend>;

        $z0 = r0.<org.apache.log4j.FileAppender: boolean bufferedIO>;

        $i0 = r0.<org.apache.log4j.FileAppender: int bufferSize>;

        virtualinvoke r0.<org.apache.log4j.FileAppender: void setFile(java.lang.String,boolean,boolean,int)>($r8, $z1, $z0, $i0);

     label2:
        goto label5;

     label3:
        $r9 := @caughtexception;

        $r11 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("setFile(");

        $r13 = r0.<org.apache.log4j.FileAppender: java.lang.String fileName>;

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(",");

        $z2 = r0.<org.apache.log4j.FileAppender: boolean fileAppend>;

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>($z2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") call failed.");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String,java.lang.Exception,int)>($r18, $r9, 4);

        goto label5;

     label4:
        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("File option not set for appender [");

        $r4 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("].");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r7);

        staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("Are you using FileAppender instead of ConsoleAppender?");

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    protected void closeFile()
    {
        java.io.IOException $r3;
        java.lang.StringBuffer $r4, $r5, $r7;
        java.lang.Thread $r9;
        org.apache.log4j.FileAppender r0;
        java.lang.String $r8;
        org.apache.log4j.helpers.QuietWriter $r1, $r2, $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.FileAppender;

        $r1 = r0.<org.apache.log4j.WriterAppender: org.apache.log4j.helpers.QuietWriter qw>;

        if $r1 == null goto label5;

     label1:
        $r2 = r0.<org.apache.log4j.WriterAppender: org.apache.log4j.helpers.QuietWriter qw>;

        virtualinvoke $r2.<java.io.FilterWriter: void close()>();

     label2:
        goto label5;

     label3:
        $r3 := @caughtexception;

        $z0 = $r3 instanceof java.io.InterruptedIOException;

        if $z0 == 0 goto label4;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

     label4:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Could not close ");

        $r6 = r0.<org.apache.log4j.WriterAppender: org.apache.log4j.helpers.QuietWriter qw>;

        $r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void error(java.lang.String,java.lang.Throwable)>($r8, $r3);

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean getBufferedIO()
    {
        org.apache.log4j.FileAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.FileAppender;

        $z0 = r0.<org.apache.log4j.FileAppender: boolean bufferedIO>;

        return $z0;
    }

    public int getBufferSize()
    {
        org.apache.log4j.FileAppender r0;
        int $i0;

        r0 := @this: org.apache.log4j.FileAppender;

        $i0 = r0.<org.apache.log4j.FileAppender: int bufferSize>;

        return $i0;
    }

    public void setAppend(boolean)
    {
        org.apache.log4j.FileAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.FileAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.FileAppender: boolean fileAppend> = z0;

        return;
    }

    public void setBufferedIO(boolean)
    {
        org.apache.log4j.FileAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.FileAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.FileAppender: boolean bufferedIO> = z0;

        if z0 == 0 goto label1;

        r0.<org.apache.log4j.WriterAppender: boolean immediateFlush> = 0;

     label1:
        return;
    }

    public void setBufferSize(int)
    {
        org.apache.log4j.FileAppender r0;
        int i0;

        r0 := @this: org.apache.log4j.FileAppender;

        i0 := @parameter0: int;

        r0.<org.apache.log4j.FileAppender: int bufferSize> = i0;

        return;
    }

    public synchronized void setFile(java.lang.String, boolean, boolean, int) throws java.io.IOException
    {
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r5;
        int i0;
        java.io.OutputStreamWriter $r9;
        java.lang.String r2, $r6, $r13;
        boolean z0, z1, $z2, $z3;
        java.io.BufferedWriter $r10;
        java.io.FileOutputStream $r8, $r15, r16;
        java.io.FileNotFoundException $r11;
        java.io.File $r12, $r14;
        org.apache.log4j.FileAppender r7;
        java.io.Writer r17;

        r7 := @this: org.apache.log4j.FileAppender;

        r2 := @parameter0: java.lang.String;

        z0 := @parameter1: boolean;

        z1 := @parameter2: boolean;

        i0 := @parameter3: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("setFile called: ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>($r6);

        if z1 == 0 goto label1;

        virtualinvoke r7.<org.apache.log4j.WriterAppender: void setImmediateFlush(boolean)>(0);

     label1:
        virtualinvoke r7.<org.apache.log4j.FileAppender: void reset()>();

     label2:
        $r8 = new java.io.FileOutputStream;

        specialinvoke $r8.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>(r2, z0);

        r16 = $r8;

     label3:
        goto label8;

     label4:
        $r11 := @caughtexception;

        $r12 = new java.io.File;

        specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>(r2);

        $r13 = virtualinvoke $r12.<java.io.File: java.lang.String getParent()>();

        if $r13 == null goto label7;

        $r14 = new java.io.File;

        specialinvoke $r14.<java.io.File: void <init>(java.lang.String)>($r13);

        $z2 = virtualinvoke $r14.<java.io.File: boolean exists()>();

        if $z2 != 0 goto label5;

        $z3 = virtualinvoke $r14.<java.io.File: boolean mkdirs()>();

        if $z3 == 0 goto label5;

        $r15 = new java.io.FileOutputStream;

        specialinvoke $r15.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>(r2, z0);

        r16 = $r15;

        goto label6;

     label5:
        throw $r11;

     label6:
        goto label8;

     label7:
        throw $r11;

     label8:
        $r9 = virtualinvoke r7.<org.apache.log4j.WriterAppender: java.io.OutputStreamWriter createWriter(java.io.OutputStream)>(r16);

        r17 = $r9;

        if z1 == 0 goto label9;

        $r10 = new java.io.BufferedWriter;

        specialinvoke $r10.<java.io.BufferedWriter: void <init>(java.io.Writer,int)>($r9, i0);

        r17 = $r10;

     label9:
        virtualinvoke r7.<org.apache.log4j.FileAppender: void setQWForFiles(java.io.Writer)>(r17);

        r7.<org.apache.log4j.FileAppender: java.lang.String fileName> = r2;

        r7.<org.apache.log4j.FileAppender: boolean fileAppend> = z0;

        r7.<org.apache.log4j.FileAppender: boolean bufferedIO> = z1;

        r7.<org.apache.log4j.FileAppender: int bufferSize> = i0;

        virtualinvoke r7.<org.apache.log4j.WriterAppender: void writeHeader()>();

        staticinvoke <org.apache.log4j.helpers.LogLog: void debug(java.lang.String)>("setFile ended");

        return;

        catch java.io.FileNotFoundException from label2 to label3 with label4;
    }

    protected void setQWForFiles(java.io.Writer)
    {
        org.apache.log4j.FileAppender r0;
        java.io.Writer r2;
        org.apache.log4j.spi.ErrorHandler $r3;
        org.apache.log4j.helpers.QuietWriter $r1;

        r0 := @this: org.apache.log4j.FileAppender;

        r2 := @parameter0: java.io.Writer;

        $r1 = new org.apache.log4j.helpers.QuietWriter;

        $r3 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        specialinvoke $r1.<org.apache.log4j.helpers.QuietWriter: void <init>(java.io.Writer,org.apache.log4j.spi.ErrorHandler)>(r2, $r3);

        r0.<org.apache.log4j.WriterAppender: org.apache.log4j.helpers.QuietWriter qw> = $r1;

        return;
    }

    protected void reset()
    {
        org.apache.log4j.FileAppender r0;

        r0 := @this: org.apache.log4j.FileAppender;

        virtualinvoke r0.<org.apache.log4j.FileAppender: void closeFile()>();

        r0.<org.apache.log4j.FileAppender: java.lang.String fileName> = null;

        specialinvoke r0.<org.apache.log4j.WriterAppender: void reset()>();

        return;
    }
}
