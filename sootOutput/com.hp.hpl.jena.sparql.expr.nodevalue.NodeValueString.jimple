public class com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString extends com.hp.hpl.jena.sparql.expr.NodeValue
{
    private java.lang.String string;

    public void <init>(java.lang.String)
    {
        java.lang.String r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: java.lang.String string> = r1;

        return;
    }

    public void <init>(java.lang.String, com.hp.hpl.jena.graph.Node)
    {
        com.hp.hpl.jena.graph.Node r1;
        java.lang.String r2;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        r2 := @parameter0: java.lang.String;

        r1 := @parameter1: com.hp.hpl.jena.graph.Node;

        specialinvoke r0.<com.hp.hpl.jena.sparql.expr.NodeValue: void <init>(com.hp.hpl.jena.graph.Node)>(r1);

        r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: java.lang.String string> = r2;

        return;
    }

    public boolean isString()
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        return 1;
    }

    public java.lang.String getString()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: java.lang.String string>;

        return $r1;
    }

    public java.lang.String asString()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: java.lang.String string>;

        return $r1;
    }

    public java.lang.String toString()
    {
        com.hp.hpl.jena.graph.Node $r1, $r8;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;
        java.lang.StringBuilder $r2, $r3, $r5, $r6;
        java.lang.String $r4, $r7, $r9;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: com.hp.hpl.jena.graph.Node getNode()>();

        if $r1 == null goto label1;

        $r8 = virtualinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: com.hp.hpl.jena.graph.Node getNode()>();

        $r9 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForNode(com.hp.hpl.jena.graph.Node)>($r8);

        return $r9;

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r4 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: java.lang.String string>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    protected com.hp.hpl.jena.graph.Node makeNode()
    {
        java.lang.String $r1;
        com.hp.hpl.jena.graph.Node $r2;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r0;

        r0 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        $r1 = r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString: java.lang.String string>;

        $r2 = staticinvoke <com.hp.hpl.jena.graph.NodeFactory: com.hp.hpl.jena.graph.Node createLiteral(java.lang.String)>($r1);

        return $r2;
    }

    public void visit(com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor)
    {
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor r0;
        com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString r1;

        r1 := @this: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString;

        r0 := @parameter0: com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor;

        interfaceinvoke r0.<com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueVisitor: void visit(com.hp.hpl.jena.sparql.expr.nodevalue.NodeValueString)>(r1);

        return;
    }
}
