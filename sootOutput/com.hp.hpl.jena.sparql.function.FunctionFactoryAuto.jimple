class com.hp.hpl.jena.sparql.function.FunctionFactoryAuto extends java.lang.Object implements com.hp.hpl.jena.sparql.function.FunctionFactory
{
    java.lang.Class extClass;

    void <init>(java.lang.Class)
    {
        com.hp.hpl.jena.sparql.function.FunctionFactoryAuto r0;
        java.lang.Class r1;

        r0 := @this: com.hp.hpl.jena.sparql.function.FunctionFactoryAuto;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.function.FunctionFactoryAuto: java.lang.Class extClass> = r1;

        return;
    }

    public com.hp.hpl.jena.sparql.function.Function create(java.lang.String)
    {
        com.hp.hpl.jena.query.QueryBuildException $r5;
        java.lang.Exception $r4;
        com.hp.hpl.jena.sparql.function.Function $r3;
        com.hp.hpl.jena.sparql.function.FunctionFactoryAuto r0;
        java.lang.Class $r1;
        java.lang.Object $r2;
        java.lang.StringBuilder $r6, $r7, $r9;
        java.lang.String r8, $r10;

        r0 := @this: com.hp.hpl.jena.sparql.function.FunctionFactoryAuto;

        r8 := @parameter0: java.lang.String;

     label1:
        $r1 = r0.<com.hp.hpl.jena.sparql.function.FunctionFactoryAuto: java.lang.Class extClass>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

        $r3 = (com.hp.hpl.jena.sparql.function.Function) $r2;

     label2:
        return $r3;

     label3:
        $r4 := @caughtexception;

        $r5 = new com.hp.hpl.jena.query.QueryBuildException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can\'t instantiate function for ");

        $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r8);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<com.hp.hpl.jena.query.QueryBuildException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r4);

        throw $r5;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
