public class org.apache.log4j.net.SyslogAppender extends org.apache.log4j.AppenderSkeleton
{
    public static final int LOG_KERN;
    public static final int LOG_USER;
    public static final int LOG_MAIL;
    public static final int LOG_DAEMON;
    public static final int LOG_AUTH;
    public static final int LOG_SYSLOG;
    public static final int LOG_LPR;
    public static final int LOG_NEWS;
    public static final int LOG_UUCP;
    public static final int LOG_CRON;
    public static final int LOG_AUTHPRIV;
    public static final int LOG_FTP;
    public static final int LOG_LOCAL0;
    public static final int LOG_LOCAL1;
    public static final int LOG_LOCAL2;
    public static final int LOG_LOCAL3;
    public static final int LOG_LOCAL4;
    public static final int LOG_LOCAL5;
    public static final int LOG_LOCAL6;
    public static final int LOG_LOCAL7;
    protected static final int SYSLOG_HOST_OI;
    protected static final int FACILITY_OI;
    static final java.lang.String TAB;
    int syslogFacility;
    java.lang.String facilityStr;
    boolean facilityPrinting;
    org.apache.log4j.helpers.SyslogQuietWriter sqw;
    java.lang.String syslogHost;
    private boolean header;
    private final java.text.SimpleDateFormat dateFormat;
    private java.lang.String localHostname;
    private boolean layoutHeaderChecked;

    public void <init>()
    {
        org.apache.log4j.net.SyslogAppender r0;
        java.text.SimpleDateFormat $r1;
        java.util.Locale $r2;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility> = 8;

        r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting> = 0;

        r0.<org.apache.log4j.net.SyslogAppender: boolean header> = 0;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MMM dd HH:mm:ss ", $r2);

        r0.<org.apache.log4j.net.SyslogAppender: java.text.SimpleDateFormat dateFormat> = $r1;

        r0.<org.apache.log4j.net.SyslogAppender: boolean layoutHeaderChecked> = 0;

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void initSyslogFacilityStr()>();

        return;
    }

    public void <init>(org.apache.log4j.Layout, int)
    {
        org.apache.log4j.net.SyslogAppender r0;
        java.util.Locale $r2;
        int i0;
        java.text.SimpleDateFormat $r1;
        org.apache.log4j.Layout r3;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        r3 := @parameter0: org.apache.log4j.Layout;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.log4j.AppenderSkeleton: void <init>()>();

        r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility> = 8;

        r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting> = 0;

        r0.<org.apache.log4j.net.SyslogAppender: boolean header> = 0;

        $r1 = new java.text.SimpleDateFormat;

        $r2 = <java.util.Locale: java.util.Locale ENGLISH>;

        specialinvoke $r1.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>("MMM dd HH:mm:ss ", $r2);

        r0.<org.apache.log4j.net.SyslogAppender: java.text.SimpleDateFormat dateFormat> = $r1;

        r0.<org.apache.log4j.net.SyslogAppender: boolean layoutHeaderChecked> = 0;

        r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout> = r3;

        r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility> = i0;

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void initSyslogFacilityStr()>();

        return;
    }

    public void <init>(org.apache.log4j.Layout, java.lang.String, int)
    {
        org.apache.log4j.net.SyslogAppender r0;
        int i0;
        org.apache.log4j.Layout r1;
        java.lang.String r2;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        r1 := @parameter0: org.apache.log4j.Layout;

        r2 := @parameter1: java.lang.String;

        i0 := @parameter2: int;

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void <init>(org.apache.log4j.Layout,int)>(r1, i0);

        virtualinvoke r0.<org.apache.log4j.net.SyslogAppender: void setSyslogHost(java.lang.String)>(r2);

        return;
    }

    public synchronized void close()
    {
        org.apache.log4j.net.SyslogAppender r0;
        java.io.IOException $r7;
        java.io.InterruptedIOException $r8;
        java.lang.Thread $r9;
        org.apache.log4j.helpers.SyslogQuietWriter $r1, $r10;
        org.apache.log4j.Layout $r2, $r3, $r5;
        java.lang.String $r4, $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        r0.<org.apache.log4j.AppenderSkeleton: boolean closed> = 1;

        $r1 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        if $r1 == null goto label6;

     label1:
        $z0 = r0.<org.apache.log4j.net.SyslogAppender: boolean layoutHeaderChecked>;

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        if $r2 == null goto label2;

        $r3 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r4 = virtualinvoke $r3.<org.apache.log4j.Layout: java.lang.String getFooter()>();

        if $r4 == null goto label2;

        $r5 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r6 = virtualinvoke $r5.<org.apache.log4j.Layout: java.lang.String getFooter()>();

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void sendLayoutMessage(java.lang.String)>($r6);

     label2:
        $r10 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        virtualinvoke $r10.<java.io.FilterWriter: void close()>();

        r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw> = null;

     label3:
        goto label6;

     label4:
        $r8 := @caughtexception;

        $r9 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r9.<java.lang.Thread: void interrupt()>();

        r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw> = null;

        goto label6;

     label5:
        $r7 := @caughtexception;

        r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw> = null;

     label6:
        return;

        catch java.io.InterruptedIOException from label1 to label3 with label4;
        catch java.io.IOException from label1 to label3 with label5;
    }

    private void initSyslogFacilityStr()
    {
        java.lang.StringBuffer $r3, $r5, $r6, $r8, $r10, $r11, $r12;
        int $i0, $i1;
        java.lang.String $r1, $r2, $r4, $r7, $r13;
        java.io.PrintStream $r9;
        org.apache.log4j.net.SyslogAppender r0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $i0 = r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility>;

        $r1 = staticinvoke <org.apache.log4j.net.SyslogAppender: java.lang.String getFacilityString(int)>($i0);

        r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr> = $r1;

        $r2 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr>;

        if $r2 != null goto label1;

        $r9 = <java.lang.System: java.io.PrintStream err>;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $i1 = r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" is an unknown syslog facility. Defaulting to \"USER\".");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r13);

        r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility> = 8;

        r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr> = "user:";

        goto label2;

     label1:
        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>()>();

        $r4 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr>;

        $r5 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(":");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr> = $r7;

     label2:
        return;
    }

    public static java.lang.String getFacilityString(int)
    {
        int i0;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label01;
            case 8: goto label02;
            case 16: goto label03;
            case 24: goto label04;
            case 32: goto label05;
            case 40: goto label06;
            case 48: goto label07;
            case 56: goto label08;
            case 64: goto label09;
            case 72: goto label10;
            case 80: goto label11;
            case 88: goto label12;
            case 128: goto label13;
            case 136: goto label14;
            case 144: goto label15;
            case 152: goto label16;
            case 160: goto label17;
            case 168: goto label18;
            case 176: goto label19;
            case 184: goto label20;
            default: goto label21;
        };

     label01:
        return "kern";

     label02:
        return "user";

     label03:
        return "mail";

     label04:
        return "daemon";

     label05:
        return "auth";

     label06:
        return "syslog";

     label07:
        return "lpr";

     label08:
        return "news";

     label09:
        return "uucp";

     label10:
        return "cron";

     label11:
        return "authpriv";

     label12:
        return "ftp";

     label13:
        return "local0";

     label14:
        return "local1";

     label15:
        return "local2";

     label16:
        return "local3";

     label17:
        return "local4";

     label18:
        return "local5";

     label19:
        return "local6";

     label20:
        return "local7";

     label21:
        return null;
    }

    public static int getFacility(java.lang.String)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, $z16, $z17, $z18, $z19;
        int $i1;
        java.lang.String $r0, $r1, $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, r20;

        r20 := @parameter0: java.lang.String;

        if r20 == null goto label01;

        r20 = virtualinvoke r20.<java.lang.String: java.lang.String trim()>();

     label01:
        $r0 = "KERN";

        $z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z0 == 0 goto label02;

        return 0;

     label02:
        $r1 = "USER";

        $z1 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z1 == 0 goto label03;

        return 8;

     label03:
        $r2 = "MAIL";

        $z2 = virtualinvoke $r2.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z2 == 0 goto label04;

        return 16;

     label04:
        $r3 = "DAEMON";

        $z3 = virtualinvoke $r3.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z3 == 0 goto label05;

        return 24;

     label05:
        $r4 = "AUTH";

        $z4 = virtualinvoke $r4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z4 == 0 goto label06;

        return 32;

     label06:
        $r5 = "SYSLOG";

        $z5 = virtualinvoke $r5.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z5 == 0 goto label07;

        return 40;

     label07:
        $r6 = "LPR";

        $z6 = virtualinvoke $r6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z6 == 0 goto label08;

        return 48;

     label08:
        $r7 = "NEWS";

        $z7 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z7 == 0 goto label09;

        return 56;

     label09:
        $r8 = "UUCP";

        $z8 = virtualinvoke $r8.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z8 == 0 goto label10;

        return 64;

     label10:
        $r9 = "CRON";

        $z9 = virtualinvoke $r9.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z9 == 0 goto label11;

        return 72;

     label11:
        $r10 = "AUTHPRIV";

        $z10 = virtualinvoke $r10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z10 == 0 goto label12;

        return 80;

     label12:
        $r11 = "FTP";

        $z11 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z11 == 0 goto label13;

        return 88;

     label13:
        $r12 = "LOCAL0";

        $z12 = virtualinvoke $r12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z12 == 0 goto label14;

        return 128;

     label14:
        $r13 = "LOCAL1";

        $z13 = virtualinvoke $r13.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z13 == 0 goto label15;

        return 136;

     label15:
        $r14 = "LOCAL2";

        $z14 = virtualinvoke $r14.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z14 == 0 goto label16;

        return 144;

     label16:
        $r15 = "LOCAL3";

        $z15 = virtualinvoke $r15.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z15 == 0 goto label17;

        return 152;

     label17:
        $r16 = "LOCAL4";

        $z16 = virtualinvoke $r16.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z16 == 0 goto label18;

        return 160;

     label18:
        $r17 = "LOCAL5";

        $z17 = virtualinvoke $r17.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z17 == 0 goto label19;

        return 168;

     label19:
        $r18 = "LOCAL6";

        $z18 = virtualinvoke $r18.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z18 == 0 goto label20;

        return 176;

     label20:
        $r19 = "LOCAL7";

        $z19 = virtualinvoke $r19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r20);

        if $z19 == 0 goto label21;

        return 184;

     label21:
        $i1 = (int) -1;

        return $i1;
    }

    private void splitPacket(java.lang.String, java.lang.String)
    {
        byte[] $r1;
        java.lang.StringBuffer $r4, $r6, $r7, $r9, $r10, $r11, $r13;
        int i0, $i1, $i2, $i3, $i4, $i5, i6;
        org.apache.log4j.helpers.SyslogQuietWriter $r15;
        java.lang.String r0, r2, $r5, $r8, $r12, $r14;
        org.apache.log4j.net.SyslogAppender r3;

        r3 := @this: org.apache.log4j.net.SyslogAppender;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes()>();

        i0 = lengthof $r1;

        if i0 > 1019 goto label1;

        $r15 = r3.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        virtualinvoke $r15.<org.apache.log4j.helpers.SyslogQuietWriter: void write(java.lang.String)>(r0);

        goto label2;

     label1:
        $i1 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = virtualinvoke r0.<java.lang.String: int length()>();

        $i3 = virtualinvoke r2.<java.lang.String: int length()>();

        $i4 = $i2 - $i3;

        $i5 = $i4 / 2;

        i6 = $i1 + $i5;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i6);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r3.<org.apache.log4j.net.SyslogAppender: void splitPacket(java.lang.String,java.lang.String)>(r2, $r8);

        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("...");

        $r12 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i6);

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke r3.<org.apache.log4j.net.SyslogAppender: void splitPacket(java.lang.String,java.lang.String)>(r2, $r14);

     label2:
        return;
    }

    public void append(org.apache.log4j.spi.LoggingEvent)
    {
        org.apache.log4j.Level $r2, $r43;
        org.apache.log4j.helpers.SyslogQuietWriter $r3, $r6, $r11, $r17, $r42;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.log4j.net.SyslogAppender r0;
        org.apache.log4j.Layout $r4, $r7, $r24, $r27, $r28, $r30, $r40;
        java.lang.String[] $r8;
        long $l2;
        java.lang.StringBuffer $r5, $r10, $r12, $r14, $r16, $r18, $r19, $r22, $r32, $r34, $r36, $r37;
        int $i0, $i1, $i3, $i4, i5;
        java.lang.String $r9, $r13, $r15, $r20, $r21, $r23, $r25, $r29, $r31, $r35, $r38, $r39, r41;
        org.apache.log4j.spi.LoggingEvent r1;
        org.apache.log4j.spi.ErrorHandler $r33;
        java.lang.Object $r26;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        r1 := @parameter0: org.apache.log4j.spi.LoggingEvent;

        $r2 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $z0 = virtualinvoke r0.<org.apache.log4j.AppenderSkeleton: boolean isAsSevereAsThreshold(org.apache.log4j.Priority)>($r2);

        if $z0 != 0 goto label01;

        return;

     label01:
        $r3 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        if $r3 != null goto label02;

        $r33 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("No syslog host is set for SyslogAppedender named \"");

        $r35 = r0.<org.apache.log4j.AppenderSkeleton: java.lang.String name>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\".");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        interfaceinvoke $r33.<org.apache.log4j.spi.ErrorHandler: void error(java.lang.String)>($r38);

        return;

     label02:
        $z1 = r0.<org.apache.log4j.net.SyslogAppender: boolean layoutHeaderChecked>;

        if $z1 != 0 goto label04;

        $r27 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        if $r27 == null goto label03;

        $r28 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r29 = virtualinvoke $r28.<org.apache.log4j.Layout: java.lang.String getHeader()>();

        if $r29 == null goto label03;

        $r30 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r31 = virtualinvoke $r30.<org.apache.log4j.Layout: java.lang.String getHeader()>();

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void sendLayoutMessage(java.lang.String)>($r31);

     label03:
        r0.<org.apache.log4j.net.SyslogAppender: boolean layoutHeaderChecked> = 1;

     label04:
        $l2 = r1.<org.apache.log4j.spi.LoggingEvent: long timeStamp>;

        $r39 = specialinvoke r0.<org.apache.log4j.net.SyslogAppender: java.lang.String getPacketHeader(long)>($l2);

        $r40 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        if $r40 != null goto label05;

        $r26 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.Object getMessage()>();

        r41 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r26);

        goto label06;

     label05:
        $r4 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        r41 = virtualinvoke $r4.<org.apache.log4j.Layout: java.lang.String format(org.apache.log4j.spi.LoggingEvent)>(r1);

     label06:
        $z2 = r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting>;

        if $z2 != 0 goto label07;

        $i1 = virtualinvoke $r39.<java.lang.String: int length()>();

        if $i1 <= 0 goto label09;

     label07:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r39);

        $z3 = r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting>;

        if $z3 == 0 goto label08;

        $r25 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r25);

     label08:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r41);

        r41 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $r42 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        $r43 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: org.apache.log4j.Level getLevel()>();

        $i3 = virtualinvoke $r43.<org.apache.log4j.Priority: int getSyslogEquivalent()>();

        virtualinvoke $r42.<org.apache.log4j.helpers.SyslogQuietWriter: void setLevel(int)>($i3);

        $i4 = virtualinvoke r41.<java.lang.String: int length()>();

        if $i4 <= 256 goto label10;

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void splitPacket(java.lang.String,java.lang.String)>($r39, r41);

        goto label11;

     label10:
        $r6 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        virtualinvoke $r6.<org.apache.log4j.helpers.SyslogQuietWriter: void write(java.lang.String)>(r41);

     label11:
        $r7 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        if $r7 == null goto label12;

        $r24 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $z5 = virtualinvoke $r24.<org.apache.log4j.Layout: boolean ignoresThrowable()>();

        if $z5 == 0 goto label16;

     label12:
        $r8 = virtualinvoke r1.<org.apache.log4j.spi.LoggingEvent: java.lang.String[] getThrowableStrRep()>();

        if $r8 == null goto label16;

        i5 = 0;

     label13:
        $i0 = lengthof $r8;

        if i5 >= $i0 goto label16;

        $r9 = $r8[i5];

        $z4 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>("\t");

        if $z4 == 0 goto label14;

        $r17 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("    ");

        $r20 = $r8[i5];

        $r21 = virtualinvoke $r20.<java.lang.String: java.lang.String substring(int)>(1);

        $r22 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r17.<org.apache.log4j.helpers.SyslogQuietWriter: void write(java.lang.String)>($r23);

        goto label15;

     label14:
        $r11 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r39);

        $r13 = $r8[i5];

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r11.<org.apache.log4j.helpers.SyslogQuietWriter: void write(java.lang.String)>($r15);

     label15:
        i5 = i5 + 1;

        goto label13;

     label16:
        return;
    }

    public void activateOptions()
    {
        org.apache.log4j.net.SyslogAppender r0;
        org.apache.log4j.Layout $r1, $r2, $r4;
        java.lang.String $r3, $r5;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $z0 = r0.<org.apache.log4j.net.SyslogAppender: boolean header>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: java.lang.String getLocalHostname()>();

     label1:
        $r1 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        if $r1 == null goto label2;

        $r2 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r3 = virtualinvoke $r2.<org.apache.log4j.Layout: java.lang.String getHeader()>();

        if $r3 == null goto label2;

        $r4 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.Layout layout>;

        $r5 = virtualinvoke $r4.<org.apache.log4j.Layout: java.lang.String getHeader()>();

        specialinvoke r0.<org.apache.log4j.net.SyslogAppender: void sendLayoutMessage(java.lang.String)>($r5);

     label2:
        r0.<org.apache.log4j.net.SyslogAppender: boolean layoutHeaderChecked> = 1;

        return;
    }

    public boolean requiresLayout()
    {
        org.apache.log4j.net.SyslogAppender r0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        return 1;
    }

    public void setSyslogHost(java.lang.String)
    {
        org.apache.log4j.net.SyslogAppender r0;
        org.apache.log4j.helpers.SyslogWriter $r2;
        org.apache.log4j.helpers.SyslogQuietWriter $r1;
        int $i0;
        org.apache.log4j.spi.ErrorHandler $r4;
        java.lang.String r3;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        r3 := @parameter0: java.lang.String;

        $r1 = new org.apache.log4j.helpers.SyslogQuietWriter;

        $r2 = new org.apache.log4j.helpers.SyslogWriter;

        specialinvoke $r2.<org.apache.log4j.helpers.SyslogWriter: void <init>(java.lang.String)>(r3);

        $i0 = r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility>;

        $r4 = r0.<org.apache.log4j.AppenderSkeleton: org.apache.log4j.spi.ErrorHandler errorHandler>;

        specialinvoke $r1.<org.apache.log4j.helpers.SyslogQuietWriter: void <init>(java.io.Writer,int,org.apache.log4j.spi.ErrorHandler)>($r2, $i0, $r4);

        r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw> = $r1;

        r0.<org.apache.log4j.net.SyslogAppender: java.lang.String syslogHost> = r3;

        return;
    }

    public java.lang.String getSyslogHost()
    {
        org.apache.log4j.net.SyslogAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $r1 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String syslogHost>;

        return $r1;
    }

    public void setFacility(java.lang.String)
    {
        java.io.PrintStream $r5;
        org.apache.log4j.net.SyslogAppender r1;
        java.lang.StringBuffer $r6, $r7, $r8, $r10;
        int $i0, $i1, $i2, $i4;
        org.apache.log4j.helpers.SyslogQuietWriter $r2, $r3;
        java.lang.String r0, $r9;

        r1 := @this: org.apache.log4j.net.SyslogAppender;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return;

     label1:
        $i0 = staticinvoke <org.apache.log4j.net.SyslogAppender: int getFacility(java.lang.String)>(r0);

        r1.<org.apache.log4j.net.SyslogAppender: int syslogFacility> = $i0;

        $i1 = r1.<org.apache.log4j.net.SyslogAppender: int syslogFacility>;

        $i4 = (int) -1;

        if $i1 != $i4 goto label2;

        $r5 = <java.lang.System: java.io.PrintStream err>;

        $r10 = new java.lang.StringBuffer;

        specialinvoke $r10.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("[");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("] is an unknown syslog facility. Defaulting to [USER].");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r9);

        r1.<org.apache.log4j.net.SyslogAppender: int syslogFacility> = 8;

     label2:
        specialinvoke r1.<org.apache.log4j.net.SyslogAppender: void initSyslogFacilityStr()>();

        $r2 = r1.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        if $r2 == null goto label3;

        $r3 = r1.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        $i2 = r1.<org.apache.log4j.net.SyslogAppender: int syslogFacility>;

        virtualinvoke $r3.<org.apache.log4j.helpers.SyslogQuietWriter: void setSyslogFacility(int)>($i2);

     label3:
        return;
    }

    public java.lang.String getFacility()
    {
        int $i0;
        org.apache.log4j.net.SyslogAppender r0;
        java.lang.String $r1;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $i0 = r0.<org.apache.log4j.net.SyslogAppender: int syslogFacility>;

        $r1 = staticinvoke <org.apache.log4j.net.SyslogAppender: java.lang.String getFacilityString(int)>($i0);

        return $r1;
    }

    public void setFacilityPrinting(boolean)
    {
        org.apache.log4j.net.SyslogAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting> = z0;

        return;
    }

    public boolean getFacilityPrinting()
    {
        org.apache.log4j.net.SyslogAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $z0 = r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting>;

        return $z0;
    }

    public final boolean getHeader()
    {
        org.apache.log4j.net.SyslogAppender r0;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $z0 = r0.<org.apache.log4j.net.SyslogAppender: boolean header>;

        return $z0;
    }

    public final void setHeader(boolean)
    {
        org.apache.log4j.net.SyslogAppender r0;
        boolean z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        z0 := @parameter0: boolean;

        r0.<org.apache.log4j.net.SyslogAppender: boolean header> = z0;

        return;
    }

    private java.lang.String getLocalHostname()
    {
        java.net.InetAddress $r2;
        org.apache.log4j.net.SyslogAppender r0;
        java.lang.String $r1, $r3, $r5;
        java.net.UnknownHostException $r4;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        $r1 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String localHostname>;

        if $r1 != null goto label4;

     label1:
        $r2 = staticinvoke <java.net.InetAddress: java.net.InetAddress getLocalHost()>();

        $r3 = virtualinvoke $r2.<java.net.InetAddress: java.lang.String getHostName()>();

        r0.<org.apache.log4j.net.SyslogAppender: java.lang.String localHostname> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        r0.<org.apache.log4j.net.SyslogAppender: java.lang.String localHostname> = "UNKNOWN_HOST";

     label4:
        $r5 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String localHostname>;

        return $r5;

        catch java.net.UnknownHostException from label1 to label2 with label3;
    }

    private java.lang.String getPacketHeader(long)
    {
        org.apache.log4j.net.SyslogAppender r0;
        java.util.Date $r7;
        java.text.SimpleDateFormat $r3;
        long l0;
        char $c1;
        java.lang.StringBuffer $r8;
        int $i2;
        java.lang.String $r4, $r5, $r6;
        boolean $z0;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        l0 := @parameter0: long;

        $z0 = r0.<org.apache.log4j.net.SyslogAppender: boolean header>;

        if $z0 == 0 goto label2;

        $r8 = new java.lang.StringBuffer;

        $r3 = r0.<org.apache.log4j.net.SyslogAppender: java.text.SimpleDateFormat dateFormat>;

        $r7 = new java.util.Date;

        specialinvoke $r7.<java.util.Date: void <init>(long)>(l0);

        $r4 = virtualinvoke $r3.<java.text.DateFormat: java.lang.String format(java.util.Date)>($r7);

        specialinvoke $r8.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        $c1 = virtualinvoke $r8.<java.lang.StringBuffer: char charAt(int)>(4);

        $i2 = (int) $c1;

        if $i2 != 48 goto label1;

        virtualinvoke $r8.<java.lang.StringBuffer: void setCharAt(int,char)>(4, 32);

     label1:
        $r5 = specialinvoke r0.<org.apache.log4j.net.SyslogAppender: java.lang.String getLocalHostname()>();

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        $r6 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r6;

     label2:
        return "";
    }

    private void sendLayoutMessage(java.lang.String)
    {
        org.apache.log4j.net.SyslogAppender r0;
        java.util.Date $r3;
        long $l0;
        java.lang.StringBuffer $r5;
        org.apache.log4j.helpers.SyslogQuietWriter $r1, $r8, $r9;
        int $i1;
        java.lang.String r2, $r4, $r6, r7;
        boolean $z0, $z1;

        r0 := @this: org.apache.log4j.net.SyslogAppender;

        r2 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        if $r1 == null goto label4;

        r7 = r2;

        $r3 = new java.util.Date;

        specialinvoke $r3.<java.util.Date: void <init>()>();

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        $r4 = specialinvoke r0.<org.apache.log4j.net.SyslogAppender: java.lang.String getPacketHeader(long)>($l0);

        $z0 = r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting>;

        if $z0 != 0 goto label1;

        $i1 = virtualinvoke $r4.<java.lang.String: int length()>();

        if $i1 <= 0 goto label3;

     label1:
        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4);

        $z1 = r0.<org.apache.log4j.net.SyslogAppender: boolean facilityPrinting>;

        if $z1 == 0 goto label2;

        $r6 = r0.<org.apache.log4j.net.SyslogAppender: java.lang.String facilityStr>;

        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6);

     label2:
        virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>();

     label3:
        $r8 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        virtualinvoke $r8.<org.apache.log4j.helpers.SyslogQuietWriter: void setLevel(int)>(6);

        $r9 = r0.<org.apache.log4j.net.SyslogAppender: org.apache.log4j.helpers.SyslogQuietWriter sqw>;

        virtualinvoke $r9.<org.apache.log4j.helpers.SyslogQuietWriter: void write(java.lang.String)>(r7);

     label4:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.log4j.net.SyslogAppender: java.lang.String TAB> = "    ";

        <org.apache.log4j.net.SyslogAppender: int FACILITY_OI> = 1;

        <org.apache.log4j.net.SyslogAppender: int SYSLOG_HOST_OI> = 0;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL7> = 184;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL6> = 176;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL5> = 168;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL4> = 160;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL3> = 152;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL2> = 144;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL1> = 136;

        <org.apache.log4j.net.SyslogAppender: int LOG_LOCAL0> = 128;

        <org.apache.log4j.net.SyslogAppender: int LOG_FTP> = 88;

        <org.apache.log4j.net.SyslogAppender: int LOG_AUTHPRIV> = 80;

        <org.apache.log4j.net.SyslogAppender: int LOG_CRON> = 72;

        <org.apache.log4j.net.SyslogAppender: int LOG_UUCP> = 64;

        <org.apache.log4j.net.SyslogAppender: int LOG_NEWS> = 56;

        <org.apache.log4j.net.SyslogAppender: int LOG_LPR> = 48;

        <org.apache.log4j.net.SyslogAppender: int LOG_SYSLOG> = 40;

        <org.apache.log4j.net.SyslogAppender: int LOG_AUTH> = 32;

        <org.apache.log4j.net.SyslogAppender: int LOG_DAEMON> = 24;

        <org.apache.log4j.net.SyslogAppender: int LOG_MAIL> = 16;

        <org.apache.log4j.net.SyslogAppender: int LOG_USER> = 8;

        <org.apache.log4j.net.SyslogAppender: int LOG_KERN> = 0;

        return;
    }
}
