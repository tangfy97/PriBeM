public class org.apache.batik.svggen.SVGPaint extends java.lang.Object implements org.apache.batik.svggen.SVGConverter
{
    private org.apache.batik.svggen.SVGLinearGradient svgLinearGradient;
    private org.apache.batik.svggen.SVGTexturePaint svgTexturePaint;
    private org.apache.batik.svggen.SVGColor svgColor;
    private org.apache.batik.svggen.SVGCustomPaint svgCustomPaint;
    private org.apache.batik.svggen.SVGGeneratorContext generatorContext;

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGPaint r0;
        org.apache.batik.svggen.SVGGeneratorContext r2;
        org.apache.batik.svggen.SVGTexturePaint $r3;
        org.apache.batik.svggen.SVGColor $r5;
        org.apache.batik.svggen.SVGCustomPaint $r4;
        org.apache.batik.svggen.SVGLinearGradient $r1;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        r2 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.apache.batik.svggen.SVGLinearGradient;

        specialinvoke $r1.<org.apache.batik.svggen.SVGLinearGradient: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r2);

        r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGLinearGradient svgLinearGradient> = $r1;

        $r3 = new org.apache.batik.svggen.SVGTexturePaint;

        specialinvoke $r3.<org.apache.batik.svggen.SVGTexturePaint: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r2);

        r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGTexturePaint svgTexturePaint> = $r3;

        $r4 = new org.apache.batik.svggen.SVGCustomPaint;

        specialinvoke $r4.<org.apache.batik.svggen.SVGCustomPaint: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r2);

        r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGCustomPaint svgCustomPaint> = $r4;

        $r5 = new org.apache.batik.svggen.SVGColor;

        specialinvoke $r5.<org.apache.batik.svggen.SVGColor: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r2);

        r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGColor svgColor> = $r5;

        r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGGeneratorContext generatorContext> = r2;

        return;
    }

    public java.util.List getDefinitionSet()
    {
        org.apache.batik.svggen.SVGTexturePaint $r4;
        org.apache.batik.svggen.SVGLinearGradient $r2;
        org.apache.batik.svggen.SVGPaint r1;
        java.util.List $r3, $r5, $r7, $r9;
        org.apache.batik.svggen.SVGColor $r8;
        org.apache.batik.svggen.SVGCustomPaint $r6;
        java.util.LinkedList $r0;

        r1 := @this: org.apache.batik.svggen.SVGPaint;

        $r0 = new java.util.LinkedList;

        $r2 = r1.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGLinearGradient svgLinearGradient>;

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List getDefinitionSet()>();

        specialinvoke $r0.<java.util.LinkedList: void <init>(java.util.Collection)>($r3);

        $r4 = r1.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGTexturePaint svgTexturePaint>;

        $r5 = virtualinvoke $r4.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List getDefinitionSet()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r5);

        $r6 = r1.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGCustomPaint svgCustomPaint>;

        $r7 = virtualinvoke $r6.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List getDefinitionSet()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r7);

        $r8 = r1.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGColor svgColor>;

        $r9 = virtualinvoke $r8.<org.apache.batik.svggen.AbstractSVGConverter: java.util.List getDefinitionSet()>();

        interfaceinvoke $r0.<java.util.List: boolean addAll(java.util.Collection)>($r9);

        return $r0;
    }

    public org.apache.batik.svggen.SVGTexturePaint getTexturePaintConverter()
    {
        org.apache.batik.svggen.SVGPaint r0;
        org.apache.batik.svggen.SVGTexturePaint $r1;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        $r1 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGTexturePaint svgTexturePaint>;

        return $r1;
    }

    public org.apache.batik.svggen.SVGLinearGradient getGradientPaintConverter()
    {
        org.apache.batik.svggen.SVGPaint r0;
        org.apache.batik.svggen.SVGLinearGradient $r1;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        $r1 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGLinearGradient svgLinearGradient>;

        return $r1;
    }

    public org.apache.batik.svggen.SVGCustomPaint getCustomPaintConverter()
    {
        org.apache.batik.svggen.SVGCustomPaint $r1;
        org.apache.batik.svggen.SVGPaint r0;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        $r1 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGCustomPaint svgCustomPaint>;

        return $r1;
    }

    public org.apache.batik.svggen.SVGColor getColorConverter()
    {
        org.apache.batik.svggen.SVGColor $r1;
        org.apache.batik.svggen.SVGPaint r0;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        $r1 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGColor svgColor>;

        return $r1;
    }

    public org.apache.batik.svggen.SVGDescriptor toSVG(org.apache.batik.ext.awt.g2d.GraphicContext)
    {
        org.apache.batik.svggen.SVGPaint r0;
        org.apache.batik.svggen.SVGPaintDescriptor $r3;
        java.awt.Paint $r2;
        org.apache.batik.ext.awt.g2d.GraphicContext r1;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        r1 := @parameter0: org.apache.batik.ext.awt.g2d.GraphicContext;

        $r2 = virtualinvoke r1.<org.apache.batik.ext.awt.g2d.GraphicContext: java.awt.Paint getPaint()>();

        $r3 = virtualinvoke r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Paint)>($r2);

        return $r3;
    }

    public org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Paint)
    {
        java.awt.Color $r9;
        java.awt.TexturePaint $r4;
        org.apache.batik.svggen.SVGTexturePaint $r5;
        org.apache.batik.svggen.SVGLinearGradient $r7;
        org.apache.batik.svggen.SVGPaint r0;
        org.apache.batik.svggen.SVGPaintDescriptor $r3, r10;
        java.awt.Paint r1;
        org.apache.batik.svggen.SVGGeneratorContext $r8;
        org.apache.batik.svggen.SVGCustomPaint $r2;
        java.awt.GradientPaint $r6;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.batik.svggen.SVGPaint;

        r1 := @parameter0: java.awt.Paint;

        $r2 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGCustomPaint svgCustomPaint>;

        $r3 = virtualinvoke $r2.<org.apache.batik.svggen.SVGCustomPaint: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Paint)>(r1);

        r10 = $r3;

        if $r3 != null goto label3;

        $z0 = r1 instanceof java.awt.Color;

        if $z0 == 0 goto label1;

        $r9 = (java.awt.Color) r1;

        $r8 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        r10 = staticinvoke <org.apache.batik.svggen.SVGColor: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.Color,org.apache.batik.svggen.SVGGeneratorContext)>($r9, $r8);

        goto label3;

     label1:
        $z1 = r1 instanceof java.awt.GradientPaint;

        if $z1 == 0 goto label2;

        $r7 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGLinearGradient svgLinearGradient>;

        $r6 = (java.awt.GradientPaint) r1;

        r10 = virtualinvoke $r7.<org.apache.batik.svggen.SVGLinearGradient: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.GradientPaint)>($r6);

        goto label3;

     label2:
        $z2 = r1 instanceof java.awt.TexturePaint;

        if $z2 == 0 goto label3;

        $r5 = r0.<org.apache.batik.svggen.SVGPaint: org.apache.batik.svggen.SVGTexturePaint svgTexturePaint>;

        $r4 = (java.awt.TexturePaint) r1;

        r10 = virtualinvoke $r5.<org.apache.batik.svggen.SVGTexturePaint: org.apache.batik.svggen.SVGPaintDescriptor toSVG(java.awt.TexturePaint)>($r4);

     label3:
        return r10;
    }
}
