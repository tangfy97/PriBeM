class org.apache.lucene.spatial.vector.DistanceValueSource$1 extends org.apache.lucene.queries.function.FunctionValues
{
    private final com.spatial4j.core.shape.Point 'from';
    private final com.spatial4j.core.distance.DistanceCalculator calculator;
    private final double nullValue;
    static final boolean $assertionsDisabled;
    final org.apache.lucene.util.Bits val$validX;
    final org.apache.lucene.util.Bits val$validY;
    final org.apache.lucene.search.FieldCache$Doubles val$ptX;
    final org.apache.lucene.search.FieldCache$Doubles val$ptY;
    final org.apache.lucene.spatial.vector.DistanceValueSource this$0;

    void <init>(org.apache.lucene.spatial.vector.DistanceValueSource, org.apache.lucene.util.Bits, org.apache.lucene.util.Bits, org.apache.lucene.search.FieldCache$Doubles, org.apache.lucene.search.FieldCache$Doubles)
    {
        com.spatial4j.core.distance.DistanceCalculator $r11;
        org.apache.lucene.spatial.vector.DistanceValueSource$1 r0;
        org.apache.lucene.spatial.vector.PointVectorStrategy $r9, $r13;
        org.apache.lucene.search.FieldCache$Doubles r4, r5;
        com.spatial4j.core.shape.Point $r7;
        org.apache.lucene.util.Bits r2, r3;
        boolean $z0;
        double $d0;
        com.spatial4j.core.context.SpatialContext $r10, $r14;
        org.apache.lucene.spatial.vector.DistanceValueSource r1, $r6, $r8, $r12;

        r0 := @this: org.apache.lucene.spatial.vector.DistanceValueSource$1;

        r1 := @parameter0: org.apache.lucene.spatial.vector.DistanceValueSource;

        r2 := @parameter1: org.apache.lucene.util.Bits;

        r3 := @parameter2: org.apache.lucene.util.Bits;

        r4 := @parameter3: org.apache.lucene.search.FieldCache$Doubles;

        r5 := @parameter4: org.apache.lucene.search.FieldCache$Doubles;

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.spatial.vector.DistanceValueSource this$0> = r1;

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.util.Bits val$validX> = r2;

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.util.Bits val$validY> = r3;

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.search.FieldCache$Doubles val$ptX> = r4;

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.search.FieldCache$Doubles val$ptY> = r5;

        specialinvoke r0.<org.apache.lucene.queries.function.FunctionValues: void <init>()>();

        $r6 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.spatial.vector.DistanceValueSource this$0>;

        $r7 = staticinvoke <org.apache.lucene.spatial.vector.DistanceValueSource: com.spatial4j.core.shape.Point access$000(org.apache.lucene.spatial.vector.DistanceValueSource)>($r6);

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: com.spatial4j.core.shape.Point 'from'> = $r7;

        $r8 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.spatial.vector.DistanceValueSource this$0>;

        $r9 = staticinvoke <org.apache.lucene.spatial.vector.DistanceValueSource: org.apache.lucene.spatial.vector.PointVectorStrategy access$100(org.apache.lucene.spatial.vector.DistanceValueSource)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.lucene.spatial.vector.PointVectorStrategy: com.spatial4j.core.context.SpatialContext getSpatialContext()>();

        $r11 = virtualinvoke $r10.<com.spatial4j.core.context.SpatialContext: com.spatial4j.core.distance.DistanceCalculator getDistCalc()>();

        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: com.spatial4j.core.distance.DistanceCalculator calculator> = $r11;

        $r12 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.spatial.vector.DistanceValueSource this$0>;

        $r13 = staticinvoke <org.apache.lucene.spatial.vector.DistanceValueSource: org.apache.lucene.spatial.vector.PointVectorStrategy access$100(org.apache.lucene.spatial.vector.DistanceValueSource)>($r12);

        $r14 = virtualinvoke $r13.<org.apache.lucene.spatial.vector.PointVectorStrategy: com.spatial4j.core.context.SpatialContext getSpatialContext()>();

        $z0 = virtualinvoke $r14.<com.spatial4j.core.context.SpatialContext: boolean isGeo()>();

        if $z0 == 0 goto label1;

        $d0 = 180.0;

        goto label2;

     label1:
        $d0 = 1.7976931348623157E308;

     label2:
        r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: double nullValue> = $d0;

        return;
    }

    public float floatVal(int)
    {
        int i0;
        float $f0;
        org.apache.lucene.spatial.vector.DistanceValueSource$1 r0;
        double $d0;

        r0 := @this: org.apache.lucene.spatial.vector.DistanceValueSource$1;

        i0 := @parameter0: int;

        $d0 = virtualinvoke r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: double doubleVal(int)>(i0);

        $f0 = (float) $d0;

        return $f0;
    }

    public double doubleVal(int)
    {
        com.spatial4j.core.distance.DistanceCalculator $r3;
        java.lang.AssertionError $r7;
        org.apache.lucene.spatial.vector.DistanceValueSource$1 r0;
        org.apache.lucene.search.FieldCache$Doubles $r2, $r5;
        int i0;
        com.spatial4j.core.shape.Point $r4;
        org.apache.lucene.util.Bits $r1, $r6;
        boolean $z0, $z1, $z2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: org.apache.lucene.spatial.vector.DistanceValueSource$1;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.util.Bits val$validX>;

        $z0 = interfaceinvoke $r1.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        if $z0 == 0 goto label2;

        $z1 = <org.apache.lucene.spatial.vector.DistanceValueSource$1: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        $r6 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.util.Bits val$validY>;

        $z2 = interfaceinvoke $r6.<org.apache.lucene.util.Bits: boolean get(int)>(i0);

        if $z2 != 0 goto label1;

        $r7 = new java.lang.AssertionError;

        specialinvoke $r7.<java.lang.AssertionError: void <init>()>();

        throw $r7;

     label1:
        $r3 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: com.spatial4j.core.distance.DistanceCalculator calculator>;

        $r4 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: com.spatial4j.core.shape.Point 'from'>;

        $r2 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.search.FieldCache$Doubles val$ptX>;

        $d1 = virtualinvoke $r2.<org.apache.lucene.search.FieldCache$Doubles: double get(int)>(i0);

        $r5 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.search.FieldCache$Doubles val$ptY>;

        $d2 = virtualinvoke $r5.<org.apache.lucene.search.FieldCache$Doubles: double get(int)>(i0);

        $d3 = interfaceinvoke $r3.<com.spatial4j.core.distance.DistanceCalculator: double distance(com.spatial4j.core.shape.Point,double,double)>($r4, $d1, $d2);

        return $d3;

     label2:
        $d0 = r0.<org.apache.lucene.spatial.vector.DistanceValueSource$1: double nullValue>;

        return $d0;
    }

    public java.lang.String toString(int)
    {
        org.apache.lucene.spatial.vector.DistanceValueSource$1 r1;
        org.apache.lucene.spatial.vector.DistanceValueSource $r2;
        int i0;
        float $f0;
        java.lang.StringBuilder $r0, $r4, $r5, $r6;
        java.lang.String $r3, $r7;

        r1 := @this: org.apache.lucene.spatial.vector.DistanceValueSource$1;

        i0 := @parameter0: int;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.apache.lucene.spatial.vector.DistanceValueSource$1: org.apache.lucene.spatial.vector.DistanceValueSource this$0>;

        $r3 = virtualinvoke $r2.<org.apache.lucene.spatial.vector.DistanceValueSource: java.lang.String description()>();

        $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $f0 = virtualinvoke r1.<org.apache.lucene.spatial.vector.DistanceValueSource$1: float floatVal(int)>(i0);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/apache/lucene/spatial/vector/DistanceValueSource;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.apache.lucene.spatial.vector.DistanceValueSource$1: boolean $assertionsDisabled> = $z1;

        return;
    }
}
