class org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1 extends java.lang.Object implements org.waveprotocol.wave.client.scheduler.Scheduler$Task
{
    final org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer this$0;

    void <init>(org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer)
    {
        org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer r1;
        org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1 r0;

        r0 := @this: org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer;

        r0.<org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1: org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        org.waveprotocol.wave.client.editor.content.ClientDocumentContext$EditingConcerns $r9;
        org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer $r1, $r4;
        java.util.Iterator $r3;
        java.util.Set $r2, $r5;
        org.waveprotocol.wave.client.editor.content.ClientDocumentContext $r8;
        org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1 r0;
        java.lang.Object $r6;
        org.waveprotocol.wave.client.editor.content.ContentElement r7;
        org.waveprotocol.wave.client.editor.content.misc.AnnotationPaint$MutationHandler $r10;
        boolean $z0, $z1;

        r0 := @this: org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1: org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer: java.util.Set access$000(org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer)>($r1);

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r6 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.waveprotocol.wave.client.editor.content.ContentElement) $r6;

        $r8 = virtualinvoke r7.<org.waveprotocol.wave.client.editor.content.ContentElement: org.waveprotocol.wave.client.editor.content.ClientDocumentContext getContext()>();

        $r9 = interfaceinvoke $r8.<org.waveprotocol.wave.client.editor.content.ClientDocumentContext: org.waveprotocol.wave.client.editor.content.ClientDocumentContext$EditingConcerns editing()>();

        $z0 = interfaceinvoke $r9.<org.waveprotocol.wave.client.editor.content.ClientDocumentContext$EditingConcerns: boolean hasEditor()>();

        if $z0 != 0 goto label2;

        goto label1;

     label2:
        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer: org.waveprotocol.wave.client.editor.content.misc.AnnotationPaint$MutationHandler access$100(org.waveprotocol.wave.client.editor.content.ContentElement)>(r7);

        if $r10 == null goto label3;

        interfaceinvoke $r10.<org.waveprotocol.wave.client.editor.content.misc.AnnotationPaint$MutationHandler: void onMutation(org.waveprotocol.wave.client.editor.content.ContentElement)>(r7);

     label3:
        goto label1;

     label4:
        $r4 = r0.<org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer$1: org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer this$0>;

        $r5 = staticinvoke <org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer: java.util.Set access$000(org.waveprotocol.wave.client.editor.content.misc.AnnotationSpreadRenderer)>($r4);

        interfaceinvoke $r5.<java.util.Set: void clear()>();

        return;
    }
}
