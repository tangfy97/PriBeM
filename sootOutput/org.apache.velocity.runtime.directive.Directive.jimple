public abstract class org.apache.velocity.runtime.directive.Directive extends java.lang.Object implements org.apache.velocity.runtime.directive.DirectiveConstants, java.lang.Cloneable
{
    private int line;
    private int column;
    private boolean provideScope;
    private java.lang.String templateName;
    protected org.apache.velocity.runtime.RuntimeServices rsvc;

    public void <init>()
    {
        org.apache.velocity.runtime.directive.Directive r0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.velocity.runtime.directive.Directive: int line> = 0;

        r0.<org.apache.velocity.runtime.directive.Directive: int column> = 0;

        r0.<org.apache.velocity.runtime.directive.Directive: boolean provideScope> = 0;

        r0.<org.apache.velocity.runtime.directive.Directive: org.apache.velocity.runtime.RuntimeServices rsvc> = null;

        return;
    }

    public abstract java.lang.String getName();

    public abstract int getType();

    public void setLocation(int, int)
    {
        int i0, i1;
        org.apache.velocity.runtime.directive.Directive r0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r0.<org.apache.velocity.runtime.directive.Directive: int line> = i0;

        r0.<org.apache.velocity.runtime.directive.Directive: int column> = i1;

        return;
    }

    public void setLocation(int, int, java.lang.String)
    {
        org.apache.velocity.runtime.directive.Directive r0;
        int i0, i1;
        java.lang.String r1;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        r1 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: void setLocation(int,int)>(i0, i1);

        r0.<org.apache.velocity.runtime.directive.Directive: java.lang.String templateName> = r1;

        return;
    }

    public int getLine()
    {
        int $i0;
        org.apache.velocity.runtime.directive.Directive r0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        $i0 = r0.<org.apache.velocity.runtime.directive.Directive: int line>;

        return $i0;
    }

    public int getColumn()
    {
        int $i0;
        org.apache.velocity.runtime.directive.Directive r0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        $i0 = r0.<org.apache.velocity.runtime.directive.Directive: int column>;

        return $i0;
    }

    public java.lang.String getTemplateName()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.directive.Directive r0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        $r1 = r0.<org.apache.velocity.runtime.directive.Directive: java.lang.String templateName>;

        return $r1;
    }

    public java.lang.String getScopeName()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.directive.Directive r0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: java.lang.String getName()>();

        return $r1;
    }

    public boolean isScopeProvided()
    {
        org.apache.velocity.runtime.directive.Directive r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        $z0 = r0.<org.apache.velocity.runtime.directive.Directive: boolean provideScope>;

        return $z0;
    }

    public void init(org.apache.velocity.runtime.RuntimeServices, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.Node) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.context.InternalContextAdapter r9;
        org.apache.velocity.runtime.RuntimeServices r1, $r8;
        org.apache.velocity.runtime.directive.Directive r0;
        java.lang.StringBuffer $r2, $r4, $r5, $r6;
        java.lang.String $r3, $r7;
        org.apache.velocity.runtime.parser.node.Node r10;
        boolean $z0, $z1;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        r1 := @parameter0: org.apache.velocity.runtime.RuntimeServices;

        r9 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        r10 := @parameter2: org.apache.velocity.runtime.parser.node.Node;

        r0.<org.apache.velocity.runtime.directive.Directive: org.apache.velocity.runtime.RuntimeServices rsvc> = r1;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: java.lang.String getScopeName()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(46);

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("provide.scope.control");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>();

        $r8 = r0.<org.apache.velocity.runtime.directive.Directive: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z0 = r0.<org.apache.velocity.runtime.directive.Directive: boolean provideScope>;

        $z1 = interfaceinvoke $r8.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>($r7, $z0);

        r0.<org.apache.velocity.runtime.directive.Directive: boolean provideScope> = $z1;

        return;
    }

    public abstract boolean render(org.apache.velocity.context.InternalContextAdapter, java.io.Writer, org.apache.velocity.runtime.parser.node.Node) throws java.io.IOException, org.apache.velocity.exception.ResourceNotFoundException, org.apache.velocity.exception.ParseErrorException, org.apache.velocity.exception.MethodInvocationException;

    protected void preRender(org.apache.velocity.context.InternalContextAdapter)
    {
        org.apache.velocity.context.InternalContextAdapter r2;
        org.apache.velocity.runtime.directive.Directive r0;
        java.lang.Object $r3;
        java.lang.String $r1;
        org.apache.velocity.runtime.directive.Scope $r4;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        r2 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: boolean isScopeProvided()>();

        if $z0 == 0 goto label1;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: java.lang.String getScopeName()>();

        $r3 = interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object get(java.lang.String)>($r1);

        $r4 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: org.apache.velocity.runtime.directive.Scope makeScope(java.lang.Object)>($r3);

        interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object put(java.lang.String,java.lang.Object)>($r1, $r4);

     label1:
        return;
    }

    protected org.apache.velocity.runtime.directive.Scope makeScope(java.lang.Object)
    {
        java.lang.Object r2;
        org.apache.velocity.runtime.directive.Scope $r0;
        org.apache.velocity.runtime.directive.Directive r1;

        r1 := @this: org.apache.velocity.runtime.directive.Directive;

        r2 := @parameter0: java.lang.Object;

        $r0 = new org.apache.velocity.runtime.directive.Scope;

        specialinvoke $r0.<org.apache.velocity.runtime.directive.Scope: void <init>(java.lang.Object,java.lang.Object)>(r1, r2);

        return $r0;
    }

    protected void postRender(org.apache.velocity.context.InternalContextAdapter)
    {
        org.apache.velocity.context.InternalContextAdapter r2;
        org.apache.velocity.runtime.directive.Scope $r4, $r7, r9;
        java.lang.ClassCastException $r8;
        org.apache.velocity.runtime.directive.Directive r0;
        java.lang.Object $r3, $r5, $r6;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.directive.Directive;

        r2 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        $z0 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: boolean isScopeProvided()>();

        if $z0 == 0 goto label6;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.directive.Directive: java.lang.String getScopeName()>();

        $r3 = interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object get(java.lang.String)>($r1);

     label1:
        r9 = (org.apache.velocity.runtime.directive.Scope) $r3;

        $r4 = virtualinvoke r9.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getParent()>();

        if $r4 == null goto label2;

        $r7 = virtualinvoke r9.<org.apache.velocity.runtime.directive.Scope: org.apache.velocity.runtime.directive.Scope getParent()>();

        interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object put(java.lang.String,java.lang.Object)>($r1, $r7);

        goto label4;

     label2:
        $r5 = virtualinvoke r9.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        if $r5 == null goto label3;

        $r6 = virtualinvoke r9.<org.apache.velocity.runtime.directive.Scope: java.lang.Object getReplaced()>();

        interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object put(java.lang.String,java.lang.Object)>($r1, $r6);

        goto label4;

     label3:
        interfaceinvoke r2.<org.apache.velocity.context.InternalContextAdapter: java.lang.Object remove(java.lang.Object)>($r1);

     label4:
        goto label6;

     label5:
        $r8 := @caughtexception;

     label6:
        return;

        catch java.lang.ClassCastException from label1 to label4 with label5;
    }
}
