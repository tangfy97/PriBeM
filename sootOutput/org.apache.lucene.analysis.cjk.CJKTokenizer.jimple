public final class org.apache.lucene.analysis.cjk.CJKTokenizer extends org.apache.lucene.analysis.Tokenizer
{
    static final int WORD_TYPE;
    static final int SINGLE_TOKEN_TYPE;
    static final int DOUBLE_TOKEN_TYPE;
    static final java.lang.String[] TOKEN_TYPE_NAMES;
    private static final int MAX_WORD_LEN;
    private static final int IO_BUFFER_SIZE;
    private int offset;
    private int bufferIndex;
    private int dataLen;
    private final char[] buffer;
    private final char[] ioBuffer;
    private int tokenType;
    private boolean preIsTokened;
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt;
    private final org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt;

    public void <init>(java.io.Reader)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r5;
        java.io.Reader r1;
        org.apache.lucene.analysis.cjk.CJKTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r7;
        char[] $r2, $r3;
        org.apache.lucene.util.Attribute $r4, $r6, $r8;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r9;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKTokenizer;

        r1 := @parameter0: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(java.io.Reader)>(r1);

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen> = 0;

        $r2 = newarray (char)[255];

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] buffer> = $r2;

        $r3 = newarray (char)[256];

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] ioBuffer> = $r3;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

        $r4 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r5 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r4;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r5;

        $r6 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r7 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r6;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r7;

        $r8 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TypeAttribute;");

        $r9 = (org.apache.lucene.analysis.tokenattributes.TypeAttribute) $r8;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt> = $r9;

        return;
    }

    public void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory, java.io.Reader)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r6;
        org.apache.lucene.util.AttributeSource$AttributeFactory r1;
        java.io.Reader r2;
        org.apache.lucene.analysis.cjk.CJKTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r8;
        char[] $r3, $r4;
        org.apache.lucene.util.Attribute $r5, $r7, $r9;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r10;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKTokenizer;

        r1 := @parameter0: org.apache.lucene.util.AttributeSource$AttributeFactory;

        r2 := @parameter1: java.io.Reader;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void <init>(org.apache.lucene.util.AttributeSource$AttributeFactory,java.io.Reader)>(r1, r2);

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen> = 0;

        $r3 = newarray (char)[255];

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] buffer> = $r3;

        $r4 = newarray (char)[256];

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] ioBuffer> = $r4;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

        $r5 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r6 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r5;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r6;

        $r7 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/OffsetAttribute;");

        $r8 = (org.apache.lucene.analysis.tokenattributes.OffsetAttribute) $r7;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt> = $r8;

        $r9 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/TypeAttribute;");

        $r10 = (org.apache.lucene.analysis.tokenattributes.TypeAttribute) $r9;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt> = $r10;

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        java.io.Reader $r16;
        org.apache.lucene.analysis.cjk.CJKTokenizer r0;
        java.lang.String $r10;
        char[] $r1, $r5, $r6, $r13, $r14, $r15;
        java.lang.Character$UnicodeBlock $r2, $r3, $r4, $r12;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r8;
        java.lang.String[] $r9;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i32, $i33, $i34, i35, i36, $i37, $i38, $i39, $i40, i42, $i44, $i45, $i47, $i48, $i50, $i51, $i53, $i54, $i55, $i56, $i58;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r7;
        char $c5, c41;
        org.apache.lucene.analysis.tokenattributes.TypeAttribute $r11;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKTokenizer;

        virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: void clearAttributes()>();

     label01:
        i35 = 0;

        i36 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

     label02:
        $i37 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i38 = $i37 + 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i38;

        $i39 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex>;

        $i40 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen>;

        if $i39 < $i40 goto label03;

        $r16 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: java.io.Reader input>;

        $r15 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] ioBuffer>;

        $i34 = virtualinvoke $r16.<java.io.Reader: int read(char[])>($r15);

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen> = $i34;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = 0;

     label03:
        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen>;

        $i44 = (int) -1;

        if $i0 != $i44 goto label06;

        if i35 <= 0 goto label05;

        $z4 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened>;

        if $z4 != 1 goto label04;

        i35 = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

        goto label18;

     label04:
        $i32 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i33 = $i32 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i33;

        goto label18;

     label05:
        $i30 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i31 = $i30 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i31;

        return 0;

     label06:
        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] ioBuffer>;

        $i1 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex>;

        $i2 = $i1 + 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = $i2;

        c41 = $r1[$i1];

        $r2 = staticinvoke <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock of(char)>(c41);

        $r3 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock BASIC_LATIN>;

        if $r2 == $r3 goto label07;

        $r12 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS>;

        if $r2 != $r12 goto label13;

     label07:
        $r4 = <java.lang.Character$UnicodeBlock: java.lang.Character$UnicodeBlock HALFWIDTH_AND_FULLWIDTH_FORMS>;

        if $r2 != $r4 goto label08;

        $i45 = (int) c41;

        $i47 = (int) 65281;

        if $i45 < $i47 goto label08;

        $i48 = (int) c41;

        $i50 = (int) 65374;

        if $i48 > $i50 goto label08;

        $i51 = (int) c41;

        $i53 = (int) 65248;

        i42 = $i51 - $i53;

        c41 = (char) i42;

     label08:
        $z5 = staticinvoke <java.lang.Character: boolean isLetterOrDigit(char)>(c41);

        if $z5 != 0 goto label09;

        $i54 = (int) c41;

        if $i54 == 95 goto label09;

        $i55 = (int) c41;

        if $i55 == 43 goto label09;

        $i56 = (int) c41;

        if $i56 != 35 goto label12;

     label09:
        if i35 != 0 goto label10;

        $i17 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        i36 = $i17 - 1;

        goto label11;

     label10:
        $i3 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType>;

        if $i3 != 2 goto label11;

        $i13 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i14 = $i13 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i14;

        $i15 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex>;

        $i16 = $i15 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = $i16;

        $z0 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened>;

        if $z0 != 1 goto label18;

        i35 = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

        goto label18;

     label11:
        $r5 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] buffer>;

        $i4 = i35;

        i35 = i35 + 1;

        $c5 = staticinvoke <java.lang.Character: char toLowerCase(char)>(c41);

        $r5[$i4] = $c5;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType> = 1;

        if i35 != 255 goto label17;

        goto label18;

     label12:
        if i35 <= 0 goto label17;

        $z1 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened>;

        if $z1 != 1 goto label18;

        i35 = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

        goto label17;

     label13:
        $z2 = staticinvoke <java.lang.Character: boolean isLetter(char)>(c41);

        if $z2 == 0 goto label16;

        if i35 != 0 goto label14;

        $i28 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        i36 = $i28 - 1;

        $r14 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] buffer>;

        $i29 = i35;

        i35 = i35 + 1;

        $r14[$i29] = c41;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType> = 2;

        goto label17;

     label14:
        $i18 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType>;

        if $i18 != 1 goto label15;

        $i24 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i25 = $i24 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i25;

        $i26 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex>;

        $i27 = $i26 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = $i27;

        goto label18;

     label15:
        $r13 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] buffer>;

        $i19 = i35;

        i35 = i35 + 1;

        $r13[$i19] = c41;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType> = 2;

        if i35 != 2 goto label17;

        $i20 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i21 = $i20 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i21;

        $i22 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex>;

        $i23 = $i22 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = $i23;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 1;

        goto label18;

     label16:
        if i35 <= 0 goto label17;

        $z3 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened>;

        if $z3 != 1 goto label18;

        i35 = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

     label17:
        goto label02;

     label18:
        if i35 <= 0 goto label19;

        $r7 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r6 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: char[] buffer>;

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: void copyBuffer(char[],int,int)>($r6, 0, i35);

        $r8 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        $i9 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int correctOffset(int)>(i36);

        $i10 = i36 + i35;

        $i11 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int correctOffset(int)>($i10);

        interfaceinvoke $r8.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i9, $i11);

        $r11 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.TypeAttribute typeAtt>;

        $r9 = <org.apache.lucene.analysis.cjk.CJKTokenizer: java.lang.String[] TOKEN_TYPE_NAMES>;

        $i12 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType>;

        $r10 = $r9[$i12];

        interfaceinvoke $r11.<org.apache.lucene.analysis.tokenattributes.TypeAttribute: void setType(java.lang.String)>($r10);

        return 1;

     label19:
        $i6 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen>;

        $i58 = (int) -1;

        if $i6 != $i58 goto label20;

        $i7 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i8 = $i7 - 1;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = $i8;

        return 0;

     label20:
        goto label01;
    }

    public final void end()
    {
        int $i0, $i1;
        org.apache.lucene.analysis.cjk.CJKTokenizer r0;
        org.apache.lucene.analysis.tokenattributes.OffsetAttribute $r1;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKTokenizer;

        $i0 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset>;

        $i1 = virtualinvoke r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int correctOffset(int)>($i0);

        $r1 = r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: org.apache.lucene.analysis.tokenattributes.OffsetAttribute offsetAtt>;

        interfaceinvoke $r1.<org.apache.lucene.analysis.tokenattributes.OffsetAttribute: void setOffset(int,int)>($i1, $i1);

        return;
    }

    public void reset() throws java.io.IOException
    {
        org.apache.lucene.analysis.cjk.CJKTokenizer r0;

        r0 := @this: org.apache.lucene.analysis.cjk.CJKTokenizer;

        specialinvoke r0.<org.apache.lucene.analysis.Tokenizer: void reset()>();

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int dataLen> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int bufferIndex> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int offset> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: boolean preIsTokened> = 0;

        r0.<org.apache.lucene.analysis.cjk.CJKTokenizer: int tokenType> = 0;

        return;
    }

    static void <clinit>()
    {
        java.lang.String[] $r0;

        <org.apache.lucene.analysis.cjk.CJKTokenizer: int IO_BUFFER_SIZE> = 256;

        <org.apache.lucene.analysis.cjk.CJKTokenizer: int MAX_WORD_LEN> = 255;

        <org.apache.lucene.analysis.cjk.CJKTokenizer: int DOUBLE_TOKEN_TYPE> = 2;

        <org.apache.lucene.analysis.cjk.CJKTokenizer: int SINGLE_TOKEN_TYPE> = 1;

        <org.apache.lucene.analysis.cjk.CJKTokenizer: int WORD_TYPE> = 0;

        $r0 = newarray (java.lang.String)[3];

        $r0[0] = "word";

        $r0[1] = "single";

        $r0[2] = "double";

        <org.apache.lucene.analysis.cjk.CJKTokenizer: java.lang.String[] TOKEN_TYPE_NAMES> = $r0;

        return;
    }
}
