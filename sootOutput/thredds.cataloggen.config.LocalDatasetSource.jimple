public class thredds.cataloggen.config.LocalDatasetSource extends thredds.cataloggen.config.DatasetSource
{
    private static org.slf4j.Logger logger;
    private java.io.File accessPointHeaderFile;
    private java.io.File accessPointFile;

    void <init>()
    {
        thredds.cataloggen.config.DatasetSourceType $r1;
        thredds.cataloggen.config.LocalDatasetSource r0;

        r0 := @this: thredds.cataloggen.config.LocalDatasetSource;

        specialinvoke r0.<thredds.cataloggen.config.DatasetSource: void <init>()>();

        r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointHeaderFile> = null;

        r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointFile> = null;

        $r1 = staticinvoke <thredds.cataloggen.config.DatasetSourceType: thredds.cataloggen.config.DatasetSourceType getType(java.lang.String)>("Local");

        r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.DatasetSourceType type> = $r1;

        return;
    }

    protected thredds.catalog.InvDataset createDataset(java.lang.String, java.lang.String) throws java.io.IOException
    {
        java.lang.String r0, r4;
        thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset $r2;
        thredds.cataloggen.config.LocalDatasetSource r1;
        java.io.File $r3;
        java.lang.NullPointerException $r5;

        r1 := @this: thredds.cataloggen.config.LocalDatasetSource;

        r0 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Dataset location cannot be null.");

        throw $r5;

     label1:
        specialinvoke r1.<thredds.cataloggen.config.LocalDatasetSource: void checkAccessPoint()>();

        $r2 = new thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset;

        $r3 = new java.io.File;

        specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>(r0);

        specialinvoke $r2.<thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset: void <init>(thredds.cataloggen.config.LocalDatasetSource,thredds.catalog.InvDataset,java.io.File,java.lang.String)>(r1, null, $r3, r4);

        return $r2;
    }

    protected thredds.catalog.InvCatalog createSkeletonCatalog(java.lang.String) throws java.io.IOException
    {
        boolean $z0, $z1;
        thredds.catalog.InvProperty $r31;
        java.util.List $r15, $r18;
        thredds.catalog.InvCatalogImpl $r1;
        thredds.cataloggen.config.ResultService $r3, $r5, $r8, $r10, $r12, $r14, $r17;
        thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset $r22;
        thredds.cataloggen.config.LocalDatasetSource r0;
        thredds.catalog.ServiceType $r6;
        java.lang.String $r4, $r7, $r9, $r11, $r13, $r21, r23, $r25;
        thredds.catalog.InvMetadata $r26;
        thredds.catalog.InvService $r2, $r29;
        java.util.Iterator $r16, $r19;
        java.io.File $r20;
        thredds.catalog.ThreddsMetadata $r24, $r27;
        java.lang.Object $r28, $r30;

        r0 := @this: thredds.cataloggen.config.LocalDatasetSource;

        r23 := @parameter0: java.lang.String;

        specialinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: void checkAccessPoint()>();

        $r1 = new thredds.catalog.InvCatalogImpl;

        specialinvoke $r1.<thredds.catalog.InvCatalogImpl: void <init>(java.lang.String,java.lang.String,java.net.URI)>(null, null, null);

        $r2 = new thredds.catalog.InvService;

        $r3 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r4 = virtualinvoke $r3.<thredds.cataloggen.config.ResultService: java.lang.String getName()>();

        $r5 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r6 = virtualinvoke $r5.<thredds.cataloggen.config.ResultService: thredds.catalog.ServiceType getServiceType()>();

        $r7 = virtualinvoke $r6.<thredds.catalog.ServiceType: java.lang.String toString()>();

        $r8 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r9 = virtualinvoke $r8.<thredds.cataloggen.config.ResultService: java.lang.String getBase()>();

        $r10 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r11 = virtualinvoke $r10.<thredds.cataloggen.config.ResultService: java.lang.String getSuffix()>();

        $r12 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r13 = virtualinvoke $r12.<thredds.cataloggen.config.ResultService: java.lang.String getDescription()>();

        specialinvoke $r2.<thredds.catalog.InvService: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r4, $r7, $r9, $r11, $r13);

        $r14 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r15 = virtualinvoke $r14.<thredds.cataloggen.config.ResultService: java.util.List getProperties()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r16.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r30 = interfaceinvoke $r16.<java.util.Iterator: java.lang.Object next()>();

        $r31 = (thredds.catalog.InvProperty) $r30;

        virtualinvoke $r2.<thredds.catalog.InvService: void addProperty(thredds.catalog.InvProperty)>($r31);

        goto label1;

     label2:
        $r17 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r18 = virtualinvoke $r17.<thredds.cataloggen.config.ResultService: java.util.List getServices()>();

        $r19 = interfaceinvoke $r18.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r19.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r28 = interfaceinvoke $r19.<java.util.Iterator: java.lang.Object next()>();

        $r29 = (thredds.catalog.InvService) $r28;

        virtualinvoke $r2.<thredds.catalog.InvService: void addService(thredds.catalog.InvService)>($r29);

        goto label3;

     label4:
        virtualinvoke $r1.<thredds.catalog.InvCatalogImpl: void addService(thredds.catalog.InvService)>($r2);

        $r20 = new java.io.File;

        $r21 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: java.lang.String getAccessPoint()>();

        specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r21);

        $r22 = new thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset;

        specialinvoke $r22.<thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset: void <init>(thredds.cataloggen.config.LocalDatasetSource,thredds.catalog.InvDataset,java.io.File,java.lang.String)>(r0, null, $r20, r23);

        $r24 = new thredds.catalog.ThreddsMetadata;

        specialinvoke $r24.<thredds.catalog.ThreddsMetadata: void <init>(boolean)>(0);

        $r25 = virtualinvoke $r2.<thredds.catalog.InvService: java.lang.String getName()>();

        virtualinvoke $r24.<thredds.catalog.ThreddsMetadata: void setServiceName(java.lang.String)>($r25);

        $r26 = new thredds.catalog.InvMetadata;

        specialinvoke $r26.<thredds.catalog.InvMetadata: void <init>(thredds.catalog.InvDataset,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,thredds.catalog.MetadataConverterIF,java.lang.Object)>($r22, null, "http://www.unidata.ucar.edu/namespaces/thredds/InvCatalog/v1.0", "", 1, 1, null, $r24);

        $r27 = new thredds.catalog.ThreddsMetadata;

        specialinvoke $r27.<thredds.catalog.ThreddsMetadata: void <init>(boolean)>(0);

        virtualinvoke $r27.<thredds.catalog.ThreddsMetadata: void addMetadata(thredds.catalog.InvMetadata)>($r26);

        virtualinvoke $r22.<thredds.catalog.InvDatasetImpl: void setLocalMetadata(thredds.catalog.ThreddsMetadata)>($r27);

        virtualinvoke $r1.<thredds.catalog.InvCatalogImpl: void addDataset(thredds.catalog.InvDatasetImpl)>($r22);

        virtualinvoke $r1.<thredds.catalog.InvCatalogImpl: boolean finish()>();

        return $r1;
    }

    private void checkAccessPoint() throws java.io.IOException
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        thredds.cataloggen.config.ResultService $r3;
        java.lang.StringBuilder $r11, $r12, $r14, $r15, $r17, $r18, $r20, $r21, $r23, $r24, $r29, $r30, $r32, $r33, $r36, $r37, $r39, $r40, $r43, $r44, $r46, $r47;
        thredds.cataloggen.config.LocalDatasetSource r0;
        java.lang.String $r4, $r6, $r7, $r8, $r9, $r10, $r13, $r16, $r19, $r22, $r25, $r31, $r34, $r38, $r41, $r45, $r48;
        org.slf4j.Logger $r26;
        java.io.IOException $r27, $r28, $r35, $r42;
        java.io.File $r1, $r2, $r5;

        r0 := @this: thredds.cataloggen.config.LocalDatasetSource;

        $r1 = r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointHeaderFile>;

        if $r1 != null goto label5;

        $r2 = new java.io.File;

        $r3 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: thredds.cataloggen.config.ResultService getResultService()>();

        $r4 = virtualinvoke $r3.<thredds.cataloggen.config.ResultService: java.lang.String getAccessPointHeader()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $z0 = virtualinvoke $r2.<java.io.File: boolean exists()>();

        if $z0 != 0 goto label1;

        $r42 = new java.io.IOException;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPointHeader local file does not exist <");

        $r45 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r42.<java.io.IOException: void <init>(java.lang.String)>($r48);

        throw $r42;

     label1:
        $r5 = new java.io.File;

        $r6 = virtualinvoke r0.<thredds.cataloggen.config.LocalDatasetSource: java.lang.String getAccessPoint()>();

        specialinvoke $r5.<java.io.File: void <init>(java.lang.String)>($r6);

        $z1 = virtualinvoke $r5.<java.io.File: boolean exists()>();

        if $z1 != 0 goto label2;

        $r35 = new java.io.IOException;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint local file does not exist <");

        $r38 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r35.<java.io.IOException: void <init>(java.lang.String)>($r41);

        throw $r35;

     label2:
        $z2 = virtualinvoke $r5.<java.io.File: boolean isDirectory()>();

        if $z2 != 0 goto label3;

        $r28 = new java.io.IOException;

        $r29 = new java.lang.StringBuilder;

        specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint local file is not a directory <");

        $r31 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>($r34);

        throw $r28;

     label3:
        $r7 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r8 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $z3 = virtualinvoke $r7.<java.lang.String: boolean startsWith(java.lang.String)>($r8);

        if $z3 != 0 goto label4;

        $r9 = virtualinvoke $r5.<java.io.File: java.lang.String getCanonicalPath()>();

        $r10 = virtualinvoke $r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $z4 = virtualinvoke $r9.<java.lang.String: boolean startsWith(java.lang.String)>($r10);

        if $z4 != 0 goto label4;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The accessPoint <");

        $r13 = virtualinvoke $r5.<java.io.File: java.lang.String getPath()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r16 = virtualinvoke $r5.<java.io.File: java.lang.String getCanonicalPath()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> must start with the accessPointHeader <");

        $r19 = virtualinvoke $r2.<java.io.File: java.lang.String getPath()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" or ");

        $r22 = virtualinvoke $r2.<java.io.File: java.lang.String getCanonicalPath()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">.");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        $r26 = <thredds.cataloggen.config.LocalDatasetSource: org.slf4j.Logger logger>;

        interfaceinvoke $r26.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Object)>("checkAccessPoint(): {}", $r25);

        $r27 = new java.io.IOException;

        specialinvoke $r27.<java.io.IOException: void <init>(java.lang.String)>($r25);

        throw $r27;

     label4:
        r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointHeaderFile> = $r2;

        r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointFile> = $r5;

     label5:
        return;
    }

    protected boolean isCollection(thredds.catalog.InvDataset)
    {
        thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset $r1;
        thredds.cataloggen.config.LocalDatasetSource r2;
        thredds.catalog.InvDataset r0;
        boolean $z0;

        r2 := @this: thredds.cataloggen.config.LocalDatasetSource;

        r0 := @parameter0: thredds.catalog.InvDataset;

        $r1 = (thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset) r0;

        $z0 = virtualinvoke $r1.<thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset: boolean isDirectory()>();

        return $z0;
    }

    protected java.util.List expandThisLevel(thredds.catalog.InvDataset, java.lang.String)
    {
        thredds.cataloggen.config.LocalDatasetSource r1;
        java.lang.NullPointerException $r17;
        java.util.ArrayList $r6;
        int $i0, i1;
        java.lang.String $r4, r8, $r13, $r16;
        thredds.catalog.InvDataset r0;
        boolean $z0;
        java.io.IOException $r18;
        java.lang.IllegalArgumentException $r10;
        java.io.File $r2, $r9;
        java.lang.StringBuilder $r11, $r12, $r14, $r15;
        thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset $r3, $r7;
        java.io.File[] $r5;

        r1 := @this: thredds.cataloggen.config.LocalDatasetSource;

        r0 := @parameter0: thredds.catalog.InvDataset;

        r8 := @parameter1: java.lang.String;

        if r0 != null goto label1;

        $r17 = new java.lang.NullPointerException;

        specialinvoke $r17.<java.lang.NullPointerException: void <init>(java.lang.String)>("Given dataset cannot be null.");

        throw $r17;

     label1:
        $z0 = virtualinvoke r1.<thredds.cataloggen.config.LocalDatasetSource: boolean isCollection(thredds.catalog.InvDataset)>(r0);

        if $z0 != 0 goto label2;

        $r10 = new java.lang.IllegalArgumentException;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Dataset \"");

        $r13 = virtualinvoke r0.<thredds.catalog.InvDataset: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" is not a collection dataset.");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r10;

     label2:
        $r2 = new java.io.File;

        $r3 = (thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset) r0;

        $r4 = virtualinvoke $r3.<thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset: java.lang.String getLocalPath()>();

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4);

        $r5 = virtualinvoke $r2.<java.io.File: java.io.File[] listFiles()>();

        $r6 = new java.util.ArrayList;

        specialinvoke $r6.<java.util.ArrayList: void <init>()>();

        i1 = 0;

     label3:
        $i0 = lengthof $r5;

        if i1 >= $i0 goto label9;

     label4:
        $r7 = new thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset;

        $r9 = $r5[i1];

        specialinvoke $r7.<thredds.cataloggen.config.LocalDatasetSource$LocalInvDataset: void <init>(thredds.cataloggen.config.LocalDatasetSource,thredds.catalog.InvDataset,java.io.File,java.lang.String)>(r1, r0, $r9, r8);

     label5:
        goto label7;

     label6:
        $r18 := @caughtexception;

        goto label8;

     label7:
        virtualinvoke $r6.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

     label8:
        i1 = i1 + 1;

        goto label3;

     label9:
        return $r6;

        catch java.io.IOException from label4 to label5 with label6;
    }

    static org.slf4j.Logger access$000()
    {
        org.slf4j.Logger $r0;

        $r0 = <thredds.cataloggen.config.LocalDatasetSource: org.slf4j.Logger logger>;

        return $r0;
    }

    static java.io.File access$100(thredds.cataloggen.config.LocalDatasetSource)
    {
        thredds.cataloggen.config.LocalDatasetSource r0;
        java.io.File $r1;

        r0 := @parameter0: thredds.cataloggen.config.LocalDatasetSource;

        $r1 = r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointHeaderFile>;

        return $r1;
    }

    static java.io.File access$200(thredds.cataloggen.config.LocalDatasetSource)
    {
        thredds.cataloggen.config.LocalDatasetSource r0;
        java.io.File $r1;

        r0 := @parameter0: thredds.cataloggen.config.LocalDatasetSource;

        $r1 = r0.<thredds.cataloggen.config.LocalDatasetSource: java.io.File accessPointFile>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lthredds/cataloggen/config/LocalDatasetSource;");

        <thredds.cataloggen.config.LocalDatasetSource: org.slf4j.Logger logger> = $r0;

        return;
    }
}
