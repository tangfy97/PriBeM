public class org.apache.xmlbeans.XmlCalendar extends java.util.GregorianCalendar
{
    private static int defaultYear;
    private static final int DEFAULT_DEFAULT_YEAR;
    private static java.util.Date _beginningOfTime;

    public void <init>(java.lang.String)
    {
        org.apache.xmlbeans.XmlCalendar r0;
        org.apache.xmlbeans.GDate $r1;
        java.lang.String r2;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        r2 := @parameter0: java.lang.String;

        $r1 = new org.apache.xmlbeans.GDate;

        specialinvoke $r1.<org.apache.xmlbeans.GDate: void <init>(java.lang.CharSequence)>(r2);

        specialinvoke r0.<org.apache.xmlbeans.XmlCalendar: void <init>(org.apache.xmlbeans.GDateSpecification)>($r1);

        return;
    }

    public void <init>(org.apache.xmlbeans.GDateSpecification)
    {
        org.apache.xmlbeans.XmlCalendar r0;
        org.apache.xmlbeans.GDateSpecification r1;
        java.util.TimeZone $r2;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        r1 := @parameter0: org.apache.xmlbeans.GDateSpecification;

        $r2 = staticinvoke <org.apache.xmlbeans.GDate: java.util.TimeZone timeZoneForGDate(org.apache.xmlbeans.GDateSpecification)>(r1);

        specialinvoke r0.<org.apache.xmlbeans.XmlCalendar: void <init>(java.util.TimeZone,org.apache.xmlbeans.GDateSpecification)>($r2, r1);

        return;
    }

    private void <init>(java.util.TimeZone, org.apache.xmlbeans.GDateSpecification)
    {
        java.util.Date $r2;
        org.apache.xmlbeans.GDateSpecification r3;
        org.apache.xmlbeans.XmlCalendar r0;
        java.math.BigDecimal $r4;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17;
        boolean $z0, $z1, $z2, $z3, $z4;
        java.util.TimeZone r1;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        r1 := @parameter0: java.util.TimeZone;

        r3 := @parameter1: org.apache.xmlbeans.GDateSpecification;

        specialinvoke r0.<java.util.GregorianCalendar: void <init>(java.util.TimeZone)>(r1);

        $r2 = <org.apache.xmlbeans.XmlCalendar: java.util.Date _beginningOfTime>;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void setGregorianChange(java.util.Date)>($r2);

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void clear()>();

        $z0 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: boolean hasYear()>();

        if $z0 == 0 goto label3;

        $i16 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getYear()>();

        i17 = $i16;

        if $i16 <= 0 goto label1;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(0, 1);

        goto label2;

     label1:
        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(0, 0);

        i17 = neg $i16;

     label2:
        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(1, i17);

     label3:
        $z3 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: boolean hasMonth()>();

        if $z3 == 0 goto label4;

        $i14 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getMonth()>();

        $i15 = $i14 - 1;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(2, $i15);

     label4:
        $z1 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: boolean hasDay()>();

        if $z1 == 0 goto label5;

        $i13 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getDay()>();

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(5, $i13);

     label5:
        $z2 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: boolean hasTime()>();

        if $z2 == 0 goto label6;

        $i8 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getHour()>();

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(11, $i8);

        $i9 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getMinute()>();

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(12, $i9);

        $i10 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getSecond()>();

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(13, $i10);

        $r4 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: java.math.BigDecimal getFraction()>();

        $i11 = virtualinvoke $r4.<java.math.BigDecimal: int scale()>();

        if $i11 <= 0 goto label6;

        $i12 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getMillisecond()>();

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(14, $i12);

     label6:
        $z4 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: boolean hasTimeZone()>();

        if $z4 == 0 goto label7;

        $i0 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneSign()>();

        $i1 = $i0 * 1000;

        $i2 = $i1 * 60;

        $i3 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneHour()>();

        $i4 = $i3 * 60;

        $i5 = interfaceinvoke r3.<org.apache.xmlbeans.GDateSpecification: int getTimeZoneMinute()>();

        $i6 = $i4 + $i5;

        $i7 = $i2 * $i6;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(15, $i7);

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(16, 0);

     label7:
        return;
    }

    public void <init>(java.util.Date)
    {
        org.apache.xmlbeans.XmlCalendar r0;
        java.util.TimeZone $r1;
        java.util.Date r3;
        org.apache.xmlbeans.GDate $r2;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        r3 := @parameter0: java.util.Date;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = new org.apache.xmlbeans.GDate;

        specialinvoke $r2.<org.apache.xmlbeans.GDate: void <init>(java.util.Date)>(r3);

        specialinvoke r0.<org.apache.xmlbeans.XmlCalendar: void <init>(java.util.TimeZone,org.apache.xmlbeans.GDateSpecification)>($r1, $r2);

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void complete()>();

        return;
    }

    public void <init>(int, int, int, int, int, int, java.math.BigDecimal)
    {
        java.util.TimeZone $r1;
        org.apache.xmlbeans.XmlCalendar r0;
        java.math.BigDecimal r3;
        int i0, i1, i2, i3, i4, i5;
        org.apache.xmlbeans.GDate $r2;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r3 := @parameter6: java.math.BigDecimal;

        $r1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();

        $r2 = new org.apache.xmlbeans.GDate;

        specialinvoke $r2.<org.apache.xmlbeans.GDate: void <init>(int,int,int,int,int,int,java.math.BigDecimal)>(i0, i1, i2, i3, i4, i5, r3);

        specialinvoke r0.<org.apache.xmlbeans.XmlCalendar: void <init>(java.util.TimeZone,org.apache.xmlbeans.GDateSpecification)>($r1, $r2);

        return;
    }

    public void <init>(int, int, int, int, int, int, java.math.BigDecimal, int, int, int)
    {
        org.apache.xmlbeans.XmlCalendar r0;
        java.math.BigDecimal r2;
        int i0, i1, i2, i3, i4, i5, i6, i7, i8;
        org.apache.xmlbeans.GDate $r1;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        i0 := @parameter0: int;

        i1 := @parameter1: int;

        i2 := @parameter2: int;

        i3 := @parameter3: int;

        i4 := @parameter4: int;

        i5 := @parameter5: int;

        r2 := @parameter6: java.math.BigDecimal;

        i6 := @parameter7: int;

        i7 := @parameter8: int;

        i8 := @parameter9: int;

        $r1 = new org.apache.xmlbeans.GDate;

        specialinvoke $r1.<org.apache.xmlbeans.GDate: void <init>(int,int,int,int,int,int,java.math.BigDecimal,int,int,int)>(i0, i1, i2, i3, i4, i5, r2, i6, i7, i8);

        specialinvoke r0.<org.apache.xmlbeans.XmlCalendar: void <init>(org.apache.xmlbeans.GDateSpecification)>($r1);

        return;
    }

    public int get(int)
    {
        org.apache.xmlbeans.XmlCalendar r0;
        int i0, $i1, $i2;
        boolean $z0, $z1;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        i0 := @parameter0: int;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: boolean isSet(int)>(i0);

        if $z0 == 0 goto label1;

        $z1 = r0.<org.apache.xmlbeans.XmlCalendar: boolean isTimeSet>;

        if $z1 == 0 goto label2;

     label1:
        $i1 = specialinvoke r0.<java.util.GregorianCalendar: int get(int)>(i0);

        return $i1;

     label2:
        $i2 = virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: int internalGet(int)>(i0);

        return $i2;
    }

    public void <init>()
    {
        org.apache.xmlbeans.XmlCalendar r0;
        java.util.Date $r1;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        specialinvoke r0.<java.util.GregorianCalendar: void <init>()>();

        $r1 = <org.apache.xmlbeans.XmlCalendar: java.util.Date _beginningOfTime>;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void setGregorianChange(java.util.Date)>($r1);

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void clear()>();

        return;
    }

    public static int getDefaultYear()
    {
        java.lang.Throwable $r1;
        int $i0, $i1, $i2;
        java.lang.String $r0;

        $i0 = <org.apache.xmlbeans.XmlCalendar: int defaultYear>;

        if $i0 != -2147483648 goto label5;

     label1:
        $r0 = staticinvoke <org.apache.xmlbeans.SystemProperties: java.lang.String getProperty(java.lang.String)>("user.defaultyear");

        if $r0 == null goto label2;

        $i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        <org.apache.xmlbeans.XmlCalendar: int defaultYear> = $i1;

        goto label3;

     label2:
        <org.apache.xmlbeans.XmlCalendar: int defaultYear> = 0;

     label3:
        goto label5;

     label4:
        $r1 := @caughtexception;

        <org.apache.xmlbeans.XmlCalendar: int defaultYear> = 0;

     label5:
        $i2 = <org.apache.xmlbeans.XmlCalendar: int defaultYear>;

        return $i2;

        catch java.lang.Throwable from label1 to label3 with label4;
    }

    public static void setDefaultYear(int)
    {
        int i0;

        i0 := @parameter0: int;

        <org.apache.xmlbeans.XmlCalendar: int defaultYear> = i0;

        return;
    }

    protected void computeTime()
    {
        org.apache.xmlbeans.XmlCalendar r0;
        java.lang.Throwable $r1;
        int $i0;
        boolean $z0, z1, $z3, $z4;

        r0 := @this: org.apache.xmlbeans.XmlCalendar;

        $z0 = virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: boolean isSet(int)>(1);

        if $z0 != 0 goto label1;

        $z4 = 1;

        $z3 = 1;

        goto label2;

     label1:
        $z4 = 0;

        $z3 = 0;

     label2:
        z1 = $z4;

        if $z3 == 0 goto label3;

        $i0 = staticinvoke <org.apache.xmlbeans.XmlCalendar: int getDefaultYear()>();

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void set(int,int)>(1, $i0);

     label3:
        specialinvoke r0.<java.util.GregorianCalendar: void computeTime()>();

     label4:
        if z1 == 0 goto label8;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void clear(int)>(1);

        goto label8;

     label5:
        $r1 := @caughtexception;

     label6:
        if z1 == 0 goto label7;

        virtualinvoke r0.<org.apache.xmlbeans.XmlCalendar: void clear(int)>(1);

     label7:
        throw $r1;

     label8:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public java.lang.String toString()
    {
        org.apache.xmlbeans.XmlCalendar r1;
        org.apache.xmlbeans.GDate $r0;
        java.lang.String $r2;

        r1 := @this: org.apache.xmlbeans.XmlCalendar;

        $r0 = new org.apache.xmlbeans.GDate;

        specialinvoke $r0.<org.apache.xmlbeans.GDate: void <init>(java.util.Calendar)>(r1);

        $r2 = virtualinvoke $r0.<org.apache.xmlbeans.GDate: java.lang.String toString()>();

        return $r2;
    }

    static void <clinit>()
    {
        java.util.Date $r0;

        <org.apache.xmlbeans.XmlCalendar: int DEFAULT_DEFAULT_YEAR> = 0;

        <org.apache.xmlbeans.XmlCalendar: int defaultYear> = -2147483648;

        $r0 = new java.util.Date;

        specialinvoke $r0.<java.util.Date: void <init>(long)>(-9223372036854775808L);

        <org.apache.xmlbeans.XmlCalendar: java.util.Date _beginningOfTime> = $r0;

        return;
    }
}
