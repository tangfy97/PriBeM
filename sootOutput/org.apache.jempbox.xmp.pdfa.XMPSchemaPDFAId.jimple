public class org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId extends org.apache.jempbox.xmp.XMPSchema
{
    public static final java.lang.String NAMESPACE;

    public void <init>(org.apache.jempbox.xmp.XMPMetadata)
    {
        org.apache.jempbox.xmp.XMPMetadata r1;
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        r1 := @parameter0: org.apache.jempbox.xmp.XMPMetadata;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.apache.jempbox.xmp.XMPMetadata,java.lang.String,java.lang.String)>(r1, "pdfaid", "http://www.aiim.org/pdfa/ns/id/");

        return;
    }

    public void <init>(org.w3c.dom.Element, java.lang.String)
    {
        org.w3c.dom.Element r1;
        java.lang.String r2;
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        r1 := @parameter0: org.w3c.dom.Element;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.apache.jempbox.xmp.XMPSchema: void <init>(org.w3c.dom.Element,java.lang.String)>(r1, r2);

        return;
    }

    public java.lang.Integer getPart()
    {
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        java.lang.Integer $r6;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":part");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.Integer getIntegerProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setPart(java.lang.Integer)
    {
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;
        java.lang.Integer r6;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        r6 := @parameter0: java.lang.Integer;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":part");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: void setIntegerProperty(java.lang.String,java.lang.Integer)>($r5, r6);

        return;
    }

    public void setAmd(java.lang.String)
    {
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":amd");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getAmd()
    {
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":amd");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public void setConformance(java.lang.String)
    {
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, r6;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        r6 := @parameter0: java.lang.String;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":conformance");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: void setTextProperty(java.lang.String,java.lang.String)>($r5, r6);

        return;
    }

    public java.lang.String getConformance()
    {
        org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId r0;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5, $r6;

        r0 := @this: org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String prefix>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":conformance");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        $r6 = virtualinvoke r0.<org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String getTextProperty(java.lang.String)>($r5);

        return $r6;
    }

    public static void <clinit>()
    {
        <org.apache.jempbox.xmp.pdfa.XMPSchemaPDFAId: java.lang.String NAMESPACE> = "http://www.aiim.org/pdfa/ns/id/";

        return;
    }
}
