public class org.codehaus.groovy.tools.shell.commands.LoadCommand extends org.codehaus.groovy.tools.shell.CommandSupport
{
    public static java.lang.Long __timeStamp;
    public static java.lang.Long __timeStamp__239_neverHappen1239119697143;
    static java.lang.Class class$java$util$List;
    static java.lang.Class class$groovy$lang$MetaClass;
    static java.lang.Class class$0;
    static java.lang.Class class$java$io$File;
    static java.lang.Class class$jline$FileNameCompletor;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$net$URL;
    static java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport;

    public void <init>(org.codehaus.groovy.tools.shell.Shell)
    {
        java.lang.Object[] $r12, $r17;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r5;
        int $i0, $i1, $i2;
        java.lang.String $r9, $r11;
        java.lang.IllegalArgumentException $r13;
        java.lang.Class $r0, r1, $r2, $r4, $r15, $r16, $r18;
        java.lang.Object $r6, $r8, $r10, $r14;
        org.codehaus.groovy.tools.shell.Shell r3, $r7;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r3 := @parameter0: org.codehaus.groovy.tools.shell.Shell;

        $r0 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r15 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.LoadCommand");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0> = $r15;

        goto label02;

     label01:
        $r15 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

     label02:
        r1 = $r15;

        $r2 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass> = $r16;

        goto label04;

     label03:
        $r16 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $r17 = newarray (java.lang.Object)[3];

        $r17[0] = r3;

        $r17[1] = "load";

        $r17[2] = "\\l";

        $r4 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

        if $r4 != null goto label05;

        $r18 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.CommandSupport");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport> = $r18;

        goto label06;

     label05:
        $r18 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$org$codehaus$groovy$tools$shell$CommandSupport>;

     label06:
        $i0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: int selectConstructorAndTransformArguments(java.lang.Object[],int,java.lang.Class)>($r17, 1, $r18);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label07;

        $r14 = $r17[0];

        $r17 = (java.lang.Object[]) $r14;

     label07:
        $i2 = $i0 >> 8;

        lookupswitch($i2)
        {
            case 0: goto label08;
            default: goto label09;
        };

     label08:
        $r6 = $r17[0];

        $r7 = (org.codehaus.groovy.tools.shell.Shell) $r6;

        $r8 = $r17[1];

        $r9 = (java.lang.String) $r8;

        $r10 = $r17[2];

        $r11 = (java.lang.String) $r10;

        specialinvoke r5.<org.codehaus.groovy.tools.shell.CommandSupport: void <init>(org.codehaus.groovy.tools.shell.Shell,java.lang.String,java.lang.String)>($r7, $r9, $r11);

        goto label10;

     label09:
        $r13 = new java.lang.IllegalArgumentException;

        specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("illegal constructor number");

        throw $r13;

     label10:
        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = ".";

        $r12[1] = "\\.";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r5, "alias", $r12);

        return;
    }

    protected java.util.List createCompletors()
    {
        java.lang.Object[] $r3;
        java.util.List $r6, $r9;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r10;
        java.lang.Class $r0, r1, $r2, $r4, $r7, $r11, $r12, $r13, $r14;
        java.lang.Object $r5, $r8;

        r10 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r0 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r11 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.LoadCommand");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0> = $r11;

        goto label2;

     label1:
        $r11 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

     label2:
        r1 = $r11;

        $r2 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r12 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass> = $r12;

        goto label4;

     label3:
        $r12 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r3 = newarray (java.lang.Object)[1];

        $r4 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$jline$FileNameCompletor>;

        if $r4 != null goto label5;

        $r13 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("jline.FileNameCompletor");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$jline$FileNameCompletor> = $r13;

        goto label6;

     label5:
        $r13 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$jline$FileNameCompletor>;

     label6:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNew0(java.lang.Class,java.lang.Class)>(r1, $r13);

        $r3[0] = $r5;

        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.util.List createList(java.lang.Object[])>($r3);

        $r7 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$util$List>;

        if $r7 != null goto label7;

        $r14 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("java.util.List");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$util$List> = $r14;

        goto label8;

     label7:
        $r14 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$util$List>;

     label8:
        $r8 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r6, $r14);

        $r9 = (java.util.List) $r8;

        return $r9;
    }

    public java.lang.Object execute(java.util.List)
    {
        java.net.URL $r26;
        java.lang.Integer $r54;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.codehaus.groovy.runtime.GStringImpl $r55, $r56, $r57, $r58;
        java.util.List r3;
        java.lang.Throwable $r28;
        java.lang.Object[] $r16, $r18, $r21, $r23, $r25, $r27, $r31, $r33, $r41, $r43;
        java.lang.String[] $r19, $r24, $r34, $r44;
        java.lang.StringBuffer $r53;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r14;
        java.util.Iterator $r59, $r60;
        java.net.MalformedURLException $r29;
        java.lang.Class $r0, r1, $r2, $r8, $r12, $r20, $r30, $r39, $r45, $r46, $r47, $r48, $r50, $r51, $r52;
        java.lang.Object $r5, $r7, $r9, $r10, $r11, $r13, $r15, $r35, $r36, $r37, $r38, $r40, r49;

        r14 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r3 := @parameter0: java.util.List;

        $r0 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

        if $r0 != null goto label01;

        $r45 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.LoadCommand");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0> = $r45;

        goto label02;

     label01:
        $r45 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

     label02:
        r1 = $r45;

        $r2 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label03;

        $r46 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass> = $r46;

        goto label04;

     label03:
        $r46 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label04:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label05;

        goto label06;

     label05:
        $r53 = new java.lang.StringBuffer;

        specialinvoke $r53.<java.lang.StringBuffer: void <init>(java.lang.String)>("(args != null). Values: ");

        virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("args = ");

        virtualinvoke $r53.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r53, null);

     label06:
        $r5 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "size");

        $r54 = new java.lang.Integer;

        specialinvoke $r54.<java.lang.Integer: void <init>(int)>(0);

        $z1 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareEqual(java.lang.Object,java.lang.Object)>($r5, $r54);

        if $z1 == 0 goto label07;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = "Command \'load\' requires at least one argument";

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r14, "fail", $r27);

        goto label07;

     label07:
        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, r3, "iterator");

     label08:
        $r59 = (java.util.Iterator) $r7;

        $z3 = interfaceinvoke $r59.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label25;

        $r60 = (java.util.Iterator) $r7;

        $r11 = interfaceinvoke $r60.<java.util.Iterator: java.lang.Object next()>();

        $r12 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL>;

        if $r12 != null goto label09;

        $r47 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL> = $r47;

        goto label10;

     label09:
        $r47 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL>;

     label10:
        $r13 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r47);

        $r26 = (java.net.URL) $r13;

        $r15 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r14, "log");

        $r16 = newarray (java.lang.Object)[1];

        $r55 = new org.codehaus.groovy.runtime.GStringImpl;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = $r26;

        $r19 = newarray (java.lang.String)[2];

        $r19[0] = "Attempting to load: ";

        $r19[1] = "";

        specialinvoke $r55.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r18, $r19);

        $r16[0] = $r55;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r15, "debug", $r16);

     label11:
        $r20 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL>;

        if $r20 != null goto label12;

        $r48 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL> = $r48;

        goto label13;

     label12:
        $r48 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL>;

     label13:
        $r21 = newarray (java.lang.Object)[1];

        $r56 = new org.codehaus.groovy.runtime.GStringImpl;

        $r23 = newarray (java.lang.Object)[1];

        $r23[0] = $r11;

        $r24 = newarray (java.lang.String)[2];

        $r24[0] = "";

        $r24[1] = "";

        specialinvoke $r56.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r23, $r24);

        $r21[0] = $r56;

        r49 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r48, $r21);

        goto label22;

     label14:
        $r29 := @caughtexception;

        $r30 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$io$File>;

        if $r30 != null goto label15;

        $r50 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("java.io.File");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$io$File> = $r50;

        goto label16;

     label15:
        $r50 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$io$File>;

     label16:
        $r31 = newarray (java.lang.Object)[1];

        $r57 = new org.codehaus.groovy.runtime.GStringImpl;

        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = $r11;

        $r34 = newarray (java.lang.String)[2];

        $r34[0] = "";

        $r34[1] = "";

        specialinvoke $r57.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r33, $r34);

        $r31[0] = $r57;

        $r35 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeNewN(java.lang.Class,java.lang.Class,java.lang.Object)>(r1, $r50, $r31);

        $r36 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r35, "exists");

        $z2 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r36);

        if $z2 != 0 goto label17;

        $z4 = 1;

        goto label18;

     label17:
        $z4 = 0;

     label18:
        if $z4 == 0 goto label19;

        $r41 = newarray (java.lang.Object)[1];

        $r58 = new org.codehaus.groovy.runtime.GStringImpl;

        $r43 = newarray (java.lang.Object)[1];

        $r43[0] = $r35;

        $r44 = newarray (java.lang.String)[2];

        $r44[0] = "File not found: ";

        $r44[1] = "";

        specialinvoke $r58.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r43, $r44);

        $r41[0] = $r58;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r14, "fail", $r41);

        goto label19;

     label19:
        $r37 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r35, "toURI");

        $r38 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethod0(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r37, "toURL");

        $r39 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL>;

        if $r39 != null goto label20;

        $r51 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("java.net.URL");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL> = $r51;

        goto label21;

     label20:
        $r51 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$net$URL>;

     label21:
        $r40 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>($r38, $r51);

        r49 = (java.net.URL) $r40;

        goto label22;

     label22:
        goto label24;

     label23:
        $r28 := @caughtexception;

        throw $r28;

     label24:
        $r25 = newarray (java.lang.Object)[1];

        $r25[0] = r49;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodOnCurrentN(java.lang.Class,groovy.lang.GroovyObject,java.lang.String,java.lang.Object[])>(r1, r14, "load", $r25);

        goto label08;

     label25:
        $r8 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$lang$Object>;

        if $r8 != null goto label26;

        $r52 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$lang$Object> = $r52;

        goto label27;

     label26:
        $r52 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$java$lang$Object>;

     label27:
        $r9 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object castToType(java.lang.Object,java.lang.Class)>(null, $r52);

        $r10 = (java.lang.Object) $r9;

        return $r10;

        catch java.net.MalformedURLException from label11 to label14 with label14;
        catch java.lang.Throwable from label11 to label22 with label23;
    }

    public void load(java.net.URL)
    {
        java.lang.Object[] $r8, $r12, $r14;
        java.net.URL r3;
        java.lang.String[] $r15;
        java.lang.StringBuffer $r4;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r5;
        boolean $z0, $z1;
        org.codehaus.groovy.runtime.GStringImpl $r13;
        org.codehaus.groovy.tools.shell.commands.LoadCommand$_load_closure1 $r9;
        java.lang.Class $r0, r1, $r2, $r16, $r17;
        java.lang.Object $r6, $r7, $r10, $r11;

        r5 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r3 := @parameter0: java.net.URL;

        $r0 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r16 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.LoadCommand");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0> = $r16;

        goto label2;

     label1:
        $r16 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

     label2:
        r1 = $r16;

        $r2 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r2 != null goto label3;

        $r17 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass> = $r17;

        goto label4;

     label3:
        $r17 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $z0 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: boolean compareNotEqual(java.lang.Object,java.lang.Object)>(r3, null);

        if $z0 == 0 goto label5;

        goto label6;

     label5:
        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(java.lang.String)>("(url != null). Values: ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>("url = ");

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r3);

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: void assertFailed(java.lang.Object,java.lang.Object)>($r4, null);

     label6:
        $r6 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r7 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r6, "verbose");

        $z1 = staticinvoke <org.codehaus.groovy.runtime.typehandling.DefaultTypeTransformation: boolean booleanUnbox(java.lang.Object)>($r7);

        if $z1 == 0 goto label7;

        $r10 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getGroovyObjectProperty(java.lang.Class,groovy.lang.GroovyObject,java.lang.String)>(r1, r5, "io");

        $r11 = staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object getProperty(java.lang.Class,java.lang.Object,java.lang.String)>(r1, $r10, "out");

        $r12 = newarray (java.lang.Object)[1];

        $r13 = new org.codehaus.groovy.runtime.GStringImpl;

        $r14 = newarray (java.lang.Object)[1];

        $r14[0] = r3;

        $r15 = newarray (java.lang.String)[2];

        $r15[0] = "Loading: ";

        $r15[1] = "";

        specialinvoke $r13.<org.codehaus.groovy.runtime.GStringImpl: void <init>(java.lang.Object[],java.lang.String[])>($r14, $r15);

        $r12[0] = $r13;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, $r11, "println", $r12);

        goto label7;

     label7:
        $r8 = newarray (java.lang.Object)[1];

        $r9 = new org.codehaus.groovy.tools.shell.commands.LoadCommand$_load_closure1;

        specialinvoke $r9.<org.codehaus.groovy.tools.shell.commands.LoadCommand$_load_closure1: void <init>(java.lang.Object,java.lang.Object)>(r5, r5);

        $r8[0] = $r9;

        staticinvoke <org.codehaus.groovy.runtime.ScriptBytecodeAdapter: java.lang.Object invokeMethodN(java.lang.Class,java.lang.Object,java.lang.String,java.lang.Object[])>(r1, r3, "eachLine", $r8);

        return;
    }

    static void <clinit>()
    {
        java.lang.Long $r2, $r3, $r4, $r5;
        java.lang.Class $r0, $r1, $r6, $r7;

        $r0 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

        if $r0 != null goto label1;

        $r6 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("org.codehaus.groovy.tools.shell.commands.LoadCommand");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0> = $r6;

        goto label2;

     label1:
        $r6 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$0>;

     label2:
        $r1 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

        if $r1 != null goto label3;

        $r7 = staticinvoke <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$(java.lang.String)>("groovy.lang.MetaClass");

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass> = $r7;

        goto label4;

     label3:
        $r7 = <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Class class$groovy$lang$MetaClass>;

     label4:
        $r2 = new java.lang.Long;

        specialinvoke $r2.<java.lang.Long: void <init>(long)>(1239119697143L);

        $r3 = (java.lang.Long) $r2;

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Long __timeStamp> = $r3;

        $r4 = new java.lang.Long;

        specialinvoke $r4.<java.lang.Long: void <init>(long)>(0L);

        $r5 = (java.lang.Long) $r4;

        <org.codehaus.groovy.tools.shell.commands.LoadCommand: java.lang.Long __timeStamp__239_neverHappen1239119697143> = $r5;

        return;
    }

    java.lang.String super$1$toString()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.String toString()>();

        return $r1;
    }

    void super$2$setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setProperty(java.lang.String,java.lang.Object)>(r1, r2);

        return;
    }

    org.codehaus.groovy.tools.shell.BufferManager super$2$getBuffers()
    {
        org.codehaus.groovy.tools.shell.BufferManager $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: org.codehaus.groovy.tools.shell.BufferManager getBuffers()>();

        return $r1;
    }

    java.lang.String super$2$getHelp()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getHelp()>();

        return $r1;
    }

    jline.History super$2$getHistory()
    {
        jline.History $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.History getHistory()>();

        return $r1;
    }

    java.util.List super$2$createCompletors()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List createCompletors()>();

        return $r1;
    }

    void super$1$wait()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        specialinvoke r0.<java.lang.Object: void wait()>();

        return;
    }

    groovy.lang.MetaClass super$2$getMetaClass()
    {
        groovy.lang.MetaClass $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.MetaClass getMetaClass()>();

        return $r1;
    }

    void super$2$setMetaClass(groovy.lang.MetaClass)
    {
        groovy.lang.MetaClass r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: groovy.lang.MetaClass;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setMetaClass(groovy.lang.MetaClass)>(r1);

        return;
    }

    java.util.Map super$2$getVariables()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;
        java.util.Map $r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.Map getVariables()>();

        return $r1;
    }

    java.util.List super$2$getBuffer()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getBuffer()>();

        return $r1;
    }

    java.lang.Class super$1$getClass()
    {
        java.lang.Class $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        return $r1;
    }

    java.lang.String super$2$getDescription()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getDescription()>();

        return $r1;
    }

    java.lang.String super$2$getShortcut()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getShortcut()>();

        return $r1;
    }

    java.lang.Object super$2$invokeMethod(java.lang.String, java.lang.Object)
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;
        java.lang.Object r2, $r3;
        java.lang.String r1;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r3 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object invokeMethod(java.lang.String,java.lang.Object)>(r1, r2);

        return $r3;
    }

    int super$1$hashCode()
    {
        int $i0;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $i0 = specialinvoke r0.<java.lang.Object: int hashCode()>();

        return $i0;
    }

    java.lang.Object super$2$getProperty(java.lang.String)
    {
        java.lang.Object $r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.String;

        $r2 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.Object getProperty(java.lang.String)>(r1);

        return $r2;
    }

    java.lang.String super$2$getName()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getName()>();

        return $r1;
    }

    void super$2$fail(java.lang.String, java.lang.Throwable)
    {
        java.lang.Throwable r2;
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String,java.lang.Throwable)>(r1, r2);

        return;
    }

    void super$2$fail(java.lang.String)
    {
        java.lang.String r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void fail(java.lang.String)>(r1);

        return;
    }

    void super$2$assertNoArguments(java.util.List)
    {
        java.util.List r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void assertNoArguments(java.util.List)>(r1);

        return;
    }

    void super$1$notify()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        specialinvoke r0.<java.lang.Object: void notify()>();

        return;
    }

    void super$2$alias(java.lang.String, java.lang.String)
    {
        java.lang.String r1, r2;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void alias(java.lang.String,java.lang.String)>(r1, r2);

        return;
    }

    void super$1$notifyAll()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        specialinvoke r0.<java.lang.Object: void notifyAll()>();

        return;
    }

    void super$2$setHidden(boolean)
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;
        boolean z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        z0 := @parameter0: boolean;

        specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: void setHidden(boolean)>(z0);

        return;
    }

    jline.Completor super$2$getCompletor()
    {
        jline.Completor $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: jline.Completor getCompletor()>();

        return $r1;
    }

    java.lang.Object super$1$clone()
    {
        java.lang.Object $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

        return $r1;
    }

    java.lang.String super$2$getUsage()
    {
        java.lang.String $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.lang.String getUsage()>();

        return $r1;
    }

    groovy.lang.GroovyClassLoader super$2$getClassLoader()
    {
        groovy.lang.GroovyClassLoader $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.GroovyClassLoader getClassLoader()>();

        return $r1;
    }

    boolean super$2$isHidden()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean isHidden()>();

        return $z0;
    }

    void super$1$wait(long, int)
    {
        int i1;
        long l0;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        l0 := @parameter0: long;

        i1 := @parameter1: int;

        specialinvoke r0.<java.lang.Object: void wait(long,int)>(l0, i1);

        return;
    }

    boolean super$2$getHidden()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $z0 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: boolean getHidden()>();

        return $z0;
    }

    groovy.lang.Binding super$2$getBinding()
    {
        groovy.lang.Binding $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: groovy.lang.Binding getBinding()>();

        return $r1;
    }

    java.util.List super$2$getImports()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getImports()>();

        return $r1;
    }

    java.util.List super$2$getAliases()
    {
        java.util.List $r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        $r1 = specialinvoke r0.<org.codehaus.groovy.tools.shell.CommandSupport: java.util.List getAliases()>();

        return $r1;
    }

    void super$1$finalize()
    {
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        specialinvoke r0.<java.lang.Object: void finalize()>();

        return;
    }

    void super$1$wait(long)
    {
        long l0;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        l0 := @parameter0: long;

        specialinvoke r0.<java.lang.Object: void wait(long)>(l0);

        return;
    }

    boolean super$1$equals(java.lang.Object)
    {
        java.lang.Object r1;
        org.codehaus.groovy.tools.shell.commands.LoadCommand r0;
        boolean $z0;

        r0 := @this: org.codehaus.groovy.tools.shell.commands.LoadCommand;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<java.lang.Object: boolean equals(java.lang.Object)>(r1);

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }
}
