public abstract class org.apache.zookeeper.server.ServerCnxn extends java.lang.Object implements org.apache.zookeeper.server.Stats, org.apache.zookeeper.Watcher
{
    public static final java.lang.Object me;
    protected java.util.ArrayList authInfo;
    boolean isOldClient;
    protected org.apache.zookeeper.server.ZooKeeperSaslServer zooKeeperSaslServer;
    protected static final int confCmd;
    protected static final int consCmd;
    protected static final int crstCmd;
    protected static final int dumpCmd;
    protected static final int enviCmd;
    protected static final int getTraceMaskCmd;
    protected static final int ruokCmd;
    protected static final int setTraceMaskCmd;
    protected static final int srvrCmd;
    protected static final int srstCmd;
    protected static final int statCmd;
    protected static final int wchcCmd;
    protected static final int wchpCmd;
    protected static final int wchsCmd;
    protected static final int mntrCmd;
    protected static final int isroCmd;
    protected static final java.util.HashMap cmd2String;
    protected final java.util.Date established;
    protected final java.util.concurrent.atomic.AtomicLong packetsReceived;
    protected final java.util.concurrent.atomic.AtomicLong packetsSent;
    protected long minLatency;
    protected long maxLatency;
    protected java.lang.String lastOp;
    protected long lastCxid;
    protected long lastZxid;
    protected long lastResponseTime;
    protected long lastLatency;
    protected long count;
    protected long totalLatency;

    public void <init>()
    {
        java.util.concurrent.atomic.AtomicLong $r3, $r4;
        java.util.Date $r2;
        org.apache.zookeeper.server.ServerCnxn r0;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<org.apache.zookeeper.server.ServerCnxn: java.util.ArrayList authInfo> = $r1;

        r0.<org.apache.zookeeper.server.ServerCnxn: boolean isOldClient> = 1;

        r0.<org.apache.zookeeper.server.ServerCnxn: org.apache.zookeeper.server.ZooKeeperSaslServer zooKeeperSaslServer> = null;

        $r2 = new java.util.Date;

        specialinvoke $r2.<java.util.Date: void <init>()>();

        r0.<org.apache.zookeeper.server.ServerCnxn: java.util.Date established> = $r2;

        $r3 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r3.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsReceived> = $r3;

        $r4 = new java.util.concurrent.atomic.AtomicLong;

        specialinvoke $r4.<java.util.concurrent.atomic.AtomicLong: void <init>()>();

        r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsSent> = $r4;

        return;
    }

    abstract int getSessionTimeout();

    abstract void close();

    public abstract void sendResponse(org.apache.zookeeper.proto.ReplyHeader, org.apache.jute.Record, java.lang.String) throws java.io.IOException;

    abstract void sendCloseSession();

    public abstract void process(org.apache.zookeeper.WatchedEvent);

    abstract long getSessionId();

    abstract void setSessionId(long);

    public java.util.List getAuthInfo()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        java.util.List $r2;
        java.util.ArrayList $r1;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.ArrayList authInfo>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void addAuthInfo(org.apache.zookeeper.data.Id)
    {
        org.apache.zookeeper.data.Id r1;
        org.apache.zookeeper.server.ServerCnxn r0;
        java.util.ArrayList $r2, $r3;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        r1 := @parameter0: org.apache.zookeeper.data.Id;

        $r2 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.ArrayList authInfo>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean contains(java.lang.Object)>(r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.ArrayList authInfo>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>(r1);

     label1:
        return;
    }

    public boolean removeAuthInfo(org.apache.zookeeper.data.Id)
    {
        org.apache.zookeeper.data.Id r1;
        org.apache.zookeeper.server.ServerCnxn r0;
        java.util.ArrayList $r2;
        boolean $z0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        r1 := @parameter0: org.apache.zookeeper.data.Id;

        $r2 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.ArrayList authInfo>;

        $z0 = virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>(r1);

        return $z0;
    }

    abstract void sendBuffer(java.nio.ByteBuffer);

    abstract void enableRecv();

    abstract void disableRecv();

    abstract void setSessionTimeout(int);

    protected void packetReceived()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        org.apache.zookeeper.server.ServerStats $r1, $r2;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        virtualinvoke r0.<org.apache.zookeeper.server.ServerCnxn: long incrPacketsReceived()>();

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.ServerCnxn: org.apache.zookeeper.server.ServerStats serverStats()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.server.ServerCnxn: org.apache.zookeeper.server.ServerStats serverStats()>();

        virtualinvoke $r2.<org.apache.zookeeper.server.ServerStats: void incrementPacketsReceived()>();

     label1:
        return;
    }

    protected void packetSent()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        org.apache.zookeeper.server.ServerStats $r1, $r2;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        virtualinvoke r0.<org.apache.zookeeper.server.ServerCnxn: long incrPacketsSent()>();

        $r1 = virtualinvoke r0.<org.apache.zookeeper.server.ServerCnxn: org.apache.zookeeper.server.ServerStats serverStats()>();

        if $r1 == null goto label1;

        $r2 = virtualinvoke r0.<org.apache.zookeeper.server.ServerCnxn: org.apache.zookeeper.server.ServerStats serverStats()>();

        virtualinvoke $r2.<org.apache.zookeeper.server.ServerStats: void incrementPacketsSent()>();

     label1:
        return;
    }

    protected abstract org.apache.zookeeper.server.ServerStats serverStats();

    public synchronized void resetStats()
    {
        java.util.concurrent.atomic.AtomicLong $r1, $r2;
        org.apache.zookeeper.server.ServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsReceived>;

        virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

        $r2 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsSent>;

        virtualinvoke $r2.<java.util.concurrent.atomic.AtomicLong: void set(long)>(0L);

        r0.<org.apache.zookeeper.server.ServerCnxn: long minLatency> = 9223372036854775807L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long maxLatency> = 0L;

        r0.<org.apache.zookeeper.server.ServerCnxn: java.lang.String lastOp> = "NA";

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastCxid> = -1L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastZxid> = -1L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastResponseTime> = 0L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastLatency> = 0L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long count> = 0L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long totalLatency> = 0L;

        return;
    }

    protected long incrPacketsReceived()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsReceived>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        return $l0;
    }

    protected void incrOutstandingRequests(org.apache.zookeeper.proto.RequestHeader)
    {
        org.apache.zookeeper.proto.RequestHeader r1;
        org.apache.zookeeper.server.ServerCnxn r0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        r1 := @parameter0: org.apache.zookeeper.proto.RequestHeader;

        return;
    }

    protected long incrPacketsSent()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsSent>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long incrementAndGet()>();

        return $l0;
    }

    protected synchronized void updateStatsForResponse(long, long, java.lang.String, long, long)
    {
        long l0, l2, l3, l4, $l5, $l7, $l9, $l10, $l11, $l12, $l13;
        byte $b1, $b6, $b8;
        int $i14, $i15, $i16;
        org.apache.zookeeper.server.ServerCnxn r0;
        java.lang.String r1;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        l0 := @parameter0: long;

        l2 := @parameter1: long;

        r1 := @parameter2: java.lang.String;

        l4 := @parameter3: long;

        l3 := @parameter4: long;

        $b1 = l0 cmp 0L;

        $i14 = (int) $b1;

        if $i14 < 0 goto label1;

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastCxid> = l0;

     label1:
        r0.<org.apache.zookeeper.server.ServerCnxn: long lastZxid> = l2;

        r0.<org.apache.zookeeper.server.ServerCnxn: java.lang.String lastOp> = r1;

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastResponseTime> = l3;

        $l13 = l3 - l4;

        r0.<org.apache.zookeeper.server.ServerCnxn: long lastLatency> = $l13;

        $l5 = r0.<org.apache.zookeeper.server.ServerCnxn: long minLatency>;

        $b6 = $l13 cmp $l5;

        $i15 = (int) $b6;

        if $i15 >= 0 goto label2;

        r0.<org.apache.zookeeper.server.ServerCnxn: long minLatency> = $l13;

     label2:
        $l7 = r0.<org.apache.zookeeper.server.ServerCnxn: long maxLatency>;

        $b8 = $l13 cmp $l7;

        $i16 = (int) $b8;

        if $i16 <= 0 goto label3;

        r0.<org.apache.zookeeper.server.ServerCnxn: long maxLatency> = $l13;

     label3:
        $l9 = r0.<org.apache.zookeeper.server.ServerCnxn: long count>;

        $l10 = $l9 + 1L;

        r0.<org.apache.zookeeper.server.ServerCnxn: long count> = $l10;

        $l11 = r0.<org.apache.zookeeper.server.ServerCnxn: long totalLatency>;

        $l12 = $l11 + $l13;

        r0.<org.apache.zookeeper.server.ServerCnxn: long totalLatency> = $l12;

        return;
    }

    public java.util.Date getEstablished()
    {
        java.util.Date $r1, $r3;
        org.apache.zookeeper.server.ServerCnxn r0;
        java.lang.Object $r2;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.Date established>;

        $r2 = virtualinvoke $r1.<java.util.Date: java.lang.Object clone()>();

        $r3 = (java.util.Date) $r2;

        return $r3;
    }

    public abstract long getOutstandingRequests();

    public long getPacketsReceived()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsReceived>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long longValue()>();

        return $l0;
    }

    public long getPacketsSent()
    {
        java.util.concurrent.atomic.AtomicLong $r1;
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.util.concurrent.atomic.AtomicLong packetsSent>;

        $l0 = virtualinvoke $r1.<java.util.concurrent.atomic.AtomicLong: long longValue()>();

        return $l0;
    }

    public synchronized long getMinLatency()
    {
        byte $b1;
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0, $l2;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long minLatency>;

        $b1 = $l0 cmp 9223372036854775807L;

        if $b1 != 0 goto label1;

        $l2 = 0L;

        goto label2;

     label1:
        $l2 = r0.<org.apache.zookeeper.server.ServerCnxn: long minLatency>;

     label2:
        return $l2;
    }

    public synchronized long getAvgLatency()
    {
        byte $b1;
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0, $l2, $l3, $l4;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long count>;

        $b1 = $l0 cmp 0L;

        if $b1 != 0 goto label1;

        $l4 = 0L;

        goto label2;

     label1:
        $l3 = r0.<org.apache.zookeeper.server.ServerCnxn: long totalLatency>;

        $l2 = r0.<org.apache.zookeeper.server.ServerCnxn: long count>;

        $l4 = $l3 / $l2;

     label2:
        return $l4;
    }

    public synchronized long getMaxLatency()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long maxLatency>;

        return $l0;
    }

    public synchronized java.lang.String getLastOperation()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        java.lang.String $r1;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r1 = r0.<org.apache.zookeeper.server.ServerCnxn: java.lang.String lastOp>;

        return $r1;
    }

    public synchronized long getLastCxid()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long lastCxid>;

        return $l0;
    }

    public synchronized long getLastZxid()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long lastZxid>;

        return $l0;
    }

    public synchronized long getLastResponseTime()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long lastResponseTime>;

        return $l0;
    }

    public synchronized long getLastLatency()
    {
        org.apache.zookeeper.server.ServerCnxn r0;
        long $l0;

        r0 := @this: org.apache.zookeeper.server.ServerCnxn;

        $l0 = r0.<org.apache.zookeeper.server.ServerCnxn: long lastLatency>;

        return $l0;
    }

    public java.lang.String toString()
    {
        java.io.PrintWriter $r1;
        java.io.StringWriter $r0;
        org.apache.zookeeper.server.ServerCnxn r2;
        java.lang.String $r3;

        r2 := @this: org.apache.zookeeper.server.ServerCnxn;

        $r0 = new java.io.StringWriter;

        specialinvoke $r0.<java.io.StringWriter: void <init>()>();

        $r1 = new java.io.PrintWriter;

        specialinvoke $r1.<java.io.PrintWriter: void <init>(java.io.Writer)>($r0);

        virtualinvoke r2.<org.apache.zookeeper.server.ServerCnxn: void dumpConnectionInfo(java.io.PrintWriter,boolean)>($r1, 0);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        virtualinvoke $r1.<java.io.PrintWriter: void close()>();

        $r3 = virtualinvoke $r0.<java.io.StringWriter: java.lang.String toString()>();

        return $r3;
    }

    public abstract java.net.InetSocketAddress getRemoteSocketAddress();

    public abstract int getInterestOps();

    protected synchronized void dumpConnectionInfo(java.io.PrintWriter, boolean)
    {
        java.util.Date $r5;
        long $l1, $l2, $l3, $l4, $l6, $l8, $l10, $l11, $l12, $l13, $l14, $l15;
        byte $b5, $b9;
        int $i0, $i7, $i16;
        org.apache.zookeeper.server.ServerCnxn r1;
        java.lang.String $r3, $r4, $r6, $r7, $r8;
        boolean z0;
        java.io.PrintWriter r0;
        java.net.InetSocketAddress $r2;

        r1 := @this: org.apache.zookeeper.server.ServerCnxn;

        r0 := @parameter0: java.io.PrintWriter;

        z0 := @parameter1: boolean;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(" ");

        $r2 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: java.net.InetSocketAddress getRemoteSocketAddress()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.Object)>($r2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("[");

        $i0 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: int getInterestOps()>();

        if $i0 != 0 goto label1;

        $r8 = "0";

        goto label2;

     label1:
        $r8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

     label2:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>("](queued=");

        $l1 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getOutstandingRequests()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l1);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",recved=");

        $l2 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getPacketsReceived()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l2);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",sent=");

        $l3 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getPacketsSent()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l3);

        if z0 != 0 goto label4;

        $l4 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getSessionId()>();

        $b5 = $l4 cmp 0L;

        if $b5 == 0 goto label4;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",sid=0x");

        $r3 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r3);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",lop=");

        $r4 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: java.lang.String getLastOperation()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r4);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",est=");

        $r5 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: java.util.Date getEstablished()>();

        $l6 = virtualinvoke $r5.<java.util.Date: long getTime()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",to=");

        $i7 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: int getSessionTimeout()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(int)>($i7);

        $l8 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getLastCxid()>();

        $b9 = $l8 cmp 0L;

        $i16 = (int) $b9;

        if $i16 < 0 goto label3;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",lcxid=0x");

        $r7 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l8);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r7);

     label3:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",lzxid=0x");

        $l10 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getLastZxid()>();

        $r6 = staticinvoke <java.lang.Long: java.lang.String toHexString(long)>($l10);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>($r6);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",lresp=");

        $l11 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getLastResponseTime()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l11);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",llat=");

        $l12 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getLastLatency()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l12);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",minlat=");

        $l13 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getMinLatency()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l13);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",avglat=");

        $l14 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getAvgLatency()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l14);

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(",maxlat=");

        $l15 = virtualinvoke r1.<org.apache.zookeeper.server.ServerCnxn: long getMaxLatency()>();

        virtualinvoke r0.<java.io.PrintWriter: void print(long)>($l15);

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(")");

        return;
    }

    static void <clinit>()
    {
        byte[] $r2, $r5, $r8, $r11, $r14, $r17, $r20, $r23, $r26, $r29, $r32, $r35, $r38, $r41, $r44, $r47;
        java.lang.Integer $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r71, $r73, $r75, $r77, $r79, $r81;
        java.lang.String $r1, $r4, $r7, $r10, $r13, $r16, $r19, $r22, $r25, $r28, $r31, $r34, $r37, $r40, $r43, $r46;
        java.nio.ByteBuffer $r3, $r6, $r9, $r12, $r15, $r18, $r21, $r24, $r27, $r30, $r33, $r36, $r39, $r42, $r45, $r48;
        java.util.HashMap $r49, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r70, $r72, $r74, $r76, $r78, $r80;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.lang.Object $r0;

        $r0 = new java.lang.Object;

        specialinvoke $r0.<java.lang.Object: void <init>()>();

        <org.apache.zookeeper.server.ServerCnxn: java.lang.Object me> = $r0;

        $r1 = "conf";

        $r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r2);

        $i0 = virtualinvoke $r3.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int confCmd> = $i0;

        $r4 = "cons";

        $r5 = virtualinvoke $r4.<java.lang.String: byte[] getBytes()>();

        $r6 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r5);

        $i1 = virtualinvoke $r6.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int consCmd> = $i1;

        $r7 = "crst";

        $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();

        $r9 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r8);

        $i2 = virtualinvoke $r9.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int crstCmd> = $i2;

        $r10 = "dump";

        $r11 = virtualinvoke $r10.<java.lang.String: byte[] getBytes()>();

        $r12 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r11);

        $i3 = virtualinvoke $r12.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int dumpCmd> = $i3;

        $r13 = "envi";

        $r14 = virtualinvoke $r13.<java.lang.String: byte[] getBytes()>();

        $r15 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r14);

        $i4 = virtualinvoke $r15.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int enviCmd> = $i4;

        $r16 = "gtmk";

        $r17 = virtualinvoke $r16.<java.lang.String: byte[] getBytes()>();

        $r18 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r17);

        $i5 = virtualinvoke $r18.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int getTraceMaskCmd> = $i5;

        $r19 = "ruok";

        $r20 = virtualinvoke $r19.<java.lang.String: byte[] getBytes()>();

        $r21 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r20);

        $i6 = virtualinvoke $r21.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int ruokCmd> = $i6;

        $r22 = "stmk";

        $r23 = virtualinvoke $r22.<java.lang.String: byte[] getBytes()>();

        $r24 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r23);

        $i7 = virtualinvoke $r24.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int setTraceMaskCmd> = $i7;

        $r25 = "srvr";

        $r26 = virtualinvoke $r25.<java.lang.String: byte[] getBytes()>();

        $r27 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r26);

        $i8 = virtualinvoke $r27.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int srvrCmd> = $i8;

        $r28 = "srst";

        $r29 = virtualinvoke $r28.<java.lang.String: byte[] getBytes()>();

        $r30 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r29);

        $i9 = virtualinvoke $r30.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int srstCmd> = $i9;

        $r31 = "stat";

        $r32 = virtualinvoke $r31.<java.lang.String: byte[] getBytes()>();

        $r33 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r32);

        $i10 = virtualinvoke $r33.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int statCmd> = $i10;

        $r34 = "wchc";

        $r35 = virtualinvoke $r34.<java.lang.String: byte[] getBytes()>();

        $r36 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r35);

        $i11 = virtualinvoke $r36.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int wchcCmd> = $i11;

        $r37 = "wchp";

        $r38 = virtualinvoke $r37.<java.lang.String: byte[] getBytes()>();

        $r39 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r38);

        $i12 = virtualinvoke $r39.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int wchpCmd> = $i12;

        $r40 = "wchs";

        $r41 = virtualinvoke $r40.<java.lang.String: byte[] getBytes()>();

        $r42 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r41);

        $i13 = virtualinvoke $r42.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int wchsCmd> = $i13;

        $r43 = "mntr";

        $r44 = virtualinvoke $r43.<java.lang.String: byte[] getBytes()>();

        $r45 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r44);

        $i14 = virtualinvoke $r45.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int mntrCmd> = $i14;

        $r46 = "isro";

        $r47 = virtualinvoke $r46.<java.lang.String: byte[] getBytes()>();

        $r48 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>($r47);

        $i15 = virtualinvoke $r48.<java.nio.ByteBuffer: int getInt()>();

        <org.apache.zookeeper.server.ServerCnxn: int isroCmd> = $i15;

        $r49 = new java.util.HashMap;

        specialinvoke $r49.<java.util.HashMap: void <init>()>();

        <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String> = $r49;

        $r50 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i16 = <org.apache.zookeeper.server.ServerCnxn: int confCmd>;

        $r51 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i16);

        virtualinvoke $r50.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r51, "conf");

        $r52 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i17 = <org.apache.zookeeper.server.ServerCnxn: int consCmd>;

        $r53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i17);

        virtualinvoke $r52.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r53, "cons");

        $r54 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i18 = <org.apache.zookeeper.server.ServerCnxn: int crstCmd>;

        $r55 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i18);

        virtualinvoke $r54.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r55, "crst");

        $r56 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i19 = <org.apache.zookeeper.server.ServerCnxn: int dumpCmd>;

        $r57 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i19);

        virtualinvoke $r56.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r57, "dump");

        $r58 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i20 = <org.apache.zookeeper.server.ServerCnxn: int enviCmd>;

        $r59 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i20);

        virtualinvoke $r58.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r59, "envi");

        $r60 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i21 = <org.apache.zookeeper.server.ServerCnxn: int getTraceMaskCmd>;

        $r61 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i21);

        virtualinvoke $r60.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r61, "gtmk");

        $r62 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i22 = <org.apache.zookeeper.server.ServerCnxn: int ruokCmd>;

        $r63 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i22);

        virtualinvoke $r62.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r63, "ruok");

        $r64 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i23 = <org.apache.zookeeper.server.ServerCnxn: int setTraceMaskCmd>;

        $r65 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i23);

        virtualinvoke $r64.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r65, "stmk");

        $r66 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i24 = <org.apache.zookeeper.server.ServerCnxn: int srstCmd>;

        $r67 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i24);

        virtualinvoke $r66.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r67, "srst");

        $r68 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i25 = <org.apache.zookeeper.server.ServerCnxn: int srvrCmd>;

        $r69 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i25);

        virtualinvoke $r68.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r69, "srvr");

        $r70 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i26 = <org.apache.zookeeper.server.ServerCnxn: int statCmd>;

        $r71 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i26);

        virtualinvoke $r70.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r71, "stat");

        $r72 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i27 = <org.apache.zookeeper.server.ServerCnxn: int wchcCmd>;

        $r73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i27);

        virtualinvoke $r72.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r73, "wchc");

        $r74 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i28 = <org.apache.zookeeper.server.ServerCnxn: int wchpCmd>;

        $r75 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i28);

        virtualinvoke $r74.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r75, "wchp");

        $r76 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i29 = <org.apache.zookeeper.server.ServerCnxn: int wchsCmd>;

        $r77 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i29);

        virtualinvoke $r76.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r77, "wchs");

        $r78 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i30 = <org.apache.zookeeper.server.ServerCnxn: int mntrCmd>;

        $r79 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i30);

        virtualinvoke $r78.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r79, "mntr");

        $r80 = <org.apache.zookeeper.server.ServerCnxn: java.util.HashMap cmd2String>;

        $i31 = <org.apache.zookeeper.server.ServerCnxn: int isroCmd>;

        $r81 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i31);

        virtualinvoke $r80.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r81, "isro");

        return;
    }
}
