public final class com.mycila.inject.internal.guava.base.Ascii extends java.lang.Object
{
    public static final byte NUL;
    public static final byte SOH;
    public static final byte STX;
    public static final byte ETX;
    public static final byte EOT;
    public static final byte ENQ;
    public static final byte ACK;
    public static final byte BEL;
    public static final byte BS;
    public static final byte HT;
    public static final byte LF;
    public static final byte NL;
    public static final byte VT;
    public static final byte FF;
    public static final byte CR;
    public static final byte SO;
    public static final byte SI;
    public static final byte DLE;
    public static final byte DC1;
    public static final byte XON;
    public static final byte DC2;
    public static final byte DC3;
    public static final byte XOFF;
    public static final byte DC4;
    public static final byte NAK;
    public static final byte SYN;
    public static final byte ETB;
    public static final byte CAN;
    public static final byte EM;
    public static final byte SUB;
    public static final byte ESC;
    public static final byte FS;
    public static final byte GS;
    public static final byte RS;
    public static final byte US;
    public static final byte SP;
    public static final byte SPACE;
    public static final byte DEL;
    public static final int MIN;
    public static final int MAX;

    private void <init>()
    {
        com.mycila.inject.internal.guava.base.Ascii r0;

        r0 := @this: com.mycila.inject.internal.guava.base.Ascii;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String toLowerCase(java.lang.String)
    {
        int $i0, i3;
        java.lang.StringBuilder $r1;
        char $c1, $c2;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        i3 = 0;

     label1:
        if i3 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $c2 = staticinvoke <com.mycila.inject.internal.guava.base.Ascii: char toLowerCase(char)>($c1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static char toLowerCase(char)
    {
        char c0, $c1, $c2;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <com.mycila.inject.internal.guava.base.Ascii: boolean isUpperCase(char)>(c0);

        if $z0 == 0 goto label1;

        $c1 = c0 ^ 32;

        $c2 = (char) $c1;

        goto label2;

     label1:
        $c2 = c0;

     label2:
        return $c2;
    }

    public static java.lang.String toUpperCase(java.lang.String)
    {
        int $i0, i3;
        java.lang.StringBuilder $r1;
        char $c1, $c2;
        java.lang.String r0, $r2;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>(int)>($i0);

        i3 = 0;

     label1:
        if i3 >= $i0 goto label2;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i3);

        $c2 = staticinvoke <com.mycila.inject.internal.guava.base.Ascii: char toUpperCase(char)>($c1);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c2);

        i3 = i3 + 1;

        goto label1;

     label2:
        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public static char toUpperCase(char)
    {
        char c0, $c1, $c2;
        boolean $z0;

        c0 := @parameter0: char;

        $z0 = staticinvoke <com.mycila.inject.internal.guava.base.Ascii: boolean isLowerCase(char)>(c0);

        if $z0 == 0 goto label1;

        $c1 = c0 & 95;

        $c2 = (char) $c1;

        goto label2;

     label1:
        $c2 = c0;

     label2:
        return $c2;
    }

    public static boolean isLowerCase(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 97 goto label1;

        $i2 = (int) c0;

        if $i2 > 122 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static boolean isUpperCase(char)
    {
        int $i1, $i2;
        char c0;
        boolean $z0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        if $i1 < 65 goto label1;

        $i2 = (int) c0;

        if $i2 > 90 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public static void <clinit>()
    {
        <com.mycila.inject.internal.guava.base.Ascii: int MAX> = 127;

        <com.mycila.inject.internal.guava.base.Ascii: int MIN> = 0;

        <com.mycila.inject.internal.guava.base.Ascii: byte DEL> = 127;

        <com.mycila.inject.internal.guava.base.Ascii: byte SPACE> = 32;

        <com.mycila.inject.internal.guava.base.Ascii: byte SP> = 32;

        <com.mycila.inject.internal.guava.base.Ascii: byte US> = 31;

        <com.mycila.inject.internal.guava.base.Ascii: byte RS> = 30;

        <com.mycila.inject.internal.guava.base.Ascii: byte GS> = 29;

        <com.mycila.inject.internal.guava.base.Ascii: byte FS> = 28;

        <com.mycila.inject.internal.guava.base.Ascii: byte ESC> = 27;

        <com.mycila.inject.internal.guava.base.Ascii: byte SUB> = 26;

        <com.mycila.inject.internal.guava.base.Ascii: byte EM> = 25;

        <com.mycila.inject.internal.guava.base.Ascii: byte CAN> = 24;

        <com.mycila.inject.internal.guava.base.Ascii: byte ETB> = 23;

        <com.mycila.inject.internal.guava.base.Ascii: byte SYN> = 22;

        <com.mycila.inject.internal.guava.base.Ascii: byte NAK> = 21;

        <com.mycila.inject.internal.guava.base.Ascii: byte DC4> = 20;

        <com.mycila.inject.internal.guava.base.Ascii: byte XOFF> = 19;

        <com.mycila.inject.internal.guava.base.Ascii: byte DC3> = 19;

        <com.mycila.inject.internal.guava.base.Ascii: byte DC2> = 18;

        <com.mycila.inject.internal.guava.base.Ascii: byte XON> = 17;

        <com.mycila.inject.internal.guava.base.Ascii: byte DC1> = 17;

        <com.mycila.inject.internal.guava.base.Ascii: byte DLE> = 16;

        <com.mycila.inject.internal.guava.base.Ascii: byte SI> = 15;

        <com.mycila.inject.internal.guava.base.Ascii: byte SO> = 14;

        <com.mycila.inject.internal.guava.base.Ascii: byte CR> = 13;

        <com.mycila.inject.internal.guava.base.Ascii: byte FF> = 12;

        <com.mycila.inject.internal.guava.base.Ascii: byte VT> = 11;

        <com.mycila.inject.internal.guava.base.Ascii: byte NL> = 10;

        <com.mycila.inject.internal.guava.base.Ascii: byte LF> = 10;

        <com.mycila.inject.internal.guava.base.Ascii: byte HT> = 9;

        <com.mycila.inject.internal.guava.base.Ascii: byte BS> = 8;

        <com.mycila.inject.internal.guava.base.Ascii: byte BEL> = 7;

        <com.mycila.inject.internal.guava.base.Ascii: byte ACK> = 6;

        <com.mycila.inject.internal.guava.base.Ascii: byte ENQ> = 5;

        <com.mycila.inject.internal.guava.base.Ascii: byte EOT> = 4;

        <com.mycila.inject.internal.guava.base.Ascii: byte ETX> = 3;

        <com.mycila.inject.internal.guava.base.Ascii: byte STX> = 2;

        <com.mycila.inject.internal.guava.base.Ascii: byte SOH> = 1;

        <com.mycila.inject.internal.guava.base.Ascii: byte NUL> = 0;

        return;
    }
}
