public class de.l3s.boilerpipe.util.UnicodeTokenizer extends java.lang.Object
{
    private static final java.util.regex.Pattern PAT_WORD_BOUNDARY;
    private static final java.util.regex.Pattern PAT_NOT_WORD_BOUNDARY;

    public void <init>()
    {
        de.l3s.boilerpipe.util.UnicodeTokenizer r0;

        r0 := @this: de.l3s.boilerpipe.util.UnicodeTokenizer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String[] tokenize(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        java.lang.String[] $r9;
        java.util.regex.Matcher $r3, $r5;
        java.util.regex.Pattern $r1, $r2;
        java.lang.String $r4, $r6, $r7, $r8;

        r0 := @parameter0: java.lang.CharSequence;

        $r2 = <de.l3s.boilerpipe.util.UnicodeTokenizer: java.util.regex.Pattern PAT_NOT_WORD_BOUNDARY>;

        $r1 = <de.l3s.boilerpipe.util.UnicodeTokenizer: java.util.regex.Pattern PAT_WORD_BOUNDARY>;

        $r3 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $r4 = virtualinvoke $r3.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("\u2063");

        $r5 = virtualinvoke $r2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4);

        $r6 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>("$1");

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("[ \u2063]+", " ");

        $r8 = virtualinvoke $r7.<java.lang.String: java.lang.String trim()>();

        $r9 = virtualinvoke $r8.<java.lang.String: java.lang.String[] split(java.lang.String)>("[ ]+");

        return $r9;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0, $r1;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\b");

        <de.l3s.boilerpipe.util.UnicodeTokenizer: java.util.regex.Pattern PAT_WORD_BOUNDARY> = $r0;

        $r1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\u2063]*([\\\"\'\\.,\\!\\@\\-\\:\\;\\$\\?\\(\\)/])[\u2063]*");

        <de.l3s.boilerpipe.util.UnicodeTokenizer: java.util.regex.Pattern PAT_NOT_WORD_BOUNDARY> = $r1;

        return;
    }
}
