public final class org.apache.lucene.analysis.reverse.ReverseStringFilter extends org.apache.lucene.analysis.TokenFilter
{
    private final org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt;
    private final char marker;
    private final org.apache.lucene.util.Version matchVersion;
    private static final char NOMARKER;
    public static final char START_OF_HEADING_MARKER;
    public static final char INFORMATION_SEPARATOR_MARKER;
    public static final char PUA_EC00_MARKER;
    public static final char RTL_DIRECTION_MARKER;

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.TokenStream)
    {
        org.apache.lucene.analysis.TokenStream r2;
        org.apache.lucene.analysis.reverse.ReverseStringFilter r0;
        org.apache.lucene.util.Version r1;

        r0 := @this: org.apache.lucene.analysis.reverse.ReverseStringFilter;

        r1 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: org.apache.lucene.analysis.TokenStream;

        specialinvoke r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: void <init>(org.apache.lucene.util.Version,org.apache.lucene.analysis.TokenStream,char)>(r1, r2, 65535);

        return;
    }

    public void <init>(org.apache.lucene.util.Version, org.apache.lucene.analysis.TokenStream, char)
    {
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r3;
        org.apache.lucene.analysis.TokenStream r1;
        char c0;
        org.apache.lucene.util.Attribute $r2;
        org.apache.lucene.analysis.reverse.ReverseStringFilter r0;
        org.apache.lucene.util.Version r4;

        r0 := @this: org.apache.lucene.analysis.reverse.ReverseStringFilter;

        r4 := @parameter0: org.apache.lucene.util.Version;

        r1 := @parameter1: org.apache.lucene.analysis.TokenStream;

        c0 := @parameter2: char;

        specialinvoke r0.<org.apache.lucene.analysis.TokenFilter: void <init>(org.apache.lucene.analysis.TokenStream)>(r1);

        $r2 = virtualinvoke r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.util.Attribute addAttribute(java.lang.Class)>(class "Lorg/apache/lucene/analysis/tokenattributes/CharTermAttribute;");

        $r3 = (org.apache.lucene.analysis.tokenattributes.CharTermAttribute) $r2;

        r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt> = $r3;

        r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.util.Version matchVersion> = r4;

        r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: char marker> = c0;

        return;
    }

    public boolean incrementToken() throws java.io.IOException
    {
        int $i0, $i3, i4, $i5, $i7;
        boolean $z0;
        org.apache.lucene.analysis.tokenattributes.CharTermAttribute $r2, $r3, $r6, $r7, $r8;
        org.apache.lucene.analysis.TokenStream $r1;
        char $c1, $c2;
        org.apache.lucene.util.Version $r4;
        char[] $r5, $r9;
        org.apache.lucene.analysis.reverse.ReverseStringFilter r0;

        r0 := @this: org.apache.lucene.analysis.reverse.ReverseStringFilter;

        $r1 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.TokenStream input>;

        $z0 = virtualinvoke $r1.<org.apache.lucene.analysis.TokenStream: boolean incrementToken()>();

        if $z0 == 0 goto label2;

        $r2 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $i0 = interfaceinvoke $r2.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: int length()>();

        i4 = $i0;

        $c1 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: char marker>;

        $i5 = (int) $c1;

        $i7 = (int) 65535;

        if $i5 == $i7 goto label1;

        i4 = $i0 + 1;

        $r7 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r7.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] resizeBuffer(int)>(i4);

        $r8 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r9 = interfaceinvoke $r8.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        $i3 = i4 - 1;

        $c2 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: char marker>;

        $r9[$i3] = $c2;

     label1:
        $r4 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.util.Version matchVersion>;

        $r3 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        $r5 = interfaceinvoke $r3.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: char[] buffer()>();

        staticinvoke <org.apache.lucene.analysis.reverse.ReverseStringFilter: void reverse(org.apache.lucene.util.Version,char[],int,int)>($r4, $r5, 0, i4);

        $r6 = r0.<org.apache.lucene.analysis.reverse.ReverseStringFilter: org.apache.lucene.analysis.tokenattributes.CharTermAttribute termAtt>;

        interfaceinvoke $r6.<org.apache.lucene.analysis.tokenattributes.CharTermAttribute: org.apache.lucene.analysis.tokenattributes.CharTermAttribute setLength(int)>(i4);

        return 1;

     label2:
        return 0;
    }

    public static java.lang.String reverse(org.apache.lucene.util.Version, java.lang.String)
    {
        int $i0;
        char[] $r1;
        java.lang.String r0, $r3;
        org.apache.lucene.util.Version r2;

        r2 := @parameter0: org.apache.lucene.util.Version;

        r0 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i0 = lengthof $r1;

        staticinvoke <org.apache.lucene.analysis.reverse.ReverseStringFilter: void reverse(org.apache.lucene.util.Version,char[],int,int)>(r2, $r1, 0, $i0);

        $r3 = new java.lang.String;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r1);

        return $r3;
    }

    public static void reverse(org.apache.lucene.util.Version, char[])
    {
        int $i0;
        char[] r1;
        org.apache.lucene.util.Version r0;

        r0 := @parameter0: org.apache.lucene.util.Version;

        r1 := @parameter1: char[];

        $i0 = lengthof r1;

        staticinvoke <org.apache.lucene.analysis.reverse.ReverseStringFilter: void reverse(org.apache.lucene.util.Version,char[],int,int)>(r0, r1, 0, $i0);

        return;
    }

    public static void reverse(org.apache.lucene.util.Version, char[], int)
    {
        int i0;
        char[] r1;
        org.apache.lucene.util.Version r0;

        r0 := @parameter0: org.apache.lucene.util.Version;

        r1 := @parameter1: char[];

        i0 := @parameter2: int;

        staticinvoke <org.apache.lucene.analysis.reverse.ReverseStringFilter: void reverse(org.apache.lucene.util.Version,char[],int,int)>(r0, r1, 0, i0);

        return;
    }

    private static void reverseUnicode3(char[], int, int)
    {
        int i0, i1, i2, $i3, $i5, $i6, $i7, $i8, $i10, $i11, $i12, $i13, i14;
        char c4, $c9;
        char[] r0;

        r0 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        if i0 > 1 goto label1;

        return;

     label1:
        i1 = i0 >> 1;

        i14 = i2;

     label2:
        $i3 = i2 + i1;

        if i14 >= $i3 goto label3;

        c4 = r0[i14];

        $i5 = i2 * 2;

        $i6 = $i5 + i0;

        $i7 = $i6 - i14;

        $i8 = $i7 - 1;

        $c9 = r0[$i8];

        r0[i14] = $c9;

        $i10 = i2 * 2;

        $i11 = $i10 + i0;

        $i12 = $i11 - i14;

        $i13 = $i12 - 1;

        r0[$i13] = c4;

        i14 = i14 + 1;

        goto label2;

     label3:
        return;
    }

    public static void reverse(org.apache.lucene.util.Version, char[], int, int)
    {
        boolean $z0, z1, $z2, $z3, z4, z5, $z7, z8, z9, z10, z11, z12, $z13, $z14;
        int i0, i1, $i2, $i3, i4, $i5, $i6, $i7, $i9, $i11, $i12, i13, i16, $i19, $i21;
        char c8, c10, c14, c15, $c17;
        org.apache.lucene.util.Version r0, $r1;
        char[] r2;

        r0 := @parameter0: org.apache.lucene.util.Version;

        r2 := @parameter1: char[];

        i1 := @parameter2: int;

        i0 := @parameter3: int;

        $r1 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $z0 = virtualinvoke r0.<org.apache.lucene.util.Version: boolean onOrAfter(org.apache.lucene.util.Version)>($r1);

        if $z0 != 0 goto label01;

        staticinvoke <org.apache.lucene.analysis.reverse.ReverseStringFilter: void reverseUnicode3(char[],int,int)>(r2, i1, i0);

        return;

     label01:
        if i0 >= 2 goto label02;

        return;

     label02:
        $i2 = i1 + i0;

        i13 = $i2 - 1;

        c14 = r2[i1];

        c15 = r2[i13];

        z4 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

        z5 = 1;

        z12 = 1;

        z11 = 1;

        $i3 = i0 >> 1;

        i4 = i1 + $i3;

        i16 = i1;

     label03:
        if i16 >= i4 goto label13;

        $i7 = i16 + 1;

        c8 = r2[$i7];

        $i9 = i13 - 1;

        c10 = r2[$i9];

        if z10 == 0 goto label04;

        $z3 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>(c14, c8);

        if $z3 == 0 goto label04;

        $z14 = 1;

        $z13 = 1;

        goto label05;

     label04:
        $z14 = 0;

        $z13 = 0;

     label05:
        z1 = $z13;

        if $z14 == 0 goto label06;

        if i0 >= 3 goto label06;

        return;

     label06:
        if z12 == 0 goto label07;

        $z2 = staticinvoke <java.lang.Character: boolean isSurrogatePair(char,char)>(c10, c15);

        if $z2 == 0 goto label07;

        $z7 = 1;

        goto label08;

     label07:
        $z7 = 0;

     label08:
        z5 = 1;

        z12 = 1;

        z11 = 1;

        z4 = 1;

        z10 = 1;

        z9 = 1;

        z8 = 1;

        if z1 != $z7 goto label10;

        if z1 == 0 goto label09;

        r2[i13] = c8;

        $i19 = (int) -1;

        i13 = i13 + $i19;

        r2[i13] = c14;

        r2[i16] = c10;

        i16 = i16 + 1;

        r2[i16] = c15;

        $i11 = i16 + 1;

        c14 = r2[$i11];

        $i12 = i13 - 1;

        c15 = r2[$i12];

        goto label12;

     label09:
        r2[i13] = c14;

        r2[i16] = c15;

        c14 = c8;

        c15 = c10;

        goto label12;

     label10:
        if z1 == 0 goto label11;

        r2[i13] = c8;

        r2[i16] = c15;

        c15 = c10;

        z4 = 0;

        z10 = 0;

        z9 = 0;

        z8 = 0;

        goto label12;

     label11:
        r2[i13] = c14;

        r2[i16] = c10;

        c14 = c8;

        z5 = 0;

        z12 = 0;

        z11 = 0;

     label12:
        i16 = i16 + 1;

        $i21 = (int) -1;

        i13 = i13 + $i21;

        goto label03;

     label13:
        $i5 = i0 & 1;

        if $i5 != 1 goto label17;

        if z8 == 0 goto label14;

        if z11 != 0 goto label17;

     label14:
        $i6 = i13;

        if z9 == 0 goto label15;

        $c17 = c15;

        goto label16;

     label15:
        $c17 = c14;

     label16:
        r2[$i6] = $c17;

     label17:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.lucene.analysis.reverse.ReverseStringFilter: char RTL_DIRECTION_MARKER> = 8207;

        <org.apache.lucene.analysis.reverse.ReverseStringFilter: char PUA_EC00_MARKER> = 60416;

        <org.apache.lucene.analysis.reverse.ReverseStringFilter: char INFORMATION_SEPARATOR_MARKER> = 31;

        <org.apache.lucene.analysis.reverse.ReverseStringFilter: char START_OF_HEADING_MARKER> = 1;

        <org.apache.lucene.analysis.reverse.ReverseStringFilter: char NOMARKER> = 65535;

        return;
    }
}
