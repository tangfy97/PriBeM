public class org.apache.solr.common.cloud.ImplicitDocRouter extends org.apache.solr.common.cloud.DocRouter
{
    public static final java.lang.String NAME;

    public void <init>()
    {
        org.apache.solr.common.cloud.ImplicitDocRouter r0;

        r0 := @this: org.apache.solr.common.cloud.ImplicitDocRouter;

        specialinvoke r0.<org.apache.solr.common.cloud.DocRouter: void <init>()>();

        return;
    }

    public org.apache.solr.common.cloud.Slice getTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)
    {
        org.apache.solr.common.cloud.DocCollection r1;
        org.apache.solr.common.cloud.ImplicitDocRouter r13;
        org.apache.solr.common.params.SolrParams r11;
        org.apache.solr.common.SolrException $r3;
        java.lang.String $r10, r14, r15;
        org.apache.solr.common.cloud.Slice $r2;
        org.apache.solr.common.SolrException$ErrorCode $r5;
        java.lang.StringBuilder $r4, $r6, $r7, $r8, $r9;
        java.lang.Object $r12;
        org.apache.solr.common.SolrInputDocument r0;

        r13 := @this: org.apache.solr.common.cloud.ImplicitDocRouter;

        r14 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.solr.common.SolrInputDocument;

        r11 := @parameter2: org.apache.solr.common.params.SolrParams;

        r1 := @parameter3: org.apache.solr.common.cloud.DocCollection;

        r15 = null;

        if r0 == null goto label1;

        $r12 = virtualinvoke r0.<org.apache.solr.common.SolrInputDocument: java.lang.Object getFieldValue(java.lang.String)>("_shard_");

        if $r12 == null goto label1;

        r15 = virtualinvoke $r12.<java.lang.Object: java.lang.String toString()>();

     label1:
        if r15 != null goto label2;

        r15 = virtualinvoke r11.<org.apache.solr.common.params.SolrParams: java.lang.String get(java.lang.String)>("_shard_");

     label2:
        if r15 == null goto label4;

        $r2 = virtualinvoke r1.<org.apache.solr.common.cloud.DocCollection: org.apache.solr.common.cloud.Slice getSlice(java.lang.String)>(r15);

        if $r2 != null goto label3;

        $r3 = new org.apache.solr.common.SolrException;

        $r5 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("No _shard_=");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r15);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r5, $r10);

        throw $r3;

     label3:
        return $r2;

     label4:
        return null;
    }

    public boolean isTargetSlice(java.lang.String, org.apache.solr.common.SolrInputDocument, org.apache.solr.common.params.SolrParams, java.lang.String, org.apache.solr.common.cloud.DocCollection)
    {
        org.apache.solr.common.cloud.DocCollection r5;
        org.apache.solr.common.cloud.ImplicitDocRouter r0;
        java.lang.String r1, r4;
        org.apache.solr.common.params.SolrParams r3;
        org.apache.solr.common.SolrInputDocument r2;

        r0 := @this: org.apache.solr.common.cloud.ImplicitDocRouter;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.solr.common.SolrInputDocument;

        r3 := @parameter2: org.apache.solr.common.params.SolrParams;

        r4 := @parameter3: java.lang.String;

        r5 := @parameter4: org.apache.solr.common.cloud.DocCollection;

        return 0;
    }

    public java.util.Collection getSearchSlicesSingle(java.lang.String, org.apache.solr.common.params.SolrParams, org.apache.solr.common.cloud.DocCollection)
    {
        org.apache.solr.common.cloud.DocCollection r1;
        org.apache.solr.common.cloud.ImplicitDocRouter r14;
        org.apache.solr.common.params.SolrParams r15;
        org.apache.solr.common.SolrException $r4;
        java.lang.String r0, $r10, $r12;
        org.apache.solr.common.cloud.Slice $r2;
        java.util.Collection $r13;
        java.util.Set $r3;
        org.apache.solr.common.SolrException$ErrorCode $r6;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r11;

        r14 := @this: org.apache.solr.common.cloud.ImplicitDocRouter;

        r0 := @parameter0: java.lang.String;

        r15 := @parameter1: org.apache.solr.common.params.SolrParams;

        r1 := @parameter2: org.apache.solr.common.cloud.DocCollection;

        if r0 != null goto label1;

        $r13 = virtualinvoke r1.<org.apache.solr.common.cloud.DocCollection: java.util.Collection getActiveSlices()>();

        return $r13;

     label1:
        $r2 = virtualinvoke r1.<org.apache.solr.common.cloud.DocCollection: org.apache.solr.common.cloud.Slice getSlice(java.lang.String)>(r0);

        if $r2 != null goto label2;

        $r4 = new org.apache.solr.common.SolrException;

        $r6 = <org.apache.solr.common.SolrException$ErrorCode: org.apache.solr.common.SolrException$ErrorCode BAD_REQUEST>;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("implicit router can\'t find shard ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in collection ");

        $r10 = virtualinvoke r1.<org.apache.solr.common.cloud.DocCollection: java.lang.String getName()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.solr.common.SolrException: void <init>(org.apache.solr.common.SolrException$ErrorCode,java.lang.String)>($r6, $r12);

        throw $r4;

     label2:
        $r3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>($r2);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.solr.common.cloud.ImplicitDocRouter: java.lang.String NAME> = "implicit";

        return;
    }
}
