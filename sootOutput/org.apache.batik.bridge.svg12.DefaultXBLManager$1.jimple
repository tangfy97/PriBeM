class org.apache.batik.bridge.svg12.DefaultXBLManager$1 extends java.lang.Object implements org.w3c.dom.NodeList
{
    private final java.lang.String val$namespaceURI;
    private final java.lang.String val$localName;
    private final org.apache.batik.bridge.svg12.DefaultXBLManager this$0;

    void <init>(org.apache.batik.bridge.svg12.DefaultXBLManager, java.lang.String, java.lang.String)
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager r1;
        java.lang.String r2, r3;
        org.apache.batik.bridge.svg12.DefaultXBLManager$1 r0;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$1;

        r1 := @parameter0: org.apache.batik.bridge.svg12.DefaultXBLManager;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: org.apache.batik.bridge.svg12.DefaultXBLManager this$0> = r1;

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: java.lang.String val$namespaceURI> = r2;

        r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: java.lang.String val$localName> = r3;

        return;
    }

    public org.w3c.dom.Node item(int)
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager $r1;
        org.apache.batik.util.DoublyIndexedTable $r4;
        org.apache.batik.dom.svg12.XBLOMDefinitionElement $r9;
        java.util.TreeSet r6;
        org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord r8;
        int $i0, i1;
        java.lang.Object $r5, $r7;
        java.lang.String $r2, $r3;
        org.apache.batik.bridge.svg12.DefaultXBLManager$1 r0;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$1;

        i1 := @parameter0: int;

        $r1 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: org.apache.batik.bridge.svg12.DefaultXBLManager this$0>;

        $r4 = $r1.<org.apache.batik.bridge.svg12.DefaultXBLManager: org.apache.batik.util.DoublyIndexedTable definitionLists>;

        $r3 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: java.lang.String val$namespaceURI>;

        $r2 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: java.lang.String val$localName>;

        $r5 = virtualinvoke $r4.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object get(java.lang.Object,java.lang.Object)>($r3, $r2);

        r6 = (java.util.TreeSet) $r5;

        if r6 == null goto label1;

        $i0 = virtualinvoke r6.<java.util.TreeSet: int size()>();

        if $i0 == 0 goto label1;

        if i1 != 0 goto label1;

        $r7 = virtualinvoke r6.<java.util.TreeSet: java.lang.Object first()>();

        r8 = (org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord) $r7;

        $r9 = r8.<org.apache.batik.bridge.svg12.DefaultXBLManager$DefinitionRecord: org.apache.batik.dom.svg12.XBLOMDefinitionElement definition>;

        return $r9;

     label1:
        return null;
    }

    public int getLength()
    {
        org.apache.batik.bridge.svg12.DefaultXBLManager $r1;
        org.apache.batik.util.DoublyIndexedTable $r4;
        java.util.TreeSet r6;
        byte $b1;
        int $i0;
        java.lang.Object $r5;
        java.lang.String $r2, $r3;
        org.apache.batik.bridge.svg12.DefaultXBLManager$1 r0;

        r0 := @this: org.apache.batik.bridge.svg12.DefaultXBLManager$1;

        $r1 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: org.apache.batik.bridge.svg12.DefaultXBLManager this$0>;

        $r4 = $r1.<org.apache.batik.bridge.svg12.DefaultXBLManager: org.apache.batik.util.DoublyIndexedTable definitionLists>;

        $r3 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: java.lang.String val$namespaceURI>;

        $r2 = r0.<org.apache.batik.bridge.svg12.DefaultXBLManager$1: java.lang.String val$localName>;

        $r5 = virtualinvoke $r4.<org.apache.batik.util.DoublyIndexedTable: java.lang.Object get(java.lang.Object,java.lang.Object)>($r3, $r2);

        r6 = (java.util.TreeSet) $r5;

        if r6 == null goto label1;

        $i0 = interfaceinvoke r6.<java.util.Set: int size()>();

        if $i0 == 0 goto label1;

        $b1 = 1;

        goto label2;

     label1:
        $b1 = 0;

     label2:
        return $b1;
    }
}
