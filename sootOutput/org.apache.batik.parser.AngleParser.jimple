public class org.apache.batik.parser.AngleParser extends org.apache.batik.parser.NumberParser
{
    protected org.apache.batik.parser.AngleHandler angleHandler;

    public void <init>()
    {
        org.apache.batik.parser.AngleParser r0;
        org.apache.batik.parser.AngleHandler $r1;

        r0 := @this: org.apache.batik.parser.AngleParser;

        specialinvoke r0.<org.apache.batik.parser.NumberParser: void <init>()>();

        $r1 = <org.apache.batik.parser.DefaultAngleHandler: org.apache.batik.parser.AngleHandler INSTANCE>;

        r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler> = $r1;

        return;
    }

    public void setAngleHandler(org.apache.batik.parser.AngleHandler)
    {
        org.apache.batik.parser.AngleParser r0;
        org.apache.batik.parser.AngleHandler r1;

        r0 := @this: org.apache.batik.parser.AngleParser;

        r1 := @parameter0: org.apache.batik.parser.AngleHandler;

        r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler> = r1;

        return;
    }

    public org.apache.batik.parser.AngleHandler getAngleHandler()
    {
        org.apache.batik.parser.AngleParser r0;
        org.apache.batik.parser.AngleHandler $r1;

        r0 := @this: org.apache.batik.parser.AngleParser;

        $r1 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        return $r1;
    }

    protected void doParse() throws org.apache.batik.parser.ParseException, java.io.IOException
    {
        org.apache.batik.parser.AngleParser r0;
        java.lang.Integer $r21;
        float $f0;
        java.lang.Object[] $r5;
        org.apache.batik.util.io.NormalizingReader $r2, $r7, $r8, $r10, $r11, $r12, $r13, $r15, $r16, $r17, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31, $i33, $i35;
        java.lang.NumberFormatException $r20;
        org.apache.batik.parser.AngleHandler $r1, $r3, $r4, $r9, $r14, $r18;

        r0 := @this: org.apache.batik.parser.AngleParser;

        $r1 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        interfaceinvoke $r1.<org.apache.batik.parser.AngleHandler: void startAngle()>();

        $r2 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i0 = virtualinvoke $r2.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i0;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

     label01:
        $f0 = virtualinvoke r0.<org.apache.batik.parser.NumberParser: float parseFloat()>();

        $r3 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        interfaceinvoke $r3.<org.apache.batik.parser.AngleHandler: void angleValue(float)>($f0);

        $i1 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i33 = (int) -1;

        if $i1 == $i33 goto label15;

        $i3 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i3)
        {
            case 9: goto label02;
            case 10: goto label02;
            case 13: goto label02;
            case 32: goto label02;
            default: goto label03;
        };

     label02:
        goto label15;

     label03:
        $i4 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        lookupswitch($i4)
        {
            case 100: goto label04;
            case 103: goto label07;
            case 114: goto label11;
            default: goto label14;
        };

     label04:
        $r16 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i22 = virtualinvoke $r16.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i22;

        $i23 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i23 == 101 goto label05;

        $i28 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(101, $i28);

        goto label15;

     label05:
        $r17 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i24 = virtualinvoke $r17.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i24;

        $i25 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i25 == 103 goto label06;

        $i27 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(103, $i27);

        goto label15;

     label06:
        $r18 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        interfaceinvoke $r18.<org.apache.batik.parser.AngleHandler: void deg()>();

        $r19 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i26 = virtualinvoke $r19.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i26;

        goto label15;

     label07:
        $r11 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i12 = virtualinvoke $r11.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i12;

        $i13 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i13 == 114 goto label08;

        $i21 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(114, $i21);

        goto label15;

     label08:
        $r12 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i14 = virtualinvoke $r12.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i14;

        $i15 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i15 == 97 goto label09;

        $i20 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i20);

        goto label15;

     label09:
        $r13 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i16 = virtualinvoke $r13.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i16;

        $i17 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i17 == 100 goto label10;

        $i19 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(100, $i19);

        goto label15;

     label10:
        $r14 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        interfaceinvoke $r14.<org.apache.batik.parser.AngleHandler: void grad()>();

        $r15 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i18 = virtualinvoke $r15.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i18;

        goto label15;

     label11:
        $r7 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i5 = virtualinvoke $r7.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i5;

        $i6 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i6 == 97 goto label12;

        $i11 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(97, $i11);

        goto label15;

     label12:
        $r8 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i7 = virtualinvoke $r8.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i7;

        $i8 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        if $i8 == 100 goto label13;

        $i10 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportCharacterExpectedError(char,int)>(100, $i10);

        goto label15;

     label13:
        $r9 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        interfaceinvoke $r9.<org.apache.batik.parser.AngleHandler: void rad()>();

        $r10 = r0.<org.apache.batik.parser.AbstractParser: org.apache.batik.util.io.NormalizingReader reader>;

        $i9 = virtualinvoke $r10.<java.io.Reader: int read()>();

        r0.<org.apache.batik.parser.AbstractParser: int current> = $i9;

        goto label15;

     label14:
        $i29 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i29);

     label15:
        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void skipSpaces()>();

        $i31 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        $i35 = (int) -1;

        if $i31 == $i35 goto label16;

        $r5 = newarray (java.lang.Object)[1];

        $r21 = new java.lang.Integer;

        $i2 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        specialinvoke $r21.<java.lang.Integer: void <init>(int)>($i2);

        $r5[0] = $r21;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportError(java.lang.String,java.lang.Object[])>("end.of.stream.expected", $r5);

     label16:
        goto label18;

     label17:
        $r20 := @caughtexception;

        $i30 = r0.<org.apache.batik.parser.AbstractParser: int current>;

        virtualinvoke r0.<org.apache.batik.parser.AbstractParser: void reportUnexpectedCharacterError(int)>($i30);

     label18:
        $r4 = r0.<org.apache.batik.parser.AngleParser: org.apache.batik.parser.AngleHandler angleHandler>;

        interfaceinvoke $r4.<org.apache.batik.parser.AngleHandler: void endAngle()>();

        return;

        catch java.lang.NumberFormatException from label01 to label16 with label17;
    }
}
