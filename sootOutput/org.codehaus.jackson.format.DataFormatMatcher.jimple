public class org.codehaus.jackson.format.DataFormatMatcher extends java.lang.Object
{
    protected final java.io.InputStream _originalStream;
    protected final byte[] _bufferedData;
    protected final int _bufferedLength;
    protected final org.codehaus.jackson.JsonFactory _match;
    protected final org.codehaus.jackson.format.MatchStrength _matchStrength;

    protected void <init>(java.io.InputStream, byte[], int, org.codehaus.jackson.JsonFactory, org.codehaus.jackson.format.MatchStrength)
    {
        byte[] r2;
        org.codehaus.jackson.format.MatchStrength r4;
        int i0;
        org.codehaus.jackson.format.DataFormatMatcher r0;
        java.io.InputStream r1;
        org.codehaus.jackson.JsonFactory r3;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        r1 := @parameter0: java.io.InputStream;

        r2 := @parameter1: byte[];

        i0 := @parameter2: int;

        r3 := @parameter3: org.codehaus.jackson.JsonFactory;

        r4 := @parameter4: org.codehaus.jackson.format.MatchStrength;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.format.DataFormatMatcher: java.io.InputStream _originalStream> = r1;

        r0.<org.codehaus.jackson.format.DataFormatMatcher: byte[] _bufferedData> = r2;

        r0.<org.codehaus.jackson.format.DataFormatMatcher: int _bufferedLength> = i0;

        r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match> = r3;

        r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.format.MatchStrength _matchStrength> = r4;

        return;
    }

    public boolean hasMatch()
    {
        org.codehaus.jackson.format.DataFormatMatcher r0;
        org.codehaus.jackson.JsonFactory $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        $r1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public org.codehaus.jackson.format.MatchStrength getMatchStrength()
    {
        org.codehaus.jackson.format.DataFormatMatcher r0;
        org.codehaus.jackson.format.MatchStrength $r1, $r2;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        $r1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.format.MatchStrength _matchStrength>;

        if $r1 != null goto label1;

        $r2 = <org.codehaus.jackson.format.MatchStrength: org.codehaus.jackson.format.MatchStrength INCONCLUSIVE>;

        goto label2;

     label1:
        $r2 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.format.MatchStrength _matchStrength>;

     label2:
        return $r2;
    }

    public org.codehaus.jackson.JsonFactory getMatch()
    {
        org.codehaus.jackson.format.DataFormatMatcher r0;
        org.codehaus.jackson.JsonFactory $r1;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        $r1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match>;

        return $r1;
    }

    public java.lang.String getMatchedFormatName()
    {
        org.codehaus.jackson.format.DataFormatMatcher r0;
        java.lang.String $r2;
        org.codehaus.jackson.JsonFactory $r1;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        $r1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.JsonFactory: java.lang.String getFormatName()>();

        return $r2;
    }

    public org.codehaus.jackson.JsonParser createParserWithMatch() throws java.io.IOException
    {
        byte[] $r6;
        org.codehaus.jackson.format.DataFormatMatcher r0;
        org.codehaus.jackson.JsonFactory $r1, $r3, $r7;
        int $i0;
        org.codehaus.jackson.JsonParser $r5, $r8;
        java.io.InputStream $r2, $r4;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        $r1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match>;

        if $r1 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.format.DataFormatMatcher: java.io.InputStream _originalStream>;

        if $r2 != null goto label2;

        $r7 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match>;

        $r6 = r0.<org.codehaus.jackson.format.DataFormatMatcher: byte[] _bufferedData>;

        $i0 = r0.<org.codehaus.jackson.format.DataFormatMatcher: int _bufferedLength>;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)>($r6, 0, $i0);

        return $r8;

     label2:
        $r3 = r0.<org.codehaus.jackson.format.DataFormatMatcher: org.codehaus.jackson.JsonFactory _match>;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.format.DataFormatMatcher: java.io.InputStream getDataStream()>();

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)>($r4);

        return $r5;
    }

    public java.io.InputStream getDataStream()
    {
        byte[] $r3, $r6;
        org.codehaus.jackson.format.DataFormatMatcher r0;
        org.codehaus.jackson.io.MergedStream $r2;
        java.io.ByteArrayInputStream $r5;
        int $i0, $i1;
        java.io.InputStream $r1, $r4;

        r0 := @this: org.codehaus.jackson.format.DataFormatMatcher;

        $r1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: java.io.InputStream _originalStream>;

        if $r1 != null goto label1;

        $r5 = new java.io.ByteArrayInputStream;

        $r6 = r0.<org.codehaus.jackson.format.DataFormatMatcher: byte[] _bufferedData>;

        $i1 = r0.<org.codehaus.jackson.format.DataFormatMatcher: int _bufferedLength>;

        specialinvoke $r5.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r6, 0, $i1);

        return $r5;

     label1:
        $r2 = new org.codehaus.jackson.io.MergedStream;

        $r4 = r0.<org.codehaus.jackson.format.DataFormatMatcher: java.io.InputStream _originalStream>;

        $r3 = r0.<org.codehaus.jackson.format.DataFormatMatcher: byte[] _bufferedData>;

        $i0 = r0.<org.codehaus.jackson.format.DataFormatMatcher: int _bufferedLength>;

        specialinvoke $r2.<org.codehaus.jackson.io.MergedStream: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int)>(null, $r4, $r3, 0, $i0);

        return $r2;
    }
}
