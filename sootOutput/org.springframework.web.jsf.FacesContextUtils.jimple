public abstract class org.springframework.web.jsf.FacesContextUtils extends java.lang.Object
{

    public void <init>()
    {
        org.springframework.web.jsf.FacesContextUtils r0;

        r0 := @this: org.springframework.web.jsf.FacesContextUtils;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)
    {
        javax.faces.context.ExternalContext $r1;
        java.lang.IllegalStateException $r6;
        org.springframework.web.context.WebApplicationContext $r5;
        java.lang.Error $r10;
        java.lang.RuntimeException $r11;
        javax.faces.context.FacesContext r0;
        java.util.Map $r2;
        java.lang.Object $r4;
        java.lang.StringBuilder $r7, $r8;
        java.lang.String $r3, $r9;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: javax.faces.context.FacesContext;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "FacesContext must not be null");

        $r1 = virtualinvoke r0.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getApplicationMap()>();

        $r3 = <org.springframework.web.context.WebApplicationContext: java.lang.String ROOT_WEB_APPLICATION_CONTEXT_ATTRIBUTE>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        if $r4 != null goto label1;

        return null;

     label1:
        $z0 = $r4 instanceof java.lang.RuntimeException;

        if $z0 == 0 goto label2;

        $r11 = (java.lang.RuntimeException) $r4;

        throw $r11;

     label2:
        $z1 = $r4 instanceof java.lang.Error;

        if $z1 == 0 goto label3;

        $r10 = (java.lang.Error) $r4;

        throw $r10;

     label3:
        $z2 = $r4 instanceof org.springframework.web.context.WebApplicationContext;

        if $z2 != 0 goto label4;

        $r6 = new java.lang.IllegalStateException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Root context attribute is not of type WebApplicationContext: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9);

        throw $r6;

     label4:
        $r5 = (org.springframework.web.context.WebApplicationContext) $r4;

        return $r5;
    }

    public static org.springframework.web.context.WebApplicationContext getRequiredWebApplicationContext(javax.faces.context.FacesContext) throws java.lang.IllegalStateException
    {
        org.springframework.web.context.WebApplicationContext $r1;
        java.lang.IllegalStateException $r2;
        javax.faces.context.FacesContext r0;

        r0 := @parameter0: javax.faces.context.FacesContext;

        $r1 = staticinvoke <org.springframework.web.jsf.FacesContextUtils: org.springframework.web.context.WebApplicationContext getWebApplicationContext(javax.faces.context.FacesContext)>(r0);

        if $r1 != null goto label1;

        $r2 = new java.lang.IllegalStateException;

        specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No WebApplicationContext found: no ContextLoaderListener registered?");

        throw $r2;

     label1:
        return $r1;
    }

    public static java.lang.Object getSessionMutex(javax.faces.context.FacesContext)
    {
        javax.faces.context.ExternalContext $r1;
        javax.faces.context.FacesContext r0;
        java.util.Map $r2;
        java.lang.Object $r4, r5;
        java.lang.String $r3;

        r0 := @parameter0: javax.faces.context.FacesContext;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "FacesContext must not be null");

        $r1 = virtualinvoke r0.<javax.faces.context.FacesContext: javax.faces.context.ExternalContext getExternalContext()>();

        $r2 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.util.Map getSessionMap()>();

        $r3 = <org.springframework.web.util.WebUtils: java.lang.String SESSION_MUTEX_ATTRIBUTE>;

        $r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3);

        r5 = $r4;

        if $r4 != null goto label1;

        r5 = virtualinvoke $r1.<javax.faces.context.ExternalContext: java.lang.Object getSession(boolean)>(1);

     label1:
        return r5;
    }
}
