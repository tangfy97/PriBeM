final class com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap extends com.mycila.inject.internal.guava.collect.ForwardingConcurrentMap
{
    private final java.util.concurrent.ConcurrentMap delegate;

    void <init>(java.util.concurrent.ConcurrentMap)
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r0;
        java.util.concurrent.ConcurrentMap r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        r1 := @parameter0: java.util.concurrent.ConcurrentMap;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.ForwardingConcurrentMap: void <init>()>();

        r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap: java.util.concurrent.ConcurrentMap delegate> = r1;

        return;
    }

    protected java.util.concurrent.ConcurrentMap delegate()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        $r1 = r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap: java.util.concurrent.ConcurrentMap delegate>;

        return $r1;
    }

    public java.lang.Object put(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r1;
        java.lang.Object r2, r3;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public void putAll(java.util.Map)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r1;
        java.util.Map r2;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        r2 := @parameter0: java.util.Map;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r1;
        java.lang.Object r2, r3;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public java.lang.Object replace(java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r1;
        java.lang.Object r2, r3;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    public boolean replace(java.lang.Object, java.lang.Object, java.lang.Object)
    {
        java.lang.UnsupportedOperationException $r0;
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r1;
        java.lang.Object r2, r3, r4;

        r1 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        r2 := @parameter0: java.lang.Object;

        r3 := @parameter1: java.lang.Object;

        r4 := @parameter2: java.lang.Object;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    protected volatile java.util.Map delegate()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }

    protected volatile java.lang.Object delegate()
    {
        com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap r0;
        java.util.concurrent.ConcurrentMap $r1;

        r0 := @this: com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.cache.CacheBuilder$CacheAsMap: java.util.concurrent.ConcurrentMap delegate()>();

        return $r1;
    }
}
