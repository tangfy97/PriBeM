public class org.mortbay.util.ByteArrayISO8859Writer extends java.io.Writer
{
    private byte[] _buf;
    private int _size;
    private org.mortbay.util.ByteArrayOutputStream2 _bout;
    private java.io.OutputStreamWriter _writer;
    private boolean _fixed;

    public void <init>()
    {
        byte[] $r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout> = null;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: java.io.OutputStreamWriter _writer> = null;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: boolean _fixed> = 0;

        $r1 = newarray (byte)[2048];

        r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf> = $r1;

        return;
    }

    public void <init>(int)
    {
        int i0;
        byte[] $r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        i0 := @parameter0: int;

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout> = null;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: java.io.OutputStreamWriter _writer> = null;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: boolean _fixed> = 0;

        $r1 = newarray (byte)[i0];

        r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf> = $r1;

        return;
    }

    public void <init>(byte[])
    {
        byte[] r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r1 := @parameter0: byte[];

        specialinvoke r0.<java.io.Writer: void <init>()>();

        r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout> = null;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: java.io.OutputStreamWriter _writer> = null;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: boolean _fixed> = 0;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf> = r1;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: boolean _fixed> = 1;

        return;
    }

    public java.lang.Object getLock()
    {
        java.lang.Object $r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        $r1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: java.lang.Object lock>;

        return $r1;
    }

    public int size()
    {
        int $i0;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        $i0 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        return $i0;
    }

    public int capacity()
    {
        int $i0;
        byte[] $r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        $r1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i0 = lengthof $r1;

        return $i0;
    }

    public int spareCapacity()
    {
        byte[] $r1;
        int $i0, $i1, $i2;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        $r1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i1 = lengthof $r1;

        $i0 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i2 = $i1 - $i0;

        return $i2;
    }

    public void setLength(int)
    {
        int i0;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        i0 := @parameter0: int;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = i0;

        return;
    }

    public byte[] getBuf()
    {
        byte[] $r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        $r1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        return $r1;
    }

    public void writeTo(java.io.OutputStream) throws java.io.IOException
    {
        java.io.OutputStream r0;
        byte[] $r2;
        int $i0;
        org.mortbay.util.ByteArrayISO8859Writer r1;

        r1 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r0 := @parameter0: java.io.OutputStream;

        $r2 = r1.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i0 = r1.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        virtualinvoke r0.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i0);

        return;
    }

    public void write(char) throws java.io.IOException
    {
        byte[] $r2;
        char c0;
        byte $b3;
        int $i1, $i2, $i4, $i5;
        char[] $r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        c0 := @parameter0: char;

        virtualinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void ensureSpareCapacity(int)>(1);

        $i4 = (int) c0;

        if $i4 < 0 goto label1;

        $i5 = (int) c0;

        if $i5 > 127 goto label1;

        $r2 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i2 = $i1 + 1;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = $i2;

        $b3 = (byte) c0;

        $r2[$i1] = $b3;

        goto label2;

     label1:
        $r1 = newarray (char)[1];

        $r1[0] = c0;

        specialinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void writeEncoded(char[],int,int)>($r1, 0, 1);

     label2:
        return;
    }

    public void write(char[]) throws java.io.IOException
    {
        byte[] $r2;
        char c2;
        byte $b7;
        int $i0, $i1, $i3, $i4, $i5, $i6, i8, $i9, $i10;
        char[] r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r1 := @parameter0: char[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void ensureSpareCapacity(int)>($i0);

        i8 = 0;

     label1:
        $i1 = lengthof r1;

        if i8 >= $i1 goto label4;

        c2 = r1[i8];

        $i9 = (int) c2;

        if $i9 < 0 goto label2;

        $i10 = (int) c2;

        if $i10 > 127 goto label2;

        $r2 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i5 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i6 = $i5 + 1;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = $i6;

        $b7 = (byte) c2;

        $r2[$i5] = $b7;

        goto label3;

     label2:
        $i3 = lengthof r1;

        $i4 = $i3 - i8;

        specialinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void writeEncoded(char[],int,int)>(r1, i8, $i4);

        goto label4;

     label3:
        i8 = i8 + 1;

        goto label1;

     label4:
        return;
    }

    public void write(char[], int, int) throws java.io.IOException
    {
        byte[] $r2;
        char c3;
        byte $b8;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, i9, $i10, $i11;
        char[] r1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r1 := @parameter0: char[];

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void ensureSpareCapacity(int)>(i0);

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $i2 = i1 + i9;

        c3 = r1[$i2];

        $i10 = (int) c3;

        if $i10 < 0 goto label2;

        $i11 = (int) c3;

        if $i11 > 127 goto label2;

        $r2 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i6 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i7 = $i6 + 1;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = $i7;

        $b8 = (byte) c3;

        $r2[$i6] = $b8;

        goto label3;

     label2:
        $i5 = i1 + i9;

        $i4 = i0 - i9;

        specialinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void writeEncoded(char[],int,int)>(r1, $i5, $i4);

        goto label4;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    public void write(java.lang.String) throws java.io.IOException
    {
        byte[] $r3;
        char $c1;
        byte $b5;
        int $i0, $i2, $i3, $i4, i6, $i7, $i8;
        char[] $r2;
        java.lang.String r0;
        org.mortbay.util.ByteArrayISO8859Writer r1;

        r1 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        virtualinvoke r1.<org.mortbay.util.ByteArrayISO8859Writer: void write(java.lang.String,int,int)>("null", 0, 4);

        return;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

        virtualinvoke r1.<org.mortbay.util.ByteArrayISO8859Writer: void ensureSpareCapacity(int)>($i0);

        i6 = 0;

     label2:
        if i6 >= $i0 goto label5;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i6);

        $i7 = (int) $c1;

        if $i7 < 0 goto label3;

        $i8 = (int) $c1;

        if $i8 > 127 goto label3;

        $r3 = r1.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i3 = r1.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i4 = $i3 + 1;

        r1.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = $i4;

        $b5 = (byte) $c1;

        $r3[$i3] = $b5;

        goto label4;

     label3:
        $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $i2 = $i0 - i6;

        specialinvoke r1.<org.mortbay.util.ByteArrayISO8859Writer: void writeEncoded(char[],int,int)>($r2, i6, $i2);

        goto label5;

     label4:
        i6 = i6 + 1;

        goto label2;

     label5:
        return;
    }

    public void write(java.lang.String, int, int) throws java.io.IOException
    {
        byte[] $r3;
        byte $b8;
        int i0, i1, $i2, $i4, $i5, $i6, $i7, i9, $i10, $i11;
        java.lang.String r1;
        char $c3;
        char[] $r2;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r1 := @parameter0: java.lang.String;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        virtualinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void ensureSpareCapacity(int)>(i0);

        i9 = 0;

     label1:
        if i9 >= i0 goto label4;

        $i2 = i1 + i9;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $i10 = (int) $c3;

        if $i10 < 0 goto label2;

        $i11 = (int) $c3;

        if $i11 > 127 goto label2;

        $r3 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i6 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i7 = $i6 + 1;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = $i7;

        $b8 = (byte) $c3;

        $r3[$i6] = $b8;

        goto label3;

     label2:
        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

        $i5 = i1 + i9;

        $i4 = i0 - i9;

        specialinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void writeEncoded(char[],int,int)>($r2, $i5, $i4);

        goto label4;

     label3:
        i9 = i9 + 1;

        goto label1;

     label4:
        return;
    }

    private void writeEncoded(char[], int, int) throws java.io.IOException
    {
        byte[] $r8, $r10;
        org.mortbay.util.ByteArrayOutputStream2 $r1, $r2, $r6, $r7, $r9, $r11, $r12, $r15;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8;
        java.io.OutputStreamWriter $r4, $r5, $r13;
        java.lang.String $r14;
        char[] r3;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r3 := @parameter0: char[];

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        if $r1 != null goto label1;

        $r12 = new org.mortbay.util.ByteArrayOutputStream2;

        $i8 = 2 * i1;

        specialinvoke $r12.<org.mortbay.util.ByteArrayOutputStream2: void <init>(int)>($i8);

        r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout> = $r12;

        $r13 = new java.io.OutputStreamWriter;

        $r15 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        $r14 = <org.mortbay.util.StringUtil: java.lang.String __ISO_8859_1>;

        specialinvoke $r13.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>($r15, $r14);

        r0.<org.mortbay.util.ByteArrayISO8859Writer: java.io.OutputStreamWriter _writer> = $r13;

        goto label2;

     label1:
        $r2 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        virtualinvoke $r2.<org.mortbay.util.ByteArrayOutputStream2: void reset()>();

     label2:
        $r4 = r0.<org.mortbay.util.ByteArrayISO8859Writer: java.io.OutputStreamWriter _writer>;

        virtualinvoke $r4.<java.io.OutputStreamWriter: void write(char[],int,int)>(r3, i0, i1);

        $r5 = r0.<org.mortbay.util.ByteArrayISO8859Writer: java.io.OutputStreamWriter _writer>;

        virtualinvoke $r5.<java.io.OutputStreamWriter: void flush()>();

        $r6 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        $i2 = virtualinvoke $r6.<org.mortbay.util.ByteArrayOutputStream2: int getCount()>();

        virtualinvoke r0.<org.mortbay.util.ByteArrayISO8859Writer: void ensureSpareCapacity(int)>($i2);

        $r7 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        $r8 = virtualinvoke $r7.<org.mortbay.util.ByteArrayOutputStream2: byte[] getBuf()>();

        $r10 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i3 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $r9 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        $i4 = virtualinvoke $r9.<org.mortbay.util.ByteArrayOutputStream2: int getCount()>();

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r10, $i3, $i4);

        $i5 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $r11 = r0.<org.mortbay.util.ByteArrayISO8859Writer: org.mortbay.util.ByteArrayOutputStream2 _bout>;

        $i6 = virtualinvoke $r11.<org.mortbay.util.ByteArrayOutputStream2: int getCount()>();

        $i7 = $i5 + $i6;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = $i7;

        return;
    }

    public void flush()
    {
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        return;
    }

    public void resetWriter()
    {
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size> = 0;

        return;
    }

    public void close()
    {
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        return;
    }

    public void destroy()
    {
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf> = null;

        return;
    }

    public void ensureSpareCapacity(int) throws java.io.IOException
    {
        byte[] $r1, $r2, r3, $r4, $r8;
        java.lang.StringBuffer $r6, $r7, $r9;
        int i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r10;
        boolean $z0;
        java.io.IOException $r5;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        i0 := @parameter0: int;

        $i1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        $i3 = $i1 + i0;

        $r1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label2;

        $z0 = r0.<org.mortbay.util.ByteArrayISO8859Writer: boolean _fixed>;

        if $z0 == 0 goto label1;

        $r5 = new java.io.IOException;

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Buffer overflow: ");

        $r8 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i9 = lengthof $r8;

        $r9 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i9);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r5.<java.io.IOException: void <init>(java.lang.String)>($r10);

        throw $r5;

     label1:
        $r2 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i4 = lengthof $r2;

        $i5 = $i4 + i0;

        $i6 = $i5 * 4;

        $i7 = $i6 / 3;

        r3 = newarray (byte)[$i7];

        $r4 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i8 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, r3, 0, $i8);

        r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf> = r3;

     label2:
        return;
    }

    public byte[] getByteArray()
    {
        byte[] r1, $r2;
        int $i0, $i1;
        org.mortbay.util.ByteArrayISO8859Writer r0;

        r0 := @this: org.mortbay.util.ByteArrayISO8859Writer;

        $i0 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        r1 = newarray (byte)[$i0];

        $r2 = r0.<org.mortbay.util.ByteArrayISO8859Writer: byte[] _buf>;

        $i1 = r0.<org.mortbay.util.ByteArrayISO8859Writer: int _size>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, r1, 0, $i1);

        return r1;
    }
}
