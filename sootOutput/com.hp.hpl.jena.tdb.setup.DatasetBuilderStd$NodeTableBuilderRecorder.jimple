class com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder extends java.lang.Object implements com.hp.hpl.jena.tdb.setup.NodeTableBuilder
{
    private com.hp.hpl.jena.tdb.setup.NodeTableBuilder builder;
    private com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable recorder;

    void <init>(com.hp.hpl.jena.tdb.setup.NodeTableBuilder, com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable)
    {
        com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder r0;
        com.hp.hpl.jena.tdb.setup.NodeTableBuilder r1;
        com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable r2;

        r0 := @this: com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder;

        r1 := @parameter0: com.hp.hpl.jena.tdb.setup.NodeTableBuilder;

        r2 := @parameter1: com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder: com.hp.hpl.jena.tdb.setup.NodeTableBuilder builder> = r1;

        r0.<com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder: com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable recorder> = r2;

        return;
    }

    public com.hp.hpl.jena.tdb.nodetable.NodeTable buildNodeTable(com.hp.hpl.jena.tdb.base.file.FileSet, com.hp.hpl.jena.tdb.base.file.FileSet, int, int, int)
    {
        com.hp.hpl.jena.tdb.setup.NodeTableBuilder $r3;
        com.hp.hpl.jena.tdb.sys.FileRef $r6;
        com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder r0;
        com.hp.hpl.jena.tdb.nodetable.NodeTable $r4;
        com.hp.hpl.jena.tdb.base.file.FileSet r1, r2;
        int i0, i1, i2;
        java.lang.String $r5;
        com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable $r7;

        r0 := @this: com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder;

        r1 := @parameter0: com.hp.hpl.jena.tdb.base.file.FileSet;

        r2 := @parameter1: com.hp.hpl.jena.tdb.base.file.FileSet;

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        i2 := @parameter4: int;

        $r3 = r0.<com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder: com.hp.hpl.jena.tdb.setup.NodeTableBuilder builder>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.tdb.setup.NodeTableBuilder: com.hp.hpl.jena.tdb.nodetable.NodeTable buildNodeTable(com.hp.hpl.jena.tdb.base.file.FileSet,com.hp.hpl.jena.tdb.base.file.FileSet,int,int,int)>(r1, r2, i0, i1, i2);

        $r5 = virtualinvoke r2.<com.hp.hpl.jena.tdb.base.file.FileSet: java.lang.String filename(java.lang.String)>("dat");

        $r6 = staticinvoke <com.hp.hpl.jena.tdb.sys.FileRef: com.hp.hpl.jena.tdb.sys.FileRef create(java.lang.String)>($r5);

        $r7 = r0.<com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$NodeTableBuilderRecorder: com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable recorder>;

        interfaceinvoke $r7.<com.hp.hpl.jena.tdb.setup.DatasetBuilderStd$RecordNodeTable: void record(com.hp.hpl.jena.tdb.sys.FileRef,com.hp.hpl.jena.tdb.nodetable.NodeTable)>($r6, $r4);

        return $r4;
    }
}
