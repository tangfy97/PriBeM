public class com.hp.hpl.jena.ontology.impl.DataRangeImpl extends com.hp.hpl.jena.ontology.impl.OntResourceImpl implements com.hp.hpl.jena.ontology.DataRange
{
    public static com.hp.hpl.jena.enhanced.Implementation factory;

    public void <init>(com.hp.hpl.jena.graph.Node, com.hp.hpl.jena.enhanced.EnhGraph)
    {
        com.hp.hpl.jena.graph.Node r1;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;
        com.hp.hpl.jena.enhanced.EnhGraph r2;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        r1 := @parameter0: com.hp.hpl.jena.graph.Node;

        r2 := @parameter1: com.hp.hpl.jena.enhanced.EnhGraph;

        specialinvoke r0.<com.hp.hpl.jena.ontology.impl.OntResourceImpl: void <init>(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.enhanced.EnhGraph)>(r1, r2);

        return;
    }

    public void setOneOf(com.hp.hpl.jena.rdf.model.RDFList)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.RDFList r3;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.RDFList;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: void setPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "ONE_OF", r3);

        return;
    }

    public void addOneOf(com.hp.hpl.jena.rdf.model.Literal)
    {
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.Literal r3;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        r3 := @parameter0: com.hp.hpl.jena.rdf.model.Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: void addListPropertyValue(com.hp.hpl.jena.rdf.model.Property,java.lang.String,com.hp.hpl.jena.rdf.model.RDFNode)>($r2, "ONE_OF", r3);

        return;
    }

    public void addOneOf(java.util.Iterator)
    {
        java.util.Iterator r0;
        java.lang.Object $r2;
        com.hp.hpl.jena.rdf.model.Literal $r3;
        boolean $z0;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r1;

        r1 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        r0 := @parameter0: java.util.Iterator;

     label1:
        $z0 = interfaceinvoke r0.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r2 = interfaceinvoke r0.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (com.hp.hpl.jena.rdf.model.Literal) $r2;

        virtualinvoke r1.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: void addOneOf(com.hp.hpl.jena.rdf.model.Literal)>($r3);

        goto label1;

     label2:
        return;
    }

    public com.hp.hpl.jena.rdf.model.RDFList getOneOf()
    {
        com.hp.hpl.jena.rdf.model.RDFNode $r3;
        com.hp.hpl.jena.rdf.model.Property $r2;
        com.hp.hpl.jena.ontology.Profile $r1;
        com.hp.hpl.jena.rdf.model.RDFList $r4;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.ontology.Profile getProfile()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.ontology.Profile: com.hp.hpl.jena.rdf.model.Property ONE_OF()>();

        $r3 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.rdf.model.RDFNode objectAs(com.hp.hpl.jena.rdf.model.Property,java.lang.String,java.lang.Class)>($r2, "ONE_OF", class "Lcom/hp/hpl/jena/rdf/model/RDFList;");

        $r4 = (com.hp.hpl.jena.rdf.model.RDFList) $r3;

        return $r4;
    }

    public com.hp.hpl.jena.util.iterator.ExtendedIterator listOneOf()
    {
        com.hp.hpl.jena.util.iterator.ExtendedIterator $r2, $r4;
        com.hp.hpl.jena.ontology.impl.OntResourceImpl$AsMapper $r3;
        com.hp.hpl.jena.rdf.model.RDFList $r1;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.rdf.model.RDFList getOneOf()>();

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFList: com.hp.hpl.jena.util.iterator.ExtendedIterator iterator()>();

        $r3 = new com.hp.hpl.jena.ontology.impl.OntResourceImpl$AsMapper;

        specialinvoke $r3.<com.hp.hpl.jena.ontology.impl.OntResourceImpl$AsMapper: void <init>(java.lang.Class)>(class "Lcom/hp/hpl/jena/rdf/model/Literal;");

        $r4 = interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ExtendedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator mapWith(com.hp.hpl.jena.util.iterator.Map1)>($r3);

        return $r4;
    }

    public boolean hasOneOf(com.hp.hpl.jena.rdf.model.Literal)
    {
        com.hp.hpl.jena.rdf.model.RDFList $r1;
        com.hp.hpl.jena.rdf.model.Literal r2;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;
        boolean $z0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.rdf.model.RDFList getOneOf()>();

        $z0 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFList: boolean contains(com.hp.hpl.jena.rdf.model.RDFNode)>(r2);

        return $z0;
    }

    public void removeOneOf(com.hp.hpl.jena.rdf.model.Literal)
    {
        com.hp.hpl.jena.rdf.model.RDFList $r1, $r3;
        com.hp.hpl.jena.rdf.model.Literal r2;
        com.hp.hpl.jena.ontology.impl.DataRangeImpl r0;

        r0 := @this: com.hp.hpl.jena.ontology.impl.DataRangeImpl;

        r2 := @parameter0: com.hp.hpl.jena.rdf.model.Literal;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.rdf.model.RDFList getOneOf()>();

        $r3 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.RDFList: com.hp.hpl.jena.rdf.model.RDFList remove(com.hp.hpl.jena.rdf.model.RDFNode)>(r2);

        virtualinvoke r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl: void setOneOf(com.hp.hpl.jena.rdf.model.RDFList)>($r3);

        return;
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.ontology.impl.DataRangeImpl$1 $r0;

        $r0 = new com.hp.hpl.jena.ontology.impl.DataRangeImpl$1;

        specialinvoke $r0.<com.hp.hpl.jena.ontology.impl.DataRangeImpl$1: void <init>()>();

        <com.hp.hpl.jena.ontology.impl.DataRangeImpl: com.hp.hpl.jena.enhanced.Implementation factory> = $r0;

        return;
    }
}
