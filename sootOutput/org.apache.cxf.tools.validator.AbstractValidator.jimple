public abstract class org.apache.cxf.tools.validator.AbstractValidator extends java.lang.Object
{
    protected java.util.List errorMessages;

    public void <init>()
    {
        org.apache.cxf.tools.validator.AbstractValidator r0;
        java.util.Vector $r1;

        r0 := @this: org.apache.cxf.tools.validator.AbstractValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.Vector;

        specialinvoke $r1.<java.util.Vector: void <init>()>();

        r0.<org.apache.cxf.tools.validator.AbstractValidator: java.util.List errorMessages> = $r1;

        return;
    }

    public abstract boolean isValid();

    public void addErrorMessage(java.lang.String)
    {
        org.apache.cxf.tools.validator.AbstractValidator r0;
        java.util.List $r2;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.tools.validator.AbstractValidator;

        r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.apache.cxf.tools.validator.AbstractValidator: java.util.List errorMessages>;

        interfaceinvoke $r2.<java.util.List: boolean add(java.lang.Object)>(r1);

        return;
    }

    public java.lang.String getErrorMessage()
    {
        org.apache.cxf.tools.validator.AbstractValidator r1;
        java.util.List $r2, $r4;
        int $i0, i1;
        java.lang.StringBuilder $r0;
        java.lang.Object $r5;
        java.lang.String $r3, $r6, $r7;

        r1 := @this: org.apache.cxf.tools.validator.AbstractValidator;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        i1 = 0;

     label1:
        $r2 = r1.<org.apache.cxf.tools.validator.AbstractValidator: java.util.List errorMessages>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        if i1 >= $i0 goto label2;

        $r4 = r1.<org.apache.cxf.tools.validator.AbstractValidator: java.util.List errorMessages>;

        $r5 = interfaceinvoke $r4.<java.util.List: java.lang.Object get(int)>(i1);

        $r6 = (java.lang.String) $r5;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r7 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        i1 = i1 + 1;

        goto label1;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }
}
