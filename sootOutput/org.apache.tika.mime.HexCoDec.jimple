public class org.apache.tika.mime.HexCoDec extends java.lang.Object
{
    private static final char[] HEX_CHARS;

    public void <init>()
    {
        org.apache.tika.mime.HexCoDec r0;

        r0 := @this: org.apache.tika.mime.HexCoDec;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(java.lang.String)
    {
        char[] $r1;
        byte[] $r2;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>();

        $r2 = staticinvoke <org.apache.tika.mime.HexCoDec: byte[] decode(char[])>($r1);

        return $r2;
    }

    public static byte[] decode(char[])
    {
        int $i0;
        char[] r0;
        byte[] $r1;

        r0 := @parameter0: char[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.apache.tika.mime.HexCoDec: byte[] decode(char[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static byte[] decode(char[], int, int)
    {
        byte[] r0;
        byte $b10;
        int i0, $i1, $i2, $i3, $i5, $i7, $i8, $i9, i11, i12, i13;
        char $c4, $c6;
        java.lang.IllegalArgumentException $r2;
        char[] r1;

        r1 := @parameter0: char[];

        i11 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i0 & 1;

        if $i1 == 0 goto label1;

        $r2 = new java.lang.IllegalArgumentException;

        specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length must be even");

        throw $r2;

     label1:
        $i2 = i0 / 2;

        r0 = newarray (byte)[$i2];

        i12 = 0;

     label2:
        $i3 = lengthof r0;

        if i12 >= $i3 goto label3;

        i13 = i11 + 1;

        $c4 = r1[i11];

        $i5 = staticinvoke <org.apache.tika.mime.HexCoDec: int hexCharToNibble(char)>($c4);

        $i7 = $i5 * 16;

        i11 = i13 + 1;

        $c6 = r1[i13];

        $i8 = staticinvoke <org.apache.tika.mime.HexCoDec: int hexCharToNibble(char)>($c6);

        $i9 = $i7 + $i8;

        $b10 = (byte) $i9;

        r0[i12] = $b10;

        i12 = i12 + 1;

        goto label2;

     label3:
        return r0;
    }

    public static char[] encode(byte[])
    {
        int $i0;
        byte[] r0;
        char[] $r1;

        r0 := @parameter0: byte[];

        $i0 = lengthof r0;

        $r1 = staticinvoke <org.apache.tika.mime.HexCoDec: char[] encode(byte[],int,int)>(r0, 0, $i0);

        return $r1;
    }

    public static char[] encode(byte[], int, int)
    {
        byte[] r1;
        short s4, $s7, $s13;
        byte $b3;
        int i0, $i1, $i2, $i5, i9, i10, i11, i12, $i14, $i15;
        char $c6, $c8;
        char[] r0, $r2, $r3;

        r1 := @parameter0: byte[];

        i9 := @parameter1: int;

        i0 := @parameter2: int;

        $i1 = i0 * 2;

        r0 = newarray (char)[$i1];

        i10 = 0;

        i11 = 0;

     label1:
        if i10 >= i0 goto label2;

        $i2 = i9;

        i9 = i9 + 1;

        $b3 = r1[$i2];

        $s13 = (short) $b3;

        s4 = $s13 & 255;

        i12 = i11 + 1;

        $r2 = <org.apache.tika.mime.HexCoDec: char[] HEX_CHARS>;

        $i14 = (int) s4;

        $i5 = $i14 >> 4;

        $c6 = $r2[$i5];

        r0[i11] = $c6;

        i11 = i12 + 1;

        $r3 = <org.apache.tika.mime.HexCoDec: char[] HEX_CHARS>;

        $s7 = s4 & 15;

        $i15 = (int) $s7;

        $c8 = $r3[$i15];

        r0[i12] = $c8;

        i10 = i10 + 1;

        goto label1;

     label2:
        return r0;
    }

    private static int hexCharToNibble(char)
    {
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14;
        java.lang.String $r5;
        char c0;
        java.lang.IllegalArgumentException $r7;
        java.lang.StringBuilder $r2, $r3, $r4, $r6;

        c0 := @parameter0: char;

        $i6 = (int) c0;

        if $i6 < 48 goto label1;

        $i7 = (int) c0;

        if $i7 > 57 goto label1;

        $i8 = (int) c0;

        $i5 = $i8 - 48;

        return $i5;

     label1:
        $i9 = (int) c0;

        if $i9 < 97 goto label2;

        $i10 = (int) c0;

        if $i10 > 102 goto label2;

        $i11 = (int) c0;

        $i3 = $i11 - 97;

        $i4 = $i3 + 10;

        return $i4;

     label2:
        $i12 = (int) c0;

        if $i12 < 65 goto label3;

        $i13 = (int) c0;

        if $i13 > 70 goto label3;

        $i14 = (int) c0;

        $i1 = $i14 - 65;

        $i2 = $i1 + 10;

        return $i2;

     label3:
        $r7 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Not a hex char - \'");

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5);

        throw $r7;
    }

    static void <clinit>()
    {
        char[] $r0;

        $r0 = newarray (char)[16];

        $r0[0] = 48;

        $r0[1] = 49;

        $r0[2] = 50;

        $r0[3] = 51;

        $r0[4] = 52;

        $r0[5] = 53;

        $r0[6] = 54;

        $r0[7] = 55;

        $r0[8] = 56;

        $r0[9] = 57;

        $r0[10] = 97;

        $r0[11] = 98;

        $r0[12] = 99;

        $r0[13] = 100;

        $r0[14] = 101;

        $r0[15] = 102;

        <org.apache.tika.mime.HexCoDec: char[] HEX_CHARS> = $r0;

        return;
    }
}
