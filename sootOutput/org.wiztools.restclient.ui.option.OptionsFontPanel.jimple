public class org.wiztools.restclient.ui.option.OptionsFontPanel extends javax.swing.JPanel implements org.wiztools.restclient.ui.option.IOptionsPanel
{
    private static final java.util.logging.Logger LOG;
    private static final java.lang.String PROP_PREFIX;
    private javax.swing.JButton jb_default;
    private javax.swing.JList jl_font;
    private javax.swing.JList jl_fontSize;
    private javax.swing.JLabel jl_preview;

    public void <init>()
    {
        java.awt.Color $r30;
        org.wiztools.restclient.ui.option.OptionsFontPanel r0;
        java.awt.GraphicsEnvironment $r14;
        javax.swing.border.Border $r31;
        java.awt.BorderLayout $r3;
        org.wiztools.restclient.ui.option.OptionsFontPanel$Preview $r10;
        org.wiztools.restclient.ui.option.OptionsFontPanel$1 $r7;
        java.awt.Dimension $r11, $r32;
        javax.swing.JPanel $r4, $r12, $r27;
        java.lang.String[] $r15, $r21;
        java.awt.GridLayout $r13;
        java.awt.FlowLayout $r5, $r28;
        javax.swing.JButton $r1, $r8, $r9;
        javax.swing.JList $r16, $r17, $r18, $r20, $r22, $r23, $r24, $r26;
        javax.swing.JScrollPane $r19, $r25;
        javax.swing.JLabel $r2, $r6, $r29;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsFontPanel;

        specialinvoke r0.<javax.swing.JPanel: void <init>()>();

        $r1 = new javax.swing.JButton;

        specialinvoke $r1.<javax.swing.JButton: void <init>(java.lang.String)>("Restore Default");

        r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JButton jb_default> = $r1;

        $r2 = new javax.swing.JLabel;

        specialinvoke $r2.<javax.swing.JLabel: void <init>(java.lang.String)>("WizTools.org RESTClient");

        r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JLabel jl_preview> = $r2;

        $r3 = new java.awt.BorderLayout;

        specialinvoke $r3.<java.awt.BorderLayout: void <init>()>();

        virtualinvoke r0.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r3);

        $r4 = new javax.swing.JPanel;

        specialinvoke $r4.<javax.swing.JPanel: void <init>()>();

        $r5 = new java.awt.FlowLayout;

        specialinvoke $r5.<java.awt.FlowLayout: void <init>(int)>(0);

        virtualinvoke $r4.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r5);

        $r6 = new javax.swing.JLabel;

        specialinvoke $r6.<javax.swing.JLabel: void <init>(java.lang.String)>("Font for Request Body & Response Body");

        virtualinvoke $r4.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r6);

        $r8 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JButton jb_default>;

        $r7 = new org.wiztools.restclient.ui.option.OptionsFontPanel$1;

        specialinvoke $r7.<org.wiztools.restclient.ui.option.OptionsFontPanel$1: void <init>(org.wiztools.restclient.ui.option.OptionsFontPanel)>(r0);

        virtualinvoke $r8.<javax.swing.JButton: void addActionListener(java.awt.event.ActionListener)>($r7);

        $r9 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JButton jb_default>;

        virtualinvoke $r4.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r9);

        virtualinvoke r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r4, "North");

        $r10 = new org.wiztools.restclient.ui.option.OptionsFontPanel$Preview;

        specialinvoke $r10.<org.wiztools.restclient.ui.option.OptionsFontPanel$Preview: void <init>(org.wiztools.restclient.ui.option.OptionsFontPanel)>(r0);

        $r11 = new java.awt.Dimension;

        specialinvoke $r11.<java.awt.Dimension: void <init>(int,int)>(200, 100);

        $r12 = new javax.swing.JPanel;

        specialinvoke $r12.<javax.swing.JPanel: void <init>()>();

        $r13 = new java.awt.GridLayout;

        specialinvoke $r13.<java.awt.GridLayout: void <init>(int,int)>(1, 2);

        virtualinvoke $r12.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r13);

        $r14 = staticinvoke <java.awt.GraphicsEnvironment: java.awt.GraphicsEnvironment getLocalGraphicsEnvironment()>();

        $r15 = virtualinvoke $r14.<java.awt.GraphicsEnvironment: java.lang.String[] getAvailableFontFamilyNames()>();

        $r16 = new javax.swing.JList;

        specialinvoke $r16.<javax.swing.JList: void <init>(java.lang.Object[])>($r15);

        r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font> = $r16;

        $r17 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        virtualinvoke $r17.<javax.swing.JList: void setSelectionMode(int)>(0);

        $r18 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        virtualinvoke $r18.<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r10);

        $r19 = new javax.swing.JScrollPane;

        $r20 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        specialinvoke $r19.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r20);

        virtualinvoke $r19.<javax.swing.JScrollPane: void setPreferredSize(java.awt.Dimension)>($r11);

        virtualinvoke $r12.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r19);

        $r21 = newarray (java.lang.String)[15];

        $r21[0] = "8";

        $r21[1] = "10";

        $r21[2] = "11";

        $r21[3] = "12";

        $r21[4] = "14";

        $r21[5] = "16";

        $r21[6] = "18";

        $r21[7] = "20";

        $r21[8] = "24";

        $r21[9] = "30";

        $r21[10] = "36";

        $r21[11] = "40";

        $r21[12] = "48";

        $r21[13] = "60";

        $r21[14] = "72";

        $r22 = new javax.swing.JList;

        specialinvoke $r22.<javax.swing.JList: void <init>(java.lang.Object[])>($r21);

        r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize> = $r22;

        $r23 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        virtualinvoke $r23.<javax.swing.JList: void setSelectionMode(int)>(0);

        $r24 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        virtualinvoke $r24.<javax.swing.JList: void addListSelectionListener(javax.swing.event.ListSelectionListener)>($r10);

        $r25 = new javax.swing.JScrollPane;

        $r26 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        specialinvoke $r25.<javax.swing.JScrollPane: void <init>(java.awt.Component)>($r26);

        virtualinvoke $r25.<javax.swing.JScrollPane: void setPreferredSize(java.awt.Dimension)>($r11);

        virtualinvoke $r12.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r25);

        virtualinvoke r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r12, "Center");

        $r27 = new javax.swing.JPanel;

        specialinvoke $r27.<javax.swing.JPanel: void <init>()>();

        $r28 = new java.awt.FlowLayout;

        specialinvoke $r28.<java.awt.FlowLayout: void <init>(int)>(1);

        virtualinvoke $r27.<javax.swing.JPanel: void setLayout(java.awt.LayoutManager)>($r28);

        $r29 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JLabel jl_preview>;

        virtualinvoke $r27.<javax.swing.JPanel: java.awt.Component add(java.awt.Component)>($r29);

        $r30 = <java.awt.Color: java.awt.Color BLACK>;

        $r31 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createLineBorder(java.awt.Color)>($r30);

        virtualinvoke $r27.<javax.swing.JPanel: void setBorder(javax.swing.border.Border)>($r31);

        $r32 = new java.awt.Dimension;

        specialinvoke $r32.<java.awt.Dimension: void <init>(int,int)>(200, 50);

        virtualinvoke $r27.<javax.swing.JPanel: void setPreferredSize(java.awt.Dimension)>($r32);

        virtualinvoke r0.<javax.swing.JPanel: void add(java.awt.Component,java.lang.Object)>($r27, "South");

        return;
    }

    public void initOptions()
    {
        org.wiztools.restclient.ui.RESTViewImpl $r13;
        org.wiztools.restclient.ui.option.OptionsFontPanel r7;
        int $i0, i1;
        java.lang.String $r2, $r5, $r9, $r11;
        org.wiztools.restclient.IGlobalOptions $r1, $r4;
        java.awt.Font $r6, $r15, r17;
        javax.swing.JList $r8, $r10;
        java.lang.NumberFormatException $r16;
        java.util.logging.Logger $r14;
        java.lang.Object $r0, $r3, $r12;

        r7 := @this: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r0 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r1 = (org.wiztools.restclient.IGlobalOptions) $r0;

        $r2 = interfaceinvoke $r1.<org.wiztools.restclient.IGlobalOptions: java.lang.String getProperty(java.lang.String)>("font.options.font");

        $r3 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r4 = (org.wiztools.restclient.IGlobalOptions) $r3;

        $r5 = interfaceinvoke $r4.<org.wiztools.restclient.IGlobalOptions: java.lang.String getProperty(java.lang.String)>("font.options.fontSize");

        i1 = 12;

        if $r5 == null goto label4;

     label1:
        i1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

     label2:
        goto label4;

     label3:
        $r16 := @caughtexception;

     label4:
        if $r2 != null goto label5;

        $r14 = <org.wiztools.restclient.ui.option.OptionsFontPanel: java.util.logging.Logger LOG>;

        virtualinvoke $r14.<java.util.logging.Logger: void info(java.lang.String)>("Font configuration not available in configuration. Reverting to default font.");

        $r15 = new java.awt.Font;

        specialinvoke $r15.<java.awt.Font: void <init>(java.lang.String,int,int)>("Dialog", 0, 12);

        r17 = $r15;

        goto label6;

     label5:
        $r6 = new java.awt.Font;

        specialinvoke $r6.<java.awt.Font: void <init>(java.lang.String,int,int)>($r2, 0, i1);

        r17 = $r6;

     label6:
        $r8 = r7.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        $r9 = virtualinvoke r17.<java.awt.Font: java.lang.String getFamily()>();

        virtualinvoke $r8.<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>($r9, 1);

        $r10 = r7.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        $i0 = virtualinvoke r17.<java.awt.Font: int getSize()>();

        $r11 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r10.<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>($r11, 1);

        $r12 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/ui/RESTViewImpl;");

        $r13 = (org.wiztools.restclient.ui.RESTViewImpl) $r12;

        virtualinvoke $r13.<org.wiztools.restclient.ui.RESTViewImpl: void setTextAreaFont(java.awt.Font)>(r17);

        return;

        catch java.lang.NumberFormatException from label1 to label2 with label3;
    }

    public void shutdownOptions()
    {
        javax.swing.JList $r2, $r7;
        org.wiztools.restclient.ui.option.OptionsFontPanel r1;
        java.lang.Object $r0, $r4, $r6, $r9;
        java.lang.String $r5, $r10;
        org.wiztools.restclient.IGlobalOptions $r3, $r8;

        r1 := @this: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r0 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r3 = (org.wiztools.restclient.IGlobalOptions) $r0;

        $r2 = r1.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        $r4 = virtualinvoke $r2.<javax.swing.JList: java.lang.Object getSelectedValue()>();

        $r5 = (java.lang.String) $r4;

        interfaceinvoke $r3.<org.wiztools.restclient.IGlobalOptions: void setProperty(java.lang.String,java.lang.String)>("font.options.font", $r5);

        $r6 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/IGlobalOptions;");

        $r8 = (org.wiztools.restclient.IGlobalOptions) $r6;

        $r7 = r1.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        $r9 = virtualinvoke $r7.<javax.swing.JList: java.lang.Object getSelectedValue()>();

        $r10 = (java.lang.String) $r9;

        interfaceinvoke $r8.<org.wiztools.restclient.IGlobalOptions: void setProperty(java.lang.String,java.lang.String)>("font.options.fontSize", $r10);

        return;
    }

    public java.util.List validateInput()
    {
        org.wiztools.restclient.ui.option.OptionsFontPanel r0;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsFontPanel;

        return null;
    }

    public boolean saveOptions()
    {
        java.awt.Font $r7;
        org.wiztools.restclient.ui.RESTViewImpl $r9;
        javax.swing.JList $r1, $r4;
        org.wiztools.restclient.ui.option.OptionsFontPanel r0;
        int $i0;
        java.lang.Object $r2, $r5, $r8;
        java.lang.String r3, r6;

        r0 := @this: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        $r2 = virtualinvoke $r1.<javax.swing.JList: java.lang.Object getSelectedValue()>();

        r3 = (java.lang.String) $r2;

        $r4 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        $r5 = virtualinvoke $r4.<javax.swing.JList: java.lang.Object getSelectedValue()>();

        r6 = (java.lang.String) $r5;

        $i0 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(r6);

        $r7 = new java.awt.Font;

        specialinvoke $r7.<java.awt.Font: void <init>(java.lang.String,int,int)>(r3, 0, $i0);

        $r8 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/ui/RESTViewImpl;");

        $r9 = (org.wiztools.restclient.ui.RESTViewImpl) $r8;

        virtualinvoke $r9.<org.wiztools.restclient.ui.RESTViewImpl: void setTextAreaFont(java.awt.Font)>($r7);

        return 1;
    }

    public boolean revertOptions()
    {
        org.wiztools.restclient.ui.RESTViewImpl $r1;
        java.awt.Font $r2;
        javax.swing.JList $r4, $r6;
        org.wiztools.restclient.ui.option.OptionsFontPanel r3;
        int $i0;
        java.lang.Object $r0;
        java.lang.String $r5, $r7;

        r3 := @this: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r0 = staticinvoke <org.wiztools.restclient.ServiceLocator: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/wiztools/restclient/ui/RESTViewImpl;");

        $r1 = (org.wiztools.restclient.ui.RESTViewImpl) $r0;

        $r2 = virtualinvoke $r1.<org.wiztools.restclient.ui.RESTViewImpl: java.awt.Font getTextAreaFont()>();

        $r4 = r3.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        $r5 = virtualinvoke $r2.<java.awt.Font: java.lang.String getFamily()>();

        virtualinvoke $r4.<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>($r5, 1);

        $r6 = r3.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        $i0 = virtualinvoke $r2.<java.awt.Font: int getSize()>();

        $r7 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0);

        virtualinvoke $r6.<javax.swing.JList: void setSelectedValue(java.lang.Object,boolean)>($r7, 1);

        return 1;
    }

    static javax.swing.JList access$000(org.wiztools.restclient.ui.option.OptionsFontPanel)
    {
        javax.swing.JList $r1;
        org.wiztools.restclient.ui.option.OptionsFontPanel r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_font>;

        return $r1;
    }

    static javax.swing.JList access$100(org.wiztools.restclient.ui.option.OptionsFontPanel)
    {
        javax.swing.JList $r1;
        org.wiztools.restclient.ui.option.OptionsFontPanel r0;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JList jl_fontSize>;

        return $r1;
    }

    static javax.swing.JLabel access$200(org.wiztools.restclient.ui.option.OptionsFontPanel)
    {
        org.wiztools.restclient.ui.option.OptionsFontPanel r0;
        javax.swing.JLabel $r1;

        r0 := @parameter0: org.wiztools.restclient.ui.option.OptionsFontPanel;

        $r1 = r0.<org.wiztools.restclient.ui.option.OptionsFontPanel: javax.swing.JLabel jl_preview>;

        return $r1;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.wiztools.restclient.ui.option.OptionsFontPanel: java.lang.String PROP_PREFIX> = "font.options.";

        $r0 = class "Lorg/wiztools/restclient/ui/option/OptionsFontPanel;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.wiztools.restclient.ui.option.OptionsFontPanel: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
