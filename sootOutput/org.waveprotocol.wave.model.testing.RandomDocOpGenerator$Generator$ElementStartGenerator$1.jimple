class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1 extends java.lang.Object implements org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$AttributesUpdateChecker
{
    final org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a;
    final java.lang.String val$tag;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator this$1;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator, org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, java.lang.String)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1 r0;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator r1;
        java.lang.String r3;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator;

        r2 := @parameter1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        r3 := @parameter2: java.lang.String;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator this$1> = r1;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a> = r2;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1: java.lang.String val$tag> = r3;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult check(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton $r6;
        org.waveprotocol.wave.model.document.operation.Attributes r3;
        org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap $r2;
        org.waveprotocol.wave.model.document.operation.impl.AttributesImpl $r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1 r4;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r7;
        java.lang.String $r5;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r0;

        r4 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = <org.waveprotocol.wave.model.document.operation.Attributes: org.waveprotocol.wave.model.document.operation.impl.AttributesImpl EMPTY_MAP>;

        $r2 = virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.impl.AttributesImpl: org.waveprotocol.wave.model.document.operation.util.ImmutableStateMap updateWith(org.waveprotocol.wave.model.document.operation.util.UpdateMap)>(r0);

        r3 = (org.waveprotocol.wave.model.document.operation.Attributes) $r2;

        $r6 = r4.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton val$a>;

        $r5 = r4.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$ElementStartGenerator$1: java.lang.String val$tag>;

        $r7 = virtualinvoke $r6.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r5, r3, null);

        return $r7;
    }
}
