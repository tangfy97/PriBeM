public class ucar.nc2.ncml.Aggregation$DatasetProxyReader extends java.lang.Object implements ucar.nc2.ProxyReader
{
    ucar.nc2.ncml.Aggregation$Dataset dataset;
    final ucar.nc2.ncml.Aggregation this$0;

    void <init>(ucar.nc2.ncml.Aggregation, ucar.nc2.ncml.Aggregation$Dataset)
    {
        ucar.nc2.ncml.Aggregation$Dataset r2;
        ucar.nc2.ncml.Aggregation r1;
        ucar.nc2.ncml.Aggregation$DatasetProxyReader r0;

        r0 := @this: ucar.nc2.ncml.Aggregation$DatasetProxyReader;

        r1 := @parameter0: ucar.nc2.ncml.Aggregation;

        r2 := @parameter1: ucar.nc2.ncml.Aggregation$Dataset;

        r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset> = r2;

        return;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.lang.Throwable $r10;
        ucar.nc2.ncml.Aggregation $r5;
        ucar.ma2.Array $r7;
        ucar.nc2.ncml.Aggregation$Dataset $r2, $r8, $r9, $r11;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.ncml.Aggregation$DatasetProxyReader r0;
        ucar.nc2.Variable r4, $r6;
        ucar.nc2.NetcdfFile $r3, r12;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.Aggregation$DatasetProxyReader;

        r4 := @parameter0: ucar.nc2.Variable;

        r1 := @parameter1: ucar.nc2.util.CancelTask;

        r12 = null;

     label1:
        $r2 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r1);

        r12 = $r3;

        if r1 == null goto label3;

        $z0 = interfaceinvoke r1.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

     label2:
        $r9 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        virtualinvoke $r9.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r3);

        return null;

     label3:
        $r5 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation this$0>;

        $r6 = virtualinvoke $r5.<ucar.nc2.ncml.Aggregation: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r3, r4);

        $r7 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read()>();

     label4:
        $r8 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        virtualinvoke $r8.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r3);

        return $r7;

     label5:
        $r10 := @caughtexception;

     label6:
        $r11 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        virtualinvoke $r11.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r12);

        throw $r10;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }

    public ucar.ma2.Array reallyRead(ucar.nc2.Variable, ucar.ma2.Section, ucar.nc2.util.CancelTask) throws java.io.IOException, ucar.ma2.InvalidRangeException
    {
        java.lang.Throwable $r11;
        ucar.ma2.Section r7;
        ucar.nc2.ncml.Aggregation $r5;
        ucar.ma2.Array $r8;
        ucar.nc2.ncml.Aggregation$Dataset $r2, $r9, $r10, $r12;
        ucar.nc2.util.CancelTask r1;
        ucar.nc2.ncml.Aggregation$DatasetProxyReader r0;
        ucar.nc2.Variable r4, $r6;
        ucar.nc2.NetcdfFile $r3, r13;
        boolean $z0;

        r0 := @this: ucar.nc2.ncml.Aggregation$DatasetProxyReader;

        r4 := @parameter0: ucar.nc2.Variable;

        r7 := @parameter1: ucar.ma2.Section;

        r1 := @parameter2: ucar.nc2.util.CancelTask;

        r13 = null;

     label1:
        $r2 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        $r3 = virtualinvoke $r2.<ucar.nc2.ncml.Aggregation$Dataset: ucar.nc2.NetcdfFile acquireFile(ucar.nc2.util.CancelTask)>(r1);

        r13 = $r3;

        $r5 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation this$0>;

        $r6 = virtualinvoke $r5.<ucar.nc2.ncml.Aggregation: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,ucar.nc2.Variable)>($r3, r4);

        if r1 == null goto label3;

        $z0 = interfaceinvoke r1.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z0 == 0 goto label3;

     label2:
        $r10 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        virtualinvoke $r10.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r3);

        return null;

     label3:
        $r8 = virtualinvoke $r6.<ucar.nc2.Variable: ucar.ma2.Array read(ucar.ma2.Section)>(r7);

     label4:
        $r9 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        virtualinvoke $r9.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>($r3);

        return $r8;

     label5:
        $r11 := @caughtexception;

     label6:
        $r12 = r0.<ucar.nc2.ncml.Aggregation$DatasetProxyReader: ucar.nc2.ncml.Aggregation$Dataset dataset>;

        virtualinvoke $r12.<ucar.nc2.ncml.Aggregation$Dataset: void close(ucar.nc2.NetcdfFile)>(r13);

        throw $r11;

        catch java.lang.Throwable from label1 to label2 with label5;
        catch java.lang.Throwable from label3 to label4 with label5;
        catch java.lang.Throwable from label5 to label6 with label5;
    }
}
