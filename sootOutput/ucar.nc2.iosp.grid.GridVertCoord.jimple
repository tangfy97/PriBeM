public class ucar.nc2.iosp.grid.GridVertCoord extends java.lang.Object implements java.lang.Comparable
{
    private static org.slf4j.Logger logger;
    private ucar.grid.GridRecord typicalRecord;
    private java.lang.String levelName;
    private ucar.grid.GridTableLookup lookup;
    private int seq;
    private double[] coordValues;
    private boolean usesBounds;
    private boolean isVerticalCoordinate;
    private double[] factors;
    private java.lang.String positive;
    private java.lang.String units;
    private java.util.List levels;

    void <init>(java.lang.String)
    {
        ucar.nc2.iosp.grid.GridVertCoord r0;
        java.lang.String r2;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridVertCoord: int seq> = 0;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues> = null;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds> = 0;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVerticalCoordinate> = 0;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors> = null;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive> = "up";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels> = $r1;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String levelName> = r2;

        return;
    }

    void <init>(java.util.List, java.lang.String, ucar.grid.GridTableLookup, ucar.nc2.iosp.grid.GridHorizCoordSys)
    {
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        ucar.nc2.iosp.grid.GridVertCoord r0;
        java.util.List r2, $r13, $r34, $r38;
        java.lang.StringBuilder $r16, $r18, $r20, $r21, $r23, $r24, $r25, $r26, $r28, $r29, $r31;
        ucar.grid.GridTableLookup r6;
        ucar.nc2.iosp.grid.GridHorizCoordSys r33;
        java.util.ArrayList $r1;
        int $i0, $i1, $i2;
        java.lang.String r5, $r10, $r14, $r19, $r27, $r30, $r32, $r39;
        ucar.grid.GridRecord $r4, $r7, $r8, $r9, $r11, $r15, $r22, r36;
        double $d0, $d1;
        java.io.PrintStream $r17;
        java.util.Iterator $r12;
        ucar.nc2.iosp.grid.GridVertCoord$LevelCoord $r37;
        java.lang.Object $r3, $r35;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r2 := @parameter0: java.util.List;

        r5 := @parameter1: java.lang.String;

        r6 := @parameter2: ucar.grid.GridTableLookup;

        r33 := @parameter3: ucar.nc2.iosp.grid.GridHorizCoordSys;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridVertCoord: int seq> = 0;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues> = null;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds> = 0;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVerticalCoordinate> = 0;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors> = null;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive> = "up";

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels> = $r1;

        $r3 = interfaceinvoke r2.<java.util.List: java.lang.Object get(int)>(0);

        $r4 = (ucar.grid.GridRecord) $r3;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord> = $r4;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String levelName> = r5;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup> = r6;

        $r7 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $z0 = interfaceinvoke r6.<ucar.grid.GridTableLookup: boolean isVerticalCoordinate(ucar.grid.GridRecord)>($r7);

        r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVerticalCoordinate> = $z0;

        $r8 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $z1 = interfaceinvoke r6.<ucar.grid.GridTableLookup: boolean isPositiveUp(ucar.grid.GridRecord)>($r8);

        if $z1 == 0 goto label1;

        $r39 = "up";

        goto label2;

     label1:
        $r39 = "down";

     label2:
        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive> = $r39;

        $r9 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $r10 = interfaceinvoke r6.<ucar.grid.GridTableLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>($r9);

        r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String units> = $r10;

        $r11 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $z2 = interfaceinvoke r6.<ucar.grid.GridTableLookup: boolean isLayer(ucar.grid.GridRecord)>($r11);

        r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds> = $z2;

        $r12 = interfaceinvoke r2.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z6 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label5;

        $r35 = interfaceinvoke $r12.<java.util.Iterator: java.lang.Object next()>();

        r36 = (ucar.grid.GridRecord) $r35;

        $i2 = specialinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: int coordIndex(ucar.grid.GridRecord)>(r36);

        if $i2 >= 0 goto label4;

        $r38 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $r37 = new ucar.nc2.iosp.grid.GridVertCoord$LevelCoord;

        $d0 = interfaceinvoke r36.<ucar.grid.GridRecord: double getLevel1()>();

        $d1 = interfaceinvoke r36.<ucar.grid.GridRecord: double getLevel2()>();

        specialinvoke $r37.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: void <init>(ucar.nc2.iosp.grid.GridVertCoord,double,double)>(r0, $d0, $d1);

        interfaceinvoke $r38.<java.util.List: boolean add(java.lang.Object)>($r37);

     label4:
        goto label3;

     label5:
        $r13 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r13);

        $r14 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive>;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean equals(java.lang.Object)>("down");

        if $z3 == 0 goto label6;

        $r34 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r34);

     label6:
        $r15 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $i0 = interfaceinvoke $r15.<ucar.grid.GridRecord: int getLevelType1()>();

        if $i0 != 109 goto label7;

        $z5 = r6 instanceof ucar.grib.grib1.Grib1GridTableLookup;

        if $z5 == 0 goto label7;

        virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean checkForPressureLevels(java.util.List,ucar.nc2.iosp.grid.GridHorizCoordSys)>(r2, r33);

     label7:
        $z7 = <ucar.nc2.iosp.grid.GridServiceProvider: boolean debugVert>;

        if $z7 == 0 goto label8;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GribVertCoord: ");

        $r19 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r22 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $i1 = interfaceinvoke $r22.<ucar.grid.GridRecord: int getLevelType1()>();

        $r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") isVertDimensionUsed= ");

        $z4 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVertDimensionUsed()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" positive=");

        $r27 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive>;

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" units=");

        $r30 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String units>;

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r32);

     label8:
        return;
    }

    void setSequence(int)
    {
        int i0;
        ucar.nc2.iosp.grid.GridVertCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: int seq> = i0;

        return;
    }

    java.lang.String getLevelName()
    {
        ucar.nc2.iosp.grid.GridVertCoord r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String levelName>;

        return $r1;
    }

    java.lang.String getVariableName()
    {
        ucar.nc2.iosp.grid.GridVertCoord r0;
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r3, $r4;
        java.lang.String $r2, $r5;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        $i0 = r0.<ucar.nc2.iosp.grid.GridVertCoord: int seq>;

        if $i0 != 0 goto label1;

        $r5 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String levelName>;

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String levelName>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $i1 = r0.<ucar.nc2.iosp.grid.GridVertCoord: int seq>;

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r5;
    }

    int getNLevels()
    {
        int $i0;
        java.util.List $r1;
        ucar.nc2.iosp.grid.GridVertCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        return $i0;
    }

    boolean isVertDimensionUsed()
    {
        int $i0;
        ucar.nc2.iosp.grid.GridVertCoord r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: int getNLevels()>();

        if $i0 != 1 goto label1;

        $z0 = r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVerticalCoordinate>;

        goto label2;

     label1:
        $z0 = 1;

     label2:
        return $z0;
    }

    boolean matchLevels(java.util.List)
    {
        java.util.ArrayList $r0;
        int $i0;
        java.lang.String $r4;
        boolean $z0, $z1, $z2, $z3;
        ucar.grid.GridRecord r7;
        double $d0, $d1;
        java.util.Iterator $r2;
        ucar.nc2.iosp.grid.GridVertCoord r3;
        ucar.nc2.iosp.grid.GridVertCoord$LevelCoord $r8;
        java.util.List r1, $r5;
        java.lang.Object $r6;

        r3 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r1 := @parameter0: java.util.List;

        $r0 = new java.util.ArrayList;

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        specialinvoke $r0.<java.util.ArrayList: void <init>(int)>($i0);

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r6 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r7 = (ucar.grid.GridRecord) $r6;

        $r8 = new ucar.nc2.iosp.grid.GridVertCoord$LevelCoord;

        $d0 = interfaceinvoke r7.<ucar.grid.GridRecord: double getLevel1()>();

        $d1 = interfaceinvoke r7.<ucar.grid.GridRecord: double getLevel2()>();

        specialinvoke $r8.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: void <init>(ucar.nc2.iosp.grid.GridVertCoord,double,double)>(r3, $d0, $d1);

        $z3 = interfaceinvoke $r0.<java.util.List: boolean contains(java.lang.Object)>($r8);

        if $z3 != 0 goto label2;

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>($r8);

     label2:
        goto label1;

     label3:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r0);

        $r4 = r3.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive>;

        $z1 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("down");

        if $z1 == 0 goto label4;

        staticinvoke <java.util.Collections: void reverse(java.util.List)>($r0);

     label4:
        $r5 = r3.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $z2 = virtualinvoke $r0.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        return $z2;
    }

    boolean checkForPressureLevels(java.util.List, ucar.nc2.iosp.grid.GridHorizCoordSys)
    {
        ucar.nc2.iosp.grid.GridHorizCoordSys r0;
        double[] $r6, $r8, $r12;
        ucar.grid.GridDefRecord $r1;
        ucar.grib.grib1.Grib1GDSVariables r3;
        int $i0, $i1, $i2, i3;
        boolean $z0;
        double $d0;
        ucar.nc2.iosp.grid.GridVertCoord r4;
        ucar.nc2.iosp.grid.GridVertCoord$LevelCoord r11;
        java.util.List $r5, $r7, $r9, r13;
        java.lang.Object $r10;
        ucar.grib.GribGDSVariablesIF $r2;

        r4 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r13 := @parameter0: java.util.List;

        r0 := @parameter1: ucar.nc2.iosp.grid.GridHorizCoordSys;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridHorizCoordSys: ucar.grid.GridDefRecord getGds()>();

        $r2 = virtualinvoke $r1.<ucar.grid.GridDefRecord: ucar.grib.GribGDSVariablesIF getGdsv()>();

        r3 = (ucar.grib.grib1.Grib1GDSVariables) $r2;

        if r3 == null goto label1;

        $z0 = virtualinvoke r3.<ucar.grib.grib1.Grib1GDSVariables: boolean hasVerticalPressureLevels()>();

        if $z0 != 0 goto label2;

     label1:
        return 0;

     label2:
        $r5 = r4.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i0 = interfaceinvoke $r5.<java.util.List: int size()>();

        $r6 = newarray (double)[$i0];

        r4.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues> = $r6;

        i3 = 0;

     label3:
        $r7 = r4.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i1 = interfaceinvoke $r7.<java.util.List: int size()>();

        if i3 >= $i1 goto label4;

        $r9 = r4.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $r10 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>(i3);

        r11 = (ucar.nc2.iosp.grid.GridVertCoord$LevelCoord) $r10;

        $r12 = r4.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $d0 = r11.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double value1>;

        $r12[i3] = $d0;

        i3 = i3 + 1;

        goto label3;

     label4:
        $i2 = virtualinvoke r3.<ucar.grib.grib1.Grib1GDSVariables: int getNV()>();

        if $i2 <= 2 goto label5;

        if $i2 >= 255 goto label5;

        $r8 = virtualinvoke r3.<ucar.grib.grib1.Grib1GDSVariables: double[] getVerticalPressureLevels()>();

        r4.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors> = $r8;

     label5:
        return 1;
    }

    void addDimensionsToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        double[] $r2, $r7;
        ucar.nc2.iosp.grid.GridVertCoord r0;
        ucar.nc2.Group r4;
        java.util.List $r1;
        int i0;
        ucar.nc2.Dimension $r5;
        ucar.nc2.NetcdfFile r3;
        java.lang.String $r6;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r3 := @parameter0: ucar.nc2.NetcdfFile;

        r4 := @parameter1: ucar.nc2.Group;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVertDimensionUsed()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r1 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        $r2 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        if $r2 == null goto label2;

        $r7 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        i0 = lengthof $r7;

     label2:
        $r5 = new ucar.nc2.Dimension;

        $r6 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        specialinvoke $r5.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r6, i0, 1);

        virtualinvoke r3.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(r4, $r5);

        return;
    }

    void addToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        ucar.nc2.iosp.grid.GridVertCoord r0;
        ucar.nc2.Attribute $r18, $r19, $r22, $r23, $r32, $r33, $r50, $r51, $r61, $r67, $r89, $r92, $r95, $r98, $r105, $r106;
        java.lang.StringBuilder $r45, $r47, $r48, $r54, $r56, $r57, $r59, $r62, $r63, $r65, $r100, $r101, $r102;
        ucar.ma2.Array $r14, $r29, $r37, $r74;
        ucar.ma2.Index $r75, $r79, $r80;
        int[] $r10, $r27, $r35, $r71;
        ucar.ma2.DataType $r4, $r13, $r21, $r28, $r31, $r36, $r53, $r73;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, i16, i17, i18, i19, i20;
        ucar.nc2.Variable $r1, $r17, $r20, $r30, $r52;
        java.lang.Object $r78, $r85;
        ucar.nc2.constants.AxisType r111;
        ucar.nc2.Group r103;
        double[] $r11, $r12, $r16, $r25, $r39, $r41, $r72, $r76, $r82, $r86, $r113, r116, r117;
        java.lang.String $r3, $r7, $r9, $r15, $r24, $r34, $r46, $r49, $r55, $r58, $r60, $r64, $r66, $r70, $r87, $r88, $r91, $r93, $r97, $r99, r104, $r109, $r110;
        ucar.grid.GridRecord $r5, $r68, $r90, $r96, $r108;
        ucar.nc2.iosp.grid.GridVertCoord$LevelCoord r114, r115;
        ucar.nc2.Dimension $r44;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        java.util.List $r26, $r38, $r40, $r42, $r43, $r77, $r81, $r83, $r84;
        ucar.nc2.NetcdfFile r2;
        ucar.grid.GridTableLookup $r6, $r8, $r69, $r94, $r107, $r112;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r2 := @parameter0: ucar.nc2.NetcdfFile;

        r103 := @parameter1: ucar.nc2.Group;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVertDimensionUsed()>();

        if $z0 != 0 goto label01;

        r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord> = null;

        return;

     label01:
        if r103 != null goto label02;

        r103 = virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

     label02:
        $r1 = new ucar.nc2.Variable;

        $r3 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        specialinvoke $r1.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r2, r103, null, $r3);

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r1.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r4);

        $r6 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup>;

        $r5 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $r7 = interfaceinvoke $r6.<ucar.grid.GridTableLookup: java.lang.String getLevelDescription(ucar.grid.GridRecord)>($r5);

        r104 = $r7;

        $r8 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup>;

        $z1 = $r8 instanceof ucar.grib.grib2.Grib2GridTableLookup;

        if $z1 == 0 goto label03;

        $z6 = r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds>;

        if $z6 == 0 goto label03;

        $r100 = new java.lang.StringBuilder;

        specialinvoke $r100.<java.lang.StringBuilder: void <init>()>();

        $r101 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Layer between ");

        $r102 = virtualinvoke $r101.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        r104 = virtualinvoke $r102.<java.lang.StringBuilder: java.lang.String toString()>();

     label03:
        $r105 = new ucar.nc2.Attribute;

        specialinvoke $r105.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", r104);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r105);

        $r106 = new ucar.nc2.Attribute;

        $r107 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup>;

        $r108 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $r109 = interfaceinvoke $r107.<ucar.grid.GridTableLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>($r108);

        specialinvoke $r106.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r109);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r106);

        $r110 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive>;

        if $r110 == null goto label04;

        $r98 = new ucar.nc2.Attribute;

        $r99 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String positive>;

        specialinvoke $r98.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("positive", $r99);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r98);

     label04:
        $r9 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String units>;

        if $r9 == null goto label11;

        $r87 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String units>;

        $z3 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("millibar", $r87);

        if $z3 == 0 goto label05;

        r111 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Pressure>;

        goto label07;

     label05:
        $r88 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String units>;

        $z4 = staticinvoke <ucar.nc2.units.SimpleUnit: boolean isCompatible(java.lang.String,java.lang.String)>("m", $r88);

        if $z4 == 0 goto label06;

        r111 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        goto label07;

     label06:
        r111 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType GeoZ>;

     label07:
        $r112 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup>;

        $z7 = $r112 instanceof ucar.grib.grib2.Grib2GridTableLookup;

        if $z7 != 0 goto label08;

        $r94 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup>;

        $z5 = $r94 instanceof ucar.grib.grib1.Grib1GridTableLookup;

        if $z5 == 0 goto label09;

     label08:
        $r89 = new ucar.nc2.Attribute;

        $r90 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $i14 = interfaceinvoke $r90.<ucar.grid.GridRecord: int getLevelType1()>();

        $r91 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i14);

        specialinvoke $r89.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("GRIB_level_type", $r91);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r89);

        goto label10;

     label09:
        $r95 = new ucar.nc2.Attribute;

        $r96 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $i15 = interfaceinvoke $r96.<ucar.grid.GridRecord: int getLevelType1()>();

        $r97 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i15);

        specialinvoke $r95.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("level_type", $r97);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r95);

     label10:
        $r92 = new ucar.nc2.Attribute;

        $r93 = virtualinvoke r111.<ucar.nc2.constants.AxisType: java.lang.String toString()>();

        specialinvoke $r92.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateAxisType", $r93);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r92);

     label11:
        $r113 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        if $r113 != null goto label13;

        $r81 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i12 = interfaceinvoke $r81.<java.util.List: int size()>();

        $r82 = newarray (double)[$i12];

        r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues> = $r82;

        i16 = 0;

     label12:
        $r83 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i13 = interfaceinvoke $r83.<java.util.List: int size()>();

        if i16 >= $i13 goto label13;

        $r84 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $r85 = interfaceinvoke $r84.<java.util.List: java.lang.Object get(int)>(i16);

        r114 = (ucar.nc2.iosp.grid.GridVertCoord$LevelCoord) $r85;

        $r86 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $d4 = r114.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double mid>;

        $r86[i16] = $d4;

        i16 = i16 + 1;

        goto label12;

     label13:
        $r13 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r10 = newarray (int)[1];

        $r11 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $i0 = lengthof $r11;

        $r10[0] = $i0;

        $r12 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $r14 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r13, $r10, $r12);

        $r15 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        virtualinvoke $r1.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r15);

        virtualinvoke $r1.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r14, 1);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r103, $r1);

        $z2 = r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds>;

        if $z2 == 0 goto label16;

        $r44 = staticinvoke <ucar.nc2.dataset.DatasetConstructor: ucar.nc2.Dimension getBoundsDimension(ucar.nc2.NetcdfFile)>(r2);

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        $r47 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_bounds");

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>();

        $r50 = new ucar.nc2.Attribute;

        specialinvoke $r50.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("bounds", $r49);

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r50);

        $r51 = new ucar.nc2.Attribute;

        specialinvoke $r51.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("_CoordinateZisLayer", "true");

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r51);

        $r52 = new ucar.nc2.Variable;

        specialinvoke $r52.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r2, r103, null, $r49);

        $r53 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r52.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r58 = virtualinvoke $r44.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r52.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r60);

        $r61 = new ucar.nc2.Attribute;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bounds for ");

        $r64 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getName()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r66);

        virtualinvoke $r52.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r61);

        $r67 = new ucar.nc2.Attribute;

        $r69 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridTableLookup lookup>;

        $r68 = r0.<ucar.nc2.iosp.grid.GridVertCoord: ucar.grid.GridRecord typicalRecord>;

        $r70 = interfaceinvoke $r69.<ucar.grid.GridTableLookup: java.lang.String getLevelUnit(ucar.grid.GridRecord)>($r68);

        specialinvoke $r67.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r70);

        virtualinvoke $r52.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r67);

        $r73 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r71 = newarray (int)[2];

        $r72 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $i10 = lengthof $r72;

        $r71[0] = $i10;

        $r71[1] = 2;

        $r74 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[])>($r73, $r71);

        $r75 = virtualinvoke $r74.<ucar.ma2.Array: ucar.ma2.Index getIndex()>();

        i17 = 0;

     label14:
        $r76 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $i11 = lengthof $r76;

        if i17 >= $i11 goto label15;

        $r77 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $r78 = interfaceinvoke $r77.<java.util.List: java.lang.Object get(int)>(i17);

        r115 = (ucar.nc2.iosp.grid.GridVertCoord$LevelCoord) $r78;

        $r79 = virtualinvoke $r75.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i17, 0);

        $d2 = r115.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double value1>;

        virtualinvoke $r74.<ucar.ma2.Array: void setDouble(ucar.ma2.Index,double)>($r79, $d2);

        $r80 = virtualinvoke $r75.<ucar.ma2.Index: ucar.ma2.Index set(int,int)>(i17, 1);

        $d3 = r115.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double value2>;

        virtualinvoke $r74.<ucar.ma2.Array: void setDouble(ucar.ma2.Index,double)>($r80, $d3);

        i17 = i17 + 1;

        goto label14;

     label15:
        virtualinvoke $r52.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r74, 1);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r103, $r52);

     label16:
        $r16 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors>;

        if $r16 == null goto label25;

        if r103 != null goto label17;

        r103 = virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

     label17:
        $r17 = virtualinvoke r103.<ucar.nc2.Group: ucar.nc2.Variable findVariable(java.lang.String)>("hybrida");

        if $r17 == null goto label18;

        return;

     label18:
        $r18 = new ucar.nc2.Attribute;

        specialinvoke $r18.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("standard_name", "atmosphere_hybrid_sigma_pressure_coordinate");

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r18);

        $r19 = new ucar.nc2.Attribute;

        specialinvoke $r19.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("formula_terms", "ap: hybrida b: hybridb ps: Pressure");

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r19);

        $r20 = new ucar.nc2.Variable;

        specialinvoke $r20.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r2, r103, null, "hybrida");

        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r20.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r21);

        $r22 = new ucar.nc2.Attribute;

        specialinvoke $r22.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "level_a_factor");

        virtualinvoke $r20.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r22);

        $r23 = new ucar.nc2.Attribute;

        specialinvoke $r23.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "");

        virtualinvoke $r20.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r23);

        $r24 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        virtualinvoke $r20.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r24);

        $r25 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors>;

        $i1 = lengthof $r25;

        i18 = $i1 / 2;

        $r26 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i2 = interfaceinvoke $r26.<java.util.List: int size()>();

        if $i2 >= i18 goto label19;

        $r42 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i8 = interfaceinvoke $r42.<java.util.List: int size()>();

        r116 = newarray (double)[$i8];

        $r43 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i9 = interfaceinvoke $r43.<java.util.List: int size()>();

        r117 = newarray (double)[$i9];

        goto label20;

     label19:
        r116 = newarray (double)[i18];

        r117 = newarray (double)[i18];

     label20:
        i19 = 0;

     label21:
        if i19 >= i18 goto label22;

        $r40 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i7 = interfaceinvoke $r40.<java.util.List: int size()>();

        if i19 >= $i7 goto label22;

        $r41 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors>;

        $d1 = $r41[i19];

        r116[i19] = $d1;

        i19 = i19 + 1;

        goto label21;

     label22:
        $r28 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r27 = newarray (int)[1];

        $i3 = lengthof r116;

        $r27[0] = $i3;

        $r29 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r28, $r27, r116);

        virtualinvoke $r20.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r29, 1);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r103, $r20);

        $r30 = new ucar.nc2.Variable;

        specialinvoke $r30.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r2, r103, null, "hybridb");

        $r31 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        virtualinvoke $r30.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r31);

        $r32 = new ucar.nc2.Attribute;

        specialinvoke $r32.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "level_b_factor");

        virtualinvoke $r30.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r32);

        $r33 = new ucar.nc2.Attribute;

        specialinvoke $r33.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", "");

        virtualinvoke $r30.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r33);

        $r34 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getVariableName()>();

        virtualinvoke $r30.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r34);

        i20 = 0;

     label23:
        if i20 >= i18 goto label24;

        $r38 = r0.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i5 = interfaceinvoke $r38.<java.util.List: int size()>();

        if i20 >= $i5 goto label24;

        $r39 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] factors>;

        $i6 = i20 + i18;

        $d0 = $r39[$i6];

        r117[i20] = $d0;

        i20 = i20 + 1;

        goto label23;

     label24:
        $r36 = <ucar.ma2.DataType: ucar.ma2.DataType DOUBLE>;

        $r35 = newarray (int)[1];

        $i4 = lengthof r117;

        $r35[0] = $i4;

        $r37 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r36, $r35, r117);

        virtualinvoke $r30.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>($r37, 1);

        virtualinvoke r2.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r103, $r30);

     label25:
        return;
    }

    int getIndex(ucar.grid.GridRecord)
    {
        int $i0;
        ucar.nc2.iosp.grid.GridVertCoord r0;
        boolean $z0;
        ucar.grid.GridRecord r1;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r1 := @parameter0: ucar.grid.GridRecord;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean isVertDimensionUsed()>();

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $i0 = specialinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: int coordIndex(ucar.grid.GridRecord)>(r1);

        return $i0;
    }

    public int compareTo(ucar.nc2.iosp.grid.GridVertCoord)
    {
        int $i0;
        ucar.nc2.iosp.grid.GridVertCoord r0, r2;
        java.lang.String $r1, $r3;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r2 := @parameter0: ucar.nc2.iosp.grid.GridVertCoord;

        $r1 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getLevelName()>();

        $r3 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String getLevelName()>();

        $i0 = virtualinvoke $r1.<java.lang.String: int compareToIgnoreCase(java.lang.String)>($r3);

        return $i0;
    }

    public double getCoord(int)
    {
        double[] $r1, $r2;
        int i0;
        ucar.nc2.iosp.grid.GridVertCoord r0;
        double $d0;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.grid.GridVertCoord: double[] coordValues>;

        $d0 = $r2[i0];

     label2:
        return $d0;
    }

    private int coordIndex(ucar.grid.GridRecord)
    {
        byte $b0;
        int i1, $i2, $i3, $i5;
        ucar.grid.GridRecord r0;
        double $d0, $d1, $d2, $d3, $d4, d5, d6;
        boolean $z0, $z1, $z2, $z3, $z4;
        ucar.nc2.iosp.grid.GridVertCoord r1;
        ucar.nc2.iosp.grid.GridVertCoord$LevelCoord r4;
        java.util.List $r2, $r5;
        java.lang.Object $r3;

        r1 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r0 := @parameter0: ucar.grid.GridRecord;

        $d0 = interfaceinvoke r0.<ucar.grid.GridRecord: double getLevel1()>();

        d5 = $d0;

        $d1 = interfaceinvoke r0.<ucar.grid.GridRecord: double getLevel2()>();

        d6 = $d1;

        $z0 = r1.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds>;

        if $z0 == 0 goto label1;

        $b0 = $d0 cmpl $d1;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label1;

        d5 = interfaceinvoke r0.<ucar.grid.GridRecord: double getLevel2()>();

        d6 = interfaceinvoke r0.<ucar.grid.GridRecord: double getLevel1()>();

     label1:
        i1 = 0;

     label2:
        $r5 = r1.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $i2 = interfaceinvoke $r5.<java.util.List: int size()>();

        if i1 >= $i2 goto label5;

        $r2 = r1.<ucar.nc2.iosp.grid.GridVertCoord: java.util.List levels>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i1);

        r4 = (ucar.nc2.iosp.grid.GridVertCoord$LevelCoord) $r3;

        $z1 = r1.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds>;

        if $z1 == 0 goto label3;

        $d3 = r4.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double value1>;

        $z3 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d3, d5);

        if $z3 == 0 goto label4;

        $d4 = r4.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double value2>;

        $z4 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d4, d6);

        if $z4 == 0 goto label4;

        return i1;

     label3:
        $d2 = r4.<ucar.nc2.iosp.grid.GridVertCoord$LevelCoord: double value1>;

        $z2 = staticinvoke <ucar.nc2.util.Misc: boolean closeEnough(double,double)>($d2, d5);

        if $z2 == 0 goto label4;

        return i1;

     label4:
        i1 = i1 + 1;

        goto label2;

     label5:
        $i5 = (int) -1;

        return $i5;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.grid.GridVertCoord r2;
        int $i0;
        java.lang.StringBuilder $r0, $r1, $r4, $r5, $r6, $r7, $r8;
        java.lang.String $r3, $r9;

        r2 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("GridVertCoord{levelName=\'");

        $r3 = r2.<ucar.nc2.iosp.grid.GridVertCoord: java.lang.String levelName>;

        $r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", seq=");

        $i0 = r2.<ucar.nc2.iosp.grid.GridVertCoord: int seq>;

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        ucar.nc2.iosp.grid.GridVertCoord r0, $r2;

        r0 := @this: ucar.nc2.iosp.grid.GridVertCoord;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.grid.GridVertCoord) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridVertCoord: int compareTo(ucar.nc2.iosp.grid.GridVertCoord)>($r2);

        return $i0;
    }

    static boolean access$000(ucar.nc2.iosp.grid.GridVertCoord)
    {
        ucar.nc2.iosp.grid.GridVertCoord r0;
        boolean $z0;

        r0 := @parameter0: ucar.nc2.iosp.grid.GridVertCoord;

        $z0 = r0.<ucar.nc2.iosp.grid.GridVertCoord: boolean usesBounds>;

        return $z0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/grid/GridVertCoord;");

        <ucar.nc2.iosp.grid.GridVertCoord: org.slf4j.Logger logger> = $r0;

        return;
    }
}
