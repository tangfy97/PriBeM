class org.apache.commons.collections.DoubleOrderedMap$2 extends java.util.AbstractSet
{
    private final org.apache.commons.collections.DoubleOrderedMap this$0;

    void <init>(org.apache.commons.collections.DoubleOrderedMap)
    {
        org.apache.commons.collections.DoubleOrderedMap$2 r0;
        org.apache.commons.collections.DoubleOrderedMap r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$2;

        r1 := @parameter0: org.apache.commons.collections.DoubleOrderedMap;

        specialinvoke r0.<java.util.AbstractSet: void <init>()>();

        r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.DoubleOrderedMap$2 r1;
        org.apache.commons.collections.DoubleOrderedMap$2$1 $r0;

        r1 := @this: org.apache.commons.collections.DoubleOrderedMap$2;

        $r0 = new org.apache.commons.collections.DoubleOrderedMap$2$1;

        specialinvoke $r0.<org.apache.commons.collections.DoubleOrderedMap$2$1: void <init>(org.apache.commons.collections.DoubleOrderedMap$2,int)>(r1, 1);

        return $r0;
    }

    public int size()
    {
        int $i0;
        org.apache.commons.collections.DoubleOrderedMap$2 r0;
        org.apache.commons.collections.DoubleOrderedMap $r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$2;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $i0 = virtualinvoke $r1.<org.apache.commons.collections.DoubleOrderedMap: int size()>();

        return $i0;
    }

    public boolean contains(java.lang.Object)
    {
        org.apache.commons.collections.DoubleOrderedMap$2 r0;
        java.lang.Object r1;
        org.apache.commons.collections.DoubleOrderedMap $r2;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $z0 = virtualinvoke $r2.<org.apache.commons.collections.DoubleOrderedMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public boolean remove(java.lang.Object)
    {
        org.apache.commons.collections.DoubleOrderedMap$2 r0;
        int $i0, $i1;
        java.lang.Object r2;
        org.apache.commons.collections.DoubleOrderedMap $r1, $r3, $r4;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$2;

        r2 := @parameter0: java.lang.Object;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $i0 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: int access$500(org.apache.commons.collections.DoubleOrderedMap)>($r1);

        $r3 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        virtualinvoke $r3.<org.apache.commons.collections.DoubleOrderedMap: java.lang.Object remove(java.lang.Object)>(r2);

        $r4 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        $i1 = staticinvoke <org.apache.commons.collections.DoubleOrderedMap: int access$500(org.apache.commons.collections.DoubleOrderedMap)>($r4);

        if $i1 == $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void clear()
    {
        org.apache.commons.collections.DoubleOrderedMap$2 r0;
        org.apache.commons.collections.DoubleOrderedMap $r1;

        r0 := @this: org.apache.commons.collections.DoubleOrderedMap$2;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        virtualinvoke $r1.<org.apache.commons.collections.DoubleOrderedMap: void clear()>();

        return;
    }

    static org.apache.commons.collections.DoubleOrderedMap access$400(org.apache.commons.collections.DoubleOrderedMap$2)
    {
        org.apache.commons.collections.DoubleOrderedMap$2 r0;
        org.apache.commons.collections.DoubleOrderedMap $r1;

        r0 := @parameter0: org.apache.commons.collections.DoubleOrderedMap$2;

        $r1 = r0.<org.apache.commons.collections.DoubleOrderedMap$2: org.apache.commons.collections.DoubleOrderedMap this$0>;

        return $r1;
    }
}
