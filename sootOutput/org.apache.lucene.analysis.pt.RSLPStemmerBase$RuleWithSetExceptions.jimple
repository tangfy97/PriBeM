public class org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions extends org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule
{
    protected final org.apache.lucene.analysis.util.CharArraySet exceptions;

    public void <init>(java.lang.String, int, java.lang.String, java.lang.String[])
    {
        java.lang.String[] r3;
        org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions r0;
        int i0, $i1, i2;
        java.lang.String r1, r2, $r7, $r11, $r16;
        boolean $z0;
        java.lang.RuntimeException $r8;
        org.apache.lucene.util.Version $r5;
        java.util.List $r6;
        org.apache.lucene.analysis.util.CharArraySet $r4;
        java.lang.StringBuilder $r9, $r10, $r12, $r13, $r14, $r15;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        r2 := @parameter2: java.lang.String;

        r3 := @parameter3: java.lang.String[];

        specialinvoke r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: void <init>(java.lang.String,int,java.lang.String)>(r1, i0, r2);

        i2 = 0;

     label1:
        $i1 = lengthof r3;

        if i2 >= $i1 goto label3;

        $r7 = r3[i2];

        $z0 = virtualinvoke $r7.<java.lang.String: boolean endsWith(java.lang.String)>(r1);

        if $z0 != 0 goto label2;

        $r8 = new java.lang.RuntimeException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("useless exception \'");

        $r11 = r3[i2];

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' does not end with \'");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r8;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        $r4 = new org.apache.lucene.analysis.util.CharArraySet;

        $r5 = <org.apache.lucene.util.Version: org.apache.lucene.util.Version LUCENE_31>;

        $r6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r3);

        specialinvoke $r4.<org.apache.lucene.analysis.util.CharArraySet: void <init>(org.apache.lucene.util.Version,java.util.Collection,boolean)>($r5, $r6, 0);

        r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions: org.apache.lucene.analysis.util.CharArraySet exceptions> = $r4;

        return;
    }

    public boolean matches(char[], int)
    {
        org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions r0;
        int i0;
        char[] r1;
        org.apache.lucene.analysis.util.CharArraySet $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions;

        r1 := @parameter0: char[];

        i0 := @parameter1: int;

        $z0 = specialinvoke r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$Rule: boolean matches(char[],int)>(r1, i0);

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.lucene.analysis.pt.RSLPStemmerBase$RuleWithSetExceptions: org.apache.lucene.analysis.util.CharArraySet exceptions>;

        $z1 = virtualinvoke $r2.<org.apache.lucene.analysis.util.CharArraySet: boolean contains(char[],int,int)>(r1, 0, i0);

        if $z1 != 0 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }
}
