class org.apache.commons.collections.map.MultiValueMap$ReflectionFactory extends java.lang.Object implements org.apache.commons.collections.Factory
{
    private final java.lang.Class clazz;

    public void <init>(java.lang.Class)
    {
        org.apache.commons.collections.map.MultiValueMap$ReflectionFactory r0;
        java.lang.Class r1;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$ReflectionFactory;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.collections.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz> = r1;

        return;
    }

    public java.lang.Object create()
    {
        java.lang.Exception $r3;
        org.apache.commons.collections.FunctorException $r4;
        java.lang.StringBuffer $r5, $r6, $r8;
        org.apache.commons.collections.map.MultiValueMap$ReflectionFactory r0;
        java.lang.Class $r1, $r7;
        java.lang.Object $r2;
        java.lang.String $r9;

        r0 := @this: org.apache.commons.collections.map.MultiValueMap$ReflectionFactory;

     label1:
        $r1 = r0.<org.apache.commons.collections.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz>;

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.Object newInstance()>();

     label2:
        return $r2;

     label3:
        $r3 := @caughtexception;

        $r4 = new org.apache.commons.collections.FunctorException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Cannot instantiate class: ");

        $r7 = r0.<org.apache.commons.collections.map.MultiValueMap$ReflectionFactory: java.lang.Class clazz>;

        $r8 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.apache.commons.collections.FunctorException: void <init>(java.lang.String,java.lang.Throwable)>($r9, $r3);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label3;
    }
}
