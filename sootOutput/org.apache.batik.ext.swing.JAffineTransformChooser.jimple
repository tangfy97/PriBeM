public class org.apache.batik.ext.swing.JAffineTransformChooser extends org.apache.batik.ext.swing.JGridBagPanel
{
    public static final java.lang.String LABEL_ANGLE;
    public static final java.lang.String LABEL_DEGREE;
    public static final java.lang.String LABEL_PERCENT;
    public static final java.lang.String LABEL_ROTATE;
    public static final java.lang.String LABEL_SCALE;
    public static final java.lang.String LABEL_RX;
    public static final java.lang.String LABEL_RY;
    public static final java.lang.String LABEL_SX;
    public static final java.lang.String LABEL_SY;
    public static final java.lang.String LABEL_TRANSLATE;
    public static final java.lang.String LABEL_TX;
    public static final java.lang.String LABEL_TY;
    public static final java.lang.String CONFIG_TEXT_FIELD_WIDTH;
    public static final java.lang.String CONFIG_TOP_PAD;
    public static final java.lang.String CONFIG_LEFT_PAD;
    public static final java.lang.String CONFIG_BOTTOM_PAD;
    public static final java.lang.String CONFIG_RIGHT_PAD;
    protected java.awt.geom.AffineTransform txf;
    protected org.apache.batik.ext.swing.DoubleDocument txModel;
    protected org.apache.batik.ext.swing.DoubleDocument tyModel;
    protected org.apache.batik.ext.swing.DoubleDocument sxModel;
    protected org.apache.batik.ext.swing.DoubleDocument syModel;
    protected org.apache.batik.ext.swing.DoubleDocument rxModel;
    protected org.apache.batik.ext.swing.DoubleDocument ryModel;
    protected org.apache.batik.ext.swing.DoubleDocument rotateModel;
    protected static final double RAD_TO_DEG;
    protected static final double DEG_TO_RAD;

    public void <init>()
    {
        org.apache.batik.ext.swing.DoubleDocument $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.awt.geom.AffineTransform $r8;
        org.apache.batik.ext.swing.JAffineTransformChooser r0;

        r0 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        specialinvoke r0.<org.apache.batik.ext.swing.JGridBagPanel: void <init>()>();

        $r1 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r1.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument txModel> = $r1;

        $r2 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r2.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument tyModel> = $r2;

        $r3 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r3.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument sxModel> = $r3;

        $r4 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r4.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument syModel> = $r4;

        $r5 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r5.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rxModel> = $r5;

        $r6 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r6.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument ryModel> = $r6;

        $r7 = new org.apache.batik.ext.swing.DoubleDocument;

        specialinvoke $r7.<org.apache.batik.ext.swing.DoubleDocument: void <init>()>();

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rotateModel> = $r7;

        virtualinvoke r0.<org.apache.batik.ext.swing.JAffineTransformChooser: void build()>();

        $r8 = new java.awt.geom.AffineTransform;

        specialinvoke $r8.<java.awt.geom.AffineTransform: void <init>()>();

        virtualinvoke r0.<org.apache.batik.ext.swing.JAffineTransformChooser: void setAffineTransform(java.awt.geom.AffineTransform)>($r8);

        return;
    }

    protected void build()
    {
        org.apache.batik.ext.swing.DoubleDocument $r3, $r5, $r9, $r11;
        java.lang.String $r1, $r2, $r4, $r7, $r8, $r10, $r12, $r13;
        java.awt.Component $r6, $r14, $r15;
        org.apache.batik.ext.swing.JAffineTransformChooser r0;

        r0 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        $r1 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.translate");

        $r2 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.tx");

        $r3 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument txModel>;

        $r4 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.ty");

        $r5 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument tyModel>;

        $r6 = virtualinvoke r0.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.Component buildPanel(java.lang.String,java.lang.String,javax.swing.text.Document,java.lang.String,javax.swing.text.Document,java.lang.String,java.lang.String,boolean)>($r1, $r2, $r3, $r4, $r5, "", "", 1);

        $r7 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.scale");

        $r8 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.sx");

        $r9 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument sxModel>;

        $r10 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.sy");

        $r11 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument syModel>;

        $r12 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.percent");

        $r13 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.percent");

        $r14 = virtualinvoke r0.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.Component buildPanel(java.lang.String,java.lang.String,javax.swing.text.Document,java.lang.String,javax.swing.text.Document,java.lang.String,java.lang.String,boolean)>($r7, $r8, $r9, $r10, $r11, $r12, $r13, 1);

        $r15 = virtualinvoke r0.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.Component buildRotatePanel()>();

        virtualinvoke r0.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r6, 0, 0, 1, 1, 10, 1, 1.0, 1.0);

        virtualinvoke r0.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r14, 1, 0, 1, 1, 10, 1, 1.0, 1.0);

        virtualinvoke r0.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r15, 0, 1, 2, 1, 10, 1, 1.0, 1.0);

        return;
    }

    protected java.awt.Component buildRotatePanel()
    {
        org.apache.batik.ext.swing.DoubleDocument $r4, $r8, $r10;
        java.awt.Component $r6, $r11;
        org.apache.batik.ext.swing.JAffineTransformChooser r1;
        org.apache.batik.ext.swing.JGridBagPanel $r0;
        java.lang.String $r2, $r3, $r5, $r7, $r9, $r12;

        r1 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        $r0 = new org.apache.batik.ext.swing.JGridBagPanel;

        specialinvoke $r0.<org.apache.batik.ext.swing.JGridBagPanel: void <init>()>();

        $r2 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.rotate");

        $r3 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.angle");

        $r4 = r1.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rotateModel>;

        $r5 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.degree");

        $r6 = virtualinvoke r1.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.Component buildPanel(java.lang.String,java.lang.String,javax.swing.text.Document,java.lang.String,javax.swing.text.Document,java.lang.String,java.lang.String,boolean)>($r2, $r3, $r4, null, null, $r5, null, 0);

        $r7 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.rx");

        $r8 = r1.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rxModel>;

        $r9 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.ry");

        $r10 = r1.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument ryModel>;

        $r11 = virtualinvoke r1.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.Component buildPanel(java.lang.String,java.lang.String,javax.swing.text.Document,java.lang.String,javax.swing.text.Document,java.lang.String,java.lang.String,boolean)>("", $r7, $r8, $r9, $r10, null, null, 0);

        virtualinvoke $r0.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r6, 0, 0, 1, 1, 10, 1, 1.0, 1.0);

        virtualinvoke $r0.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r11, 1, 0, 1, 1, 10, 1, 1.0, 1.0);

        $r12 = staticinvoke <org.apache.batik.ext.swing.Resources: java.lang.String getString(java.lang.String)>("JAffineTransformChooser.label.rotate");

        virtualinvoke r1.<org.apache.batik.ext.swing.JAffineTransformChooser: void setPanelBorder(javax.swing.JComponent,java.lang.String)>($r0, $r12);

        return $r0;
    }

    protected java.awt.Component buildPanel(java.lang.String, java.lang.String, javax.swing.text.Document, java.lang.String, javax.swing.text.Document, java.lang.String, java.lang.String, boolean)
    {
        org.apache.batik.ext.swing.JAffineTransformChooser r1;
        org.apache.batik.ext.swing.JGridBagPanel $r0;
        java.lang.String r2, r4, r5, r6, r8;
        javax.swing.text.Document r3, r7;
        boolean z0;

        r1 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        r6 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: javax.swing.text.Document;

        r5 := @parameter3: java.lang.String;

        r7 := @parameter4: javax.swing.text.Document;

        r4 := @parameter5: java.lang.String;

        r8 := @parameter6: java.lang.String;

        z0 := @parameter7: boolean;

        $r0 = new org.apache.batik.ext.swing.JGridBagPanel;

        specialinvoke $r0.<org.apache.batik.ext.swing.JGridBagPanel: void <init>()>();

        virtualinvoke r1.<org.apache.batik.ext.swing.JAffineTransformChooser: void addToPanelAtRow(java.lang.String,javax.swing.text.Document,java.lang.String,org.apache.batik.ext.swing.JGridBagPanel,int)>(r2, r3, r4, $r0, 0);

        if r5 == null goto label1;

        virtualinvoke r1.<org.apache.batik.ext.swing.JAffineTransformChooser: void addToPanelAtRow(java.lang.String,javax.swing.text.Document,java.lang.String,org.apache.batik.ext.swing.JGridBagPanel,int)>(r5, r7, r8, $r0, 1);

     label1:
        if z0 == 0 goto label2;

        virtualinvoke r1.<org.apache.batik.ext.swing.JAffineTransformChooser: void setPanelBorder(javax.swing.JComponent,java.lang.String)>($r0, r6);

     label2:
        return $r0;
    }

    public void setPanelBorder(javax.swing.JComponent, java.lang.String)
    {
        javax.swing.JComponent r5;
        javax.swing.border.Border $r0, $r3;
        int $i0, $i1, $i2, $i3;
        javax.swing.border.CompoundBorder $r4;
        javax.swing.border.TitledBorder $r2;
        org.apache.batik.ext.swing.JAffineTransformChooser r6;
        java.lang.String r1;

        r6 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        r5 := @parameter0: javax.swing.JComponent;

        r1 := @parameter1: java.lang.String;

        $r0 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEtchedBorder()>();

        $r2 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.TitledBorder createTitledBorder(javax.swing.border.Border,java.lang.String)>($r0, r1);

        $i0 = staticinvoke <org.apache.batik.ext.swing.Resources: int getInteger(java.lang.String)>("JAffineTransformChooser.config.top.pad");

        $i1 = staticinvoke <org.apache.batik.ext.swing.Resources: int getInteger(java.lang.String)>("JAffineTransformChooser.config.left.pad");

        $i2 = staticinvoke <org.apache.batik.ext.swing.Resources: int getInteger(java.lang.String)>("JAffineTransformChooser.config.bottom.pad");

        $i3 = staticinvoke <org.apache.batik.ext.swing.Resources: int getInteger(java.lang.String)>("JAffineTransformChooser.config.right.pad");

        $r3 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.Border createEmptyBorder(int,int,int,int)>($i0, $i1, $i2, $i3);

        $r4 = staticinvoke <javax.swing.BorderFactory: javax.swing.border.CompoundBorder createCompoundBorder(javax.swing.border.Border,javax.swing.border.Border)>($r2, $r3);

        virtualinvoke r5.<javax.swing.JComponent: void setBorder(javax.swing.border.Border)>($r4);

        return;
    }

    protected void addToPanelAtRow(java.lang.String, javax.swing.text.Document, java.lang.String, org.apache.batik.ext.swing.JGridBagPanel, int)
    {
        javax.swing.JTextField $r0;
        javax.swing.JLabel $r3, $r5;
        int $i0, i1;
        org.apache.batik.ext.swing.JAffineTransformChooser r7;
        org.apache.batik.ext.swing.JGridBagPanel r2;
        javax.swing.text.Document r1;
        java.lang.String r4, r6;

        r7 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        r4 := @parameter0: java.lang.String;

        r1 := @parameter1: javax.swing.text.Document;

        r6 := @parameter2: java.lang.String;

        r2 := @parameter3: org.apache.batik.ext.swing.JGridBagPanel;

        i1 := @parameter4: int;

        $r0 = new javax.swing.JTextField;

        $i0 = staticinvoke <org.apache.batik.ext.swing.Resources: int getInteger(java.lang.String)>("JAffineTransformChooser.config.text.field.width");

        specialinvoke $r0.<javax.swing.JTextField: void <init>(int)>($i0);

        virtualinvoke $r0.<javax.swing.text.JTextComponent: void setDocument(javax.swing.text.Document)>(r1);

        $r3 = new javax.swing.JLabel;

        specialinvoke $r3.<javax.swing.JLabel: void <init>(java.lang.String)>(r4);

        virtualinvoke r2.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r3, 0, i1, 1, 1, 17, 2, 0.0, 0.0);

        virtualinvoke r2.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r0, 1, i1, 1, 1, 10, 2, 1.0, 0.0);

        $r5 = new javax.swing.JLabel;

        specialinvoke $r5.<javax.swing.JLabel: void <init>(java.lang.String)>(r6);

        virtualinvoke r2.<org.apache.batik.ext.swing.JGridBagPanel: void add(java.awt.Component,int,int,int,int,int,int,double,double)>($r5, 2, i1, 1, 1, 17, 2, 0.0, 0.0);

        return;
    }

    public java.awt.geom.AffineTransform getAffineTransform()
    {
        org.apache.batik.ext.swing.DoubleDocument $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        java.awt.geom.AffineTransform $r9, $r10;
        double[] r8;
        double $d0, d1, $d2, d3, $d4, d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, $d24, $d25, $d26;
        org.apache.batik.ext.swing.JAffineTransformChooser r0;

        r0 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        $r1 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument sxModel>;

        $d0 = virtualinvoke $r1.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        d1 = $d0 / 100.0;

        $r2 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument syModel>;

        $d2 = virtualinvoke $r2.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        d3 = $d2 / 100.0;

        $r3 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rotateModel>;

        $d4 = virtualinvoke $r3.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        d5 = $d4 * 0.017453292519943295;

        $r4 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rxModel>;

        $d6 = virtualinvoke $r4.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        $r5 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument ryModel>;

        $d7 = virtualinvoke $r5.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        $r6 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument txModel>;

        $d8 = virtualinvoke $r6.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        $r7 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument tyModel>;

        $d9 = virtualinvoke $r7.<org.apache.batik.ext.swing.DoubleDocument: double getValue()>();

        r8 = newarray (double)[6];

        $d10 = staticinvoke <java.lang.Math: double sin(double)>(d5);

        $d11 = staticinvoke <java.lang.Math: double cos(double)>(d5);

        $d12 = d1 * $d11;

        r8[0] = $d12;

        $d13 = d1 * $d10;

        r8[1] = $d13;

        $d14 = neg d3;

        $d15 = $d14 * $d10;

        r8[2] = $d15;

        $d16 = d3 * $d11;

        r8[3] = $d16;

        $d18 = $d8 + $d6;

        $d17 = $d6 * $d11;

        $d20 = $d18 - $d17;

        $d19 = $d7 * $d10;

        $d21 = $d20 + $d19;

        r8[4] = $d21;

        $d23 = $d9 + $d7;

        $d22 = $d6 * $d10;

        $d25 = $d23 - $d22;

        $d24 = $d7 * $d11;

        $d26 = $d25 - $d24;

        r8[5] = $d26;

        $r9 = new java.awt.geom.AffineTransform;

        specialinvoke $r9.<java.awt.geom.AffineTransform: void <init>(double[])>(r8);

        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.geom.AffineTransform txf> = $r9;

        $r10 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.geom.AffineTransform txf>;

        return $r10;
    }

    public void setAffineTransform(java.awt.geom.AffineTransform)
    {
        org.apache.batik.ext.swing.DoubleDocument $r1, $r2, $r3, $r4, $r5, $r6, $r7;
        byte $b0;
        java.awt.geom.AffineTransform r10, $r11;
        double[] $r9;
        int $i1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18, $d19, $d20, $d21, $d22, $d23, d24;
        org.apache.batik.ext.swing.JAffineTransformChooser r0;

        r0 := @this: org.apache.batik.ext.swing.JAffineTransformChooser;

        r10 := @parameter0: java.awt.geom.AffineTransform;

        if r10 != null goto label1;

        $r11 = new java.awt.geom.AffineTransform;

        specialinvoke $r11.<java.awt.geom.AffineTransform: void <init>()>();

        r10 = $r11;

     label1:
        r0.<org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.geom.AffineTransform txf> = r10;

        $r9 = newarray (double)[6];

        virtualinvoke r10.<java.awt.geom.AffineTransform: void getMatrix(double[])>($r9);

        $r1 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument txModel>;

        $d0 = $r9[4];

        virtualinvoke $r1.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>($d0);

        $r2 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument tyModel>;

        $d1 = $r9[5];

        virtualinvoke $r2.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>($d1);

        $d3 = $r9[0];

        $d2 = $r9[0];

        $d7 = $d3 * $d2;

        $d5 = $r9[1];

        $d4 = $r9[1];

        $d6 = $d5 * $d4;

        $d8 = $d7 + $d6;

        $d9 = staticinvoke <java.lang.Math: double sqrt(double)>($d8);

        $d11 = $r9[2];

        $d10 = $r9[2];

        $d15 = $d11 * $d10;

        $d13 = $r9[3];

        $d12 = $r9[3];

        $d14 = $d13 * $d12;

        $d16 = $d15 + $d14;

        $d17 = staticinvoke <java.lang.Math: double sqrt(double)>($d16);

        $r3 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument sxModel>;

        $d18 = 100.0 * $d9;

        virtualinvoke $r3.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>($d18);

        $r4 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument syModel>;

        $d19 = 100.0 * $d17;

        virtualinvoke $r4.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>($d19);

        d24 = 0.0;

        $d20 = $r9[0];

        $b0 = $d20 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $d23 = $r9[1];

        $d22 = $r9[0];

        d24 = staticinvoke <java.lang.Math: double atan2(double,double)>($d23, $d22);

     label2:
        $r5 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rotateModel>;

        $d21 = 57.29577951308232 * d24;

        virtualinvoke $r5.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>($d21);

        $r6 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument rxModel>;

        virtualinvoke $r6.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>(0.0);

        $r7 = r0.<org.apache.batik.ext.swing.JAffineTransformChooser: org.apache.batik.ext.swing.DoubleDocument ryModel>;

        virtualinvoke $r7.<org.apache.batik.ext.swing.DoubleDocument: void setValue(double)>(0.0);

        return;
    }

    public static java.awt.geom.AffineTransform showDialog(java.awt.Component, java.lang.String)
    {
        org.apache.batik.ext.swing.JAffineTransformChooser$Closer $r5;
        org.apache.batik.ext.swing.JAffineTransformChooser$Dialog $r2;
        java.awt.geom.AffineTransform $r7;
        java.awt.Component r3;
        org.apache.batik.ext.swing.AffineTransformTracker $r1;
        org.apache.batik.ext.swing.JAffineTransformChooser $r0;
        java.lang.String r4;
        org.apache.batik.ext.swing.JAffineTransformChooser$DisposeOnClose $r6;

        r3 := @parameter0: java.awt.Component;

        r4 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.ext.swing.JAffineTransformChooser;

        specialinvoke $r0.<org.apache.batik.ext.swing.JAffineTransformChooser: void <init>()>();

        $r1 = new org.apache.batik.ext.swing.AffineTransformTracker;

        specialinvoke $r1.<org.apache.batik.ext.swing.AffineTransformTracker: void <init>(org.apache.batik.ext.swing.JAffineTransformChooser)>($r0);

        $r2 = new org.apache.batik.ext.swing.JAffineTransformChooser$Dialog;

        specialinvoke $r2.<org.apache.batik.ext.swing.JAffineTransformChooser$Dialog: void <init>(java.awt.Component,java.lang.String,boolean,org.apache.batik.ext.swing.JAffineTransformChooser,org.apache.batik.ext.swing.AffineTransformTracker,java.awt.event.ActionListener)>(r3, r4, 1, $r0, $r1, null);

        $r5 = new org.apache.batik.ext.swing.JAffineTransformChooser$Closer;

        specialinvoke $r5.<org.apache.batik.ext.swing.JAffineTransformChooser$Closer: void <init>()>();

        virtualinvoke $r2.<java.awt.Window: void addWindowListener(java.awt.event.WindowListener)>($r5);

        $r6 = new org.apache.batik.ext.swing.JAffineTransformChooser$DisposeOnClose;

        specialinvoke $r6.<org.apache.batik.ext.swing.JAffineTransformChooser$DisposeOnClose: void <init>()>();

        virtualinvoke $r2.<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>($r6);

        virtualinvoke $r2.<java.awt.Component: void setVisible(boolean)>(1);

        $r7 = virtualinvoke $r1.<org.apache.batik.ext.swing.AffineTransformTracker: java.awt.geom.AffineTransform getAffineTransform()>();

        return $r7;
    }

    public static org.apache.batik.ext.swing.JAffineTransformChooser$Dialog createDialog(java.awt.Component, java.lang.String)
    {
        org.apache.batik.ext.swing.JAffineTransformChooser$Closer $r5;
        org.apache.batik.ext.swing.AffineTransformTracker $r1;
        org.apache.batik.ext.swing.JAffineTransformChooser$Dialog $r2;
        org.apache.batik.ext.swing.JAffineTransformChooser $r0;
        java.lang.String r4;
        java.awt.Component r3;
        org.apache.batik.ext.swing.JAffineTransformChooser$DisposeOnClose $r6;

        r3 := @parameter0: java.awt.Component;

        r4 := @parameter1: java.lang.String;

        $r0 = new org.apache.batik.ext.swing.JAffineTransformChooser;

        specialinvoke $r0.<org.apache.batik.ext.swing.JAffineTransformChooser: void <init>()>();

        $r1 = new org.apache.batik.ext.swing.AffineTransformTracker;

        specialinvoke $r1.<org.apache.batik.ext.swing.AffineTransformTracker: void <init>(org.apache.batik.ext.swing.JAffineTransformChooser)>($r0);

        $r2 = new org.apache.batik.ext.swing.JAffineTransformChooser$Dialog;

        specialinvoke $r2.<org.apache.batik.ext.swing.JAffineTransformChooser$Dialog: void <init>(java.awt.Component,java.lang.String,boolean,org.apache.batik.ext.swing.JAffineTransformChooser,org.apache.batik.ext.swing.AffineTransformTracker,java.awt.event.ActionListener)>(r3, r4, 1, $r0, $r1, null);

        $r5 = new org.apache.batik.ext.swing.JAffineTransformChooser$Closer;

        specialinvoke $r5.<org.apache.batik.ext.swing.JAffineTransformChooser$Closer: void <init>()>();

        virtualinvoke $r2.<java.awt.Window: void addWindowListener(java.awt.event.WindowListener)>($r5);

        $r6 = new org.apache.batik.ext.swing.JAffineTransformChooser$DisposeOnClose;

        specialinvoke $r6.<org.apache.batik.ext.swing.JAffineTransformChooser$DisposeOnClose: void <init>()>();

        virtualinvoke $r2.<java.awt.Component: void addComponentListener(java.awt.event.ComponentListener)>($r6);

        return $r2;
    }

    public static void main(java.lang.String[])
    {
        java.io.PrintStream $r2, $r6;
        java.lang.String[] r7;
        java.awt.geom.AffineTransform $r0;
        java.lang.StringBuffer $r1, $r3, $r4;
        java.lang.String $r5;

        r7 := @parameter0: java.lang.String[];

        $r0 = staticinvoke <org.apache.batik.ext.swing.JAffineTransformChooser: java.awt.geom.AffineTransform showDialog(java.awt.Component,java.lang.String)>(null, "Hello");

        if $r0 != null goto label1;

        $r6 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r6.<java.io.PrintStream: void println(java.lang.String)>("Cancelled");

        goto label2;

     label1:
        $r2 = <java.lang.System: java.io.PrintStream out>;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("t = ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label2:
        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.ext.swing.JAffineTransformChooser: double DEG_TO_RAD> = 0.017453292519943295;

        <org.apache.batik.ext.swing.JAffineTransformChooser: double RAD_TO_DEG> = 57.29577951308232;

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String CONFIG_RIGHT_PAD> = "JAffineTransformChooser.config.right.pad";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String CONFIG_BOTTOM_PAD> = "JAffineTransformChooser.config.bottom.pad";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String CONFIG_LEFT_PAD> = "JAffineTransformChooser.config.left.pad";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String CONFIG_TOP_PAD> = "JAffineTransformChooser.config.top.pad";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String CONFIG_TEXT_FIELD_WIDTH> = "JAffineTransformChooser.config.text.field.width";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_TY> = "JAffineTransformChooser.label.ty";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_TX> = "JAffineTransformChooser.label.tx";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_TRANSLATE> = "JAffineTransformChooser.label.translate";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_SY> = "JAffineTransformChooser.label.sy";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_SX> = "JAffineTransformChooser.label.sx";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_RY> = "JAffineTransformChooser.label.ry";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_RX> = "JAffineTransformChooser.label.rx";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_SCALE> = "JAffineTransformChooser.label.scale";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_ROTATE> = "JAffineTransformChooser.label.rotate";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_PERCENT> = "JAffineTransformChooser.label.percent";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_DEGREE> = "JAffineTransformChooser.label.degree";

        <org.apache.batik.ext.swing.JAffineTransformChooser: java.lang.String LABEL_ANGLE> = "JAffineTransformChooser.label.angle";

        return;
    }
}
