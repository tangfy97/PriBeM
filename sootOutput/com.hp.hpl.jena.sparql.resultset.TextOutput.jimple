public class com.hp.hpl.jena.sparql.resultset.TextOutput extends com.hp.hpl.jena.sparql.resultset.OutputBase
{
    protected com.hp.hpl.jena.sparql.serializer.SerializationContext context;
    static final java.lang.String notThere;

    public void <init>(com.hp.hpl.jena.sparql.core.Prologue)
    {
        com.hp.hpl.jena.sparql.resultset.TextOutput r0;
        com.hp.hpl.jena.sparql.core.Prologue r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r2 := @parameter0: com.hp.hpl.jena.sparql.core.Prologue;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.OutputBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = null;

        $r1 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>(com.hp.hpl.jena.sparql.core.Prologue)>(r2);

        r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = $r1;

        return;
    }

    public void <init>(com.hp.hpl.jena.shared.PrefixMapping)
    {
        com.hp.hpl.jena.sparql.resultset.TextOutput r0;
        com.hp.hpl.jena.shared.PrefixMapping r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r2 := @parameter0: com.hp.hpl.jena.shared.PrefixMapping;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.OutputBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = null;

        $r1 = new com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke $r1.<com.hp.hpl.jena.sparql.serializer.SerializationContext: void <init>(com.hp.hpl.jena.shared.PrefixMapping)>(r2);

        r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = $r1;

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.serializer.SerializationContext)
    {
        com.hp.hpl.jena.sparql.resultset.TextOutput r0;
        com.hp.hpl.jena.sparql.serializer.SerializationContext r1;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r1 := @parameter0: com.hp.hpl.jena.sparql.serializer.SerializationContext;

        specialinvoke r0.<com.hp.hpl.jena.sparql.resultset.OutputBase: void <init>()>();

        r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = null;

        r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context> = r1;

        return;
    }

    public void format(java.io.OutputStream, com.hp.hpl.jena.query.ResultSet)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.sparql.resultset.TextOutput r0;
        com.hp.hpl.jena.query.ResultSet r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: void write(java.io.OutputStream,com.hp.hpl.jena.query.ResultSet)>(r1, r2);

        return;
    }

    public void format(java.io.Writer, com.hp.hpl.jena.query.ResultSet)
    {
        java.io.PrintWriter $r0;
        java.io.Writer r1;
        com.hp.hpl.jena.sparql.resultset.TextOutput r2;
        com.hp.hpl.jena.query.ResultSet r3;

        r2 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r1 := @parameter0: java.io.Writer;

        r3 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        $r0 = new java.io.PrintWriter;

        specialinvoke $r0.<java.io.PrintWriter: void <init>(java.io.Writer)>(r1);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.resultset.TextOutput: void write(java.io.PrintWriter,com.hp.hpl.jena.query.ResultSet)>($r0, r3);

        virtualinvoke $r0.<java.io.PrintWriter: void flush()>();

        return;
    }

    private int[] colWidths(com.hp.hpl.jena.query.ResultSetRewindable)
    {
        com.hp.hpl.jena.query.ResultSetRewindable r0;
        int[] r2;
        int $i0, $i1, $i2, $i3, $i4, i5, i6, $i8;
        java.lang.String r7, $r9, $r12;
        boolean $z0, $z1;
        java.util.Iterator $r5;
        java.util.List $r1, $r4, $r10;
        com.hp.hpl.jena.query.QuerySolution $r3;
        com.hp.hpl.jena.sparql.resultset.TextOutput r8;
        java.lang.Object $r6, $r11;

        r8 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r0 := @parameter0: com.hp.hpl.jena.query.ResultSetRewindable;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSetRewindable: java.util.List getResultVars()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        r2 = newarray (int)[$i0];

        i5 = 0;

     label1:
        if i5 >= $i0 goto label2;

        $r10 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSetRewindable: java.util.List getResultVars()>();

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>(i5);

        $r12 = (java.lang.String) $r11;

        $i4 = virtualinvoke $r12.<java.lang.String: int length()>();

        r2[i5] = $i4;

        i5 = i5 + 1;

        goto label1;

     label2:
        $z0 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSetRewindable: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r3 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSetRewindable: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        $i8 = (int) -1;

        i6 = $i8;

        $r4 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSetRewindable: java.util.List getResultVars()>();

        $r5 = interfaceinvoke $r4.<java.util.List: java.util.Iterator iterator()>();

     label3:
        $z1 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label5;

        i6 = i6 + 1;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (java.lang.String) $r6;

        $r9 = virtualinvoke r8.<com.hp.hpl.jena.sparql.resultset.TextOutput: java.lang.String getVarValueAsString(com.hp.hpl.jena.query.QuerySolution,java.lang.String)>($r3, r7);

        $i1 = r2[i6];

        $i2 = virtualinvoke $r9.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label4;

        $i3 = virtualinvoke $r9.<java.lang.String: int length()>();

        r2[i6] = $i3;

     label4:
        goto label3;

     label5:
        goto label2;

     label6:
        interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSetRewindable: void reset()>();

        return r2;
    }

    public void write(java.io.PrintWriter, com.hp.hpl.jena.query.ResultSet)
    {
        java.io.PrintWriter r1;
        com.hp.hpl.jena.sparql.resultset.TextOutput r0;
        com.hp.hpl.jena.query.ResultSet r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r1 := @parameter0: java.io.PrintWriter;

        r2 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: void write(java.io.PrintWriter,com.hp.hpl.jena.query.ResultSet,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "| ", " | ", " |");

        return;
    }

    public void write(java.io.OutputStream, com.hp.hpl.jena.query.ResultSet)
    {
        java.io.OutputStream r1;
        com.hp.hpl.jena.sparql.resultset.TextOutput r0;
        com.hp.hpl.jena.query.ResultSet r2;

        r0 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r1 := @parameter0: java.io.OutputStream;

        r2 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        virtualinvoke r0.<com.hp.hpl.jena.sparql.resultset.TextOutput: void write(java.io.OutputStream,com.hp.hpl.jena.query.ResultSet,java.lang.String,java.lang.String,java.lang.String)>(r1, r2, "| ", " | ", " |");

        return;
    }

    public void write(java.io.OutputStream, com.hp.hpl.jena.query.ResultSet, java.lang.String, java.lang.String, java.lang.String)
    {
        java.io.OutputStream r0;
        java.io.PrintWriter $r1;
        com.hp.hpl.jena.sparql.resultset.TextOutput r2;
        java.lang.String r4, r5, r6;
        com.hp.hpl.jena.query.ResultSet r3;

        r2 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r0 := @parameter0: java.io.OutputStream;

        r3 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        r4 := @parameter2: java.lang.String;

        r5 := @parameter3: java.lang.String;

        r6 := @parameter4: java.lang.String;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.io.PrintWriter asPrintWriterUTF8(java.io.OutputStream)>(r0);

        virtualinvoke r2.<com.hp.hpl.jena.sparql.resultset.TextOutput: void write(java.io.PrintWriter,com.hp.hpl.jena.query.ResultSet,java.lang.String,java.lang.String,java.lang.String)>($r1, r3, r4, r5, r6);

        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public void write(java.io.PrintWriter, com.hp.hpl.jena.query.ResultSet, java.lang.String, java.lang.String, java.lang.String)
    {
        int[] $r5;
        boolean $z0;
        java.io.PrintWriter r8;
        com.hp.hpl.jena.query.ResultSet r0;
        java.util.List $r1, $r3, $r11, $r15;
        com.hp.hpl.jena.sparql.resultset.TextOutput r4;
        com.hp.hpl.jena.query.ResultSetRewindable $r2;
        java.lang.String[] $r17;
        int $i0, $i1, $i2, $i3, $i4, $i5, i6, i7, i8, i9, i10, i11;
        java.lang.String r6, r7, r9, r13, $r14, r18;
        com.hp.hpl.jena.query.QuerySolution $r10;
        java.lang.Object $r12, $r16;

        r4 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r8 := @parameter0: java.io.PrintWriter;

        r0 := @parameter1: com.hp.hpl.jena.query.ResultSet;

        r6 := @parameter2: java.lang.String;

        r9 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        $r1 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSet: java.util.List getResultVars()>();

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 != 0 goto label01;

        virtualinvoke r8.<java.io.PrintWriter: void println(java.lang.String)>("==== No variables ====");

     label01:
        $r2 = staticinvoke <com.hp.hpl.jena.query.ResultSetFactory: com.hp.hpl.jena.query.ResultSetRewindable makeRewindable(com.hp.hpl.jena.query.ResultSet)>(r0);

        $r3 = interfaceinvoke $r2.<com.hp.hpl.jena.query.ResultSetRewindable: java.util.List getResultVars()>();

        $i1 = interfaceinvoke $r3.<java.util.List: int size()>();

        $r5 = specialinvoke r4.<com.hp.hpl.jena.sparql.resultset.TextOutput: int[] colWidths(com.hp.hpl.jena.query.ResultSetRewindable)>($r2);

        $r17 = newarray (java.lang.String)[$i1];

        i6 = 0;

        i7 = 0;

     label02:
        if i7 >= $i1 goto label04;

        $r15 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSet: java.util.List getResultVars()>();

        $r16 = interfaceinvoke $r15.<java.util.List: java.lang.Object get(int)>(i7);

        r18 = (java.lang.String) $r16;

        $r17[i7] = r18;

        $i4 = $r5[i7];

        i6 = i6 + $i4;

        if i7 <= 0 goto label03;

        $i5 = virtualinvoke r9.<java.lang.String: int length()>();

        i6 = i6 + $i5;

     label03:
        i7 = i7 + 1;

        goto label02;

     label04:
        if r6 == null goto label05;

        $i3 = virtualinvoke r6.<java.lang.String: int length()>();

        i6 = i6 + $i3;

     label05:
        if r7 == null goto label06;

        $i2 = virtualinvoke r7.<java.lang.String: int length()>();

        i6 = i6 + $i2;

     label06:
        i8 = 0;

     label07:
        if i8 >= i6 goto label08;

        virtualinvoke r8.<java.io.PrintWriter: void print(char)>(45);

        i8 = i8 + 1;

        goto label07;

     label08:
        virtualinvoke r8.<java.io.PrintWriter: void println()>();

        specialinvoke r4.<com.hp.hpl.jena.sparql.resultset.TextOutput: void printRow(java.io.PrintWriter,java.lang.String[],int[],java.lang.String,java.lang.String,java.lang.String)>(r8, $r17, $r5, r6, r9, r7);

        i9 = 0;

     label09:
        if i9 >= i6 goto label10;

        virtualinvoke r8.<java.io.PrintWriter: void print(char)>(61);

        i9 = i9 + 1;

        goto label09;

     label10:
        virtualinvoke r8.<java.io.PrintWriter: void println()>();

     label11:
        $z0 = interfaceinvoke $r2.<com.hp.hpl.jena.query.ResultSetRewindable: boolean hasNext()>();

        if $z0 == 0 goto label14;

        $r10 = interfaceinvoke $r2.<com.hp.hpl.jena.query.ResultSetRewindable: com.hp.hpl.jena.query.QuerySolution nextSolution()>();

        i10 = 0;

     label12:
        if i10 >= $i1 goto label13;

        $r11 = interfaceinvoke r0.<com.hp.hpl.jena.query.ResultSet: java.util.List getResultVars()>();

        $r12 = interfaceinvoke $r11.<java.util.List: java.lang.Object get(int)>(i10);

        r13 = (java.lang.String) $r12;

        $r14 = virtualinvoke r4.<com.hp.hpl.jena.sparql.resultset.TextOutput: java.lang.String getVarValueAsString(com.hp.hpl.jena.query.QuerySolution,java.lang.String)>($r10, r13);

        $r17[i10] = $r14;

        i10 = i10 + 1;

        goto label12;

     label13:
        specialinvoke r4.<com.hp.hpl.jena.sparql.resultset.TextOutput: void printRow(java.io.PrintWriter,java.lang.String[],int[],java.lang.String,java.lang.String,java.lang.String)>(r8, $r17, $r5, r6, r9, r7);

        goto label11;

     label14:
        i11 = 0;

     label15:
        if i11 >= i6 goto label16;

        virtualinvoke r8.<java.io.PrintWriter: void print(char)>(45);

        i11 = i11 + 1;

        goto label15;

     label16:
        virtualinvoke r8.<java.io.PrintWriter: void println()>();

        return;
    }

    private void printRow(java.io.PrintWriter, java.lang.String[], int[], java.lang.String, java.lang.String, java.lang.String)
    {
        java.io.PrintWriter r0;
        java.lang.String[] r4;
        int[] r2;
        java.lang.StringBuffer $r6;
        int $i0, i1, i2, i3, $i4, $i5;
        com.hp.hpl.jena.sparql.resultset.TextOutput r8;
        java.lang.String r1, r3, r5, r7;

        r8 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r0 := @parameter0: java.io.PrintWriter;

        r4 := @parameter1: java.lang.String[];

        r2 := @parameter2: int[];

        r1 := @parameter3: java.lang.String;

        r7 := @parameter4: java.lang.String;

        r3 := @parameter5: java.lang.String;

        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r1);

        i2 = 0;

     label1:
        $i0 = lengthof r2;

        if i2 >= $i0 goto label5;

        r5 = r4[i2];

        i1 = r2[i2];

        $r6 = new java.lang.StringBuffer;

        specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>(120);

        if i2 <= 0 goto label2;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

     label2:
        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        i3 = 0;

     label3:
        $i4 = virtualinvoke r5.<java.lang.String: int length()>();

        $i5 = i1 - $i4;

        if i3 >= $i5 goto label4;

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i3 = i3 + 1;

        goto label3;

     label4:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.Object)>($r6);

        i2 = i2 + 1;

        goto label1;

     label5:
        virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(r3);

        virtualinvoke r0.<java.io.PrintWriter: void println()>();

        return;
    }

    protected java.lang.String getVarValueAsString(com.hp.hpl.jena.query.QuerySolution, java.lang.String)
    {
        com.hp.hpl.jena.query.QuerySolution r0;
        com.hp.hpl.jena.rdf.model.RDFNode $r2;
        com.hp.hpl.jena.sparql.serializer.SerializationContext $r4;
        com.hp.hpl.jena.sparql.resultset.TextOutput r3;
        java.lang.String r1, $r5;

        r3 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r0 := @parameter0: com.hp.hpl.jena.query.QuerySolution;

        r1 := @parameter1: java.lang.String;

        $r2 = interfaceinvoke r0.<com.hp.hpl.jena.query.QuerySolution: com.hp.hpl.jena.rdf.model.RDFNode get(java.lang.String)>(r1);

        if $r2 != null goto label1;

        return " ";

     label1:
        $r4 = r3.<com.hp.hpl.jena.sparql.resultset.TextOutput: com.hp.hpl.jena.sparql.serializer.SerializationContext context>;

        $r5 = staticinvoke <com.hp.hpl.jena.sparql.util.FmtUtils: java.lang.String stringForRDFNode(com.hp.hpl.jena.rdf.model.RDFNode,com.hp.hpl.jena.sparql.serializer.SerializationContext)>($r2, $r4);

        return $r5;
    }

    public void format(java.io.OutputStream, boolean)
    {
        java.io.OutputStream r0;
        java.io.PrintWriter $r1;
        com.hp.hpl.jena.sparql.resultset.TextOutput r2;
        boolean z0;

        r2 := @this: com.hp.hpl.jena.sparql.resultset.TextOutput;

        r0 := @parameter0: java.io.OutputStream;

        z0 := @parameter1: boolean;

        $r1 = staticinvoke <com.hp.hpl.jena.util.FileUtils: java.io.PrintWriter asPrintWriterUTF8(java.io.OutputStream)>(r0);

        if z0 == 0 goto label1;

        virtualinvoke $r1.<java.io.PrintWriter: void write(java.lang.String)>("yes");

        goto label2;

     label1:
        virtualinvoke $r1.<java.io.PrintWriter: void write(java.lang.String)>("no");

     label2:
        virtualinvoke $r1.<java.io.PrintWriter: void flush()>();

        return;
    }

    public static void <clinit>()
    {
        <com.hp.hpl.jena.sparql.resultset.TextOutput: java.lang.String notThere> = " ";

        return;
    }
}
