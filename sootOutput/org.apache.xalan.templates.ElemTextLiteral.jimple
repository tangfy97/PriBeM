public class org.apache.xalan.templates.ElemTextLiteral extends org.apache.xalan.templates.ElemTemplateElement
{
    private boolean m_preserveSpace;
    private char[] m_ch;
    private java.lang.String m_str;
    private boolean m_disableOutputEscaping;

    public void <init>()
    {
        org.apache.xalan.templates.ElemTextLiteral r0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        specialinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: void <init>()>();

        r0.<org.apache.xalan.templates.ElemTextLiteral: boolean m_disableOutputEscaping> = 0;

        return;
    }

    public void setPreserveSpace(boolean)
    {
        org.apache.xalan.templates.ElemTextLiteral r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.templates.ElemTextLiteral: boolean m_preserveSpace> = z0;

        return;
    }

    public boolean getPreserveSpace()
    {
        org.apache.xalan.templates.ElemTextLiteral r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        $z0 = r0.<org.apache.xalan.templates.ElemTextLiteral: boolean m_preserveSpace>;

        return $z0;
    }

    public void setChars(char[])
    {
        char[] r1;
        org.apache.xalan.templates.ElemTextLiteral r0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        r1 := @parameter0: char[];

        r0.<org.apache.xalan.templates.ElemTextLiteral: char[] m_ch> = r1;

        return;
    }

    public char[] getChars()
    {
        char[] $r1;
        org.apache.xalan.templates.ElemTextLiteral r0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        $r1 = r0.<org.apache.xalan.templates.ElemTextLiteral: char[] m_ch>;

        return $r1;
    }

    public synchronized java.lang.String getNodeValue()
    {
        char[] $r4;
        java.lang.String $r1, $r2, $r3;
        org.apache.xalan.templates.ElemTextLiteral r0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        $r1 = r0.<org.apache.xalan.templates.ElemTextLiteral: java.lang.String m_str>;

        if null != $r1 goto label1;

        $r3 = new java.lang.String;

        $r4 = r0.<org.apache.xalan.templates.ElemTextLiteral: char[] m_ch>;

        specialinvoke $r3.<java.lang.String: void <init>(char[])>($r4);

        r0.<org.apache.xalan.templates.ElemTextLiteral: java.lang.String m_str> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.templates.ElemTextLiteral: java.lang.String m_str>;

        return $r2;
    }

    public void setDisableOutputEscaping(boolean)
    {
        org.apache.xalan.templates.ElemTextLiteral r0;
        boolean z0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.templates.ElemTextLiteral: boolean m_disableOutputEscaping> = z0;

        return;
    }

    public boolean getDisableOutputEscaping()
    {
        org.apache.xalan.templates.ElemTextLiteral r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        $z0 = r0.<org.apache.xalan.templates.ElemTextLiteral: boolean m_disableOutputEscaping>;

        return $z0;
    }

    public int getXSLToken()
    {
        org.apache.xalan.templates.ElemTextLiteral r0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        return 78;
    }

    public java.lang.String getNodeName()
    {
        org.apache.xalan.templates.ElemTextLiteral r0;

        r0 := @this: org.apache.xalan.templates.ElemTextLiteral;

        return "#Text";
    }

    public void execute(org.apache.xalan.transformer.TransformerImpl) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r12;
        javax.xml.transform.TransformerException $r9, $r11, $r16;
        org.apache.xml.serializer.SerializationHandler $r1, $r5, $r13;
        org.apache.xalan.trace.TraceManager $r6, $r7, $r14;
        int $i0;
        org.apache.xalan.templates.ElemTextLiteral r2;
        boolean $z0, $z1, $z2, $z3, $z4;
        org.xml.sax.SAXException $r8, $r10, $r15;
        char[] $r3, $r4;
        org.apache.xalan.transformer.TransformerImpl r0;

        r2 := @this: org.apache.xalan.templates.ElemTextLiteral;

        r0 := @parameter0: org.apache.xalan.transformer.TransformerImpl;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label02;

        interfaceinvoke $r1.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $r7 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r7.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label02:
        $z1 = r2.<org.apache.xalan.templates.ElemTextLiteral: boolean m_disableOutputEscaping>;

        if $z1 == 0 goto label03;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.disable-output-escaping", "");

     label03:
        $r4 = r2.<org.apache.xalan.templates.ElemTextLiteral: char[] m_ch>;

        $r3 = r2.<org.apache.xalan.templates.ElemTextLiteral: char[] m_ch>;

        $i0 = lengthof $r3;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r4, 0, $i0);

        $z2 = r2.<org.apache.xalan.templates.ElemTextLiteral: boolean m_disableOutputEscaping>;

        if $z2 == 0 goto label04;

        interfaceinvoke $r1.<org.xml.sax.ContentHandler: void processingInstruction(java.lang.String,java.lang.String)>("javax.xml.transform.enable-output-escaping", "");

     label04:
        goto label10;

     label05:
        goto label09;

     label06:
        $r15 := @caughtexception;

        $r16 = new javax.xml.transform.TransformerException;

        specialinvoke $r16.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r15);

        throw $r16;

     label07:
        $r12 := @caughtexception;

        goto label15;

     label08:
        throw $r12;

     label09:
        return;

     label10:
        $z3 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z3 == 0 goto label14;

     label11:
        $r5 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r5.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r6.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label12:
        goto label14;

     label13:
        $r10 := @caughtexception;

        $r11 = new javax.xml.transform.TransformerException;

        specialinvoke $r11.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r10);

        throw $r11;

     label14:
        goto label05;

     label15:
        $z4 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z4 == 0 goto label19;

     label16:
        $r13 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r13.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $r14 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r14.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r2);

     label17:
        goto label19;

     label18:
        $r8 := @caughtexception;

        $r9 = new javax.xml.transform.TransformerException;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label19:
        goto label08;

        catch org.xml.sax.SAXException from label01 to label04 with label06;
        catch java.lang.Throwable from label01 to label07 with label07;
        catch org.xml.sax.SAXException from label11 to label12 with label13;
        catch org.xml.sax.SAXException from label16 to label17 with label18;
    }
}
