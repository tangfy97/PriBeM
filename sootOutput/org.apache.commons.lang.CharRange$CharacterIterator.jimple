class org.apache.commons.lang.CharRange$CharacterIterator extends java.lang.Object implements java.util.Iterator
{
    private char current;
    private org.apache.commons.lang.CharRange range;
    private boolean hasNext;

    private void <init>(org.apache.commons.lang.CharRange)
    {
        int $i4, $i6, $i8, $i9;
        boolean $z0;
        org.apache.commons.lang.CharRange r1, $r2, $r3, $r4, $r5, $r6;
        char $c0, $c1, $c2, $c3, $c5;
        org.apache.commons.lang.CharRange$CharacterIterator r0;

        r0 := @this: org.apache.commons.lang.CharRange$CharacterIterator;

        r1 := @parameter0: org.apache.commons.lang.CharRange;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range> = r1;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext> = 1;

        $r2 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $z0 = staticinvoke <org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>($r2);

        if $z0 == 0 goto label3;

        $r4 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c1 = staticinvoke <org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>($r4);

        if $c1 != 0 goto label2;

        $r5 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c2 = staticinvoke <org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>($r5);

        $i6 = (int) $c2;

        $i8 = (int) 65535;

        if $i6 != $i8 goto label1;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext> = 0;

        goto label4;

     label1:
        $r6 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c3 = staticinvoke <org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>($r6);

        $i9 = (int) $c3;

        $i4 = $i9 + 1;

        $c5 = (char) $i4;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current> = $c5;

        goto label4;

     label2:
        r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current> = 0;

        goto label4;

     label3:
        $r3 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c0 = staticinvoke <org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>($r3);

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current> = $c0;

     label4:
        return;
    }

    private void prepareNext()
    {
        boolean $z0;
        int $i3, $i7, $i10, $i14, $i16, $i18, $i19, $i20, $i21, $i23, $i24, $i25, $i26, $i27, $i28;
        org.apache.commons.lang.CharRange $r1, $r2, $r3, $r4, $r5;
        char $c0, $c1, $c2, $c4, $c5, $c6, $c8, $c9, $c11, $c12, $c13, $c15;
        org.apache.commons.lang.CharRange$CharacterIterator r0;

        r0 := @this: org.apache.commons.lang.CharRange$CharacterIterator;

        $r1 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $z0 = staticinvoke <org.apache.commons.lang.CharRange: boolean access$100(org.apache.commons.lang.CharRange)>($r1);

        if $z0 == 0 goto label4;

        $c5 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current>;

        $i16 = (int) $c5;

        $i18 = (int) 65535;

        if $i16 != $i18 goto label1;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext> = 0;

        goto label6;

     label1:
        $c6 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current>;

        $i19 = (int) $c6;

        $i7 = $i19 + 1;

        $r3 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c8 = staticinvoke <org.apache.commons.lang.CharRange: char access$200(org.apache.commons.lang.CharRange)>($r3);

        $i20 = (int) $c8;

        if $i7 != $i20 goto label3;

        $r4 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c12 = staticinvoke <org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>($r4);

        $i21 = (int) $c12;

        $i23 = (int) 65535;

        if $i21 != $i23 goto label2;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext> = 0;

        goto label6;

     label2:
        $r5 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c13 = staticinvoke <org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>($r5);

        $i24 = (int) $c13;

        $i14 = $i24 + 1;

        $c15 = (char) $i14;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current> = $c15;

        goto label6;

     label3:
        $c9 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current>;

        $i25 = (int) $c9;

        $i10 = $i25 + 1;

        $c11 = (char) $i10;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current> = $c11;

        goto label6;

     label4:
        $c0 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current>;

        $r2 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: org.apache.commons.lang.CharRange range>;

        $c1 = staticinvoke <org.apache.commons.lang.CharRange: char access$300(org.apache.commons.lang.CharRange)>($r2);

        $i26 = (int) $c0;

        $i27 = (int) $c1;

        if $i26 >= $i27 goto label5;

        $c2 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current>;

        $i28 = (int) $c2;

        $i3 = $i28 + 1;

        $c4 = (char) $i3;

        r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current> = $c4;

        goto label6;

     label5:
        r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext> = 0;

     label6:
        return;
    }

    public boolean hasNext()
    {
        org.apache.commons.lang.CharRange$CharacterIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.CharRange$CharacterIterator;

        $z0 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext>;

        return $z0;
    }

    public java.lang.Object next()
    {
        java.lang.Character $r1;
        char c0;
        java.util.NoSuchElementException $r2;
        org.apache.commons.lang.CharRange$CharacterIterator r0;
        boolean $z0;

        r0 := @this: org.apache.commons.lang.CharRange$CharacterIterator;

        $z0 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: boolean hasNext>;

        if $z0 != 0 goto label1;

        $r2 = new java.util.NoSuchElementException;

        specialinvoke $r2.<java.util.NoSuchElementException: void <init>()>();

        throw $r2;

     label1:
        c0 = r0.<org.apache.commons.lang.CharRange$CharacterIterator: char current>;

        specialinvoke r0.<org.apache.commons.lang.CharRange$CharacterIterator: void prepareNext()>();

        $r1 = new java.lang.Character;

        specialinvoke $r1.<java.lang.Character: void <init>(char)>(c0);

        return $r1;
    }

    public void remove()
    {
        java.lang.UnsupportedOperationException $r0;
        org.apache.commons.lang.CharRange$CharacterIterator r1;

        r1 := @this: org.apache.commons.lang.CharRange$CharacterIterator;

        $r0 = new java.lang.UnsupportedOperationException;

        specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>()>();

        throw $r0;
    }

    void <init>(org.apache.commons.lang.CharRange, org.apache.commons.lang.CharRange$1)
    {
        org.apache.commons.lang.CharRange r1;
        org.apache.commons.lang.CharRange$CharacterIterator r0;
        org.apache.commons.lang.CharRange$1 r2;

        r0 := @this: org.apache.commons.lang.CharRange$CharacterIterator;

        r1 := @parameter0: org.apache.commons.lang.CharRange;

        r2 := @parameter1: org.apache.commons.lang.CharRange$1;

        specialinvoke r0.<org.apache.commons.lang.CharRange$CharacterIterator: void <init>(org.apache.commons.lang.CharRange)>(r1);

        return;
    }
}
