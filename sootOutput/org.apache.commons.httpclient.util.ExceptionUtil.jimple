public class org.apache.commons.httpclient.util.ExceptionUtil extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;
    private static final java.lang.reflect.Method INIT_CAUSE_METHOD;
    private static final java.lang.Class SOCKET_TIMEOUT_CLASS;
    static java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil;
    static java.lang.Class class$java$lang$Throwable;

    public void <init>()
    {
        org.apache.commons.httpclient.util.ExceptionUtil r0;

        r0 := @this: org.apache.commons.httpclient.util.ExceptionUtil;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    private static java.lang.reflect.Method getInitCauseMethod()
    {
        java.lang.NoSuchMethodException $r4;
        java.lang.Class[] $r0;
        java.lang.Class $r1, $r2, $r5, $r6;
        java.lang.reflect.Method $r3;

     label1:
        $r0 = newarray (java.lang.Class)[1];

        $r1 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$java$lang$Throwable>;

        if $r1 != null goto label2;

        $r5 = staticinvoke <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$java$lang$Throwable> = $r5;

        goto label3;

     label2:
        $r5 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$java$lang$Throwable>;

     label3:
        $r0[0] = $r5;

        $r2 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$java$lang$Throwable>;

        if $r2 != null goto label4;

        $r6 = staticinvoke <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$(java.lang.String)>("java.lang.Throwable");

        <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$java$lang$Throwable> = $r6;

        goto label5;

     label4:
        $r6 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$java$lang$Throwable>;

     label5:
        $r3 = virtualinvoke $r6.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("initCause", $r0);

     label6:
        return $r3;

     label7:
        $r4 := @caughtexception;

        return null;

        catch java.lang.NoSuchMethodException from label1 to label6 with label7;
    }

    private static java.lang.Class SocketTimeoutExceptionClass()
    {
        java.lang.Class $r0;
        java.lang.ClassNotFoundException $r1;

     label1:
        $r0 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>("java.net.SocketTimeoutException");

     label2:
        return $r0;

     label3:
        $r1 := @caughtexception;

        return null;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    public static void initCause(java.lang.Throwable, java.lang.Throwable)
    {
        java.lang.Throwable r1, r3;
        java.lang.Object[] $r2;
        org.apache.commons.logging.Log $r6;
        java.lang.reflect.Method $r0, $r4;
        java.lang.Exception $r5;

        r1 := @parameter0: java.lang.Throwable;

        r3 := @parameter1: java.lang.Throwable;

        $r0 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.reflect.Method INIT_CAUSE_METHOD>;

        if $r0 == null goto label4;

     label1:
        $r4 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.reflect.Method INIT_CAUSE_METHOD>;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r2);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = <org.apache.commons.httpclient.util.ExceptionUtil: org.apache.commons.logging.Log LOG>;

        interfaceinvoke $r6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>("Exception invoking Throwable.initCause", $r5);

     label4:
        return;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    public static boolean isSocketTimeoutException(java.io.InterruptedIOException)
    {
        java.lang.Class $r0, $r2;
        java.io.InterruptedIOException r1;
        boolean $z0;

        r1 := @parameter0: java.io.InterruptedIOException;

        $r0 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class SOCKET_TIMEOUT_CLASS>;

        if $r0 == null goto label1;

        $r2 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class SOCKET_TIMEOUT_CLASS>;

        $z0 = virtualinvoke $r2.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1);

        return $z0;

     label1:
        return 1;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0, $r3, $r4;
        org.apache.commons.logging.Log $r1;
        java.lang.reflect.Method $r2;

        $r0 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil>;

        if $r0 != null goto label1;

        $r4 = staticinvoke <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$(java.lang.String)>("org.apache.commons.httpclient.util.ExceptionUtil");

        <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil> = $r4;

        goto label2;

     label1:
        $r4 = <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class class$org$apache$commons$httpclient$util$ExceptionUtil>;

     label2:
        $r1 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r4);

        <org.apache.commons.httpclient.util.ExceptionUtil: org.apache.commons.logging.Log LOG> = $r1;

        $r2 = staticinvoke <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.reflect.Method getInitCauseMethod()>();

        <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.reflect.Method INIT_CAUSE_METHOD> = $r2;

        $r3 = staticinvoke <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class SocketTimeoutExceptionClass()>();

        <org.apache.commons.httpclient.util.ExceptionUtil: java.lang.Class SOCKET_TIMEOUT_CLASS> = $r3;

        return;
    }
}
