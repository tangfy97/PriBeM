public class org.apache.poi.ddf.EscherComplexProperty extends org.apache.poi.ddf.EscherProperty
{
    protected byte[] _complexData;

    public void <init>(short, byte[])
    {
        byte[] r1;
        short s0;
        org.apache.poi.ddf.EscherComplexProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        s0 := @parameter0: short;

        r1 := @parameter1: byte[];

        specialinvoke r0.<org.apache.poi.ddf.EscherProperty: void <init>(short)>(s0);

        r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData> = r1;

        return;
    }

    public void <init>(short, boolean, byte[])
    {
        byte[] r1;
        short s0;
        org.apache.poi.ddf.EscherComplexProperty r0;
        boolean z0;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        s0 := @parameter0: short;

        z0 := @parameter1: boolean;

        r1 := @parameter2: byte[];

        specialinvoke r0.<org.apache.poi.ddf.EscherProperty: void <init>(short,boolean,boolean)>(s0, 1, z0);

        r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData> = r1;

        return;
    }

    public int serializeSimplePart(byte[], int)
    {
        byte[] r0, $r2;
        short $s1;
        org.apache.poi.ddf.EscherComplexProperty r1;
        int i0, $i2, $i3;

        r1 := @this: org.apache.poi.ddf.EscherComplexProperty;

        r0 := @parameter0: byte[];

        i0 := @parameter1: int;

        $s1 = virtualinvoke r1.<org.apache.poi.ddf.EscherComplexProperty: short getId()>();

        staticinvoke <org.apache.poi.util.LittleEndian: void putShort(byte[],int,short)>(r0, i0, $s1);

        $i3 = i0 + 2;

        $r2 = r1.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $i2 = lengthof $r2;

        staticinvoke <org.apache.poi.util.LittleEndian: void putInt(byte[],int,int)>(r0, $i3, $i2);

        return 6;
    }

    public int serializeComplexPart(byte[], int)
    {
        byte[] r1, $r2, $r3, $r4;
        org.apache.poi.ddf.EscherComplexProperty r0;
        int i0, $i1, $i2;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        r1 := @parameter0: byte[];

        i0 := @parameter1: int;

        $r3 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $r2 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $i1 = lengthof $r2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, r1, i0, $i1);

        $r4 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $i2 = lengthof $r4;

        return $i2;
    }

    public byte[] getComplexData()
    {
        byte[] $r1;
        org.apache.poi.ddf.EscherComplexProperty r0;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        $r1 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        return $r1;
    }

    public boolean equals(java.lang.Object)
    {
        byte[] $r3, $r4;
        org.apache.poi.ddf.EscherComplexProperty r0, r2;
        java.lang.Object r1;
        boolean $z0, $z1;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        r1 := @parameter0: java.lang.Object;

        if r0 != r1 goto label1;

        return 1;

     label1:
        $z0 = r1 instanceof org.apache.poi.ddf.EscherComplexProperty;

        if $z0 != 0 goto label2;

        return 0;

     label2:
        r2 = (org.apache.poi.ddf.EscherComplexProperty) r1;

        $r4 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $r3 = r2.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $z1 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>($r4, $r3);

        if $z1 != 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public int getPropertySize()
    {
        byte[] $r1;
        org.apache.poi.ddf.EscherComplexProperty r0;
        int $i0, $i1;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        $r1 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $i0 = lengthof $r1;

        $i1 = 6 + $i0;

        return $i1;
    }

    public int hashCode()
    {
        short $s0;
        org.apache.poi.ddf.EscherComplexProperty r0;
        int $i1, $i2;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: short getId()>();

        $i2 = (int) $s0;

        $i1 = $i2 * 11;

        return $i1;
    }

    public java.lang.String toString()
    {
        byte[] $r1;
        short $s0, $s1;
        int $i2;
        java.lang.String $r2, $r7, $r14, $r17;
        boolean $z0, $z1;
        org.apache.poi.ddf.EscherComplexProperty r0;
        java.lang.StringBuilder $r4, $r5, $r6, $r8, $r9, $r10, $r11, $r12, $r13, $r15, $r16, $r18;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        $r1 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        $r2 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[],int)>($r1, 32);

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("propNum: ");

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: short getPropertyNumber()>();

        $i2 = (int) $s0;

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", propName: ");

        $s1 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: short getPropertyNumber()>();

        $r7 = staticinvoke <org.apache.poi.ddf.EscherProperties: java.lang.String getPropertyName(short)>($s1);

        $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", complex: ");

        $z0 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: boolean isComplex()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", blipId: ");

        $z1 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: boolean isBlipId()>();

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", data: ");

        $r14 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;
    }

    public java.lang.String toXml(java.lang.String)
    {
        byte[] $r1;
        short $s0;
        java.lang.String r3, $r7, $r10, $r13, $r20, $r22;
        boolean $z0;
        org.apache.poi.ddf.EscherComplexProperty r0;
        java.lang.StringBuilder $r2, $r4, $r5, $r8, $r9, $r11, $r12, $r14, $r15, $r16, $r17, $r18, $r21;
        java.lang.Class $r6, $r19;

        r0 := @this: org.apache.poi.ddf.EscherComplexProperty;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.apache.poi.ddf.EscherComplexProperty: byte[] _complexData>;

        staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(byte[],int)>($r1, 32);

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");

        $r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getSimpleName()>();

        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" id=\"0x");

        $s0 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: short getId()>();

        $r10 = staticinvoke <org.apache.poi.util.HexDump: java.lang.String toHex(short)>($s0);

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" name=\"");

        $r13 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: java.lang.String getName()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" blipId=\"");

        $z0 = virtualinvoke r0.<org.apache.poi.ddf.EscherComplexProperty: boolean isBlipId()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);

        virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">\n");

        $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");

        $r19 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r20 = virtualinvoke $r19.<java.lang.Class: java.lang.String getSimpleName()>();

        $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);

        virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">\n");

        $r22 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r22;
    }
}
