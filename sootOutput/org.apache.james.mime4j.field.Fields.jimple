public class org.apache.james.mime4j.field.Fields extends java.lang.Object
{
    private static final java.util.regex.Pattern FIELD_NAME_PATTERN;

    private void <init>()
    {
        org.apache.james.mime4j.field.Fields r0;

        r0 := @this: org.apache.james.mime4j.field.Fields;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.james.mime4j.dom.field.ContentTypeField contentType(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r2;
        org.apache.james.mime4j.dom.FieldParser $r1;
        java.lang.String r0;
        org.apache.james.mime4j.dom.field.ContentTypeField $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r1, "Content-Type", r0);

        $r3 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r2;

        return $r3;
    }

    public static org.apache.james.mime4j.dom.field.ContentTypeField contentType(java.lang.String, java.util.Map)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r3;
        java.util.Map r1;
        java.lang.String r0, $r8, $r13, $r15, $r16;
        org.apache.james.mime4j.dom.field.ContentTypeField $r4, $r9;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r11;
        java.util.Iterator $r7;
        org.apache.james.mime4j.dom.FieldParser $r2;
        java.util.Set $r6;
        java.lang.IllegalArgumentException $r17;
        java.lang.StringBuilder $r5;
        java.lang.Object $r10, $r12, $r14;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = staticinvoke <org.apache.james.mime4j.field.Fields: boolean isValidMimeType(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r17;

     label1:
        if r1 == null goto label2;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        $r2 = <org.apache.james.mime4j.field.ContentTypeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r2, "Content-Type", r0);

        $r4 = (org.apache.james.mime4j.dom.field.ContentTypeField) $r3;

        return $r4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r14;

        $r16 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeHeaderParameter(java.lang.String,java.lang.String)>($r13, $r15);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        goto label4;

     label5:
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentTypeField contentType(java.lang.String)>($r8);

        return $r9;
    }

    public static org.apache.james.mime4j.dom.field.ContentTransferEncodingField contentTransferEncoding(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r2;
        org.apache.james.mime4j.dom.field.ContentTransferEncodingField $r3;
        org.apache.james.mime4j.dom.FieldParser $r1;
        java.lang.String r0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.james.mime4j.field.ContentTransferEncodingFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r1, "Content-Transfer-Encoding", r0);

        $r3 = (org.apache.james.mime4j.dom.field.ContentTransferEncodingField) $r2;

        return $r3;
    }

    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r2;
        org.apache.james.mime4j.dom.FieldParser $r1;
        java.lang.String r0;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r3;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r1, "Content-Disposition", r0);

        $r3 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r2;

        return $r3;
    }

    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.util.Map)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r3;
        java.util.Map r1;
        java.lang.String r0, $r8, $r13, $r15, $r16;
        boolean $z0, $z1, $z2;
        java.util.Map$Entry r11;
        java.util.Iterator $r7;
        org.apache.james.mime4j.dom.FieldParser $r2;
        java.util.Set $r6;
        java.lang.IllegalArgumentException $r17;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r4, $r9;
        java.lang.StringBuilder $r5;
        java.lang.Object $r10, $r12, $r14;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Map;

        $z0 = staticinvoke <org.apache.james.mime4j.field.Fields: boolean isValidDispositionType(java.lang.String)>(r0);

        if $z0 != 0 goto label1;

        $r17 = new java.lang.IllegalArgumentException;

        specialinvoke $r17.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r17;

     label1:
        if r1 == null goto label2;

        $z1 = interfaceinvoke r1.<java.util.Map: boolean isEmpty()>();

        if $z1 == 0 goto label3;

     label2:
        $r2 = <org.apache.james.mime4j.field.ContentDispositionFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r2, "Content-Disposition", r0);

        $r4 = (org.apache.james.mime4j.dom.field.ContentDispositionField) $r3;

        return $r4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        $r6 = interfaceinvoke r1.<java.util.Map: java.util.Set entrySet()>();

        $r7 = interfaceinvoke $r6.<java.util.Set: java.util.Iterator iterator()>();

     label4:
        $z2 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label5;

        $r10 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r11 = (java.util.Map$Entry) $r10;

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; ");

        $r12 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getKey()>();

        $r13 = (java.lang.String) $r12;

        $r14 = interfaceinvoke r11.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r15 = (java.lang.String) $r14;

        $r16 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeHeaderParameter(java.lang.String,java.lang.String)>($r13, $r15);

        virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        goto label4;

     label5:
        $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String)>($r8);

        return $r9;
    }

    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.lang.String)
    {
        java.lang.String r0, r1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>(r0, r1, -1L, null, null, null);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.lang.String, long)
    {
        long l0;
        java.lang.String r0, r1;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r2;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String,java.lang.String,long,java.util.Date,java.util.Date,java.util.Date)>(r0, r1, l0, null, null, null);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String, java.lang.String, long, java.util.Date, java.util.Date, java.util.Date)
    {
        java.util.Date r2, r3, r4;
        long l0;
        java.util.HashMap $r11;
        org.apache.james.mime4j.dom.field.ContentDispositionField $r6;
        byte $b1;
        int $i2;
        java.lang.String r1, r5, $r7, $r8, $r9, $r10;

        r5 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        l0 := @parameter2: long;

        r2 := @parameter3: java.util.Date;

        r3 := @parameter4: java.util.Date;

        r4 := @parameter5: java.util.Date;

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        if r1 == null goto label1;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("filename", r1);

     label1:
        $b1 = l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label2;

        $r10 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(l0);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("size", $r10);

     label2:
        if r2 == null goto label3;

        $r9 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>(r2, null);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("creation-date", $r9);

     label3:
        if r3 == null goto label4;

        $r8 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>(r3, null);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("modification-date", $r8);

     label4:
        if r4 == null goto label5;

        $r7 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>(r4, null);

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("read-date", $r7);

     label5:
        $r6 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ContentDispositionField contentDisposition(java.lang.String,java.util.Map)>(r5, $r11);

        return $r6;
    }

    public static org.apache.james.mime4j.dom.field.DateTimeField date(java.util.Date)
    {
        org.apache.james.mime4j.dom.field.DateTimeField $r1;
        java.util.Date r0;

        r0 := @parameter0: java.util.Date;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone)>("Date", r0, null);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.DateTimeField date(java.lang.String, java.util.Date)
    {
        java.lang.String r0;
        org.apache.james.mime4j.dom.field.DateTimeField $r2;
        java.util.Date r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Date;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone)>(r0, r1, null);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.DateTimeField date(java.lang.String, java.util.Date, java.util.TimeZone)
    {
        java.util.Date r1;
        java.util.TimeZone r2;
        java.lang.String r0;
        org.apache.james.mime4j.dom.field.DateTimeField $r3;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.Date;

        r2 := @parameter2: java.util.TimeZone;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>(r0);

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String,java.util.Date,java.util.TimeZone)>(r0, r1, r2);

        return $r3;
    }

    public static org.apache.james.mime4j.dom.field.UnstructuredField messageId(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r3;
        org.apache.james.mime4j.dom.field.UnstructuredField $r4;
        org.apache.james.mime4j.dom.FieldParser $r2;
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String createUniqueMessageId(java.lang.String)>(r0);

        $r2 = <org.apache.james.mime4j.field.UnstructuredFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r3 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r2, "Message-ID", $r1);

        $r4 = (org.apache.james.mime4j.dom.field.UnstructuredField) $r3;

        return $r4;
    }

    public static org.apache.james.mime4j.dom.field.UnstructuredField subject(java.lang.String)
    {
        org.apache.james.mime4j.dom.field.UnstructuredField $r6;
        org.apache.james.mime4j.dom.FieldParser $r4;
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        int $i0, i1;
        java.lang.String $r0, r1, $r3;
        org.apache.james.mime4j.codec.EncoderUtil$Usage $r2;

        r1 := @parameter0: java.lang.String;

        $r0 = "Subject";

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        i1 = $i0 + 2;

        $r2 = <org.apache.james.mime4j.codec.EncoderUtil$Usage: org.apache.james.mime4j.codec.EncoderUtil$Usage TEXT_TOKEN>;

        $r3 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: java.lang.String encodeIfNecessary(java.lang.String,org.apache.james.mime4j.codec.EncoderUtil$Usage,int)>(r1, $r2, i1);

        $r4 = <org.apache.james.mime4j.field.UnstructuredFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, "Subject", $r3);

        $r6 = (org.apache.james.mime4j.dom.field.UnstructuredField) $r5;

        return $r6;
    }

    public static org.apache.james.mime4j.dom.field.MailboxField sender(org.apache.james.mime4j.dom.address.Mailbox)
    {
        org.apache.james.mime4j.dom.field.MailboxField $r1;
        org.apache.james.mime4j.dom.address.Mailbox r0;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Mailbox;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxField mailbox0(java.lang.String,org.apache.james.mime4j.dom.address.Mailbox)>("Sender", r0);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.MailboxListField 'from'(org.apache.james.mime4j.dom.address.Mailbox)
    {
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.MailboxListField $r2;
        org.apache.james.mime4j.dom.address.Mailbox r0;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Mailbox;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>("From", $r1);

        return $r2;
    }

    public static transient org.apache.james.mime4j.dom.field.MailboxListField 'from'(org.apache.james.mime4j.dom.address.Mailbox[])
    {
        org.apache.james.mime4j.dom.address.Mailbox[] r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.MailboxListField $r2;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Mailbox[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>("From", $r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.MailboxListField 'from'(java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.MailboxListField $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>("From", r0);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField 'to'(org.apache.james.mime4j.dom.address.Address)
    {
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;
        org.apache.james.mime4j.dom.address.Address r0;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("To", $r1);

        return $r2;
    }

    public static transient org.apache.james.mime4j.dom.field.AddressListField 'to'(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("To", $r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField 'to'(java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.AddressListField $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("To", r0);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField cc(org.apache.james.mime4j.dom.address.Address)
    {
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;
        org.apache.james.mime4j.dom.address.Address r0;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Cc", $r1);

        return $r2;
    }

    public static transient org.apache.james.mime4j.dom.field.AddressListField cc(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Cc", $r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField cc(java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.AddressListField $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Cc", r0);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField bcc(org.apache.james.mime4j.dom.address.Address)
    {
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;
        org.apache.james.mime4j.dom.address.Address r0;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Bcc", $r1);

        return $r2;
    }

    public static transient org.apache.james.mime4j.dom.field.AddressListField bcc(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Bcc", $r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField bcc(java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.AddressListField $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Bcc", r0);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField replyTo(org.apache.james.mime4j.dom.address.Address)
    {
        java.util.Set $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;
        org.apache.james.mime4j.dom.address.Address r0;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Reply-To", $r1);

        return $r2;
    }

    public static transient org.apache.james.mime4j.dom.field.AddressListField replyTo(org.apache.james.mime4j.dom.address.Address[])
    {
        org.apache.james.mime4j.dom.address.Address[] r0;
        java.util.List $r1;
        org.apache.james.mime4j.dom.field.AddressListField $r2;

        r0 := @parameter0: org.apache.james.mime4j.dom.address.Address[];

        $r1 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Reply-To", $r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField replyTo(java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.AddressListField $r1;
        java.lang.Iterable r0;

        r0 := @parameter0: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>("Reply-To", r0);

        return $r1;
    }

    public static org.apache.james.mime4j.dom.field.MailboxField mailbox(java.lang.String, org.apache.james.mime4j.dom.address.Mailbox)
    {
        org.apache.james.mime4j.dom.field.MailboxField $r2;
        java.lang.String r0;
        org.apache.james.mime4j.dom.address.Mailbox r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: org.apache.james.mime4j.dom.address.Mailbox;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxField mailbox0(java.lang.String,org.apache.james.mime4j.dom.address.Mailbox)>(r0, r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.MailboxListField mailboxList(java.lang.String, java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.MailboxListField $r2;
        java.lang.String r0;
        java.lang.Iterable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String,java.lang.Iterable)>(r0, r1);

        return $r2;
    }

    public static org.apache.james.mime4j.dom.field.AddressListField addressList(java.lang.String, java.lang.Iterable)
    {
        java.lang.String r0;
        org.apache.james.mime4j.dom.field.AddressListField $r2;
        java.lang.Iterable r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.Iterable;

        staticinvoke <org.apache.james.mime4j.field.Fields: void checkValidFieldName(java.lang.String)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String,java.lang.Iterable)>(r0, r1);

        return $r2;
    }

    private static org.apache.james.mime4j.dom.field.DateTimeField date0(java.lang.String, java.util.Date, java.util.TimeZone)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        java.util.Date r0;
        java.util.TimeZone r1;
        org.apache.james.mime4j.dom.FieldParser $r4;
        java.lang.String $r2, r3;
        org.apache.james.mime4j.dom.field.DateTimeField $r6;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: java.util.Date;

        r1 := @parameter2: java.util.TimeZone;

        $r2 = staticinvoke <org.apache.james.mime4j.util.MimeUtil: java.lang.String formatDate(java.util.Date,java.util.TimeZone)>(r0, r1);

        $r4 = <org.apache.james.mime4j.field.DateTimeFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, r3, $r2);

        $r6 = (org.apache.james.mime4j.dom.field.DateTimeField) $r5;

        return $r6;
    }

    private static org.apache.james.mime4j.dom.field.MailboxField mailbox0(java.lang.String, org.apache.james.mime4j.dom.address.Mailbox)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        java.util.Set $r1;
        org.apache.james.mime4j.dom.FieldParser $r4;
        org.apache.james.mime4j.dom.field.MailboxField $r6;
        java.lang.String $r2, r3;
        org.apache.james.mime4j.dom.address.Mailbox r0;

        r3 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.james.mime4j.dom.address.Mailbox;

        $r1 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(r0);

        $r2 = staticinvoke <org.apache.james.mime4j.field.Fields: java.lang.String encodeAddresses(java.lang.Iterable)>($r1);

        $r4 = <org.apache.james.mime4j.field.MailboxFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r5 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r4, r3, $r2);

        $r6 = (org.apache.james.mime4j.dom.field.MailboxField) $r5;

        return $r6;
    }

    private static org.apache.james.mime4j.dom.field.MailboxListField mailboxList0(java.lang.String, java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r4;
        org.apache.james.mime4j.dom.FieldParser $r3;
        org.apache.james.mime4j.dom.field.MailboxListField $r5;
        java.lang.String $r1, r2;
        java.lang.Iterable r0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: java.lang.String encodeAddresses(java.lang.Iterable)>(r0);

        $r3 = <org.apache.james.mime4j.field.MailboxListFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r3, r2, $r1);

        $r5 = (org.apache.james.mime4j.dom.field.MailboxListField) $r4;

        return $r5;
    }

    private static org.apache.james.mime4j.dom.field.AddressListField addressList0(java.lang.String, java.lang.Iterable)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r4;
        org.apache.james.mime4j.dom.field.AddressListField $r5;
        org.apache.james.mime4j.dom.FieldParser $r3;
        java.lang.String $r1, r2;
        java.lang.Iterable r0;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Iterable;

        $r1 = staticinvoke <org.apache.james.mime4j.field.Fields: java.lang.String encodeAddresses(java.lang.Iterable)>(r0);

        $r3 = <org.apache.james.mime4j.field.AddressListFieldImpl: org.apache.james.mime4j.dom.FieldParser PARSER>;

        $r4 = staticinvoke <org.apache.james.mime4j.field.Fields: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser,java.lang.String,java.lang.String)>($r3, r2, $r1);

        $r5 = (org.apache.james.mime4j.dom.field.AddressListField) $r4;

        return $r5;
    }

    private static void checkValidFieldName(java.lang.String)
    {
        java.util.regex.Matcher $r2;
        java.lang.String r0;
        java.util.regex.Pattern $r1;
        java.lang.IllegalArgumentException $r3;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        $r1 = <org.apache.james.mime4j.field.Fields: java.util.regex.Pattern FIELD_NAME_PATTERN>;

        $r2 = virtualinvoke $r1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(r0);

        $z0 = virtualinvoke $r2.<java.util.regex.Matcher: boolean matches()>();

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid field name");

        throw $r3;

     label1:
        return;
    }

    private static boolean isValidMimeType(java.lang.String)
    {
        int $i0, $i1, $i3;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(47);

        $i3 = (int) -1;

        if $i0 != $i3 goto label2;

        return 0;

     label2:
        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

        $i1 = $i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i1);

        $z0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: boolean isToken(java.lang.String)>($r1);

        if $z0 == 0 goto label3;

        $z1 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: boolean isToken(java.lang.String)>($r2);

        if $z1 == 0 goto label3;

        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    private static boolean isValidDispositionType(java.lang.String)
    {
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        if r0 != null goto label1;

        return 0;

     label1:
        $z0 = staticinvoke <org.apache.james.mime4j.codec.EncoderUtil: boolean isToken(java.lang.String)>(r0);

        return $z0;
    }

    private static org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.dom.FieldParser, java.lang.String, java.lang.String)
    {
        org.apache.james.mime4j.dom.field.ParsedField $r5;
        org.apache.james.mime4j.stream.RawField $r0;
        org.apache.james.mime4j.dom.FieldParser r3;
        org.apache.james.mime4j.codec.DecodeMonitor $r4;
        java.lang.String r1, r2;

        r3 := @parameter0: org.apache.james.mime4j.dom.FieldParser;

        r1 := @parameter1: java.lang.String;

        r2 := @parameter2: java.lang.String;

        $r0 = new org.apache.james.mime4j.stream.RawField;

        specialinvoke $r0.<org.apache.james.mime4j.stream.RawField: void <init>(java.lang.String,java.lang.String)>(r1, r2);

        $r4 = <org.apache.james.mime4j.codec.DecodeMonitor: org.apache.james.mime4j.codec.DecodeMonitor SILENT>;

        $r5 = interfaceinvoke r3.<org.apache.james.mime4j.dom.FieldParser: org.apache.james.mime4j.dom.field.ParsedField parse(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>($r0, $r4);

        return $r5;
    }

    private static java.lang.String encodeAddresses(java.lang.Iterable)
    {
        java.util.Iterator $r2;
        java.lang.Iterable r1;
        org.apache.james.mime4j.field.address.AddressFormatter $r6;
        org.apache.james.mime4j.dom.address.Address r5;
        int $i0;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4;
        java.lang.String $r3;
        boolean $z0;

        r1 := @parameter0: java.lang.Iterable;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.apache.james.mime4j.dom.address.Address) $r4;

        $i0 = virtualinvoke $r0.<java.lang.StringBuilder: int length()>();

        if $i0 <= 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

     label2:
        $r6 = <org.apache.james.mime4j.field.address.AddressFormatter: org.apache.james.mime4j.field.address.AddressFormatter DEFAULT>;

        virtualinvoke $r6.<org.apache.james.mime4j.field.address.AddressFormatter: void encode(java.lang.StringBuilder,org.apache.james.mime4j.dom.address.Address)>($r0, r5);

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    static void <clinit>()
    {
        java.util.regex.Pattern $r0;

        $r0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[\\x21-\\x39\\x3b-\\x7e]+");

        <org.apache.james.mime4j.field.Fields: java.util.regex.Pattern FIELD_NAME_PATTERN> = $r0;

        return;
    }
}
