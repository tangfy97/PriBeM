class org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions extends java.security.PermissionCollection
{
    static final long serialVersionUID;
    java.security.AccessControlContext _context;
    java.security.PermissionCollection _statisPermissions;

    void <init>(java.security.ProtectionDomain)
    {
        java.security.AccessControlContext $r1;
        org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions r0;
        java.security.ProtectionDomain r2;
        java.security.PermissionCollection $r3;

        r0 := @this: org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions;

        r2 := @parameter0: java.security.ProtectionDomain;

        specialinvoke r0.<java.security.PermissionCollection: void <init>()>();

        $r1 = staticinvoke <java.security.AccessController: java.security.AccessControlContext getContext()>();

        r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.AccessControlContext _context> = $r1;

        if r2 == null goto label1;

        $r3 = virtualinvoke r2.<java.security.ProtectionDomain: java.security.PermissionCollection getPermissions()>();

        r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.PermissionCollection _statisPermissions> = $r3;

     label1:
        virtualinvoke r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: void setReadOnly()>();

        return;
    }

    public void add(java.security.Permission)
    {
        java.lang.RuntimeException $r0;
        org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions r1;
        java.security.Permission r2;

        r1 := @this: org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions;

        r2 := @parameter0: java.security.Permission;

        $r0 = new java.lang.RuntimeException;

        specialinvoke $r0.<java.lang.RuntimeException: void <init>(java.lang.String)>("NOT IMPLEMENTED");

        throw $r0;
    }

    public boolean implies(java.security.Permission)
    {
        java.security.AccessControlContext $r3;
        org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions r0;
        java.security.Permission r2;
        java.security.AccessControlException $r5;
        java.security.PermissionCollection $r1, $r4;
        boolean $z0;

        r0 := @this: org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions;

        r2 := @parameter0: java.security.Permission;

        $r1 = r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.PermissionCollection _statisPermissions>;

        if $r1 == null goto label1;

        $r4 = r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.PermissionCollection _statisPermissions>;

        $z0 = virtualinvoke $r4.<java.security.PermissionCollection: boolean implies(java.security.Permission)>(r2);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r3 = r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.AccessControlContext _context>;

        virtualinvoke $r3.<java.security.AccessControlContext: void checkPermission(java.security.Permission)>(r2);

     label2:
        return 1;

     label3:
        $r5 := @caughtexception;

        return 0;

        catch java.security.AccessControlException from label1 to label2 with label3;
    }

    public java.util.Enumeration elements()
    {
        org.mozilla.javascript.tools.shell.JavaPolicySecurity$1 $r0;
        org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions r1;

        r1 := @this: org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions;

        $r0 = new org.mozilla.javascript.tools.shell.JavaPolicySecurity$1;

        specialinvoke $r0.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$1: void <init>(org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions)>(r1);

        return $r0;
    }

    public java.lang.String toString()
    {
        java.security.AccessControlContext $r5;
        org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions r1;
        java.security.PermissionCollection $r6;
        java.lang.StringBuffer $r0;
        int $i0;
        java.lang.Class $r2;
        java.lang.String $r3, $r4, $r7;

        r1 := @this: org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64);

        $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1);

        $r4 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" (context=");

        $r5 = r1.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.AccessControlContext _context>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r5);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", static_permitions=");

        $r6 = r1.<org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: java.security.PermissionCollection _statisPermissions>;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(41);

        $r7 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r7;
    }

    public static void <clinit>()
    {
        <org.mozilla.javascript.tools.shell.JavaPolicySecurity$ContextPermissions: long serialVersionUID> = -1721494496320750721L;

        return;
    }
}
