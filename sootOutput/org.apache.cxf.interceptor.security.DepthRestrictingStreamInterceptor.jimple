public class org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor extends org.apache.cxf.phase.AbstractPhaseInterceptor
{
    private static final java.lang.String XML_SUB_TYPE;
    private int elementCountThreshold;
    private int innerElementLevelThreshold;
    private int innerElementCountThreshold;

    public void <init>()
    {
        java.lang.Class $r1;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;
        java.lang.String $r2;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: void <init>(java.lang.String)>("post-stream");

        $r1 = class "Lorg/apache/cxf/interceptor/StaxInInterceptor;";

        $r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: void addAfter(java.lang.String)>($r2);

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int elementCountThreshold> = 2000;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementLevelThreshold> = 20;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementCountThreshold> = 50;

        return;
    }

    public void <init>(java.lang.String, java.util.List)
    {
        java.util.List r2;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.util.List;

        specialinvoke r0.<org.apache.cxf.phase.AbstractPhaseInterceptor: void <init>(java.lang.String)>(r1);

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int elementCountThreshold> = 2000;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementLevelThreshold> = 20;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementCountThreshold> = 50;

        if r2 == null goto label1;

        virtualinvoke r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: void addAfter(java.util.Collection)>(r2);

     label1:
        return;
    }

    public void <init>(java.lang.String, java.util.List, java.util.List)
    {
        java.util.List r2, r3;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        r1 := @parameter0: java.lang.String;

        r3 := @parameter1: java.util.List;

        r2 := @parameter2: java.util.List;

        specialinvoke r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: void <init>(java.lang.String,java.util.List)>(r1, r2);

        if r3 == null goto label1;

        virtualinvoke r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: void addBefore(java.util.Collection)>(r3);

     label1:
        return;
    }

    public void handleMessage(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;
        org.apache.cxf.message.Message r1;
        javax.xml.stream.XMLStreamReader r5;
        org.apache.cxf.staxutils.DepthRestrictingStreamReader $r3;
        int $i0, $i1, $i2;
        java.lang.Object $r2, $r4;
        boolean $z0;
        java.io.InputStream r6;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        $z0 = virtualinvoke r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: boolean canBeIgnored(org.apache.cxf.message.Message)>(r1);

        if $z0 == 0 goto label1;

        return;

     label1:
        $r2 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljavax/xml/stream/XMLStreamReader;");

        r5 = (javax.xml.stream.XMLStreamReader) $r2;

        if r5 != null goto label3;

        $r4 = interfaceinvoke r1.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/io/InputStream;");

        r6 = (java.io.InputStream) $r4;

        if r6 == null goto label2;

        r5 = staticinvoke <org.apache.cxf.staxutils.StaxUtils: javax.xml.stream.XMLStreamReader createXMLStreamReader(java.io.InputStream)>(r6);

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/io/InputStream;", null);

     label2:
        if r5 != null goto label3;

        return;

     label3:
        $r3 = new org.apache.cxf.staxutils.DepthRestrictingStreamReader;

        $i2 = r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int elementCountThreshold>;

        $i1 = r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementLevelThreshold>;

        $i0 = r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementCountThreshold>;

        specialinvoke $r3.<org.apache.cxf.staxutils.DepthRestrictingStreamReader: void <init>(javax.xml.stream.XMLStreamReader,int,int,int)>(r5, $i2, $i1, $i0);

        interfaceinvoke r1.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljavax/xml/stream/XMLStreamReader;", $r3);

        return;
    }

    protected boolean canBeIgnored(org.apache.cxf.message.Message)
    {
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r3;
        org.apache.cxf.message.Message r0;
        java.lang.Object $r1;
        java.lang.String r2;
        boolean $z0, $z1;

        r3 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("Content-Type");

        r2 = (java.lang.String) $r1;

        if r2 == null goto label1;

        $z0 = virtualinvoke r2.<java.lang.String: boolean contains(java.lang.CharSequence)>("xml");

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public void setElementCountThreshold(int)
    {
        int i0;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int elementCountThreshold> = i0;

        return;
    }

    public int getElementCountThreshold()
    {
        int $i0;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        $i0 = r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int elementCountThreshold>;

        return $i0;
    }

    public void setInnerElementLevelThreshold(int)
    {
        int i0;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementLevelThreshold> = i0;

        return;
    }

    public int getInnerElementLevelThreshold()
    {
        int $i0;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        $i0 = r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementLevelThreshold>;

        return $i0;
    }

    public void setInnerElementCountThreshold(int)
    {
        int i0;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        i0 := @parameter0: int;

        r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementCountThreshold> = i0;

        return;
    }

    public int getInnerElementCountThreshold()
    {
        int $i0;
        org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor r0;

        r0 := @this: org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor;

        $i0 = r0.<org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: int innerElementCountThreshold>;

        return $i0;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.interceptor.security.DepthRestrictingStreamInterceptor: java.lang.String XML_SUB_TYPE> = "xml";

        return;
    }
}
