public class org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode extends org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl
{

    public void <init>(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)
    {
        org.apache.lucene.queryparser.flexible.core.QueryNodeError $r2;
        java.lang.Object[] $r4;
        org.apache.lucene.queryparser.flexible.messages.MessageImpl $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        java.lang.String $r5;
        org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: void <init>()>();

        if r1 != null goto label1;

        $r2 = new org.apache.lucene.queryparser.flexible.core.QueryNodeError;

        $r3 = new org.apache.lucene.queryparser.flexible.messages.MessageImpl;

        $r5 = <org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages: java.lang.String PARAMETER_VALUE_NOT_SUPPORTED>;

        $r4 = newarray (java.lang.Object)[2];

        $r4[0] = "query";

        $r4[1] = "null";

        specialinvoke $r3.<org.apache.lucene.queryparser.flexible.messages.MessageImpl: void <init>(java.lang.String,java.lang.Object[])>($r5, $r4);

        specialinvoke $r2.<org.apache.lucene.queryparser.flexible.core.QueryNodeError: void <init>(org.apache.lucene.queryparser.flexible.messages.Message)>($r3);

        throw $r2;

     label1:
        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: void allocate()>();

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: void setLeaf(boolean)>(0);

        virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: void add(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r1);

        return;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()
    {
        java.util.List $r1;
        java.lang.Object $r2;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: java.util.List getChildren()>();

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);

        $r3 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r2;

        return $r3;
    }

    public java.lang.String toString()
    {
        org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode r2;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r3;
        java.lang.String $r4, $r7;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<group>\n");

        $r3 = virtualinvoke r2.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n</group>");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)
    {
        java.lang.CharSequence $r6;
        org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax r5;
        org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode r0;
        java.lang.StringBuilder $r2, $r3, $r7, $r8;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1, $r4;
        java.lang.String $r9;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode;

        r5 := @parameter0: org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax;

        $r1 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        if $r1 != null goto label1;

        return "";

     label1:
        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("( ");

        $r4 = virtualinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode getChild()>();

        $r6 = interfaceinvoke $r4.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>(r5);

        $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" )");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    public org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree() throws java.lang.CloneNotSupportedException
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode $r1;
        org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode r0, r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode;

        $r1 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNodeImpl: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode cloneTree()>();

        r2 = (org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode) $r1;

        return r2;
    }

    public void setChild(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)
    {
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode r2;
        java.util.ArrayList $r0;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(r1);

        virtualinvoke r2.<org.apache.lucene.queryparser.flexible.core.nodes.GroupQueryNode: void set(java.util.List)>($r0);

        return;
    }
}
