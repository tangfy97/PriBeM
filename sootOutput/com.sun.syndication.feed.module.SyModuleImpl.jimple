public class com.sun.syndication.feed.module.SyModuleImpl extends com.sun.syndication.feed.module.ModuleImpl implements com.sun.syndication.feed.module.SyModule
{
    private static final java.util.Set PERIODS;
    private java.lang.String _updatePeriod;
    private int _updateFrequency;
    private java.util.Date _updateBase;
    private static final com.sun.syndication.feed.impl.CopyFromHelper COPY_FROM_HELPER;
    static java.lang.Class class$com$sun$syndication$feed$module$SyModule;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$util$Date;

    public void <init>()
    {
        com.sun.syndication.feed.module.SyModuleImpl r0;
        java.lang.Class $r1, $r2;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        $r1 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$(java.lang.String)>("com.sun.syndication.feed.module.SyModule");

        <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule> = $r2;

        goto label2;

     label1:
        $r2 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule>;

     label2:
        specialinvoke r0.<com.sun.syndication.feed.module.ModuleImpl: void <init>(java.lang.Class,java.lang.String)>($r2, "http://purl.org/rss/1.0/modules/syndication/");

        return;
    }

    public java.lang.String getUpdatePeriod()
    {
        com.sun.syndication.feed.module.SyModuleImpl r0;
        java.lang.String $r1;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        $r1 = r0.<com.sun.syndication.feed.module.SyModuleImpl: java.lang.String _updatePeriod>;

        return $r1;
    }

    public void setUpdatePeriod(java.lang.String)
    {
        java.util.Set $r1;
        java.lang.IllegalArgumentException $r3;
        com.sun.syndication.feed.module.SyModuleImpl r2;
        java.lang.StringBuffer $r4, $r5, $r6, $r7;
        java.lang.String r0, $r8;
        boolean $z0;

        r2 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS>;

        $z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>(r0);

        if $z0 != 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invalid period [");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("]");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r3;

     label1:
        r2.<com.sun.syndication.feed.module.SyModuleImpl: java.lang.String _updatePeriod> = r0;

        return;
    }

    public int getUpdateFrequency()
    {
        int $i0;
        com.sun.syndication.feed.module.SyModuleImpl r0;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        $i0 = r0.<com.sun.syndication.feed.module.SyModuleImpl: int _updateFrequency>;

        return $i0;
    }

    public void setUpdateFrequency(int)
    {
        int i0;
        com.sun.syndication.feed.module.SyModuleImpl r0;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        i0 := @parameter0: int;

        r0.<com.sun.syndication.feed.module.SyModuleImpl: int _updateFrequency> = i0;

        return;
    }

    public java.util.Date getUpdateBase()
    {
        com.sun.syndication.feed.module.SyModuleImpl r0;
        java.util.Date $r1;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        $r1 = r0.<com.sun.syndication.feed.module.SyModuleImpl: java.util.Date _updateBase>;

        return $r1;
    }

    public void setUpdateBase(java.util.Date)
    {
        com.sun.syndication.feed.module.SyModuleImpl r0;
        java.util.Date r1;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        r1 := @parameter0: java.util.Date;

        r0.<com.sun.syndication.feed.module.SyModuleImpl: java.util.Date _updateBase> = r1;

        return;
    }

    public java.lang.Class getInterface()
    {
        com.sun.syndication.feed.module.SyModuleImpl r1;
        java.lang.Class $r0, $r2;

        r1 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        $r0 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule>;

        if $r0 != null goto label1;

        $r2 = staticinvoke <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$(java.lang.String)>("com.sun.syndication.feed.module.SyModule");

        <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule> = $r2;

        goto label2;

     label1:
        $r2 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule>;

     label2:
        return $r2;
    }

    public void copyFrom(java.lang.Object)
    {
        com.sun.syndication.feed.module.SyModuleImpl r0;
        java.lang.Object r1;
        com.sun.syndication.feed.impl.CopyFromHelper $r2;

        r0 := @this: com.sun.syndication.feed.module.SyModuleImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = <com.sun.syndication.feed.module.SyModuleImpl: com.sun.syndication.feed.impl.CopyFromHelper COPY_FROM_HELPER>;

        virtualinvoke $r2.<com.sun.syndication.feed.impl.CopyFromHelper: void copy(java.lang.Object,java.lang.Object)>(r0, r1);

        return;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Throwable $r4;
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

     label2:
        return $r1;

     label3:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>()>();

        $r4 = virtualinvoke $r3.<java.lang.NoClassDefFoundError: java.lang.Throwable initCause(java.lang.Throwable)>($r2);

        throw $r4;

        catch java.lang.ClassNotFoundException from label1 to label2 with label3;
    }

    static void <clinit>()
    {
        com.sun.syndication.feed.impl.CopyFromHelper $r15;
        java.util.HashMap $r11;
        java.util.HashSet $r0;
        java.util.Map $r17;
        java.lang.String $r1, $r3, $r5, $r7, $r9;
        java.util.Set $r2, $r4, $r6, $r8, $r10;
        java.lang.Class $r12, $r13, $r14, $r16, $r18, $r19, $r20;

        $r0 = new java.util.HashSet;

        specialinvoke $r0.<java.util.HashSet: void <init>()>();

        <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS> = $r0;

        $r2 = <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS>;

        $r1 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.String HOURLY>;

        interfaceinvoke $r2.<java.util.Set: boolean add(java.lang.Object)>($r1);

        $r4 = <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS>;

        $r3 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.String DAILY>;

        interfaceinvoke $r4.<java.util.Set: boolean add(java.lang.Object)>($r3);

        $r6 = <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS>;

        $r5 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.String WEEKLY>;

        interfaceinvoke $r6.<java.util.Set: boolean add(java.lang.Object)>($r5);

        $r8 = <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS>;

        $r7 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.String MONTHLY>;

        interfaceinvoke $r8.<java.util.Set: boolean add(java.lang.Object)>($r7);

        $r10 = <com.sun.syndication.feed.module.SyModuleImpl: java.util.Set PERIODS>;

        $r9 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.String YEARLY>;

        interfaceinvoke $r10.<java.util.Set: boolean add(java.lang.Object)>($r9);

        $r11 = new java.util.HashMap;

        specialinvoke $r11.<java.util.HashMap: void <init>()>();

        $r12 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$java$lang$String>;

        if $r12 != null goto label1;

        $r18 = staticinvoke <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$java$lang$String> = $r18;

        goto label2;

     label1:
        $r18 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$java$lang$String>;

     label2:
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("updatePeriod", $r18);

        $r13 = <java.lang.Integer: java.lang.Class TYPE>;

        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("updateFrequency", $r13);

        $r14 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$java$util$Date>;

        if $r14 != null goto label3;

        $r19 = staticinvoke <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$(java.lang.String)>("java.util.Date");

        <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$java$util$Date> = $r19;

        goto label4;

     label3:
        $r19 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$java$util$Date>;

     label4:
        interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("updateBase", $r19);

        $r17 = <java.util.Collections: java.util.Map EMPTY_MAP>;

        $r15 = new com.sun.syndication.feed.impl.CopyFromHelper;

        $r16 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule>;

        if $r16 != null goto label5;

        $r20 = staticinvoke <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$(java.lang.String)>("com.sun.syndication.feed.module.SyModule");

        <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule> = $r20;

        goto label6;

     label5:
        $r20 = <com.sun.syndication.feed.module.SyModuleImpl: java.lang.Class class$com$sun$syndication$feed$module$SyModule>;

     label6:
        specialinvoke $r15.<com.sun.syndication.feed.impl.CopyFromHelper: void <init>(java.lang.Class,java.util.Map,java.util.Map)>($r20, $r11, $r17);

        <com.sun.syndication.feed.module.SyModuleImpl: com.sun.syndication.feed.impl.CopyFromHelper COPY_FROM_HELPER> = $r15;

        return;
    }
}
