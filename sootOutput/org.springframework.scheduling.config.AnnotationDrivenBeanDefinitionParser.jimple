public class org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser extends java.lang.Object implements org.springframework.beans.factory.xml.BeanDefinitionParser
{
    public static final java.lang.String ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME;
    public static final java.lang.String ASYNC_EXECUTION_ASPECT_BEAN_NAME;
    private static final java.lang.String ASYNC_EXECUTION_ASPECT_CLASS_NAME;
    public static final java.lang.String SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME;

    public void <init>()
    {
        org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser r0;

        r0 := @this: org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.springframework.beans.factory.config.BeanDefinition parse(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser r19;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r8, $r13;
        org.springframework.beans.factory.xml.XmlReaderContext $r16, $r18;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r9, $r14;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r5;
        org.springframework.beans.factory.xml.ParserContext r0;
        java.lang.Boolean $r12, $r17;
        java.lang.String $r4, $r6, $r7, $r10, $r11, $r15;
        boolean $z0, $z1, $z2, $z3, $z4, $z5;
        org.springframework.beans.factory.parsing.CompositeComponentDefinition $r3;
        org.w3c.dom.Element r1;
        java.lang.Object $r2;

        r19 := @this: org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser;

        r1 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r2 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: java.lang.Object extractSource(java.lang.Object)>(r1);

        $r3 = new org.springframework.beans.factory.parsing.CompositeComponentDefinition;

        $r4 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getTagName()>();

        specialinvoke $r3.<org.springframework.beans.factory.parsing.CompositeComponentDefinition: void <init>(java.lang.String,java.lang.Object)>($r4, $r2);

        virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: void pushContainingComponent(org.springframework.beans.factory.parsing.CompositeComponentDefinition)>($r3);

        $r5 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r6 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("mode");

        $r7 = "aspectj";

        $z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label1;

        specialinvoke r19.<org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: void registerAsyncExecutionAspect(org.w3c.dom.Element,org.springframework.beans.factory.xml.ParserContext)>(r1, r0);

        goto label5;

     label1:
        $z1 = interfaceinvoke $r5.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.scheduling.annotation.internalAsyncAnnotationProcessor");

        if $z1 == 0 goto label2;

        $r18 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        virtualinvoke $r18.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object)>("Only one AsyncAnnotationBeanPostProcessor may exist within the context.", $r2);

        goto label5;

     label2:
        $r8 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition(java.lang.String)>("org.springframework.scheduling.annotation.AsyncAnnotationBeanPostProcessor");

        $r9 = virtualinvoke $r8.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r9.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r2);

        $r10 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("executor");

        $z2 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r10);

        if $z2 == 0 goto label3;

        virtualinvoke $r8.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("executor", $r10);

     label3:
        $r11 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("proxy-target-class");

        $r12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(java.lang.String)>($r11);

        $z3 = virtualinvoke $r12.<java.lang.Boolean: boolean booleanValue()>();

        if $z3 == 0 goto label4;

        $r17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        virtualinvoke $r8.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyValue(java.lang.String,java.lang.Object)>("proxyTargetClass", $r17);

     label4:
        staticinvoke <org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: void registerPostProcessor(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)>(r0, $r8, "org.springframework.scheduling.annotation.internalAsyncAnnotationProcessor");

     label5:
        $z5 = interfaceinvoke $r5.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.scheduling.annotation.internalScheduledAnnotationProcessor");

        if $z5 == 0 goto label6;

        $r16 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.xml.XmlReaderContext getReaderContext()>();

        virtualinvoke $r16.<org.springframework.beans.factory.xml.XmlReaderContext: void error(java.lang.String,java.lang.Object)>("Only one ScheduledAnnotationBeanPostProcessor may exist within the context.", $r2);

        goto label8;

     label6:
        $r13 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition(java.lang.String)>("org.springframework.scheduling.annotation.ScheduledAnnotationBeanPostProcessor");

        $r14 = virtualinvoke $r13.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getRawBeanDefinition()>();

        virtualinvoke $r14.<org.springframework.beans.factory.support.AbstractBeanDefinition: void setSource(java.lang.Object)>($r2);

        $r15 = interfaceinvoke r1.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("scheduler");

        $z4 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r15);

        if $z4 == 0 goto label7;

        virtualinvoke $r13.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("scheduler", $r15);

     label7:
        staticinvoke <org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: void registerPostProcessor(org.springframework.beans.factory.xml.ParserContext,org.springframework.beans.factory.support.BeanDefinitionBuilder,java.lang.String)>(r0, $r13, "org.springframework.scheduling.annotation.internalScheduledAnnotationProcessor");

     label8:
        virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: void popAndRegisterContainingComponent()>();

        return null;
    }

    private void registerAsyncExecutionAspect(org.w3c.dom.Element, org.springframework.beans.factory.xml.ParserContext)
    {
        org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser r7;
        org.springframework.beans.factory.support.BeanDefinitionBuilder $r2;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r6;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r1;
        org.w3c.dom.Element r3;
        org.springframework.beans.factory.xml.ParserContext r0;
        org.springframework.beans.factory.parsing.BeanComponentDefinition $r5;
        java.lang.String $r4;
        boolean $z0, $z1;

        r7 := @this: org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser;

        r3 := @parameter0: org.w3c.dom.Element;

        r0 := @parameter1: org.springframework.beans.factory.xml.ParserContext;

        $r1 = virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $z0 = interfaceinvoke $r1.<org.springframework.beans.factory.support.BeanDefinitionRegistry: boolean containsBeanDefinition(java.lang.String)>("org.springframework.scheduling.config.internalAsyncExecutionAspect");

        if $z0 != 0 goto label2;

        $r2 = staticinvoke <org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder genericBeanDefinition(java.lang.String)>("org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect");

        virtualinvoke $r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setFactoryMethod(java.lang.String)>("aspectOf");

        $r4 = interfaceinvoke r3.<org.w3c.dom.Element: java.lang.String getAttribute(java.lang.String)>("executor");

        $z1 = staticinvoke <org.springframework.util.StringUtils: boolean hasText(java.lang.String)>($r4);

        if $z1 == 0 goto label1;

        virtualinvoke $r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder addPropertyReference(java.lang.String,java.lang.String)>("executor", $r4);

     label1:
        $r5 = new org.springframework.beans.factory.parsing.BeanComponentDefinition;

        $r6 = virtualinvoke $r2.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        specialinvoke $r5.<org.springframework.beans.factory.parsing.BeanComponentDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r6, "org.springframework.scheduling.config.internalAsyncExecutionAspect");

        virtualinvoke r0.<org.springframework.beans.factory.xml.ParserContext: void registerBeanComponent(org.springframework.beans.factory.parsing.BeanComponentDefinition)>($r5);

     label2:
        return;
    }

    private static void registerPostProcessor(org.springframework.beans.factory.xml.ParserContext, org.springframework.beans.factory.support.BeanDefinitionBuilder, java.lang.String)
    {
        org.springframework.beans.factory.support.BeanDefinitionBuilder r0;
        org.springframework.beans.factory.support.AbstractBeanDefinition $r4, $r6;
        org.springframework.beans.factory.support.BeanDefinitionRegistry $r2;
        org.springframework.beans.factory.config.BeanDefinitionHolder $r5;
        org.springframework.beans.factory.xml.ParserContext r1;
        org.springframework.beans.factory.parsing.BeanComponentDefinition $r7;
        java.lang.String r3;

        r1 := @parameter0: org.springframework.beans.factory.xml.ParserContext;

        r0 := @parameter1: org.springframework.beans.factory.support.BeanDefinitionBuilder;

        r3 := @parameter2: java.lang.String;

        virtualinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.BeanDefinitionBuilder setRole(int)>(2);

        $r2 = virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: org.springframework.beans.factory.support.BeanDefinitionRegistry getRegistry()>();

        $r4 = virtualinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        interfaceinvoke $r2.<org.springframework.beans.factory.support.BeanDefinitionRegistry: void registerBeanDefinition(java.lang.String,org.springframework.beans.factory.config.BeanDefinition)>(r3, $r4);

        $r5 = new org.springframework.beans.factory.config.BeanDefinitionHolder;

        $r6 = virtualinvoke r0.<org.springframework.beans.factory.support.BeanDefinitionBuilder: org.springframework.beans.factory.support.AbstractBeanDefinition getBeanDefinition()>();

        specialinvoke $r5.<org.springframework.beans.factory.config.BeanDefinitionHolder: void <init>(org.springframework.beans.factory.config.BeanDefinition,java.lang.String)>($r6, r3);

        $r7 = new org.springframework.beans.factory.parsing.BeanComponentDefinition;

        specialinvoke $r7.<org.springframework.beans.factory.parsing.BeanComponentDefinition: void <init>(org.springframework.beans.factory.config.BeanDefinitionHolder)>($r5);

        virtualinvoke r1.<org.springframework.beans.factory.xml.ParserContext: void registerComponent(org.springframework.beans.factory.parsing.ComponentDefinition)>($r7);

        return;
    }

    public static void <clinit>()
    {
        <org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: java.lang.String SCHEDULED_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.scheduling.annotation.internalScheduledAnnotationProcessor";

        <org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: java.lang.String ASYNC_EXECUTION_ASPECT_CLASS_NAME> = "org.springframework.scheduling.aspectj.AnnotationAsyncExecutionAspect";

        <org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: java.lang.String ASYNC_EXECUTION_ASPECT_BEAN_NAME> = "org.springframework.scheduling.config.internalAsyncExecutionAspect";

        <org.springframework.scheduling.config.AnnotationDrivenBeanDefinitionParser: java.lang.String ASYNC_ANNOTATION_PROCESSOR_BEAN_NAME> = "org.springframework.scheduling.annotation.internalAsyncAnnotationProcessor";

        return;
    }
}
