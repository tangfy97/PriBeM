public class org.apache.xalan.extensions.MethodResolver extends java.lang.Object
{
    public static final int STATIC_ONLY;
    public static final int INSTANCE_ONLY;
    public static final int STATIC_AND_INSTANCE;
    public static final int DYNAMIC;
    private static final int SCOREBASE;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_javaObjConversions;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_booleanConversions;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_numberConversions;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_stringConversions;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_rtfConversions;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_nodesetConversions;
    static org.apache.xalan.extensions.MethodResolver$ConversionInfo[][] m_conversions;
    static java.lang.Class class$org$apache$xalan$extensions$ExpressionContext;
    static java.lang.Class class$org$apache$xalan$templates$ElemExtensionCall;
    static java.lang.Class class$org$apache$xalan$extensions$XSLProcessorContext;
    static java.lang.Class class$java$lang$String;
    static java.lang.Class class$java$lang$Boolean;
    static java.lang.Class class$java$lang$Object;
    static java.lang.Class class$java$lang$Double;
    static java.lang.Class class$org$w3c$dom$traversal$NodeIterator;
    static java.lang.Class class$org$w3c$dom$NodeList;
    static java.lang.Class class$org$w3c$dom$Node;
    static java.lang.Class class$java$lang$Class;

    public void <init>()
    {
        org.apache.xalan.extensions.MethodResolver r0;

        r0 := @this: org.apache.xalan.extensions.MethodResolver;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.reflect.Constructor getConstructor(java.lang.Class, java.lang.Object[], java.lang.Object[][], org.apache.xalan.extensions.ExpressionContext) throws java.lang.NoSuchMethodException, java.lang.SecurityException, javax.xml.transform.TransformerException
    {
        java.lang.Object[] r4;
        org.apache.xalan.extensions.ExpressionContext r7;
        java.lang.NoSuchMethodException $r14;
        java.lang.reflect.Constructor r2, r10;
        java.lang.reflect.Constructor[] $r1;
        java.lang.Object[][] r6;
        short s9;
        byte b10;
        int i0, i1, $i2, $i3, $i4, $i5, $i6, i7, i8, $i12;
        java.lang.String $r9;
        boolean $z0, z1, z2;
        java.lang.Class[] $r3, r11;
        java.lang.Class r0, $r5, r12, $r13;

        r0 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.Object[];

        r6 := @parameter2: java.lang.Object[][];

        r7 := @parameter3: org.apache.xalan.extensions.ExpressionContext;

        r10 = null;

        r11 = null;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Constructor[] getConstructors()>();

        i0 = lengthof $r1;

        i7 = 2147483647;

        i8 = 0;

        goto label09;

     label01:
        r2 = $r1[i8];

        $r3 = virtualinvoke r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();

        i1 = lengthof $r3;

        z1 = 0;

        b10 = 0;

        z2 = 0;

        $i2 = lengthof r4;

        $i3 = $i2 + 1;

        if i1 != $i3 goto label04;

        r12 = $r3[0];

        $r5 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext>;

        if $r5 != null goto label02;

        $r13 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.apache.xalan.extensions.ExpressionContext");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext> = $r13;

        goto label03;

     label02:
        $r13 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext>;

     label03:
        $z0 = virtualinvoke $r13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r12);

        if $z0 == 0 goto label08;

        s9 = 0;

        z1 = 1;

        b10 = 1;

        z2 = 1;

        goto label05;

     label04:
        s9 = 1000;

     label05:
        $i5 = lengthof r4;

        $i4 = i1 - z2;

        if $i5 != $i4 goto label08;

        $i6 = staticinvoke <org.apache.xalan.extensions.MethodResolver: int scoreMatch(java.lang.Class[],int,java.lang.Object[],int)>($r3, b10, r4, s9);

        $i12 = (int) -1;

        if $i12 != $i6 goto label06;

        goto label08;

     label06:
        if $i6 >= i7 goto label07;

        r10 = r2;

        r11 = $r3;

        i7 = $i6;

        goto label08;

     label07:
        if $i6 != i7 goto label08;

     label08:
        i8 = i8 + 1;

     label09:
        if i8 < i0 goto label01;

        if null != r10 goto label10;

        $r14 = new java.lang.NoSuchMethodException;

        $r9 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errString(java.lang.String,java.lang.String,java.lang.Class,java.lang.String,int,java.lang.Object[])>("function", "constructor", r0, "", 0, r4);

        specialinvoke $r14.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r9);

        throw $r14;

     label10:
        staticinvoke <org.apache.xalan.extensions.MethodResolver: void convertParams(java.lang.Object[],java.lang.Object[][],java.lang.Class[],org.apache.xalan.extensions.ExpressionContext)>(r4, r6, r11, r7);

        return r10;
    }

    public static java.lang.reflect.Method getMethod(java.lang.Class, java.lang.String, java.lang.Object[], java.lang.Object[][], org.apache.xalan.extensions.ExpressionContext, int) throws java.lang.NoSuchMethodException, java.lang.SecurityException, javax.xml.transform.TransformerException
    {
        java.lang.NoSuchMethodException $r16;
        java.lang.reflect.Method[] $r1;
        byte b15;
        java.lang.reflect.Method r2, r11;
        boolean $z0, $z1, $z2, z3, z4, z5, z6, z7;
        java.lang.Object[] r4;
        org.apache.xalan.extensions.ExpressionContext r7;
        java.lang.Object[][] r6;
        short s14;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, $i8, $i9, i10, i11, $i12, $i13, $i17;
        java.lang.String $r3, $r9, r10;
        java.lang.Class[] r12, $r13;
        java.lang.Class r0, $r5, r14, $r15;

        r0 := @parameter0: java.lang.Class;

        r10 := @parameter1: java.lang.String;

        r4 := @parameter2: java.lang.Object[];

        r6 := @parameter3: java.lang.Object[][];

        r7 := @parameter4: org.apache.xalan.extensions.ExpressionContext;

        i2 := @parameter5: int;

        $i0 = virtualinvoke r10.<java.lang.String: int indexOf(java.lang.String)>("-");

        if $i0 <= 0 goto label01;

        r10 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String replaceDash(java.lang.String)>(r10);

     label01:
        r11 = null;

        r12 = null;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        $i9 = lengthof $r1;

        i10 = 2147483647;

        i11 = 0;

        goto label17;

     label02:
        r2 = $r1[i11];

        z3 = 0;

        z7 = 0;

        z6 = 0;

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r10);

        if $z0 == 0 goto label16;

        $i1 = virtualinvoke r2.<java.lang.reflect.Method: int getModifiers()>();

        $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i1);

        tableswitch(i2)
        {
            case 1: goto label03;
            case 2: goto label04;
            case 3: goto label05;
            case 4: goto label06;
            default: goto label07;
        };

     label03:
        if $z1 != 0 goto label07;

        goto label16;

     label04:
        if $z1 == 0 goto label07;

        goto label16;

     label05:
        goto label07;

     label06:
        if $z1 != 0 goto label07;

        z3 = 1;

        z7 = 1;

        z6 = 1;

     label07:
        z4 = 0;

        z5 = 0;

        b15 = 0;

        $r13 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i12 = lengthof $r13;

        if null == r4 goto label08;

        $i13 = lengthof r4;

        goto label09;

     label08:
        $i13 = 0;

     label09:
        i3 = $i13;

        $i4 = $i13 - z6;

        $i5 = $i4 + 1;

        if $i12 != $i5 goto label12;

        r14 = $r13[0];

        $r5 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext>;

        if $r5 != null goto label10;

        $r15 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.apache.xalan.extensions.ExpressionContext");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext> = $r15;

        goto label11;

     label10:
        $r15 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext>;

     label11:
        $z2 = virtualinvoke $r15.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r14);

        if $z2 == 0 goto label16;

        s14 = 0;

        z4 = 1;

        z5 = 1;

        b15 = 1;

        goto label13;

     label12:
        s14 = 1000;

     label13:
        $i7 = i3 - z7;

        $i6 = $i12 - z5;

        if $i7 != $i6 goto label16;

        $i8 = staticinvoke <org.apache.xalan.extensions.MethodResolver: int scoreMatch(java.lang.Class[],int,java.lang.Object[],int)>($r13, b15, r4, s14);

        $i17 = (int) -1;

        if $i17 != $i8 goto label14;

        goto label16;

     label14:
        if $i8 >= i10 goto label15;

        r11 = r2;

        r12 = $r13;

        i10 = $i8;

        goto label16;

     label15:
        if $i8 != i10 goto label16;

     label16:
        i11 = i11 + 1;

     label17:
        if i11 < $i9 goto label02;

        if null != r11 goto label18;

        $r16 = new java.lang.NoSuchMethodException;

        $r9 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errString(java.lang.String,java.lang.String,java.lang.Class,java.lang.String,int,java.lang.Object[])>("function", "method", r0, r10, i2, r4);

        specialinvoke $r16.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r9);

        throw $r16;

     label18:
        staticinvoke <org.apache.xalan.extensions.MethodResolver: void convertParams(java.lang.Object[],java.lang.Object[][],java.lang.Class[],org.apache.xalan.extensions.ExpressionContext)>(r4, r6, r12, r7);

        return r11;
    }

    private static java.lang.String replaceDash(java.lang.String)
    {
        char $c0, $c1, $c3, $c4, $c5;
        java.lang.StringBuffer $r3;
        int $i2, i6, $i7, $i8, $i9;
        java.lang.String r1, $r2;

        r1 := @parameter0: java.lang.String;

        $r3 = new java.lang.StringBuffer;

        specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>("");

        i6 = 0;

        goto label5;

     label1:
        $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $i8 = (int) $c0;

        if $i8 != 45 goto label2;

        goto label4;

     label2:
        if i6 <= 0 goto label3;

        $i2 = i6 - 1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i2);

        $i9 = (int) $c3;

        if $i9 != 45 goto label3;

        $c4 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        $c5 = staticinvoke <java.lang.Character: char toUpperCase(char)>($c4);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c5);

        goto label4;

     label3:
        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i6);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c1);

     label4:
        i6 = i6 + 1;

     label5:
        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if i6 < $i7 goto label1;

        $r2 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r2;
    }

    public static java.lang.reflect.Method getElementMethod(java.lang.Class, java.lang.String) throws java.lang.NoSuchMethodException, java.lang.SecurityException, javax.xml.transform.TransformerException
    {
        java.lang.Object[] $r11;
        javax.xml.transform.TransformerException $r10;
        java.lang.NoSuchMethodException $r13;
        java.lang.reflect.Method[] $r1;
        int i0, $i1, i2, i3;
        java.lang.String $r3, r4, $r12, $r14;
        java.lang.reflect.Method r2, r15;
        boolean $z0, $z1, $z2;
        java.lang.Class[] $r5;
        java.lang.Class r0, $r6, $r7, $r8, $r9, $r16, $r17;

        r0 := @parameter0: java.lang.Class;

        r4 := @parameter1: java.lang.String;

        r15 = null;

        $r1 = virtualinvoke r0.<java.lang.Class: java.lang.reflect.Method[] getMethods()>();

        i0 = lengthof $r1;

        i2 = 0;

        i3 = 0;

        goto label07;

     label01:
        r2 = $r1[i3];

        $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.String getName()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(r4);

        if $z0 == 0 goto label06;

        $r5 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();

        $i1 = lengthof $r5;

        if $i1 != 2 goto label06;

        $r7 = $r5[1];

        $r6 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$templates$ElemExtensionCall>;

        if $r6 != null goto label02;

        $r16 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.apache.xalan.templates.ElemExtensionCall");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$templates$ElemExtensionCall> = $r16;

        goto label03;

     label02:
        $r16 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$templates$ElemExtensionCall>;

     label03:
        $z1 = virtualinvoke $r7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r16);

        if $z1 == 0 goto label06;

        $r9 = $r5[0];

        $r8 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$XSLProcessorContext>;

        if $r8 != null goto label04;

        $r17 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.apache.xalan.extensions.XSLProcessorContext");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$XSLProcessorContext> = $r17;

        goto label05;

     label04:
        $r17 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$XSLProcessorContext>;

     label05:
        $z2 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r17);

        if $z2 == 0 goto label06;

        i2 = i2 + 1;

        if i2 != 1 goto label08;

        r15 = r2;

     label06:
        i3 = i3 + 1;

     label07:
        if i3 < i0 goto label01;

     label08:
        if null != r15 goto label09;

        $r13 = new java.lang.NoSuchMethodException;

        $r14 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errString(java.lang.String,java.lang.String,java.lang.Class,java.lang.String,int,java.lang.Object[])>("element", "method", r0, r4, 0, null);

        specialinvoke $r13.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r14);

        throw $r13;

     label09:
        if i2 <= 1 goto label10;

        $r10 = new javax.xml.transform.TransformerException;

        $r11 = newarray (java.lang.Object)[1];

        $r11[0] = r4;

        $r12 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_MORE_MATCH_ELEMENT", $r11);

        specialinvoke $r10.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r12);

        throw $r10;

     label10:
        return r15;
    }

    public static void convertParams(java.lang.Object[], java.lang.Object[][], java.lang.Class[], org.apache.xalan.extensions.ExpressionContext) throws javax.xml.transform.TransformerException
    {
        java.lang.Object[] $r2, r3, $r6, $r11;
        org.apache.xalan.extensions.ExpressionContext r10;
        java.lang.Object[][] r1;
        int i0, $i1, $i2, i3, i4;
        boolean $z0;
        java.lang.Class[] r0;
        java.lang.Class $r4, $r8, $r9, $r12;
        java.lang.Object $r5, $r7;

        r3 := @parameter0: java.lang.Object[];

        r1 := @parameter1: java.lang.Object[][];

        r0 := @parameter2: java.lang.Class[];

        r10 := @parameter3: org.apache.xalan.extensions.ExpressionContext;

        if r0 != null goto label1;

        r1[0] = null;

        goto label7;

     label1:
        i0 = lengthof r0;

        $r2 = newarray (java.lang.Object)[i0];

        r1[0] = $r2;

        i3 = 0;

        if i0 <= 0 goto label4;

        $r8 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext>;

        if $r8 != null goto label2;

        $r12 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.apache.xalan.extensions.ExpressionContext");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext> = $r12;

        goto label3;

     label2:
        $r12 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$apache$xalan$extensions$ExpressionContext>;

     label3:
        $r9 = r0[0];

        $z0 = virtualinvoke $r12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r9);

        if $z0 == 0 goto label4;

        $r11 = r1[0];

        $r11[0] = r10;

        i3 = 1;

     label4:
        if r3 == null goto label7;

        $i1 = lengthof r3;

        $i2 = $i1 - i0;

        i4 = $i2 + i3;

        goto label6;

     label5:
        $r6 = r1[0];

        $r5 = r3[i4];

        $r4 = r0[i3];

        $r7 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Object convert(java.lang.Object,java.lang.Class)>($r5, $r4);

        $r6[i3] = $r7;

        i4 = i4 + 1;

        i3 = i3 + 1;

     label6:
        if i3 < i0 goto label5;

     label7:
        return;
    }

    public static int scoreMatch(java.lang.Class[], int, java.lang.Object[], int)
    {
        boolean $z0, $z1, $z2, $z3, $z4;
        org.apache.xpath.objects.XObject $r6, $r8;
        org.apache.xalan.extensions.MethodResolver$ConversionInfo r10;
        java.lang.Object[] r0;
        org.apache.xalan.extensions.MethodResolver$ConversionInfo[] r4;
        int i0, $i1, i2, $i3, i4, i5, $i6, i7, i8, i9, $i10, i11, $i13, $i15, $i17, $i19;
        org.apache.xalan.extensions.MethodResolver$ConversionInfo[][] $r3;
        java.lang.Class[] r1;
        java.lang.Object r2, $r7;
        java.lang.Class $r5, $r9, r11;

        r1 := @parameter0: java.lang.Class[];

        i2 := @parameter1: int;

        r0 := @parameter2: java.lang.Object[];

        i7 := @parameter3: int;

        if r0 == null goto label01;

        if r1 != null goto label02;

     label01:
        return i7;

     label02:
        i0 = lengthof r0;

        $i1 = lengthof r1;

        $i3 = i0 - $i1;

        i8 = $i3 + i2;

        i9 = i2;

        goto label20;

     label03:
        r2 = r0[i8];

        $z0 = r2 instanceof org.apache.xpath.objects.XObject;

        if $z0 == 0 goto label04;

        $r8 = (org.apache.xpath.objects.XObject) r2;

        $i10 = virtualinvoke $r8.<org.apache.xpath.objects.XObject: int getType()>();

        goto label05;

     label04:
        $i10 = 0;

     label05:
        i4 = $i10;

        $r9 = r1[i9];

        $i13 = (int) -1;

        if $i10 != $i13 goto label07;

        $z4 = virtualinvoke $r9.<java.lang.Class: boolean isPrimitive()>();

        if $z4 != 0 goto label06;

        i7 = i7 + 10;

        goto label19;

     label06:
        $i15 = (int) -1;

        return $i15;

     label07:
        $r3 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[][] m_conversions>;

        r4 = $r3[$i10];

        i5 = lengthof r4;

        i11 = 0;

        goto label10;

     label08:
        r10 = r4[i11];

        $r5 = r10.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: java.lang.Class m_class>;

        $z1 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r5);

        if $z1 == 0 goto label09;

        $i6 = r10.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: int m_score>;

        i7 = i7 + $i6;

        goto label11;

     label09:
        i11 = i11 + 1;

     label10:
        if i11 < i5 goto label08;

     label11:
        if i11 != i5 goto label19;

        if 0 != i4 goto label18;

        $z2 = r2 instanceof org.apache.xpath.objects.XObject;

        if $z2 == 0 goto label14;

        $r6 = (org.apache.xpath.objects.XObject) r2;

        $r7 = virtualinvoke $r6.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        if null == $r7 goto label12;

        r11 = virtualinvoke $r7.<java.lang.Object: java.lang.Class getClass()>();

        goto label13;

     label12:
        i7 = i7 + 10;

        goto label19;

     label13:
        goto label15;

     label14:
        r11 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label15:
        $z3 = virtualinvoke $r9.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r11);

        if $z3 == 0 goto label16;

        i7 = i7 + 0;

        goto label17;

     label16:
        $i17 = (int) -1;

        return $i17;

     label17:
        goto label19;

     label18:
        $i19 = (int) -1;

        return $i19;

     label19:
        i8 = i8 + 1;

        i9 = i9 + 1;

     label20:
        if i8 < i0 goto label03;

        return i7;
    }

    static java.lang.Object convert(java.lang.Object, java.lang.Class) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.objects.XRTreeFrag $r9, $r17, $r25, $r29;
        java.lang.Character $r86;
        org.apache.xml.dtm.DTMIterator $r10, $r18, $r26, $r38, $r45;
        org.apache.xpath.objects.XObject r67;
        java.lang.String $r5, $r7, $r24, $r44, $r50, $r56, $r62, $r65;
        org.apache.xml.dtm.ref.DTMNodeIterator $r88;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        org.w3c.dom.traversal.NodeIterator $r32;
        org.w3c.dom.Node $r20, $r28, $r40, $r47;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i10;
        java.lang.Boolean $r84, $r85, $r87, $r89, $r90;
        double $d0, $d1, $d2, $d3, $d4;
        org.w3c.dom.NodeList $r30, $r48;
        char $c8;
        org.apache.xpath.objects.XString $r91;
        org.apache.xml.dtm.DTM $r19, $r27, $r39, $r46;
        java.lang.Class r0, $r1, $r2, $r3, $r8, $r12, $r13, $r14, $r15, $r16, $r21, $r31, $r33, $r34, $r35, $r36, $r37, $r41, $r49, $r51, $r52, $r53, $r58, $r59, $r63, $r68, $r69, $r70, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83;
        java.lang.Object $r6, $r22, $r42, $r54, $r60, r66;

        r66 := @parameter0: java.lang.Object;

        r0 := @parameter1: java.lang.Class;

        $z0 = r66 instanceof org.apache.xpath.objects.XObject;

        if $z0 == 0 goto label61;

        r67 = (org.apache.xpath.objects.XObject) r66;

        $i0 = virtualinvoke r67.<org.apache.xpath.objects.XObject: int getType()>();

        tableswitch($i0)
        {
            case -1: goto label01;
            case 0: goto label60;
            case 1: goto label02;
            case 2: goto label06;
            case 3: goto label11;
            case 4: goto label40;
            case 5: goto label21;
            default: goto label60;
        };

     label01:
        return null;

     label02:
        $r63 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r63 != null goto label03;

        $r68 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r68;

        goto label04;

     label03:
        $r68 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label04:
        if r0 != $r68 goto label05;

        $r65 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r65;

     label05:
        $r84 = new java.lang.Boolean;

        $z10 = virtualinvoke r67.<org.apache.xpath.objects.XObject: boolean bool()>();

        specialinvoke $r84.<java.lang.Boolean: void <init>(boolean)>($z10);

        return $r84;

     label06:
        $r58 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r58 != null goto label07;

        $r69 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r69;

        goto label08;

     label07:
        $r69 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label08:
        if r0 != $r69 goto label09;

        $r62 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r62;

     label09:
        $r59 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r59 goto label10;

        $r85 = new java.lang.Boolean;

        $z9 = virtualinvoke r67.<org.apache.xpath.objects.XObject: boolean bool()>();

        specialinvoke $r85.<java.lang.Boolean: void <init>(boolean)>($z9);

        return $r85;

     label10:
        $d4 = virtualinvoke r67.<org.apache.xpath.objects.XObject: double num()>();

        $r60 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Object convertDoubleToNumber(double,java.lang.Class)>($d4, r0);

        return $r60;

     label11:
        $r49 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r49 != null goto label12;

        $r70 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r70;

        goto label13;

     label12:
        $r70 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label13:
        if r0 == $r70 goto label16;

        $r51 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r51 != null goto label14;

        $r71 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r71;

        goto label15;

     label14:
        $r71 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label15:
        if r0 != $r71 goto label17;

     label16:
        $r50 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r50;

     label17:
        $r52 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r52 goto label19;

        $r56 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        $i7 = virtualinvoke $r56.<java.lang.String: int length()>();

        if $i7 <= 0 goto label18;

        $r86 = new java.lang.Character;

        $c8 = virtualinvoke $r56.<java.lang.String: char charAt(int)>(0);

        specialinvoke $r86.<java.lang.Character: void <init>(char)>($c8);

        return $r86;

     label18:
        return null;

     label19:
        $r53 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r53 goto label20;

        $r87 = new java.lang.Boolean;

        $z8 = virtualinvoke r67.<org.apache.xpath.objects.XObject: boolean bool()>();

        specialinvoke $r87.<java.lang.Boolean: void <init>(boolean)>($z8);

        return $r87;

     label20:
        $d3 = virtualinvoke r67.<org.apache.xpath.objects.XObject: double num()>();

        $r54 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Object convertDoubleToNumber(double,java.lang.Class)>($d3, r0);

        return $r54;

     label21:
        $r8 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

        if $r8 != null goto label22;

        $r72 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.traversal.NodeIterator");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator> = $r72;

        goto label23;

     label22:
        $r72 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

     label23:
        if r0 == $r72 goto label26;

        $r12 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r12 != null goto label24;

        $r73 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r73;

        goto label25;

     label24:
        $r73 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label25:
        if r0 != $r73 goto label27;

     label26:
        $r9 = (org.apache.xpath.objects.XRTreeFrag) r67;

        $r10 = virtualinvoke $r9.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTMIterator asNodeIterator()>();

        $r88 = new org.apache.xml.dtm.ref.DTMNodeIterator;

        specialinvoke $r88.<org.apache.xml.dtm.ref.DTMNodeIterator: void <init>(org.apache.xml.dtm.DTMIterator)>($r10);

        return $r88;

     label27:
        $r13 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

        if $r13 != null goto label28;

        $r74 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.NodeList");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList> = $r74;

        goto label29;

     label28:
        $r74 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

     label29:
        if r0 != $r74 goto label30;

        $r29 = (org.apache.xpath.objects.XRTreeFrag) r67;

        $r30 = virtualinvoke $r29.<org.apache.xpath.objects.XRTreeFrag: org.w3c.dom.NodeList convertToNodeset()>();

        return $r30;

     label30:
        $r14 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

        if $r14 != null goto label31;

        $r75 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Node");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node> = $r75;

        goto label32;

     label31:
        $r75 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

     label32:
        if r0 != $r75 goto label33;

        $r25 = (org.apache.xpath.objects.XRTreeFrag) r67;

        $r26 = virtualinvoke $r25.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTMIterator asNodeIterator()>();

        $i3 = interfaceinvoke $r26.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $r27 = interfaceinvoke $r26.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>($i3);

        $i4 = interfaceinvoke $r27.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i3);

        $r28 = interfaceinvoke $r27.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i4);

        return $r28;

     label33:
        $r15 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r15 != null goto label34;

        $r76 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r76;

        goto label35;

     label34:
        $r76 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label35:
        if r0 != $r76 goto label36;

        $r24 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r24;

     label36:
        $r16 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r16 goto label37;

        $r89 = new java.lang.Boolean;

        $z4 = virtualinvoke r67.<org.apache.xpath.objects.XObject: boolean bool()>();

        specialinvoke $r89.<java.lang.Boolean: void <init>(boolean)>($z4);

        return $r89;

     label37:
        $z2 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z2 == 0 goto label38;

        $d1 = virtualinvoke r67.<org.apache.xpath.objects.XObject: double num()>();

        $r22 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Object convertDoubleToNumber(double,java.lang.Class)>($d1, r0);

        return $r22;

     label38:
        $r17 = (org.apache.xpath.objects.XRTreeFrag) r67;

        $r18 = virtualinvoke $r17.<org.apache.xpath.objects.XRTreeFrag: org.apache.xml.dtm.DTMIterator asNodeIterator()>();

        $i1 = interfaceinvoke $r18.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $r19 = interfaceinvoke $r18.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>($i1);

        $i2 = interfaceinvoke $r19.<org.apache.xml.dtm.DTM: int getFirstChild(int)>($i1);

        $r20 = interfaceinvoke $r19.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i2);

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Class getClass()>();

        $z3 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r21);

        if $z3 == 0 goto label39;

        return $r20;

     label39:
        return null;

     label40:
        $r31 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

        if $r31 != null goto label41;

        $r77 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.traversal.NodeIterator");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator> = $r77;

        goto label42;

     label41:
        $r77 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

     label42:
        if r0 == $r77 goto label45;

        $r33 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r33 != null goto label43;

        $r78 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r78;

        goto label44;

     label43:
        $r78 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label44:
        if r0 != $r78 goto label46;

     label45:
        $r32 = virtualinvoke r67.<org.apache.xpath.objects.XObject: org.w3c.dom.traversal.NodeIterator nodeset()>();

        return $r32;

     label46:
        $r34 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

        if $r34 != null goto label47;

        $r79 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.NodeList");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList> = $r79;

        goto label48;

     label47:
        $r79 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

     label48:
        if r0 != $r79 goto label49;

        $r48 = virtualinvoke r67.<org.apache.xpath.objects.XObject: org.w3c.dom.NodeList nodelist()>();

        return $r48;

     label49:
        $r35 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

        if $r35 != null goto label50;

        $r80 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Node");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node> = $r80;

        goto label51;

     label50:
        $r80 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

     label51:
        if r0 != $r80 goto label53;

        $r45 = virtualinvoke r67.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        $i6 = interfaceinvoke $r45.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $i10 = (int) -1;

        if $i6 == $i10 goto label52;

        $r46 = interfaceinvoke $r45.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>($i6);

        $r47 = interfaceinvoke $r46.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i6);

        return $r47;

     label52:
        return null;

     label53:
        $r36 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r36 != null goto label54;

        $r81 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r81;

        goto label55;

     label54:
        $r81 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label55:
        if r0 != $r81 goto label56;

        $r44 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.String str()>();

        return $r44;

     label56:
        $r37 = <java.lang.Boolean: java.lang.Class TYPE>;

        if r0 != $r37 goto label57;

        $r90 = new java.lang.Boolean;

        $z7 = virtualinvoke r67.<org.apache.xpath.objects.XObject: boolean bool()>();

        specialinvoke $r90.<java.lang.Boolean: void <init>(boolean)>($z7);

        return $r90;

     label57:
        $z5 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z5 == 0 goto label58;

        $d2 = virtualinvoke r67.<org.apache.xpath.objects.XObject: double num()>();

        $r42 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Object convertDoubleToNumber(double,java.lang.Class)>($d2, r0);

        return $r42;

     label58:
        $r38 = virtualinvoke r67.<org.apache.xpath.objects.XObject: org.apache.xml.dtm.DTMIterator iter()>();

        $i5 = interfaceinvoke $r38.<org.apache.xml.dtm.DTMIterator: int nextNode()>();

        $r39 = interfaceinvoke $r38.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTM getDTM(int)>($i5);

        $r40 = interfaceinvoke $r39.<org.apache.xml.dtm.DTM: org.w3c.dom.Node getNode(int)>($i5);

        $r41 = virtualinvoke $r40.<java.lang.Object: java.lang.Class getClass()>();

        $z6 = virtualinvoke r0.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r41);

        if $z6 == 0 goto label59;

        return $r40;

     label59:
        return null;

     label60:
        r66 = virtualinvoke r67.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

     label61:
        if null == r66 goto label69;

        $r1 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r1 != null goto label62;

        $r82 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r82;

        goto label63;

     label62:
        $r82 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label63:
        if r0 != $r82 goto label64;

        $r7 = virtualinvoke r66.<java.lang.Object: java.lang.String toString()>();

        return $r7;

     label64:
        $z1 = virtualinvoke r0.<java.lang.Class: boolean isPrimitive()>();

        if $z1 == 0 goto label65;

        $r91 = new org.apache.xpath.objects.XString;

        $r5 = virtualinvoke r66.<java.lang.Object: java.lang.String toString()>();

        specialinvoke $r91.<org.apache.xpath.objects.XString: void <init>(java.lang.String)>($r5);

        $d0 = virtualinvoke $r91.<org.apache.xpath.objects.XString: double num()>();

        $r6 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Object convertDoubleToNumber(double,java.lang.Class)>($d0, r0);

        return $r6;

     label65:
        $r2 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Class>;

        if $r2 != null goto label66;

        $r83 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Class");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Class> = $r83;

        goto label67;

     label66:
        $r83 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Class>;

     label67:
        if r0 != $r83 goto label68;

        $r3 = virtualinvoke r66.<java.lang.Object: java.lang.Class getClass()>();

        return $r3;

     label68:
        return r66;

     label69:
        return r66;
    }

    static java.lang.Object convertDoubleToNumber(double, java.lang.Class)
    {
        java.lang.Float $r16;
        java.lang.Double $r2, $r10;
        long $l7;
        java.lang.Integer $r14;
        short $s5;
        byte $b1;
        java.lang.Character $r12;
        java.lang.Long $r15;
        java.lang.Short $r13;
        int $i0, $i2, $i4, $i6;
        java.lang.Byte $r11;
        double d0;
        char $c3;
        java.lang.Class r0, $r1, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r17;

        d0 := @parameter0: double;

        r0 := @parameter1: java.lang.Class;

        $r1 = <java.lang.Double: java.lang.Class TYPE>;

        if r0 == $r1 goto label03;

        $r3 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Double>;

        if $r3 != null goto label01;

        $r17 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Double> = $r17;

        goto label02;

     label01:
        $r17 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Double>;

     label02:
        if r0 != $r17 goto label04;

     label03:
        $r2 = new java.lang.Double;

        specialinvoke $r2.<java.lang.Double: void <init>(double)>(d0);

        return $r2;

     label04:
        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        if r0 != $r4 goto label05;

        $r16 = new java.lang.Float;

        specialinvoke $r16.<java.lang.Float: void <init>(double)>(d0);

        return $r16;

     label05:
        $r5 = <java.lang.Long: java.lang.Class TYPE>;

        if r0 != $r5 goto label06;

        $r15 = new java.lang.Long;

        $l7 = (long) d0;

        specialinvoke $r15.<java.lang.Long: void <init>(long)>($l7);

        return $r15;

     label06:
        $r6 = <java.lang.Integer: java.lang.Class TYPE>;

        if r0 != $r6 goto label07;

        $r14 = new java.lang.Integer;

        $i6 = (int) d0;

        specialinvoke $r14.<java.lang.Integer: void <init>(int)>($i6);

        return $r14;

     label07:
        $r7 = <java.lang.Short: java.lang.Class TYPE>;

        if r0 != $r7 goto label08;

        $r13 = new java.lang.Short;

        $i4 = (int) d0;

        $s5 = (short) $i4;

        specialinvoke $r13.<java.lang.Short: void <init>(short)>($s5);

        return $r13;

     label08:
        $r8 = <java.lang.Character: java.lang.Class TYPE>;

        if r0 != $r8 goto label09;

        $r12 = new java.lang.Character;

        $i2 = (int) d0;

        $c3 = (char) $i2;

        specialinvoke $r12.<java.lang.Character: void <init>(char)>($c3);

        return $r12;

     label09:
        $r9 = <java.lang.Byte: java.lang.Class TYPE>;

        if r0 != $r9 goto label10;

        $r11 = new java.lang.Byte;

        $i0 = (int) d0;

        $b1 = (byte) $i0;

        specialinvoke $r11.<java.lang.Byte: void <init>(byte)>($b1);

        return $r11;

     label10:
        $r10 = new java.lang.Double;

        specialinvoke $r10.<java.lang.Double: void <init>(double)>(d0);

        return $r10;
    }

    private static java.lang.String errString(java.lang.String, java.lang.String, java.lang.Class, java.lang.String, int, java.lang.Object[])
    {
        java.lang.Object[] r19;
        java.lang.StringBuffer $r0, $r1, $r3, $r4, $r6, $r7, $r9, $r10, $r11, $r14, $r15, $r17, $r18, $r21, $r22, $r23, $r24, $r25, $r26, $r28, $r29, $r31, $r32, $r34, $r35, $r36, $r37, $r39, $r40, $r41, $r43, $r44, $r46, $r47, $r48, $r49, $r51, $r52, $r54, $r55, $r56, $r58, $r59, $r60, $r61, $r63, $r64, $r66, $r67, $r69, $r70, $r71, $r72, $r73, $r75, $r76, $r78, $r79, $r81, $r82;
        java.lang.String r2, r5, $r8, $r13, r16, $r20, $r27, $r30, $r33, $r38, $r42, $r45, $r50, $r53, $r57, $r62, $r65, $r68, $r74, $r77, $r80, $r83;
        boolean $z0;
        int i0;
        java.lang.Class r12;

        r2 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.String;

        r12 := @parameter2: java.lang.Class;

        r16 := @parameter3: java.lang.String;

        i0 := @parameter4: int;

        r19 := @parameter5: java.lang.Object[];

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("For extension ");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", could not find ");

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        tableswitch(i0)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r54 = new java.lang.StringBuffer;

        specialinvoke $r54.<java.lang.StringBuffer: void <init>()>();

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r56 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static ");

        $r57 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r58 = virtualinvoke $r56.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r57);

        $r59 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r60 = virtualinvoke $r59.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("([ExpressionContext,] ");

        $r62 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errArgs(java.lang.Object[],int)>(r19, 0);

        $r63 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").");

        $r65 = virtualinvoke $r64.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r65;

     label2:
        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r44 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r45 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("([ExpressionContext,] ");

        $r50 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errArgs(java.lang.Object[],int)>(r19, 0);

        $r51 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").");

        $r53 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r53;

     label3:
        $r31 = new java.lang.StringBuffer;

        specialinvoke $r31.<java.lang.StringBuffer: void <init>()>();

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r33 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r34 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r33);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("([ExpressionContext,] ");

        $r38 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errArgs(java.lang.Object[],int)>(r19, 0);

        $r39 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").\n");

        $r41 = virtualinvoke $r40.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Checked both static and instance methods.");

        $r42 = virtualinvoke $r41.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r42;

     label4:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("static ");

        $r13 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r14 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r17 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("([ExpressionContext, ]");

        $r20 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errArgs(java.lang.Object[],int)>(r19, 0);

        $r21 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r20);

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(") nor\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r12);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("([ExpressionContext,] ");

        $r27 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errArgs(java.lang.Object[],int)>(r19, 1);

        $r28 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r27);

        $r29 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").");

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r30;

     label5:
        $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("function");

        if $z0 == 0 goto label6;

        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r76 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r77 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r78 = virtualinvoke $r76.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r77);

        $r79 = virtualinvoke $r78.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("([ExpressionContext,] ");

        $r80 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.String errArgs(java.lang.Object[],int)>(r19, 0);

        $r81 = virtualinvoke $r79.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r80);

        $r82 = virtualinvoke $r81.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(").");

        $r83 = virtualinvoke $r82.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r83;

     label6:
        $r66 = new java.lang.StringBuffer;

        specialinvoke $r66.<java.lang.StringBuffer: void <init>()>();

        $r67 = virtualinvoke $r66.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        $r68 = virtualinvoke r12.<java.lang.Class: java.lang.String getName()>();

        $r69 = virtualinvoke $r67.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r68);

        $r70 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(".");

        $r71 = virtualinvoke $r70.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r16);

        $r72 = virtualinvoke $r71.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("(org.apache.xalan.extensions.XSLProcessorContext, ");

        $r73 = virtualinvoke $r72.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("org.apache.xalan.templates.ElemExtensionCall).");

        $r74 = virtualinvoke $r73.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r74;
    }

    private static java.lang.String errArgs(java.lang.Object[], int)
    {
        java.lang.Object[] r1;
        java.lang.StringBuffer $r0;
        int i0, i1, $i2;
        org.apache.xpath.objects.XObject $r7;
        java.lang.Object $r2, $r3, $r6;
        java.lang.Class $r4;
        java.lang.String $r5, $r8, $r9;
        boolean $z0;

        r1 := @parameter0: java.lang.Object[];

        i0 := @parameter1: int;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = i0;

        goto label5;

     label1:
        if i1 == i0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", ");

     label2:
        $r2 = r1[i1];

        $z0 = $r2 instanceof org.apache.xpath.objects.XObject;

        if $z0 == 0 goto label3;

        $r6 = r1[i1];

        $r7 = (org.apache.xpath.objects.XObject) $r6;

        $r8 = virtualinvoke $r7.<org.apache.xpath.objects.XObject: java.lang.String getTypeString()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

        goto label4;

     label3:
        $r3 = r1[i1];

        $r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

     label4:
        i1 = i1 + 1;

     label5:
        $i2 = lengthof r1;

        if i1 < $i2 goto label1;

        $r9 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r9;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        org.apache.xalan.extensions.MethodResolver$ConversionInfo[] $r0, $r17, $r26, $r49, $r70, $r97, $r125, $r126, $r127, $r128, $r129, $r130;
        org.apache.xalan.extensions.MethodResolver$ConversionInfo[][] $r124;
        java.lang.Class $r2, $r4, $r6, $r8, $r10, $r12, $r14, $r16, $r19, $r21, $r23, $r25, $r28, $r30, $r32, $r34, $r36, $r38, $r40, $r42, $r44, $r46, $r48, $r51, $r53, $r55, $r57, $r59, $r61, $r63, $r65, $r67, $r69, $r72, $r74, $r76, $r78, $r80, $r82, $r84, $r86, $r88, $r90, $r92, $r94, $r96, $r99, $r101, $r103, $r105, $r107, $r109, $r111, $r113, $r115, $r117, $r119, $r121, $r123, $r131, $r132, $r133, $r134, $r135, $r136, $r137, $r138, $r139, $r140, $r141, $r142, $r143, $r144, $r145, $r146, $r147, $r148, $r149;
        org.apache.xalan.extensions.MethodResolver$ConversionInfo $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r18, $r20, $r22, $r24, $r27, $r29, $r31, $r33, $r35, $r37, $r39, $r41, $r43, $r45, $r47, $r50, $r52, $r54, $r56, $r58, $r60, $r62, $r64, $r66, $r68, $r71, $r73, $r75, $r77, $r79, $r81, $r83, $r85, $r87, $r89, $r91, $r93, $r95, $r98, $r100, $r102, $r104, $r106, $r108, $r110, $r112, $r114, $r116, $r118, $r120, $r122;

        <org.apache.xalan.extensions.MethodResolver: int SCOREBASE> = 1;

        <org.apache.xalan.extensions.MethodResolver: int DYNAMIC> = 4;

        <org.apache.xalan.extensions.MethodResolver: int STATIC_AND_INSTANCE> = 3;

        <org.apache.xalan.extensions.MethodResolver: int INSTANCE_ONLY> = 2;

        <org.apache.xalan.extensions.MethodResolver: int STATIC_ONLY> = 1;

        $r0 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo)[8];

        $r1 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r2 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke $r1.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r2, 11);

        $r0[0] = $r1;

        $r3 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r4 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r3.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r4, 12);

        $r0[1] = $r3;

        $r5 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r6 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r5.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r6, 13);

        $r0[2] = $r5;

        $r7 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r8 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r7.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r8, 14);

        $r0[3] = $r7;

        $r9 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r10 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke $r9.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r10, 15);

        $r0[4] = $r9;

        $r11 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r12 = <java.lang.Character: java.lang.Class TYPE>;

        specialinvoke $r11.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r12, 16);

        $r0[5] = $r11;

        $r13 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r14 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r13.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r14, 17);

        $r0[6] = $r13;

        $r15 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r16 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r16 != null goto label01;

        $r131 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r131;

        goto label02;

     label01:
        $r131 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label02:
        specialinvoke $r15.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r131, 18);

        $r0[7] = $r15;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_javaObjConversions> = $r0;

        $r17 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo)[4];

        $r18 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r19 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r18.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r19, 0);

        $r17[0] = $r18;

        $r20 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r21 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Boolean>;

        if $r21 != null goto label03;

        $r132 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Boolean");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Boolean> = $r132;

        goto label04;

     label03:
        $r132 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Boolean>;

     label04:
        specialinvoke $r20.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r132, 1);

        $r17[1] = $r20;

        $r22 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r23 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r23 != null goto label05;

        $r133 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r133;

        goto label06;

     label05:
        $r133 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label06:
        specialinvoke $r22.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r133, 2);

        $r17[2] = $r22;

        $r24 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r25 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r25 != null goto label07;

        $r134 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r134;

        goto label08;

     label07:
        $r134 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label08:
        specialinvoke $r24.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r134, 3);

        $r17[3] = $r24;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_booleanConversions> = $r17;

        $r26 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo)[11];

        $r27 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r28 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke $r27.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r28, 0);

        $r26[0] = $r27;

        $r29 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r30 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Double>;

        if $r30 != null goto label09;

        $r135 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Double");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Double> = $r135;

        goto label10;

     label09:
        $r135 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Double>;

     label10:
        specialinvoke $r29.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r135, 1);

        $r26[1] = $r29;

        $r31 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r32 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r31.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r32, 3);

        $r26[2] = $r31;

        $r33 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r34 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r33.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r34, 4);

        $r26[3] = $r33;

        $r35 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r36 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r35.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r36, 5);

        $r26[4] = $r35;

        $r37 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r38 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke $r37.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r38, 6);

        $r26[5] = $r37;

        $r39 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r40 = <java.lang.Character: java.lang.Class TYPE>;

        specialinvoke $r39.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r40, 7);

        $r26[6] = $r39;

        $r41 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r42 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r41.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r42, 8);

        $r26[7] = $r41;

        $r43 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r44 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r43.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r44, 9);

        $r26[8] = $r43;

        $r45 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r46 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r46 != null goto label11;

        $r136 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r136;

        goto label12;

     label11:
        $r136 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label12:
        specialinvoke $r45.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r136, 10);

        $r26[9] = $r45;

        $r47 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r48 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r48 != null goto label13;

        $r137 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r137;

        goto label14;

     label13:
        $r137 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label14:
        specialinvoke $r47.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r137, 11);

        $r26[10] = $r47;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_numberConversions> = $r26;

        $r49 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo)[10];

        $r50 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r51 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r51 != null goto label15;

        $r138 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r138;

        goto label16;

     label15:
        $r138 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label16:
        specialinvoke $r50.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r138, 0);

        $r49[0] = $r50;

        $r52 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r53 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r53 != null goto label17;

        $r139 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r139;

        goto label18;

     label17:
        $r139 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label18:
        specialinvoke $r52.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r139, 1);

        $r49[1] = $r52;

        $r54 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r55 = <java.lang.Character: java.lang.Class TYPE>;

        specialinvoke $r54.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r55, 2);

        $r49[2] = $r54;

        $r56 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r57 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke $r56.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r57, 3);

        $r49[3] = $r56;

        $r58 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r59 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r58.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r59, 3);

        $r49[4] = $r58;

        $r60 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r61 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r60.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r61, 3);

        $r49[5] = $r60;

        $r62 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r63 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r62.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r63, 3);

        $r49[6] = $r62;

        $r64 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r65 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke $r64.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r65, 3);

        $r49[7] = $r64;

        $r66 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r67 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r66.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r67, 3);

        $r49[8] = $r66;

        $r68 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r69 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r68.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r69, 4);

        $r49[9] = $r68;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_stringConversions> = $r49;

        $r70 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo)[13];

        $r71 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r72 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

        if $r72 != null goto label19;

        $r140 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.traversal.NodeIterator");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator> = $r140;

        goto label20;

     label19:
        $r140 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

     label20:
        specialinvoke $r71.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r140, 0);

        $r70[0] = $r71;

        $r73 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r74 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

        if $r74 != null goto label21;

        $r141 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.NodeList");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList> = $r141;

        goto label22;

     label21:
        $r141 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

     label22:
        specialinvoke $r73.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r141, 1);

        $r70[1] = $r73;

        $r75 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r76 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

        if $r76 != null goto label23;

        $r142 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Node");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node> = $r142;

        goto label24;

     label23:
        $r142 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

     label24:
        specialinvoke $r75.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r142, 2);

        $r70[2] = $r75;

        $r77 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r78 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r78 != null goto label25;

        $r143 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r143;

        goto label26;

     label25:
        $r143 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label26:
        specialinvoke $r77.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r143, 3);

        $r70[3] = $r77;

        $r79 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r80 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r80 != null goto label27;

        $r144 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r144;

        goto label28;

     label27:
        $r144 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label28:
        specialinvoke $r79.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r144, 5);

        $r70[4] = $r79;

        $r81 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r82 = <java.lang.Character: java.lang.Class TYPE>;

        specialinvoke $r81.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r82, 6);

        $r70[5] = $r81;

        $r83 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r84 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke $r83.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r84, 7);

        $r70[6] = $r83;

        $r85 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r86 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r85.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r86, 7);

        $r70[7] = $r85;

        $r87 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r88 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r87.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r88, 7);

        $r70[8] = $r87;

        $r89 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r90 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r89.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r90, 7);

        $r70[9] = $r89;

        $r91 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r92 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke $r91.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r92, 7);

        $r70[10] = $r91;

        $r93 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r94 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r93.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r94, 7);

        $r70[11] = $r93;

        $r95 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r96 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r95.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r96, 8);

        $r70[12] = $r95;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_rtfConversions> = $r70;

        $r97 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo)[13];

        $r98 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r99 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

        if $r99 != null goto label29;

        $r145 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.traversal.NodeIterator");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator> = $r145;

        goto label30;

     label29:
        $r145 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$traversal$NodeIterator>;

     label30:
        specialinvoke $r98.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r145, 0);

        $r97[0] = $r98;

        $r100 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r101 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

        if $r101 != null goto label31;

        $r146 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.NodeList");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList> = $r146;

        goto label32;

     label31:
        $r146 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$NodeList>;

     label32:
        specialinvoke $r100.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r146, 1);

        $r97[1] = $r100;

        $r102 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r103 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

        if $r103 != null goto label33;

        $r147 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("org.w3c.dom.Node");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node> = $r147;

        goto label34;

     label33:
        $r147 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$org$w3c$dom$Node>;

     label34:
        specialinvoke $r102.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r147, 2);

        $r97[2] = $r102;

        $r104 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r105 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

        if $r105 != null goto label35;

        $r148 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.String");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String> = $r148;

        goto label36;

     label35:
        $r148 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$String>;

     label36:
        specialinvoke $r104.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r148, 3);

        $r97[3] = $r104;

        $r106 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r107 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

        if $r107 != null goto label37;

        $r149 = staticinvoke <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$(java.lang.String)>("java.lang.Object");

        <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object> = $r149;

        goto label38;

     label37:
        $r149 = <org.apache.xalan.extensions.MethodResolver: java.lang.Class class$java$lang$Object>;

     label38:
        specialinvoke $r106.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r149, 5);

        $r97[4] = $r106;

        $r108 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r109 = <java.lang.Character: java.lang.Class TYPE>;

        specialinvoke $r108.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r109, 6);

        $r97[5] = $r108;

        $r110 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r111 = <java.lang.Double: java.lang.Class TYPE>;

        specialinvoke $r110.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r111, 7);

        $r97[6] = $r110;

        $r112 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r113 = <java.lang.Float: java.lang.Class TYPE>;

        specialinvoke $r112.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r113, 7);

        $r97[7] = $r112;

        $r114 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r115 = <java.lang.Long: java.lang.Class TYPE>;

        specialinvoke $r114.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r115, 7);

        $r97[8] = $r114;

        $r116 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r117 = <java.lang.Integer: java.lang.Class TYPE>;

        specialinvoke $r116.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r117, 7);

        $r97[9] = $r116;

        $r118 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r119 = <java.lang.Short: java.lang.Class TYPE>;

        specialinvoke $r118.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r119, 7);

        $r97[10] = $r118;

        $r120 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r121 = <java.lang.Byte: java.lang.Class TYPE>;

        specialinvoke $r120.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r121, 7);

        $r97[11] = $r120;

        $r122 = new org.apache.xalan.extensions.MethodResolver$ConversionInfo;

        $r123 = <java.lang.Boolean: java.lang.Class TYPE>;

        specialinvoke $r122.<org.apache.xalan.extensions.MethodResolver$ConversionInfo: void <init>(java.lang.Class,int)>($r123, 8);

        $r97[12] = $r122;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_nodesetConversions> = $r97;

        $r124 = newarray (org.apache.xalan.extensions.MethodResolver$ConversionInfo[])[6];

        $r125 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_javaObjConversions>;

        $r124[0] = $r125;

        $r126 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_booleanConversions>;

        $r124[1] = $r126;

        $r127 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_numberConversions>;

        $r124[2] = $r127;

        $r128 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_stringConversions>;

        $r124[3] = $r128;

        $r129 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_nodesetConversions>;

        $r124[4] = $r129;

        $r130 = <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[] m_rtfConversions>;

        $r124[5] = $r130;

        <org.apache.xalan.extensions.MethodResolver: org.apache.xalan.extensions.MethodResolver$ConversionInfo[][] m_conversions> = $r124;

        return;
    }
}
