public class ucar.nc2.iosp.grid.GridTimeCoord extends java.lang.Object implements java.lang.Comparable
{
    private static org.slf4j.Logger log;
    private int seq;
    private java.lang.String timeUdunit;
    private int timeUnit;
    private java.util.Date baseDate;
    private java.util.List times;
    private java.util.List timeIntvs;
    private int constantInterval;
    private int[] coordData;

    void <init>(java.util.List, java.lang.String)
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval $r50;
        java.lang.StringBuilder $r24, $r25, $r27, $r28, $r29, $r30, $r32, $r49;
        ucar.grib.GribGridRecord r41, r42;
        ucar.grib.GribPds $r19;
        java.util.ArrayList $r48, $r51;
        java.lang.String r31, $r33, $r39;
        ucar.grid.GridRecord r16, r40, r46;
        java.util.Date $r8, $r17, $r18, $r26, $r35, $r36, $r37, $r38, $r43, r47;
        int[] $r20;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, z7, $z8, $z9, $z10;
        java.util.List r1, $r6, $r9, $r10, $r14, $r21, $r45;
        int $i0, $i1, $i2, $i3, $i4, i5, $i7, $i9;
        org.slf4j.Logger $r23;
        java.util.Iterator $r2, $r5, $r13;
        ucar.nc2.iosp.grid.GridTimeCoord r0;
        java.lang.Object $r3, $r7, $r11, $r15, $r34;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r1 := @parameter0: java.util.List;

        r31 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: int seq> = 0;

        $i7 = (int) -1;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: int constantInterval> = $i7;

        $r2 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label04;

        $r34 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r40 = (ucar.grid.GridRecord) $r34;

        $r35 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate>;

        if $r35 != null goto label02;

        $r38 = interfaceinvoke r40.<ucar.grid.GridRecord: java.util.Date getReferenceTime()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate> = $r38;

        $r39 = interfaceinvoke r40.<ucar.grid.GridRecord: java.lang.String getTimeUdunitName()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit> = $r39;

        $i4 = interfaceinvoke r40.<ucar.grid.GridRecord: int getTimeUnit()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: int timeUnit> = $i4;

     label02:
        $r36 = interfaceinvoke r40.<ucar.grid.GridRecord: java.util.Date getReferenceTime()>();

        $r37 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate>;

        $z6 = virtualinvoke $r36.<java.util.Date: boolean before(java.util.Date)>($r37);

        if $z6 == 0 goto label03;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate> = $r36;

     label03:
        goto label01;

     label04:
        $r3 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        $z1 = $r3 instanceof ucar.grib.GribGridRecord;

        if $z1 == 0 goto label14;

        $r11 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r41 = (ucar.grib.GribGridRecord) $r11;

        $z3 = virtualinvoke r41.<ucar.grib.GribGridRecord: boolean isInterval()>();

        if $z3 == 0 goto label14;

        $r48 = new java.util.ArrayList;

        specialinvoke $r48.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs> = $r48;

        z7 = 1;

        $i9 = (int) -1;

        i5 = $i9;

        $r13 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z4 = interfaceinvoke $r13.<java.util.Iterator: boolean hasNext()>();

        if $z4 == 0 goto label12;

        $r15 = interfaceinvoke $r13.<java.util.Iterator: java.lang.Object next()>();

        r16 = (ucar.grid.GridRecord) $r15;

        r42 = (ucar.grib.GribGridRecord) r16;

        $r17 = interfaceinvoke r16.<ucar.grid.GridRecord: java.util.Date getReferenceTime()>();

        $r18 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate>;

        $z5 = virtualinvoke $r18.<java.util.Date: boolean equals(java.lang.Object)>($r17);

        if $z5 != 0 goto label06;

        $r23 = <ucar.nc2.iosp.grid.GridTimeCoord: org.slf4j.Logger log>;

        $r49 = new java.lang.StringBuilder;

        specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r16);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" does not have same base date= ");

        $r26 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate>;

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" != ");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for ");

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r23.<org.slf4j.Logger: void warn(java.lang.String)>($r33);

     label06:
        $r19 = virtualinvoke r42.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i0 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: int timeUnit>;

        $r20 = virtualinvoke $r19.<ucar.grib.GribPds: int[] getForecastTimeInterval(int)>($i0);

        $i1 = $r20[0];

        $i2 = $r20[1];

        $i3 = $i2 - $i1;

        if $i3 <= 0 goto label10;

        if i5 >= 0 goto label07;

        i5 = $i3;

        goto label10;

     label07:
        if z7 == 0 goto label08;

        if i5 != $i3 goto label08;

        $z8 = 1;

        goto label09;

     label08:
        $z8 = 0;

     label09:
        z7 = $z8;

     label10:
        $r43 = interfaceinvoke r16.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        $r50 = new ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        specialinvoke $r50.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: void <init>(ucar.nc2.iosp.grid.GridTimeCoord,java.util.Date,int,int,ucar.nc2.iosp.grid.GridTimeCoord$1)>(r0, $r43, $i1, $i3, null);

        $r45 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $z9 = interfaceinvoke $r45.<java.util.List: boolean contains(java.lang.Object)>($r50);

        if $z9 != 0 goto label11;

        $r21 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        interfaceinvoke $r21.<java.util.List: boolean add(java.lang.Object)>($r50);

     label11:
        goto label05;

     label12:
        if z7 == 0 goto label13;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: int constantInterval> = i5;

     label13:
        $r14 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r14);

        return;

     label14:
        $r51 = new java.util.ArrayList;

        specialinvoke $r51.<java.util.ArrayList: void <init>()>();

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times> = $r51;

        $r5 = interfaceinvoke r1.<java.util.List: java.util.Iterator iterator()>();

     label15:
        $z10 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z10 == 0 goto label18;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r46 = (ucar.grid.GridRecord) $r7;

        $r8 = interfaceinvoke r46.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        r47 = $r8;

        if $r8 != null goto label16;

        r47 = interfaceinvoke r46.<ucar.grid.GridRecord: java.util.Date getReferenceTime()>();

     label16:
        $r9 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        $z2 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>(r47);

        if $z2 != 0 goto label17;

        $r10 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>(r47);

     label17:
        goto label15;

     label18:
        $r6 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        staticinvoke <java.util.Collections: void sort(java.util.List)>($r6);

        return;
    }

    boolean matchTimes(java.util.List)
    {
        java.util.Date $r8, $r13, $r14, $r18, r28;
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval $r19;
        int[] $r17;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12;
        java.util.List r0, $r6, $r11;
        ucar.grib.GribGridRecord r15, r25;
        ucar.grib.GribPds $r16;
        java.util.ArrayList $r4, $r9;
        int $i0, $i1, $i2, i3, i4, i5;
        java.lang.String $r22, $r23;
        ucar.grid.GridRecord r24, r26, r27;
        java.util.Iterator $r1, $r5, $r10;
        ucar.nc2.iosp.grid.GridTimeCoord r3;
        java.lang.Object $r2, $r7, $r12, $r20, $r21;

        r3 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r0 := @parameter0: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label03;

        $r21 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r24 = (ucar.grid.GridRecord) $r21;

        $r22 = r3.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        $r23 = interfaceinvoke r24.<ucar.grid.GridRecord: java.lang.String getTimeUdunitName()>();

        $z12 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>($r23);

        if $z12 != 0 goto label02;

        return 0;

     label02:
        goto label01;

     label03:
        $r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        $z1 = $r2 instanceof ucar.grib.GribGridRecord;

        if $z1 == 0 goto label04;

        $r20 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(0);

        r25 = (ucar.grib.GribGridRecord) $r20;

        $z10 = virtualinvoke r25.<ucar.grib.GribGridRecord: boolean isInterval()>();

        $z11 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridTimeCoord: boolean isInterval()>();

        if $z10 == $z11 goto label04;

        return 0;

     label04:
        $z2 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridTimeCoord: boolean isInterval()>();

        if $z2 == 0 goto label09;

        $r9 = new java.util.ArrayList;

        $i1 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r9.<java.util.ArrayList: void <init>(int)>($i1);

        $r10 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label05:
        $z6 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z6 == 0 goto label08;

        $r12 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r26 = (ucar.grid.GridRecord) $r12;

        $r13 = interfaceinvoke r26.<ucar.grid.GridRecord: java.util.Date getReferenceTime()>();

        $r14 = r3.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate>;

        $z8 = virtualinvoke $r14.<java.util.Date: boolean equals(java.lang.Object)>($r13);

        if $z8 != 0 goto label06;

        return 0;

     label06:
        r15 = (ucar.grib.GribGridRecord) r26;

        $r16 = virtualinvoke r15.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i2 = r3.<ucar.nc2.iosp.grid.GridTimeCoord: int timeUnit>;

        $r17 = virtualinvoke $r16.<ucar.grib.GribPds: int[] getForecastTimeInterval(int)>($i2);

        i3 = $r17[0];

        i4 = $r17[1];

        i5 = i4 - i3;

        $r18 = interfaceinvoke r26.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        $r19 = new ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval;

        specialinvoke $r19.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: void <init>(ucar.nc2.iosp.grid.GridTimeCoord,java.util.Date,int,int,ucar.nc2.iosp.grid.GridTimeCoord$1)>(r3, $r18, i3, i5, null);

        $z9 = interfaceinvoke $r9.<java.util.List: boolean contains(java.lang.Object)>($r19);

        if $z9 != 0 goto label07;

        interfaceinvoke $r9.<java.util.List: boolean add(java.lang.Object)>($r19);

     label07:
        goto label05;

     label08:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r9);

        $r11 = r3.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $z7 = virtualinvoke $r9.<java.lang.Object: boolean equals(java.lang.Object)>($r11);

        return $z7;

     label09:
        $r4 = new java.util.ArrayList;

        $i0 = interfaceinvoke r0.<java.util.List: int size()>();

        specialinvoke $r4.<java.util.ArrayList: void <init>(int)>($i0);

        $r5 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

     label10:
        $z3 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z3 == 0 goto label13;

        $r7 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r27 = (ucar.grid.GridRecord) $r7;

        $r8 = interfaceinvoke r27.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        r28 = $r8;

        if $r8 != null goto label11;

        r28 = interfaceinvoke r27.<ucar.grid.GridRecord: java.util.Date getReferenceTime()>();

     label11:
        $z5 = interfaceinvoke $r4.<java.util.List: boolean contains(java.lang.Object)>(r28);

        if $z5 != 0 goto label12;

        interfaceinvoke $r4.<java.util.List: boolean add(java.lang.Object)>(r28);

     label12:
        goto label10;

     label13:
        staticinvoke <java.util.Collections: void sort(java.util.List)>($r4);

        $r6 = r3.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        $z4 = virtualinvoke $r4.<java.lang.Object: boolean equals(java.lang.Object)>($r6);

        return $z4;
    }

    void setSequence(int)
    {
        int i0;
        ucar.nc2.iosp.grid.GridTimeCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        i0 := @parameter0: int;

        r0.<ucar.nc2.iosp.grid.GridTimeCoord: int seq> = i0;

        return;
    }

    java.lang.String getName()
    {
        int $i0, $i1;
        java.lang.StringBuilder $r1, $r2, $r3;
        ucar.nc2.iosp.grid.GridTimeCoord r0;
        java.lang.String $r4;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        $i0 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: int seq>;

        if $i0 != 0 goto label1;

        $r4 = "time";

        goto label2;

     label1:
        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("time");

        $i1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: int seq>;

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        return $r4;
    }

    void addDimensionsToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.NetcdfFile r0;
        ucar.nc2.iosp.grid.GridTimeCoord r3;
        java.lang.String $r4;
        ucar.nc2.Group r1;

        r3 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        r1 := @parameter1: ucar.nc2.Group;

        $r2 = new ucar.nc2.Dimension;

        $r4 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $i0 = virtualinvoke r3.<ucar.nc2.iosp.grid.GridTimeCoord: int getNTimes()>();

        specialinvoke $r2.<ucar.nc2.Dimension: void <init>(java.lang.String,int,boolean)>($r4, $i0, 1);

        virtualinvoke r0.<ucar.nc2.NetcdfFile: ucar.nc2.Dimension addDimension(ucar.nc2.Group,ucar.nc2.Dimension)>(r1, $r2);

        return;
    }

    void addToNetcdfFile(ucar.nc2.NetcdfFile, ucar.nc2.Group)
    {
        java.lang.Integer $r25;
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r105;
        ucar.nc2.Attribute $r27, $r33, $r40, $r61, $r67, $r75, $r76;
        java.lang.StringBuilder $r8, $r10, $r11, $r12, $r28, $r29, $r31, $r34, $r36, $r37, $r38, $r41, $r43, $r44, $r48, $r50, $r51, $r54, $r56, $r57, $r59, $r62, $r63, $r65, $r68, $r70, $r71, $r72, $r77, $r79, $r80, $r81, $r95, $r97, $r98, $r99;
        java.lang.Object[] $r24, $r74;
        ucar.ma2.Array r102, r103;
        java.util.Date $r6, $r93;
        int[] $r15, $r17, $r18, $r20, $r85, $r87, $r88, $r91, r104;
        ucar.ma2.DataType $r4, $r19, $r21, $r53, $r89;
        ucar.nc2.units.DateFormatter $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i14, $i15, $i16, i17, i18;
        ucar.nc2.Variable $r0, $r47;
        org.slf4j.Logger $r96;
        java.lang.Object $r84, $r92;
        ucar.nc2.Group r101;
        java.lang.Exception $r94;
        java.lang.String $r3, $r7, $r9, $r13, $r22, $r26, $r30, $r32, $r35, $r39, $r42, $r45, $r49, $r52, $r55, $r58, $r60, $r64, $r66, $r69, $r73, $r78, $r82, $r100;
        ucar.nc2.units.DateUnit $r14;
        ucar.nc2.Dimension $r46;
        java.util.Formatter $r23;
        boolean $z0, $z1;
        java.util.List $r16, $r83, $r86, $r90;
        ucar.nc2.NetcdfFile r1;
        double $d0;
        ucar.nc2.iosp.grid.GridTimeCoord r2;

        r2 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r1 := @parameter0: ucar.nc2.NetcdfFile;

        r101 := @parameter1: ucar.nc2.Group;

        $r0 = new ucar.nc2.Variable;

        $r3 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        specialinvoke $r0.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r101, null, $r3);

        $r4 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r0.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r4);

        $r5 = new ucar.nc2.units.DateFormatter;

        specialinvoke $r5.<ucar.nc2.units.DateFormatter: void <init>()>();

        $r6 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.Date baseDate>;

        $r7 = virtualinvoke $r5.<ucar.nc2.units.DateFormatter: java.lang.String toDateTimeStringISO(java.util.Date)>($r6);

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r14 = new ucar.nc2.units.DateUnit;

        specialinvoke $r14.<ucar.nc2.units.DateUnit: void <init>(java.lang.String)>($r13);

     label02:
        goto label04;

     label03:
        $r94 := @caughtexception;

        $r96 = <ucar.nc2.iosp.grid.GridTimeCoord: org.slf4j.Logger log>;

        $r95 = new java.lang.StringBuilder;

        specialinvoke $r95.<java.lang.StringBuilder: void <init>()>();

        $r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TimeCoord not added, cant make DateUnit from String \'");

        $r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);

        $r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r100 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r96.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r100, $r94);

        return;

     label04:
        r102 = null;

        $i0 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: int getNTimes()>();

        $r15 = newarray (int)[$i0];

        r2.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData> = $r15;

        $z0 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: boolean isInterval()>();

        if $z0 != 0 goto label07;

        i17 = 0;

     label05:
        $r86 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        $i15 = interfaceinvoke $r86.<java.util.List: int size()>();

        if i17 >= $i15 goto label06;

        $r91 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData>;

        $r90 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        $r92 = interfaceinvoke $r90.<java.util.List: java.lang.Object get(int)>(i17);

        $r93 = (java.util.Date) $r92;

        $d0 = virtualinvoke $r14.<ucar.nc2.units.DateUnit: double makeValue(java.util.Date)>($r93);

        $i16 = (int) $d0;

        $r91[i17] = $i16;

        i17 = i17 + 1;

        goto label05;

     label06:
        $r89 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r87 = newarray (int)[1];

        $r87[0] = $i0;

        $r88 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData>;

        r103 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r89, $r87, $r88);

        goto label10;

     label07:
        $i1 = $i0 * 2;

        r104 = newarray (int)[$i1];

        i18 = 0;

     label08:
        $r16 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $i2 = interfaceinvoke $r16.<java.util.List: int size()>();

        if i18 >= $i2 goto label09;

        $r83 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $r84 = interfaceinvoke $r83.<java.util.List: java.lang.Object get(int)>(i18);

        r105 = (ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval) $r84;

        $r85 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData>;

        $i6 = r105.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int start>;

        $i5 = r105.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $i7 = $i6 + $i5;

        $r85[i18] = $i7;

        $i8 = 2 * i18;

        $i12 = $i8 + 1;

        $i10 = r105.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int start>;

        $i9 = r105.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $i11 = $i10 + $i9;

        r104[$i12] = $i11;

        $i14 = 2 * i18;

        $i13 = r105.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int start>;

        r104[$i14] = $i13;

        i18 = i18 + 1;

        goto label08;

     label09:
        $r19 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r17 = newarray (int)[1];

        $r17[0] = $i0;

        $r18 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData>;

        r103 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r19, $r17, $r18);

        $r21 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        $r20 = newarray (int)[2];

        $r20[0] = $i0;

        $r20[1] = 2;

        r102 = staticinvoke <ucar.ma2.Array: ucar.ma2.Array factory(ucar.ma2.DataType,int[],java.lang.Object)>($r21, $r20, r104);

     label10:
        $r22 = virtualinvoke $r0.<ucar.nc2.Variable: java.lang.String getShortName()>();

        virtualinvoke $r0.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r22);

        virtualinvoke $r0.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r103, 0);

        $z1 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: boolean isInterval()>();

        if $z1 != 0 goto label11;

        $r75 = new ucar.nc2.Attribute;

        specialinvoke $r75.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", "forecast time");

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r75);

        $r76 = new ucar.nc2.Attribute;

        $r77 = new java.lang.StringBuilder;

        specialinvoke $r77.<java.lang.StringBuilder: void <init>()>();

        $r78 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        $r79 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r78);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since ");

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r76.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r82);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r76);

        goto label15;

     label11:
        $r23 = new java.util.Formatter;

        specialinvoke $r23.<java.util.Formatter: void <init>()>();

        $i3 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int constantInterval>;

        if $i3 >= 0 goto label12;

        $r74 = newarray (java.lang.Object)[0];

        virtualinvoke $r23.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("(mixed intervals)", $r74);

        goto label13;

     label12:
        $r24 = newarray (java.lang.Object)[2];

        $i4 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int constantInterval>;

        $r25 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i4);

        $r24[0] = $r25;

        $r26 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        $r24[1] = $r26;

        virtualinvoke $r23.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>("(%d %s intervals)", $r24);

     label13:
        $r27 = new ucar.nc2.Attribute;

        $r28 = new java.lang.StringBuilder;

        specialinvoke $r28.<java.lang.StringBuilder: void <init>()>();

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("forecast time for ");

        $r30 = virtualinvoke $r23.<java.util.Formatter: java.lang.String toString()>();

        $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r27.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r32);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r27);

        $r33 = new ucar.nc2.Attribute;

        $r34 = new java.lang.StringBuilder;

        specialinvoke $r34.<java.lang.StringBuilder: void <init>()>();

        $r35 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        $r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35);

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r33.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r39);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r33);

        $r40 = new ucar.nc2.Attribute;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r42 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r42);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_bounds");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r40.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("bounds", $r45);

        virtualinvoke $r0.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r40);

        if r101 != null goto label14;

        r101 = virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Group getRootGroup()>();

     label14:
        $r46 = staticinvoke <ucar.nc2.dataset.DatasetConstructor: ucar.nc2.Dimension getBoundsDimension(ucar.nc2.NetcdfFile)>(r1);

        $r47 = new ucar.nc2.Variable;

        $r48 = new java.lang.StringBuilder;

        specialinvoke $r48.<java.lang.StringBuilder: void <init>()>();

        $r49 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $r50 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r49);

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("_bounds");

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r47.<ucar.nc2.Variable: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,ucar.nc2.Structure,java.lang.String)>(r1, r101, null, $r52);

        $r53 = <ucar.ma2.DataType: ucar.ma2.DataType INT>;

        virtualinvoke $r47.<ucar.nc2.Variable: void setDataType(ucar.ma2.DataType)>($r53);

        $r54 = new java.lang.StringBuilder;

        specialinvoke $r54.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r58 = virtualinvoke $r46.<ucar.nc2.Dimension: java.lang.String getName()>();

        $r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r47.<ucar.nc2.Variable: void setDimensions(java.lang.String)>($r60);

        $r61 = new ucar.nc2.Attribute;

        $r62 = new java.lang.StringBuilder;

        specialinvoke $r62.<java.lang.StringBuilder: void <init>()>();

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("bounds for ");

        $r64 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String getName()>();

        $r65 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r61.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("long_name", $r66);

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r61);

        $r67 = new ucar.nc2.Attribute;

        $r68 = new java.lang.StringBuilder;

        specialinvoke $r68.<java.lang.StringBuilder: void <init>()>();

        $r69 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        $r70 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r69);

        $r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" since ");

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r67.<ucar.nc2.Attribute: void <init>(java.lang.String,java.lang.String)>("units", $r73);

        virtualinvoke $r47.<ucar.nc2.Variable: ucar.nc2.Attribute addAttribute(ucar.nc2.Attribute)>($r67);

        virtualinvoke $r47.<ucar.nc2.Variable: void setCachedData(ucar.ma2.Array,boolean)>(r102, 0);

        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r101, $r47);

     label15:
        virtualinvoke r1.<ucar.nc2.NetcdfFile: ucar.nc2.Variable addVariable(ucar.nc2.Group,ucar.nc2.Variable)>(r101, $r0);

        return;

        catch java.lang.Exception from label01 to label02 with label03;
    }

    int findIndex(ucar.grid.GridRecord)
    {
        java.util.Date $r1, $r10;
        ucar.grib.GribPds $r8;
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r6;
        int[] $r9;
        int $i0, $i1, $i2, i3, $i4, $i5, i6, $i8;
        ucar.grid.GridRecord r0;
        boolean $z0, $z1, $z2;
        java.util.Iterator $r4;
        ucar.nc2.iosp.grid.GridTimeCoord r2;
        java.util.List $r3, $r11;
        java.lang.Object $r5;
        ucar.grib.GribGridRecord r7;

        r2 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r0 := @parameter0: ucar.grid.GridRecord;

        $r1 = interfaceinvoke r0.<ucar.grid.GridRecord: java.util.Date getValidTime()>();

        $z0 = virtualinvoke r2.<ucar.nc2.iosp.grid.GridTimeCoord: boolean isInterval()>();

        if $z0 != 0 goto label1;

        $r11 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        $i5 = interfaceinvoke $r11.<java.util.List: int indexOf(java.lang.Object)>($r1);

        return $i5;

     label1:
        i6 = 0;

        $r3 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label2:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval) $r5;

        r7 = (ucar.grib.GribGridRecord) r0;

        $r8 = virtualinvoke r7.<ucar.grib.GribGridRecord: ucar.grib.GribPds getPds()>();

        $i0 = r2.<ucar.nc2.iosp.grid.GridTimeCoord: int timeUnit>;

        $r9 = virtualinvoke $r8.<ucar.grib.GribPds: int[] getForecastTimeInterval(int)>($i0);

        $i2 = $r9[1];

        $i1 = $r9[0];

        i3 = $i2 - $i1;

        $r10 = r6.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: java.util.Date coord>;

        $z2 = virtualinvoke $r10.<java.util.Date: boolean equals(java.lang.Object)>($r1);

        if $z2 == 0 goto label3;

        $i4 = r6.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        if $i4 != i3 goto label3;

        return i6;

     label3:
        i6 = i6 + 1;

        goto label2;

     label4:
        $i8 = (int) -1;

        return $i8;
    }

    int getNTimes()
    {
        java.util.List $r1, $r2;
        int $i0;
        ucar.nc2.iosp.grid.GridTimeCoord r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        $z0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridTimeCoord: boolean isInterval()>();

        if $z0 == 0 goto label1;

        $r2 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $i0 = interfaceinvoke $r2.<java.util.List: int size()>();

        goto label2;

     label1:
        $r1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List times>;

        $i0 = interfaceinvoke $r1.<java.util.List: int size()>();

     label2:
        return $i0;
    }

    int getConstantInterval()
    {
        int $i0;
        ucar.nc2.iosp.grid.GridTimeCoord r0;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        $i0 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: int constantInterval>;

        return $i0;
    }

    java.lang.String getTimeUnit()
    {
        ucar.nc2.iosp.grid.GridTimeCoord r0;
        java.lang.String $r1;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        $r1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.lang.String timeUdunit>;

        return $r1;
    }

    boolean isInterval()
    {
        java.util.List $r1;
        ucar.nc2.iosp.grid.GridTimeCoord r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        $r1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        if $r1 == null goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.String getCoord(int)
    {
        ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval r4;
        int[] $r6, $r14;
        int i0, $i1, $i2, $i3, $i4;
        java.lang.String $r12, $r17;
        ucar.nc2.iosp.grid.GridTimeCoord r0;
        java.util.List $r1, $r2;
        java.lang.Object $r3;
        java.lang.StringBuilder $r5, $r7, $r8, $r9, $r10, $r11, $r13, $r15, $r16;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        i0 := @parameter0: int;

        $r1 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        if $r1 != null goto label1;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r14 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData>;

        $i4 = $r14[i0];

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r17;

     label1:
        $r2 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: java.util.List timeIntvs>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>(i0);

        r4 = (ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval) $r3;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r6 = r0.<ucar.nc2.iosp.grid.GridTimeCoord: int[] coordData>;

        $i1 = $r6[i0];

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("=");

        $i2 = r4.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int start>;

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        $i3 = r4.<ucar.nc2.iosp.grid.GridTimeCoord$TimeCoordWithInterval: int interval>;

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r12;
    }

    public int compareTo(ucar.nc2.iosp.grid.GridTimeCoord)
    {
        int $i0, $i1, $i2;
        ucar.nc2.iosp.grid.GridTimeCoord r0, r1;

        r1 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r0 := @parameter0: ucar.nc2.iosp.grid.GridTimeCoord;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridTimeCoord: int getNTimes()>();

        $i1 = virtualinvoke r1.<ucar.nc2.iosp.grid.GridTimeCoord: int getNTimes()>();

        $i2 = $i0 - $i1;

        return $i2;
    }

    public volatile int compareTo(java.lang.Object)
    {
        int $i0;
        java.lang.Object r1;
        ucar.nc2.iosp.grid.GridTimeCoord r0, $r2;

        r0 := @this: ucar.nc2.iosp.grid.GridTimeCoord;

        r1 := @parameter0: java.lang.Object;

        $r2 = (ucar.nc2.iosp.grid.GridTimeCoord) r1;

        $i0 = virtualinvoke r0.<ucar.nc2.iosp.grid.GridTimeCoord: int compareTo(ucar.nc2.iosp.grid.GridTimeCoord)>($r2);

        return $i0;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/grid/GridTimeCoord;");

        <ucar.nc2.iosp.grid.GridTimeCoord: org.slf4j.Logger log> = $r0;

        return;
    }
}
