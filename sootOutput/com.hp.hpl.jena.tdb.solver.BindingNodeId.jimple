public class com.hp.hpl.jena.tdb.solver.BindingNodeId extends org.apache.jena.atlas.lib.Map2
{
    private final com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding;

    private void <init>(java.util.Map, org.apache.jena.atlas.lib.Map2, com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding r3;
        org.apache.jena.atlas.lib.Map2 r2;
        java.util.Map r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r1 := @parameter0: java.util.Map;

        r2 := @parameter1: org.apache.jena.atlas.lib.Map2;

        r3 := @parameter2: com.hp.hpl.jena.sparql.engine.binding.Binding;

        specialinvoke r0.<org.apache.jena.atlas.lib.Map2: void <init>(java.util.Map,org.apache.jena.atlas.lib.Map2)>(r1, r2);

        r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding> = r3;

        return;
    }

    public void <init>(com.hp.hpl.jena.tdb.solver.BindingNodeId)
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r3;
        java.util.HashMap $r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0, r2;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r2 := @parameter0: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        $r3 = virtualinvoke r2.<com.hp.hpl.jena.tdb.solver.BindingNodeId: com.hp.hpl.jena.sparql.engine.binding.Binding getParentBinding()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: void <init>(java.util.Map,org.apache.jena.atlas.lib.Map2,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r1, r2, $r3);

        return;
    }

    public void <init>(com.hp.hpl.jena.sparql.engine.binding.Binding)
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.sparql.engine.binding.Binding r2;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r2 := @parameter0: com.hp.hpl.jena.sparql.engine.binding.Binding;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: void <init>(java.util.Map,org.apache.jena.atlas.lib.Map2,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r1, null, r2);

        return;
    }

    public void <init>()
    {
        java.util.HashMap $r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        specialinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: void <init>(java.util.Map,org.apache.jena.atlas.lib.Map2,com.hp.hpl.jena.sparql.engine.binding.Binding)>($r1, null, null);

        return;
    }

    public com.hp.hpl.jena.sparql.engine.binding.Binding getParentBinding()
    {
        com.hp.hpl.jena.sparql.engine.binding.Binding $r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        $r1 = r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: com.hp.hpl.jena.sparql.engine.binding.Binding parentBinding>;

        return $r1;
    }

    public void put(com.hp.hpl.jena.sparql.core.Var, com.hp.hpl.jena.tdb.store.NodeId)
    {
        com.hp.hpl.jena.sparql.core.Var r0;
        java.lang.IllegalArgumentException $r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r10;
        com.hp.hpl.jena.tdb.store.NodeId r6;
        java.lang.StringBuilder $r2, $r3, $r4, $r5, $r7, $r8;
        java.lang.String $r9;

        r10 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r0 := @parameter0: com.hp.hpl.jena.sparql.core.Var;

        r6 := @parameter1: com.hp.hpl.jena.tdb.store.NodeId;

        if r0 == null goto label1;

        if r6 != null goto label2;

     label1:
        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r1;

     label2:
        specialinvoke r10.<org.apache.jena.atlas.lib.Map2: void put(java.lang.Object,java.lang.Object)>(r0, r6);

        return;
    }

    public void putAll(com.hp.hpl.jena.tdb.solver.BindingNodeId)
    {
        com.hp.hpl.jena.tdb.store.NodeId r5;
        java.lang.String $r14;
        boolean $z0;
        java.util.Iterator $r1;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0, r6;
        com.hp.hpl.jena.sparql.core.Var r3;
        java.lang.IllegalArgumentException $r7, $r15;
        java.lang.Object $r2, $r4;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13;

        r6 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r0 := @parameter0: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        $r1 = virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        r3 = (com.hp.hpl.jena.sparql.core.Var) $r2;

        if r3 != null goto label2;

        $r15 = new java.lang.IllegalArgumentException;

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null key");

        throw $r15;

     label2:
        $r4 = virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.lang.Object get(java.lang.Object)>(r3);

        r5 = (com.hp.hpl.jena.tdb.store.NodeId) $r4;

        if r5 != null goto label3;

        $r7 = new java.lang.IllegalArgumentException;

        $r8 = new java.lang.StringBuilder;

        specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14);

        throw $r7;

     label3:
        specialinvoke r6.<org.apache.jena.atlas.lib.Map2: void put(java.lang.Object,java.lang.Object)>(r3, r5);

        goto label1;

     label4:
        return;
    }

    public java.lang.String toString()
    {
        java.util.Iterator $r2;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r1;
        com.hp.hpl.jena.sparql.core.Var r5;
        com.hp.hpl.jena.tdb.store.NodeId $r7;
        java.lang.StringBuilder $r0;
        java.lang.Object $r4, $r6;
        java.lang.String $r3;
        boolean $z0, z1;

        r1 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        z1 = 1;

        $r2 = virtualinvoke r1.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r2.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r2.<java.util.Iterator: java.lang.Object next()>();

        r5 = (com.hp.hpl.jena.sparql.core.Var) $r4;

        if z1 != 0 goto label2;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

     label2:
        z1 = 0;

        $r6 = virtualinvoke r1.<com.hp.hpl.jena.tdb.solver.BindingNodeId: java.lang.Object get(java.lang.Object)>(r5);

        $r7 = (com.hp.hpl.jena.tdb.store.NodeId) $r6;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ");

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        goto label1;

     label3:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public volatile void put(java.lang.Object, java.lang.Object)
    {
        com.hp.hpl.jena.tdb.store.NodeId $r3;
        java.lang.Object r1, r2;
        com.hp.hpl.jena.tdb.solver.BindingNodeId r0;
        com.hp.hpl.jena.sparql.core.Var $r4;

        r0 := @this: com.hp.hpl.jena.tdb.solver.BindingNodeId;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (com.hp.hpl.jena.sparql.core.Var) r1;

        $r3 = (com.hp.hpl.jena.tdb.store.NodeId) r2;

        virtualinvoke r0.<com.hp.hpl.jena.tdb.solver.BindingNodeId: void put(com.hp.hpl.jena.sparql.core.Var,com.hp.hpl.jena.tdb.store.NodeId)>($r4, $r3);

        return;
    }
}
