public class org.apache.xalan.transformer.TransformerImpl extends javax.xml.transform.Transformer implements java.lang.Runnable, org.apache.xml.dtm.DTMWSFilter, org.apache.xpath.ExtensionsProvider, org.apache.xml.serializer.SerializerTrace
{
    private java.lang.Boolean m_reentryGuard;
    private java.io.FileOutputStream m_outputStream;
    private boolean m_parserEventsOnMain;
    private java.lang.Thread m_transformThread;
    private java.lang.String m_urlOfSource;
    private javax.xml.transform.Result m_outputTarget;
    private org.apache.xalan.templates.OutputProperties m_outputFormat;
    org.xml.sax.ContentHandler m_inputContentHandler;
    private org.xml.sax.ContentHandler m_outputContentHandler;
    javax.xml.parsers.DocumentBuilder m_docBuilder;
    private org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool;
    private org.apache.xml.utils.ObjectPool m_stringWriterObjectPool;
    private org.apache.xalan.templates.OutputProperties m_textformat;
    org.apache.xml.utils.ObjectStack m_currentTemplateElements;
    java.util.Stack m_currentMatchTemplates;
    org.apache.xml.utils.NodeVector m_currentMatchedNodes;
    private org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot;
    private boolean m_quietConflictWarnings;
    private org.apache.xpath.XPathContext m_xcontext;
    private org.apache.xalan.transformer.StackGuard m_stackGuard;
    private org.apache.xml.serializer.SerializationHandler m_serializationHandler;
    private org.apache.xalan.transformer.KeyManager m_keyManager;
    java.util.Stack m_attrSetStack;
    org.apache.xalan.transformer.CountersTable m_countersTable;
    org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull;
    org.apache.xml.utils.ObjectStack m_currentFuncResult;
    private org.apache.xalan.transformer.MsgMgr m_msgMgr;
    public static boolean S_DEBUG;
    private javax.xml.transform.ErrorListener m_errorHandler;
    private org.apache.xalan.trace.TraceManager m_traceManager;
    private java.lang.Exception m_exceptionThrown;
    private javax.xml.transform.Source m_xmlSource;
    private int m_doc;
    private boolean m_isTransformDone;
    private boolean m_hasBeenReset;
    private boolean m_shouldReset;
    private java.util.Stack m_modes;
    private org.apache.xalan.extensions.ExtensionsTable m_extensionsTable;
    private boolean m_hasTransformThreadErrorCatcher;
    java.util.Vector m_userParams;
    static java.lang.Class class$org$apache$xml$serializer$ToTextStream;
    static java.lang.Class class$java$io$StringWriter;

    public void setShouldReset(boolean)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_shouldReset> = z0;

        return;
    }

    public void <init>(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xml.utils.ObjectStack $r7, $r12;
        org.apache.xml.utils.NodeVector $r9;
        java.util.Stack $r8, $r15;
        org.apache.xalan.trace.TraceManager $r14;
        org.apache.xalan.transformer.KeyManager $r10;
        org.apache.xml.utils.DefaultErrorHandler $r13;
        org.apache.xpath.XPathContext $r17, $r18;
        org.apache.xalan.templates.OutputProperties $r6;
        java.lang.Boolean $r1;
        org.apache.xalan.templates.StylesheetRoot r16;
        org.apache.xalan.transformer.StackGuard $r19;
        java.lang.Class $r3, $r5, $r20, $r21;
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectPool $r2, $r4;
        org.apache.xml.utils.BoolStack $r11;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r16 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        specialinvoke r0.<javax.xml.transform.Transformer: void <init>()>();

        $r1 = new java.lang.Boolean;

        specialinvoke $r1.<java.lang.Boolean: void <init>(boolean)>(1);

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard> = $r1;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_parserEventsOnMain> = 1;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_outputContentHandler> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.parsers.DocumentBuilder m_docBuilder> = null;

        $r2 = new org.apache.xml.utils.ObjectPool;

        $r3 = <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$org$apache$xml$serializer$ToTextStream>;

        if $r3 != null goto label1;

        $r20 = staticinvoke <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$(java.lang.String)>("org.apache.xml.serializer.ToTextStream");

        <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$org$apache$xml$serializer$ToTextStream> = $r20;

        goto label2;

     label1:
        $r20 = <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$org$apache$xml$serializer$ToTextStream>;

     label2:
        specialinvoke $r2.<org.apache.xml.utils.ObjectPool: void <init>(java.lang.Class)>($r20);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool> = $r2;

        $r4 = new org.apache.xml.utils.ObjectPool;

        $r5 = <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$java$io$StringWriter>;

        if $r5 != null goto label3;

        $r21 = staticinvoke <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$(java.lang.String)>("java.io.StringWriter");

        <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$java$io$StringWriter> = $r21;

        goto label4;

     label3:
        $r21 = <org.apache.xalan.transformer.TransformerImpl: java.lang.Class class$java$io$StringWriter>;

     label4:
        specialinvoke $r4.<org.apache.xml.utils.ObjectPool: void <init>(java.lang.Class)>($r21);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool> = $r4;

        $r6 = new org.apache.xalan.templates.OutputProperties;

        specialinvoke $r6.<org.apache.xalan.templates.OutputProperties: void <init>(java.lang.String)>("text");

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_textformat> = $r6;

        $r7 = new org.apache.xml.utils.ObjectStack;

        specialinvoke $r7.<org.apache.xml.utils.ObjectStack: void <init>(int)>(4096);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements> = $r7;

        $r8 = new java.util.Stack;

        specialinvoke $r8.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates> = $r8;

        $r9 = new org.apache.xml.utils.NodeVector;

        specialinvoke $r9.<org.apache.xml.utils.NodeVector: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes> = $r9;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings> = 1;

        $r10 = new org.apache.xalan.transformer.KeyManager;

        specialinvoke $r10.<org.apache.xalan.transformer.KeyManager: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager m_keyManager> = $r10;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = null;

        $r11 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r11.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull> = $r11;

        $r12 = new org.apache.xml.utils.ObjectStack;

        specialinvoke $r12.<org.apache.xml.utils.ObjectStack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult> = $r12;

        $r13 = new org.apache.xml.utils.DefaultErrorHandler;

        specialinvoke $r13.<org.apache.xml.utils.DefaultErrorHandler: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler> = $r13;

        $r14 = new org.apache.xalan.trace.TraceManager;

        specialinvoke $r14.<org.apache.xalan.trace.TraceManager: void <init>(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager> = $r14;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 0;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 0;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_shouldReset> = 1;

        $r15 = new java.util.Stack;

        specialinvoke $r15.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes> = $r15;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable m_extensionsTable> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setStylesheet(org.apache.xalan.templates.StylesheetRoot)>(r16);

        $r17 = new org.apache.xpath.XPathContext;

        specialinvoke $r17.<org.apache.xpath.XPathContext: void <init>(java.lang.Object)>(r0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setXPathContext(org.apache.xpath.XPathContext)>($r17);

        $r18 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke $r18.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>(r16);

        $r19 = new org.apache.xalan.transformer.StackGuard;

        specialinvoke $r19.<org.apache.xalan.transformer.StackGuard: void <init>(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.StackGuard m_stackGuard> = $r19;

        return;
    }

    public org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.extensions.ExtensionsTable $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable m_extensionsTable>;

        return $r1;
    }

    void setExtensionsTable(org.apache.xalan.templates.StylesheetRoot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetRoot r0;
        java.util.Vector $r1;
        javax.xml.transform.TransformerException $r4;
        org.apache.xalan.extensions.ExtensionsTable $r3;
        org.apache.xalan.transformer.TransformerImpl r2;

        r2 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

     label1:
        $r1 = virtualinvoke r0.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getExtensions()>();

        if $r1 == null goto label2;

        $r3 = new org.apache.xalan.extensions.ExtensionsTable;

        specialinvoke $r3.<org.apache.xalan.extensions.ExtensionsTable: void <init>(org.apache.xalan.templates.StylesheetRoot)>(r0);

        r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable m_extensionsTable> = $r3;

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        virtualinvoke $r4.<javax.xml.transform.TransformerException: void printStackTrace()>();

     label4:
        return;

        catch javax.xml.transform.TransformerException from label1 to label2 with label3;
    }

    public boolean functionAvailable(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable $r1;
        java.lang.String r2, r3;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $z0 = virtualinvoke $r1.<org.apache.xalan.extensions.ExtensionsTable: boolean functionAvailable(java.lang.String,java.lang.String)>(r2, r3);

        return $z0;
    }

    public boolean elementAvailable(java.lang.String, java.lang.String) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExtensionsTable $r1;
        java.lang.String r2, r3;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $z0 = virtualinvoke $r1.<org.apache.xalan.extensions.ExtensionsTable: boolean elementAvailable(java.lang.String,java.lang.String)>(r2, r3);

        return $z0;
    }

    public java.lang.Object extFunction(java.lang.String, java.lang.String, java.util.Vector, java.lang.Object) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.extensions.ExpressionContext $r7;
        java.util.Vector r4;
        org.apache.xpath.XPathContext $r6;
        org.apache.xalan.extensions.ExtensionsTable $r1;
        java.lang.Object r5, $r8;
        java.lang.String r2, r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: java.lang.String;

        r4 := @parameter2: java.util.Vector;

        r5 := @parameter3: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $r6 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r7 = virtualinvoke $r6.<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()>();

        $r8 = virtualinvoke $r1.<org.apache.xalan.extensions.ExtensionsTable: java.lang.Object extFunction(java.lang.String,java.lang.String,java.util.Vector,java.lang.Object,org.apache.xalan.extensions.ExpressionContext)>(r2, r3, r4, r5, $r7);

        return $r8;
    }

    public java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction, java.util.Vector) throws javax.xml.transform.TransformerException
    {
        org.apache.xpath.functions.FuncExtFunction r2;
        java.util.Vector r3;
        org.apache.xalan.extensions.ExpressionContext $r5;
        org.apache.xpath.XPathContext $r4;
        org.apache.xalan.extensions.ExtensionsTable $r1;
        java.lang.Object $r6;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: org.apache.xpath.functions.FuncExtFunction;

        r3 := @parameter1: java.util.Vector;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.extensions.ExtensionsTable getExtensionsTable()>();

        $r4 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xalan.extensions.ExpressionContext getExpressionContext()>();

        $r6 = virtualinvoke $r1.<org.apache.xalan.extensions.ExtensionsTable: java.lang.Object extFunction(org.apache.xpath.functions.FuncExtFunction,java.util.Vector,org.apache.xalan.extensions.ExpressionContext)>(r2, r3, $r5);

        return $r6;
    }

    public void reset()
    {
        org.apache.xml.utils.ObjectStack $r7;
        org.apache.xml.utils.NodeVector $r9;
        java.util.Stack $r8;
        org.apache.xalan.transformer.KeyManager $r14;
        org.apache.xpath.VariableStack $r6;
        org.apache.xpath.XPathContext $r4, $r5, $r12;
        int $i1;
        org.apache.xpath.SourceTreeManager $r13;
        boolean $z0, $z1;
        java.io.FileOutputStream $r1, $r2;
        java.io.IOException $r3;
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.BoolStack $r15;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset>;

        if $z0 != 0 goto label5;

        $z1 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_shouldReset>;

        if $z1 == 0 goto label5;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 1;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream>;

        if $r1 == null goto label4;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream>;

        virtualinvoke $r2.<java.io.FileOutputStream: void close()>();

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

     label4:
        r0.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = null;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r4.<org.apache.xpath.XPathContext: void reset()>();

        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r6 = virtualinvoke $r5.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        virtualinvoke $r6.<org.apache.xpath.VariableStack: void reset()>();

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void resetUserParameters()>();

        $r7 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r7.<org.apache.xml.utils.ObjectVector: void removeAllElements()>();

        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        virtualinvoke $r8.<java.util.Vector: void removeAllElements()>();

        $r9 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        virtualinvoke $r9.<org.apache.xml.utils.NodeVector: void removeAllElements()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = null;

        $r14 = new org.apache.xalan.transformer.KeyManager;

        specialinvoke $r14.<org.apache.xalan.transformer.KeyManager: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager m_keyManager> = $r14;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack> = null;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = null;

        $r15 = new org.apache.xml.utils.BoolStack;

        specialinvoke $r15.<org.apache.xml.utils.BoolStack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull> = $r15;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Source m_xmlSource> = null;

        $i1 = (int) -1;

        r0.<org.apache.xalan.transformer.TransformerImpl: int m_doc> = $i1;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 0;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread> = null;

        $r12 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r13 = virtualinvoke $r12.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        virtualinvoke $r13.<org.apache.xpath.SourceTreeManager: void reset()>();

     label5:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public boolean getProperty(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        return 0;
    }

    public void setProperty(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        return;
    }

    public boolean isParserEventsOnMain()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_parserEventsOnMain>;

        return $z0;
    }

    public java.lang.Thread getTransformThread()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Thread $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread>;

        return $r1;
    }

    public void setTransformThread(java.lang.Thread)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Thread r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Thread;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread> = r1;

        return;
    }

    public boolean hasTransformThreadErrorCatcher()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher>;

        return $z0;
    }

    public void transform(javax.xml.transform.Source) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.Source r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transform(javax.xml.transform.Source,boolean)>(r1, 1);

        return;
    }

    public void transform(javax.xml.transform.Source, boolean) throws javax.xml.transform.TransformerException
    {
        org.w3c.dom.Document $r58;
        java.io.Reader $r21;
        java.lang.Exception $r4, $r9, r60;
        org.apache.xml.dtm.DTMManager $r53;
        javax.xml.parsers.DocumentBuilderFactory $r54;
        java.lang.Throwable $r38, $r45;
        javax.xml.transform.dom.DOMSource $r11, $r57;
        javax.xml.transform.TransformerException $r7, $r10, $r40;
        javax.xml.transform.stream.StreamSource $r18, $r20;
        javax.xml.transform.Source r48;
        org.xml.sax.XMLReader $r16;
        org.apache.xpath.XPathContext $r1, $r36, $r52;
        java.lang.StringBuffer $r23, $r24, $r25, $r26, $r27, $r28, $r31, $r32, $r33, $r34;
        java.lang.String $r3, $r17, $r22, $r30, r49, r50, r51, $r56;
        org.apache.xml.utils.WrappedRuntimeException $r8, $r43, $r44;
        javax.xml.parsers.DocumentBuilder $r55;
        org.apache.xml.utils.PrefixResolver $r2;
        org.apache.xml.serializer.SerializationHandler $r5, $r6;
        java.lang.SecurityException $r47;
        boolean z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.xml.sax.SAXException $r39;
        javax.xml.transform.ErrorListener $r41;
        org.w3c.dom.Node $r12;
        int $i1;
        org.xml.sax.InputSource $r14;
        char $c0;
        org.apache.xalan.templates.StylesheetRoot $r35, $r37;
        javax.xml.transform.sax.SAXSource $r13, $r15;
        org.xml.sax.SAXParseException $r42;
        javax.xml.parsers.ParserConfigurationException $r46;
        org.apache.xml.dtm.DTM $r59;
        java.lang.Class $r29;
        org.apache.xalan.transformer.TransformerImpl r0;
        java.io.InputStream $r19;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r48 := @parameter0: javax.xml.transform.Source;

        z0 := @parameter1: boolean;

     label01:
        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.utils.PrefixResolver getNamespaceContext()>();

        if $r2 != null goto label02;

        $r36 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r37 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        virtualinvoke $r36.<org.apache.xpath.XPathContext: void setNamespaceContext(org.apache.xml.utils.PrefixResolver)>($r37);

     label02:
        $r3 = interfaceinvoke r48.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        r49 = $r3;

        if null != $r3 goto label03;

        $r35 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r49 = virtualinvoke $r35.<org.apache.xalan.templates.ElemTemplateElement: java.lang.String getBaseIdentifier()>();

     label03:
        if null != r49 goto label10;

        r50 = "";

     label04:
        r50 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");

     label05:
        goto label07;

     label06:
        $r47 := @caughtexception;

     label07:
        $r22 = <java.io.File: java.lang.String separator>;

        $z3 = virtualinvoke r50.<java.lang.String: boolean startsWith(java.lang.String)>($r22);

        if $z3 == 0 goto label08;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("file://");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r50);

        r51 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        goto label09;

     label08:
        $r23 = new java.lang.StringBuffer;

        specialinvoke $r23.<java.lang.StringBuffer: void <init>()>();

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("file:///");

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r50);

        r51 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.String toString()>();

     label09:
        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r51);

        $c0 = <java.io.File: char separatorChar>;

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c0);

        $r29 = virtualinvoke r48.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        r49 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.String toString()>();

     label10:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setBaseURLOfSource(java.lang.String)>(r49);

        $r52 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r53 = virtualinvoke $r52.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        $z5 = r48 instanceof javax.xml.transform.stream.StreamSource;

        if $z5 == 0 goto label11;

        $r17 = interfaceinvoke r48.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        if $r17 != null goto label11;

        $r18 = (javax.xml.transform.stream.StreamSource) r48;

        $r19 = virtualinvoke $r18.<javax.xml.transform.stream.StreamSource: java.io.InputStream getInputStream()>();

        if $r19 != null goto label11;

        $r20 = (javax.xml.transform.stream.StreamSource) r48;

        $r21 = virtualinvoke $r20.<javax.xml.transform.stream.StreamSource: java.io.Reader getReader()>();

        if $r21 == null goto label13;

     label11:
        $z6 = r48 instanceof javax.xml.transform.sax.SAXSource;

        if $z6 == 0 goto label12;

        $r13 = (javax.xml.transform.sax.SAXSource) r48;

        $r14 = virtualinvoke $r13.<javax.xml.transform.sax.SAXSource: org.xml.sax.InputSource getInputSource()>();

        if $r14 != null goto label12;

        $r15 = (javax.xml.transform.sax.SAXSource) r48;

        $r16 = virtualinvoke $r15.<javax.xml.transform.sax.SAXSource: org.xml.sax.XMLReader getXMLReader()>();

        if $r16 == null goto label13;

     label12:
        $z7 = r48 instanceof javax.xml.transform.dom.DOMSource;

        if $z7 == 0 goto label16;

        $r11 = (javax.xml.transform.dom.DOMSource) r48;

        $r12 = virtualinvoke $r11.<javax.xml.transform.dom.DOMSource: org.w3c.dom.Node getNode()>();

        if $r12 != null goto label16;

     label13:
        $r54 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();

        $r55 = virtualinvoke $r54.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();

        $r56 = interfaceinvoke r48.<javax.xml.transform.Source: java.lang.String getSystemId()>();

        $r57 = new javax.xml.transform.dom.DOMSource;

        $r58 = virtualinvoke $r55.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document newDocument()>();

        specialinvoke $r57.<javax.xml.transform.dom.DOMSource: void <init>(org.w3c.dom.Node)>($r58);

        r48 = $r57;

        if $r56 == null goto label14;

        interfaceinvoke $r57.<javax.xml.transform.Source: void setSystemId(java.lang.String)>($r56);

     label14:
        goto label16;

     label15:
        $r46 := @caughtexception;

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>($r46);

     label16:
        $r59 = virtualinvoke $r53.<org.apache.xml.dtm.DTMManager: org.apache.xml.dtm.DTM getDTM(javax.xml.transform.Source,boolean,org.apache.xml.dtm.DTMWSFilter,boolean,boolean)>(r48, 0, r0, 1, 1);

        interfaceinvoke $r59.<org.apache.xml.dtm.DTM: void setDocumentBaseURI(java.lang.String)>(r49);

     label17:
        $i1 = interfaceinvoke $r59.<org.apache.xml.dtm.DTM: int getDocument()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transformNode(int)>($i1);

        goto label38;

     label18:
        goto label21;

     label19:
        $r45 := @caughtexception;

        goto label40;

     label20:
        throw $r45;

     label21:
        $r4 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()>();

        if null == $r4 goto label24;

        $z1 = $r4 instanceof javax.xml.transform.TransformerException;

        if $z1 == 0 goto label22;

        $r10 = (javax.xml.transform.TransformerException) $r4;

        throw $r10;

     label22:
        $z2 = $r4 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z2 == 0 goto label23;

        $r8 = (org.apache.xml.utils.WrappedRuntimeException) $r4;

        $r9 = virtualinvoke $r8.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>($r9);

        goto label25;

     label23:
        $r7 = new javax.xml.transform.TransformerException;

        specialinvoke $r7.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r4);

        throw $r7;

     label24:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if null == $r5 goto label25;

        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r6.<org.xml.sax.ContentHandler: void endDocument()>();

     label25:
        goto label42;

     label26:
        goto label37;

     label27:
        $r43 := @caughtexception;

        r60 = virtualinvoke $r43.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

        goto label29;

     label28:
        $r44 = (org.apache.xml.utils.WrappedRuntimeException) r60;

        r60 = virtualinvoke $r44.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

     label29:
        $z4 = r60 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z4 != 0 goto label28;

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>(r60);

        goto label43;

     label30:
        goto label37;

     label31:
        $r42 := @caughtexception;

        specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void fatalError(java.lang.Throwable)>($r42);

        goto label44;

     label32:
        goto label37;

     label33:
        $r39 := @caughtexception;

        $r41 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r40 = new javax.xml.transform.TransformerException;

        specialinvoke $r40.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r39);

        interfaceinvoke $r41.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r40);

        goto label45;

     label34:
        goto label37;

     label35:
        $r38 := @caughtexception;

        goto label46;

     label36:
        throw $r38;

     label37:
        return;

     label38:
        if z0 == 0 goto label39;

        virtualinvoke $r53.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>($r59, 1);

     label39:
        goto label18;

     label40:
        if z0 == 0 goto label41;

        virtualinvoke $r53.<org.apache.xml.dtm.DTMManager: boolean release(org.apache.xml.dtm.DTM,boolean)>($r59, 1);

     label41:
        goto label20;

     label42:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label26;

     label43:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label30;

     label44:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label32;

     label45:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label34;

     label46:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasTransformThreadErrorCatcher> = 0;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label36;

        catch java.lang.SecurityException from label04 to label05 with label06;
        catch javax.xml.parsers.ParserConfigurationException from label13 to label14 with label15;
        catch java.lang.Throwable from label17 to label19 with label19;
        catch org.apache.xml.utils.WrappedRuntimeException from label01 to label25 with label27;
        catch org.xml.sax.SAXParseException from label01 to label25 with label31;
        catch org.xml.sax.SAXException from label01 to label25 with label33;
        catch java.lang.Throwable from label01 to label35 with label35;
        catch org.apache.xml.utils.WrappedRuntimeException from label38 to label40 with label27;
        catch org.xml.sax.SAXParseException from label38 to label40 with label31;
        catch org.xml.sax.SAXException from label38 to label40 with label33;
        catch java.lang.Throwable from label38 to label40 with label35;
        catch org.apache.xml.utils.WrappedRuntimeException from label40 to label42 with label27;
        catch org.xml.sax.SAXParseException from label40 to label42 with label31;
        catch org.xml.sax.SAXException from label40 to label42 with label33;
        catch java.lang.Throwable from label40 to label42 with label35;
    }

    private void fatalError(java.lang.Throwable) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable r0;
        javax.xml.transform.TransformerException $r2, $r4;
        javax.xml.transform.ErrorListener $r3, $r5;
        org.apache.xml.utils.SAXSourceLocator $r7;
        org.xml.sax.SAXParseException $r8;
        java.lang.String $r6;
        boolean $z0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: java.lang.Throwable;

        $z0 = r0 instanceof org.xml.sax.SAXParseException;

        if $z0 == 0 goto label1;

        $r5 = r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r4 = new javax.xml.transform.TransformerException;

        $r6 = virtualinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>();

        $r7 = new org.apache.xml.utils.SAXSourceLocator;

        $r8 = (org.xml.sax.SAXParseException) r0;

        specialinvoke $r7.<org.apache.xml.utils.SAXSourceLocator: void <init>(org.xml.sax.SAXParseException)>($r8);

        specialinvoke $r4.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator)>($r6, $r7);

        interfaceinvoke $r5.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r4);

        goto label2;

     label1:
        $r3 = r1.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r2 = new javax.xml.transform.TransformerException;

        specialinvoke $r2.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r0);

        interfaceinvoke $r3.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r2);

     label2:
        return;
    }

    public java.lang.String getBaseURLOfSource()
    {
        java.lang.String $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource>;

        return $r1;
    }

    public void setBaseURLOfSource(java.lang.String)
    {
        java.lang.String r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.String;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource> = r1;

        return;
    }

    public javax.xml.transform.Result getOutputTarget()
    {
        javax.xml.transform.Result $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget>;

        return $r1;
    }

    public void setOutputTarget(javax.xml.transform.Result)
    {
        javax.xml.transform.Result r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Result;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = r1;

        return;
    }

    public java.lang.String getOutputProperty(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Object[] $r5;
        java.lang.IllegalArgumentException $r4;
        org.apache.xalan.templates.OutputProperties $r1;
        java.lang.String r2, $r3, $r6;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r3 = virtualinvoke $r1.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>(r2);

        if null != $r3 goto label1;

        $z0 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r2);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = newarray (java.lang.Object)[1];

        $r5[0] = r2;

        $r6 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r5);

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        return $r3;
    }

    public java.lang.String getOutputPropertyNoDefault(java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.util.Properties $r2;
        java.lang.Object[] $r6;
        java.lang.IllegalArgumentException $r5;
        org.apache.xalan.templates.OutputProperties $r1;
        java.lang.Object $r4;
        java.lang.String r3, $r7, r8;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter0: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r4 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r3);

        r8 = (java.lang.String) $r4;

        if null != r8 goto label1;

        $z0 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r3);

        if $z0 != 0 goto label1;

        $r5 = new java.lang.IllegalArgumentException;

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = r3;

        $r7 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r6);

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7);

        throw $r5;

     label1:
        return r8;
    }

    public void setOutputProperty(java.lang.String, java.lang.String) throws java.lang.IllegalArgumentException
    {
        java.lang.Throwable $r13;
        java.lang.Object[] $r7;
        java.lang.IllegalArgumentException $r6;
        org.apache.xalan.templates.StylesheetRoot $r9;
        org.apache.xalan.templates.OutputProperties $r2, $r5, $r10, $r12;
        java.lang.Boolean r1;
        java.lang.Object $r11;
        java.lang.String r3, r4, $r8;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        if null != $r2 goto label2;

        $r9 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $r10 = virtualinvoke $r9.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.OutputProperties getOutputComposed()>();

        $r11 = virtualinvoke $r10.<org.apache.xalan.templates.OutputProperties: java.lang.Object clone()>();

        $r12 = (org.apache.xalan.templates.OutputProperties) $r11;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = $r12;

     label2:
        $z0 = staticinvoke <org.apache.xalan.templates.OutputProperties: boolean isLegalPropertyKey(java.lang.String)>(r3);

        if $z0 != 0 goto label3;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = newarray (java.lang.Object)[1];

        $r7[0] = r3;

        $r8 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_OUTPUT_PROPERTY_NOT_RECOGNIZED", $r7);

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8);

        throw $r6;

     label3:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        virtualinvoke $r5.<org.apache.xalan.templates.OutputProperties: void setProperty(java.lang.String,java.lang.String)>(r3, r4);

        exitmonitor r1;

        goto label5;

     label4:
        $r13 := @caughtexception;

        exitmonitor r1;

        throw $r13;

     label5:
        return;

        catch java.lang.Throwable from label1 to label4 with label4;
    }

    public void setOutputProperties(java.util.Properties) throws java.lang.IllegalArgumentException
    {
        java.lang.Throwable $r8;
        java.util.Properties r2, $r12;
        org.apache.xalan.templates.StylesheetRoot $r11;
        org.apache.xalan.templates.OutputProperties $r5, $r6, $r7, $r9, $r10;
        java.lang.Boolean r1;
        java.lang.Object $r3;
        java.lang.String r4;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: java.util.Properties;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        if null == r2 goto label4;

        $r3 = virtualinvoke r2.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>("method");

        r4 = (java.lang.String) $r3;

        if null == r4 goto label2;

        $r7 = new org.apache.xalan.templates.OutputProperties;

        specialinvoke $r7.<org.apache.xalan.templates.OutputProperties: void <init>(java.lang.String)>(r4);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = $r7;

        goto label3;

     label2:
        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        if $r5 != null goto label3;

        $r6 = new org.apache.xalan.templates.OutputProperties;

        specialinvoke $r6.<org.apache.xalan.templates.OutputProperties: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = $r6;

     label3:
        $r9 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        virtualinvoke $r9.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties)>(r2);

        $r10 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $r12 = virtualinvoke $r11.<org.apache.xalan.templates.StylesheetRoot: java.util.Properties getOutputProperties()>();

        virtualinvoke $r10.<org.apache.xalan.templates.OutputProperties: void copyFrom(java.util.Properties)>($r12);

        goto label5;

     label4:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = null;

     label5:
        exitmonitor r1;

        goto label7;

     label6:
        $r8 := @caughtexception;

        exitmonitor r1;

        throw $r8;

     label7:
        return;

        catch java.lang.Throwable from label1 to label6 with label6;
    }

    public java.util.Properties getOutputProperties()
    {
        java.util.Properties $r2, $r4;
        org.apache.xalan.templates.OutputProperties $r1;
        java.lang.Object $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r2 = virtualinvoke $r1.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r3 = virtualinvoke $r2.<java.util.Hashtable: java.lang.Object clone()>();

        $r4 = (java.util.Properties) $r3;

        return $r4;
    }

    public org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.OutputProperties $r2;
        javax.xml.transform.Result r1;
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Result;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties getOutputFormat()>();

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result,org.apache.xalan.templates.OutputProperties)>(r1, $r2);

        return $r3;
    }

    public org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result, org.apache.xalan.templates.OutputProperties) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.stream.StreamResult r50;
        javax.xml.transform.sax.SAXResult $r19;
        org.w3c.dom.Document $r34, $r43, r44;
        org.apache.xalan.transformer.TransformerClient $r27;
        org.apache.xml.serializer.Serializer $r8;
        org.w3c.dom.DocumentFragment $r39;
        org.apache.xalan.transformer.XalanTransformState $r63;
        java.lang.Object[] $r2;
        javax.xml.transform.TransformerException $r65, $r66, $r67;
        short $s1, s2;
        java.lang.String $r4, $r5, $r11, $r13, $r14, $r16, $r21, $r22, $r23, $r24, $r36, $r48, $r49, r52;
        java.util.Properties $r7;
        java.io.FileOutputStream $r54, $r64;
        java.io.IOException $r40;
        javax.xml.transform.Result r0;
        org.apache.xml.serializer.SerializationHandler r46, r51;
        org.xml.sax.ext.LexicalHandler $r38, r47;
        org.apache.xalan.templates.OutputProperties r6;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.xml.serializer.ToTextSAXHandler $r61;
        org.apache.xml.utils.DOMBuilder $r45, $r56, $r57;
        java.io.Writer $r9, $r18;
        org.w3c.dom.Node $r33, r42;
        int $i0, $i3, $i4;
        org.xml.sax.ContentHandler $r20;
        java.io.OutputStream $r10, $r17;
        org.apache.xml.serializer.ToXMLSAXHandler $r58, $r62;
        java.lang.IllegalArgumentException $r59;
        org.apache.xalan.templates.StylesheetRoot $r55;
        java.lang.Class $r3;
        javax.xml.transform.dom.DOMResult $r32, $r35;
        org.apache.xml.serializer.ToHTMLSAXHandler $r60;
        org.apache.xalan.transformer.TransformerImpl r15;
        org.apache.xml.serializer.ToSAXHandler $r28;

        r15 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: javax.xml.transform.Result;

        r6 := @parameter1: org.apache.xalan.templates.OutputProperties;

        $z0 = r0 instanceof javax.xml.transform.dom.DOMResult;

        if $z0 == 0 goto label07;

        $r32 = (javax.xml.transform.dom.DOMResult) r0;

        $r33 = virtualinvoke $r32.<javax.xml.transform.dom.DOMResult: org.w3c.dom.Node getNode()>();

        r42 = $r33;

        if null == $r33 goto label03;

        $s1 = interfaceinvoke $r33.<org.w3c.dom.Node: short getNodeType()>();

        s2 = $s1;

        $i3 = (int) $s1;

        if 9 != $i3 goto label01;

        $r43 = (org.w3c.dom.Document) $r33;

        goto label02;

     label01:
        $r43 = interfaceinvoke $r33.<org.w3c.dom.Node: org.w3c.dom.Document getOwnerDocument()>();

     label02:
        r44 = $r43;

        goto label04;

     label03:
        $r34 = staticinvoke <org.apache.xml.utils.DOMHelper: org.w3c.dom.Document createDocument()>();

        r44 = $r34;

        r42 = $r34;

        s2 = interfaceinvoke $r34.<org.w3c.dom.Node: short getNodeType()>();

        $r35 = (javax.xml.transform.dom.DOMResult) r0;

        virtualinvoke $r35.<javax.xml.transform.dom.DOMResult: void setNode(org.w3c.dom.Node)>($r34);

     label04:
        $i4 = (int) s2;

        if 11 != $i4 goto label05;

        $r56 = new org.apache.xml.utils.DOMBuilder;

        $r45 = $r56;

        $r39 = (org.w3c.dom.DocumentFragment) r42;

        specialinvoke $r56.<org.apache.xml.utils.DOMBuilder: void <init>(org.w3c.dom.Document,org.w3c.dom.DocumentFragment)>(r44, $r39);

        goto label06;

     label05:
        $r57 = new org.apache.xml.utils.DOMBuilder;

        $r45 = $r57;

        specialinvoke $r57.<org.apache.xml.utils.DOMBuilder: void <init>(org.w3c.dom.Document,org.w3c.dom.Node)>(r44, r42);

     label06:
        $r36 = virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("encoding");

        $r58 = new org.apache.xml.serializer.ToXMLSAXHandler;

        $r38 = (org.xml.sax.ext.LexicalHandler) $r45;

        specialinvoke $r58.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>($r45, $r38, $r36);

        r46 = $r58;

        goto label29;

     label07:
        $z1 = r0 instanceof javax.xml.transform.sax.SAXResult;

        if $z1 == 0 goto label17;

        $r19 = (javax.xml.transform.sax.SAXResult) r0;

        $r20 = virtualinvoke $r19.<javax.xml.transform.sax.SAXResult: org.xml.sax.ContentHandler getHandler()>();

        if null != $r20 goto label08;

        $r59 = new java.lang.IllegalArgumentException;

        specialinvoke $r59.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("handler can not be null for a SAXResult");

        throw $r59;

     label08:
        $z4 = $r20 instanceof org.xml.sax.ext.LexicalHandler;

        if $z4 == 0 goto label09;

        r47 = (org.xml.sax.ext.LexicalHandler) $r20;

        goto label10;

     label09:
        r47 = null;

     label10:
        $r21 = virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("encoding");

        $r22 = virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("method");

        $r23 = "html";

        $z5 = virtualinvoke $r23.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z5 == 0 goto label11;

        $r60 = new org.apache.xml.serializer.ToHTMLSAXHandler;

        specialinvoke $r60.<org.apache.xml.serializer.ToHTMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>($r20, r47, $r21);

        r46 = $r60;

        goto label13;

     label11:
        $r24 = "text";

        $z6 = virtualinvoke $r24.<java.lang.String: boolean equals(java.lang.Object)>($r22);

        if $z6 == 0 goto label12;

        $r61 = new org.apache.xml.serializer.ToTextSAXHandler;

        specialinvoke $r61.<org.apache.xml.serializer.ToTextSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>($r20, r47, $r21);

        r46 = $r61;

        goto label13;

     label12:
        $r62 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r62.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>($r20, r47, $r21);

        virtualinvoke $r62.<org.apache.xml.serializer.ToSAXHandler: void setShouldOutputNSAttr(boolean)>(0);

        r46 = $r62;

     label13:
        $r48 = virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("doctype-public");

        $r49 = virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("doctype-system");

        if $r49 == null goto label14;

        interfaceinvoke r46.<org.apache.xml.serializer.XSLOutputAttributes: void setDoctypeSystem(java.lang.String)>($r49);

     label14:
        if $r48 == null goto label15;

        interfaceinvoke r46.<org.apache.xml.serializer.XSLOutputAttributes: void setDoctypePublic(java.lang.String)>($r48);

     label15:
        $z7 = $r20 instanceof org.apache.xalan.transformer.TransformerClient;

        if $z7 == 0 goto label16;

        $r63 = new org.apache.xalan.transformer.XalanTransformState;

        specialinvoke $r63.<org.apache.xalan.transformer.XalanTransformState: void <init>()>();

        $r27 = (org.apache.xalan.transformer.TransformerClient) $r20;

        interfaceinvoke $r27.<org.apache.xalan.transformer.TransformerClient: void setTransformState(org.apache.xalan.transformer.TransformState)>($r63);

        $r28 = (org.apache.xml.serializer.ToSAXHandler) r46;

        virtualinvoke $r28.<org.apache.xml.serializer.ToSAXHandler: void setTransformState(org.apache.xml.serializer.TransformStateSetter)>($r63);

     label16:
        goto label29;

     label17:
        $z2 = r0 instanceof javax.xml.transform.stream.StreamResult;

        if $z2 == 0 goto label28;

        r50 = (javax.xml.transform.stream.StreamResult) r0;

        virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.lang.String getProperty(java.lang.String)>("method");

     label18:
        $r7 = virtualinvoke r6.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r8 = staticinvoke <org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)>($r7);

        r51 = (org.apache.xml.serializer.SerializationHandler) $r8;

        $r9 = virtualinvoke r50.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        if null == $r9 goto label19;

        $r18 = virtualinvoke r50.<javax.xml.transform.stream.StreamResult: java.io.Writer getWriter()>();

        interfaceinvoke r51.<org.apache.xml.serializer.Serializer: void setWriter(java.io.Writer)>($r18);

        goto label24;

     label19:
        $r10 = virtualinvoke r50.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        if null == $r10 goto label20;

        $r17 = virtualinvoke r50.<javax.xml.transform.stream.StreamResult: java.io.OutputStream getOutputStream()>();

        interfaceinvoke r51.<org.apache.xml.serializer.Serializer: void setOutputStream(java.io.OutputStream)>($r17);

        goto label24;

     label20:
        $r11 = virtualinvoke r50.<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>();

        if null == $r11 goto label23;

        $r14 = virtualinvoke r50.<javax.xml.transform.stream.StreamResult: java.lang.String getSystemId()>();

        r52 = $r14;

        $z3 = virtualinvoke $r14.<java.lang.String: boolean startsWith(java.lang.String)>("file:///");

        if $z3 == 0 goto label22;

        $r16 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>(8);

        $i0 = virtualinvoke $r16.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i0 <= 0 goto label21;

        r52 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>(8);

        goto label22;

     label21:
        r52 = virtualinvoke $r14.<java.lang.String: java.lang.String substring(int)>(7);

     label22:
        $r64 = new java.io.FileOutputStream;

        specialinvoke $r64.<java.io.FileOutputStream: void <init>(java.lang.String)>(r52);

        r15.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream> = $r64;

        $r54 = r15.<org.apache.xalan.transformer.TransformerImpl: java.io.FileOutputStream m_outputStream>;

        interfaceinvoke r51.<org.apache.xml.serializer.Serializer: void setOutputStream(java.io.OutputStream)>($r54);

        goto label24;

     label23:
        $r65 = new javax.xml.transform.TransformerException;

        $r13 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NO_OUTPUT_SPECIFIED", null);

        specialinvoke $r65.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r13);

        throw $r65;

     label24:
        r46 = r51;

     label25:
        goto label27;

     label26:
        $r40 := @caughtexception;

        $r66 = new javax.xml.transform.TransformerException;

        specialinvoke $r66.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r40);

        throw $r66;

     label27:
        goto label29;

     label28:
        $r67 = new javax.xml.transform.TransformerException;

        $r2 = newarray (java.lang.Object)[1];

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r2[0] = $r4;

        $r5 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_CANNOT_TRANSFORM_TO_RESULT_TYPE", $r2);

        specialinvoke $r67.<javax.xml.transform.TransformerException: void <init>(java.lang.String)>($r5);

        throw $r67;

     label29:
        interfaceinvoke r46.<org.apache.xml.serializer.SerializationHandler: void setTransformer(javax.xml.transform.Transformer)>(r15);

        $r55 = virtualinvoke r15.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        interfaceinvoke r46.<org.apache.xml.serializer.ExtendedContentHandler: void setSourceLocator(javax.xml.transform.SourceLocator)>($r55);

        return r46;

        catch java.io.IOException from label18 to label25 with label26;
    }

    public void transform(javax.xml.transform.Source, javax.xml.transform.Result) throws javax.xml.transform.TransformerException
    {
        javax.xml.transform.Result r2;
        javax.xml.transform.Source r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r2 := @parameter1: javax.xml.transform.Result;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transform(javax.xml.transform.Source,javax.xml.transform.Result,boolean)>(r1, r2, 1);

        return;
    }

    public void transform(javax.xml.transform.Source, javax.xml.transform.Result, boolean) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r5;
        java.lang.Boolean r1;
        javax.xml.transform.Result r2;
        javax.xml.transform.Source r4;
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r3;
        boolean z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r4 := @parameter0: javax.xml.transform.Source;

        r2 := @parameter1: javax.xml.transform.Result;

        z0 := @parameter2: boolean;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result)>(r2);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)>($r3);

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = r2;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transform(javax.xml.transform.Source,boolean)>(r4, z0);

        exitmonitor r1;

        goto label3;

     label2:
        $r5 := @caughtexception;

        exitmonitor r1;

        throw $r5;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void transformNode(int, javax.xml.transform.Result) throws javax.xml.transform.TransformerException
    {
        int i0;
        javax.xml.transform.Result r1;
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: javax.xml.transform.Result;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler createSerializationHandler(javax.xml.transform.Result)>(r1);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)>($r2);

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Result m_outputTarget> = r1;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transformNode(int)>(i0);

        return;
    }

    public void transformNode(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetComposed $r5;
        org.apache.xml.serializer.SerializationHandler r2, $r8, $r9, $r25, $r27, $r33, $r36;
        boolean $z0, $z1, $z2, $z3, $z4;
        javax.xml.transform.SourceLocator $r31;
        org.apache.xalan.templates.ElemTemplateElement r38;
        java.lang.Exception $r12, $r22, $r24, r39;
        org.apache.xml.utils.SAXSourceLocator $r42, $r44, $r46;
        java.lang.Throwable $r10, $r11, $r37;
        javax.xml.transform.TransformerException $r20, r40, $r47, $r48;
        org.apache.xpath.axes.SelfIteratorNoPredicate $r41;
        javax.xml.transform.ErrorListener $r14, $r16, $r21;
        org.apache.xalan.templates.Stylesheet $r6;
        org.apache.xpath.XPathContext $r3;
        int i0, $i1, $i2, i3, i4, $i6;
        java.lang.String $r17, $r28, $r34;
        org.apache.xml.utils.WrappedRuntimeException $r23;
        org.apache.xalan.templates.StylesheetRoot $r1, $r4;
        org.xml.sax.SAXParseException $r19, $r35, $r43, $r45;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setExtensionsTable(org.apache.xalan.templates.StylesheetRoot)>($r1);

        r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        entermonitor r2;

     label01:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 0;

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        virtualinvoke $r3.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

     label02:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushGlobalVars(int)>(i0);

        $r4 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $i1 = virtualinvoke $r4.<org.apache.xalan.templates.StylesheetRoot: int getGlobalImportCount()>();

        i3 = 0;

        goto label08;

     label03:
        $r5 = virtualinvoke $r4.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.StylesheetComposed getGlobalImport(int)>(i3);

        $i2 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetComposed: int getIncludeCountComposed()>();

        $i6 = (int) -1;

        i4 = $i6;

        goto label07;

     label04:
        $r6 = virtualinvoke $r5.<org.apache.xalan.templates.StylesheetComposed: org.apache.xalan.templates.Stylesheet getIncludeComposed(int)>(i4);

        virtualinvoke $r6.<org.apache.xalan.templates.ElemTemplateElement: void runtimeInit(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r38 = virtualinvoke $r6.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        goto label06;

     label05:
        virtualinvoke r38.<org.apache.xalan.templates.ElemTemplateElement: void runtimeInit(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r38 = virtualinvoke r38.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

     label06:
        if r38 != null goto label05;

        i4 = i4 + 1;

     label07:
        if i4 < $i2 goto label04;

        i3 = i3 + 1;

     label08:
        if i3 < $i1 goto label03;

        $r41 = new org.apache.xpath.axes.SelfIteratorNoPredicate;

        specialinvoke $r41.<org.apache.xpath.axes.SelfIteratorNoPredicate: void <init>()>();

        interfaceinvoke $r41.<org.apache.xml.dtm.DTMIterator: void setRoot(int,java.lang.Object)>(i0, $r3);

        virtualinvoke $r3.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>($r41);

     label09:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement,org.apache.xalan.templates.ElemTemplate,int)>(null, null, i0);

        goto label34;

     label10:
        goto label13;

     label11:
        $r37 := @caughtexception;

        goto label35;

     label12:
        throw $r37;

     label13:
        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if null == $r8 goto label14;

        $r9 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r9.<org.xml.sax.ContentHandler: void endDocument()>();

     label14:
        goto label36;

     label15:
        goto label31;

     label16:
        $r22 := @caughtexception;

        r39 = $r22;

        goto label18;

     label17:
        $r23 = (org.apache.xml.utils.WrappedRuntimeException) r39;

        $r24 = virtualinvoke $r23.<org.apache.xml.utils.WrappedRuntimeException: java.lang.Exception getException()>();

        if null == $r24 goto label18;

        r39 = $r24;

     label18:
        $z3 = r39 instanceof org.apache.xml.utils.WrappedRuntimeException;

        if $z3 != 0 goto label17;

        $r25 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if null == $r25 goto label24;

     label19:
        $z1 = r39 instanceof org.xml.sax.SAXParseException;

        if $z1 == 0 goto label20;

        $r36 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r35 = (org.xml.sax.SAXParseException) r39;

        interfaceinvoke $r36.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r35);

        goto label22;

     label20:
        $z2 = r39 instanceof javax.xml.transform.TransformerException;

        if $z2 == 0 goto label21;

        r40 = (javax.xml.transform.TransformerException) r39;

        $r42 = new org.apache.xml.utils.SAXSourceLocator;

        $r31 = virtualinvoke r40.<javax.xml.transform.TransformerException: javax.xml.transform.SourceLocator getLocator()>();

        specialinvoke $r42.<org.apache.xml.utils.SAXSourceLocator: void <init>(javax.xml.transform.SourceLocator)>($r31);

        $r33 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r43 = new org.xml.sax.SAXParseException;

        $r34 = virtualinvoke r40.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r43.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r34, $r42, r40);

        interfaceinvoke $r33.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r43);

        goto label22;

     label21:
        $r27 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r45 = new org.xml.sax.SAXParseException;

        $r28 = virtualinvoke r39.<java.lang.Throwable: java.lang.String getMessage()>();

        $r44 = new org.apache.xml.utils.SAXSourceLocator;

        specialinvoke $r44.<org.apache.xml.utils.SAXSourceLocator: void <init>()>();

        specialinvoke $r45.<org.xml.sax.SAXParseException: void <init>(java.lang.String,org.xml.sax.Locator,java.lang.Exception)>($r28, $r44, r39);

        interfaceinvoke $r27.<org.xml.sax.ErrorHandler: void fatalError(org.xml.sax.SAXParseException)>($r45);

     label22:
        goto label24;

     label23:
        $r12 := @caughtexception;

     label24:
        $z4 = r39 instanceof javax.xml.transform.TransformerException;

        if $z4 == 0 goto label25;

        $r21 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r20 = (javax.xml.transform.TransformerException) r39;

        interfaceinvoke $r21.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r20);

        goto label27;

     label25:
        $z0 = r39 instanceof org.xml.sax.SAXParseException;

        if $z0 == 0 goto label26;

        $r16 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r47 = new javax.xml.transform.TransformerException;

        $r17 = virtualinvoke r39.<java.lang.Throwable: java.lang.String getMessage()>();

        $r46 = new org.apache.xml.utils.SAXSourceLocator;

        $r19 = (org.xml.sax.SAXParseException) r39;

        specialinvoke $r46.<org.apache.xml.utils.SAXSourceLocator: void <init>(org.xml.sax.SAXParseException)>($r19);

        specialinvoke $r47.<javax.xml.transform.TransformerException: void <init>(java.lang.String,javax.xml.transform.SourceLocator,java.lang.Throwable)>($r17, $r46, r39);

        interfaceinvoke $r16.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r47);

        goto label27;

     label26:
        $r14 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        $r48 = new javax.xml.transform.TransformerException;

        specialinvoke $r48.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>(r39);

        interfaceinvoke $r14.<javax.xml.transform.ErrorListener: void fatalError(javax.xml.transform.TransformerException)>($r48);

     label27:
        goto label37;

     label28:
        goto label31;

     label29:
        $r11 := @caughtexception;

        goto label38;

     label30:
        throw $r11;

     label31:
        exitmonitor r2;

        goto label33;

     label32:
        $r10 := @caughtexception;

        exitmonitor r2;

        throw $r10;

     label33:
        return;

     label34:
        virtualinvoke $r3.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        goto label10;

     label35:
        virtualinvoke $r3.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        goto label12;

     label36:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label15;

     label37:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label28;

     label38:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void reset()>();

        goto label30;

     label39:
        nop;

        catch java.lang.Throwable from label09 to label11 with label11;
        catch java.lang.Exception from label02 to label14 with label16;
        catch java.lang.Exception from label19 to label22 with label23;
        catch java.lang.Throwable from label02 to label29 with label29;
        catch java.lang.Throwable from label01 to label32 with label32;
        catch java.lang.Exception from label34 to label35 with label16;
        catch java.lang.Throwable from label34 to label35 with label29;
        catch java.lang.Exception from label35 to label36 with label16;
        catch java.lang.Throwable from label35 to label36 with label29;
        catch java.lang.Throwable from label36 to label37 with label32;
        catch java.lang.Throwable from label37 to label38 with label32;
        catch java.lang.Throwable from label38 to label39 with label32;
    }

    public org.xml.sax.ContentHandler getInputContentHandler()
    {
        org.xml.sax.ContentHandler $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler getInputContentHandler(boolean)>(0);

        return $r1;
    }

    public org.xml.sax.ContentHandler getInputContentHandler(boolean)
    {
        org.apache.xalan.transformer.TransformerHandlerImpl $r3;
        org.xml.sax.ContentHandler $r1, $r2;
        java.lang.String $r4;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        if null != $r1 goto label1;

        $r3 = new org.apache.xalan.transformer.TransformerHandlerImpl;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.String m_urlOfSource>;

        specialinvoke $r3.<org.apache.xalan.transformer.TransformerHandlerImpl: void <init>(org.apache.xalan.transformer.TransformerImpl,boolean,java.lang.String)>(r0, z0, $r4);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        return $r2;
    }

    public org.xml.sax.ext.DeclHandler getInputDeclHandler()
    {
        org.xml.sax.ext.DeclHandler $r3;
        org.xml.sax.ContentHandler $r1, $r2;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z0 = $r1 instanceof org.xml.sax.ext.DeclHandler;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r3 = (org.xml.sax.ext.DeclHandler) $r2;

        return $r3;

     label1:
        return null;
    }

    public org.xml.sax.ext.LexicalHandler getInputLexicalHandler()
    {
        org.xml.sax.ext.LexicalHandler $r3;
        org.xml.sax.ContentHandler $r1, $r2;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z0 = $r1 instanceof org.xml.sax.ext.LexicalHandler;

        if $z0 == 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r3 = (org.xml.sax.ext.LexicalHandler) $r2;

        return $r3;

     label1:
        return null;
    }

    public void setOutputFormat(org.apache.xalan.templates.OutputProperties)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.templates.OutputProperties r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.OutputProperties;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat> = r1;

        return;
    }

    public org.apache.xalan.templates.OutputProperties getOutputFormat()
    {
        org.apache.xalan.templates.StylesheetRoot $r2;
        org.apache.xalan.templates.OutputProperties $r1, $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

        if null != $r1 goto label1;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $r3 = virtualinvoke $r2.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.OutputProperties getOutputComposed()>();

        goto label2;

     label1:
        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_outputFormat>;

     label2:
        return $r3;
    }

    public void setParameter(java.lang.String, java.lang.String, java.lang.Object)
    {
        org.apache.xalan.templates.ElemVariable r12;
        java.util.Vector $r10;
        org.apache.xpath.VariableStack $r2;
        org.apache.xpath.XPathContext $r1, $r7;
        int $i0, i1, $i3;
        java.lang.String r4, r5;
        boolean $z0;
        org.apache.xml.utils.QName $r13, $r14;
        org.apache.xalan.templates.StylesheetRoot r9;
        org.apache.xpath.objects.XObject $r8;
        java.lang.Object r6, $r11;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r5 := @parameter0: java.lang.String;

        r4 := @parameter1: java.lang.String;

        r6 := @parameter2: java.lang.Object;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $r14 = new org.apache.xml.utils.QName;

        specialinvoke $r14.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>(r4, r5);

        $r7 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r8 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r6, $r7);

        r9 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $r10 = virtualinvoke r9.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getVariablesAndParamsComposed()>();

        i1 = virtualinvoke $r10.<java.util.Vector: int size()>();

        goto label2;

     label1:
        $r11 = virtualinvoke $r10.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r12 = (org.apache.xalan.templates.ElemVariable) $r11;

        $i0 = virtualinvoke r12.<org.apache.xalan.templates.ElemVariable: int getXSLToken()>();

        if $i0 != 41 goto label2;

        $r13 = virtualinvoke r12.<org.apache.xalan.templates.ElemVariable: org.apache.xml.utils.QName getName()>();

        $z0 = virtualinvoke $r13.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r14);

        if $z0 == 0 goto label2;

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void setGlobalVariable(int,org.apache.xpath.objects.XObject)>(i1, $r8);

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

        if i1 >= 0 goto label1;

        return;
    }

    public void setParameter(java.lang.String, java.lang.Object)
    {
        java.lang.Object[] $r15;
        java.util.Vector $r6, $r13;
        java.util.StringTokenizer $r1;
        org.apache.xpath.XPathContext $r8, $r11;
        java.lang.String r2, $r3, r4, $r16, $r18;
        java.util.NoSuchElementException $r17;
        boolean $z0;
        org.apache.xml.utils.QName $r7, $r10;
        java.lang.IllegalArgumentException $r14;
        org.apache.xpath.objects.XObject $r9, $r12;
        java.lang.Object r0;
        org.apache.xalan.transformer.TransformerImpl r5;

        r5 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: java.lang.String;

        r0 := @parameter1: java.lang.Object;

        if r0 != null goto label1;

        $r14 = new java.lang.IllegalArgumentException;

        $r15 = newarray (java.lang.Object)[1];

        $r15[0] = r2;

        $r16 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_INVALID_SET_PARAM_VALUE", $r15);

        specialinvoke $r14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16);

        throw $r14;

     label1:
        $r1 = new java.util.StringTokenizer;

        specialinvoke $r1.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>(r2, "{}", 0);

     label2:
        $r3 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke $r1.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r18 = virtualinvoke $r1.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label4;

     label3:
        $r18 = null;

     label4:
        r4 = $r18;

        $r6 = r5.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        if null != $r6 goto label5;

        $r13 = new java.util.Vector;

        specialinvoke $r13.<java.util.Vector: void <init>()>();

        r5.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams> = $r13;

     label5:
        if null != r4 goto label6;

        $r10 = new org.apache.xml.utils.QName;

        specialinvoke $r10.<org.apache.xml.utils.QName: void <init>(java.lang.String)>($r3);

        $r11 = virtualinvoke r5.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r12 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r0, $r11);

        specialinvoke r5.<org.apache.xalan.transformer.TransformerImpl: void replaceOrPushUserParam(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject)>($r10, $r12);

        virtualinvoke r5.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>($r3, null, r0);

        goto label7;

     label6:
        $r7 = new org.apache.xml.utils.QName;

        specialinvoke $r7.<org.apache.xml.utils.QName: void <init>(java.lang.String,java.lang.String)>($r3, r4);

        $r8 = virtualinvoke r5.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext getXPathContext()>();

        $r9 = staticinvoke <org.apache.xpath.objects.XObject: org.apache.xpath.objects.XObject create(java.lang.Object,org.apache.xpath.XPathContext)>(r0, $r8);

        specialinvoke r5.<org.apache.xalan.transformer.TransformerImpl: void replaceOrPushUserParam(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject)>($r7, $r9);

        virtualinvoke r5.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>(r4, $r3, r0);

     label7:
        goto label9;

     label8:
        $r17 := @caughtexception;

     label9:
        return;

        catch java.util.NoSuchElementException from label2 to label7 with label8;
    }

    private void replaceOrPushUserParam(org.apache.xml.utils.QName, org.apache.xpath.objects.XObject)
    {
        java.util.Vector $r1, $r2, $r9, $r11;
        int $i0, i1, $i3;
        boolean $z0;
        org.apache.xml.utils.QName $r5, r6;
        org.apache.xpath.Arg r4, $r12, $r13;
        org.apache.xpath.objects.XObject r8;
        java.lang.Object $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r6 := @parameter0: org.apache.xml.utils.QName;

        r8 := @parameter1: org.apache.xpath.objects.XObject;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $i0 = virtualinvoke $r1.<java.util.Vector: int size()>();

        i1 = $i0 - 1;

        goto label3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r3 = virtualinvoke $r2.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r4 = (org.apache.xpath.Arg) $r3;

        $r5 = virtualinvoke r4.<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()>();

        $z0 = virtualinvoke $r5.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>(r6);

        if $z0 == 0 goto label2;

        $r9 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r12 = new org.apache.xpath.Arg;

        specialinvoke $r12.<org.apache.xpath.Arg: void <init>(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject,boolean)>(r6, r8, 1);

        virtualinvoke $r9.<java.util.Vector: void setElementAt(java.lang.Object,int)>($r12, i1);

        return;

     label2:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label3:
        if i1 >= 0 goto label1;

        $r11 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r13 = new org.apache.xpath.Arg;

        specialinvoke $r13.<org.apache.xpath.Arg: void <init>(org.apache.xml.utils.QName,org.apache.xpath.objects.XObject,boolean)>(r6, r8, 1);

        virtualinvoke $r11.<java.util.Vector: void addElement(java.lang.Object)>($r13);

        return;
    }

    public java.lang.Object getParameter(java.lang.String)
    {
        java.util.Vector $r3, $r4, $r5;
        int $i0, i1, $i3;
        java.lang.String r0;
        java.util.NoSuchElementException $r11;
        boolean $z0;
        org.apache.xml.utils.QName $r1, $r8;
        org.apache.xpath.Arg r7;
        org.apache.xpath.objects.XObject $r9;
        java.lang.Object $r6, $r10;
        org.apache.xalan.transformer.TransformerImpl r2;

        r2 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <org.apache.xml.utils.QName: org.apache.xml.utils.QName getQNameFromString(java.lang.String)>(r0);

        $r3 = r2.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        if null != $r3 goto label2;

        return null;

     label2:
        $r4 = r2.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i1 = $i0 - 1;

        goto label5;

     label3:
        $r5 = r2.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r6 = virtualinvoke $r5.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r7 = (org.apache.xpath.Arg) $r6;

        $r8 = virtualinvoke r7.<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()>();

        $z0 = virtualinvoke $r8.<org.apache.xml.utils.QName: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label4;

        $r9 = virtualinvoke r7.<org.apache.xpath.Arg: org.apache.xpath.objects.XObject getVal()>();

        $r10 = virtualinvoke $r9.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        return $r10;

     label4:
        $i3 = (int) -1;

        i1 = i1 + $i3;

     label5:
        if i1 >= 0 goto label3;

        return null;

     label6:
        $r11 := @caughtexception;

        return null;

        catch java.util.NoSuchElementException from label1 to label6 with label6;
    }

    private void resetUserParameters()
    {
        org.apache.xml.utils.QName $r6;
        org.apache.xpath.Arg r5;
        java.util.Vector $r1, $r2, $r3;
        int $i0, i1, $i3;
        org.apache.xpath.objects.XObject $r9;
        java.lang.Object $r4, $r10;
        java.lang.String $r7, $r8;
        java.util.NoSuchElementException $r11;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

     label1:
        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        if null != $r1 goto label2;

        return;

     label2:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $i0 = virtualinvoke $r2.<java.util.Vector: int size()>();

        i1 = $i0 - 1;

        goto label4;

     label3:
        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams>;

        $r4 = virtualinvoke $r3.<java.util.Vector: java.lang.Object elementAt(int)>(i1);

        r5 = (org.apache.xpath.Arg) $r4;

        $r6 = virtualinvoke r5.<org.apache.xpath.Arg: org.apache.xml.utils.QName getQName()>();

        $r7 = virtualinvoke $r6.<org.apache.xml.utils.QName: java.lang.String getNamespace()>();

        $r8 = virtualinvoke $r6.<org.apache.xml.utils.QName: java.lang.String getLocalPart()>();

        $r9 = virtualinvoke r5.<org.apache.xpath.Arg: org.apache.xpath.objects.XObject getVal()>();

        $r10 = virtualinvoke $r9.<org.apache.xpath.objects.XObject: java.lang.Object object()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>($r8, $r7, $r10);

        $i3 = (int) -1;

        i1 = i1 + $i3;

     label4:
        if i1 >= 0 goto label3;

     label5:
        goto label7;

     label6:
        $r11 := @caughtexception;

     label7:
        return;

        catch java.util.NoSuchElementException from label1 to label5 with label6;
    }

    public void setParameters(java.util.Properties)
    {
        java.util.Properties r1;
        java.util.Enumeration $r2;
        java.util.StringTokenizer $r6;
        java.lang.Object $r3;
        java.lang.String $r4, $r5, $r7, $r8, $r9, $r11;
        java.util.NoSuchElementException $r10;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.util.Properties;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void clearParameters()>();

        $r2 = virtualinvoke r1.<java.util.Properties: java.util.Enumeration propertyNames()>();

        goto label8;

     label1:
        $r3 = interfaceinvoke $r2.<java.util.Enumeration: java.lang.Object nextElement()>();

        $r4 = (java.lang.String) $r3;

        $r5 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r4);

        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String,boolean)>($r5, "{}", 0);

     label2:
        $r7 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $z0 = virtualinvoke $r6.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z0 == 0 goto label3;

        $r11 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        goto label4;

     label3:
        $r11 = null;

     label4:
        if null != $r11 goto label5;

        $r9 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r5);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>($r7, null, $r9);

        goto label6;

     label5:
        $r8 = virtualinvoke r1.<java.util.Properties: java.lang.String getProperty(java.lang.String)>($r5);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setParameter(java.lang.String,java.lang.String,java.lang.Object)>($r11, $r7, $r8);

     label6:
        goto label8;

     label7:
        $r10 := @caughtexception;

     label8:
        $z1 = interfaceinvoke $r2.<java.util.Enumeration: boolean hasMoreElements()>();

        if $z1 != 0 goto label1;

        return;

        catch java.util.NoSuchElementException from label2 to label6 with label7;
    }

    public void clearParameters()
    {
        java.lang.Throwable $r4;
        org.apache.xpath.VariableStack $r2;
        org.apache.xpath.XPathContext $r3;
        java.lang.Boolean r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        $r2 = new org.apache.xpath.VariableStack;

        specialinvoke $r2.<org.apache.xpath.VariableStack: void <init>()>();

        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r3.<org.apache.xpath.XPathContext: void setVarStack(org.apache.xpath.VariableStack)>($r2);

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Vector m_userParams> = null;

        exitmonitor r1;

        goto label3;

     label2:
        $r4 := @caughtexception;

        exitmonitor r1;

        throw $r4;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    protected void pushGlobalVars(int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemVariable r6;
        org.apache.xalan.templates.XUnresolvedVariable $r9;
        org.apache.xalan.templates.StylesheetRoot $r3;
        java.util.Vector $r4;
        org.apache.xpath.VariableStack $r2;
        org.apache.xpath.XPathContext r1;
        int $i0, i1, $i2, i3, $i5;
        org.apache.xpath.objects.XObject $r8;
        java.lang.Object $r5;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i1 := @parameter0: int;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke r1.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $r3 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot getStylesheet()>();

        $r4 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot: java.util.Vector getVariablesAndParamsComposed()>();

        $i0 = virtualinvoke $r4.<java.util.Vector: int size()>();

        i3 = $i0;

        virtualinvoke $r2.<org.apache.xpath.VariableStack: int link(int)>($i0);

        goto label2;

     label1:
        $r5 = virtualinvoke $r4.<java.util.Vector: java.lang.Object elementAt(int)>(i3);

        r6 = (org.apache.xalan.templates.ElemVariable) $r5;

        $r9 = new org.apache.xalan.templates.XUnresolvedVariable;

        $i2 = virtualinvoke $r2.<org.apache.xpath.VariableStack: int getStackFrame()>();

        specialinvoke $r9.<org.apache.xalan.templates.XUnresolvedVariable: void <init>(org.apache.xalan.templates.ElemVariable,int,org.apache.xalan.transformer.TransformerImpl,int,int,boolean)>(r6, i1, r0, $i2, 0, 1);

        $r8 = virtualinvoke $r2.<org.apache.xpath.VariableStack: org.apache.xpath.objects.XObject elementAt(int)>(i3);

        if null != $r8 goto label2;

        virtualinvoke $r2.<org.apache.xpath.VariableStack: void setGlobalVariable(int,org.apache.xpath.objects.XObject)>(i3, $r9);

     label2:
        $i5 = (int) -1;

        i3 = i3 + $i5;

        if i3 >= 0 goto label1;

        return;
    }

    public void setURIResolver(javax.xml.transform.URIResolver)
    {
        java.lang.Throwable $r5;
        org.apache.xpath.XPathContext $r2;
        javax.xml.transform.URIResolver r4;
        java.lang.Boolean r1;
        org.apache.xpath.SourceTreeManager $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r4 := @parameter0: javax.xml.transform.URIResolver;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r3 = virtualinvoke $r2.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        virtualinvoke $r3.<org.apache.xpath.SourceTreeManager: void setURIResolver(javax.xml.transform.URIResolver)>(r4);

        exitmonitor r1;

        goto label3;

     label2:
        $r5 := @caughtexception;

        exitmonitor r1;

        throw $r5;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public javax.xml.transform.URIResolver getURIResolver()
    {
        org.apache.xpath.XPathContext $r1;
        javax.xml.transform.URIResolver $r3;
        org.apache.xpath.SourceTreeManager $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xpath.SourceTreeManager getSourceTreeManager()>();

        $r3 = virtualinvoke $r2.<org.apache.xpath.SourceTreeManager: javax.xml.transform.URIResolver getURIResolver()>();

        return $r3;
    }

    public void setContentHandler(org.xml.sax.ContentHandler)
    {
        org.apache.xml.serializer.ToXMLSAXHandler $r4;
        org.xml.sax.ContentHandler r0;
        java.lang.String $r6;
        java.lang.NullPointerException $r5;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xml.serializer.SerializationHandler $r2, $r3;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: org.xml.sax.ContentHandler;

        if r0 != null goto label1;

        $r5 = new java.lang.NullPointerException;

        $r6 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NULL_CONTENT_HANDLER", null);

        specialinvoke $r5.<java.lang.NullPointerException: void <init>(java.lang.String)>($r6);

        throw $r5;

     label1:
        r1.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_outputContentHandler> = r0;

        $r2 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if null != $r2 goto label2;

        $r4 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r4.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>()>();

        virtualinvoke $r4.<org.apache.xml.serializer.ToSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

        virtualinvoke $r4.<org.apache.xml.serializer.SerializerBase: void setTransformer(javax.xml.transform.Transformer)>(r1);

        r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r4;

        goto label3;

     label2:
        $r3 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r3.<org.apache.xml.serializer.SerializationHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r0);

     label3:
        return;
    }

    public org.xml.sax.ContentHandler getContentHandler()
    {
        org.xml.sax.ContentHandler $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_outputContentHandler>;

        return $r1;
    }

    public int transformToRTF(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r3;
        org.apache.xpath.XPathContext $r1;
        org.apache.xml.dtm.DTM $r2;
        int $i0;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getRTFDTM()>();

        $i0 = specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)>(r3, $r2);

        return $i0;
    }

    public int transformToGlobalRTF(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplateElement r3;
        org.apache.xpath.XPathContext $r1;
        org.apache.xml.dtm.DTM $r2;
        int $i0;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getGlobalRTFDTM()>();

        $i0 = specialinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int transformToRTF(org.apache.xalan.templates.ElemTemplateElement,org.apache.xml.dtm.DTM)>(r3, $r2);

        return $i0;
    }

    private int transformToRTF(org.apache.xalan.templates.ElemTemplateElement, org.apache.xml.dtm.DTM) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.ToXMLSAXHandler $r4;
        java.lang.Throwable $r7, $r10;
        org.apache.xalan.templates.ElemTemplateElement r6;
        javax.xml.transform.TransformerException $r9;
        org.apache.xml.serializer.SerializationHandler r3, r5;
        org.xml.sax.SAXException $r8;
        org.apache.xml.dtm.DTM r1;
        int $i0;
        org.xml.sax.ContentHandler $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r6 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r1 := @parameter1: org.apache.xml.dtm.DTM;

        $r2 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: org.xml.sax.ContentHandler getContentHandler()>();

        r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r4 = new org.apache.xml.serializer.ToXMLSAXHandler;

        specialinvoke $r4.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>()>();

        virtualinvoke $r4.<org.apache.xml.serializer.ToSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)>($r2);

        virtualinvoke $r4.<org.apache.xml.serializer.SerializerBase: void setTransformer(javax.xml.transform.Transformer)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r4;

        r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

     label01:
        interfaceinvoke r5.<org.xml.sax.ContentHandler: void startDocument()>();

        interfaceinvoke r5.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

     label02:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r6, 1);

        interfaceinvoke r5.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        $i0 = interfaceinvoke r1.<org.apache.xml.dtm.DTM: int getDocument()>();

        goto label12;

     label03:
        goto label06;

     label04:
        $r10 := @caughtexception;

        goto label13;

     label05:
        throw $r10;

     label06:
        goto label14;

     label07:
        goto label11;

     label08:
        $r8 := @caughtexception;

        $r9 = new javax.xml.transform.TransformerException;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label09:
        $r7 := @caughtexception;

        goto label15;

     label10:
        throw $r7;

     label11:
        return $i0;

     label12:
        interfaceinvoke r5.<org.xml.sax.ContentHandler: void endDocument()>();

        goto label03;

     label13:
        interfaceinvoke r5.<org.xml.sax.ContentHandler: void endDocument()>();

        goto label05;

     label14:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r3;

        goto label07;

     label15:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r3;

        goto label10;

        catch java.lang.Throwable from label02 to label04 with label04;
        catch org.xml.sax.SAXException from label01 to label06 with label08;
        catch java.lang.Throwable from label01 to label09 with label09;
        catch org.xml.sax.SAXException from label12 to label13 with label08;
        catch java.lang.Throwable from label12 to label13 with label09;
        catch org.xml.sax.SAXException from label13 to label14 with label08;
        catch java.lang.Throwable from label13 to label14 with label09;
    }

    public org.apache.xml.utils.ObjectPool getStringWriterPool()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.ObjectPool $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        return $r1;
    }

    public java.lang.String transformToString(org.apache.xalan.templates.ElemTemplateElement) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.SerializationHandler $r8, $r9, $r10, $r11, $r15, $r16, $r21, $r22, $r28, $r29;
        org.apache.xalan.templates.OutputProperties $r18;
        boolean $z0, $z1;
        org.apache.xalan.templates.ElemTemplateElement r0, $r1;
        java.lang.Exception $r26, $r31;
        org.apache.xml.serializer.Serializer $r20;
        org.xml.sax.SAXException $r34;
        org.apache.xml.utils.ObjectPool $r3, $r5, $r14, $r17, $r27, $r30;
        java.lang.Throwable $r32;
        javax.xml.transform.TransformerException $r35;
        java.lang.StringBuffer $r13, $r33;
        org.apache.xml.serializer.ToTextStream $r7;
        java.lang.String $r12, $r25;
        org.apache.xalan.templates.ElemTextLiteral $r24;
        java.util.Properties $r19;
        java.io.StringWriter $r23;
        java.lang.Object $r4, $r6;
        org.apache.xalan.transformer.TransformerImpl r2;

        r2 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        if null != $r1 goto label01;

        return "";

     label01:
        $z0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean hasTextLitOnly()>();

        if $z0 == 0 goto label02;

        $z1 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        if $z1 == 0 goto label02;

        $r24 = (org.apache.xalan.templates.ElemTextLiteral) $r1;

        $r25 = virtualinvoke $r24.<org.apache.xalan.templates.ElemTextLiteral: java.lang.String getNodeValue()>();

        return $r25;

     label02:
        $r22 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $r3 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        $r4 = virtualinvoke $r3.<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()>();

        $r23 = (java.io.StringWriter) $r4;

        $r5 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool>;

        $r6 = virtualinvoke $r5.<org.apache.xml.utils.ObjectPool: java.lang.Object getInstance()>();

        $r7 = (org.apache.xml.serializer.ToTextStream) $r6;

        r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r7;

        $r8 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        if null != $r8 goto label03;

        $r18 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.OutputProperties m_textformat>;

        $r19 = virtualinvoke $r18.<org.apache.xalan.templates.OutputProperties: java.util.Properties getProperties()>();

        $r20 = staticinvoke <org.apache.xml.serializer.SerializerFactory: org.apache.xml.serializer.Serializer getSerializer(java.util.Properties)>($r19);

        $r21 = (org.apache.xml.serializer.SerializationHandler) $r20;

        r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r21;

     label03:
        $r9 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r9.<org.apache.xml.serializer.SerializationHandler: void setTransformer(javax.xml.transform.Transformer)>(r2);

        $r10 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r10.<org.apache.xml.serializer.Serializer: void setWriter(java.io.Writer)>($r23);

     label04:
        virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r0, 1);

        $r11 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r11.<org.xml.sax.ContentHandler: void endDocument()>();

        $r12 = virtualinvoke $r23.<java.io.StringWriter: java.lang.String toString()>();

     label05:
        goto label11;

     label06:
        goto label10;

     label07:
        $r34 := @caughtexception;

        $r35 = new javax.xml.transform.TransformerException;

        specialinvoke $r35.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r34);

        throw $r35;

     label08:
        $r32 := @caughtexception;

        goto label16;

     label09:
        throw $r32;

     label10:
        return $r12;

     label11:
        $r13 = virtualinvoke $r23.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        virtualinvoke $r13.<java.lang.StringBuffer: void setLength(int)>(0);

     label12:
        virtualinvoke $r23.<java.io.StringWriter: void close()>();

     label13:
        goto label15;

     label14:
        $r31 := @caughtexception;

     label15:
        $r14 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        virtualinvoke $r14.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>($r23);

        $r15 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r15.<org.apache.xml.serializer.Serializer: boolean reset()>();

        $r17 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool>;

        $r16 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        virtualinvoke $r17.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>($r16);

        r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r22;

        goto label06;

     label16:
        $r33 = virtualinvoke $r23.<java.io.StringWriter: java.lang.StringBuffer getBuffer()>();

        virtualinvoke $r33.<java.lang.StringBuffer: void setLength(int)>(0);

     label17:
        virtualinvoke $r23.<java.io.StringWriter: void close()>();

     label18:
        goto label20;

     label19:
        $r26 := @caughtexception;

     label20:
        $r27 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_stringWriterObjectPool>;

        virtualinvoke $r27.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>($r23);

        $r28 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r28.<org.apache.xml.serializer.Serializer: boolean reset()>();

        $r30 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectPool m_textResultHandlerObjectPool>;

        $r29 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        virtualinvoke $r30.<org.apache.xml.utils.ObjectPool: void freeInstance(java.lang.Object)>($r29);

        r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r22;

        goto label09;

        catch org.xml.sax.SAXException from label04 to label05 with label07;
        catch java.lang.Throwable from label04 to label08 with label08;
        catch java.lang.Exception from label12 to label13 with label14;
        catch java.lang.Exception from label17 to label18 with label19;
    }

    public boolean applyTemplateToNode(org.apache.xalan.templates.ElemTemplateElement, org.apache.xalan.templates.ElemTemplate, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.StylesheetComposed $r26, $r27;
        org.apache.xalan.trace.TraceManager $r10, $r11;
        org.apache.xml.serializer.SerializationHandler $r12, $r13;
        org.apache.xalan.templates.ElemTemplate r36;
        org.apache.xpath.VariableStack $r5, $r9, $r32;
        boolean $z0, $z1, $z2, $z3, z4, z5, $z7, $z8, z9, z10, z11;
        org.apache.xml.utils.QName $r19;
        org.apache.xalan.templates.ElemTemplateElement r18;
        org.apache.xml.dtm.DTMManager $r16;
        org.xml.sax.SAXException $r33;
        java.lang.Throwable $r28, $r35;
        javax.xml.transform.TransformerException $r39;
        short $s1;
        org.apache.xpath.XPathContext $r1, $r3, $r4, $r6, $r7, $r8, $r15, $r17, $r25, $r29, $r30, $r31, $r37;
        int i0, $i2, $i3, $i4, i5, i6, $i8, $i10, $i11, $i12, $i13;
        org.apache.xalan.templates.StylesheetRoot $r20, $r21, $r22, $r23, $r24;
        org.apache.xpath.NodeSetDTM $r38;
        org.apache.xml.dtm.DTM $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r18 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r36 := @parameter1: org.apache.xalan.templates.ElemTemplate;

        i0 := @parameter2: int;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTM getDTM(int)>(i0);

        $s1 = interfaceinvoke $r2.<org.apache.xml.dtm.DTM: short getNodeType(int)>(i0);

        z4 = 0;

        z11 = 0;

        z10 = 0;

        z9 = 0;

        z5 = 0;

        if null != r36 goto label18;

        i5 = 0;

        if r18 != null goto label01;

        $z8 = 0;

        $z7 = 0;

        goto label03;

     label01:
        $i3 = virtualinvoke r18.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i3 != 72 goto label02;

        $z8 = 1;

        $z7 = 1;

        goto label03;

     label02:
        $z8 = 0;

        $z7 = 0;

     label03:
        z5 = $z7;

        if $z8 == 0 goto label04;

        $r26 = virtualinvoke r18.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        $i4 = virtualinvoke $r26.<org.apache.xalan.templates.StylesheetComposed: int getImportCountComposed()>();

        i6 = $i4 - 1;

        $r27 = virtualinvoke r18.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.StylesheetComposed getStylesheetComposed()>();

        i5 = virtualinvoke $r27.<org.apache.xalan.templates.StylesheetComposed: int getEndImportCountComposed()>();

        goto label05;

     label04:
        $i8 = (int) -1;

        i6 = $i8;

     label05:
        if z5 == 0 goto label06;

        $i10 = (int) -1;

        if i6 != $i10 goto label06;

        r36 = null;

        goto label13;

     label06:
        $r25 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

     label07:
        virtualinvoke $r25.<org.apache.xpath.XPathContext: void pushNamespaceContext(org.apache.xml.utils.PrefixResolver)>(r18);

        $r19 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.QName getMode()>();

        if z5 == 0 goto label08;

        $r24 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $z3 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings>;

        r36 = virtualinvoke $r24.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,int,int,boolean,org.apache.xml.dtm.DTM)>($r25, i0, $r19, i6, i5, $z3, $r2);

        goto label09;

     label08:
        $r20 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $z2 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings>;

        r36 = virtualinvoke $r20.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getTemplateComposed(org.apache.xpath.XPathContext,int,org.apache.xml.utils.QName,boolean,org.apache.xml.dtm.DTM)>($r25, i0, $r19, $z2, $r2);

     label09:
        goto label31;

     label10:
        goto label13;

     label11:
        $r35 := @caughtexception;

        goto label32;

     label12:
        throw $r35;

     label13:
        if null != r36 goto label18;

        $i11 = (int) $s1;

        tableswitch($i11)
        {
            case 1: goto label14;
            case 2: goto label15;
            case 3: goto label15;
            case 4: goto label15;
            case 5: goto label17;
            case 6: goto label17;
            case 7: goto label17;
            case 8: goto label17;
            case 9: goto label16;
            case 10: goto label17;
            case 11: goto label14;
            default: goto label17;
        };

     label14:
        $r23 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r36 = virtualinvoke $r23.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRule()>();

        goto label18;

     label15:
        $r22 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r36 = virtualinvoke $r22.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultTextRule()>();

        z4 = 1;

        z11 = 1;

        z10 = 1;

        z9 = 1;

        goto label18;

     label16:
        $r21 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        r36 = virtualinvoke $r21.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.ElemTemplate getDefaultRootRule()>();

        goto label18;

     label17:
        return 0;

     label18:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>(r36);

        $r37 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r37.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>(i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushPairCurrentMatched(org.apache.xalan.templates.ElemTemplateElement,int)>(r36, i0);

        if z5 != 0 goto label19;

        $r38 = new org.apache.xpath.NodeSetDTM;

        $r15 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r16 = virtualinvoke $r15.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMManager getDTMManager()>();

        specialinvoke $r38.<org.apache.xpath.NodeSetDTM: void <init>(int,org.apache.xml.dtm.DTMManager)>(i0, $r16);

        $r17 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r17.<org.apache.xpath.XPathContext: void pushContextNodeList(org.apache.xml.dtm.DTMIterator)>($r38);

     label19:
        if z9 == 0 goto label23;

        $i12 = (int) $s1;

        tableswitch($i12)
        {
            case 2: goto label21;
            case 3: goto label20;
            case 4: goto label20;
            default: goto label22;
        };

     label20:
        $r12 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        $i13 = (int) $s1;

        staticinvoke <org.apache.xalan.transformer.ClonerToResultTree: void cloneToResultTree(int,int,org.apache.xml.dtm.DTM,org.apache.xml.serializer.SerializationHandler,boolean)>(i0, $i13, $r2, $r12, 0);

        goto label22;

     label21:
        $r13 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getResultTreeHandler()>();

        interfaceinvoke $r2.<org.apache.xml.dtm.DTM: void dispatchCharactersEvents(int,org.xml.sax.ContentHandler,boolean)>(i0, $r13, 0);

     label22:
        goto label25;

     label23:
        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label24;

        $r11 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r11.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>(r36);

     label24:
        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r3.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r36);

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r5 = virtualinvoke $r4.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        $i2 = r36.<org.apache.xalan.templates.ElemTemplate: int m_frameSize>;

        virtualinvoke $r5.<org.apache.xpath.VariableStack: int link(int)>($i2);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r36, 1);

        $z1 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z1 == 0 goto label25;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r10.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>(r36);

     label25:
        goto label33;

     label26:
        goto label30;

     label27:
        $r33 := @caughtexception;

        $r39 = new javax.xml.transform.TransformerException;

        specialinvoke $r39.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r33);

        throw $r39;

     label28:
        $r28 := @caughtexception;

        goto label36;

     label29:
        throw $r28;

     label30:
        return 1;

     label31:
        virtualinvoke $r25.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        goto label10;

     label32:
        virtualinvoke $r25.<org.apache.xpath.XPathContext: void popNamespaceContext()>();

        goto label12;

     label33:
        if z10 != 0 goto label34;

        $r8 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r9 = virtualinvoke $r8.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        virtualinvoke $r9.<org.apache.xpath.VariableStack: void unlink()>();

     label34:
        $r6 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r6.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if z5 != 0 goto label35;

        $r7 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r7.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popCurrentMatched()>();

     label35:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label26;

     label36:
        if z11 != 0 goto label37;

        $r31 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r32 = virtualinvoke $r31.<org.apache.xpath.XPathContext: org.apache.xpath.VariableStack getVarStack()>();

        virtualinvoke $r32.<org.apache.xpath.VariableStack: void unlink()>();

     label37:
        $r29 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r29.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if z5 != 0 goto label38;

        $r30 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r30.<org.apache.xpath.XPathContext: void popContextNodeList()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popCurrentMatched()>();

     label38:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label29;

        catch java.lang.Throwable from label07 to label11 with label11;
        catch org.xml.sax.SAXException from label18 to label25 with label27;
        catch java.lang.Throwable from label18 to label28 with label28;
    }

    public void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement, org.w3c.dom.Node, org.apache.xml.utils.QName, org.xml.sax.ContentHandler) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r6;
        org.apache.xml.utils.QName r2;
        org.apache.xalan.templates.ElemTemplateElement r4;
        org.apache.xpath.XPathContext r1;
        org.w3c.dom.Node r3;
        int $i0;
        org.xml.sax.ContentHandler r5;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r4 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r3 := @parameter1: org.w3c.dom.Node;

        r2 := @parameter2: org.apache.xml.utils.QName;

        r5 := @parameter3: org.xml.sax.ContentHandler;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

     label01:
        if null == r2 goto label02;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushMode(org.apache.xml.utils.QName)>(r2);

     label02:
        $i0 = virtualinvoke r1.<org.apache.xpath.XPathContext: int getDTMHandleFromNode(org.w3c.dom.Node)>(r3);

        virtualinvoke r1.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>($i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,org.xml.sax.ContentHandler)>(r4, r5);

        goto label07;

     label03:
        goto label06;

     label04:
        $r6 := @caughtexception;

        goto label09;

     label05:
        throw $r6;

     label06:
        return;

     label07:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if null == r2 goto label08;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popMode()>();

     label08:
        goto label03;

     label09:
        virtualinvoke r1.<org.apache.xpath.XPathContext: void popCurrentNode()>();

        if null == r2 goto label10;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void popMode()>();

     label10:
        goto label05;

        catch java.lang.Throwable from label01 to label04 with label04;
    }

    public void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement, boolean) throws javax.xml.transform.TransformerException
    {
        java.lang.Throwable $r11, $r15;
        javax.xml.transform.TransformerException $r14, $r17;
        org.apache.xml.utils.ObjectStack $r3, $r4, $r5, $r6, $r12;
        org.apache.xml.serializer.SerializationHandler $r10;
        org.apache.xpath.XPathContext $r7;
        int $i0, $i1, $i2;
        org.apache.xalan.templates.ElemTextLiteral $r8;
        boolean $z0, z1, $z2;
        org.apache.xalan.templates.ElemTemplateElement r0, $r1, r18;
        java.lang.RuntimeException $r13;
        org.xml.sax.SAXException $r16;
        char[] $r9;
        org.apache.xalan.transformer.TransformerImpl r2;

        r2 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        z1 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getFirstChildElem()>();

        r18 = $r1;

        if null != $r1 goto label01;

        return;

     label01:
        $z0 = virtualinvoke r0.<org.apache.xalan.templates.ElemTemplateElement: boolean hasTextLitOnly()>();

        if $z0 == 0 goto label09;

        $z2 = <org.apache.xalan.processor.TransformerFactoryImpl: boolean m_optimize>;

        if $z2 == 0 goto label09;

        $r8 = (org.apache.xalan.templates.ElemTextLiteral) $r1;

        $r9 = virtualinvoke $r8.<org.apache.xalan.templates.ElemTextLiteral: char[] getChars()>();

     label02:
        virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>($r1);

        $r10 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        $i2 = lengthof $r9;

        interfaceinvoke $r10.<org.xml.sax.ContentHandler: void characters(char[],int,int)>($r9, 0, $i2);

     label03:
        goto label21;

     label04:
        goto label08;

     label05:
        $r16 := @caughtexception;

        $r17 = new javax.xml.transform.TransformerException;

        specialinvoke $r17.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r16);

        throw $r17;

     label06:
        $r15 := @caughtexception;

        goto label22;

     label07:
        throw $r15;

     label08:
        return;

     label09:
        $r7 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r7.<org.apache.xpath.XPathContext: void pushSAXLocatorNull()>();

        $r3 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r3.<org.apache.xml.utils.ObjectVector: int size()>();

        $r4 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r4.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(null);

     label10:
        goto label14;

     label11:
        if z1 != 0 goto label12;

        $i1 = virtualinvoke r18.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i1 != 48 goto label12;

        goto label13;

     label12:
        virtualinvoke $r7.<org.apache.xpath.XPathContext: void setSAXLocator(javax.xml.transform.SourceLocator)>(r18);

        $r5 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r5.<org.apache.xml.utils.ObjectVector: void setElementAt(java.lang.Object,int)>(r18, $i0);

        virtualinvoke r18.<org.apache.xalan.templates.ElemTemplateElement: void execute(org.apache.xalan.transformer.TransformerImpl)>(r2);

     label13:
        r18 = virtualinvoke r18.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getNextSiblingElem()>();

     label14:
        if r18 != null goto label11;

     label15:
        goto label23;

     label16:
        goto label20;

     label17:
        $r13 := @caughtexception;

        $r14 = new javax.xml.transform.TransformerException;

        specialinvoke $r14.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r13);

        virtualinvoke $r14.<javax.xml.transform.TransformerException: void setLocator(javax.xml.transform.SourceLocator)>(r18);

        throw $r14;

     label18:
        $r11 := @caughtexception;

        goto label24;

     label19:
        throw $r11;

     label20:
        return;

     label21:
        virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label04;

     label22:
        virtualinvoke r2.<org.apache.xalan.transformer.TransformerImpl: void popElemTemplateElement()>();

        goto label07;

     label23:
        $r6 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r6.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        virtualinvoke $r7.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        goto label16;

     label24:
        $r12 = r2.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r12.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        virtualinvoke $r7.<org.apache.xpath.XPathContext: void popSAXLocator()>();

        goto label19;

        catch org.xml.sax.SAXException from label02 to label03 with label05;
        catch java.lang.Throwable from label02 to label06 with label06;
        catch java.lang.RuntimeException from label10 to label15 with label17;
        catch java.lang.Throwable from label10 to label18 with label18;
    }

    public void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement, org.xml.sax.ContentHandler) throws javax.xml.transform.TransformerException
    {
        org.apache.xml.serializer.ToXMLSAXHandler $r3;
        java.lang.Throwable $r7;
        org.apache.xalan.templates.ElemTemplateElement r6;
        javax.xml.transform.TransformerException $r9, $r10;
        org.apache.xml.serializer.SerializationHandler $r1, $r5;
        org.xml.sax.ext.LexicalHandler r11;
        org.xml.sax.SAXException $r8;
        org.xml.sax.ContentHandler r2;
        java.lang.String $r4;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r6 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        r2 := @parameter1: org.xml.sax.ContentHandler;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler getSerializationHandler()>();

     label01:
        interfaceinvoke $r1.<org.apache.xml.serializer.SerializationHandler: void flushPending()>();

        r11 = null;

        $z0 = r2 instanceof org.xml.sax.ext.LexicalHandler;

        if $z0 == 0 goto label02;

        r11 = (org.xml.sax.ext.LexicalHandler) r2;

     label02:
        $r3 = new org.apache.xml.serializer.ToXMLSAXHandler;

        $r4 = interfaceinvoke $r1.<org.apache.xml.serializer.XSLOutputAttributes: java.lang.String getEncoding()>();

        specialinvoke $r3.<org.apache.xml.serializer.ToXMLSAXHandler: void <init>(org.xml.sax.ContentHandler,org.xml.sax.ext.LexicalHandler,java.lang.String)>(r2, r11, $r4);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r3;

        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        interfaceinvoke $r5.<org.apache.xml.serializer.SerializationHandler: void setTransformer(javax.xml.transform.Transformer)>(r0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>(r6, 1);

     label03:
        goto label10;

     label04:
        goto label09;

     label05:
        $r10 := @caughtexception;

        throw $r10;

     label06:
        $r8 := @caughtexception;

        $r9 = new javax.xml.transform.TransformerException;

        specialinvoke $r9.<javax.xml.transform.TransformerException: void <init>(java.lang.Throwable)>($r8);

        throw $r9;

     label07:
        $r7 := @caughtexception;

        goto label11;

     label08:
        throw $r7;

     label09:
        return;

     label10:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r1;

        goto label04;

     label11:
        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = $r1;

        goto label08;

        catch javax.xml.transform.TransformerException from label01 to label03 with label05;
        catch org.xml.sax.SAXException from label01 to label03 with label06;
        catch java.lang.Throwable from label01 to label07 with label07;
    }

    public java.util.Vector processSortKeys(org.apache.xalan.templates.ElemForEach, int) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.trace.TraceManager $r10, $r17;
        java.util.Vector $r18, r19;
        org.apache.xalan.templates.ElemSort $r3;
        boolean $z0, $z1, z2, z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10, $z11, $z12, $z13, $z14, $z15, z16;
        org.apache.xpath.XPath $r9;
        org.apache.xalan.templates.ElemForEach r2;
        org.apache.xalan.transformer.NodeSortKey $r8;
        java.lang.Object[] $r12, $r13, $r14;
        org.apache.xalan.templates.AVT $r4, $r6, $r16, $r21, $r23;
        org.apache.xpath.XPathContext r1;
        int $i0, i1, $i2, i3;
        java.lang.String r5, $r7, $r11, $r20, $r22;
        java.io.PrintStream $r15;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: org.apache.xalan.templates.ElemForEach;

        i1 := @parameter1: int;

        r19 = null;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.ElemForEach: int getSortElemCount()>();

        if $i0 <= 0 goto label01;

        $r18 = new java.util.Vector;

        specialinvoke $r18.<java.util.Vector: void <init>()>();

        r19 = $r18;

     label01:
        i3 = 0;

        goto label19;

     label02:
        $r3 = virtualinvoke r2.<org.apache.xalan.templates.ElemForEach: org.apache.xalan.templates.ElemSort getSortElem(int)>(i3);

        $z0 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z0 == 0 goto label03;

        $r17 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r17.<org.apache.xalan.trace.TraceManager: void fireTraceEvent(org.apache.xalan.templates.ElemTemplateElement)>($r3);

     label03:
        $r4 = virtualinvoke $r3.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getLang()>();

        if null == $r4 goto label04;

        $r16 = virtualinvoke $r3.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getLang()>();

        $r20 = virtualinvoke $r16.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r1, i1, r2);

        goto label05;

     label04:
        $r20 = null;

     label05:
        r5 = $r20;

        $r6 = virtualinvoke $r3.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getDataType()>();

        $r7 = virtualinvoke $r6.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r1, i1, r2);

        $i2 = virtualinvoke $r7.<java.lang.String: int indexOf(java.lang.String)>(":");

        if $i2 < 0 goto label06;

        $r15 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r15.<java.io.PrintStream: void println(java.lang.String)>("TODO: Need to write the hooks for QNAME sort data type");

        goto label07;

     label06:
        $z1 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("text");

        if $z1 != 0 goto label07;

        $z11 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("number");

        if $z11 != 0 goto label07;

        $r14 = newarray (java.lang.Object)[2];

        $r14[0] = "data-type";

        $r14[1] = $r7;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r14);

     label07:
        if null == $r7 goto label08;

        $z10 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>("number");

        if $z10 == 0 goto label08;

        $z12 = 1;

        goto label09;

     label08:
        $z12 = 0;

     label09:
        z2 = $z12;

        $r21 = virtualinvoke $r3.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getOrder()>();

        $r22 = virtualinvoke $r21.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r1, i1, r2);

        $z13 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ascending");

        if $z13 != 0 goto label10;

        $z9 = virtualinvoke $r22.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("descending");

        if $z9 != 0 goto label10;

        $r13 = newarray (java.lang.Object)[2];

        $r13[0] = "order";

        $r13[1] = $r22;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r13);

     label10:
        if null == $r22 goto label11;

        $z8 = virtualinvoke $r22.<java.lang.String: boolean equals(java.lang.Object)>("descending");

        if $z8 == 0 goto label11;

        $z14 = 1;

        goto label12;

     label11:
        $z14 = 0;

     label12:
        z3 = $z14;

        $r23 = virtualinvoke $r3.<org.apache.xalan.templates.ElemSort: org.apache.xalan.templates.AVT getCaseOrder()>();

        if null == $r23 goto label16;

        $r11 = virtualinvoke $r23.<org.apache.xalan.templates.AVT: java.lang.String evaluate(org.apache.xpath.XPathContext,int,org.apache.xml.utils.PrefixResolver)>(r1, i1, r2);

        $z5 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("upper-first");

        if $z5 != 0 goto label13;

        $z7 = virtualinvoke $r11.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("lower-first");

        if $z7 != 0 goto label13;

        $r12 = newarray (java.lang.Object)[2];

        $r12[0] = "case-order";

        $r12[1] = $r11;

        virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: void error(java.lang.String,java.lang.Object[])>("ER_ILLEGAL_ATTRIBUTE_VALUE", $r12);

     label13:
        if null == $r11 goto label14;

        $z6 = virtualinvoke $r11.<java.lang.String: boolean equals(java.lang.Object)>("upper-first");

        if $z6 == 0 goto label14;

        $z15 = 1;

        goto label15;

     label14:
        $z15 = 0;

     label15:
        z16 = $z15;

        goto label17;

     label16:
        z16 = 0;

     label17:
        $r8 = new org.apache.xalan.transformer.NodeSortKey;

        $r9 = virtualinvoke $r3.<org.apache.xalan.templates.ElemSort: org.apache.xpath.XPath getSelect()>();

        specialinvoke $r8.<org.apache.xalan.transformer.NodeSortKey: void <init>(org.apache.xalan.transformer.TransformerImpl,org.apache.xpath.XPath,boolean,boolean,java.lang.String,boolean,org.apache.xml.utils.PrefixResolver)>(r0, $r9, z2, z3, r5, z16, r2);

        virtualinvoke r19.<java.util.Vector: void addElement(java.lang.Object)>($r8);

        $z4 = <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG>;

        if $z4 == 0 goto label18;

        $r10 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager getTraceManager()>();

        virtualinvoke $r10.<org.apache.xalan.trace.TraceManager: void fireTraceEndEvent(org.apache.xalan.templates.ElemTemplateElement)>($r3);

     label18:
        i3 = i3 + 1;

     label19:
        if i3 < $i0 goto label02;

        return r19;
    }

    public java.util.Vector getElementCallstack()
    {
        org.apache.xalan.templates.ElemTemplateElement r5;
        org.apache.xml.utils.ObjectStack $r2, $r3;
        java.util.Vector $r0;
        int $i0, i1;
        java.lang.Object $r4;
        org.apache.xalan.transformer.TransformerImpl r1;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r2.<org.apache.xml.utils.ObjectVector: int size()>();

        i1 = 0;

        goto label3;

     label1:
        $r3 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $r4 = virtualinvoke $r3.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>(i1);

        r5 = (org.apache.xalan.templates.ElemTemplateElement) $r4;

        if null == r5 goto label2;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>(r5);

     label2:
        i1 = i1 + 1;

     label3:
        if i1 < $i0 goto label1;

        return $r0;
    }

    public int getCurrentTemplateElementsCount()
    {
        int $i0;
        org.apache.xml.utils.ObjectStack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: int size()>();

        return $i0;
    }

    public org.apache.xml.utils.ObjectStack getCurrentTemplateElements()
    {
        org.apache.xml.utils.ObjectStack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        return $r1;
    }

    public void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xml.utils.ObjectStack $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void popElemTemplateElement()
    {
        org.apache.xml.utils.ObjectStack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return;
    }

    public void setCurrentElement(org.apache.xalan.templates.ElemTemplateElement)
    {
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xml.utils.ObjectStack $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: void setTop(java.lang.Object)>(r1);

        return;
    }

    public org.apache.xalan.templates.ElemTemplateElement getCurrentElement()
    {
        org.apache.xalan.templates.ElemTemplateElement $r4;
        org.apache.xml.utils.ObjectStack $r1, $r2;
        int $i0;
        java.lang.Object $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectVector: int size()>();

        if $i0 <= 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object peek()>();

        $r4 = (org.apache.xalan.templates.ElemTemplateElement) $r3;

        goto label2;

     label1:
        $r4 = null;

     label2:
        return $r4;
    }

    public int getCurrentNode()
    {
        int $i0;
        org.apache.xpath.XPathContext $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $i0 = virtualinvoke $r1.<org.apache.xpath.XPathContext: int getCurrentNode()>();

        return $i0;
    }

    public java.util.Vector getTemplateCallstack()
    {
        org.apache.xalan.templates.ElemTemplateElement r5;
        org.apache.xml.utils.ObjectStack $r2, $r3;
        java.util.Vector $r0;
        int $i0, $i1, i2;
        java.lang.Object $r4;
        org.apache.xalan.transformer.TransformerImpl r1;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r0 = new java.util.Vector;

        specialinvoke $r0.<java.util.Vector: void <init>()>();

        $r2 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $i0 = virtualinvoke $r2.<org.apache.xml.utils.ObjectVector: int size()>();

        i2 = 0;

        goto label3;

     label1:
        $r3 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentTemplateElements>;

        $r4 = virtualinvoke $r3.<org.apache.xml.utils.ObjectVector: java.lang.Object elementAt(int)>(i2);

        r5 = (org.apache.xalan.templates.ElemTemplateElement) $r4;

        if null == r5 goto label2;

        $i1 = virtualinvoke r5.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i1 == 19 goto label2;

        virtualinvoke $r0.<java.util.Vector: void addElement(java.lang.Object)>(r5);

     label2:
        i2 = i2 + 1;

     label3:
        if i2 < $i0 goto label1;

        return $r0;
    }

    public org.apache.xalan.templates.ElemTemplate getCurrentTemplate()
    {
        org.apache.xalan.templates.ElemTemplate $r1;
        org.apache.xalan.templates.ElemTemplateElement r2;
        int $i0;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplateElement getCurrentElement()>();

        goto label2;

     label1:
        r2 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: org.apache.xalan.templates.ElemTemplateElement getParentElem()>();

     label2:
        if null == r2 goto label3;

        $i0 = virtualinvoke r2.<org.apache.xalan.templates.ElemTemplateElement: int getXSLToken()>();

        if $i0 != 19 goto label1;

     label3:
        $r1 = (org.apache.xalan.templates.ElemTemplate) r2;

        return $r1;
    }

    public void pushPairCurrentMatched(org.apache.xalan.templates.ElemTemplateElement, int)
    {
        org.apache.xalan.templates.ElemTemplateElement r1;
        org.apache.xml.utils.NodeVector $r3;
        int i0;
        java.util.Stack $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemTemplateElement;

        i0 := @parameter1: int;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        virtualinvoke $r3.<org.apache.xml.utils.NodeVector: void push(int)>(i0);

        return;
    }

    public void popCurrentMatched()
    {
        java.util.Stack $r1;
        org.apache.xml.utils.NodeVector $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        virtualinvoke $r2.<org.apache.xml.utils.NodeVector: int pop()>();

        return;
    }

    public org.apache.xalan.templates.ElemTemplate getMatchedTemplate()
    {
        org.apache.xalan.templates.ElemTemplate $r3;
        java.lang.Object $r2;
        java.util.Stack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_currentMatchTemplates>;

        $r2 = virtualinvoke $r1.<java.util.Stack: java.lang.Object peek()>();

        $r3 = (org.apache.xalan.templates.ElemTemplate) $r2;

        return $r3;
    }

    public int getMatchedNode()
    {
        int $i0;
        org.apache.xml.utils.NodeVector $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.NodeVector m_currentMatchedNodes>;

        $i0 = virtualinvoke $r1.<org.apache.xml.utils.NodeVector: int peepTail()>();

        return $i0;
    }

    public org.apache.xml.dtm.DTMIterator getContextNodeList()
    {
        org.apache.xpath.XPathContext $r1;
        org.apache.xml.dtm.DTMIterator $r2, $r4;
        java.lang.CloneNotSupportedException $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

     label1:
        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r2 = virtualinvoke $r1.<org.apache.xpath.XPathContext: org.apache.xml.dtm.DTMIterator getContextNodeList()>();

        if $r2 != null goto label2;

        $r4 = null;

        goto label3;

     label2:
        $r4 = interfaceinvoke $r2.<org.apache.xml.dtm.DTMIterator: org.apache.xml.dtm.DTMIterator cloneWithReset()>();

     label3:
        return $r4;

     label4:
        $r3 := @caughtexception;

        return null;

        catch java.lang.CloneNotSupportedException from label1 to label4 with label4;
    }

    public javax.xml.transform.Transformer getTransformer()
    {
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        return r0;
    }

    public void setStylesheet(org.apache.xalan.templates.StylesheetRoot)
    {
        org.apache.xalan.templates.StylesheetRoot r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.StylesheetRoot;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot> = r1;

        return;
    }

    public final org.apache.xalan.templates.StylesheetRoot getStylesheet()
    {
        org.apache.xalan.templates.StylesheetRoot $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        return $r1;
    }

    public boolean getQuietConflictWarnings()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings>;

        return $z0;
    }

    public void setQuietConflictWarnings(boolean)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_quietConflictWarnings> = z0;

        return;
    }

    public void setXPathContext(org.apache.xpath.XPathContext)
    {
        org.apache.xpath.XPathContext r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xpath.XPathContext;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext> = r1;

        return;
    }

    public final org.apache.xpath.XPathContext getXPathContext()
    {
        org.apache.xpath.XPathContext $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        return $r1;
    }

    public org.apache.xalan.transformer.StackGuard getStackGuard()
    {
        org.apache.xalan.transformer.StackGuard $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.StackGuard m_stackGuard>;

        return $r1;
    }

    public int getRecursionLimit()
    {
        int $i0;
        org.apache.xalan.transformer.StackGuard $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.StackGuard m_stackGuard>;

        $i0 = virtualinvoke $r1.<org.apache.xalan.transformer.StackGuard: int getRecursionLimit()>();

        return $i0;
    }

    public void setRecursionLimit(int)
    {
        int i0;
        org.apache.xalan.transformer.StackGuard $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.StackGuard m_stackGuard>;

        virtualinvoke $r1.<org.apache.xalan.transformer.StackGuard: void setRecursionLimit(int)>(i0);

        return;
    }

    public org.apache.xml.serializer.SerializationHandler getResultTreeHandler()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        return $r1;
    }

    public org.apache.xml.serializer.SerializationHandler getSerializationHandler()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler>;

        return $r1;
    }

    public org.apache.xalan.transformer.KeyManager getKeyManager()
    {
        org.apache.xalan.transformer.KeyManager $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.KeyManager m_keyManager>;

        return $r1;
    }

    public boolean isRecursiveAttrSet(org.apache.xalan.templates.ElemAttributeSet)
    {
        org.apache.xalan.templates.ElemAttributeSet r3;
        java.util.Stack $r1, $r2, $r4, $r6;
        int $i0, $i2;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter0: org.apache.xalan.templates.ElemAttributeSet;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        if null != $r1 goto label1;

        $r6 = new java.util.Stack;

        specialinvoke $r6.<java.util.Stack: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack> = $r6;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        $z0 = virtualinvoke $r2.<java.util.Stack: boolean empty()>();

        if $z0 != 0 goto label2;

        $r4 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        $i0 = virtualinvoke $r4.<java.util.Stack: int search(java.lang.Object)>(r3);

        $i2 = (int) -1;

        if $i0 <= $i2 goto label2;

        return 1;

     label2:
        return 0;
    }

    public void pushElemAttributeSet(org.apache.xalan.templates.ElemAttributeSet)
    {
        org.apache.xalan.templates.ElemAttributeSet r1;
        java.util.Stack $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xalan.templates.ElemAttributeSet;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void popElemAttributeSet()
    {
        java.util.Stack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_attrSetStack>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public org.apache.xalan.transformer.CountersTable getCountersTable()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.transformer.CountersTable $r1, $r2, $r3;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable>;

        if null != $r1 goto label1;

        $r3 = new org.apache.xalan.transformer.CountersTable;

        specialinvoke $r3.<org.apache.xalan.transformer.CountersTable: void <init>()>();

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.CountersTable m_countersTable>;

        return $r2;
    }

    public boolean currentTemplateRuleIsNull()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.BoolStack $r1, $r2;
        boolean $z0, $z1, $z2;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        $z1 = virtualinvoke $r2.<org.apache.xml.utils.BoolStack: boolean peek()>();

        if $z1 != 1 goto label1;

        $z2 = 1;

        goto label2;

     label1:
        $z2 = 0;

     label2:
        return $z2;
    }

    public void pushCurrentTemplateRuleIsNull(boolean)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean push(boolean)>(z0);

        return;
    }

    public void popCurrentTemplateRuleIsNull()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.utils.BoolStack $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.BoolStack m_currentTemplateRuleIsNull>;

        virtualinvoke $r1.<org.apache.xml.utils.BoolStack: boolean pop()>();

        return;
    }

    public void pushCurrentFuncResult(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.xml.utils.ObjectStack $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public java.lang.Object popCurrentFuncResult()
    {
        java.lang.Object $r2;
        org.apache.xml.utils.ObjectStack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        $r2 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: java.lang.Object pop()>();

        return $r2;
    }

    public boolean currentFuncResultSeen()
    {
        org.apache.xml.utils.ObjectStack $r1, $r2;
        java.lang.Object $r3;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0, $z1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        $z0 = virtualinvoke $r1.<org.apache.xml.utils.ObjectStack: boolean empty()>();

        if $z0 != 0 goto label1;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.utils.ObjectStack m_currentFuncResult>;

        $r3 = virtualinvoke $r2.<org.apache.xml.utils.ObjectStack: java.lang.Object peek()>();

        if $r3 == null goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        return $z1;
    }

    public org.apache.xalan.transformer.MsgMgr getMsgMgr()
    {
        org.apache.xalan.transformer.MsgMgr $r1, $r2, $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr m_msgMgr>;

        if null != $r1 goto label1;

        $r3 = new org.apache.xalan.transformer.MsgMgr;

        specialinvoke $r3.<org.apache.xalan.transformer.MsgMgr: void <init>(org.apache.xalan.transformer.TransformerImpl)>(r0);

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr m_msgMgr> = $r3;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.transformer.MsgMgr m_msgMgr>;

        return $r2;
    }

    public void setErrorListener(javax.xml.transform.ErrorListener) throws java.lang.IllegalArgumentException
    {
        java.lang.Throwable $r5;
        java.lang.Boolean r1;
        java.lang.String $r4;
        javax.xml.transform.ErrorListener r2;
        java.lang.IllegalArgumentException $r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r2 := @parameter0: javax.xml.transform.ErrorListener;

        r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Boolean m_reentryGuard>;

        entermonitor r1;

     label1:
        if r2 != null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = staticinvoke <org.apache.xalan.res.XSLMessages: java.lang.String createMessage(java.lang.String,java.lang.Object[])>("ER_NULL_ERROR_HANDLER", null);

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4);

        throw $r3;

     label2:
        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler> = r2;

        exitmonitor r1;

        goto label4;

     label3:
        $r5 := @caughtexception;

        exitmonitor r1;

        throw $r5;

     label4:
        return;

        catch java.lang.Throwable from label1 to label3 with label3;
    }

    public javax.xml.transform.ErrorListener getErrorListener()
    {
        javax.xml.transform.ErrorListener $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.ErrorListener m_errorHandler>;

        return $r1;
    }

    public org.apache.xalan.trace.TraceManager getTraceManager()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.trace.TraceManager $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        return $r1;
    }

    public boolean getFeature(java.lang.String) throws org.xml.sax.SAXNotRecognizedException, org.xml.sax.SAXNotSupportedException
    {
        org.xml.sax.SAXNotRecognizedException $r3;
        java.lang.String r0, $r1, $r2;
        boolean $z0, $z1;
        org.apache.xalan.transformer.TransformerImpl r4;

        r4 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: java.lang.String;

        $r1 = "http://xml.org/trax/features/sax/input";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $r2 = "http://xml.org/trax/features/dom/input";

        $z1 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r0);

        if $z1 == 0 goto label2;

        return 1;

     label2:
        $r3 = new org.xml.sax.SAXNotRecognizedException;

        specialinvoke $r3.<org.xml.sax.SAXNotRecognizedException: void <init>(java.lang.String)>(r0);

        throw $r3;
    }

    public org.apache.xml.utils.QName getMode()
    {
        org.apache.xml.utils.QName $r4;
        java.lang.Object $r3;
        java.util.Stack $r1, $r2;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        $z0 = virtualinvoke $r1.<java.util.Vector: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        $r4 = null;

        goto label2;

     label1:
        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        $r3 = virtualinvoke $r2.<java.util.Stack: java.lang.Object peek()>();

        $r4 = (org.apache.xml.utils.QName) $r3;

     label2:
        return $r4;
    }

    public void pushMode(org.apache.xml.utils.QName)
    {
        org.apache.xml.utils.QName r1;
        java.util.Stack $r2;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xml.utils.QName;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        virtualinvoke $r2.<java.util.Stack: java.lang.Object push(java.lang.Object)>(r1);

        return;
    }

    public void popMode()
    {
        java.util.Stack $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.util.Stack m_modes>;

        virtualinvoke $r1.<java.util.Stack: java.lang.Object pop()>();

        return;
    }

    public void runTransformThread(int)
    {
        int i0;
        org.apache.xalan.transformer.TransformerImpl r0;
        java.lang.Thread $r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r1 = staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)>(r0, i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setTransformThread(java.lang.Thread)>($r1);

        return;
    }

    public void runTransformThread()
    {
        int $i1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $i1 = (int) -1;

        staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)>(r0, $i1);

        return;
    }

    public static void runTransformThread(java.lang.Runnable)
    {
        int $i1;
        java.lang.Runnable r0;

        r0 := @parameter0: java.lang.Runnable;

        $i1 = (int) -1;

        staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: java.lang.Thread runThread(java.lang.Runnable,int)>(r0, $i1);

        return;
    }

    public void waitTransformThread() throws org.xml.sax.SAXException
    {
        java.lang.InterruptedException $r4;
        java.lang.Thread $r1;
        org.xml.sax.SAXException $r3;
        java.lang.Exception $r2;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread getTransformThread()>();

        if null == $r1 goto label5;

     label1:
        staticinvoke <org.apache.xml.utils.ThreadControllerWrapper: void waitThread(java.lang.Thread,java.lang.Runnable)>($r1, r0);

        $z0 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: boolean hasTransformThreadErrorCatcher()>();

        if $z0 != 0 goto label2;

        $r2 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception getExceptionThrown()>();

        if null == $r2 goto label2;

        virtualinvoke $r2.<java.lang.Throwable: void printStackTrace()>();

        $r3 = new org.xml.sax.SAXException;

        specialinvoke $r3.<org.xml.sax.SAXException: void <init>(java.lang.Exception)>($r2);

        throw $r3;

     label2:
        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void setTransformThread(java.lang.Thread)>(null);

     label3:
        goto label5;

     label4:
        $r4 := @caughtexception;

     label5:
        return;

        catch java.lang.InterruptedException from label1 to label3 with label4;
    }

    public java.lang.Exception getExceptionThrown()
    {
        java.lang.Exception $r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown>;

        return $r1;
    }

    public void setExceptionThrown(java.lang.Exception)
    {
        java.lang.Exception r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Exception;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown> = r1;

        return;
    }

    public void setSourceTreeDocForThread(int)
    {
        int i0;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r0.<org.apache.xalan.transformer.TransformerImpl: int m_doc> = i0;

        return;
    }

    public void setXMLSource(javax.xml.transform.Source)
    {
        javax.xml.transform.Source r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: javax.xml.transform.Source;

        r0.<org.apache.xalan.transformer.TransformerImpl: javax.xml.transform.Source m_xmlSource> = r1;

        return;
    }

    public boolean isTransformDone()
    {
        java.lang.Throwable $r1;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        entermonitor r0;

     label1:
        z0 = r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone>;

        exitmonitor r0;

        return z0;

     label2:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void setIsTransformDone(boolean)
    {
        java.lang.Throwable $r1;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        z0 := @parameter0: boolean;

        entermonitor r0;

     label1:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = z0;

        exitmonitor r0;

        goto label3;

     label2:
        $r1 := @caughtexception;

        exitmonitor r0;

        throw $r1;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    void postExceptionFromThread(java.lang.Exception)
    {
        java.lang.Throwable $r2;
        java.lang.Exception r1;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: java.lang.Exception;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 1;

        r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Exception m_exceptionThrown> = r1;

        entermonitor r0;

     label1:
        virtualinvoke r0.<java.lang.Object: void notifyAll()>();

        exitmonitor r0;

        goto label3;

     label2:
        $r2 := @caughtexception;

        exitmonitor r0;

        throw $r2;

     label3:
        return;

        catch java.lang.Throwable from label1 to label2 with label2;
    }

    public void run()
    {
        java.lang.Throwable $r8;
        org.apache.xalan.transformer.TransformerHandlerImpl $r3, $r11, $r18;
        java.lang.Thread $r5, $r13;
        int $i0;
        org.xml.sax.ContentHandler $r1, $r2, $r9, $r10, $r16, $r17;
        java.lang.String $r7, $r15;
        boolean $z0, $z1, $z2;
        java.lang.RuntimeException $r6, $r14;
        java.lang.Exception $r4, $r12;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_hasBeenReset> = 0;

     label01:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 0;

        $i0 = r0.<org.apache.xalan.transformer.TransformerImpl: int m_doc>;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void transformNode(int)>($i0);

     label02:
        goto label14;

     label03:
        goto label10;

     label04:
        $r12 := @caughtexception;

        $r13 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread>;

        if null == $r13 goto label05;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void postExceptionFromThread(java.lang.Exception)>($r12);

        goto label06;

     label05:
        $r14 = new java.lang.RuntimeException;

        $r15 = virtualinvoke $r12.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r14.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15);

        throw $r14;

     label06:
        goto label16;

     label07:
        goto label10;

     label08:
        $r8 := @caughtexception;

        goto label18;

     label09:
        throw $r8;

     label10:
        goto label13;

     label11:
        $r4 := @caughtexception;

        $r5 = r0.<org.apache.xalan.transformer.TransformerImpl: java.lang.Thread m_transformThread>;

        if null == $r5 goto label12;

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void postExceptionFromThread(java.lang.Exception)>($r4);

        goto label13;

     label12:
        $r6 = new java.lang.RuntimeException;

        $r7 = virtualinvoke $r4.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r7);

        throw $r6;

     label13:
        return;

     label14:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 1;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z0 = $r1 instanceof org.apache.xalan.transformer.TransformerHandlerImpl;

        if $z0 == 0 goto label15;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r3 = (org.apache.xalan.transformer.TransformerHandlerImpl) $r2;

        virtualinvoke $r3.<org.apache.xalan.transformer.TransformerHandlerImpl: void clearCoRoutine()>();

     label15:
        goto label03;

     label16:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 1;

        $r16 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z2 = $r16 instanceof org.apache.xalan.transformer.TransformerHandlerImpl;

        if $z2 == 0 goto label17;

        $r17 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r18 = (org.apache.xalan.transformer.TransformerHandlerImpl) $r17;

        virtualinvoke $r18.<org.apache.xalan.transformer.TransformerHandlerImpl: void clearCoRoutine()>();

     label17:
        goto label07;

     label18:
        r0.<org.apache.xalan.transformer.TransformerImpl: boolean m_isTransformDone> = 1;

        $r9 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $z1 = $r9 instanceof org.apache.xalan.transformer.TransformerHandlerImpl;

        if $z1 == 0 goto label19;

        $r10 = r0.<org.apache.xalan.transformer.TransformerImpl: org.xml.sax.ContentHandler m_inputContentHandler>;

        $r11 = (org.apache.xalan.transformer.TransformerHandlerImpl) $r10;

        virtualinvoke $r11.<org.apache.xalan.transformer.TransformerHandlerImpl: void clearCoRoutine()>();

     label19:
        goto label09;

     label20:
        nop;

        catch java.lang.Exception from label01 to label02 with label04;
        catch java.lang.Throwable from label01 to label08 with label08;
        catch java.lang.Exception from label01 to label10 with label11;
        catch java.lang.Exception from label14 to label16 with label11;
        catch java.lang.Exception from label16 to label18 with label11;
        catch java.lang.Exception from label18 to label20 with label11;
    }

    public org.apache.xalan.transformer.TransformSnapshot getSnapshot()
    {
        org.apache.xalan.transformer.TransformSnapshotImpl $r0;
        org.apache.xalan.transformer.TransformerImpl r1;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r0 = new org.apache.xalan.transformer.TransformSnapshotImpl;

        specialinvoke $r0.<org.apache.xalan.transformer.TransformSnapshotImpl: void <init>(org.apache.xalan.transformer.TransformerImpl)>(r1);

        return $r0;
    }

    public void executeFromSnapshot(org.apache.xalan.transformer.TransformSnapshot) throws javax.xml.transform.TransformerException
    {
        org.apache.xalan.templates.ElemTemplate $r1;
        org.apache.xpath.XPathContext $r2;
        int $i0;
        org.apache.xalan.transformer.TransformSnapshot r3;
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r3 := @parameter0: org.apache.xalan.transformer.TransformSnapshot;

        $r1 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.ElemTemplate getMatchedTemplate()>();

        $i0 = virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: int getMatchedNode()>();

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void pushElemTemplateElement(org.apache.xalan.templates.ElemTemplateElement)>($r1);

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        virtualinvoke $r2.<org.apache.xpath.XPathContext: void pushCurrentNode(int)>($i0);

        virtualinvoke r0.<org.apache.xalan.transformer.TransformerImpl: void executeChildTemplates(org.apache.xalan.templates.ElemTemplateElement,boolean)>($r1, 1);

        return;
    }

    public void resetToStylesheet(org.apache.xalan.transformer.TransformSnapshot)
    {
        org.apache.xalan.transformer.TransformSnapshot r0;
        org.apache.xalan.transformer.TransformSnapshotImpl $r2;
        org.apache.xalan.transformer.TransformerImpl r1;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: org.apache.xalan.transformer.TransformSnapshot;

        $r2 = (org.apache.xalan.transformer.TransformSnapshotImpl) r0;

        virtualinvoke $r2.<org.apache.xalan.transformer.TransformSnapshotImpl: void apply(org.apache.xalan.transformer.TransformerImpl)>(r1);

        return;
    }

    public void stopTransformation()
    {
        org.apache.xalan.transformer.TransformerImpl r0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        return;
    }

    public short getShouldStripSpace(int, org.apache.xml.dtm.DTM)
    {
        javax.xml.transform.TransformerException $r5;
        org.apache.xalan.templates.StylesheetRoot $r3;
        byte $b1;
        org.apache.xpath.XPathContext $r2;
        int i0;
        org.apache.xml.dtm.DTM r1;
        org.apache.xalan.templates.WhiteSpaceInfo $r4;
        org.apache.xalan.transformer.TransformerImpl r0;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r1 := @parameter1: org.apache.xml.dtm.DTM;

     label1:
        $r3 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.templates.StylesheetRoot m_stylesheetRoot>;

        $r2 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xpath.XPathContext m_xcontext>;

        $r4 = virtualinvoke $r3.<org.apache.xalan.templates.StylesheetRoot: org.apache.xalan.templates.WhiteSpaceInfo getWhiteSpaceInfo(org.apache.xpath.XPathContext,int,org.apache.xml.dtm.DTM)>($r2, i0, r1);

        if null != $r4 goto label2;

        return 3;

     label2:
        $z0 = virtualinvoke $r4.<org.apache.xalan.templates.WhiteSpaceInfo: boolean getShouldStripSpace()>();

        if $z0 == 0 goto label3;

        $b1 = 2;

        goto label4;

     label3:
        $b1 = 1;

     label4:
        return $b1;

     label5:
        $r5 := @caughtexception;

        return 3;

        catch javax.xml.transform.TransformerException from label1 to label5 with label5;
    }

    public void init(org.apache.xml.serializer.ToXMLSAXHandler, javax.xml.transform.Transformer, org.xml.sax.ContentHandler)
    {
        org.apache.xml.serializer.ToXMLSAXHandler r0;
        javax.xml.transform.Transformer r1;
        org.xml.sax.ContentHandler r2;
        org.apache.xalan.transformer.TransformerImpl r3;

        r3 := @this: org.apache.xalan.transformer.TransformerImpl;

        r0 := @parameter0: org.apache.xml.serializer.ToXMLSAXHandler;

        r1 := @parameter1: javax.xml.transform.Transformer;

        r2 := @parameter2: org.xml.sax.ContentHandler;

        virtualinvoke r0.<org.apache.xml.serializer.SerializerBase: void setTransformer(javax.xml.transform.Transformer)>(r1);

        virtualinvoke r0.<org.apache.xml.serializer.ToSAXHandler: void setContentHandler(org.xml.sax.ContentHandler)>(r2);

        return;
    }

    public void setSerializationHandler(org.apache.xml.serializer.SerializationHandler)
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xml.serializer.SerializationHandler r1;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        r1 := @parameter0: org.apache.xml.serializer.SerializationHandler;

        r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xml.serializer.SerializationHandler m_serializationHandler> = r1;

        return;
    }

    public void fireGenerateEvent(int, char[], int, int)
    {
        int i0, i1, i2;
        char[] r2;
        org.apache.xalan.trace.GenerateEvent $r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.trace.TraceManager $r3;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: char[];

        i1 := @parameter2: int;

        i2 := @parameter3: int;

        $r0 = new org.apache.xalan.trace.GenerateEvent;

        specialinvoke $r0.<org.apache.xalan.trace.GenerateEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,int,char[],int,int)>(r1, i0, r2, i1, i2);

        $r3 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        virtualinvoke $r3.<org.apache.xalan.trace.TraceManager: void fireGenerateEvent(org.apache.xalan.trace.GenerateEvent)>($r0);

        return;
    }

    public void fireGenerateEvent(int, java.lang.String, org.xml.sax.Attributes)
    {
        int i0;
        org.xml.sax.Attributes r3;
        java.lang.String r2;
        org.apache.xalan.trace.GenerateEvent $r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.trace.TraceManager $r4;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: org.xml.sax.Attributes;

        $r0 = new org.apache.xalan.trace.GenerateEvent;

        specialinvoke $r0.<org.apache.xalan.trace.GenerateEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,int,java.lang.String,org.xml.sax.Attributes)>(r1, i0, r2, r3);

        $r4 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        virtualinvoke $r4.<org.apache.xalan.trace.TraceManager: void fireGenerateEvent(org.apache.xalan.trace.GenerateEvent)>($r0);

        return;
    }

    public void fireGenerateEvent(int, java.lang.String, java.lang.String)
    {
        int i0;
        java.lang.String r2, r3;
        org.apache.xalan.trace.GenerateEvent $r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.trace.TraceManager $r4;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        r3 := @parameter2: java.lang.String;

        $r0 = new org.apache.xalan.trace.GenerateEvent;

        specialinvoke $r0.<org.apache.xalan.trace.GenerateEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,int,java.lang.String,java.lang.String)>(r1, i0, r2, r3);

        $r4 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        virtualinvoke $r4.<org.apache.xalan.trace.TraceManager: void fireGenerateEvent(org.apache.xalan.trace.GenerateEvent)>($r0);

        return;
    }

    public void fireGenerateEvent(int, java.lang.String)
    {
        int i0;
        java.lang.String r2;
        org.apache.xalan.trace.GenerateEvent $r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.trace.TraceManager $r3;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        r2 := @parameter1: java.lang.String;

        $r0 = new org.apache.xalan.trace.GenerateEvent;

        specialinvoke $r0.<org.apache.xalan.trace.GenerateEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,int,java.lang.String)>(r1, i0, r2);

        $r3 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        virtualinvoke $r3.<org.apache.xalan.trace.TraceManager: void fireGenerateEvent(org.apache.xalan.trace.GenerateEvent)>($r0);

        return;
    }

    public void fireGenerateEvent(int)
    {
        int i0;
        org.apache.xalan.trace.GenerateEvent $r0;
        org.apache.xalan.transformer.TransformerImpl r1;
        org.apache.xalan.trace.TraceManager $r2;

        r1 := @this: org.apache.xalan.transformer.TransformerImpl;

        i0 := @parameter0: int;

        $r0 = new org.apache.xalan.trace.GenerateEvent;

        specialinvoke $r0.<org.apache.xalan.trace.GenerateEvent: void <init>(org.apache.xalan.transformer.TransformerImpl,int)>(r1, i0);

        $r2 = r1.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        virtualinvoke $r2.<org.apache.xalan.trace.TraceManager: void fireGenerateEvent(org.apache.xalan.trace.GenerateEvent)>($r0);

        return;
    }

    public boolean hasTraceListeners()
    {
        org.apache.xalan.transformer.TransformerImpl r0;
        org.apache.xalan.trace.TraceManager $r1;
        boolean $z0;

        r0 := @this: org.apache.xalan.transformer.TransformerImpl;

        $r1 = r0.<org.apache.xalan.transformer.TransformerImpl: org.apache.xalan.trace.TraceManager m_traceManager>;

        $z0 = virtualinvoke $r1.<org.apache.xalan.trace.TraceManager: boolean hasTraceListeners()>();

        return $z0;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.Throwable: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        <org.apache.xalan.transformer.TransformerImpl: boolean S_DEBUG> = 0;

        return;
    }
}
