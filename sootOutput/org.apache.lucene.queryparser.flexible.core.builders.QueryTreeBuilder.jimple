public class org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder extends java.lang.Object implements org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder
{
    public static final java.lang.String QUERY_TREE_BUILDER_TAGID;
    private java.util.HashMap queryNodeBuilders;
    private java.util.HashMap fieldNameBuilders;

    public void <init>()
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r0;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void setBuilder(java.lang.CharSequence, org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder)
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r0;
        java.lang.CharSequence r2;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder r5;
        java.util.HashMap $r1, $r3, $r6;
        java.lang.String $r4;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r2 := @parameter0: java.lang.CharSequence;

        r5 := @parameter1: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap fieldNameBuilders>;

        if $r1 != null goto label1;

        $r6 = new java.util.HashMap;

        specialinvoke $r6.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap fieldNameBuilders> = $r6;

     label1:
        $r3 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap fieldNameBuilders>;

        $r4 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r4, r5);

        return;
    }

    public void setBuilder(java.lang.Class, org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder)
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r0;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder r3;
        java.util.HashMap $r1, $r4, $r5;
        java.lang.Class r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r2 := @parameter0: java.lang.Class;

        r3 := @parameter1: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap queryNodeBuilders>;

        if $r1 != null goto label1;

        $r5 = new java.util.HashMap;

        specialinvoke $r5.<java.util.HashMap: void <init>()>();

        r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap queryNodeBuilders> = $r5;

     label1:
        $r4 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap queryNodeBuilders>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r2, r3);

        return;
    }

    private void process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r1;
        java.util.Iterator $r4;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder $r2;
        java.util.List $r3;
        java.lang.Object $r5;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r0, r6;
        boolean $z0, $z1;

        r1 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r0 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        if r0 == null goto label3;

        $r2 = specialinvoke r1.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getBuilder(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r0);

        $z0 = $r2 instanceof org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        if $z0 != 0 goto label2;

        $r3 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.util.List getChildren()>();

        if $r3 == null goto label2;

        $r4 = interfaceinvoke $r3.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z1 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z1 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        r6 = (org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) $r5;

        specialinvoke r1.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: void process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r6);

        goto label1;

     label2:
        specialinvoke r1.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: void processNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode,org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder)>(r0, $r2);

     label3:
        return;
    }

    private org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getBuilder(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)
    {
        java.util.HashMap $r1, $r2, $r12;
        org.apache.lucene.queryparser.flexible.core.nodes.FieldableNode $r10;
        int i0, i1;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r3;
        boolean $z0;
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r0;
        java.lang.CharSequence $r11, r15;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder $r4, $r9, r14;
        java.lang.Class[] $r7;
        java.lang.Class $r5, $r6, r8, r16;
        java.lang.Object $r13;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r3 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        r14 = null;

        $r1 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap fieldNameBuilders>;

        if $r1 == null goto label2;

        $z0 = r3 instanceof org.apache.lucene.queryparser.flexible.core.nodes.FieldableNode;

        if $z0 == 0 goto label2;

        $r10 = (org.apache.lucene.queryparser.flexible.core.nodes.FieldableNode) r3;

        $r11 = interfaceinvoke $r10.<org.apache.lucene.queryparser.flexible.core.nodes.FieldableNode: java.lang.CharSequence getField()>();

        r15 = $r11;

        if $r11 == null goto label1;

        r15 = virtualinvoke $r11.<java.lang.Object: java.lang.String toString()>();

     label1:
        $r12 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap fieldNameBuilders>;

        $r13 = virtualinvoke $r12.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r15);

        r14 = (org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder) $r13;

     label2:
        if r14 != null goto label7;

        $r2 = r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap queryNodeBuilders>;

        if $r2 == null goto label7;

        r16 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

     label3:
        $r4 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getQueryBuilder(java.lang.Class)>(r16);

        r14 = $r4;

        if $r4 != null goto label6;

        $r6 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = virtualinvoke $r6.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r7;

        i1 = 0;

     label4:
        if i1 >= i0 goto label6;

        r8 = $r7[i1];

        $r9 = specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getQueryBuilder(java.lang.Class)>(r8);

        r14 = $r9;

        if $r9 == null goto label5;

        goto label6;

     label5:
        i1 = i1 + 1;

        goto label4;

     label6:
        if r14 != null goto label7;

        $r5 = virtualinvoke r16.<java.lang.Class: java.lang.Class getSuperclass()>();

        r16 = $r5;

        if $r5 != null goto label3;

     label7:
        return r14;
    }

    private void processNode(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode, org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r12;
        java.lang.Object[] $r6;
        java.lang.CharSequence $r9;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder r0;
        org.apache.lucene.queryparser.flexible.standard.parser.EscapeQuerySyntaxImpl $r7;
        org.apache.lucene.queryparser.flexible.core.QueryNodeException $r4;
        org.apache.lucene.queryparser.flexible.messages.MessageImpl $r5;
        java.lang.Object $r2;
        java.lang.Class $r10;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        java.lang.String $r3, $r8, $r11;

        r12 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        r0 := @parameter1: org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder;

        if r0 != null goto label1;

        $r4 = new org.apache.lucene.queryparser.flexible.core.QueryNodeException;

        $r5 = new org.apache.lucene.queryparser.flexible.messages.MessageImpl;

        $r8 = <org.apache.lucene.queryparser.flexible.core.messages.QueryParserMessages: java.lang.String LUCENE_QUERY_CONVERSION_ERROR>;

        $r6 = newarray (java.lang.Object)[2];

        $r7 = new org.apache.lucene.queryparser.flexible.standard.parser.EscapeQuerySyntaxImpl;

        specialinvoke $r7.<org.apache.lucene.queryparser.flexible.standard.parser.EscapeQuerySyntaxImpl: void <init>()>();

        $r9 = interfaceinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.CharSequence toQueryString(org.apache.lucene.queryparser.flexible.core.parser.EscapeQuerySyntax)>($r7);

        $r6[0] = $r9;

        $r10 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r11 = virtualinvoke $r10.<java.lang.Class: java.lang.String getName()>();

        $r6[1] = $r11;

        specialinvoke $r5.<org.apache.lucene.queryparser.flexible.messages.MessageImpl: void <init>(java.lang.String,java.lang.Object[])>($r8, $r6);

        specialinvoke $r4.<org.apache.lucene.queryparser.flexible.core.QueryNodeException: void <init>(org.apache.lucene.queryparser.flexible.messages.Message)>($r5);

        throw $r4;

     label1:
        $r2 = interfaceinvoke r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder: java.lang.Object build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r1);

        if $r2 == null goto label2;

        $r3 = <org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.lang.String QUERY_TREE_BUILDER_TAGID>;

        interfaceinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: void setTag(java.lang.String,java.lang.Object)>($r3, $r2);

     label2:
        return;
    }

    private org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder getQueryBuilder(java.lang.Class)
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r2;
        org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder $r5;
        java.lang.Class r0, $r1;
        java.util.HashMap $r3;
        java.lang.Object $r4;
        boolean $z0;

        r2 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r0 := @parameter0: java.lang.Class;

        $r1 = class "Lorg/apache/lucene/queryparser/flexible/core/nodes/QueryNode;";

        $z0 = virtualinvoke $r1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r0);

        if $z0 == 0 goto label1;

        $r3 = r2.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.util.HashMap queryNodeBuilders>;

        $r4 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        $r5 = (org.apache.lucene.queryparser.flexible.core.builders.QueryBuilder) $r4;

        return $r5;

     label1:
        return null;
    }

    public java.lang.Object build(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode) throws org.apache.lucene.queryparser.flexible.core.QueryNodeException
    {
        org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder r0;
        java.lang.Object $r3;
        org.apache.lucene.queryparser.flexible.core.nodes.QueryNode r1;
        java.lang.String $r2;

        r0 := @this: org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder;

        r1 := @parameter0: org.apache.lucene.queryparser.flexible.core.nodes.QueryNode;

        specialinvoke r0.<org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: void process(org.apache.lucene.queryparser.flexible.core.nodes.QueryNode)>(r1);

        $r2 = <org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.lang.String QUERY_TREE_BUILDER_TAGID>;

        $r3 = interfaceinvoke r1.<org.apache.lucene.queryparser.flexible.core.nodes.QueryNode: java.lang.Object getTag(java.lang.String)>($r2);

        return $r3;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;

        $r0 = class "Lorg/apache/lucene/queryparser/flexible/core/builders/QueryTreeBuilder;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        <org.apache.lucene.queryparser.flexible.core.builders.QueryTreeBuilder: java.lang.String QUERY_TREE_BUILDER_TAGID> = $r1;

        return;
    }
}
