public class org.apache.cxf.bus.blueprint.ConfigurerImpl extends java.lang.Object implements org.apache.cxf.configuration.Configurer
{
    private static final java.util.logging.Logger LOG;
    org.osgi.service.blueprint.container.BlueprintContainer container;
    private final java.util.Map wildCardBeanDefinitions;

    public void <init>(org.osgi.service.blueprint.container.BlueprintContainer)
    {
        java.util.HashMap $r1;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r0;
        org.osgi.service.blueprint.container.BlueprintContainer r2;

        r0 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r2 := @parameter0: org.osgi.service.blueprint.container.BlueprintContainer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.Map wildCardBeanDefinitions> = $r1;

        r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container> = r2;

        specialinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: void initializeWildcardMap()>();

        return;
    }

    private boolean isWildcardBeanName(java.lang.String)
    {
        org.apache.cxf.bus.blueprint.ConfigurerImpl r1;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i9, $i11;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(42);

        $i5 = (int) -1;

        if $i0 != $i5 goto label1;

        $i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(63);

        $i7 = (int) -1;

        if $i1 != $i7 goto label1;

        $i2 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(40);

        $i9 = (int) -1;

        if $i2 == $i9 goto label2;

        $i3 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(41);

        $i11 = (int) -1;

        if $i3 == $i11 goto label2;

     label1:
        $z0 = 1;

        goto label3;

     label2:
        $z0 = 0;

     label3:
        return $z0;
    }

    private void initializeWildcardMap()
    {
        org.apache.cxf.bus.blueprint.ConfigurerImpl r0;
        java.util.ArrayList $r27;
        org.osgi.service.blueprint.reflect.ComponentMetadata $r6;
        java.util.regex.Matcher $r11;
        java.util.Map $r12, $r17;
        int $i1;
        java.lang.String r9, $r13, $r18, $r21, r24;
        boolean $z0, $z1;
        java.util.Iterator $r3;
        java.util.Set $r2;
        char $c0;
        org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder $r28;
        java.util.List $r23, r25;
        java.lang.Object $r4, $r14;
        java.lang.Class $r8;
        java.lang.StringBuilder $r20, $r22, $r26;
        java.util.regex.Pattern $r10;
        org.osgi.service.blueprint.container.BlueprintContainer $r1, $r5, $r7;

        r0 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        $r1 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r2 = interfaceinvoke $r1.<org.osgi.service.blueprint.container.BlueprintContainer: java.util.Set getComponentIds()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.lang.String) $r4;

        $z1 = specialinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: boolean isWildcardBeanName(java.lang.String)>(r24);

        if $z1 == 0 goto label4;

        $r5 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r6 = interfaceinvoke $r5.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r24);

        $r7 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r8 = staticinvoke <org.apache.cxf.bus.blueprint.BlueprintBeanLocator: java.lang.Class getClassForMetaData(org.osgi.service.blueprint.container.BlueprintContainer,org.osgi.service.blueprint.reflect.ComponentMetadata)>($r7, $r6);

        if $r8 == null goto label4;

        r9 = r24;

        $c0 = virtualinvoke r24.<java.lang.String: char charAt(int)>(0);

        $i1 = (int) $c0;

        if $i1 != 42 goto label2;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");

        $r21 = virtualinvoke r24.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\\.", "\\.");

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

     label2:
        $r10 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>(r24);

        $r11 = virtualinvoke $r10.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>("");

        $r12 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $r13 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        $r14 = interfaceinvoke $r12.<java.util.Map: java.lang.Object get(java.lang.Object)>($r13);

        $r23 = (java.util.List) $r14;

        r25 = $r23;

        if $r23 != null goto label3;

        $r27 = new java.util.ArrayList;

        specialinvoke $r27.<java.util.ArrayList: void <init>()>();

        r25 = $r27;

        $r17 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $r18 = virtualinvoke $r8.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r18, $r27);

     label3:
        $r28 = new org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder;

        specialinvoke $r28.<org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder: void <init>(java.lang.String,java.util.regex.Matcher)>(r9, $r11);

        interfaceinvoke r25.<java.util.List: boolean add(java.lang.Object)>($r28);

     label4:
        goto label1;

     label5:
        return;
    }

    public void configureBean(java.lang.Object)
    {
        java.lang.Object r1;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r0;

        r0 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r1 := @parameter0: java.lang.Object;

        virtualinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: void configureBean(java.lang.String,java.lang.Object,boolean)>(null, r1, 1);

        return;
    }

    public void configureBean(java.lang.String, java.lang.Object)
    {
        java.lang.Object r2;
        java.lang.String r1;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r0;

        r0 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        virtualinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: void configureBean(java.lang.String,java.lang.Object,boolean)>(r1, r2, 1);

        return;
    }

    public synchronized void configureBean(java.lang.String, java.lang.Object, boolean)
    {
        java.lang.reflect.Method $r4, $r8, $r12, $r16, $r19, $r23, $r26, $r32;
        boolean z0, $z1, $z2;
        java.util.logging.Logger $r39;
        java.lang.Exception $r37;
        java.lang.reflect.InvocationTargetException $r44;
        java.lang.StringBuilder $r38, $r41, $r42;
        java.lang.ClassLoader $r25;
        org.osgi.service.blueprint.container.BlueprintContainer $r1, $r5, $r11, $r34, $r36;
        java.lang.Throwable $r45, $r48, $r50;
        java.lang.Object[] $r10, $r18, $r27, $r30, $r33, $r35, $r49;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r0;
        java.util.logging.Level $r40;
        org.osgi.service.blueprint.reflect.ComponentMetadata r52;
        java.lang.String $r43, r51;
        java.lang.reflect.AccessibleObject $r9, $r17, $r29;
        java.lang.Class[] $r3, $r7, $r15, $r22;
        java.lang.RuntimeException $r46, $r47;
        java.lang.Class $r2, $r6, $r14, $r21, $r24;
        java.lang.Object $r13, $r20, $r28, r31;

        r0 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r51 := @parameter0: java.lang.String;

        r31 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        if null != r51 goto label01;

        r51 = virtualinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.lang.String getBeanName(java.lang.Object)>(r31);

     label01:
        if null != r51 goto label02;

        return;

     label02:
        if z0 == 0 goto label03;

        specialinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: void configureWithWildCard(java.lang.String,java.lang.Object)>(r51, r31);

     label03:
        $r1 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = newarray (java.lang.Class)[2];

        $r3[0] = class "Lorg/osgi/service/blueprint/reflect/BeanMetadata;";

        $r3[1] = class "Ljava/lang/Object;";

        $r4 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r2, "injectBeanInstance", $r3);

     label04:
        if $r4 == null goto label10;

     label05:
        $r34 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        r52 = interfaceinvoke $r34.<org.osgi.service.blueprint.container.BlueprintContainer: org.osgi.service.blueprint.reflect.ComponentMetadata getComponentMetadata(java.lang.String)>(r51);

     label06:
        goto label08;

     label07:
        $r50 := @caughtexception;

        r52 = null;

     label08:
        $z1 = r52 instanceof org.osgi.service.blueprint.reflect.BeanMetadata;

        if $z1 == 0 goto label09;

        staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r4);

        $r36 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r35 = newarray (java.lang.Object)[2];

        $r35[0] = r52;

        $r35[1] = r31;

        virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r36, $r35);

     label09:
        goto label15;

     label10:
        $r5 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r6 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r7 = newarray (java.lang.Class)[0];

        $r8 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r6, "getRepository", $r7);

        $r9 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r8);

        $r12 = (java.lang.reflect.Method) $r9;

        $r11 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: org.osgi.service.blueprint.container.BlueprintContainer container>;

        $r10 = newarray (java.lang.Object)[0];

        $r13 = virtualinvoke $r12.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r11, $r10);

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = newarray (java.lang.Class)[1];

        $r15[0] = class "Ljava/lang/String;";

        $r16 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r14, "getRecipe", $r15);

        $r17 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r16);

        $r19 = (java.lang.reflect.Method) $r17;

        $r18 = newarray (java.lang.Object)[1];

        $r18[0] = r51;

        $r20 = virtualinvoke $r19.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r13, $r18);

        if $r20 == null goto label15;

        $r21 = virtualinvoke $r20.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = newarray (java.lang.Class)[1];

        $r22[0] = class "Ljava/lang/Object;";

        $r23 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.Method findMethod(java.lang.Class,java.lang.String,java.lang.Class[])>($r21, "setProperties", $r22);

        if $r23 == null goto label15;

        $r24 = virtualinvoke $r20.<java.lang.Object: java.lang.Class getClass()>();

        $r25 = virtualinvoke $r24.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r26 = specialinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.lang.reflect.Method findSetExecutionContextMethod(java.lang.ClassLoader)>($r25);

        if $r26 == null goto label15;

        $r27 = newarray (java.lang.Object)[1];

        $r27[0] = $r13;

        $r28 = virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r27);

     label11:
        $r29 = staticinvoke <org.apache.cxf.common.util.ReflectionUtil: java.lang.reflect.AccessibleObject setAccessible(java.lang.reflect.AccessibleObject)>($r23);

        $r32 = (java.lang.reflect.Method) $r29;

        $r30 = newarray (java.lang.Object)[1];

        $r30[0] = r31;

        virtualinvoke $r32.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r20, $r30);

     label12:
        $r33 = newarray (java.lang.Object)[1];

        $r33[0] = $r28;

        virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r33);

        goto label15;

     label13:
        $r48 := @caughtexception;

     label14:
        $r49 = newarray (java.lang.Object)[1];

        $r49[0] = $r28;

        virtualinvoke $r26.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, $r49);

        throw $r48;

     label15:
        goto label19;

     label16:
        $r44 := @caughtexception;

        $r45 = virtualinvoke $r44.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();

        $z2 = $r45 instanceof java.lang.RuntimeException;

        if $z2 == 0 goto label17;

        $r47 = (java.lang.RuntimeException) $r45;

        throw $r47;

     label17:
        $r46 = new java.lang.RuntimeException;

        specialinvoke $r46.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r45);

        throw $r46;

     label18:
        $r37 := @caughtexception;

        $r39 = <org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r40 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r38 = new java.lang.StringBuilder;

        specialinvoke $r38.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Could not configure object ");

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r39.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r40, $r43, $r37);

     label19:
        return;

        catch org.osgi.service.blueprint.container.NoSuchComponentException from label05 to label06 with label07;
        catch java.lang.Throwable from label11 to label12 with label13;
        catch java.lang.Throwable from label13 to label14 with label13;
        catch java.lang.reflect.InvocationTargetException from label04 to label15 with label16;
        catch java.lang.Exception from label04 to label15 with label18;
    }

    private java.lang.reflect.Method findSetExecutionContextMethod(java.lang.ClassLoader)
    {
        java.lang.Class[] $r2;
        java.util.logging.Logger $r6;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r7;
        java.lang.Exception $r4;
        java.util.logging.Level $r5;
        java.lang.Class $r1, $r3;
        java.lang.ClassLoader r0;
        java.lang.reflect.Method r8;

        r7 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r0 := @parameter0: java.lang.ClassLoader;

        r8 = null;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.apache.aries.blueprint.di.ExecutionContext$Holder", 0, r0);

        $r2 = newarray (java.lang.Class)[1];

        $r3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.apache.aries.blueprint.di.ExecutionContext", 0, r0);

        $r2[0] = $r3;

        r8 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("setContext", $r2);

     label2:
        goto label4;

     label3:
        $r4 := @caughtexception;

        $r6 = <org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r5 = <java.util.logging.Level: java.util.logging.Level FINE>;

        virtualinvoke $r6.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r5, "Could not find the ExecutionContext$Holder.setContext method", $r4);

     label4:
        return r8;

        catch java.lang.Exception from label1 to label2 with label3;
    }

    private void configureWithWildCard(java.lang.String, java.lang.Object)
    {
        java.lang.Throwable $r16;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r0;
        java.util.regex.Matcher $r11, $r13, $r14;
        java.util.Map $r1, $r5;
        java.lang.String $r4, r12, $r15;
        boolean $z0, $z1, $z2, $z3;
        java.util.Iterator $r8;
        org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder r10;
        java.util.List r7;
        java.lang.Object r2, $r6, $r9;
        java.lang.Class $r3, r17;

        r0 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r12 := @parameter0: java.lang.String;

        r2 := @parameter1: java.lang.Object;

        $r1 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $z0 = interfaceinvoke $r1.<java.util.Map: boolean isEmpty()>();

        if $z0 != 0 goto label11;

        r17 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();

     label01:
        $r3 = class "Ljava/lang/Object;";

        $z1 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>(r17);

        if $z1 != 0 goto label11;

        $r4 = virtualinvoke r17.<java.lang.Class: java.lang.String getName()>();

        $r5 = r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.Map wildCardBeanDefinitions>;

        $r6 = interfaceinvoke $r5.<java.util.Map: java.lang.Object get(java.lang.Object)>($r4);

        r7 = (java.util.List) $r6;

        if r7 == null goto label10;

        $r8 = interfaceinvoke r7.<java.util.List: java.util.Iterator iterator()>();

     label02:
        $z2 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label10;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder) $r9;

        $r11 = r10.<org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder: java.util.regex.Matcher matcher>;

        entermonitor $r11;

     label03:
        $r13 = r10.<org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder: java.util.regex.Matcher matcher>;

        virtualinvoke $r13.<java.util.regex.Matcher: java.util.regex.Matcher reset(java.lang.CharSequence)>(r12);

        $r14 = r10.<org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder: java.util.regex.Matcher matcher>;

        $z3 = virtualinvoke $r14.<java.util.regex.Matcher: boolean matches()>();

        if $z3 == 0 goto label05;

        $r15 = r10.<org.apache.cxf.bus.blueprint.ConfigurerImpl$MatcherHolder: java.lang.String wildCardId>;

        virtualinvoke r0.<org.apache.cxf.bus.blueprint.ConfigurerImpl: void configureBean(java.lang.String,java.lang.Object,boolean)>($r15, r2, 0);

        exitmonitor $r11;

     label04:
        return;

     label05:
        exitmonitor $r11;

     label06:
        goto label09;

     label07:
        $r16 := @caughtexception;

        exitmonitor $r11;

     label08:
        throw $r16;

     label09:
        goto label02;

     label10:
        r17 = virtualinvoke r17.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label01;

     label11:
        return;

        catch java.lang.Throwable from label03 to label04 with label07;
        catch java.lang.Throwable from label05 to label06 with label07;
        catch java.lang.Throwable from label07 to label08 with label07;
    }

    protected java.lang.String getBeanName(java.lang.Object)
    {
        java.lang.Object[] $r7;
        java.lang.NoSuchMethodException $r15, $r16;
        org.apache.cxf.bus.blueprint.ConfigurerImpl r19;
        java.util.logging.Level $r4, $r13;
        java.lang.String $r6, $r9, $r11, r20;
        java.lang.reflect.Method r21;
        boolean $z0;
        java.lang.Class[] $r2, $r18;
        java.util.logging.Logger $r3, $r14;
        org.apache.cxf.configuration.Configurable $r10;
        java.lang.Exception $r12;
        java.lang.Object r0, $r8;
        java.lang.Class $r1, $r5, $r17;

        r19 := @this: org.apache.cxf.bus.blueprint.ConfigurerImpl;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof org.apache.cxf.configuration.Configurable;

        if $z0 == 0 goto label01;

        $r10 = (org.apache.cxf.configuration.Configurable) r0;

        $r11 = interfaceinvoke $r10.<org.apache.cxf.configuration.Configurable: java.lang.String getBeanName()>();

        return $r11;

     label01:
        r20 = null;

        r21 = null;

     label02:
        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = (java.lang.Class[]) null;

        r21 = virtualinvoke $r1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("getBeanName", $r2);

     label03:
        goto label08;

     label04:
        $r16 := @caughtexception;

     label05:
        $r17 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r18 = (java.lang.Class[]) null;

        r21 = virtualinvoke $r17.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getBeanName", $r18);

     label06:
        goto label08;

     label07:
        $r15 := @caughtexception;

     label08:
        if r21 == null goto label12;

     label09:
        $r7 = newarray (java.lang.Object)[0];

        $r8 = virtualinvoke r21.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, $r7);

        $r9 = (java.lang.String) $r8;

        r20 = (java.lang.String) $r9;

     label10:
        goto label12;

     label11:
        $r12 := @caughtexception;

        $r14 = <org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r13 = <java.util.logging.Level: java.util.logging.Level WARNING>;

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r14, $r13, "ERROR_DETERMINING_BEAN_NAME_EXC", $r12);

     label12:
        if null != r20 goto label13;

        $r3 = <org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.logging.Logger LOG>;

        $r4 = <java.util.logging.Level: java.util.logging.Level FINE>;

        $r5 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        staticinvoke <org.apache.cxf.common.logging.LogUtils: void log(java.util.logging.Logger,java.util.logging.Level,java.lang.String,java.lang.Object)>($r3, $r4, "COULD_NOT_DETERMINE_BEAN_NAME_MSG", $r6);

     label13:
        return r20;

        catch java.lang.NoSuchMethodException from label02 to label03 with label04;
        catch java.lang.NoSuchMethodException from label05 to label06 with label07;
        catch java.lang.Exception from label09 to label10 with label11;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/bus/blueprint/ConfigurerImpl;");

        <org.apache.cxf.bus.blueprint.ConfigurerImpl: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
