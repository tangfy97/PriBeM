public class org.apache.xerces.impl.dv.xs.DayDV extends org.apache.xerces.impl.dv.xs.AbstractDateTimeDV
{
    private static final int DAY_SIZE;

    public void <init>()
    {
        org.apache.xerces.impl.dv.xs.DayDV r0;

        r0 := @this: org.apache.xerces.impl.dv.xs.DayDV;

        specialinvoke r0.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV: void <init>()>();

        return;
    }

    public java.lang.Object getActualValue(java.lang.String, org.apache.xerces.impl.dv.ValidationContext) throws org.apache.xerces.impl.dv.InvalidDatatypeValueException
    {
        org.apache.xerces.impl.dv.ValidationContext r6;
        org.apache.xerces.impl.dv.InvalidDatatypeValueException $r4;
        java.lang.Object[] $r5;
        org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData $r2;
        java.lang.String r1;
        org.apache.xerces.impl.dv.xs.DayDV r0;
        java.lang.Exception $r3;

        r0 := @this: org.apache.xerces.impl.dv.xs.DayDV;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.apache.xerces.impl.dv.ValidationContext;

     label1:
        $r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.DayDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1);

        return $r2;

     label2:
        $r3 := @caughtexception;

        $r4 = new org.apache.xerces.impl.dv.InvalidDatatypeValueException;

        $r5 = newarray (java.lang.Object)[2];

        $r5[0] = r1;

        $r5[1] = "gDay";

        specialinvoke $r4.<org.apache.xerces.impl.dv.InvalidDatatypeValueException: void <init>(java.lang.String,java.lang.Object[])>("cvc-datatype-valid.1.2.1", $r5);

        throw $r4;

        catch java.lang.Exception from label1 to label2 with label2;
    }

    protected org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String) throws org.apache.xerces.impl.dv.xs.SchemaDateTimeException
    {
        org.apache.xerces.impl.dv.xs.DayDV r2;
        int $i0, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String r1;
        boolean $z0;
        org.apache.xerces.impl.dv.xs.SchemaDateTimeException $r6, $r7;
        org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData $r5;
        char $c1, $c2, $c3;

        r2 := @this: org.apache.xerces.impl.dv.xs.DayDV;

        r1 := @parameter0: java.lang.String;

        $r5 = new org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData;

        specialinvoke $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: void <init>(java.lang.String,org.apache.xerces.impl.dv.xs.AbstractDateTimeDV)>(r1, r2);

        $i0 = virtualinvoke r1.<java.lang.String: int length()>();

        $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i7 = (int) $c1;

        if $i7 != 45 goto label1;

        $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(1);

        $i8 = (int) $c2;

        if $i8 != 45 goto label1;

        $c3 = virtualinvoke r1.<java.lang.String: char charAt(int)>(2);

        $i9 = (int) $c3;

        if $i9 == 45 goto label2;

     label1:
        $r6 = new org.apache.xerces.impl.dv.xs.SchemaDateTimeException;

        specialinvoke $r6.<org.apache.xerces.impl.dv.xs.SchemaDateTimeException: void <init>(java.lang.String)>("Error in day parsing");

        throw $r6;

     label2:
        $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int year> = 2000;

        $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int month> = 1;

        $i4 = virtualinvoke r2.<org.apache.xerces.impl.dv.xs.DayDV: int parseInt(java.lang.String,int,int)>(r1, 3, 5);

        $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int day> = $i4;

        if 5 >= $i0 goto label4;

        $z0 = virtualinvoke r2.<org.apache.xerces.impl.dv.xs.DayDV: boolean isNextCharUTCSign(java.lang.String,int,int)>(r1, 5, $i0);

        if $z0 != 0 goto label3;

        $r7 = new org.apache.xerces.impl.dv.xs.SchemaDateTimeException;

        specialinvoke $r7.<org.apache.xerces.impl.dv.xs.SchemaDateTimeException: void <init>(java.lang.String)>("Error in day parsing");

        throw $r7;

     label3:
        virtualinvoke r2.<org.apache.xerces.impl.dv.xs.DayDV: void getTimeZone(java.lang.String,org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData,int,int)>(r1, $r5, 5, $i0);

     label4:
        virtualinvoke r2.<org.apache.xerces.impl.dv.xs.DayDV: void validateDateTime(org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData)>($r5);

        virtualinvoke r2.<org.apache.xerces.impl.dv.xs.DayDV: void saveUnnormalized(org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData)>($r5);

        $i5 = $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int utc>;

        if $i5 == 0 goto label5;

        $i6 = $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int utc>;

        if $i6 == 90 goto label5;

        virtualinvoke r2.<org.apache.xerces.impl.dv.xs.DayDV: void normalize(org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData)>($r5);

     label5:
        $r5.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int position> = 2;

        return $r5;
    }

    protected java.lang.String dateToString(org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData)
    {
        org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData r2;
        char $c2;
        org.apache.xerces.impl.dv.xs.DayDV r1;
        java.lang.StringBuffer $r4;
        int $i0, $i1, $i3;
        java.lang.String $r3;

        r1 := @this: org.apache.xerces.impl.dv.xs.DayDV;

        r2 := @parameter0: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>(int)>(6);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(45);

        $i0 = r2.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int day>;

        virtualinvoke r1.<org.apache.xerces.impl.dv.xs.DayDV: void append(java.lang.StringBuffer,int,int)>($r4, $i0, 2);

        $i1 = r2.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int utc>;

        $c2 = (char) $i1;

        $i3 = (int) $c2;

        virtualinvoke r1.<org.apache.xerces.impl.dv.xs.DayDV: void append(java.lang.StringBuffer,int,int)>($r4, $i3, 0);

        $r3 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r3;
    }

    protected javax.xml.datatype.XMLGregorianCalendar getXMLGregorianCalendar(org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData)
    {
        org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData r0;
        javax.xml.datatype.DatatypeFactory $r1;
        javax.xml.datatype.XMLGregorianCalendar $r2;
        org.apache.xerces.impl.dv.xs.DayDV r3;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0;

        r3 := @this: org.apache.xerces.impl.dv.xs.DayDV;

        r0 := @parameter0: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData;

        $r1 = <org.apache.xerces.impl.dv.xs.AbstractDateTimeDV: javax.xml.datatype.DatatypeFactory datatypeFactory>;

        $i0 = r0.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int unNormDay>;

        $z0 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: boolean hasTimeZone()>();

        if $z0 == 0 goto label1;

        $i1 = r0.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int timezoneHr>;

        $i3 = $i1 * 60;

        $i2 = r0.<org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData: int timezoneMin>;

        $i4 = $i3 + $i2;

        goto label2;

     label1:
        $i4 = -2147483648;

     label2:
        $r2 = virtualinvoke $r1.<javax.xml.datatype.DatatypeFactory: javax.xml.datatype.XMLGregorianCalendar newXMLGregorianCalendar(int,int,int,int,int,int,int,int)>(-2147483648, -2147483648, $i0, -2147483648, -2147483648, -2147483648, -2147483648, $i4);

        return $r2;
    }

    public static void <clinit>()
    {
        <org.apache.xerces.impl.dv.xs.DayDV: int DAY_SIZE> = 5;

        return;
    }
}
