class org.apache.pdfbox.pdfparser.PDFParser$ConflictObj extends java.lang.Object
{
    private long offset;
    private org.apache.pdfbox.persistence.util.COSObjectKey objectKey;
    private org.apache.pdfbox.cos.COSObject object;

    public void <init>(long, org.apache.pdfbox.persistence.util.COSObjectKey, org.apache.pdfbox.cos.COSObject)
    {
        org.apache.pdfbox.pdfparser.PDFParser$ConflictObj r0;
        org.apache.pdfbox.cos.COSObject r2;
        long l0;
        org.apache.pdfbox.persistence.util.COSObjectKey r1;

        r0 := @this: org.apache.pdfbox.pdfparser.PDFParser$ConflictObj;

        l0 := @parameter0: long;

        r1 := @parameter1: org.apache.pdfbox.persistence.util.COSObjectKey;

        r2 := @parameter2: org.apache.pdfbox.cos.COSObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: long offset> = l0;

        r0.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.persistence.util.COSObjectKey objectKey> = r1;

        r0.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.cos.COSObject object> = r2;

        return;
    }

    public java.lang.String toString()
    {
        long $l0;
        org.apache.pdfbox.persistence.util.COSObjectKey $r5;
        org.apache.pdfbox.pdfparser.PDFParser$ConflictObj r2;
        java.lang.StringBuilder $r0, $r1, $r3, $r4, $r6, $r7;
        java.lang.String $r8;

        r2 := @this: org.apache.pdfbox.pdfparser.PDFParser$ConflictObj;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Object(");

        $l0 = r2.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: long offset>;

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $r5 = r2.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.persistence.util.COSObjectKey objectKey>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r8;
    }

    private static void resolveConflicts(org.apache.pdfbox.cos.COSDocument, java.util.List) throws java.io.IOException
    {
        java.lang.Long $r6;
        java.util.Map $r3;
        boolean $z0, $z1, $z2, $z3;
        java.util.Collection $r4;
        org.apache.pdfbox.persistence.util.COSObjectKey $r8, $r14;
        java.util.List r0;
        org.apache.pdfbox.cos.COSBase $r25;
        java.lang.StringBuilder $r12, $r13, $r15, $r16, $r17, $r18, $r19;
        org.apache.pdfbox.cos.COSObject $r9, $r22, $r24;
        long $l0, $l1;
        org.apache.pdfbox.cos.COSInteger $r10, $r21, $r23;
        java.lang.String $r20;
        org.apache.pdfbox.cos.COSDocument r2;
        java.util.Iterator $r1;
        org.apache.pdfbox.pdfparser.PDFParser$ConflictObj $r7;
        java.lang.Object $r5;
        org.apache.commons.logging.Log $r11;

        r2 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        r0 := @parameter1: java.util.List;

        $r1 = interfaceinvoke r0.<java.util.List: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDocument: java.util.Map getXrefTable()>();

        $r4 = interfaceinvoke $r3.<java.util.Map: java.util.Collection values()>();

     label1:
        $r5 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r7 = (org.apache.pdfbox.pdfparser.PDFParser$ConflictObj) $r5;

        $r6 = new java.lang.Long;

        $l0 = $r7.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: long offset>;

        specialinvoke $r6.<java.lang.Long: void <init>(long)>($l0);

        $l1 = virtualinvoke $r6.<java.lang.Long: long longValue()>();

        $z1 = staticinvoke <org.apache.pdfbox.pdfparser.PDFParser: boolean access$100(java.util.Collection,long,int)>($r4, $l1, 4);

        if $z1 == 0 goto label3;

        $r8 = $r7.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.persistence.util.COSObjectKey objectKey>;

        $r9 = virtualinvoke r2.<org.apache.pdfbox.cos.COSDocument: org.apache.pdfbox.cos.COSObject getObjectFromPool(org.apache.pdfbox.persistence.util.COSObjectKey)>($r8);

        $r10 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        if $r10 == null goto label2;

        $r21 = virtualinvoke $r9.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        $r22 = $r7.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.cos.COSObject object>;

        $r23 = virtualinvoke $r22.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSInteger getObjectNumber()>();

        $z2 = virtualinvoke $r21.<org.apache.pdfbox.cos.COSInteger: boolean equals(java.lang.Object)>($r23);

        if $z2 == 0 goto label2;

        $r24 = $r7.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.cos.COSObject object>;

        $r25 = virtualinvoke $r24.<org.apache.pdfbox.cos.COSObject: org.apache.pdfbox.cos.COSBase getObject()>();

        virtualinvoke $r9.<org.apache.pdfbox.cos.COSObject: void setObject(org.apache.pdfbox.cos.COSBase)>($r25);

        goto label3;

     label2:
        $r11 = staticinvoke <org.apache.pdfbox.pdfparser.PDFParser: org.apache.commons.logging.Log access$200()>();

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflict object [");

        $r14 = $r7.<org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: org.apache.pdfbox.persistence.util.COSObjectKey objectKey>;

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] at offset ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" found in the xref table, but the object numbers differ. Ignoring this object.");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" The document is maybe malformed.");

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r11.<org.apache.commons.logging.Log: void debug(java.lang.Object)>($r20);

     label3:
        $z3 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z3 != 0 goto label1;

     label4:
        return;
    }

    static void access$000(org.apache.pdfbox.cos.COSDocument, java.util.List) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDocument r0;
        java.util.List r1;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDocument;

        r1 := @parameter1: java.util.List;

        staticinvoke <org.apache.pdfbox.pdfparser.PDFParser$ConflictObj: void resolveConflicts(org.apache.pdfbox.cos.COSDocument,java.util.List)>(r0, r1);

        return;
    }
}
