public final class kodkod.ast.NotFormula extends kodkod.ast.Formula
{
    private final kodkod.ast.Formula formula;

    void <init>(kodkod.ast.Formula)
    {
        java.lang.NullPointerException $r2;
        kodkod.ast.NotFormula r0;
        kodkod.ast.Formula r1;

        r0 := @this: kodkod.ast.NotFormula;

        r1 := @parameter0: kodkod.ast.Formula;

        specialinvoke r0.<kodkod.ast.Formula: void <init>()>();

        if r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>(java.lang.String)>("formula");

        throw $r2;

     label1:
        r0.<kodkod.ast.NotFormula: kodkod.ast.Formula formula> = r1;

        return;
    }

    public kodkod.ast.Formula formula()
    {
        kodkod.ast.NotFormula r0;
        kodkod.ast.Formula $r1;

        r0 := @this: kodkod.ast.NotFormula;

        $r1 = r0.<kodkod.ast.NotFormula: kodkod.ast.Formula formula>;

        return $r1;
    }

    public java.lang.Object accept(kodkod.ast.visitor.ReturnVisitor)
    {
        java.lang.Object $r2;
        kodkod.ast.visitor.ReturnVisitor r0;
        kodkod.ast.NotFormula r1;

        r1 := @this: kodkod.ast.NotFormula;

        r0 := @parameter0: kodkod.ast.visitor.ReturnVisitor;

        $r2 = interfaceinvoke r0.<kodkod.ast.visitor.ReturnVisitor: java.lang.Object visit(kodkod.ast.NotFormula)>(r1);

        return $r2;
    }

    public void accept(kodkod.ast.visitor.VoidVisitor)
    {
        kodkod.ast.visitor.VoidVisitor r0;
        kodkod.ast.NotFormula r1;

        r1 := @this: kodkod.ast.NotFormula;

        r0 := @parameter0: kodkod.ast.visitor.VoidVisitor;

        interfaceinvoke r0.<kodkod.ast.visitor.VoidVisitor: void visit(kodkod.ast.NotFormula)>(r1);

        return;
    }

    public java.lang.String toString()
    {
        kodkod.ast.NotFormula r1;
        kodkod.ast.Formula $r2;
        java.lang.StringBuilder $r0, $r3;
        java.lang.String $r4;

        r1 := @this: kodkod.ast.NotFormula;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("!");

        $r2 = r1.<kodkod.ast.NotFormula: kodkod.ast.Formula formula>;

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
