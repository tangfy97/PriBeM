class com.mycila.inject.internal.guava.collect.StandardTable$Values extends com.mycila.inject.internal.guava.collect.StandardTable$TableCollection
{
    final com.mycila.inject.internal.guava.collect.StandardTable this$0;

    private void <init>(com.mycila.inject.internal.guava.collect.StandardTable)
    {
        com.mycila.inject.internal.guava.collect.StandardTable$Values r0;
        com.mycila.inject.internal.guava.collect.StandardTable r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$Values;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.StandardTable;

        r0.<com.mycila.inject.internal.guava.collect.StandardTable$Values: com.mycila.inject.internal.guava.collect.StandardTable this$0> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.StandardTable$TableCollection: void <init>(com.mycila.inject.internal.guava.collect.StandardTable,com.mycila.inject.internal.guava.collect.StandardTable$1)>(r1, null);

        return;
    }

    public java.util.Iterator iterator()
    {
        com.mycila.inject.internal.guava.collect.StandardTable$Values$1 $r4;
        java.util.Iterator $r3;
        com.mycila.inject.internal.guava.collect.StandardTable$Values r0;
        java.util.Set $r2;
        com.mycila.inject.internal.guava.collect.StandardTable $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$Values;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$Values: com.mycila.inject.internal.guava.collect.StandardTable this$0>;

        $r2 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.StandardTable: java.util.Set cellSet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

        $r4 = new com.mycila.inject.internal.guava.collect.StandardTable$Values$1;

        specialinvoke $r4.<com.mycila.inject.internal.guava.collect.StandardTable$Values$1: void <init>(com.mycila.inject.internal.guava.collect.StandardTable$Values,java.util.Iterator)>(r0, $r3);

        return $r4;
    }

    public int size()
    {
        int $i0;
        com.mycila.inject.internal.guava.collect.StandardTable$Values r0;
        com.mycila.inject.internal.guava.collect.StandardTable $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$Values;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.StandardTable$Values: com.mycila.inject.internal.guava.collect.StandardTable this$0>;

        $i0 = virtualinvoke $r1.<com.mycila.inject.internal.guava.collect.StandardTable: int size()>();

        return $i0;
    }

    void <init>(com.mycila.inject.internal.guava.collect.StandardTable, com.mycila.inject.internal.guava.collect.StandardTable$1)
    {
        com.mycila.inject.internal.guava.collect.StandardTable$1 r2;
        com.mycila.inject.internal.guava.collect.StandardTable$Values r0;
        com.mycila.inject.internal.guava.collect.StandardTable r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.StandardTable$Values;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.StandardTable;

        r2 := @parameter1: com.mycila.inject.internal.guava.collect.StandardTable$1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.StandardTable$Values: void <init>(com.mycila.inject.internal.guava.collect.StandardTable)>(r1);

        return;
    }
}
