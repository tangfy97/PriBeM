public final class kodkod.engine.config.ConsoleReporter extends java.lang.Object implements kodkod.engine.config.Reporter
{

    public void <init>()
    {
        kodkod.engine.config.ConsoleReporter r0;

        r0 := @this: kodkod.engine.config.ConsoleReporter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void generatingSBP()
    {
        java.io.PrintStream $r0;
        kodkod.engine.config.ConsoleReporter r1;

        r1 := @this: kodkod.engine.config.ConsoleReporter;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("generating lex-leader symmetry breaking predicate ...");

        return;
    }

    public void flattening(kodkod.engine.bool.BooleanFormula)
    {
        java.io.PrintStream $r0;
        kodkod.engine.config.ConsoleReporter r1;
        kodkod.engine.bool.BooleanFormula r2;

        r1 := @this: kodkod.engine.config.ConsoleReporter;

        r2 := @parameter0: kodkod.engine.bool.BooleanFormula;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("flattening ...");

        return;
    }

    public void skolemizing(kodkod.ast.Decl, kodkod.ast.Relation, java.util.List)
    {
        java.io.PrintStream $r1;
        kodkod.ast.Decl r2;
        java.util.List r11;
        int $i0;
        kodkod.engine.config.ConsoleReporter r10;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r7, $r8;
        java.lang.String $r9;
        kodkod.ast.Relation r5;

        r10 := @this: kodkod.engine.config.ConsoleReporter;

        r2 := @parameter0: kodkod.ast.Decl;

        r5 := @parameter1: kodkod.ast.Relation;

        r11 := @parameter2: java.util.List;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("skolemizing ");

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": skolem relation=");

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", arity=");

        $i0 = virtualinvoke r5.<kodkod.ast.Relation: int arity()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r9);

        return;
    }

    public void solvingCNF(int, int, int)
    {
        java.io.PrintStream $r1;
        int i0, i1, i2;
        kodkod.engine.config.ConsoleReporter r6;
        java.lang.StringBuilder $r0, $r2, $r3, $r4;
        java.lang.String $r5;

        r6 := @this: kodkod.engine.config.ConsoleReporter;

        i2 := @parameter0: int;

        i0 := @parameter1: int;

        i1 := @parameter2: int;

        $r1 = <java.lang.System: java.io.PrintStream out>;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("solving p cnf ");

        $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

        return;
    }

    public void detectingSymmetries(kodkod.instance.Bounds)
    {
        java.io.PrintStream $r0;
        kodkod.engine.config.ConsoleReporter r1;
        kodkod.instance.Bounds r2;

        r1 := @this: kodkod.engine.config.ConsoleReporter;

        r2 := @parameter0: kodkod.instance.Bounds;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("detecting symmetries ...");

        return;
    }

    public void detectedSymmetries(java.util.Set)
    {
        kodkod.engine.config.ConsoleReporter r0;
        java.util.Set r1;

        r0 := @this: kodkod.engine.config.ConsoleReporter;

        r1 := @parameter0: java.util.Set;

        return;
    }

    public void optimizingBoundsAndFormula()
    {
        java.io.PrintStream $r0;
        kodkod.engine.config.ConsoleReporter r1;

        r1 := @this: kodkod.engine.config.ConsoleReporter;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("optimizing bounds and formula (breaking predicate symmetries, inlining, skolemizing) ...");

        return;
    }

    public void translatingToBoolean(kodkod.ast.Formula, kodkod.instance.Bounds)
    {
        java.io.PrintStream $r0;
        kodkod.instance.Bounds r3;
        kodkod.ast.Formula r2;
        kodkod.engine.config.ConsoleReporter r1;

        r1 := @this: kodkod.engine.config.ConsoleReporter;

        r2 := @parameter0: kodkod.ast.Formula;

        r3 := @parameter1: kodkod.instance.Bounds;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("translating to boolean ...");

        return;
    }

    public void translatingToCNF(kodkod.engine.bool.BooleanFormula)
    {
        java.io.PrintStream $r0;
        kodkod.engine.config.ConsoleReporter r1;
        kodkod.engine.bool.BooleanFormula r2;

        r1 := @this: kodkod.engine.config.ConsoleReporter;

        r2 := @parameter0: kodkod.engine.bool.BooleanFormula;

        $r0 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("translating to cnf ...");

        return;
    }

    public java.lang.String toString()
    {
        kodkod.engine.config.ConsoleReporter r0;

        r0 := @this: kodkod.engine.config.ConsoleReporter;

        return "ConsoleReporter";
    }
}
