public abstract class org.eclipse.jetty.server.nio.AbstractNIOConnector extends org.eclipse.jetty.server.AbstractConnector implements org.eclipse.jetty.server.nio.NIOConnector
{

    public void <init>()
    {
        org.eclipse.jetty.io.Buffers$Type $r1, $r3, $r5, $r7;
        org.eclipse.jetty.server.nio.AbstractNIOConnector r0;
        org.eclipse.jetty.http.HttpBuffersImpl $r2, $r4, $r6, $r8;

        r0 := @this: org.eclipse.jetty.server.nio.AbstractNIOConnector;

        specialinvoke r0.<org.eclipse.jetty.server.AbstractConnector: void <init>()>();

        $r2 = r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.http.HttpBuffersImpl _buffers>;

        $r1 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type DIRECT>;

        virtualinvoke $r2.<org.eclipse.jetty.http.HttpBuffersImpl: void setRequestBufferType(org.eclipse.jetty.io.Buffers$Type)>($r1);

        $r4 = r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.http.HttpBuffersImpl _buffers>;

        $r3 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type INDIRECT>;

        virtualinvoke $r4.<org.eclipse.jetty.http.HttpBuffersImpl: void setRequestHeaderType(org.eclipse.jetty.io.Buffers$Type)>($r3);

        $r6 = r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.http.HttpBuffersImpl _buffers>;

        $r5 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type DIRECT>;

        virtualinvoke $r6.<org.eclipse.jetty.http.HttpBuffersImpl: void setResponseBufferType(org.eclipse.jetty.io.Buffers$Type)>($r5);

        $r8 = r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.http.HttpBuffersImpl _buffers>;

        $r7 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type INDIRECT>;

        virtualinvoke $r8.<org.eclipse.jetty.http.HttpBuffersImpl: void setResponseHeaderType(org.eclipse.jetty.io.Buffers$Type)>($r7);

        return;
    }

    public boolean getUseDirectBuffers()
    {
        org.eclipse.jetty.io.Buffers$Type $r1, $r2;
        org.eclipse.jetty.server.nio.AbstractNIOConnector r0;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.server.nio.AbstractNIOConnector;

        $r1 = virtualinvoke r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.io.Buffers$Type getRequestBufferType()>();

        $r2 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type DIRECT>;

        if $r1 != $r2 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public void setUseDirectBuffers(boolean)
    {
        org.eclipse.jetty.http.HttpBuffersImpl $r1, $r2;
        org.eclipse.jetty.io.Buffers$Type $r3, $r4;
        org.eclipse.jetty.server.nio.AbstractNIOConnector r0;
        boolean z0;

        r0 := @this: org.eclipse.jetty.server.nio.AbstractNIOConnector;

        z0 := @parameter0: boolean;

        $r1 = r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.http.HttpBuffersImpl _buffers>;

        if z0 == 0 goto label1;

        $r3 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type DIRECT>;

        goto label2;

     label1:
        $r3 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type INDIRECT>;

     label2:
        virtualinvoke $r1.<org.eclipse.jetty.http.HttpBuffersImpl: void setRequestBufferType(org.eclipse.jetty.io.Buffers$Type)>($r3);

        $r2 = r0.<org.eclipse.jetty.server.nio.AbstractNIOConnector: org.eclipse.jetty.http.HttpBuffersImpl _buffers>;

        if z0 == 0 goto label3;

        $r4 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type DIRECT>;

        goto label4;

     label3:
        $r4 = <org.eclipse.jetty.io.Buffers$Type: org.eclipse.jetty.io.Buffers$Type INDIRECT>;

     label4:
        virtualinvoke $r2.<org.eclipse.jetty.http.HttpBuffersImpl: void setResponseBufferType(org.eclipse.jetty.io.Buffers$Type)>($r4);

        return;
    }
}
