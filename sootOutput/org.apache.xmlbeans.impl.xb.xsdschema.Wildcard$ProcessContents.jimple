public interface  org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents extends java.lang.Object implements org.apache.xmlbeans.XmlNMTOKEN
{
    public static final org.apache.xmlbeans.SchemaType type;
    public static final org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum SKIP;
    public static final org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum LAX;
    public static final org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum STRICT;
    public static final int INT_SKIP;
    public static final int INT_LAX;
    public static final int INT_STRICT;

    public abstract org.apache.xmlbeans.StringEnumAbstractBase enumValue();

    public abstract void set(org.apache.xmlbeans.StringEnumAbstractBase);

    static void <clinit>()
    {
        org.apache.xmlbeans.SchemaTypeSystem $r2;
        org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum $r5, $r6, $r7;
        java.lang.Class $r0, $r8;
        org.apache.xmlbeans.SchemaComponent $r3;
        java.lang.ClassLoader $r1;
        org.apache.xmlbeans.SchemaType $r4;

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: int INT_STRICT> = 3;

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: int INT_LAX> = 2;

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: int INT_SKIP> = 1;

        $r0 = <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$Wildcard$ProcessContents>;

        if $r0 != null goto label1;

        $r8 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$(java.lang.String)>("org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents");

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$Wildcard$ProcessContents> = $r8;

        goto label2;

     label1:
        $r8 = <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$1: java.lang.Class class$org$apache$xmlbeans$impl$xb$xsdschema$Wildcard$ProcessContents>;

     label2:
        $r1 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        $r2 = staticinvoke <org.apache.xmlbeans.XmlBeans: org.apache.xmlbeans.SchemaTypeSystem typeSystemForClassLoader(java.lang.ClassLoader,java.lang.String)>($r1, "schemaorg_apache_xmlbeans.system.sXMLSCHEMA");

        $r3 = interfaceinvoke $r2.<org.apache.xmlbeans.SchemaTypeSystem: org.apache.xmlbeans.SchemaComponent resolveHandle(java.lang.String)>("processcontents864aattrtype");

        $r4 = (org.apache.xmlbeans.SchemaType) $r3;

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: org.apache.xmlbeans.SchemaType type> = $r4;

        $r5 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum: org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum forString(java.lang.String)>("skip");

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum SKIP> = $r5;

        $r6 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum: org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum forString(java.lang.String)>("lax");

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum LAX> = $r6;

        $r7 = staticinvoke <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum: org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum forString(java.lang.String)>("strict");

        <org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents: org.apache.xmlbeans.impl.xb.xsdschema.Wildcard$ProcessContents$Enum STRICT> = $r7;

        return;
    }
}
