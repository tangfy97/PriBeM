public class org.apache.lucene.search.function.FieldScoreQuery extends org.apache.lucene.search.function.ValueSourceQuery
{

    public void <init>(java.lang.String, org.apache.lucene.search.function.FieldScoreQuery$Type)
    {
        org.apache.lucene.search.function.ValueSource $r3;
        org.apache.lucene.search.function.FieldScoreQuery$Type r2;
        org.apache.lucene.search.function.FieldScoreQuery r0;
        java.lang.String r1;

        r0 := @this: org.apache.lucene.search.function.FieldScoreQuery;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.apache.lucene.search.function.FieldScoreQuery$Type;

        $r3 = staticinvoke <org.apache.lucene.search.function.FieldScoreQuery: org.apache.lucene.search.function.ValueSource getValueSource(java.lang.String,org.apache.lucene.search.function.FieldScoreQuery$Type)>(r1, r2);

        specialinvoke r0.<org.apache.lucene.search.function.ValueSourceQuery: void <init>(org.apache.lucene.search.function.ValueSource)>($r3);

        return;
    }

    private static org.apache.lucene.search.function.ValueSource getValueSource(java.lang.String, org.apache.lucene.search.function.FieldScoreQuery$Type)
    {
        org.apache.lucene.search.function.ByteFieldSource $r14;
        org.apache.lucene.search.function.FieldScoreQuery$Type r0, $r1, $r2, $r3, $r4;
        org.apache.lucene.search.function.FloatFieldSource $r10;
        org.apache.lucene.search.function.IntFieldSource $r12;
        java.lang.IllegalArgumentException $r5;
        org.apache.lucene.search.function.ShortFieldSource $r13;
        java.lang.StringBuilder $r6, $r7, $r8;
        java.lang.String $r9, r11;

        r11 := @parameter0: java.lang.String;

        r0 := @parameter1: org.apache.lucene.search.function.FieldScoreQuery$Type;

        $r1 = <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type BYTE>;

        if r0 != $r1 goto label1;

        $r14 = new org.apache.lucene.search.function.ByteFieldSource;

        specialinvoke $r14.<org.apache.lucene.search.function.ByteFieldSource: void <init>(java.lang.String)>(r11);

        return $r14;

     label1:
        $r2 = <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type SHORT>;

        if r0 != $r2 goto label2;

        $r13 = new org.apache.lucene.search.function.ShortFieldSource;

        specialinvoke $r13.<org.apache.lucene.search.function.ShortFieldSource: void <init>(java.lang.String)>(r11);

        return $r13;

     label2:
        $r3 = <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type INT>;

        if r0 != $r3 goto label3;

        $r12 = new org.apache.lucene.search.function.IntFieldSource;

        specialinvoke $r12.<org.apache.lucene.search.function.IntFieldSource: void <init>(java.lang.String)>(r11);

        return $r12;

     label3:
        $r4 = <org.apache.lucene.search.function.FieldScoreQuery$Type: org.apache.lucene.search.function.FieldScoreQuery$Type FLOAT>;

        if r0 != $r4 goto label4;

        $r10 = new org.apache.lucene.search.function.FloatFieldSource;

        specialinvoke $r10.<org.apache.lucene.search.function.FloatFieldSource: void <init>(java.lang.String)>(r11);

        return $r10;

     label4:
        $r5 = new java.lang.IllegalArgumentException;

        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" is not a known Field Score Query Type!");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r9);

        throw $r5;
    }
}
