public class org.jdesktop.swingx.border.IconBorder extends java.lang.Object implements javax.swing.border.Border, java.io.Serializable
{
    public static final javax.swing.Icon EMPTY_ICON;
    private int padding;
    private javax.swing.Icon icon;
    private int iconPosition;
    private java.awt.Rectangle iconBounds;

    public void <init>()
    {
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        specialinvoke r0.<org.jdesktop.swingx.border.IconBorder: void <init>(javax.swing.Icon)>(null);

        return;
    }

    public void <init>(javax.swing.Icon)
    {
        javax.swing.Icon r1;
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        r1 := @parameter0: javax.swing.Icon;

        specialinvoke r0.<org.jdesktop.swingx.border.IconBorder: void <init>(javax.swing.Icon,int)>(r1, 11);

        return;
    }

    public void <init>(javax.swing.Icon, int)
    {
        int i0;
        javax.swing.Icon r1;
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        r1 := @parameter0: javax.swing.Icon;

        i0 := @parameter1: int;

        specialinvoke r0.<org.jdesktop.swingx.border.IconBorder: void <init>(javax.swing.Icon,int,int)>(r1, i0, 4);

        return;
    }

    public void <init>(javax.swing.Icon, int, int)
    {
        java.awt.Rectangle $r1;
        org.jdesktop.swingx.border.IconBorder r0;
        int i0, i1;
        javax.swing.Icon r2;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        r2 := @parameter0: javax.swing.Icon;

        i1 := @parameter1: int;

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.awt.Rectangle;

        specialinvoke $r1.<java.awt.Rectangle: void <init>()>();

        r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds> = $r1;

        virtualinvoke r0.<org.jdesktop.swingx.border.IconBorder: void setIcon(javax.swing.Icon)>(r2);

        virtualinvoke r0.<org.jdesktop.swingx.border.IconBorder: void setPadding(int)>(i0);

        virtualinvoke r0.<org.jdesktop.swingx.border.IconBorder: void setIconPosition(int)>(i1);

        return;
    }

    private boolean isValidPosition(int)
    {
        int i0;
        org.jdesktop.swingx.border.IconBorder r0;
        boolean z0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        i0 := @parameter0: int;

        tableswitch(i0)
        {
            case 3: goto label1;
            case 4: goto label2;
            case 5: goto label2;
            case 6: goto label2;
            case 7: goto label1;
            case 8: goto label2;
            case 9: goto label2;
            case 10: goto label1;
            case 11: goto label1;
            default: goto label2;
        };

     label1:
        z0 = 1;

        goto label3;

     label2:
        z0 = 0;

     label3:
        return z0;
    }

    public java.awt.Insets getBorderInsets(java.awt.Component)
    {
        java.awt.Insets $r4, $r5;
        org.jdesktop.swingx.border.IconBorder r0;
        javax.swing.Icon $r1;
        java.awt.Component r2;
        java.awt.ComponentOrientation $r3;
        int $i0, $i1, $i2, i3, $i4, $i5;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        r2 := @parameter0: java.awt.Component;

        $r1 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i0 = interfaceinvoke $r1.<javax.swing.Icon: int getIconWidth()>();

        $i1 = r0.<org.jdesktop.swingx.border.IconBorder: int padding>;

        $i2 = 2 * $i1;

        i3 = $i0 + $i2;

        $r3 = virtualinvoke r2.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();

        $i4 = r0.<org.jdesktop.swingx.border.IconBorder: int iconPosition>;

        $i5 = specialinvoke r0.<org.jdesktop.swingx.border.IconBorder: int bidiDecodeLeadingTrailing(java.awt.ComponentOrientation,int)>($r3, $i4);

        if $i5 != 3 goto label1;

        $r5 = new java.awt.Insets;

        specialinvoke $r5.<java.awt.Insets: void <init>(int,int,int,int)>(0, 0, 0, i3);

        return $r5;

     label1:
        $r4 = new java.awt.Insets;

        specialinvoke $r4.<java.awt.Insets: void <init>(int,int,int,int)>(0, i3, 0, 0);

        return $r4;
    }

    public void setIcon(javax.swing.Icon)
    {
        javax.swing.Icon r1, $r2;
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        r1 := @parameter0: javax.swing.Icon;

        if r1 != null goto label1;

        $r2 = <org.jdesktop.swingx.border.IconBorder: javax.swing.Icon EMPTY_ICON>;

        goto label2;

     label1:
        $r2 = r1;

     label2:
        r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon> = $r2;

        return;
    }

    public boolean isBorderOpaque()
    {
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        return 0;
    }

    public void paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int)
    {
        org.jdesktop.swingx.border.IconBorder r0;
        javax.swing.Icon $r4, $r7, $r9, $r12, $r15, $r17, $r18;
        java.awt.Component r1;
        java.awt.Graphics r3;
        java.awt.Rectangle $r5, $r6, $r8, $r10, $r11, $r13, $r14, $r16, $r19, $r20;
        int $i0, $i1, i2, i3, $i4, $i5, $i6, $i7, i8, $i9, $i10, $i11, $i12, $i13, $i14, i15, $i16, $i17, $i18, $i19, $i20, $i21, $i22, $i23, $i24, $i25, $i26, $i27, $i28, $i29, $i30, $i31;
        java.awt.ComponentOrientation $r2;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        r1 := @parameter0: java.awt.Component;

        r3 := @parameter1: java.awt.Graphics;

        i8 := @parameter2: int;

        i2 := @parameter3: int;

        i15 := @parameter4: int;

        i3 := @parameter5: int;

        $r2 = virtualinvoke r1.<java.awt.Component: java.awt.ComponentOrientation getComponentOrientation()>();

        $i0 = r0.<org.jdesktop.swingx.border.IconBorder: int iconPosition>;

        $i1 = specialinvoke r0.<org.jdesktop.swingx.border.IconBorder: int bidiDecodeLeadingTrailing(java.awt.ComponentOrientation,int)>($r2, $i0);

        if $i1 != 2 goto label1;

        $r11 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $i21 = r0.<org.jdesktop.swingx.border.IconBorder: int padding>;

        $i22 = i2 + $i21;

        $r11.<java.awt.Rectangle: int y> = $i22;

        $r13 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $i24 = i8 + i15;

        $i23 = r0.<org.jdesktop.swingx.border.IconBorder: int padding>;

        $i25 = $i24 - $i23;

        $r12 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i26 = interfaceinvoke $r12.<javax.swing.Icon: int getIconWidth()>();

        $i27 = $i25 - $i26;

        $r13.<java.awt.Rectangle: int x> = $i27;

        goto label3;

     label1:
        if $i1 != 3 goto label2;

        $r8 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $r7 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i11 = interfaceinvoke $r7.<javax.swing.Icon: int getIconHeight()>();

        $i12 = i3 - $i11;

        $i13 = $i12 / 2;

        $i14 = i2 + $i13;

        $r8.<java.awt.Rectangle: int y> = $i14;

        $r10 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $i17 = i8 + i15;

        $i16 = r0.<org.jdesktop.swingx.border.IconBorder: int padding>;

        $i18 = $i17 - $i16;

        $r9 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i19 = interfaceinvoke $r9.<javax.swing.Icon: int getIconWidth()>();

        $i20 = $i18 - $i19;

        $r10.<java.awt.Rectangle: int x> = $i20;

        goto label3;

     label2:
        if $i1 != 7 goto label3;

        $r5 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $r4 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i4 = interfaceinvoke $r4.<javax.swing.Icon: int getIconHeight()>();

        $i5 = i3 - $i4;

        $i6 = $i5 / 2;

        $i7 = i2 + $i6;

        $r5.<java.awt.Rectangle: int y> = $i7;

        $r6 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $i9 = r0.<org.jdesktop.swingx.border.IconBorder: int padding>;

        $i10 = i8 + $i9;

        $r6.<java.awt.Rectangle: int x> = $i10;

     label3:
        $r14 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $r15 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i28 = interfaceinvoke $r15.<javax.swing.Icon: int getIconWidth()>();

        $r14.<java.awt.Rectangle: int width> = $i28;

        $r16 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $r17 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $i29 = interfaceinvoke $r17.<javax.swing.Icon: int getIconHeight()>();

        $r16.<java.awt.Rectangle: int height> = $i29;

        $r18 = r0.<org.jdesktop.swingx.border.IconBorder: javax.swing.Icon icon>;

        $r19 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $i30 = $r19.<java.awt.Rectangle: int x>;

        $r20 = r0.<org.jdesktop.swingx.border.IconBorder: java.awt.Rectangle iconBounds>;

        $i31 = $r20.<java.awt.Rectangle: int y>;

        interfaceinvoke $r18.<javax.swing.Icon: void paintIcon(java.awt.Component,java.awt.Graphics,int,int)>(r1, r3, $i30, $i31);

        return;
    }

    private int bidiDecodeLeadingTrailing(java.awt.ComponentOrientation, int)
    {
        org.jdesktop.swingx.border.IconBorder r1;
        int i0;
        java.awt.ComponentOrientation r0;
        boolean $z0, $z1;

        r1 := @this: org.jdesktop.swingx.border.IconBorder;

        r0 := @parameter0: java.awt.ComponentOrientation;

        i0 := @parameter1: int;

        if i0 != 11 goto label2;

        $z1 = virtualinvoke r0.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z1 != 0 goto label1;

        return 7;

     label1:
        return 3;

     label2:
        if i0 != 10 goto label4;

        $z0 = virtualinvoke r0.<java.awt.ComponentOrientation: boolean isLeftToRight()>();

        if $z0 == 0 goto label3;

        return 7;

     label3:
        return 3;

     label4:
        return i0;
    }

    public int getPadding()
    {
        int $i0;
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        $i0 = r0.<org.jdesktop.swingx.border.IconBorder: int padding>;

        return $i0;
    }

    public void setPadding(int)
    {
        int i0, $i1;
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        i0 := @parameter0: int;

        if i0 >= 0 goto label1;

        $i1 = 0;

        goto label2;

     label1:
        $i1 = i0;

     label2:
        r0.<org.jdesktop.swingx.border.IconBorder: int padding> = $i1;

        return;
    }

    public int getIconPosition()
    {
        int $i0;
        org.jdesktop.swingx.border.IconBorder r0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        $i0 = r0.<org.jdesktop.swingx.border.IconBorder: int iconPosition>;

        return $i0;
    }

    public void setIconPosition(int)
    {
        org.jdesktop.swingx.border.IconBorder r0;
        int i0;
        java.lang.IllegalArgumentException $r1;
        boolean $z0;

        r0 := @this: org.jdesktop.swingx.border.IconBorder;

        i0 := @parameter0: int;

        $z0 = specialinvoke r0.<org.jdesktop.swingx.border.IconBorder: boolean isValidPosition(int)>(i0);

        if $z0 != 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid icon position");

        throw $r1;

     label1:
        r0.<org.jdesktop.swingx.border.IconBorder: int iconPosition> = i0;

        return;
    }

    static void <clinit>()
    {
        org.jdesktop.swingx.icon.EmptyIcon $r0;

        $r0 = new org.jdesktop.swingx.icon.EmptyIcon;

        specialinvoke $r0.<org.jdesktop.swingx.icon.EmptyIcon: void <init>()>();

        <org.jdesktop.swingx.border.IconBorder: javax.swing.Icon EMPTY_ICON> = $r0;

        return;
    }
}
