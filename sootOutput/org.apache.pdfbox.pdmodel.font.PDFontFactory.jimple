public class org.apache.pdfbox.pdmodel.font.PDFontFactory extends java.lang.Object
{
    private static final org.apache.commons.logging.Log LOG;

    private void <init>()
    {
        org.apache.pdfbox.pdmodel.font.PDFontFactory r0;

        r0 := @this: org.apache.pdfbox.pdmodel.font.PDFontFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary, java.util.Map) throws java.io.IOException
    {
        org.apache.pdfbox.cos.COSDictionary r0;
        org.apache.pdfbox.pdmodel.font.PDFont $r1;
        java.util.Map r2;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        r2 := @parameter1: java.util.Map;

        $r1 = staticinvoke <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary)>(r0);

        return $r1;
    }

    public static org.apache.pdfbox.pdmodel.font.PDFont createFont(org.apache.pdfbox.cos.COSDictionary) throws java.io.IOException
    {
        org.apache.pdfbox.pdmodel.font.PDType1Font $r20, $r27;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7;
        org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font $r22;
        org.apache.pdfbox.pdmodel.font.PDTrueTypeFont $r25;
        org.apache.pdfbox.cos.COSDictionary r0;
        org.apache.pdfbox.cos.COSBase $r2, $r5;
        java.lang.StringBuilder $r13, $r15, $r17, $r18, $r32, $r33, $r34;
        org.apache.pdfbox.pdmodel.font.PDSimpleFont r36;
        org.apache.pdfbox.pdmodel.font.PDType0Font $r23;
        org.apache.pdfbox.pdmodel.font.PDCIDFontType2Font $r21;
        java.lang.String $r16, $r19, $r35;
        org.apache.pdfbox.cos.COSName $r1, r3, $r4, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r29, $r30;
        org.apache.pdfbox.pdmodel.font.PDMMType1Font $r26;
        java.io.IOException $r28, $r31;
        org.apache.pdfbox.pdmodel.font.PDType3Font $r24;
        org.apache.commons.logging.Log $r14;

        r0 := @parameter0: org.apache.pdfbox.cos.COSDictionary;

        $r1 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE>;

        $r2 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r1);

        r3 = (org.apache.pdfbox.cos.COSName) $r2;

        if r3 == null goto label01;

        $r29 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName FONT>;

        $z7 = virtualinvoke $r29.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>(r3);

        if $z7 != 0 goto label01;

        $r31 = new java.io.IOException;

        $r32 = new java.lang.StringBuilder;

        specialinvoke $r32.<java.lang.StringBuilder: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cannot create font if /Type is not /Font.  Actual=");

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r3);

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r31.<java.io.IOException: void <init>(java.lang.String)>($r35);

        throw $r31;

     label01:
        $r4 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName SUBTYPE>;

        $r5 = virtualinvoke r0.<org.apache.pdfbox.cos.COSDictionary: org.apache.pdfbox.cos.COSBase getDictionaryObject(org.apache.pdfbox.cos.COSName)>($r4);

        $r30 = (org.apache.pdfbox.cos.COSName) $r5;

        if $r30 != null goto label02;

        $r28 = new java.io.IOException;

        specialinvoke $r28.<java.io.IOException: void <init>(java.lang.String)>("Cannot create font as /SubType is not set.");

        throw $r28;

     label02:
        $r6 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE1>;

        $z0 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r6);

        if $z0 == 0 goto label03;

        $r27 = new org.apache.pdfbox.pdmodel.font.PDType1Font;

        specialinvoke $r27.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r27;

        goto label10;

     label03:
        $r7 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName MM_TYPE1>;

        $z1 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r7);

        if $z1 == 0 goto label04;

        $r26 = new org.apache.pdfbox.pdmodel.font.PDMMType1Font;

        specialinvoke $r26.<org.apache.pdfbox.pdmodel.font.PDMMType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r26;

        goto label10;

     label04:
        $r8 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TRUE_TYPE>;

        $z2 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r8);

        if $z2 == 0 goto label05;

        $r25 = new org.apache.pdfbox.pdmodel.font.PDTrueTypeFont;

        specialinvoke $r25.<org.apache.pdfbox.pdmodel.font.PDTrueTypeFont: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r25;

        goto label10;

     label05:
        $r9 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE3>;

        $z3 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r9);

        if $z3 == 0 goto label06;

        $r24 = new org.apache.pdfbox.pdmodel.font.PDType3Font;

        specialinvoke $r24.<org.apache.pdfbox.pdmodel.font.PDType3Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r24;

        goto label10;

     label06:
        $r10 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName TYPE0>;

        $z4 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r10);

        if $z4 == 0 goto label07;

        $r23 = new org.apache.pdfbox.pdmodel.font.PDType0Font;

        specialinvoke $r23.<org.apache.pdfbox.pdmodel.font.PDType0Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r23;

        goto label10;

     label07:
        $r11 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE0>;

        $z5 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r11);

        if $z5 == 0 goto label08;

        $r22 = new org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font;

        specialinvoke $r22.<org.apache.pdfbox.pdmodel.font.PDCIDFontType0Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r22;

        goto label10;

     label08:
        $r12 = <org.apache.pdfbox.cos.COSName: org.apache.pdfbox.cos.COSName CID_FONT_TYPE2>;

        $z6 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: boolean equals(java.lang.Object)>($r12);

        if $z6 == 0 goto label09;

        $r21 = new org.apache.pdfbox.pdmodel.font.PDCIDFontType2Font;

        specialinvoke $r21.<org.apache.pdfbox.pdmodel.font.PDCIDFontType2Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        r36 = $r21;

        goto label10;

     label09:
        $r14 = <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG>;

        $r13 = new java.lang.StringBuilder;

        specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();

        $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Invalid font subtype \'");

        $r16 = virtualinvoke $r30.<org.apache.pdfbox.cos.COSName: java.lang.String getName()>();

        $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r14.<org.apache.commons.logging.Log: void warn(java.lang.Object)>($r19);

        $r20 = new org.apache.pdfbox.pdmodel.font.PDType1Font;

        specialinvoke $r20.<org.apache.pdfbox.pdmodel.font.PDType1Font: void <init>(org.apache.pdfbox.cos.COSDictionary)>(r0);

        return $r20;

     label10:
        return r36;
    }

    static void <clinit>()
    {
        org.apache.commons.logging.Log $r0;

        $r0 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>(class "Lorg/apache/pdfbox/pdmodel/font/PDFontFactory;");

        <org.apache.pdfbox.pdmodel.font.PDFontFactory: org.apache.commons.logging.Log LOG> = $r0;

        return;
    }
}
