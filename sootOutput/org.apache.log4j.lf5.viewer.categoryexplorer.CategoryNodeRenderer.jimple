public class org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer extends javax.swing.tree.DefaultTreeCellRenderer
{
    private static final long serialVersionUID;
    public static final java.awt.Color FATAL_CHILDREN;
    protected javax.swing.JCheckBox _checkBox;
    protected javax.swing.JPanel _panel;
    protected static javax.swing.ImageIcon _sat;

    public void <init>()
    {
        java.awt.Color $r4;
        java.net.URL $r17;
        javax.swing.ImageIcon $r5, $r13, $r14, $r15, $r18;
        java.awt.FlowLayout $r8;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer r0;
        javax.swing.JCheckBox $r1, $r6, $r10;
        java.lang.Class $r16;
        javax.swing.JPanel $r2, $r3, $r7, $r9, $r11, $r12;

        r0 := @this: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer;

        specialinvoke r0.<javax.swing.tree.DefaultTreeCellRenderer: void <init>()>();

        $r1 = new javax.swing.JCheckBox;

        specialinvoke $r1.<javax.swing.JCheckBox: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JCheckBox _checkBox> = $r1;

        $r2 = new javax.swing.JPanel;

        specialinvoke $r2.<javax.swing.JPanel: void <init>()>();

        r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel> = $r2;

        $r3 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        $r4 = staticinvoke <javax.swing.UIManager: java.awt.Color getColor(java.lang.Object)>("Tree.textBackground");

        virtualinvoke $r3.<javax.swing.JComponent: void setBackground(java.awt.Color)>($r4);

        $r5 = <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat>;

        if $r5 != null goto label1;

        $r16 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r17 = virtualinvoke $r16.<java.lang.Class: java.net.URL getResource(java.lang.String)>("/org/apache/log4j/lf5/viewer/images/channelexplorer_satellite.gif");

        $r18 = new javax.swing.ImageIcon;

        specialinvoke $r18.<javax.swing.ImageIcon: void <init>(java.net.URL)>($r17);

        <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat> = $r18;

     label1:
        virtualinvoke r0.<javax.swing.JComponent: void setOpaque(boolean)>(0);

        $r6 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JCheckBox _checkBox>;

        virtualinvoke $r6.<javax.swing.JComponent: void setOpaque(boolean)>(0);

        $r7 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        virtualinvoke $r7.<javax.swing.JComponent: void setOpaque(boolean)>(0);

        $r9 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        $r8 = new java.awt.FlowLayout;

        specialinvoke $r8.<java.awt.FlowLayout: void <init>(int,int,int)>(0, 0, 0);

        virtualinvoke $r9.<java.awt.Container: void setLayout(java.awt.LayoutManager)>($r8);

        $r11 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        $r10 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JCheckBox _checkBox>;

        virtualinvoke $r11.<java.awt.Container: java.awt.Component add(java.awt.Component)>($r10);

        $r12 = r0.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        virtualinvoke $r12.<java.awt.Container: java.awt.Component add(java.awt.Component)>(r0);

        $r13 = <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat>;

        virtualinvoke r0.<javax.swing.tree.DefaultTreeCellRenderer: void setOpenIcon(javax.swing.Icon)>($r13);

        $r14 = <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat>;

        virtualinvoke r0.<javax.swing.tree.DefaultTreeCellRenderer: void setClosedIcon(javax.swing.Icon)>($r14);

        $r15 = <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat>;

        virtualinvoke r0.<javax.swing.tree.DefaultTreeCellRenderer: void setLeafIcon(javax.swing.Icon)>($r15);

        return;
    }

    public java.awt.Component getTreeCellRendererComponent(javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
    {
        java.awt.Color $r9, $r10;
        int i0;
        java.lang.String $r6;
        boolean z0, z1, z2, z3, $z4, $z5, $z6;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer r2;
        javax.swing.JTree r3;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode r1;
        javax.swing.JCheckBox $r4, $r5, $r11;
        java.lang.Object r0;
        javax.swing.JPanel $r7, $r8;

        r2 := @this: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer;

        r3 := @parameter0: javax.swing.JTree;

        r0 := @parameter1: java.lang.Object;

        z0 := @parameter2: boolean;

        z1 := @parameter3: boolean;

        z2 := @parameter4: boolean;

        i0 := @parameter5: int;

        z3 := @parameter6: boolean;

        r1 = (org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode) r0;

        specialinvoke r2.<javax.swing.tree.DefaultTreeCellRenderer: java.awt.Component getTreeCellRendererComponent(javax.swing.JTree,java.lang.Object,boolean,boolean,boolean,int,boolean)>(r3, r0, z0, z1, z2, i0, z3);

        if i0 != 0 goto label1;

        $r11 = r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JCheckBox _checkBox>;

        virtualinvoke $r11.<javax.swing.JComponent: void setVisible(boolean)>(0);

        goto label2;

     label1:
        $r4 = r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JCheckBox _checkBox>;

        virtualinvoke $r4.<javax.swing.JComponent: void setVisible(boolean)>(1);

        $r5 = r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JCheckBox _checkBox>;

        $z4 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: boolean isSelected()>();

        virtualinvoke $r5.<javax.swing.AbstractButton: void setSelected(boolean)>($z4);

     label2:
        $r6 = virtualinvoke r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: java.lang.String buildToolTip(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode)>(r1);

        $r7 = r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        virtualinvoke $r7.<javax.swing.JComponent: void setToolTipText(java.lang.String)>($r6);

        $z5 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: boolean hasFatalChildren()>();

        if $z5 == 0 goto label3;

        $r10 = <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: java.awt.Color FATAL_CHILDREN>;

        virtualinvoke r2.<javax.swing.JComponent: void setForeground(java.awt.Color)>($r10);

     label3:
        $z6 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: boolean hasFatalRecords()>();

        if $z6 == 0 goto label4;

        $r9 = <java.awt.Color: java.awt.Color red>;

        virtualinvoke r2.<javax.swing.JComponent: void setForeground(java.awt.Color)>($r9);

     label4:
        $r8 = r2.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.JPanel _panel>;

        return $r8;
    }

    public java.awt.Dimension getCheckBoxOffset()
    {
        java.awt.Dimension $r0;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer r1;

        r1 := @this: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer;

        $r0 = new java.awt.Dimension;

        specialinvoke $r0.<java.awt.Dimension: void <init>(int,int)>(0, 0);

        return $r0;
    }

    protected java.lang.String buildToolTip(org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode)
    {
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer r5;
        org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode r1;
        java.lang.StringBuffer $r0, $r3;
        int $i0;
        java.lang.String $r2, $r4;

        r5 := @this: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer;

        r1 := @parameter0: org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: java.lang.String getTitle()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" contains a total of ");

        $i0 = virtualinvoke r1.<org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNode: int getTotalNumberOfRecords()>();

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i0);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" LogRecords.");

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" Right-click for more info.");

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }

    static void <clinit>()
    {
        java.awt.Color $r0;

        <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: long serialVersionUID> = -6046702673278595048L;

        $r0 = new java.awt.Color;

        specialinvoke $r0.<java.awt.Color: void <init>(int,int,int)>(189, 113, 0);

        <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: java.awt.Color FATAL_CHILDREN> = $r0;

        <org.apache.log4j.lf5.viewer.categoryexplorer.CategoryNodeRenderer: javax.swing.ImageIcon _sat> = null;

        return;
    }
}
