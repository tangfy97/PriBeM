final class org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 extends java.lang.Object implements org.waveprotocol.wave.model.undo.UndoManagerImpl$Algorithms
{

    void <init>()
    {
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public org.waveprotocol.wave.model.wave.undo.WaveAggregateOp compose(java.util.List)
    {
        java.util.List r0;
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r2;
        org.waveprotocol.wave.model.wave.undo.WaveAggregateOp $r1;

        r2 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        r0 := @parameter0: java.util.List;

        $r1 = staticinvoke <org.waveprotocol.wave.model.wave.undo.WaveAggregateOp: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp compose(java.util.List)>(r0);

        return $r1;
    }

    public org.waveprotocol.wave.model.wave.undo.WaveAggregateOp invert(org.waveprotocol.wave.model.wave.undo.WaveAggregateOp)
    {
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r2;
        org.waveprotocol.wave.model.wave.undo.WaveAggregateOp r0, $r1;

        r2 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.undo.WaveAggregateOp: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp invert()>();

        return $r1;
    }

    public org.waveprotocol.wave.model.operation.OperationPair transform(org.waveprotocol.wave.model.wave.undo.WaveAggregateOp, org.waveprotocol.wave.model.wave.undo.WaveAggregateOp) throws org.waveprotocol.wave.model.operation.TransformException
    {
        org.waveprotocol.wave.model.wave.undo.WaveAggregateOp r0, r1;
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r3;
        org.waveprotocol.wave.model.operation.OperationPair $r2;

        r3 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        r0 := @parameter0: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp;

        r1 := @parameter1: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp;

        $r2 = staticinvoke <org.waveprotocol.wave.model.wave.undo.WaveAggregateOp: org.waveprotocol.wave.model.operation.OperationPair transform(org.waveprotocol.wave.model.wave.undo.WaveAggregateOp,org.waveprotocol.wave.model.wave.undo.WaveAggregateOp)>(r0, r1);

        return $r2;
    }

    public volatile org.waveprotocol.wave.model.operation.OperationPair transform(java.lang.Object, java.lang.Object) throws org.waveprotocol.wave.model.operation.TransformException
    {
        org.waveprotocol.wave.model.wave.undo.WaveAggregateOp $r3, $r4;
        java.lang.Object r1, r2;
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r0;
        org.waveprotocol.wave.model.operation.OperationPair $r5;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r4 = (org.waveprotocol.wave.model.wave.undo.WaveAggregateOp) r1;

        $r3 = (org.waveprotocol.wave.model.wave.undo.WaveAggregateOp) r2;

        $r5 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2: org.waveprotocol.wave.model.operation.OperationPair transform(org.waveprotocol.wave.model.wave.undo.WaveAggregateOp,org.waveprotocol.wave.model.wave.undo.WaveAggregateOp)>($r4, $r3);

        return $r5;
    }

    public volatile java.lang.Object compose(java.util.List)
    {
        java.util.List r1;
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r0;
        org.waveprotocol.wave.model.wave.undo.WaveAggregateOp $r2;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        r1 := @parameter0: java.util.List;

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp compose(java.util.List)>(r1);

        return $r2;
    }

    public volatile java.lang.Object invert(java.lang.Object)
    {
        org.waveprotocol.wave.model.wave.undo.WaveAggregateOp $r2, $r3;
        java.lang.Object r1;
        org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2 r0;

        r0 := @this: org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2;

        r1 := @parameter0: java.lang.Object;

        $r2 = (org.waveprotocol.wave.model.wave.undo.WaveAggregateOp) r1;

        $r3 = virtualinvoke r0.<org.waveprotocol.wave.model.wave.undo.UndoManagerFactory$2: org.waveprotocol.wave.model.wave.undo.WaveAggregateOp invert(org.waveprotocol.wave.model.wave.undo.WaveAggregateOp)>($r2);

        return $r3;
    }
}
