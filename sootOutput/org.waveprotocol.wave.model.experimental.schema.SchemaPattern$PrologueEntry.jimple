public final class org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry extends java.lang.Object
{
    private final java.lang.String type;
    private final org.waveprotocol.wave.model.experimental.schema.SchemaPattern pattern;

    void <init>(java.lang.String, org.waveprotocol.wave.model.experimental.schema.SchemaPattern)
    {
        java.lang.String r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry r0;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern r2;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry;

        r1 := @parameter0: java.lang.String;

        r2 := @parameter1: org.waveprotocol.wave.model.experimental.schema.SchemaPattern;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry: java.lang.String type> = r1;

        r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry: org.waveprotocol.wave.model.experimental.schema.SchemaPattern pattern> = r2;

        return;
    }

    java.lang.String elementType()
    {
        java.lang.String $r1;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry r0;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry: java.lang.String type>;

        return $r1;
    }

    org.waveprotocol.wave.model.experimental.schema.SchemaPattern pattern()
    {
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry r0;
        org.waveprotocol.wave.model.experimental.schema.SchemaPattern $r1;

        r0 := @this: org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry;

        $r1 = r0.<org.waveprotocol.wave.model.experimental.schema.SchemaPattern$PrologueEntry: org.waveprotocol.wave.model.experimental.schema.SchemaPattern pattern>;

        return $r1;
    }
}
