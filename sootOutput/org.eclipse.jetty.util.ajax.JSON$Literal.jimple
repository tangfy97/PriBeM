public class org.eclipse.jetty.util.ajax.JSON$Literal extends java.lang.Object implements org.eclipse.jetty.util.ajax.JSON$Generator
{
    private java.lang.String _json;

    public void <init>(java.lang.String)
    {
        org.eclipse.jetty.util.ajax.JSON$Literal r0;
        org.eclipse.jetty.util.log.Logger $r1;
        java.lang.String r2;
        boolean $z0;

        r0 := @this: org.eclipse.jetty.util.ajax.JSON$Literal;

        r2 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = <org.eclipse.jetty.util.ajax.JSON: org.eclipse.jetty.util.log.Logger LOG>;

        $z0 = interfaceinvoke $r1.<org.eclipse.jetty.util.log.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label1;

        staticinvoke <org.eclipse.jetty.util.ajax.JSON: java.lang.Object parse(java.lang.String)>(r2);

     label1:
        r0.<org.eclipse.jetty.util.ajax.JSON$Literal: java.lang.String _json> = r2;

        return;
    }

    public java.lang.String toString()
    {
        org.eclipse.jetty.util.ajax.JSON$Literal r0;
        java.lang.String $r1;

        r0 := @this: org.eclipse.jetty.util.ajax.JSON$Literal;

        $r1 = r0.<org.eclipse.jetty.util.ajax.JSON$Literal: java.lang.String _json>;

        return $r1;
    }

    public void addJSON(java.lang.Appendable)
    {
        java.lang.Appendable r0;
        java.io.IOException $r3;
        org.eclipse.jetty.util.ajax.JSON$Literal r1;
        java.lang.String $r2;
        java.lang.RuntimeException $r4;

        r1 := @this: org.eclipse.jetty.util.ajax.JSON$Literal;

        r0 := @parameter0: java.lang.Appendable;

     label1:
        $r2 = r1.<org.eclipse.jetty.util.ajax.JSON$Literal: java.lang.String _json>;

        interfaceinvoke r0.<java.lang.Appendable: java.lang.Appendable append(java.lang.CharSequence)>($r2);

     label2:
        goto label4;

     label3:
        $r3 := @caughtexception;

        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>($r3);

        throw $r4;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }
}
