public abstract class org.tukaani.xz.rangecoder.RangeDecoder extends org.tukaani.xz.rangecoder.RangeCoder
{
    int range;
    int code;

    public void <init>()
    {
        org.tukaani.xz.rangecoder.RangeDecoder r0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoder;

        specialinvoke r0.<org.tukaani.xz.rangecoder.RangeCoder: void <init>()>();

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range> = 0;

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code> = 0;

        return;
    }

    public abstract void normalize() throws java.io.IOException;

    public int decodeBit(short[], int) throws java.io.IOException
    {
        short s1, $s14, $s18;
        byte b19;
        int i0, $i2, $i3, i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, $i15, $i16, $i17, $i20, $i21, $i22, $i23, $i24;
        short[] r1;
        org.tukaani.xz.rangecoder.RangeDecoder r0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoder;

        r1 := @parameter0: short[];

        i0 := @parameter1: int;

        virtualinvoke r0.<org.tukaani.xz.rangecoder.RangeDecoder: void normalize()>();

        s1 = r1[i0];

        $i2 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range>;

        $i3 = $i2 >>> 11;

        $i20 = (int) s1;

        i4 = $i3 * $i20;

        $i5 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code>;

        $i7 = $i5 ^ -2147483648;

        $i6 = i4 ^ -2147483648;

        if $i7 >= $i6 goto label1;

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range> = i4;

        $i21 = (int) s1;

        $i15 = 2048 - $i21;

        $i16 = $i15 >>> 5;

        $i22 = (int) s1;

        $i17 = $i22 + $i16;

        $s18 = (short) $i17;

        r1[i0] = $s18;

        b19 = 0;

        goto label2;

     label1:
        $i8 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range>;

        $i9 = $i8 - i4;

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range> = $i9;

        $i10 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code>;

        $i11 = $i10 - i4;

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code> = $i11;

        $i23 = (int) s1;

        $i12 = $i23 >>> 5;

        $i24 = (int) s1;

        $i13 = $i24 - $i12;

        $s14 = (short) $i13;

        r1[i0] = $s14;

        b19 = 1;

     label2:
        return b19;
    }

    public int decodeBitTree(short[]) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, i6;
        short[] r1;
        org.tukaani.xz.rangecoder.RangeDecoder r0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoder;

        r1 := @parameter0: short[];

        i6 = 1;

     label1:
        $i0 = i6 << 1;

        $i1 = virtualinvoke r0.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBit(short[],int)>(r1, i6);

        $i3 = $i0 | $i1;

        i6 = $i3;

        $i2 = lengthof r1;

        if $i3 < $i2 goto label1;

        $i4 = lengthof r1;

        $i5 = $i3 - $i4;

        return $i5;
    }

    public int decodeReverseBitTree(short[]) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, i7, i8, i9;
        short[] r1;
        org.tukaani.xz.rangecoder.RangeDecoder r0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoder;

        r1 := @parameter0: short[];

        i7 = 1;

        i8 = 0;

        i9 = 0;

     label1:
        $i0 = virtualinvoke r0.<org.tukaani.xz.rangecoder.RangeDecoder: int decodeBit(short[],int)>(r1, i7);

        $i1 = i7 << 1;

        $i5 = $i1 | $i0;

        i7 = $i5;

        $i2 = i8;

        i8 = i8 + 1;

        $i3 = $i0 << $i2;

        $i6 = i9 | $i3;

        i9 = $i6;

        $i4 = lengthof r1;

        if $i5 < $i4 goto label1;

        return $i6;
    }

    public int decodeDirectBits(int) throws java.io.IOException
    {
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i14, i15, $i17;
        org.tukaani.xz.rangecoder.RangeDecoder r0;

        r0 := @this: org.tukaani.xz.rangecoder.RangeDecoder;

        i14 := @parameter0: int;

        i15 = 0;

     label1:
        virtualinvoke r0.<org.tukaani.xz.rangecoder.RangeDecoder: void normalize()>();

        $i0 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range>;

        $i1 = $i0 >>> 1;

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range> = $i1;

        $i3 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code>;

        $i2 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range>;

        $i4 = $i3 - $i2;

        $i12 = $i4 >>> 31;

        $i8 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code>;

        $i6 = r0.<org.tukaani.xz.rangecoder.RangeDecoder: int range>;

        $i5 = $i12 - 1;

        $i7 = $i6 & $i5;

        $i9 = $i8 - $i7;

        r0.<org.tukaani.xz.rangecoder.RangeDecoder: int code> = $i9;

        $i11 = i15 << 1;

        $i10 = 1 - $i12;

        $i13 = $i11 | $i10;

        i15 = $i13;

        $i17 = (int) -1;

        i14 = i14 + $i17;

        if i14 != 0 goto label1;

        return $i13;
    }
}
