class org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator extends org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator
{
    static final boolean $assertionsDisabled;
    final org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0;

    void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)
    {
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator r1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator r0;

        r0 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator;

        r1 := @parameter0: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator;

        r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator this$0> = r1;

        specialinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomOperationComponentGenerator: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator)>(r1);

        return;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean, org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator r3;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent $r4, $r5;
        java.lang.RuntimeException $r6;
        int[] $r1;
        int $i0, $i1, $i2;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage r0;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String $r10;
        boolean z0;

        r3 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z0 := @parameter1: boolean;

        r0 := @parameter2: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage;

        $r1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$testing$RandomDocOpGenerator$Generator$Stage>;

        $i0 = virtualinvoke r0.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$Stage: int ordinal()>();

        $i1 = $r1[$i0];

        tableswitch($i1)
        {
            case 1: goto label1;
            case 2: goto label2;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label5;
        };

     label1:
        $r5 = virtualinvoke r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,boolean)>(r2, z0);

        return $r5;

     label2:
        $i2 = virtualinvoke r2.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: int deletionStackComplexityMeasure()>();

        if $i2 != 0 goto label3;

        return null;

     label3:
        $r4 = virtualinvoke r3.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton,boolean)>(r2, z0);

        return $r4;

     label4:
        return null;

     label5:
        $r6 = new java.lang.RuntimeException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unexpected stage: ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10);

        throw $r6;
    }

    org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$RandomizerOperationComponent generate(org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton, boolean)
    {
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton r0;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator r6;
        java.lang.RuntimeException $r7;
        java.lang.AssertionError $r8, $r9;
        org.waveprotocol.wave.model.document.operation.Attributes $r2;
        int[] $r3;
        int $i0, $i1;
        org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator$1 $r5;
        org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult $r4;
        java.lang.String $r1;
        boolean $z0, $z1, z2;

        r6 := @this: org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton;

        z2 := @parameter1: boolean;

        $r1 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: java.lang.String currentElementStartTag()>();

        $r2 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.Attributes currentElementStartAttributes()>();

        if $r1 != null goto label2;

        $z1 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator: boolean $assertionsDisabled>;

        if $z1 != 0 goto label1;

        if $r2 == null goto label1;

        $r9 = new java.lang.AssertionError;

        specialinvoke $r9.<java.lang.AssertionError: void <init>()>();

        throw $r9;

     label1:
        return null;

     label2:
        $z0 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator: boolean $assertionsDisabled>;

        if $z0 != 0 goto label3;

        if $r2 != null goto label3;

        $r8 = new java.lang.AssertionError;

        specialinvoke $r8.<java.lang.AssertionError: void <init>()>();

        throw $r8;

     label3:
        $r3 = <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$1: int[] $SwitchMap$org$waveprotocol$wave$model$document$operation$automaton$DocOpAutomaton$ValidationResult>;

        $r4 = virtualinvoke r0.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton: org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult checkDeleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ViolationCollector)>($r1, $r2, null);

        $i0 = virtualinvoke $r4.<org.waveprotocol.wave.model.document.operation.automaton.DocOpAutomaton$ValidationResult: int ordinal()>();

        $i1 = $r3[$i0];

        tableswitch($i1)
        {
            case 1: goto label4;
            case 2: goto label5;
            case 3: goto label4;
            case 4: goto label4;
            default: goto label6;
        };

     label4:
        return null;

     label5:
        $r5 = new org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator$1;

        specialinvoke $r5.<org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator$1: void <init>(org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator,java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r6, $r1, $r2);

        return $r5;

     label6:
        $r7 = new java.lang.RuntimeException;

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>("Unexpected validation result");

        throw $r7;
    }

    static void <clinit>()
    {
        java.lang.Class $r0;
        boolean $z0, $z1;

        $r0 = class "Lorg/waveprotocol/wave/model/testing/RandomDocOpGenerator;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label1;

        $z1 = 1;

        goto label2;

     label1:
        $z1 = 0;

     label2:
        <org.waveprotocol.wave.model.testing.RandomDocOpGenerator$Generator$DeleteElementStartGenerator: boolean $assertionsDisabled> = $z1;

        return;
    }
}
