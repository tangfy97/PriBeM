public class org.apache.velocity.runtime.parser.node.ASTIndex extends org.apache.velocity.runtime.parser.node.SimpleNode
{
    private final java.lang.String methodName;
    protected boolean strictRef;
    private static final java.lang.Object[] noParams;
    private static final java.lang.Class[] noTypes;

    public void <init>(int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTIndex r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTIndex;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(int)>(i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.String methodName> = "get";

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.String methodName> = "get";

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: boolean strictRef> = 0;

        return;
    }

    public void <init>(org.apache.velocity.runtime.parser.Parser, int)
    {
        int i0;
        org.apache.velocity.runtime.parser.Parser r1;
        org.apache.velocity.runtime.parser.node.ASTIndex r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTIndex;

        r1 := @parameter0: org.apache.velocity.runtime.parser.Parser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(org.apache.velocity.runtime.parser.Parser,int)>(r1, i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.String methodName> = "get";

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.String methodName> = "get";

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: boolean strictRef> = 0;

        return;
    }

    public java.lang.Object init(org.apache.velocity.context.InternalContextAdapter, java.lang.Object) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.runtime.RuntimeServices $r3;
        java.lang.Object r2;
        org.apache.velocity.runtime.parser.node.ASTIndex r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTIndex;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object init(org.apache.velocity.context.InternalContextAdapter,java.lang.Object)>(r1, r2);

        $r3 = r0.<org.apache.velocity.runtime.parser.node.ASTIndex: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z0 = interfaceinvoke $r3.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.references.strict", 0);

        r0.<org.apache.velocity.runtime.parser.node.ASTIndex: boolean strictRef> = $z0;

        return r2;
    }

    public static java.lang.Object adjMinusIndexArg(java.lang.Object, java.lang.Object, org.apache.velocity.context.InternalContextAdapter, org.apache.velocity.runtime.parser.node.SimpleNode)
    {
        java.lang.Integer $r0, $r9, $r10, $r11, $r15;
        org.apache.velocity.exception.VelocityException $r12, $r26, $r41;
        boolean $z0;
        java.lang.Exception $r40;
        org.apache.velocity.runtime.parser.node.SimpleNode r3;
        java.lang.Object[] $r5, $r7;
        java.lang.ClassCastException $r25;
        java.lang.StringBuffer $r13, $r14, $r16, $r17, $r20, $r21, $r23, $r27, $r28, $r31, $r32, $r35, $r36, $r38, $r42, $r43, $r46, $r47, $r49;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r19, $r22, $r24, $r30, $r34, $r37, $r39, $r45, $r48, $r50;
        org.apache.velocity.context.InternalContextAdapter r2;
        java.lang.Class[] $r4;
        java.lang.Object r1, $r8, r51;
        java.lang.Class $r18, $r29, $r33, $r44;
        org.apache.velocity.util.introspection.VelMethod $r6;

        r51 := @parameter0: java.lang.Object;

        r1 := @parameter1: java.lang.Object;

        r2 := @parameter2: org.apache.velocity.context.InternalContextAdapter;

        r3 := @parameter3: org.apache.velocity.runtime.parser.node.SimpleNode;

        $z0 = r51 instanceof java.lang.Integer;

        if $z0 == 0 goto label8;

        $r0 = (java.lang.Integer) r51;

        $i0 = virtualinvoke $r0.<java.lang.Integer: int intValue()>();

        if $i0 >= 0 goto label8;

        $r5 = <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Object[] noParams>;

        $r4 = <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Class[] noTypes>;

        $r6 = staticinvoke <org.apache.velocity.util.ClassUtils: org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode,boolean)>("size", $r5, $r4, r1, r2, r3, 0);

        if $r6 != null goto label1;

        $r12 = new org.apache.velocity.exception.VelocityException;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("A \'size()\' method required for negative value ");

        $r15 = (java.lang.Integer) r51;

        $i4 = virtualinvoke $r15.<java.lang.Integer: int intValue()>();

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i4);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" does not exist for class \'");

        $r18 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' at ");

        $r22 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r3);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r12.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r24);

        throw $r12;

     label1:
        $r7 = <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Object[] noParams>;

        $r8 = interfaceinvoke $r6.<org.apache.velocity.util.introspection.VelMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r1, $r7);

     label2:
        goto label4;

     label3:
        $r40 := @caughtexception;

        $r41 = new org.apache.velocity.exception.VelocityException;

        $r42 = new java.lang.StringBuffer;

        specialinvoke $r42.<java.lang.StringBuffer: void <init>()>();

        $r43 = virtualinvoke $r42.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error trying to calls the \'size()\' method on \'");

        $r44 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r45 = virtualinvoke $r44.<java.lang.Class: java.lang.String getName()>();

        $r46 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r45);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' at ");

        $r48 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r3);

        $r49 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r41.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r50, $r40);

        throw $r41;

     label4:
        $r9 = (java.lang.Integer) $r8;

        $i1 = virtualinvoke $r9.<java.lang.Integer: int intValue()>();

     label5:
        goto label7;

     label6:
        $r25 := @caughtexception;

        $r26 = new org.apache.velocity.exception.VelocityException;

        $r27 = new java.lang.StringBuffer;

        specialinvoke $r27.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Method \'size()\' on class \'");

        $r29 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r30 = virtualinvoke $r29.<java.lang.Class: java.lang.String getName()>();

        $r31 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r30);

        $r32 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' returned \'");

        $r33 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        $r34 = virtualinvoke $r33.<java.lang.Class: java.lang.String getName()>();

        $r35 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' when Integer was expected at ");

        $r37 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r3);

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r26.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String)>($r39);

        throw $r26;

     label7:
        $r10 = new java.lang.Integer;

        $r11 = (java.lang.Integer) r51;

        $i2 = virtualinvoke $r11.<java.lang.Integer: int intValue()>();

        $i3 = $i1 + $i2;

        specialinvoke $r10.<java.lang.Integer: void <init>(int)>($i3);

        r51 = $r10;

     label8:
        return r51;

        catch java.lang.Exception from label1 to label2 with label3;
        catch java.lang.ClassCastException from label4 to label5 with label6;
    }

    public java.lang.Object execute(java.lang.Object, org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        java.lang.Object[] $r6;
        java.lang.StringBuffer $r13, $r14, $r16, $r17, $r20, $r21, $r23;
        java.lang.String $r19, $r22, $r24, $r29;
        org.apache.velocity.runtime.parser.node.Node $r1;
        org.apache.velocity.exception.VelocityException $r26;
        org.apache.velocity.runtime.parser.node.ASTIndex r0;
        boolean $z0;
        org.apache.velocity.context.InternalContextAdapter r2;
        java.lang.Class[] $r7;
        java.lang.RuntimeException $r27;
        java.lang.Exception $r12;
        org.apache.velocity.runtime.log.Log $r25;
        java.lang.Object $r3, r4, $r5, $r9;
        java.lang.Class $r10, $r11, $r15, $r18, $r28;
        org.apache.velocity.util.introspection.VelMethod $r8;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTIndex;

        r4 := @parameter0: java.lang.Object;

        r2 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTIndex: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>(0);

        $r3 = interfaceinvoke $r1.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r2);

        $r5 = staticinvoke <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Object adjMinusIndexArg(java.lang.Object,java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode)>($r3, r4, r2, r0);

        $r6 = newarray (java.lang.Object)[1];

        $r6[0] = $r5;

        $r7 = newarray (java.lang.Class)[1];

        if $r5 != null goto label1;

        $r28 = null;

        goto label2;

     label1:
        $r28 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

     label2:
        $r7[0] = $r28;

        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTIndex: boolean strictRef>;

        $r8 = staticinvoke <org.apache.velocity.util.ClassUtils: org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode,boolean)>("get", $r6, $r7, r4, r2, r0, $z0);

        if $r8 != null goto label3;

        return null;

     label3:
        $r9 = interfaceinvoke $r8.<org.apache.velocity.util.introspection.VelMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r4, $r6);

        if $r9 != null goto label5;

        $r10 = interfaceinvoke $r8.<org.apache.velocity.util.introspection.VelMethod: java.lang.Class getReturnType()>();

        $r11 = <java.lang.Void: java.lang.Class TYPE>;

        if $r10 != $r11 goto label5;

     label4:
        return "";

     label5:
        return $r9;

     label6:
        $r27 := @caughtexception;

        throw $r27;

     label7:
        $r12 := @caughtexception;

        $r13 = new java.lang.StringBuffer;

        specialinvoke $r13.<java.lang.StringBuffer: void <init>()>();

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Error invoking method \'get(");

        if $r5 != null goto label8;

        $r29 = "null";

        goto label9;

     label8:
        $r15 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        $r29 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>();

     label9:
        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")\' in ");

        $r18 = virtualinvoke r4.<java.lang.Object: java.lang.Class getClass()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" at ");

        $r22 = staticinvoke <org.apache.velocity.runtime.log.Log: java.lang.String formatFileString(org.apache.velocity.runtime.parser.node.Node)>(r0);

        $r23 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r22);

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        $r25 = r0.<org.apache.velocity.runtime.parser.node.ASTIndex: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r25.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r24, $r12);

        $r26 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r26.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r24, $r12);

        throw $r26;

        catch java.lang.RuntimeException from label3 to label4 with label6;
        catch java.lang.Exception from label3 to label4 with label7;
    }

    static void <clinit>()
    {
        java.lang.Class[] $r1;
        java.lang.Object[] $r0;

        $r0 = newarray (java.lang.Object)[0];

        <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Object[] noParams> = $r0;

        $r1 = newarray (java.lang.Class)[0];

        <org.apache.velocity.runtime.parser.node.ASTIndex: java.lang.Class[] noTypes> = $r1;

        return;
    }
}
