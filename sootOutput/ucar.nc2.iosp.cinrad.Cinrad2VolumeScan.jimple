public class ucar.nc2.iosp.cinrad.Cinrad2VolumeScan extends java.lang.Object
{
    public static final java.lang.String ARCHIVE2;
    public static final java.lang.String AR2V0001;
    private static org.slf4j.Logger log;
    ucar.unidata.io.RandomAccessFile raf;
    private java.lang.String dataFormat;
    private java.lang.String volumeNo;
    private int title_julianDay;
    private int title_msecs;
    private java.lang.String stationId;
    private ucar.nc2.iosp.nexrad2.NexradStationDB$Station station;
    private ucar.nc2.iosp.cinrad.Cinrad2Record first;
    private ucar.nc2.iosp.cinrad.Cinrad2Record last;
    private int vcp;
    private int max_radials;
    private int min_radials;
    private int dopplarResolution;
    private boolean hasDifferentDopplarResolutions;
    private java.util.ArrayList reflectivityGroups;
    private java.util.ArrayList dopplerGroups;
    private boolean showMessages;
    private boolean showData;
    private boolean debugScans;
    private boolean debugGroups2;
    private boolean debugRadials;
    private int MAX_RADIAL;
    private int[] radial;

    void <init>(ucar.unidata.io.RandomAccessFile, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r20;
        byte $b4;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        java.lang.StringBuilder $r27, $r28, $r29, $r30, $r38, $r39, $r47, $r49, $r54, $r56, $r61, $r63, $r64, $r66, $r70, $r73, $r83, $r84, $r85, $r86, $r88, $r91;
        ucar.nc2.iosp.cinrad.Cinrad2Record $r19, $r82;
        java.util.ArrayList $r23, $r24, $r89, $r90;
        short $s6;
        java.lang.String $r7, $r8, $r10, $r13, $r16, $r17, $r18, $r31, $r34, $r37, $r40, $r43, $r48, $r50, $r52, $r55, $r57, $r62, $r65, $r67, $r72, $r74;
        java.io.File $r41;
        ucar.unidata.io.RandomAccessFile r2, $r4, $r5, $r6, $r9, $r11, $r12, $r14, $r15, $r32, $r33, $r36, $r42, $r44, $r71, r75, $r76, $r77, $r78, $r81, $r87;
        int[] $r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9, $z10;
        int $i0, $i1, $i2, $i3, $i5, $i7, $i8, i9, $i10, $i11;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r58;
        java.io.PrintStream $r21, $r22, $r26;
        org.slf4j.Logger $r3, $r46, $r60, $r69;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        r2 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r20 := @parameter1: ucar.nc2.util.CancelTask;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String dataFormat> = null;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String volumeNo> = null;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int vcp> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int max_radials> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int min_radials> = 2147483647;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean showMessages> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean showData> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugScans> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugGroups2> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugRadials> = 0;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int MAX_RADIAL> = 401;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int MAX_RADIAL>;

        $r1 = newarray (int)[$i0];

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int[] radial> = $r1;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf> = r2;

        $r3 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $z0 = interfaceinvoke $r3.<org.slf4j.Logger: boolean isDebugEnabled()>();

        if $z0 == 0 goto label01;

        $r69 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r83 = new java.lang.StringBuilder;

        specialinvoke $r83.<java.lang.StringBuilder: void <init>()>();

        $r70 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Cinrad2VolumeScan on ");

        $r71 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r72 = virtualinvoke $r71.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r73 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r72);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r69.<org.slf4j.Logger: void debug(java.lang.String)>($r74);

     label01:
        $r4 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r4.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        $r5 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r5.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        $r6 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r7 = virtualinvoke $r6.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r8 = virtualinvoke r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String getStationID(java.lang.String)>($r7);

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId> = $r8;

        $r9 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r10 = virtualinvoke $r9.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(8);

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String dataFormat> = $r10;

        $r11 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(1);

        $r12 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r13 = virtualinvoke $r12.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(3);

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String volumeNo> = $r13;

        $r14 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $i1 = virtualinvoke $r14.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int title_julianDay> = $i1;

        $r15 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $i2 = virtualinvoke $r15.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int title_msecs> = $i2;

        if $z0 == 0 goto label02;

        $r60 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r61 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" dataFormat= ");

        $r62 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String dataFormat>;

        $r63 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" stationId= ");

        $r65 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId>;

        $r66 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65);

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r60.<org.slf4j.Logger: void debug(java.lang.String)>($r67);

     label02:
        $r16 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId>;

        $i3 = virtualinvoke $r16.<java.lang.String: int length()>();

        if $i3 != 0 goto label03;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId> = null;

     label03:
        $r17 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId>;

        if $r17 == null goto label04;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r54 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("K");

        $r55 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId>;

        $r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55);

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.String toString()>();

        $r58 = staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: ucar.nc2.iosp.nexrad2.NexradStationDB$Station get(java.lang.String)>($r57);

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station> = $r58;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String dataFormat> = "CINRAD-SA";

     label04:
        $r18 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String dataFormat>;

        $z1 = virtualinvoke $r18.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0001");

        if $z1 == 0 goto label08;

        $r32 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r32.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(4);

        $r33 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r34 = virtualinvoke $r33.<ucar.unidata.io.RandomAccessFile: java.lang.String readString(int)>(2);

        $z9 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("BZ");

        if $z9 == 0 goto label07;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r36 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r37 = virtualinvoke $r36.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r38 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".uncompress");

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        $r41 = staticinvoke <ucar.nc2.util.DiskCache: java.io.File getFileStandardPolicy(java.lang.String)>($r40);

        $z10 = virtualinvoke $r41.<java.io.File: boolean exists()>();

        if $z10 == 0 goto label05;

        $r87 = new ucar.unidata.io.RandomAccessFile;

        $r52 = virtualinvoke $r41.<java.io.File: java.lang.String getPath()>();

        specialinvoke $r87.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>($r52, "r");

        r75 = $r87;

        goto label06;

     label05:
        $r42 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r43 = virtualinvoke $r41.<java.io.File: java.lang.String getPath()>();

        $r44 = specialinvoke r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile uncompress(ucar.unidata.io.RandomAccessFile,java.lang.String,boolean)>($r42, $r43, $z0);

        r75 = $r44;

        virtualinvoke $r44.<ucar.unidata.io.RandomAccessFile: void flush()>();

        if $z0 == 0 goto label06;

        $r46 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r47 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("flushed uncompressed file= ");

        $r48 = virtualinvoke $r41.<java.io.File: java.lang.String getPath()>();

        $r49 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r48);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r46.<org.slf4j.Logger: void debug(java.lang.String)>($r50);

     label06:
        $r76 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r76.<ucar.unidata.io.RandomAccessFile: void close()>();

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf> = r75;

        $r77 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r77.<ucar.unidata.io.RandomAccessFile: void order(int)>(0);

     label07:
        $r78 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        virtualinvoke $r78.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

     label08:
        $r89 = new java.util.ArrayList;

        specialinvoke $r89.<java.util.ArrayList: void <init>()>();

        $r90 = new java.util.ArrayList;

        specialinvoke $r90.<java.util.ArrayList: void <init>()>();

        i9 = 0;

     label09:
        $r81 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $i10 = i9;

        i9 = i9 + 1;

        $r82 = staticinvoke <ucar.nc2.iosp.cinrad.Cinrad2Record: ucar.nc2.iosp.cinrad.Cinrad2Record factory(ucar.unidata.io.RandomAccessFile,int)>($r81, $i10);

        if $r82 != null goto label10;

        goto label19;

     label10:
        $b4 = $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: byte message_type>;

        if $b4 == 1 goto label11;

        $z7 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean showMessages>;

        if $z7 == 0 goto label09;

        $r22 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: void dumpMessage(java.io.PrintStream,java.util.Date)>($r22, null);

        goto label09;

     label11:
        $z2 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean showData>;

        if $z2 == 0 goto label12;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: void dump2(java.io.PrintStream)>($r21);

     label12:
        $i5 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int vcp>;

        if $i5 != 0 goto label13;

        $s6 = $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: short vcp>;

        $i11 = (int) $s6;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int vcp> = $i11;

     label13:
        $r19 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.cinrad.Cinrad2Record first>;

        if $r19 != null goto label14;

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.cinrad.Cinrad2Record first> = $r82;

     label14:
        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.cinrad.Cinrad2Record last> = $r82;

        $z3 = virtualinvoke $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: boolean checkOk()>();

        if $z3 != 0 goto label15;

        goto label09;

     label15:
        $z4 = $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: boolean hasReflectData>;

        if $z4 == 0 goto label16;

        virtualinvoke $r89.<java.util.ArrayList: boolean add(java.lang.Object)>($r82);

     label16:
        $z5 = $r82.<ucar.nc2.iosp.cinrad.Cinrad2Record: boolean hasDopplerData>;

        if $z5 == 0 goto label17;

        virtualinvoke $r90.<java.util.ArrayList: boolean add(java.lang.Object)>($r82);

     label17:
        if r20 == null goto label18;

        $z6 = interfaceinvoke r20.<ucar.nc2.util.CancelTask: boolean isCancel()>();

        if $z6 == 0 goto label18;

        return;

     label18:
        goto label09;

     label19:
        $z8 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugRadials>;

        if $z8 == 0 goto label20;

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r91 = new java.lang.StringBuilder;

        specialinvoke $r91.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" reflect ok= ");

        $i7 = virtualinvoke $r89.<java.util.ArrayList: int size()>();

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i7);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" doppler ok= ");

        $i8 = virtualinvoke $r90.<java.util.ArrayList: int size()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r31);

     label20:
        $r23 = specialinvoke r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.util.ArrayList sortScans(java.lang.String,java.util.List)>("reflect", $r89);

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.util.ArrayList reflectivityGroups> = $r23;

        $r24 = specialinvoke r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.util.ArrayList sortScans(java.lang.String,java.util.List)>("doppler", $r90);

        r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.util.ArrayList dopplerGroups> = $r24;

        return;
    }

    public java.lang.String getStationID(java.lang.String)
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r2;
        int $i0, $i1, i2;
        java.lang.String r0, $r1;

        r2 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(47);

        i2 = $i0 + 1;

        if i2 >= 0 goto label1;

        i2 = 0;

     label1:
        $i1 = i2 + 4;

        $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i2, $i1);

        return $r1;
    }

    private static double parseDegree(java.lang.String)
    {
        byte $b0;
        java.util.StringTokenizer $r6;
        int $i1;
        java.lang.String r1, $r2, $r3, $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        java.lang.NumberFormatException $r5;

        r1 := @parameter0: java.lang.String;

        $r6 = new java.util.StringTokenizer;

        specialinvoke $r6.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(r1, ":");

        $r2 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r3 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r4 = virtualinvoke $r6.<java.util.StringTokenizer: java.lang.String nextToken()>();

     label1:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r2);

        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r3);

        $d2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r4);

        $b0 = $d0 cmpg 0.0;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label3;

        $d7 = $d1 / 60.0;

        $d9 = $d0 - $d7;

        $d8 = $d2 / 3600.0;

        $d10 = $d9 - $d8;

     label2:
        return $d10;

     label3:
        $d3 = $d1 / 60.0;

        $d5 = $d0 + $d3;

        $d4 = $d2 / 3600.0;

        $d6 = $d5 + $d4;

     label4:
        return $d6;

     label5:
        $r5 := @caughtexception;

        virtualinvoke $r5.<java.lang.NumberFormatException: void printStackTrace()>();

        return 0.0;

        catch java.lang.NumberFormatException from label1 to label2 with label5;
        catch java.lang.NumberFormatException from label3 to label4 with label5;
    }

    private java.util.ArrayList sortScans(java.lang.String, java.util.List)
    {
        java.lang.Integer $r36;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r5;
        boolean $z0, $z1;
        java.util.Collection $r3;
        java.util.List r1;
        java.lang.StringBuilder $r10, $r11, $r12, $r13, $r14, $r22, $r23, $r40, $r41;
        ucar.nc2.iosp.cinrad.Cinrad2Record r19, r30, r34;
        java.util.HashMap $r35;
        java.util.ArrayList r31, r32, r33, $r37, $r38;
        short $s14;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11, $i12, $i13, i15, i16, i17, i18, $i19;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan$GroupComparator $r39;
        java.lang.String r6, $r15, $r24;
        java.io.PrintStream $r7, $r9, $r21;
        java.lang.Object $r16, $r17, $r18, $r25, $r26, $r28;

        r5 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        r6 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $r35 = new java.util.HashMap;

        specialinvoke $r35.<java.util.HashMap: void <init>(int)>(600);

        i15 = 0;

     label01:
        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if i15 >= $i0 goto label03;

        $r26 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i15);

        r30 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r26;

        $r36 = new java.lang.Integer;

        $s14 = r30.<ucar.nc2.iosp.cinrad.Cinrad2Record: short elevation_num>;

        $i19 = (int) $s14;

        specialinvoke $r36.<java.lang.Integer: void <init>(int)>($i19);

        $r28 = virtualinvoke $r35.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r36);

        r31 = (java.util.ArrayList) $r28;

        if null != r31 goto label02;

        $r37 = new java.util.ArrayList;

        specialinvoke $r37.<java.util.ArrayList: void <init>()>();

        r31 = $r37;

        virtualinvoke $r35.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r36, $r37);

     label02:
        virtualinvoke r31.<java.util.ArrayList: boolean add(java.lang.Object)>(r30);

        i15 = i15 + 1;

        goto label01;

     label03:
        $r38 = new java.util.ArrayList;

        $r3 = virtualinvoke $r35.<java.util.HashMap: java.util.Collection values()>();

        specialinvoke $r38.<java.util.ArrayList: void <init>(java.util.Collection)>($r3);

        $r39 = new ucar.nc2.iosp.cinrad.Cinrad2VolumeScan$GroupComparator;

        specialinvoke $r39.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan$GroupComparator: void <init>(ucar.nc2.iosp.cinrad.Cinrad2VolumeScan,ucar.nc2.iosp.cinrad.Cinrad2VolumeScan$1)>(r5, null);

        staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>($r38, $r39);

        i16 = 0;

     label04:
        $i1 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        if i16 >= $i1 goto label05;

        $r25 = virtualinvoke $r38.<java.util.ArrayList: java.lang.Object get(int)>(i16);

        r32 = (java.util.ArrayList) $r25;

        specialinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean testScan(java.lang.String,java.util.ArrayList)>(r6, r32);

        $i8 = r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int max_radials>;

        $i9 = virtualinvoke r32.<java.util.ArrayList: int size()>();

        $i10 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i9);

        r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int max_radials> = $i10;

        $i11 = r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int min_radials>;

        $i12 = virtualinvoke r32.<java.util.ArrayList: int size()>();

        $i13 = staticinvoke <java.lang.Math: int min(int,int)>($i11, $i12);

        r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int min_radials> = $i13;

        i16 = i16 + 1;

        goto label04;

     label05:
        $z0 = r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugRadials>;

        if $z0 == 0 goto label10;

        $r9 = <java.lang.System: java.io.PrintStream out>;

        $r40 = new java.lang.StringBuilder;

        specialinvoke $r40.<java.lang.StringBuilder: void <init>()>();

        $r10 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" min_radials= ");

        $i2 = r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int min_radials>;

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" max_radials= ");

        $i3 = r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int max_radials>;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r9.<java.io.PrintStream: void println(java.lang.String)>($r15);

        i17 = 0;

     label06:
        $i4 = virtualinvoke $r38.<java.util.ArrayList: int size()>();

        if i17 >= $i4 goto label10;

        $r16 = virtualinvoke $r38.<java.util.ArrayList: java.lang.Object get(int)>(i17);

        r33 = (java.util.ArrayList) $r16;

        $r17 = virtualinvoke r33.<java.util.ArrayList: java.lang.Object get(int)>(0);

        r34 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r17;

        i18 = 1;

     label07:
        $i5 = virtualinvoke r33.<java.util.ArrayList: int size()>();

        if i18 >= $i5 goto label09;

        $r18 = virtualinvoke r33.<java.util.ArrayList: java.lang.Object get(int)>(i18);

        r19 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r18;

        $i7 = r19.<ucar.nc2.iosp.cinrad.Cinrad2Record: int data_msecs>;

        $i6 = r34.<ucar.nc2.iosp.cinrad.Cinrad2Record: int data_msecs>;

        if $i7 >= $i6 goto label08;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r41 = new java.lang.StringBuilder;

        specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" out of order ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i18);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

     label08:
        r34 = r19;

        i18 = i18 + 1;

        goto label07;

     label09:
        i17 = i17 + 1;

        goto label06;

     label10:
        specialinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean testVariable(java.lang.String,java.util.List)>(r6, $r38);

        $z1 = r5.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugScans>;

        if $z1 == 0 goto label11;

        $r7 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>("-----------------------------");

     label11:
        return $r38;
    }

    public int getMaxRadials()
    {
        int $i0;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int max_radials>;

        return $i0;
    }

    public int getMinRadials()
    {
        int $i0;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int min_radials>;

        return $i0;
    }

    public int getDopplarResolution()
    {
        int $i0;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int dopplarResolution>;

        return $i0;
    }

    public boolean hasDifferentDopplarResolutions()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        boolean $z0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $z0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean hasDifferentDopplarResolutions>;

        return $z0;
    }

    private boolean testScan(java.lang.String, java.util.ArrayList)
    {
        byte b0, $b25;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r3;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r27, $r28, $r29, $r30, $r31, $r32, $r33, $r39, $r40, $r41, $r42, $r43, $r44, $r45, $r51, $r52, $r53, $r54, $r55, $r56, $r57, $r63, $r64, $r65, $r66, $r67, $r68, $r69, $r75, $r76, $r77, $r78, $r79, $r80, $r81, $r82, $r83, $r85, $r86, $r87, $r88, $r89, $r90;
        short $s10, $s11, $s12, $s13, $s15, $s16, $s20, $s21, $s22, $s26;
        int[] $r4, $r5, $r21, $r22, $r71;
        int $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i14, $i17, $i18, $i19, $i23, $i24, i27, $i28, i29, i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40, $i41, $i42;
        java.io.PrintStream $r73;
        org.slf4j.Logger $r6, $r10, $r24, $r36, $r48, $r60;
        java.lang.Object $r2, $r7;
        ucar.nc2.iosp.cinrad.Cinrad2Record r8, $r72;
        java.util.ArrayList r1;
        java.lang.String r0, $r12, $r20, $r26, $r34, $r38, $r46, $r50, $r58, $r62, $r70, $r84;
        ucar.unidata.io.RandomAccessFile $r11, $r25, $r37, $r49, $r61;
        boolean $z0, $z1, $z2, $z3, $z4, z5;
        float $f0, $f1, $f2, $f3;
        double $d0, $d1, d2, d3, $d6, $d7, $d8, $d9, $d10, $d11;

        r3 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.ArrayList;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("reflect");

        if $z0 == 0 goto label01;

        $b25 = 1;

        goto label02;

     label01:
        $b25 = 2;

     label02:
        b0 = $b25;

        $r2 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(0);

        $r72 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r2;

        $i1 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        $z1 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugScans>;

        if $z1 == 0 goto label05;

        $z2 = $r72.<ucar.nc2.iosp.cinrad.Cinrad2Record: boolean hasDopplerData>;

        if $z2 == 0 goto label03;

        $z3 = $r72.<ucar.nc2.iosp.cinrad.Cinrad2Record: boolean hasReflectData>;

        if $z3 == 0 goto label03;

        $z4 = 1;

        goto label04;

     label03:
        $z4 = 0;

     label04:
        $r73 = <java.lang.System: java.io.PrintStream out>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r75 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r72);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has ");

        $r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r80 = virtualinvoke $r79.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" radials resolution= ");

        $s26 = $r72.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i33 = (int) $s26;

        $r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i33);

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has both = ");

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z4);

        $r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r73.<java.io.PrintStream: void println(java.lang.String)>($r84);

     label05:
        z5 = 1;

        d2 = 0.0;

        d3 = 0.0;

        i27 = 0;

     label06:
        $i28 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int MAX_RADIAL>;

        if i27 >= $i28 goto label07;

        $r71 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int[] radial>;

        $r71[i27] = 0;

        i27 = i27 + 1;

        goto label06;

     label07:
        i29 = 0;

     label08:
        $i2 = virtualinvoke r1.<java.util.ArrayList: int size()>();

        if i29 >= $i2 goto label16;

        $r7 = virtualinvoke r1.<java.util.ArrayList: java.lang.Object get(int)>(i29);

        r8 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r7;

        $i6 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        $i7 = virtualinvoke $r72.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        if $i6 == $i7 goto label09;

        $r60 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r61 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r62 = virtualinvoke $r61.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r63 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" different gate size (");

        $i24 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i24);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in record ");

        $r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r70 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r60.<org.slf4j.Logger: void warn(java.lang.String)>($r70);

        z5 = 0;

     label09:
        $i8 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        $i9 = virtualinvoke $r72.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        if $i8 == $i9 goto label10;

        $r48 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r49 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r50 = virtualinvoke $r49.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r51 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" different gate start (");

        $i23 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i23);

        $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in record ");

        $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r48.<org.slf4j.Logger: void warn(java.lang.String)>($r58);

        z5 = 0;

     label10:
        $s11 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $s10 = $r72.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i34 = (int) $s11;

        $i35 = (int) $s10;

        if $i34 == $i35 goto label11;

        $r36 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r37 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r38 = virtualinvoke $r37.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r39 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r38);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" different resolution (");

        $s22 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i36 = (int) $s22;

        $r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") in record ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r36.<org.slf4j.Logger: void warn(java.lang.String)>($r46);

        z5 = 0;

     label11:
        $s12 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short radial_num>;

        $i37 = (int) $s12;

        if $i37 < 0 goto label12;

        $s15 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short radial_num>;

        $i14 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int MAX_RADIAL>;

        $i38 = (int) $s15;

        if $i38 < $i14 goto label13;

     label12:
        $r10 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r11 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r12 = virtualinvoke $r11.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r13 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" radial out of range= ");

        $s13 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short radial_num>;

        $i39 = (int) $s13;

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in record ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r10.<org.slf4j.Logger: void info(java.lang.String)>($r20);

        goto label15;

     label13:
        $r21 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int[] radial>;

        $s16 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short radial_num>;

        $i40 = (int) $s16;

        $i17 = $r21[$i40];

        if $i17 <= 0 goto label14;

        $r24 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r25 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.unidata.io.RandomAccessFile raf>;

        $r26 = virtualinvoke $r25.<ucar.unidata.io.RandomAccessFile: java.lang.String getLocation()>();

        $r27 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" duplicate radial = ");

        $s21 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short radial_num>;

        $i41 = (int) $s21;

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i41);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in record ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r8);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r24.<org.slf4j.Logger: void warn(java.lang.String)>($r34);

        z5 = 0;

     label14:
        $r22 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int[] radial>;

        $s20 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: short radial_num>;

        $i18 = r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: int recno>;

        $i19 = $i18 + 1;

        $i42 = (int) $s20;

        $r22[$i42] = $i19;

        $f0 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $d0 = (double) $f0;

        d2 = d2 + $d0;

        $f1 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $f2 = virtualinvoke r8.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $f3 = $f1 * $f2;

        $d1 = (double) $f3;

        d3 = d3 + $d1;

     label15:
        i29 = i29 + 1;

        goto label08;

     label16:
        i30 = 1;

     label17:
        $r4 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int[] radial>;

        $i3 = lengthof $r4;

        if i30 >= $i3 goto label19;

        $r5 = r3.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int[] radial>;

        $i4 = $r5[i30];

        if 0 != $i4 goto label18;

        $i5 = i30 - 1;

        if $i1 == $i5 goto label19;

        $r6 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>(" missing radial(s)");

        z5 = 0;

        goto label19;

     label18:
        i30 = i30 + 1;

        goto label17;

     label19:
        $d6 = (double) $i1;

        $d7 = $d6 * d3;

        $d8 = d2 * d2;

        $d9 = $d7 - $d8;

        $i31 = $i1 - 1;

        $i32 = $i1 * $i31;

        $d10 = (double) $i32;

        $d11 = $d9 / $d10;

        staticinvoke <java.lang.Math: double sqrt(double)>($d11);

        return z5;
    }

    private boolean testVariable(java.lang.String, java.util.List)
    {
        byte b0, $b26, $b27, $b28, $b29, $b30;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r6;
        java.lang.StringBuilder $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23, $r24, $r25, $r26, $r27, $r28, $r29, $r30, $r34, $r35, $r36, $r37, $r41, $r42, $r43, $r44, $r45, $r46, $r47, $r48, $r49, $r50, $r51, $r55, $r56, $r57, $r58, $r59, $r60, $r61, $r62, $r63, $r64, $r65, $r69, $r71, $r72, $r73, $r74, $r75, $r76, $r77, $r81, $r82, $r84, $r85, $r86, $r87, $r88, $r89, $r90;
        short $s2, $s3, $s6, $s7, $s10, $s11, $s12, $s13, $s14, $s15;
        int $i1, $i4, $i5, $i8, $i9, $i16, $i17, $i18, i20, $i21, $i22, $i23, $i24, $i25, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        java.io.PrintStream $r12, $r33, $r68;
        org.slf4j.Logger $r19, $r40, $r54, $r80;
        java.lang.Object $r2, $r4, $r7, $r9;
        ucar.nc2.iosp.cinrad.Cinrad2Record r5, r10;
        java.lang.String r0, $r17, $r31, $r38, $r52, $r66, $r70, $r78, $r83;
        boolean $z0, $z1, $z2, $z3, z4;
        java.util.List r1, r3, r8;
        float $f0, $f1, $f2, $f3, $f4;

        r6 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.util.List;

        $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("reflect");

        if $z0 == 0 goto label01;

        $b30 = 1;

        $b29 = 1;

        $b28 = 1;

        $b27 = 1;

        $b26 = 1;

        goto label02;

     label01:
        $b30 = 2;

        $b29 = 2;

        $b28 = 2;

        $b27 = 2;

        $b26 = 2;

     label02:
        b0 = $b30;

        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i1 != 0 goto label03;

        $r80 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r84 = new java.lang.StringBuilder;

        specialinvoke $r84.<java.lang.StringBuilder: void <init>()>();

        $r81 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" No data for = ");

        $r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r80.<org.slf4j.Logger: void warn(java.lang.String)>($r83);

        return 0;

     label03:
        z4 = 1;

        $r2 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(0);

        r3 = (java.util.List) $r2;

        $r4 = interfaceinvoke r3.<java.util.List: java.lang.Object get(int)>(0);

        r5 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r4;

        $s2 = r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i31 = (int) $s2;

        r6.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int dopplarResolution> = $i31;

        $z1 = r6.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugGroups2>;

        if $z1 == 0 goto label04;

        $r68 = <java.lang.System: java.io.PrintStream out>;

        $r85 = new java.lang.StringBuilder;

        specialinvoke $r85.<java.lang.StringBuilder: void <init>()>();

        $r69 = virtualinvoke $r85.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Group ");

        $r70 = staticinvoke <ucar.nc2.iosp.cinrad.Cinrad2Record: java.lang.String getDatatypeName(int)>($b26);

        $r71 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r70);

        $r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ngates = ");

        $i16 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateCount(int)>($b28);

        $r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i16);

        $r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" start = ");

        $i17 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>($b27);

        $r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17);

        $r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" size = ");

        $i18 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>($b29);

        $r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i18);

        $r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r68.<java.io.PrintStream: void println(java.lang.String)>($r78);

     label04:
        i20 = 1;

     label05:
        $i21 = interfaceinvoke r1.<java.util.List: int size()>();

        if i20 >= $i21 goto label11;

        $r7 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i20);

        r8 = (java.util.List) $r7;

        $r9 = interfaceinvoke r8.<java.util.List: java.lang.Object get(int)>(0);

        r10 = (ucar.nc2.iosp.cinrad.Cinrad2Record) $r9;

        if b0 != 2 goto label06;

        $s12 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $s11 = r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i32 = (int) $s12;

        $i33 = (int) $s11;

        if $i32 == $i33 goto label06;

        $r54 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r86 = new java.lang.StringBuilder;

        specialinvoke $r86.<java.lang.StringBuilder: void <init>()>();

        $r55 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scan ");

        $r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" diff resolutions = ");

        $s13 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i34 = (int) $s13;

        $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i34);

        $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");

        $s14 = r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: short resolution>;

        $i35 = (int) $s14;

        $r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i35);

        $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev= ");

        $s15 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short elevation_num>;

        $i36 = (int) $s15;

        $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i36);

        $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f4 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f4);

        $r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r54.<org.slf4j.Logger: void warn(java.lang.String)>($r66);

        z4 = 0;

        r6.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean hasDifferentDopplarResolutions> = 1;

     label06:
        $i22 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        $i23 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        if $i22 == $i23 goto label07;

        $r40 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r87 = new java.lang.StringBuilder;

        specialinvoke $r87.<java.lang.StringBuilder: void <init>()>();

        $r41 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scan ");

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" diff gates size = ");

        $i8 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        $r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8);

        $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i9 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateSize(int)>(b0);

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i9);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev= ");

        $s10 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short elevation_num>;

        $i37 = (int) $s10;

        $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37);

        $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f3 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f3);

        $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r40.<org.slf4j.Logger: void warn(java.lang.String)>($r52);

        z4 = 0;

        goto label08;

     label07:
        $z2 = r6.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugGroups2>;

        if $z2 == 0 goto label08;

        $r33 = <java.lang.System: java.io.PrintStream out>;

        $r88 = new java.lang.StringBuilder;

        specialinvoke $r88.<java.lang.StringBuilder: void <init>()>();

        $r34 = virtualinvoke $r88.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ok gates size elev= ");

        $s7 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short elevation_num>;

        $i38 = (int) $s7;

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i38);

        $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f2 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f2);

        $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r33.<java.io.PrintStream: void println(java.lang.String)>($r38);

     label08:
        $i24 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        $i25 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        if $i24 == $i25 goto label09;

        $r19 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r89 = new java.lang.StringBuilder;

        specialinvoke $r89.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" scan ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i20);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" diff gates start = ");

        $i4 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $i5 = virtualinvoke r5.<ucar.nc2.iosp.cinrad.Cinrad2Record: int getGateStart(int)>(b0);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" elev= ");

        $s6 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short elevation_num>;

        $i39 = (int) $s6;

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i39);

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f1 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f1);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r19.<org.slf4j.Logger: void warn(java.lang.String)>($r31);

        z4 = 0;

        goto label10;

     label09:
        $z3 = r6.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: boolean debugGroups2>;

        if $z3 == 0 goto label10;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r90 = new java.lang.StringBuilder;

        specialinvoke $r90.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ok gates start elev= ");

        $s3 = r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: short elevation_num>;

        $i40 = (int) $s3;

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i40);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $f0 = virtualinvoke r10.<ucar.nc2.iosp.cinrad.Cinrad2Record: float getElevation()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r17);

     label10:
        i20 = i20 + 1;

        goto label05;

     label11:
        return z4;
    }

    public java.util.List getReflectivityGroups()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.util.ArrayList reflectivityGroups>;

        return $r1;
    }

    public java.util.List getVelocityGroups()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        java.util.ArrayList $r1;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.util.ArrayList dopplerGroups>;

        return $r1;
    }

    public java.lang.String getDataFormat()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String dataFormat>;

        return $r1;
    }

    public int getTitleJulianDays()
    {
        int $i0;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int title_julianDay>;

        return $i0;
    }

    public int getTitleMsecs()
    {
        int $i0;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int title_msecs>;

        return $i0;
    }

    public int getVCP()
    {
        int $i0;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $i0 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: int vcp>;

        return $i0;
    }

    public java.lang.String getStationId()
    {
        java.lang.String $r1;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String stationId>;

        return $r1;
    }

    public java.lang.String getStationName()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        java.lang.String $r3;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $r3 = "unknown";

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $r3 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: java.lang.String name>;

     label2:
        return $r3;
    }

    public double getStationLatitude()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $d0 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lat>;

     label2:
        return $d0;
    }

    public double getStationLongitude()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $d0 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double lon>;

     label2:
        return $d0;
    }

    public double getStationElevation()
    {
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;
        ucar.nc2.iosp.nexrad2.NexradStationDB$Station $r1, $r2;
        double $d0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        if $r1 != null goto label1;

        $d0 = 0.0;

        goto label2;

     label1:
        $r2 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.nexrad2.NexradStationDB$Station station>;

        $d0 = $r2.<ucar.nc2.iosp.nexrad2.NexradStationDB$Station: double elev>;

     label2:
        return $d0;
    }

    public java.util.Date getStartDate()
    {
        ucar.nc2.iosp.cinrad.Cinrad2Record $r1;
        java.util.Date $r2;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.cinrad.Cinrad2Record first>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.cinrad.Cinrad2Record: java.util.Date getDate()>();

        return $r2;
    }

    public java.util.Date getEndDate()
    {
        ucar.nc2.iosp.cinrad.Cinrad2Record $r1;
        java.util.Date $r2;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r0;

        r0 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        $r1 = r0.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: ucar.nc2.iosp.cinrad.Cinrad2Record last>;

        $r2 = virtualinvoke $r1.<ucar.nc2.iosp.cinrad.Cinrad2Record: java.util.Date getDate()>();

        return $r2;
    }

    private ucar.unidata.io.RandomAccessFile uncompress(ucar.unidata.io.RandomAccessFile, java.lang.String, boolean) throws java.io.IOException
    {
        byte[] r1, r4, r36, $r37, r39;
        ucar.unidata.io.RandomAccessFile r0, $r40;
        java.io.ByteArrayInputStream $r44;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan r35;
        boolean z0, z1;
        java.io.EOFException $r30, $r33;
        float $f0;
        java.lang.StringBuilder $r8, $r9, $r10, $r11, $r12, $r13, $r17, $r18, $r22, $r23, $r24, $r25, $r26, $r27, $r42, $r43, $r45;
        long $l2, $l8, $l9;
        ucar.unidata.io.bzip2.BZip2ReadException $r31;
        int $i0, $i1, $i3, $i4, $i5, $i6, $i7, i10, $i11, i12, $i13, $i15, $i17, $i19, $i21;
        java.lang.String r3, $r14, $r19, $r28;
        double $d0, $d1;
        org.slf4j.Logger $r7, $r16, $r21, $r29, $r32, $r34;
        ucar.unidata.io.bzip2.CBZip2InputStream $r41;

        r35 := @this: ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        r0 := @parameter0: ucar.unidata.io.RandomAccessFile;

        r3 := @parameter1: java.lang.String;

        z0 := @parameter2: boolean;

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        r1 = newarray (byte)[0];

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r1);

        $r40 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r40.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r3, "rw");

        virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: void write(byte[])>(r1);

        z1 = 0;

        $i15 = (int) 40000;

        r4 = newarray (byte)[$i15];

        $i17 = (int) 40000;

        r36 = newarray (byte)[$i17];

     label01:
        $r41 = new ucar.unidata.io.bzip2.CBZip2InputStream;

        specialinvoke $r41.<ucar.unidata.io.bzip2.CBZip2InputStream: void <init>()>();

     label02:
        if z1 != 0 goto label19;

     label03:
        $i0 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        i10 = $i0;

        $i19 = (int) -1;

        if $i0 != $i19 goto label05;

        if z0 == 0 goto label04;

        $r29 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r29.<org.slf4j.Logger: void debug(java.lang.String)>("  done: numCompBytes=-1 ");

     label04:
        goto label19;

     label05:
        goto label08;

     label06:
        $r33 := @caughtexception;

        if z0 == 0 goto label07;

        $r34 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r34.<org.slf4j.Logger: void debug(java.lang.String)>("  got EOFException ");

     label07:
        goto label19;

     label08:
        if z0 == 0 goto label09;

        $r21 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r42 = new java.lang.StringBuilder;

        specialinvoke $r42.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reading compressed bytes ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" input starts at ");

        $l8 = virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; output starts at ");

        $l9 = virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);

        $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r21.<org.slf4j.Logger: void debug(java.lang.String)>($r28);

     label09:
        if $i0 >= 0 goto label11;

        if z0 == 0 goto label10;

        $r16 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r43 = new java.lang.StringBuilder;

        specialinvoke $r43.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("last block?");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r16.<org.slf4j.Logger: void debug(java.lang.String)>($r19);

     label10:
        i10 = neg $i0;

        z1 = 1;

     label11:
        $r37 = newarray (byte)[i10];

        virtualinvoke r0.<ucar.unidata.io.RandomAccessFile: void readFully(byte[])>($r37);

        $r44 = new java.io.ByteArrayInputStream;

        $i11 = i10 - 2;

        specialinvoke $r44.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r37, 2, $i11);

        virtualinvoke $r41.<ucar.unidata.io.bzip2.CBZip2InputStream: void setStream(java.io.InputStream)>($r44);

        i12 = 0;

     label12:
        $i13 = virtualinvoke $r41.<ucar.unidata.io.bzip2.CBZip2InputStream: int read(byte[])>(r4);

        $i21 = (int) -1;

        if $i13 == $i21 goto label14;

        $i4 = i12 + $i13;

        $i3 = lengthof r36;

        if $i4 <= $i3 goto label13;

        r39 = r36;

        $i5 = lengthof r36;

        $i6 = $i5 * 2;

        r36 = newarray (byte)[$i6];

        $i7 = lengthof r39;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r39, 0, r36, 0, $i7);

     label13:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(r4, 0, r36, i12, $i13);

        i12 = i12 + $i13;

        goto label12;

     label14:
        $i1 = lengthof r36;

        if $i1 < 0 goto label15;

        virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: void write(byte[],int,int)>(r36, 0, i12);

     label15:
        goto label17;

     label16:
        $r31 := @caughtexception;

        $r32 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        interfaceinvoke $r32.<org.slf4j.Logger: void debug(java.lang.String,java.lang.Throwable)>("Cinrad2IOSP.uncompress ", $r31);

     label17:
        $d0 = (double) i12;

        $d1 = $d0 / 2432.0;

        $f0 = (float) $d1;

        if z0 == 0 goto label18;

        $r7 = <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log>;

        $r45 = new java.lang.StringBuilder;

        specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  unpacked ");

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i12);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" num bytes ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>($f0);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" records; ouput ends at ");

        $l2 = virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r7.<org.slf4j.Logger: void debug(java.lang.String)>($r14);

     label18:
        goto label02;

     label19:
        goto label21;

     label20:
        $r30 := @caughtexception;

        virtualinvoke $r30.<java.io.EOFException: void printStackTrace()>();

     label21:
        virtualinvoke $r40.<ucar.unidata.io.RandomAccessFile: void flush()>();

        return $r40;

        catch java.io.EOFException from label03 to label04 with label06;
        catch ucar.unidata.io.bzip2.BZip2ReadException from label12 to label15 with label16;
        catch java.io.EOFException from label01 to label19 with label20;
    }

    static void bdiff(java.lang.String) throws java.io.IOException
    {
        int $i0, $i1, i2, i3;
        java.lang.String r2, $r5, $r10, $r18, $r23;
        java.io.PrintStream $r12, $r19;
        java.io.FileInputStream $r0, $r6;
        java.lang.StringBuilder $r1, $r3, $r4, $r7, $r8, $r9, $r11, $r13, $r14, $r15, $r16, $r17, $r20, $r21, $r22;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.io.FileInputStream;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r0.<java.io.FileInputStream: void <init>(java.lang.String)>($r5);

        $r6 = new java.io.FileInputStream;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".tmp2");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.io.FileInputStream: void <init>(java.lang.String)>($r10);

        i2 = 0;

        i3 = 0;

     label1:
        $i0 = virtualinvoke $r0.<java.io.InputStream: int read()>();

        $i1 = virtualinvoke $r6.<java.io.InputStream: int read()>();

        if $i0 >= 0 goto label2;

        goto label5;

     label2:
        if $i1 >= 0 goto label3;

        goto label5;

     label3:
        if $i0 == $i1 goto label4;

        $r12 = <java.lang.System: java.io.PrintStream out>;

        $r11 = new java.lang.StringBuilder;

        specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in1=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" in2= ");

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r12.<java.io.PrintStream: void println(java.lang.String)>($r18);

        i3 = i3 + 1;

        if i3 <= 130 goto label4;

        goto label5;

     label4:
        i2 = i2 + 1;

        goto label1;

     label5:
        $r19 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("total read = ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r23);

        return;
    }

    public static long testValid(java.lang.String) throws java.io.IOException
    {
        byte[] r2;
        ucar.unidata.io.RandomAccessFile $r31;
        boolean $z0, $z1, $z2, $z3, z4, z5, z6, z7;
        java.io.EOFException $r28, $r29;
        java.lang.StringBuilder $r6, $r7, $r11, $r12, $r13, $r17, $r18, $r24, $r25, $r33, $r35, $r36, $r37;
        long $l0;
        int $i1, i2, $i4, $i6;
        java.lang.String r1, $r8, $r14, $r19, $r26, $r32, $r34;
        java.io.PrintStream $r5, $r10, $r16, $r20, $r23, $r27, $r30;

        r1 := @parameter0: java.lang.String;

        z4 = 0;

        z7 = 0;

        z6 = 0;

        $r31 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r31.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>(r1, "r");

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void order(int)>(1);

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

        r2 = newarray (byte)[8];

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r2);

        $r32 = new java.lang.String;

        specialinvoke $r32.<java.lang.String: void <init>(byte[])>(r2);

        $z0 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("ARCHIVE2");

        if $z0 != 0 goto label01;

        $z3 = virtualinvoke $r32.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0001");

        if $z3 == 0 goto label02;

     label01:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("--Good header= ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void seek(long)>(24L);

        goto label03;

     label02:
        $r27 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>("--No header ");

        z4 = 1;

        z7 = 1;

        z6 = 1;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: void seek(long)>(0L);

     label03:
        z5 = 0;

     label04:
        if z5 != 0 goto label13;

        if z6 == 0 goto label07;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int read(byte[])>(r2);

        $r34 = new java.lang.String;

        specialinvoke $r34.<java.lang.String: void <init>(byte[])>(r2);

        $z1 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("ARCHIVE2");

        if $z1 != 0 goto label05;

        $z2 = virtualinvoke $r34.<java.lang.String: boolean equals(java.lang.Object)>("AR2V0001");

        if $z2 == 0 goto label06;

     label05:
        $r23 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r24 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  found header= ");

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34);

        $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r23.<java.io.PrintStream: void println(java.lang.String)>($r26);

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(16);

        z4 = 0;

        z7 = 0;

        z6 = 0;

        goto label07;

     label06:
        $i4 = (int) -8;

        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>($i4);

     label07:
        $i1 = virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int readInt()>();

        i2 = $i1;

        $i6 = (int) -1;

        if $i1 != $i6 goto label09;

        $r20 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r20.<java.io.PrintStream: void println(java.lang.String)>("\n--done: numCompBytes=-1 ");

     label08:
        goto label13;

     label09:
        goto label11;

     label10:
        $r29 := @caughtexception;

        $r30 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>("\n--got EOFException ");

        goto label13;

     label11:
        $r10 = <java.lang.System: java.io.PrintStream out>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r10.<java.io.PrintStream: void print(java.lang.String)>($r14);

        if $i1 >= 0 goto label12;

        $r16 = <java.lang.System: java.io.PrintStream out>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r17 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n--last block ");

        $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r19);

        i2 = neg $i1;

        if z7 != 0 goto label12;

        z5 = 1;

     label12:
        virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: int skipBytes(int)>(i2);

        goto label04;

     label13:
        goto label15;

     label14:
        $r28 := @caughtexception;

        virtualinvoke $r28.<java.io.EOFException: void printStackTrace()>();

     label15:
        $l0 = virtualinvoke $r31.<ucar.unidata.io.RandomAccessFile: long getFilePointer()>();

        return $l0;

        catch java.io.EOFException from label07 to label08 with label10;
        catch java.io.EOFException from label04 to label13 with label14;
    }

    public static void main2(java.lang.String[]) throws java.io.IOException
    {
        byte $b4;
        boolean $z0;
        java.lang.StringBuilder $r4, $r7, $r8, $r9, $r12, $r14, $r15, $r20, $r22, $r23;
        java.lang.Throwable $r19;
        long $l1, $l2, $l3;
        java.lang.String[] r25;
        int $i0, i5;
        java.lang.String $r3, $r6, $r10, $r11, $r16, $r18, $r24;
        java.io.PrintStream $r5, $r13, $r17, $r21, $r26;
        java.io.File $r0, r2;
        java.io.File[] $r1;

        r25 := @parameter0: java.lang.String[];

        $r0 = new java.io.File;

        specialinvoke $r0.<java.io.File: void <init>(java.lang.String)>("C:/data/bad/radar2/");

        $r1 = virtualinvoke $r0.<java.io.File: java.io.File[] listFiles()>();

        i5 = 0;

     label1:
        $i0 = lengthof $r1;

        if i5 >= $i0 goto label9;

        r2 = $r1[i5];

        $r3 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $z0 = virtualinvoke $r3.<java.lang.String: boolean endsWith(java.lang.String)>(".ar2v");

        if $z0 != 0 goto label2;

        goto label8;

     label2:
        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $l1 = virtualinvoke r2.<java.io.File: long length()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10);

        $r11 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        $l2 = staticinvoke <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: long testValid(java.lang.String)>($r11);

        $l3 = virtualinvoke r2.<java.io.File: long length()>();

        $b4 = $l2 cmp $l3;

        if $b4 != 0 goto label6;

        $r17 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>("OK");

     label3:
        $r18 = virtualinvoke r2.<java.io.File: java.lang.String getPath()>();

        staticinvoke <ucar.nc2.NetcdfFile: ucar.nc2.NetcdfFile open(java.lang.String)>($r18);

     label4:
        goto label7;

     label5:
        $r19 := @caughtexception;

        $r21 = <java.lang.System: java.io.PrintStream out>;

        $r20 = new java.lang.StringBuilder;

        specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ERROR=  ");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r19);

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r21.<java.io.PrintStream: void println(java.lang.String)>($r24);

        goto label7;

     label6:
        $r13 = <java.lang.System: java.io.PrintStream out>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NOT pos=");

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r13.<java.io.PrintStream: void println(java.lang.String)>($r16);

     label7:
        $r26 = <java.lang.System: java.io.PrintStream out>;

        virtualinvoke $r26.<java.io.PrintStream: void println()>();

     label8:
        i5 = i5 + 1;

        goto label1;

     label9:
        return;

        catch java.lang.Throwable from label3 to label4 with label5;
    }

    public static void main(java.lang.String[]) throws java.io.IOException
    {
        ucar.unidata.io.RandomAccessFile $r0;
        java.lang.String[] r2;
        ucar.nc2.iosp.cinrad.Cinrad2VolumeScan $r1;

        r2 := @parameter0: java.lang.String[];

        staticinvoke <ucar.nc2.iosp.nexrad2.NexradStationDB: void init()>();

        $r0 = new ucar.unidata.io.RandomAccessFile;

        specialinvoke $r0.<ucar.unidata.io.RandomAccessFile: void <init>(java.lang.String,java.lang.String)>("R:/testdata/radar/nexrad/Cinrad2/problem/KCCX_20060627_1701", "r");

        $r1 = new ucar.nc2.iosp.cinrad.Cinrad2VolumeScan;

        specialinvoke $r1.<ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: void <init>(ucar.unidata.io.RandomAccessFile,ucar.nc2.util.CancelTask)>($r0, null);

        return;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String AR2V0001> = "AR2V0001";

        <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: java.lang.String ARCHIVE2> = "ARCHIVE2";

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/iosp/cinrad/Cinrad2VolumeScan;");

        <ucar.nc2.iosp.cinrad.Cinrad2VolumeScan: org.slf4j.Logger log> = $r0;

        return;
    }
}
