final class org.apache.xml.serialize.ObjectFactory extends java.lang.Object
{
    private static final java.lang.String DEFAULT_PROPERTIES_FILENAME;
    private static final boolean DEBUG;
    private static final int DEFAULT_LINE_LENGTH;
    private static java.util.Properties fXercesProperties;
    private static long fLastModified;
    static java.lang.Class class$org$apache$xml$serialize$ObjectFactory;

    void <init>()
    {
        org.apache.xml.serialize.ObjectFactory r0;

        r0 := @this: org.apache.xml.serialize.ObjectFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    static java.lang.Object createObject(java.lang.String, java.lang.String) throws org.apache.xml.serialize.ObjectFactory$ConfigurationError
    {
        java.lang.Object $r2;
        java.lang.String r0, r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.String;

        $r2 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Object createObject(java.lang.String,java.lang.String,java.lang.String)>(r0, null, r1);

        return $r2;
    }

    static java.lang.Object createObject(java.lang.String, java.lang.String, java.lang.String) throws org.apache.xml.serialize.ObjectFactory$ConfigurationError
    {
        byte $b1, $b5;
        java.lang.Exception $r55, $r58;
        java.lang.ClassLoader $r0;
        java.lang.Throwable $r54, $r56, $r57;
        long $l0, $l2, $l3, $l4;
        java.lang.StringBuffer $r10, $r11, $r15, $r16, $r17, $r21, $r22, $r23, $r24, $r28, $r30, $r31, $r33, $r34, $r45, $r46, $r68, $r69, $r74, $r75, $r77;
        java.lang.String r1, $r2, r7, $r12, $r18, $r25, $r26, $r29, $r32, $r35, $r47, r61, r62;
        java.util.Properties $r38, $r39, $r42, $r71, $r73;
        java.io.IOException $r48, $r49, $r50, $r51, $r52, $r53;
        java.io.File r63, $r70, $r72;
        java.lang.SecurityException $r59, $r60;
        boolean $z0, $z1, $z2, $z3, z4, z5;
        org.apache.xml.serialize.ObjectFactory$ConfigurationError $r76;
        int $i6, $i7, $i8;
        java.io.FileInputStream $r4, $r41, r66, r67;
        java.lang.Object $r6, $r8, $r19, $r43;
        java.lang.Class $r37, $r64, r65;

        r1 := @parameter0: java.lang.String;

        r61 := @parameter1: java.lang.String;

        r7 := @parameter2: java.lang.String;

        $z0 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z0 == 0 goto label01;

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>("debug is on");

     label01:
        $r0 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

     label02:
        $r2 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>(r1);

        if $r2 == null goto label04;

        $i6 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i6 <= 0 goto label04;

        $z3 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z3 == 0 goto label03;

        $r68 = new java.lang.StringBuffer;

        specialinvoke $r68.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r68.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found system property, value=");

        $r46 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2);

        $r47 = virtualinvoke $r46.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>($r47);

     label03:
        $r43 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r2, $r0, 1);

        return $r43;

     label04:
        goto label06;

     label05:
        $r60 := @caughtexception;

     label06:
        r62 = null;

        if r61 != null goto label27;

        r63 = null;

        z4 = 0;

     label07:
        $r26 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("java.home");

        $r69 = new java.lang.StringBuffer;

        specialinvoke $r69.<java.lang.StringBuffer: void <init>()>();

        $r28 = virtualinvoke $r69.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r26);

        $r29 = <java.io.File: java.lang.String separator>;

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("lib");

        $r32 = <java.io.File: java.lang.String separator>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("xerces.properties");

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.String toString()>();

        r61 = $r35;

        $r70 = new java.io.File;

        specialinvoke $r70.<java.io.File: void <init>(java.lang.String)>($r35);

        r63 = $r70;

        z4 = staticinvoke <org.apache.xml.serialize.SecuritySupport: boolean getFileExists(java.io.File)>($r70);

     label08:
        goto label10;

     label09:
        $r59 := @caughtexception;

        <org.apache.xml.serialize.ObjectFactory: long fLastModified> = -1L;

        <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties> = null;

     label10:
        $r37 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

        if $r37 != null goto label11;

        $r64 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$(java.lang.String)>("org.apache.xml.serialize.ObjectFactory");

        <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory> = $r64;

        goto label12;

     label11:
        $r64 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

     label12:
        r65 = $r64;

        entermonitor $r64;

     label13:
        z5 = 0;

        r66 = null;

     label14:
        $l0 = <org.apache.xml.serialize.ObjectFactory: long fLastModified>;

        $b1 = $l0 cmp 0L;

        $i7 = (int) $b1;

        if $i7 < 0 goto label16;

        if z4 == 0 goto label15;

        $l3 = <org.apache.xml.serialize.ObjectFactory: long fLastModified>;

        $l4 = staticinvoke <org.apache.xml.serialize.SecuritySupport: long getLastModified(java.io.File)>(r63);

        <org.apache.xml.serialize.ObjectFactory: long fLastModified> = $l4;

        $b5 = $l3 cmp $l4;

        $i8 = (int) $b5;

        if $i8 >= 0 goto label15;

        z5 = 1;

        goto label17;

     label15:
        if z4 != 0 goto label17;

        <org.apache.xml.serialize.ObjectFactory: long fLastModified> = -1L;

        <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties> = null;

        goto label17;

     label16:
        if z4 == 0 goto label17;

        z5 = 1;

        $l2 = staticinvoke <org.apache.xml.serialize.SecuritySupport: long getLastModified(java.io.File)>(r63);

        <org.apache.xml.serialize.ObjectFactory: long fLastModified> = $l2;

     label17:
        if z5 == 0 goto label18;

        $r71 = new java.util.Properties;

        specialinvoke $r71.<java.util.Properties: void <init>()>();

        <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties> = $r71;

        $r41 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>(r63);

        r66 = $r41;

        $r42 = <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties>;

        virtualinvoke $r42.<java.util.Properties: void load(java.io.InputStream)>($r41);

     label18:
        goto label41;

     label19:
        goto label24;

     label20:
        $r58 := @caughtexception;

        <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties> = null;

        <org.apache.xml.serialize.ObjectFactory: long fLastModified> = -1L;

        goto label46;

     label21:
        goto label24;

     label22:
        $r57 := @caughtexception;

        goto label51;

     label23:
        throw $r57;

     label24:
        exitmonitor r65;

        goto label26;

     label25:
        $r56 := @caughtexception;

        exitmonitor r65;

        throw $r56;

     label26:
        $r38 = <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties>;

        if $r38 == null goto label35;

        $r39 = <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties>;

        r62 = virtualinvoke $r39.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

        goto label35;

     label27:
        r67 = null;

     label28:
        $r72 = new java.io.File;

        specialinvoke $r72.<java.io.File: void <init>(java.lang.String)>(r61);

        $r4 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.io.FileInputStream getFileInputStream(java.io.File)>($r72);

        r67 = $r4;

        $r73 = new java.util.Properties;

        specialinvoke $r73.<java.util.Properties: void <init>()>();

        virtualinvoke $r73.<java.util.Properties: void load(java.io.InputStream)>($r4);

        r62 = virtualinvoke $r73.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(r1);

     label29:
        goto label56;

     label30:
        goto label35;

     label31:
        $r55 := @caughtexception;

        goto label61;

     label32:
        goto label35;

     label33:
        $r54 := @caughtexception;

        goto label66;

     label34:
        throw $r54;

     label35:
        if r62 == null goto label37;

        $z2 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z2 == 0 goto label36;

        $r74 = new java.lang.StringBuffer;

        specialinvoke $r74.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r74.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found in ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r61);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(", value=");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r62);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>($r25);

     label36:
        $r19 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r62, $r0, 1);

        return $r19;

     label37:
        $r6 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Object findJarServiceProvider(java.lang.String)>(r1);

        if $r6 == null goto label38;

        return $r6;

     label38:
        if r7 != null goto label39;

        $r76 = new org.apache.xml.serialize.ObjectFactory$ConfigurationError;

        $r75 = new java.lang.StringBuffer;

        specialinvoke $r75.<java.lang.StringBuffer: void <init>()>();

        $r15 = virtualinvoke $r75.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Provider for ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r1);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" cannot be found");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r76.<org.apache.xml.serialize.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r18, null);

        throw $r76;

     label39:
        $z1 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z1 == 0 goto label40;

        $r77 = new java.lang.StringBuffer;

        specialinvoke $r77.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r77.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("using fallback, value=");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r7);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>($r12);

     label40:
        $r8 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>(r7, $r0, 1);

        return $r8;

     label41:
        if r66 == null goto label45;

     label42:
        virtualinvoke r66.<java.io.FileInputStream: void close()>();

     label43:
        goto label45;

     label44:
        $r53 := @caughtexception;

     label45:
        goto label19;

     label46:
        if r66 == null goto label50;

     label47:
        virtualinvoke r66.<java.io.FileInputStream: void close()>();

     label48:
        goto label50;

     label49:
        $r52 := @caughtexception;

     label50:
        goto label21;

     label51:
        if r66 == null goto label55;

     label52:
        virtualinvoke r66.<java.io.FileInputStream: void close()>();

     label53:
        goto label55;

     label54:
        $r51 := @caughtexception;

     label55:
        goto label23;

     label56:
        if $r4 == null goto label60;

     label57:
        virtualinvoke $r4.<java.io.FileInputStream: void close()>();

     label58:
        goto label60;

     label59:
        $r50 := @caughtexception;

     label60:
        goto label30;

     label61:
        if r67 == null goto label65;

     label62:
        virtualinvoke r67.<java.io.FileInputStream: void close()>();

     label63:
        goto label65;

     label64:
        $r49 := @caughtexception;

     label65:
        goto label32;

     label66:
        if r67 == null goto label70;

     label67:
        virtualinvoke r67.<java.io.FileInputStream: void close()>();

     label68:
        goto label70;

     label69:
        $r48 := @caughtexception;

     label70:
        goto label34;

        catch java.lang.SecurityException from label02 to label04 with label05;
        catch java.lang.SecurityException from label07 to label08 with label09;
        catch java.lang.Exception from label14 to label18 with label20;
        catch java.lang.Throwable from label14 to label22 with label22;
        catch java.lang.Throwable from label13 to label25 with label25;
        catch java.lang.Exception from label28 to label29 with label31;
        catch java.lang.Throwable from label28 to label33 with label33;
        catch java.io.IOException from label42 to label43 with label44;
        catch java.lang.Throwable from label41 to label46 with label25;
        catch java.io.IOException from label47 to label48 with label49;
        catch java.lang.Throwable from label46 to label51 with label25;
        catch java.io.IOException from label52 to label53 with label54;
        catch java.lang.Throwable from label51 to label56 with label25;
        catch java.io.IOException from label57 to label58 with label59;
        catch java.io.IOException from label62 to label63 with label64;
        catch java.io.IOException from label67 to label68 with label69;
    }

    private static boolean isDebugEnabled()
    {
        java.lang.SecurityException $r2;
        java.lang.String $r0, $r1;
        boolean $z0, $z1;

     label1:
        $r0 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.String getSystemProperty(java.lang.String)>("xerces.debug");

        if $r0 == null goto label2;

        $r1 = "false";

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>($r0);

        if $z0 != 0 goto label2;

        $z1 = 1;

        goto label3;

     label2:
        $z1 = 0;

     label3:
        return $z1;

     label4:
        $r2 := @caughtexception;

        return 0;

        catch java.lang.SecurityException from label1 to label4 with label4;
    }

    private static void debugPrintln(java.lang.String)
    {
        java.io.PrintStream $r1;
        java.lang.StringBuffer $r0, $r2, $r4;
        java.lang.String r3, $r5;
        boolean $z0;

        r3 := @parameter0: java.lang.String;

        $z0 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z0 == 0 goto label1;

        $r1 = <java.lang.System: java.io.PrintStream err>;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("XERCES: ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5);

     label1:
        return;
    }

    static java.lang.ClassLoader findClassLoader() throws org.apache.xml.serialize.ObjectFactory$ConfigurationError
    {
        java.lang.Class $r2, $r5;
        java.lang.ClassLoader $r0, $r1, $r3, r4, r6;

        $r0 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();

        $r1 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.ClassLoader getSystemClassLoader()>();

        r4 = $r1;

        goto label01;

     label01:
        if $r0 != r4 goto label08;

        $r2 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

        if $r2 != null goto label02;

        $r5 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$(java.lang.String)>("org.apache.xml.serialize.ObjectFactory");

        <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory> = $r5;

        goto label03;

     label02:
        $r5 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

     label03:
        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        r6 = $r1;

        goto label04;

     label04:
        if $r3 != r6 goto label05;

        return $r1;

     label05:
        if r6 != null goto label06;

        goto label07;

     label06:
        r6 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)>(r6);

        goto label04;

     label07:
        return $r3;

     label08:
        if r4 != null goto label09;

        goto label10;

     label09:
        r4 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.lang.ClassLoader getParentClassLoader(java.lang.ClassLoader)>(r4);

        goto label01;

     label10:
        return $r0;
    }

    static java.lang.Object newInstance(java.lang.String, java.lang.ClassLoader, boolean) throws org.apache.xml.serialize.ObjectFactory$ConfigurationError
    {
        java.lang.StringBuffer $r4, $r5, $r6, $r7, $r8, $r12, $r13, $r14, $r15, $r16, $r20, $r21, $r22, $r23;
        java.lang.String r0, $r9, $r17, $r24;
        boolean z0, $z1;
        org.apache.xml.serialize.ObjectFactory$ConfigurationError $r11, $r19;
        java.lang.Exception $r10;
        java.lang.Class $r2;
        java.lang.Object $r3;
        java.lang.ClassNotFoundException $r18;
        java.lang.ClassLoader r1;

        r0 := @parameter0: java.lang.String;

        r1 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

     label1:
        $r2 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Class findProviderClass(java.lang.String,java.lang.ClassLoader,boolean)>(r0, r1, z0);

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.Object newInstance()>();

        $z1 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z1 == 0 goto label2;

        $r4 = new java.lang.StringBuffer;

        specialinvoke $r4.<java.lang.StringBuffer: void <init>()>();

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("created new instance of ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" using ClassLoader: ");

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>($r9);

     label2:
        return $r3;

     label3:
        $r18 := @caughtexception;

        $r19 = new org.apache.xml.serialize.ObjectFactory$ConfigurationError;

        $r20 = new java.lang.StringBuffer;

        specialinvoke $r20.<java.lang.StringBuffer: void <init>()>();

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Provider ");

        $r22 = virtualinvoke $r21.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" not found");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r19.<org.apache.xml.serialize.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r24, $r18);

        throw $r19;

     label4:
        $r10 := @caughtexception;

        $r11 = new org.apache.xml.serialize.ObjectFactory$ConfigurationError;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Provider ");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" could not be instantiated: ");

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r10);

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r11.<org.apache.xml.serialize.ObjectFactory$ConfigurationError: void <init>(java.lang.String,java.lang.Exception)>($r17, $r10);

        throw $r11;

        catch java.lang.ClassNotFoundException from label1 to label3 with label3;
        catch java.lang.Exception from label1 to label3 with label4;
    }

    static java.lang.Class findProviderClass(java.lang.String, java.lang.ClassLoader, boolean) throws java.lang.ClassNotFoundException, org.apache.xml.serialize.ObjectFactory$ConfigurationError
    {
        java.lang.SecurityManager $r0;
        int $i0, $i2;
        java.lang.ClassNotFoundException $r2;
        java.lang.Class $r3, r7, $r8;
        java.lang.String r1, r6;
        java.lang.ClassLoader $r4, r5;
        boolean z0;

        r1 := @parameter0: java.lang.String;

        r5 := @parameter1: java.lang.ClassLoader;

        z0 := @parameter2: boolean;

        $r0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();

        if $r0 == null goto label02;

        $i0 = virtualinvoke r1.<java.lang.String: int lastIndexOf(java.lang.String)>(".");

        r6 = r1;

        $i2 = (int) -1;

        if $i0 == $i2 goto label01;

        r6 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i0);

     label01:
        virtualinvoke $r0.<java.lang.SecurityManager: void checkPackageAccess(java.lang.String)>(r6);

     label02:
        if r5 != null goto label03;

        r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        goto label11;

     label03:
        r7 = virtualinvoke r5.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

     label04:
        goto label11;

     label05:
        $r2 := @caughtexception;

        if z0 == 0 goto label10;

        $r3 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

        if $r3 != null goto label06;

        $r8 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$(java.lang.String)>("org.apache.xml.serialize.ObjectFactory");

        <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory> = $r8;

        goto label07;

     label06:
        $r8 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

     label07:
        $r4 = virtualinvoke $r8.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r4 != null goto label08;

        r7 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r1);

        goto label11;

     label08:
        if r5 == $r4 goto label09;

        r7 = virtualinvoke $r4.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(r1);

        goto label11;

     label09:
        throw $r2;

     label10:
        throw $r2;

     label11:
        return r7;

        catch java.lang.ClassNotFoundException from label03 to label04 with label05;
    }

    private static java.lang.Object findJarServiceProvider(java.lang.String) throws org.apache.xml.serialize.ObjectFactory$ConfigurationError
    {
        boolean $z0, $z1, $z2;
        java.lang.ClassLoader $r5, $r23, r32;
        java.io.UnsupportedEncodingException $r29;
        java.lang.Throwable $r27;
        java.lang.StringBuffer $r0, $r1, $r3, $r12, $r13, $r14, $r16, $r17, $r18, $r19, $r20;
        java.lang.String r2, $r4, $r9, $r10, $r15, $r21;
        java.io.IOException $r24, $r25, $r26, $r28;
        java.io.InputStreamReader $r8, $r31;
        java.lang.Object $r11;
        java.lang.Class $r22, $r34;
        java.io.BufferedReader $r7, $r30, r35;
        java.io.InputStream $r6, r33;

        r2 := @parameter0: java.lang.String;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("META-INF/services/");

        $r3 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.String toString()>();

        $r5 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.ClassLoader findClassLoader()>();

        r32 = $r5;

        $r6 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r5, $r4);

        r33 = $r6;

        if $r6 != null goto label03;

        $r22 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

        if $r22 != null goto label01;

        $r34 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$(java.lang.String)>("org.apache.xml.serialize.ObjectFactory");

        <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory> = $r34;

        goto label02;

     label01:
        $r34 = <org.apache.xml.serialize.ObjectFactory: java.lang.Class class$org$apache$xml$serialize$ObjectFactory>;

     label02:
        $r23 = virtualinvoke $r34.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();

        if $r5 == $r23 goto label03;

        r32 = $r23;

        r33 = staticinvoke <org.apache.xml.serialize.SecuritySupport: java.io.InputStream getResourceAsStream(java.lang.ClassLoader,java.lang.String)>($r23, $r4);

     label03:
        if r33 != null goto label04;

        return null;

     label04:
        $z0 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z0 == 0 goto label05;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found jar resource=");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" using ClassLoader: ");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r32);

        $r21 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>($r21);

     label05:
        $r7 = new java.io.BufferedReader;

        $r8 = new java.io.InputStreamReader;

        specialinvoke $r8.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r33, "UTF-8");

        specialinvoke $r7.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r8, 80);

        r35 = $r7;

     label06:
        goto label08;

     label07:
        $r29 := @caughtexception;

        $r30 = new java.io.BufferedReader;

        $r31 = new java.io.InputStreamReader;

        specialinvoke $r31.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r33);

        specialinvoke $r30.<java.io.BufferedReader: void <init>(java.io.Reader,int)>($r31, 80);

        r35 = $r30;

     label08:
        $r9 = virtualinvoke r35.<java.io.BufferedReader: java.lang.String readLine()>();

     label09:
        goto label18;

     label10:
        goto label15;

     label11:
        $r28 := @caughtexception;

        goto label22;

     label12:
        return null;

     label13:
        $r27 := @caughtexception;

        goto label26;

     label14:
        throw $r27;

     label15:
        if $r9 == null goto label17;

        $r10 = "";

        $z1 = virtualinvoke $r10.<java.lang.String: boolean equals(java.lang.Object)>($r9);

        if $z1 != 0 goto label17;

        $z2 = <org.apache.xml.serialize.ObjectFactory: boolean DEBUG>;

        if $z2 == 0 goto label16;

        $r12 = new java.lang.StringBuffer;

        specialinvoke $r12.<java.lang.StringBuffer: void <init>()>();

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("found in resource, value=");

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        staticinvoke <org.apache.xml.serialize.ObjectFactory: void debugPrintln(java.lang.String)>($r15);

     label16:
        $r11 = staticinvoke <org.apache.xml.serialize.ObjectFactory: java.lang.Object newInstance(java.lang.String,java.lang.ClassLoader,boolean)>($r9, r32, 0);

        return $r11;

     label17:
        return null;

     label18:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label19:
        goto label21;

     label20:
        $r26 := @caughtexception;

     label21:
        goto label10;

     label22:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label23:
        goto label25;

     label24:
        $r25 := @caughtexception;

     label25:
        goto label12;

     label26:
        virtualinvoke r35.<java.io.BufferedReader: void close()>();

     label27:
        goto label29;

     label28:
        $r24 := @caughtexception;

     label29:
        goto label14;

        catch java.io.UnsupportedEncodingException from label05 to label06 with label07;
        catch java.io.IOException from label08 to label09 with label11;
        catch java.lang.Throwable from label08 to label13 with label13;
        catch java.io.IOException from label18 to label19 with label20;
        catch java.io.IOException from label22 to label23 with label24;
        catch java.io.IOException from label26 to label27 with label28;
    }

    static java.lang.Class class$(java.lang.String)
    {
        java.lang.Class $r1;
        java.lang.ClassNotFoundException $r2;
        java.lang.String r0, $r4;
        java.lang.NoClassDefFoundError $r3;

        r0 := @parameter0: java.lang.String;

     label1:
        $r1 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r0);

        return $r1;

     label2:
        $r2 := @caughtexception;

        $r3 = new java.lang.NoClassDefFoundError;

        $r4 = virtualinvoke $r2.<java.lang.ClassNotFoundException: java.lang.String getMessage()>();

        specialinvoke $r3.<java.lang.NoClassDefFoundError: void <init>(java.lang.String)>($r4);

        throw $r3;

        catch java.lang.ClassNotFoundException from label1 to label2 with label2;
    }

    static void <clinit>()
    {
        boolean $z0;

        <org.apache.xml.serialize.ObjectFactory: int DEFAULT_LINE_LENGTH> = 80;

        <org.apache.xml.serialize.ObjectFactory: java.lang.String DEFAULT_PROPERTIES_FILENAME> = "xerces.properties";

        $z0 = staticinvoke <org.apache.xml.serialize.ObjectFactory: boolean isDebugEnabled()>();

        <org.apache.xml.serialize.ObjectFactory: boolean DEBUG> = $z0;

        <org.apache.xml.serialize.ObjectFactory: java.util.Properties fXercesProperties> = null;

        <org.apache.xml.serialize.ObjectFactory: long fLastModified> = -1L;

        return;
    }
}
