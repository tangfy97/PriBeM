class com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1 extends com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator
{
    final com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet this$1;

    void <init>(com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet, int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet r1;
        com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1 r0;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1;

        r1 := @parameter0: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet;

        i0 := @parameter1: int;

        r0.<com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet this$1> = r1;

        specialinvoke r0.<com.mycila.inject.internal.guava.collect.AbstractIndexedListIterator: void <init>(int)>(i0);

        return;
    }

    protected java.util.Map$Entry get(int)
    {
        java.util.Map$Entry $r8;
        com.mycila.inject.internal.guava.collect.ImmutableList $r3;
        com.mycila.inject.internal.guava.collect.ArrayTable$Column $r5;
        com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet $r1, $r6;
        com.mycila.inject.internal.guava.collect.ArrayTable $r2, $r7;
        int i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1 r0;
        java.lang.Object $r4;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1;

        i0 := @parameter0: int;

        $r1 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet this$1>;

        $r2 = $r1.<com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        $r3 = staticinvoke <com.mycila.inject.internal.guava.collect.ArrayTable: com.mycila.inject.internal.guava.collect.ImmutableList access$100(com.mycila.inject.internal.guava.collect.ArrayTable)>($r2);

        $r4 = virtualinvoke $r3.<com.mycila.inject.internal.guava.collect.ImmutableList: java.lang.Object get(int)>(i0);

        $r5 = new com.mycila.inject.internal.guava.collect.ArrayTable$Column;

        $r6 = r0.<com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet this$1>;

        $r7 = $r6.<com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet: com.mycila.inject.internal.guava.collect.ArrayTable this$0>;

        specialinvoke $r5.<com.mycila.inject.internal.guava.collect.ArrayTable$Column: void <init>(com.mycila.inject.internal.guava.collect.ArrayTable,int)>($r7, i0);

        $r8 = staticinvoke <com.mycila.inject.internal.guava.collect.Maps: java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object)>($r4, $r5);

        return $r8;
    }

    protected volatile java.lang.Object get(int)
    {
        int i0;
        com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1 r0;
        java.util.Map$Entry $r1;

        r0 := @this: com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1;

        i0 := @parameter0: int;

        $r1 = virtualinvoke r0.<com.mycila.inject.internal.guava.collect.ArrayTable$ColumnMapEntrySet$1: java.util.Map$Entry get(int)>(i0);

        return $r1;
    }
}
