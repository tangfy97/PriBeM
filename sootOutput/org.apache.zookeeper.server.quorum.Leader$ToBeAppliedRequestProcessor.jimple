class org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor extends java.lang.Object implements org.apache.zookeeper.server.RequestProcessor
{
    private org.apache.zookeeper.server.RequestProcessor next;
    private java.util.concurrent.ConcurrentLinkedQueue toBeApplied;

    void <init>(org.apache.zookeeper.server.RequestProcessor, java.util.concurrent.ConcurrentLinkedQueue)
    {
        java.lang.String $r6, $r10, $r14, $r16;
        org.apache.zookeeper.server.RequestProcessor r1;
        org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor r0;
        boolean $z0;
        java.lang.RuntimeException $r3;
        java.lang.StringBuilder $r4, $r7, $r8, $r11, $r12, $r15;
        java.lang.Class $r5, $r9, $r13;
        java.util.concurrent.ConcurrentLinkedQueue r2;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor;

        r1 := @parameter0: org.apache.zookeeper.server.RequestProcessor;

        r2 := @parameter1: java.util.concurrent.ConcurrentLinkedQueue;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $z0 = r1 instanceof org.apache.zookeeper.server.FinalRequestProcessor;

        if $z0 != 0 goto label1;

        $r3 = new java.lang.RuntimeException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r5 = class "Lorg/apache/zookeeper/server/quorum/Leader$ToBeAppliedRequestProcessor;";

        $r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be connected to ");

        $r9 = class "Lorg/apache/zookeeper/server/FinalRequestProcessor;";

        $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();

        $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" not ");

        $r13 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getName()>();

        $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);

        $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.RuntimeException: void <init>(java.lang.String)>($r16);

        throw $r3;

     label1:
        r0.<org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor: java.util.concurrent.ConcurrentLinkedQueue toBeApplied> = r2;

        r0.<org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor: org.apache.zookeeper.server.RequestProcessor next> = r1;

        return;
    }

    public void processRequest(org.apache.zookeeper.server.Request) throws org.apache.zookeeper.server.RequestProcessor$RequestProcessorException
    {
        long $l0, $l1;
        org.apache.zookeeper.server.Request r1, $r6, $r7;
        byte $b2;
        org.apache.zookeeper.server.quorum.Leader$Proposal r5;
        java.lang.Object $r4;
        org.apache.zookeeper.server.RequestProcessor $r2;
        org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor r0;
        java.util.concurrent.ConcurrentLinkedQueue $r3, $r8;

        r0 := @this: org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor;

        r1 := @parameter0: org.apache.zookeeper.server.Request;

        $r2 = r0.<org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor: org.apache.zookeeper.server.RequestProcessor next>;

        interfaceinvoke $r2.<org.apache.zookeeper.server.RequestProcessor: void processRequest(org.apache.zookeeper.server.Request)>(r1);

        $r3 = r0.<org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor: java.util.concurrent.ConcurrentLinkedQueue toBeApplied>;

        $r4 = virtualinvoke $r3.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object peek()>();

        r5 = (org.apache.zookeeper.server.quorum.Leader$Proposal) $r4;

        if r5 == null goto label1;

        $r6 = r5.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request>;

        if $r6 == null goto label1;

        $r7 = r5.<org.apache.zookeeper.server.quorum.Leader$Proposal: org.apache.zookeeper.server.Request request>;

        $l1 = $r7.<org.apache.zookeeper.server.Request: long zxid>;

        $l0 = r1.<org.apache.zookeeper.server.Request: long zxid>;

        $b2 = $l1 cmp $l0;

        if $b2 != 0 goto label1;

        $r8 = r0.<org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor: java.util.concurrent.ConcurrentLinkedQueue toBeApplied>;

        virtualinvoke $r8.<java.util.concurrent.ConcurrentLinkedQueue: java.lang.Object remove()>();

     label1:
        return;
    }

    public void shutdown()
    {
        org.slf4j.Logger $r0;
        org.apache.zookeeper.server.RequestProcessor $r2;
        org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor r1;

        r1 := @this: org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor;

        $r0 = staticinvoke <org.apache.zookeeper.server.quorum.Leader: org.slf4j.Logger access$100()>();

        interfaceinvoke $r0.<org.slf4j.Logger: void info(java.lang.String)>("Shutting down");

        $r2 = r1.<org.apache.zookeeper.server.quorum.Leader$ToBeAppliedRequestProcessor: org.apache.zookeeper.server.RequestProcessor next>;

        interfaceinvoke $r2.<org.apache.zookeeper.server.RequestProcessor: void shutdown()>();

        return;
    }
}
