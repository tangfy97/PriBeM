public class org.springframework.beans.propertyeditors.PropertiesEditor extends java.beans.PropertyEditorSupport
{

    public void <init>()
    {
        org.springframework.beans.propertyeditors.PropertiesEditor r0;

        r0 := @this: org.springframework.beans.propertyeditors.PropertiesEditor;

        specialinvoke r0.<java.beans.PropertyEditorSupport: void <init>()>();

        return;
    }

    public void setAsText(java.lang.String) throws java.lang.IllegalArgumentException
    {
        org.springframework.beans.propertyeditors.PropertiesEditor r2;
        byte[] $r4;
        java.util.Properties $r0;
        java.io.IOException $r5;
        java.lang.IllegalArgumentException $r6;
        java.io.ByteArrayInputStream $r3;
        java.lang.StringBuilder $r7, $r8, $r9;
        java.lang.String r1, $r10;

        r2 := @this: org.springframework.beans.propertyeditors.PropertiesEditor;

        r1 := @parameter0: java.lang.String;

        $r0 = new java.util.Properties;

        specialinvoke $r0.<java.util.Properties: void <init>()>();

        if r1 == null goto label4;

     label1:
        $r3 = new java.io.ByteArrayInputStream;

        $r4 = virtualinvoke r1.<java.lang.String: byte[] getBytes(java.lang.String)>("ISO-8859-1");

        specialinvoke $r3.<java.io.ByteArrayInputStream: void <init>(byte[])>($r4);

        virtualinvoke $r0.<java.util.Properties: void load(java.io.InputStream)>($r3);

     label2:
        goto label4;

     label3:
        $r5 := @caughtexception;

        $r6 = new java.lang.IllegalArgumentException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>(java.lang.String)>("Failed to parse [");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] into Properties");

        $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r5);

        throw $r6;

     label4:
        virtualinvoke r2.<org.springframework.beans.propertyeditors.PropertiesEditor: void setValue(java.lang.Object)>($r0);

        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public void setValue(java.lang.Object)
    {
        org.springframework.beans.propertyeditors.PropertiesEditor r1;
        java.util.Properties $r2;
        java.util.Map $r3;
        java.lang.Object r0;
        boolean $z0, $z1;

        r1 := @this: org.springframework.beans.propertyeditors.PropertiesEditor;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof java.util.Properties;

        if $z0 != 0 goto label1;

        $z1 = r0 instanceof java.util.Map;

        if $z1 == 0 goto label1;

        $r2 = new java.util.Properties;

        specialinvoke $r2.<java.util.Properties: void <init>()>();

        $r3 = (java.util.Map) r0;

        virtualinvoke $r2.<java.util.Properties: void putAll(java.util.Map)>($r3);

        specialinvoke r1.<java.beans.PropertyEditorSupport: void setValue(java.lang.Object)>($r2);

        goto label2;

     label1:
        specialinvoke r1.<java.beans.PropertyEditorSupport: void setValue(java.lang.Object)>(r0);

     label2:
        return;
    }
}
