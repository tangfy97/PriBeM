public abstract class org.tukaani.xz.check.Check extends java.lang.Object
{
    int size;
    java.lang.String name;

    public void <init>()
    {
        org.tukaani.xz.check.Check r0;

        r0 := @this: org.tukaani.xz.check.Check;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public abstract void update(byte[], int, int);

    public abstract byte[] finish();

    public void update(byte[])
    {
        int $i0;
        byte[] r1;
        org.tukaani.xz.check.Check r0;

        r0 := @this: org.tukaani.xz.check.Check;

        r1 := @parameter0: byte[];

        $i0 = lengthof r1;

        virtualinvoke r0.<org.tukaani.xz.check.Check: void update(byte[],int,int)>(r1, 0, $i0);

        return;
    }

    public int getSize()
    {
        int $i0;
        org.tukaani.xz.check.Check r0;

        r0 := @this: org.tukaani.xz.check.Check;

        $i0 = r0.<org.tukaani.xz.check.Check: int size>;

        return $i0;
    }

    public java.lang.String getName()
    {
        org.tukaani.xz.check.Check r0;
        java.lang.String $r1;

        r0 := @this: org.tukaani.xz.check.Check;

        $r1 = r0.<org.tukaani.xz.check.Check: java.lang.String name>;

        return $r1;
    }

    public static org.tukaani.xz.check.Check getInstance(int) throws org.tukaani.xz.UnsupportedOptionsException
    {
        org.tukaani.xz.check.CRC32 $r2;
        org.tukaani.xz.check.CRC64 $r1;
        org.tukaani.xz.UnsupportedOptionsException $r4;
        org.tukaani.xz.check.SHA256 $r0;
        java.lang.StringBuffer $r5, $r6, $r7;
        java.security.NoSuchAlgorithmException $r9;
        int i0;
        java.lang.String $r8;
        org.tukaani.xz.check.None $r3;

        i0 := @parameter0: int;

        lookupswitch(i0)
        {
            case 0: goto label1;
            case 1: goto label2;
            case 4: goto label3;
            case 10: goto label4;
            default: goto label7;
        };

     label1:
        $r3 = new org.tukaani.xz.check.None;

        specialinvoke $r3.<org.tukaani.xz.check.None: void <init>()>();

        return $r3;

     label2:
        $r2 = new org.tukaani.xz.check.CRC32;

        specialinvoke $r2.<org.tukaani.xz.check.CRC32: void <init>()>();

        return $r2;

     label3:
        $r1 = new org.tukaani.xz.check.CRC64;

        specialinvoke $r1.<org.tukaani.xz.check.CRC64: void <init>()>();

        return $r1;

     label4:
        $r0 = new org.tukaani.xz.check.SHA256;

        specialinvoke $r0.<org.tukaani.xz.check.SHA256: void <init>()>();

     label5:
        return $r0;

     label6:
        $r9 := @caughtexception;

     label7:
        $r4 = new org.tukaani.xz.UnsupportedOptionsException;

        $r5 = new java.lang.StringBuffer;

        specialinvoke $r5.<java.lang.StringBuffer: void <init>()>();

        $r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Unsupported Check ID ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r4.<org.tukaani.xz.UnsupportedOptionsException: void <init>(java.lang.String)>($r8);

        throw $r4;

        catch java.security.NoSuchAlgorithmException from label4 to label5 with label6;
    }
}
