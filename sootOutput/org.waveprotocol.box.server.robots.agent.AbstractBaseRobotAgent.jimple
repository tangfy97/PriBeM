public abstract class org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent extends com.google.wave.api.AbstractRobot
{
    public static final java.lang.String AGENT_PREFIX_URI;
    private static final java.util.logging.Logger LOG;
    private final java.lang.String waveDomain;
    private final org.waveprotocol.box.server.persistence.AccountStore accountStore;
    private final java.lang.Boolean isSSLEnabled;
    private final org.waveprotocol.box.server.robots.register.RobotRegistrar robotRegistrar;
    private final org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder frontendAddressHolder;

    public void <init>(com.google.inject.Injector)
    {
        com.google.inject.Key $r3, $r15;
        java.lang.Boolean $r17;
        java.lang.String $r5;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r0;
        org.waveprotocol.wave.model.id.TokenGenerator $r7;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder $r9;
        com.google.inject.Injector r1;
        com.google.inject.name.Named $r2, $r14;
        java.lang.Object $r4, $r6, $r8, $r10, $r12, $r16;
        org.waveprotocol.box.server.persistence.AccountStore $r11;
        org.waveprotocol.box.server.robots.register.RobotRegistrar $r13;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        r1 := @parameter0: com.google.inject.Injector;

        $r2 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("wave_server_domain");

        $r3 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(class "Ljava/lang/String;", $r2);

        $r4 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r3);

        $r5 = (java.lang.String) $r4;

        $r6 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/wave/model/id/TokenGenerator;");

        $r7 = (org.waveprotocol.wave.model.id.TokenGenerator) $r6;

        $r8 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/agent/AbstractBaseRobotAgent$ServerFrontendAddressHolder;");

        $r9 = (org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder) $r8;

        $r10 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/persistence/AccountStore;");

        $r11 = (org.waveprotocol.box.server.persistence.AccountStore) $r10;

        $r12 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(java.lang.Class)>(class "Lorg/waveprotocol/box/server/robots/register/RobotRegistrar;");

        $r13 = (org.waveprotocol.box.server.robots.register.RobotRegistrar) $r12;

        $r14 = staticinvoke <com.google.inject.name.Names: com.google.inject.name.Named named(java.lang.String)>("enable_ssl");

        $r15 = staticinvoke <com.google.inject.Key: com.google.inject.Key get(java.lang.Class,java.lang.'annotation'.Annotation)>(class "Ljava/lang/Boolean;", $r14);

        $r16 = interfaceinvoke r1.<com.google.inject.Injector: java.lang.Object getInstance(com.google.inject.Key)>($r15);

        $r17 = (java.lang.Boolean) $r16;

        specialinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: void <init>(java.lang.String,org.waveprotocol.wave.model.id.TokenGenerator,org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder,org.waveprotocol.box.server.persistence.AccountStore,org.waveprotocol.box.server.robots.register.RobotRegistrar,java.lang.Boolean)>($r5, $r7, $r9, $r11, $r13, $r17);

        return;
    }

    void <init>(java.lang.String, org.waveprotocol.wave.model.id.TokenGenerator, org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder, org.waveprotocol.box.server.persistence.AccountStore, org.waveprotocol.box.server.robots.register.RobotRegistrar, java.lang.Boolean)
    {
        org.waveprotocol.wave.model.id.TokenGenerator r6;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder r2;
        java.lang.Boolean r5;
        java.lang.String r1, $r7;
        org.waveprotocol.box.server.persistence.AccountStore r4;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r0;
        org.waveprotocol.box.server.robots.register.RobotRegistrar r3;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        r1 := @parameter0: java.lang.String;

        r6 := @parameter1: org.waveprotocol.wave.model.id.TokenGenerator;

        r2 := @parameter2: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder;

        r4 := @parameter3: org.waveprotocol.box.server.persistence.AccountStore;

        r3 := @parameter4: org.waveprotocol.box.server.robots.register.RobotRegistrar;

        r5 := @parameter5: java.lang.Boolean;

        specialinvoke r0.<com.google.wave.api.AbstractRobot: void <init>()>();

        r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String waveDomain> = r1;

        r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder frontendAddressHolder> = r2;

        r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: org.waveprotocol.box.server.robots.register.RobotRegistrar robotRegistrar> = r3;

        r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: org.waveprotocol.box.server.persistence.AccountStore accountStore> = r4;

        r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.Boolean isSSLEnabled> = r5;

        $r7 = virtualinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String getFrontEndAddress()>();

        specialinvoke r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: void ensureRegistered(org.waveprotocol.wave.model.id.TokenGenerator,java.lang.String)>(r6, $r7);

        return;
    }

    private void ensureRegistered(org.waveprotocol.wave.model.id.TokenGenerator, java.lang.String)
    {
        org.waveprotocol.wave.model.wave.ParticipantId $r8;
        java.util.logging.Logger $r18, $r26, $r34;
        java.lang.StringBuilder $r0, $r3, $r4, $r6, $r9, $r11, $r13, $r17, $r20, $r22, $r25, $r28, $r30, $r33, $r36, $r38;
        org.waveprotocol.wave.model.wave.InvalidParticipantAddress $r32;
        org.waveprotocol.box.server.persistence.PersistenceException $r16;
        java.util.logging.Level $r19, $r27, $r35;
        java.lang.String $r2, $r5, $r7, r10, $r12, $r14, $r21, $r23, $r29, $r31, $r37, $r39;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r1;
        org.waveprotocol.box.server.robots.util.RobotsUtil$RobotRegistrationException $r24;
        org.waveprotocol.wave.model.id.TokenGenerator r40;
        org.waveprotocol.box.server.robots.register.RobotRegistrar $r15;

        r1 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        r40 := @parameter0: org.waveprotocol.wave.model.id.TokenGenerator;

        r10 := @parameter1: java.lang.String;

     label1:
        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String getRobotId()>();

        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("@");

        $r5 = r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String waveDomain>;

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        $r8 = staticinvoke <org.waveprotocol.wave.model.wave.ParticipantId: org.waveprotocol.wave.model.wave.ParticipantId of(java.lang.String)>($r7);

     label2:
        goto label4;

     label3:
        $r32 := @caughtexception;

        $r34 = <org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.util.logging.Logger LOG>;

        $r35 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r33 = new java.lang.StringBuilder;

        specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();

        $r36 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register the agent:");

        $r37 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String getRobotId()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r34.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r35, $r39, $r32);

        return;

     label4:
        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);

        $r12 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String getRobotUri()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        $r15 = r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: org.waveprotocol.box.server.robots.register.RobotRegistrar robotRegistrar>;

        interfaceinvoke $r15.<org.waveprotocol.box.server.robots.register.RobotRegistrar: org.waveprotocol.box.server.account.RobotAccountData registerOrUpdate(org.waveprotocol.wave.model.wave.ParticipantId,java.lang.String)>($r8, $r14);

     label5:
        goto label8;

     label6:
        $r24 := @caughtexception;

        $r26 = <org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.util.logging.Logger LOG>;

        $r27 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register the agent:");

        $r29 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String getRobotId()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29);

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r27, $r31, $r24);

        goto label8;

     label7:
        $r16 := @caughtexception;

        $r18 = <org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.util.logging.Logger LOG>;

        $r19 = <java.util.logging.Level: java.util.logging.Level SEVERE>;

        $r17 = new java.lang.StringBuilder;

        specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to register the agent:");

        $r21 = virtualinvoke r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String getRobotId()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r18.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r19, $r23, $r16);

     label8:
        return;

        catch org.waveprotocol.wave.model.wave.InvalidParticipantAddress from label1 to label2 with label3;
        catch org.waveprotocol.box.server.robots.util.RobotsUtil$RobotRegistrationException from label4 to label5 with label6;
        catch org.waveprotocol.box.server.persistence.PersistenceException from label4 to label5 with label7;
    }

    protected java.lang.String getRobotProfilePageUrl()
    {
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        return null;
    }

    public java.lang.String getWaveDomain()
    {
        java.lang.String $r1;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        $r1 = r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String waveDomain>;

        return $r1;
    }

    public java.lang.String getFrontEndAddress()
    {
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder $r4;
        java.util.List $r5;
        java.lang.Boolean $r2;
        java.lang.StringBuilder $r0, $r3, $r8;
        java.lang.Object $r6;
        java.lang.String $r7, $r9, $r10;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r1;
        boolean $z0;

        r1 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r2 = r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.Boolean isSSLEnabled>;

        $z0 = virtualinvoke $r2.<java.lang.Boolean: boolean booleanValue()>();

        if $z0 == 0 goto label1;

        $r10 = "https://";

        goto label2;

     label1:
        $r10 = "http://";

     label2:
        $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);

        $r4 = r1.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder frontendAddressHolder>;

        $r5 = virtualinvoke $r4.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent$ServerFrontendAddressHolder: java.util.List getAddresses()>();

        $r6 = interfaceinvoke $r5.<java.util.List: java.lang.Object get(int)>(0);

        $r7 = (java.lang.String) $r6;

        $r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r9;
    }

    protected org.waveprotocol.box.server.persistence.AccountStore getAccountStore()
    {
        org.waveprotocol.box.server.persistence.AccountStore $r1;
        org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent r0;

        r0 := @this: org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent;

        $r1 = r0.<org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: org.waveprotocol.box.server.persistence.AccountStore accountStore>;

        return $r1;
    }

    public abstract java.lang.String getRobotUri();

    public abstract java.lang.String getRobotId();

    static void <clinit>()
    {
        java.lang.Class $r0;
        java.lang.String $r1;
        java.util.logging.Logger $r2;

        <org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.lang.String AGENT_PREFIX_URI> = "/agent";

        $r0 = class "Lorg/waveprotocol/box/server/robots/agent/AbstractBaseRobotAgent;";

        $r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>();

        $r2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>($r1);

        <org.waveprotocol.box.server.robots.agent.AbstractBaseRobotAgent: java.util.logging.Logger LOG> = $r2;

        return;
    }
}
