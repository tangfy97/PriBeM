public class ucar.nc2.dt.point.CFstationObsDataset extends ucar.nc2.dt.point.StationObsDatasetImpl implements ucar.nc2.dt.TypedDatasetFactoryIF
{
    private static org.slf4j.Logger log;
    private ucar.nc2.Variable latVar;
    private ucar.nc2.Variable lonVar;
    private ucar.nc2.Variable altVar;
    private ucar.nc2.Variable timeVar;
    private ucar.nc2.Variable lastVar;
    private ucar.nc2.Variable prevVar;
    private ucar.nc2.Variable firstVar;
    private ucar.nc2.Variable nextVar;
    private ucar.nc2.Variable numChildrenVar;
    private ucar.nc2.Variable stationIndexVar;
    private ucar.nc2.Variable stationIdVar;
    private ucar.nc2.Variable stationDescVar;
    private ucar.nc2.Variable numStationsVar;
    private boolean hasForwardLinkedList;
    private boolean hasBackwardLinkedList;
    private boolean hasContiguousList;
    private ucar.nc2.Structure recordVar;
    private ucar.nc2.dt.point.RecordDatasetHelper recordHelper;
    private boolean debugRead;
    private int firstRecord;

    public static boolean isValidFile(ucar.nc2.NetcdfFile)
    {
        java.util.StringTokenizer $r5;
        ucar.nc2.NetcdfFile r0;
        java.lang.String $r1, $r3, $r4, $r6, $r7;
        ucar.nc2.constants.FeatureType $r2;
        boolean $z0, $z1, $z2;

        r0 := @parameter0: ucar.nc2.NetcdfFile;

        $r1 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "cdm_datatype", "");

        $r2 = <ucar.nc2.constants.FeatureType: ucar.nc2.constants.FeatureType STATION>;

        $r3 = virtualinvoke $r2.<ucar.nc2.constants.FeatureType: java.lang.String toString()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r3);

        if $z0 != 0 goto label1;

        return 0;

     label1:
        $r4 = virtualinvoke r0.<ucar.nc2.NetcdfFile: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "Conventions", null);

        if $r4 != null goto label2;

        return 0;

     label2:
        $r5 = new java.util.StringTokenizer;

        specialinvoke $r5.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>($r4, ",");

     label3:
        $z1 = virtualinvoke $r5.<java.util.StringTokenizer: boolean hasMoreTokens()>();

        if $z1 == 0 goto label5;

        $r6 = virtualinvoke $r5.<java.util.StringTokenizer: java.lang.String nextToken()>();

        $r7 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $z2 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("CF-1.0");

        if $z2 == 0 goto label4;

        return 1;

     label4:
        goto label3;

     label5:
        return 0;
    }

    public boolean isMine(ucar.nc2.dataset.NetcdfDataset)
    {
        ucar.nc2.dt.point.CFstationObsDataset r1;
        ucar.nc2.dataset.NetcdfDataset r0;
        boolean $z0;

        r1 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r0 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        $z0 = staticinvoke <ucar.nc2.dt.point.CFstationObsDataset: boolean isValidFile(ucar.nc2.NetcdfFile)>(r0);

        return $z0;
    }

    public ucar.nc2.dt.TypedDataset open(ucar.nc2.dataset.NetcdfDataset, ucar.nc2.util.CancelTask, java.lang.StringBuilder) throws java.io.IOException
    {
        ucar.nc2.util.CancelTask r3;
        ucar.nc2.dt.point.CFstationObsDataset $r0, r2;
        java.lang.StringBuilder r4;
        ucar.nc2.dataset.NetcdfDataset r1;

        r2 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        r3 := @parameter1: ucar.nc2.util.CancelTask;

        r4 := @parameter2: java.lang.StringBuilder;

        $r0 = new ucar.nc2.dt.point.CFstationObsDataset;

        specialinvoke $r0.<ucar.nc2.dt.point.CFstationObsDataset: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>()>();

        r0.<ucar.nc2.dt.point.CFstationObsDataset: boolean debugRead> = 0;

        r0.<ucar.nc2.dt.point.CFstationObsDataset: int firstRecord> = 0;

        return;
    }

    public void <init>(ucar.nc2.dataset.NetcdfDataset) throws java.io.IOException
    {
        ucar.nc2.constants.AxisType $r2, $r4, $r6, $r8;
        ucar.nc2.dt.point.CFstationObsDataset r0;
        java.lang.StringBuffer $r24;
        java.lang.String $r23, $r28, $r32, $r34, $r41, $r42, $r44, $r46, $r61;
        ucar.nc2.units.DateUnit $r40;
        ucar.nc2.dataset.StructureDS $r38;
        ucar.nc2.dataset.NetcdfDataset r1;
        java.lang.IllegalStateException $r47, $r51, $r52, $r53, $r54;
        boolean $z0, $z1, $z2;
        java.util.List $r25;
        ucar.nc2.Variable $r3, $r5, $r7, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r22, $r26, $r29, $r30, $r31, $r33, $r35, $r36, $r43, $r45, $r48, $r49, $r50, $r55, $r56, $r57, $r58, $r59, $r60;
        ucar.nc2.dt.point.RecordDatasetHelper $r21, $r27, $r37, $r39;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r1 := @parameter0: ucar.nc2.dataset.NetcdfDataset;

        specialinvoke r0.<ucar.nc2.dt.point.StationObsDatasetImpl: void <init>(ucar.nc2.dataset.NetcdfDataset)>(r1);

        r0.<ucar.nc2.dt.point.CFstationObsDataset: boolean debugRead> = 0;

        r0.<ucar.nc2.dt.point.CFstationObsDataset: int firstRecord> = 0;

        $r2 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lat>;

        $r3 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r2);

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable latVar> = $r3;

        $r4 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Lon>;

        $r5 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r4);

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable lonVar> = $r5;

        $r6 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Height>;

        $r7 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r6);

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable altVar> = $r7;

        $r8 = <ucar.nc2.constants.AxisType: ucar.nc2.constants.AxisType Time>;

        $r9 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable getCoordinate(ucar.nc2.dataset.NetcdfDataset,ucar.nc2.constants.AxisType)>(r1, $r8);

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable timeVar> = $r9;

        $r10 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable latVar>;

        if $r10 != null goto label01;

        $r54 = new java.lang.IllegalStateException;

        specialinvoke $r54.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing latitude variable");

        throw $r54;

     label01:
        $r11 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable lonVar>;

        if $r11 != null goto label02;

        $r53 = new java.lang.IllegalStateException;

        specialinvoke $r53.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing longitude coordinate variable");

        throw $r53;

     label02:
        $r12 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable timeVar>;

        if $r12 != null goto label03;

        $r52 = new java.lang.IllegalStateException;

        specialinvoke $r52.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing time coordinate variable");

        throw $r52;

     label03:
        $r13 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "lastChild");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable lastVar> = $r13;

        $r14 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "prevChild");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable prevVar> = $r14;

        $r15 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "firstChild");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable firstVar> = $r15;

        $r16 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "nextChild");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable nextVar> = $r16;

        $r17 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "numChildren");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numChildrenVar> = $r17;

        $r18 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "parent_index");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIndexVar> = $r18;

        $r19 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIndexVar>;

        if $r19 != null goto label04;

        $r51 = new java.lang.IllegalStateException;

        specialinvoke $r51.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing parent_index variable");

        throw $r51;

     label04:
        $r20 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable firstVar>;

        if $r20 == null goto label05;

        $r50 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable nextVar>;

        if $r50 == null goto label05;

        $z0 = 1;

        goto label06;

     label05:
        $z0 = 0;

     label06:
        r0.<ucar.nc2.dt.point.CFstationObsDataset: boolean hasForwardLinkedList> = $z0;

        $r55 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable lastVar>;

        if $r55 == null goto label07;

        $r49 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable prevVar>;

        if $r49 == null goto label07;

        $z1 = 1;

        goto label08;

     label07:
        $z1 = 0;

     label08:
        r0.<ucar.nc2.dt.point.CFstationObsDataset: boolean hasBackwardLinkedList> = $z1;

        $r56 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable firstVar>;

        if $r56 == null goto label09;

        $r48 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numChildrenVar>;

        if $r48 == null goto label09;

        $z2 = 1;

        goto label10;

     label09:
        $z2 = 0;

     label10:
        r0.<ucar.nc2.dt.point.CFstationObsDataset: boolean hasContiguousList> = $z2;

        $r57 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station_id");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIdVar> = $r57;

        $r58 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "station_description");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationDescVar> = $r58;

        $r59 = staticinvoke <ucar.nc2.dt.point.UnidataObsDatasetHelper: ucar.nc2.Variable findVariable(ucar.nc2.NetcdfFile,java.lang.String)>(r1, "number_stations");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numStationsVar> = $r59;

        $r60 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIdVar>;

        if $r60 != null goto label11;

        $r47 = new java.lang.IllegalStateException;

        specialinvoke $r47.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Missing station id variable");

        throw $r47;

     label11:
        $r21 = new ucar.nc2.dt.point.RecordDatasetHelper;

        $r22 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable timeVar>;

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: java.lang.String getName()>();

        $r25 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.util.List dataVariables>;

        $r24 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.lang.StringBuffer parseInfo>;

        specialinvoke $r21.<ucar.nc2.dt.point.RecordDatasetHelper: void <init>(ucar.nc2.dataset.NetcdfDataset,java.lang.String,java.lang.String,java.util.List,java.lang.StringBuffer)>(r1, $r23, null, $r25, $r24);

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper> = $r21;

        $r27 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r26 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r28 = virtualinvoke $r26.<ucar.nc2.Variable: java.lang.String getName()>();

        $r29 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationDescVar>;

        if $r29 != null goto label12;

        $r61 = null;

        goto label13;

     label12:
        $r30 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationDescVar>;

        $r61 = virtualinvoke $r30.<ucar.nc2.Variable: java.lang.String getName()>();

     label13:
        virtualinvoke $r27.<ucar.nc2.dt.point.RecordDatasetHelper: void setStationInfo(java.lang.String,java.lang.String)>($r28, $r61);

        $r31 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r32 = virtualinvoke $r31.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: void removeDataVariable(java.lang.String)>($r32);

        $r33 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable timeVar>;

        $r34 = virtualinvoke $r33.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: void removeDataVariable(java.lang.String)>($r34);

        $r35 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable prevVar>;

        if $r35 == null goto label14;

        $r45 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable prevVar>;

        $r46 = virtualinvoke $r45.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: void removeDataVariable(java.lang.String)>($r46);

     label14:
        $r36 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable nextVar>;

        if $r36 == null goto label15;

        $r43 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable nextVar>;

        $r44 = virtualinvoke $r43.<ucar.nc2.Variable: java.lang.String getName()>();

        virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: void removeDataVariable(java.lang.String)>($r44);

     label15:
        $r37 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r38 = $r37.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Structure recordVar> = $r38;

        $r39 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r40 = $r39.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.units.DateUnit timeUnit>;

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.units.DateUnit timeUnit> = $r40;

        $r41 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "title", "");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: java.lang.String title> = $r41;

        $r42 = virtualinvoke r1.<ucar.nc2.dataset.NetcdfDataset: java.lang.String findAttValueIgnoreCase(ucar.nc2.Variable,java.lang.String,java.lang.String)>(null, "description", "");

        r0.<ucar.nc2.dt.point.CFstationObsDataset: java.lang.String desc> = $r42;

        specialinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: void readStationTable()>();

        return;
    }

    private void readStationTable() throws java.io.IOException
    {
        ucar.ma2.ArrayStructure r6;
        java.lang.Integer $r27;
        ucar.ma2.StructureData $r10;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl $r11;
        java.util.Map $r26;
        ucar.nc2.dt.point.CFstationObsDataset r0;
        java.util.List $r24;
        java.util.HashMap $r8;
        int $i0, i1, i2;
        ucar.nc2.Variable $r7, $r12, $r15, $r18, $r20, $r22, $r28;
        java.lang.String $r13, $r14, $r16, $r17, $r19, $r21, $r23;
        double $d0, $d1, $d2;
        ucar.nc2.StructurePseudo $r3;
        ucar.ma2.Array $r5;
        ucar.nc2.dt.point.RecordDatasetHelper $r9, $r25;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1, $r4;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("station");

        $r3 = new ucar.nc2.StructurePseudo;

        $r4 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        specialinvoke $r3.<ucar.nc2.StructurePseudo: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String,ucar.nc2.Dimension)>($r4, null, "stationTable", $r2);

        $r5 = virtualinvoke $r3.<ucar.nc2.StructurePseudo: ucar.ma2.Array read()>();

        r6 = (ucar.ma2.ArrayStructure) $r5;

        $r7 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numStationsVar>;

        if $r7 == null goto label1;

        $r28 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numStationsVar>;

        i1 = virtualinvoke $r28.<ucar.nc2.Variable: int readScalarInt()>();

        goto label2;

     label1:
        i1 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

     label2:
        $r9 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r8 = new java.util.HashMap;

        $i0 = 2 * i1;

        specialinvoke $r8.<java.util.HashMap: void <init>(int)>($i0);

        $r9.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash> = $r8;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        $r10 = virtualinvoke r6.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(i2);

        $r11 = new ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl;

        $r12 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIdVar>;

        $r13 = virtualinvoke $r12.<ucar.nc2.Variable: java.lang.String getName()>();

        $r14 = virtualinvoke $r10.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r13);

        $r15 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationDescVar>;

        $r16 = virtualinvoke $r15.<ucar.nc2.Variable: java.lang.String getName()>();

        $r17 = virtualinvoke $r10.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r16);

        $r18 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable latVar>;

        $r19 = virtualinvoke $r18.<ucar.nc2.Variable: java.lang.String getName()>();

        $d0 = virtualinvoke $r10.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r19);

        $r20 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable lonVar>;

        $r21 = virtualinvoke $r20.<ucar.nc2.Variable: java.lang.String getName()>();

        $d1 = virtualinvoke $r10.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r21);

        $r22 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable altVar>;

        $r23 = virtualinvoke $r22.<ucar.nc2.Variable: java.lang.String getName()>();

        $d2 = virtualinvoke $r10.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r23);

        specialinvoke $r11.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: void <init>(ucar.nc2.dt.point.CFstationObsDataset,java.lang.String,java.lang.String,double,double,double,ucar.nc2.dt.point.CFstationObsDataset$1)>(r0, $r14, $r17, $d0, $d1, $d2, null);

        $r24 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.util.List stations>;

        interfaceinvoke $r24.<java.util.List: boolean add(java.lang.Object)>($r11);

        $r25 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r26 = $r25.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        $r27 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, $r11);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    private void readStationIndex() throws java.io.IOException
    {
        ucar.ma2.ArrayStructure r7;
        java.lang.Integer $r28;
        ucar.ma2.StructureData $r11;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl $r12;
        java.util.Map $r27;
        ucar.nc2.dt.point.CFstationObsDataset r0;
        java.util.List $r25;
        java.util.HashMap $r9;
        int $i0, i1, i2;
        ucar.nc2.Variable $r1, $r8, $r13, $r16, $r19, $r21, $r23, $r29;
        java.lang.String $r14, $r15, $r17, $r18, $r20, $r22, $r24;
        double $d0, $d1, $d2;
        ucar.nc2.StructurePseudo $r4;
        ucar.ma2.Array $r6;
        ucar.nc2.dt.point.RecordDatasetHelper $r10, $r26;
        ucar.nc2.Dimension $r3;
        ucar.nc2.dataset.NetcdfDataset $r2, $r5;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIndexVar>;

        virtualinvoke $r1.<ucar.nc2.Variable: ucar.ma2.Array read()>();

        $r2 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r3 = virtualinvoke $r2.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension findDimension(java.lang.String)>("station");

        $r4 = new ucar.nc2.StructurePseudo;

        $r5 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        specialinvoke $r4.<ucar.nc2.StructurePseudo: void <init>(ucar.nc2.NetcdfFile,ucar.nc2.Group,java.lang.String,ucar.nc2.Dimension)>($r5, null, "stationTable", $r3);

        $r6 = virtualinvoke $r4.<ucar.nc2.StructurePseudo: ucar.ma2.Array read()>();

        r7 = (ucar.ma2.ArrayStructure) $r6;

        $r8 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numStationsVar>;

        if $r8 == null goto label1;

        $r29 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable numStationsVar>;

        i1 = virtualinvoke $r29.<ucar.nc2.Variable: int readScalarInt()>();

        goto label2;

     label1:
        i1 = virtualinvoke $r3.<ucar.nc2.Dimension: int getLength()>();

     label2:
        $r10 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r9 = new java.util.HashMap;

        $i0 = 2 * i1;

        specialinvoke $r9.<java.util.HashMap: void <init>(int)>($i0);

        $r10.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash> = $r9;

        i2 = 0;

     label3:
        if i2 >= i1 goto label4;

        $r11 = virtualinvoke r7.<ucar.ma2.ArrayStructure: ucar.ma2.StructureData getStructureData(int)>(i2);

        $r12 = new ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl;

        $r13 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIdVar>;

        $r14 = virtualinvoke $r13.<ucar.nc2.Variable: java.lang.String getName()>();

        $r15 = virtualinvoke $r11.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r14);

        $r16 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationDescVar>;

        $r17 = virtualinvoke $r16.<ucar.nc2.Variable: java.lang.String getName()>();

        $r18 = virtualinvoke $r11.<ucar.ma2.StructureData: java.lang.String getScalarString(java.lang.String)>($r17);

        $r19 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable latVar>;

        $r20 = virtualinvoke $r19.<ucar.nc2.Variable: java.lang.String getName()>();

        $d0 = virtualinvoke $r11.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r20);

        $r21 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable lonVar>;

        $r22 = virtualinvoke $r21.<ucar.nc2.Variable: java.lang.String getName()>();

        $d1 = virtualinvoke $r11.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r22);

        $r23 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable altVar>;

        $r24 = virtualinvoke $r23.<ucar.nc2.Variable: java.lang.String getName()>();

        $d2 = virtualinvoke $r11.<ucar.ma2.StructureData: double convertScalarDouble(java.lang.String)>($r24);

        specialinvoke $r12.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: void <init>(ucar.nc2.dt.point.CFstationObsDataset,java.lang.String,java.lang.String,double,double,double,ucar.nc2.dt.point.CFstationObsDataset$1)>(r0, $r15, $r18, $d0, $d1, $d2, null);

        $r25 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.util.List stations>;

        interfaceinvoke $r25.<java.util.List: boolean add(java.lang.Object)>($r12);

        $r26 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r27 = $r26.<ucar.nc2.dt.point.RecordDatasetHelper: java.util.Map stnHash>;

        $r28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i2);

        interfaceinvoke $r27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r28, $r12);

        i2 = i2 + 1;

        goto label3;

     label4:
        return;
    }

    protected void setTimeUnits()
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        return;
    }

    protected void setStartDate()
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        return;
    }

    protected void setEndDate()
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        return;
    }

    protected void setBoundingBox()
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;
        ucar.unidata.geoloc.LatLonRect $r2;
        ucar.nc2.dt.point.StationDatasetHelper $r1;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.StationDatasetHelper stationHelper>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.StationDatasetHelper: ucar.unidata.geoloc.LatLonRect getBoundingBox()>();

        r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.unidata.geoloc.LatLonRect boundingBox> = $r2;

        return;
    }

    public java.util.List getData(ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        ucar.nc2.dt.point.CFstationObsDataset r1;
        ucar.nc2.util.CancelTask r2;
        java.util.ArrayList $r0;

        r1 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r2 := @parameter0: ucar.nc2.util.CancelTask;

        $r0 = new java.util.ArrayList;

        specialinvoke $r0.<java.util.ArrayList: void <init>()>();

        virtualinvoke r1.<ucar.nc2.dt.point.CFstationObsDataset: int getDataCount()>();

        return $r0;
    }

    public int getDataCount()
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;
        int $i0;
        ucar.nc2.Dimension $r2;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        $r2 = virtualinvoke $r1.<ucar.nc2.dataset.NetcdfDataset: ucar.nc2.Dimension getUnlimitedDimension()>();

        $i0 = virtualinvoke $r2.<ucar.nc2.Dimension: int getLength()>();

        return $i0;
    }

    public java.util.List getData(ucar.unidata.geoloc.Station, ucar.nc2.util.CancelTask) throws java.io.IOException
    {
        java.util.List $r2;
        ucar.nc2.util.CancelTask r4;
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl $r1;
        ucar.nc2.dt.point.CFstationObsDataset r3;
        ucar.unidata.geoloc.Station r0;

        r3 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r4 := @parameter1: ucar.nc2.util.CancelTask;

        $r1 = (ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: java.util.List getObservations()>();

        return $r2;
    }

    protected ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs makeObs(int, boolean, ucar.ma2.StructureData) throws java.io.IOException
    {
        ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs $r14, $r16;
        ucar.ma2.StructureData r51;
        java.text.ParseException $r35;
        boolean z0;
        ucar.nc2.dt.point.CFstationObsDataset r0;
        java.util.List $r9, $r10;
        java.lang.StringBuilder $r3, $r5, $r6, $r7, $r18, $r20, $r21, $r22, $r26, $r28, $r29, $r30, $r31, $r32, $r33, $r36, $r38, $r39, $r44, $r46, $r47;
        ucar.unidata.geoloc.Station r12;
        ucar.nc2.Structure $r24;
        java.lang.StringBuffer $r4, $r19;
        int i0, $i1, $i2, $i3, $i4, $i5;
        ucar.nc2.Variable $r1, $r13;
        java.lang.String $r2, $r8, $r23, $r34, $r40, $r42, $r48, $r50;
        double $d0;
        org.slf4j.Logger $r27, $r37, $r45;
        java.io.IOException $r41, $r49;
        ucar.nc2.dt.point.RecordDatasetHelper $r15, $r17;
        ucar.ma2.InvalidRangeException $r43;
        java.lang.Object $r11;
        ucar.nc2.dataset.NetcdfDataset $r25;

        r0 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        i0 := @parameter0: int;

        z0 := @parameter1: boolean;

        r51 := @parameter2: ucar.ma2.StructureData;

     label01:
        $i1 = virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: int getDataCount()>();

        if i0 <= $i1 goto label02;

        $i4 = virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: int getDataCount()>();

        $r25 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        virtualinvoke $r25.<ucar.nc2.dataset.NetcdfDataset: boolean syncExtend()>();

        $r27 = <ucar.nc2.dt.point.CFstationObsDataset: org.slf4j.Logger log>;

        $r26 = new java.lang.StringBuilder;

        specialinvoke $r26.<java.lang.StringBuilder: void <init>()>();

        $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("UnidataStationObsDataset.makeObs recno=");

        $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" > ");

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4);

        $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; after sync= ");

        $i5 = virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: int getDataCount()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r27.<org.slf4j.Logger: void info(java.lang.String)>($r34);

     label02:
        if null != r51 goto label03;

        $r24 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Structure recordVar>;

        r51 = virtualinvoke $r24.<ucar.nc2.Structure: ucar.ma2.StructureData readStructure(int)>(i0);

     label03:
        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable stationIndexVar>;

        $r2 = virtualinvoke $r1.<ucar.nc2.Variable: java.lang.String getShortName()>();

        $i2 = virtualinvoke r51.<ucar.ma2.StructureData: int getScalarInt(java.lang.String)>($r2);

        if $i2 < 0 goto label04;

        $r9 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.util.List stations>;

        $i3 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i2 < $i3 goto label06;

     label04:
        $r4 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.lang.StringBuffer parseInfo>;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant find station at index = ");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8);

     label05:
        return null;

     label06:
        $r10 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.util.List stations>;

        $r11 = interfaceinvoke $r10.<java.util.List: java.lang.Object get(int)>($i2);

        r12 = (ucar.unidata.geoloc.Station) $r11;

        if r12 != null goto label08;

        $r19 = r0.<ucar.nc2.dt.point.CFstationObsDataset: java.lang.StringBuffer parseInfo>;

        $r18 = new java.lang.StringBuilder;

        specialinvoke $r18.<java.lang.StringBuilder: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("cant find station at index = ");

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2);

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r23);

     label07:
        return null;

     label08:
        $r13 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Variable timeVar>;

        $d0 = virtualinvoke r0.<ucar.nc2.dt.point.CFstationObsDataset: double getTime(ucar.nc2.Variable,ucar.ma2.StructureData)>($r13, r51);

        if z0 == 0 goto label10;

        $r16 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r17 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r17.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r16.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,ucar.ma2.StructureData)>($r17, r12, $d0, $d0, r51);

     label09:
        return $r16;

     label10:
        $r14 = new ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs;

        $r15 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        virtualinvoke $r15.<java.lang.Object: java.lang.Class getClass()>();

        specialinvoke $r14.<ucar.nc2.dt.point.RecordDatasetHelper$RecordStationObs: void <init>(ucar.nc2.dt.point.RecordDatasetHelper,ucar.unidata.geoloc.Station,double,double,int)>($r15, r12, $d0, $d0, i0);

     label11:
        return $r14;

     label12:
        $r43 := @caughtexception;

        $r45 = <ucar.nc2.dt.point.CFstationObsDataset: org.slf4j.Logger log>;

        $r44 = new java.lang.StringBuilder;

        specialinvoke $r44.<java.lang.StringBuilder: void <init>()>();

        $r46 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CFStationObsDataset.makeObs recno=");

        $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r45.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r48, $r43);

        $r49 = new java.io.IOException;

        $r50 = virtualinvoke $r43.<ucar.ma2.InvalidRangeException: java.lang.String getMessage()>();

        specialinvoke $r49.<java.io.IOException: void <init>(java.lang.String)>($r50);

        throw $r49;

     label13:
        $r35 := @caughtexception;

        $r37 = <ucar.nc2.dt.point.CFstationObsDataset: org.slf4j.Logger log>;

        $r36 = new java.lang.StringBuilder;

        specialinvoke $r36.<java.lang.StringBuilder: void <init>()>();

        $r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("CFStationObsDataset.makeObs recno=");

        $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r37.<org.slf4j.Logger: void error(java.lang.String,java.lang.Throwable)>($r40, $r35);

        $r41 = new java.io.IOException;

        $r42 = virtualinvoke $r35.<java.text.ParseException: java.lang.String getMessage()>();

        specialinvoke $r41.<java.io.IOException: void <init>(java.lang.String)>($r42);

        throw $r41;

        catch ucar.ma2.InvalidRangeException from label01 to label05 with label12;
        catch ucar.ma2.InvalidRangeException from label06 to label07 with label12;
        catch ucar.ma2.InvalidRangeException from label08 to label09 with label12;
        catch ucar.ma2.InvalidRangeException from label10 to label11 with label12;
        catch java.text.ParseException from label01 to label05 with label13;
        catch java.text.ParseException from label06 to label07 with label13;
        catch java.text.ParseException from label08 to label09 with label13;
        catch java.text.ParseException from label10 to label11 with label13;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station)
    {
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl $r1;
        ucar.nc2.dt.point.CFstationObsDataset r3;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.DataIterator $r2;

        r3 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        $r1 = (ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl) r0;

        $r2 = virtualinvoke $r1.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.DataIterator iterator()>();

        return $r2;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(ucar.unidata.geoloc.Station, java.util.Date, java.util.Date)
    {
        ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl $r3;
        java.util.Date r1, r2;
        ucar.nc2.dt.point.CFstationObsDataset r5;
        ucar.unidata.geoloc.Station r0;
        ucar.nc2.dt.DataIterator $r4;

        r5 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        r0 := @parameter0: ucar.unidata.geoloc.Station;

        r1 := @parameter1: java.util.Date;

        r2 := @parameter2: java.util.Date;

        $r3 = (ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl) r0;

        $r4 = virtualinvoke $r3.<ucar.nc2.dt.point.CFstationObsDataset$CFStationImpl: ucar.nc2.dt.DataIterator iterator(java.util.Date,java.util.Date)>(r1, r2);

        return $r4;
    }

    public ucar.nc2.dt.DataIterator getDataIterator(int) throws java.io.IOException
    {
        ucar.nc2.dataset.StructureDS $r3;
        ucar.nc2.dt.point.CFstationObsDataset r1;
        int i0;
        ucar.nc2.dt.point.RecordDatasetHelper $r2;
        ucar.nc2.dt.point.CFstationObsDataset$StationDatatypeIterator $r0;

        r1 := @this: ucar.nc2.dt.point.CFstationObsDataset;

        i0 := @parameter0: int;

        $r0 = new ucar.nc2.dt.point.CFstationObsDataset$StationDatatypeIterator;

        $r2 = r1.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dt.point.RecordDatasetHelper recordHelper>;

        $r3 = $r2.<ucar.nc2.dt.point.RecordDatasetHelper: ucar.nc2.dataset.StructureDS recordVar>;

        specialinvoke $r0.<ucar.nc2.dt.point.CFstationObsDataset$StationDatatypeIterator: void <init>(ucar.nc2.dt.point.CFstationObsDataset,ucar.nc2.Structure,int)>(r1, $r3, i0);

        return $r0;
    }

    static int access$100(ucar.nc2.dt.point.CFstationObsDataset)
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;
        int $i0;

        r0 := @parameter0: ucar.nc2.dt.point.CFstationObsDataset;

        $i0 = r0.<ucar.nc2.dt.point.CFstationObsDataset: int firstRecord>;

        return $i0;
    }

    static ucar.nc2.dataset.NetcdfDataset access$200(ucar.nc2.dt.point.CFstationObsDataset)
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;
        ucar.nc2.dataset.NetcdfDataset $r1;

        r0 := @parameter0: ucar.nc2.dt.point.CFstationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.dataset.NetcdfDataset ncfile>;

        return $r1;
    }

    static org.slf4j.Logger access$300()
    {
        org.slf4j.Logger $r0;

        $r0 = <ucar.nc2.dt.point.CFstationObsDataset: org.slf4j.Logger log>;

        return $r0;
    }

    static ucar.nc2.Structure access$400(ucar.nc2.dt.point.CFstationObsDataset)
    {
        ucar.nc2.dt.point.CFstationObsDataset r0;
        ucar.nc2.Structure $r1;

        r0 := @parameter0: ucar.nc2.dt.point.CFstationObsDataset;

        $r1 = r0.<ucar.nc2.dt.point.CFstationObsDataset: ucar.nc2.Structure recordVar>;

        return $r1;
    }

    static void <clinit>()
    {
        org.slf4j.Logger $r0;

        $r0 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.Class)>(class "Lucar/nc2/dt/point/UnidataStationObsDataset;");

        <ucar.nc2.dt.point.CFstationObsDataset: org.slf4j.Logger log> = $r0;

        return;
    }
}
