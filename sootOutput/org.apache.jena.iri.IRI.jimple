public abstract class org.apache.jena.iri.IRI extends org.apache.jena.iri.impl.AbsIRIFactoryImpl implements org.apache.jena.iri.IRIFactoryI, org.apache.jena.iri.IRIRelativize
{
    public static final int NO_PORT;
    public static final int ILLFORMED_PORT;

    public void <init>()
    {
        org.apache.jena.iri.IRI r0;

        r0 := @this: org.apache.jena.iri.IRI;

        specialinvoke r0.<org.apache.jena.iri.impl.AbsIRIFactoryImpl: void <init>()>();

        return;
    }

    public abstract java.util.Iterator violations(boolean);

    public abstract java.lang.String getRawAuthority();

    public abstract java.lang.String getAuthority();

    public abstract java.lang.String getRawFragment();

    public abstract java.lang.String getFragment();

    public abstract java.lang.String getRawHost();

    public abstract java.lang.String getHost();

    public abstract java.lang.String getASCIIHost() throws java.net.MalformedURLException;

    public abstract java.lang.String getRawPath();

    public abstract java.lang.String getPath();

    public abstract int getPort();

    public abstract java.lang.String getRawQuery();

    public abstract java.lang.String getQuery();

    public abstract java.lang.String getScheme();

    public abstract java.lang.String getRawUserinfo();

    public abstract java.lang.String getUserinfo();

    public abstract boolean hasViolation(boolean);

    public abstract boolean isAbsolute();

    public abstract boolean isRootless();

    public abstract boolean isRelative();

    public abstract org.apache.jena.iri.IRI relativize(org.apache.jena.iri.IRI, int);

    public abstract org.apache.jena.iri.IRI relativize(org.apache.jena.iri.IRI);

    public abstract org.apache.jena.iri.IRI relativize(java.lang.String);

    public abstract org.apache.jena.iri.IRI relativize(java.lang.String, int);

    public abstract java.lang.String toASCIIString() throws java.net.MalformedURLException;

    public abstract java.lang.String toString();

    public abstract java.lang.String toDisplayString();

    public abstract java.net.URL toURL() throws java.net.MalformedURLException;

    public final org.apache.jena.iri.IRI resolve(org.apache.jena.iri.IRI)
    {
        org.apache.jena.iri.IRI r0, r1, $r2;

        r0 := @this: org.apache.jena.iri.IRI;

        r1 := @parameter0: org.apache.jena.iri.IRI;

        $r2 = virtualinvoke r0.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>(r1);

        return $r2;
    }

    public final org.apache.jena.iri.IRI resolve(java.lang.String)
    {
        java.lang.String r1;
        org.apache.jena.iri.IRI r0, $r2;

        r0 := @this: org.apache.jena.iri.IRI;

        r1 := @parameter0: java.lang.String;

        $r2 = virtualinvoke r0.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(java.lang.String)>(r1);

        return $r2;
    }

    public abstract org.apache.jena.iri.IRI normalize(boolean);

    public abstract boolean ladderEquals(org.apache.jena.iri.IRI, int);

    public abstract int ladderEquals(org.apache.jena.iri.IRI);

    public static void main(java.lang.String[])
    {
        java.lang.String[] r1;
        org.apache.jena.iri.impl.Main $r0;

        r1 := @parameter0: java.lang.String[];

        $r0 = new org.apache.jena.iri.impl.Main;

        specialinvoke $r0.<org.apache.jena.iri.impl.Main: void <init>()>();

        virtualinvoke $r0.<org.apache.jena.iri.impl.Main: void main(java.lang.String[])>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.jena.iri.IRI: int ILLFORMED_PORT> = -2;

        <org.apache.jena.iri.IRI: int NO_PORT> = -1;

        return;
    }
}
