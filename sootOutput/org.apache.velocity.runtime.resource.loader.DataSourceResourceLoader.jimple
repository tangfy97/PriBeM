public class org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader extends org.apache.velocity.runtime.resource.loader.ResourceLoader
{
    private java.lang.String dataSourceName;
    private java.lang.String tableName;
    private java.lang.String keyColumn;
    private java.lang.String templateColumn;
    private java.lang.String timestampColumn;
    private javax.naming.InitialContext ctx;
    private javax.sql.DataSource dataSource;

    public void <init>()
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r0;

        r0 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        specialinvoke r0.<org.apache.velocity.runtime.resource.loader.ResourceLoader: void <init>()>();

        return;
    }

    public void init(org.apache.commons.collections.ExtendedProperties)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r0;
        java.lang.StringBuffer $r18, $r20, $r22, $r23, $r25, $r26, $r28, $r30, $r32, $r33, $r35, $r36, $r38, $r39, $r43, $r45, $r47, $r48, $r50, $r52, $r54, $r55, $r57, $r58, $r60, $r61;
        java.lang.String $r2, $r3, $r4, $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r13, $r21, $r24, $r27, $r31, $r34, $r37, $r40, $r46, $r49, $r53, $r56, $r59, $r62;
        java.lang.RuntimeException $r15;
        org.apache.commons.collections.ExtendedProperties r1;
        org.apache.velocity.runtime.log.Log $r14, $r16, $r17, $r19, $r29, $r41, $r42, $r44, $r51;
        boolean $z0, $z1;
        javax.sql.DataSource $r12;

        r0 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r1 := @parameter0: org.apache.commons.collections.ExtendedProperties;

        $r2 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("resource.datasource");

        $r3 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r2);

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String dataSourceName> = $r3;

        $r4 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("resource.table");

        $r5 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r4);

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String tableName> = $r5;

        $r6 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("resource.keycolumn");

        $r7 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r6);

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String keyColumn> = $r7;

        $r8 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("resource.templatecolumn");

        $r9 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r8);

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String templateColumn> = $r9;

        $r10 = virtualinvoke r1.<org.apache.commons.collections.ExtendedProperties: java.lang.String getString(java.lang.String)>("resource.timestampcolumn");

        $r11 = staticinvoke <org.apache.velocity.util.StringUtils: java.lang.String nullTrim(java.lang.String)>($r10);

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String timestampColumn> = $r11;

        $r12 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.sql.DataSource dataSource>;

        if $r12 == null goto label2;

        $r41 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z1 = virtualinvoke $r41.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z1 == 0 goto label1;

        $r44 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r43 = new java.lang.StringBuffer;

        specialinvoke $r43.<java.lang.StringBuffer: void <init>()>();

        $r45 = virtualinvoke $r43.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: using dataSource instance with table \"");

        $r46 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String tableName>;

        $r47 = virtualinvoke $r45.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r46);

        $r48 = virtualinvoke $r47.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r49 = virtualinvoke $r48.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r44.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r49);

        $r51 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r50 = new java.lang.StringBuffer;

        specialinvoke $r50.<java.lang.StringBuffer: void <init>()>();

        $r52 = virtualinvoke $r50.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: using columns \"");

        $r53 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String keyColumn>;

        $r54 = virtualinvoke $r52.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r53);

        $r55 = virtualinvoke $r54.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", \"");

        $r56 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String templateColumn>;

        $r57 = virtualinvoke $r55.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r56);

        $r58 = virtualinvoke $r57.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" and \"");

        $r59 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String timestampColumn>;

        $r60 = virtualinvoke $r58.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r59);

        $r61 = virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r62 = virtualinvoke $r61.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r51.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r62);

     label1:
        $r42 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r42.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("DataSourceResourceLoader initialized.");

        goto label5;

     label2:
        $r13 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String dataSourceName>;

        if $r13 == null goto label4;

        $r16 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $z0 = virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label3;

        $r19 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r18 = new java.lang.StringBuffer;

        specialinvoke $r18.<java.lang.StringBuffer: void <init>()>();

        $r20 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: using \"");

        $r21 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String dataSourceName>;

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" datasource with table \"");

        $r24 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String tableName>;

        $r25 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r24);

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r19.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r27);

        $r29 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r30 = virtualinvoke $r28.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: using columns \"");

        $r31 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String keyColumn>;

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\", \"");

        $r34 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String templateColumn>;

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\" and \"");

        $r37 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String timestampColumn>;

        $r38 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r37);

        $r39 = virtualinvoke $r38.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\"");

        $r40 = virtualinvoke $r39.<java.lang.StringBuffer: java.lang.String toString()>();

        virtualinvoke $r29.<org.apache.velocity.runtime.log.Log: void debug(java.lang.Object)>($r40);

     label3:
        $r17 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r17.<org.apache.velocity.runtime.log.Log: void trace(java.lang.Object)>("DataSourceResourceLoader initialized.");

        goto label5;

     label4:
        $r14 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r14.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("DataSourceResourceLoader not properly initialized. No DataSource was identified.");

        $r15 = new java.lang.RuntimeException;

        specialinvoke $r15.<java.lang.RuntimeException: void <init>(java.lang.String)>("DataSourceResourceLoader not properly initialized. No DataSource was identified.");

        throw $r15;

     label5:
        return;
    }

    public void setDataSource(javax.sql.DataSource)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r0;
        javax.sql.DataSource r1;

        r0 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r1 := @parameter0: javax.sql.DataSource;

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.sql.DataSource dataSource> = r1;

        return;
    }

    public boolean isSourceModified(org.apache.velocity.runtime.resource.Resource)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r1;
        byte $b2;
        long $l0, $l1;
        org.apache.velocity.runtime.resource.Resource r0;
        boolean $z0;

        r1 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        $l0 = virtualinvoke r0.<org.apache.velocity.runtime.resource.Resource: long getLastModified()>();

        $l1 = specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: long readLastModified(org.apache.velocity.runtime.resource.Resource,java.lang.String)>(r0, "checking timestamp");

        $b2 = $l0 cmp $l1;

        if $b2 == 0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public long getLastModified(org.apache.velocity.runtime.resource.Resource)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r0;
        long $l0;
        org.apache.velocity.runtime.resource.Resource r1;

        r0 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r1 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        $l0 = specialinvoke r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: long readLastModified(org.apache.velocity.runtime.resource.Resource,java.lang.String)>(r1, "getting timestamp");

        return $l0;
    }

    public synchronized java.io.InputStream getResourceStream(java.lang.String) throws org.apache.velocity.exception.ResourceNotFoundException
    {
        java.sql.Connection $r2, r39;
        java.io.BufferedInputStream $r14;
        javax.naming.NamingException $r23;
        java.sql.ResultSet $r5, r40;
        boolean $z0, $z1;
        java.sql.PreparedStatement $r4, r41;
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r1;
        java.lang.Throwable $r22;
        java.sql.SQLException $r31;
        java.lang.StringBuffer $r7, $r8, $r9, $r10, $r16, $r17, $r18, $r19, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r35;
        java.lang.String r0, $r3, $r11, $r12, $r20, $r28, $r36;
        org.apache.velocity.runtime.log.Log $r29, $r37;
        org.apache.velocity.exception.ResourceNotFoundException $r6, $r15, $r21, $r30, $r38;
        java.io.InputStream $r13;

        r1 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: java.lang.String;

        $z0 = staticinvoke <org.apache.commons.lang.StringUtils: boolean isEmpty(java.lang.String)>(r0);

        if $z0 == 0 goto label1;

        $r21 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r21.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>("DataSourceResourceLoader: Template name was empty or null");

        throw $r21;

     label1:
        r39 = null;

        r40 = null;

        r41 = null;

     label2:
        $r2 = specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.sql.Connection openDbConnection()>();

        r39 = $r2;

        $r3 = r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String templateColumn>;

        $r4 = specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.sql.PreparedStatement getStatement(java.sql.Connection,java.lang.String,java.lang.String)>($r2, $r3, r0);

        r41 = $r4;

        $r5 = interfaceinvoke $r4.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

        r40 = $r5;

        $z1 = interfaceinvoke $r5.<java.sql.ResultSet: boolean next()>();

        if $z1 == 0 goto label5;

        $r12 = r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String templateColumn>;

        $r13 = interfaceinvoke $r5.<java.sql.ResultSet: java.io.InputStream getBinaryStream(java.lang.String)>($r12);

        if $r13 != null goto label3;

        $r15 = new org.apache.velocity.exception.ResourceNotFoundException;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: template column for \'");

        $r18 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' is null");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r15.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r20);

        throw $r15;

     label3:
        $r14 = new java.io.BufferedInputStream;

        specialinvoke $r14.<java.io.BufferedInputStream: void <init>(java.io.InputStream)>($r13);

     label4:
        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeResultSet(java.sql.ResultSet)>($r5);

        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeStatement(java.sql.PreparedStatement)>($r4);

        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeDbConnection(java.sql.Connection)>($r2);

        return $r14;

     label5:
        $r6 = new org.apache.velocity.exception.ResourceNotFoundException;

        $r7 = new java.lang.StringBuffer;

        specialinvoke $r7.<java.lang.StringBuffer: void <init>()>();

        $r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: could not find resource \'");

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\'");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r6.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r11);

        throw $r6;

     label6:
        $r31 := @caughtexception;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: database problem while getting resource \'");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r37.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r36, $r31);

        $r38 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r38.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r36);

        throw $r38;

     label7:
        $r23 := @caughtexception;

        $r24 = new java.lang.StringBuffer;

        specialinvoke $r24.<java.lang.StringBuffer: void <init>()>();

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: database problem while getting resource \'");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r0);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r29 = r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r29.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r28, $r23);

        $r30 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r30.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r28);

        throw $r30;

     label8:
        $r22 := @caughtexception;

     label9:
        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeResultSet(java.sql.ResultSet)>(r40);

        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeStatement(java.sql.PreparedStatement)>(r41);

        specialinvoke r1.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeDbConnection(java.sql.Connection)>(r39);

        throw $r22;

        catch java.sql.SQLException from label2 to label4 with label6;
        catch java.sql.SQLException from label5 to label6 with label6;
        catch javax.naming.NamingException from label2 to label4 with label7;
        catch javax.naming.NamingException from label5 to label6 with label7;
        catch java.lang.Throwable from label2 to label4 with label8;
        catch java.lang.Throwable from label5 to label9 with label8;
    }

    private long readLastModified(org.apache.velocity.runtime.resource.Resource, java.lang.String)
    {
        java.sql.Connection $r5, r41;
        javax.naming.NamingException $r21;
        org.apache.velocity.runtime.resource.Resource r0;
        java.lang.NullPointerException $r4;
        java.sql.ResultSet $r8, r42;
        boolean $z0;
        java.sql.Timestamp $r19;
        java.sql.PreparedStatement $r7, r43;
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r2;
        java.lang.Throwable $r20;
        long $l1;
        java.sql.SQLException $r31;
        java.lang.StringBuffer $r9, $r10, $r11, $r12, $r14, $r22, $r23, $r24, $r25, $r26, $r27, $r32, $r33, $r34, $r35, $r36, $r37;
        int $i0;
        java.lang.String $r1, $r6, r13, $r15, $r18, $r28, $r38;
        java.lang.RuntimeException $r30, $r40;
        org.apache.velocity.runtime.log.Log $r3, $r16, $r29, $r39;
        org.apache.velocity.exception.ResourceNotFoundException $r17;

        r2 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: org.apache.velocity.runtime.resource.Resource;

        r13 := @parameter1: java.lang.String;

        $r1 = virtualinvoke r0.<org.apache.velocity.runtime.resource.Resource: java.lang.String getName()>();

        if $r1 == null goto label01;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label02;

     label01:
        $r3 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r3.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>("DataSourceResourceLoader: Template name was empty or null");

        $r4 = new java.lang.NullPointerException;

        specialinvoke $r4.<java.lang.NullPointerException: void <init>(java.lang.String)>("DataSourceResourceLoader: Template name was empty or null");

        throw $r4;

     label02:
        r41 = null;

        r42 = null;

        r43 = null;

     label03:
        $r5 = specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.sql.Connection openDbConnection()>();

        r41 = $r5;

        $r6 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String timestampColumn>;

        $r7 = specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.sql.PreparedStatement getStatement(java.sql.Connection,java.lang.String,java.lang.String)>($r5, $r6, $r1);

        r43 = $r7;

        $r8 = interfaceinvoke $r7.<java.sql.PreparedStatement: java.sql.ResultSet executeQuery()>();

        r42 = $r8;

        $z0 = interfaceinvoke $r8.<java.sql.ResultSet: boolean next()>();

        if $z0 == 0 goto label06;

        $r18 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String timestampColumn>;

        $r19 = interfaceinvoke $r8.<java.sql.ResultSet: java.sql.Timestamp getTimestamp(java.lang.String)>($r18);

        if $r19 == null goto label04;

        $l1 = virtualinvoke $r19.<java.sql.Timestamp: long getTime()>();

        goto label05;

     label04:
        $l1 = 0L;

     label05:
        goto label07;

     label06:
        $r9 = new java.lang.StringBuffer;

        specialinvoke $r9.<java.lang.StringBuffer: void <init>()>();

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: could not find resource ");

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" while ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r15 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.String toString()>();

        $r16 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r16.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object)>($r15);

        $r17 = new org.apache.velocity.exception.ResourceNotFoundException;

        specialinvoke $r17.<org.apache.velocity.exception.ResourceNotFoundException: void <init>(java.lang.String)>($r15);

        throw $r17;

     label07:
        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeResultSet(java.sql.ResultSet)>($r8);

        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeStatement(java.sql.PreparedStatement)>($r7);

        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeDbConnection(java.sql.Connection)>($r5);

        goto label12;

     label08:
        $r31 := @caughtexception;

        $r32 = new java.lang.StringBuffer;

        specialinvoke $r32.<java.lang.StringBuffer: void <init>()>();

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: database problem while ");

        $r34 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r35 = virtualinvoke $r34.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of \'");

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r37 = virtualinvoke $r36.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r38 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>();

        $r39 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r39.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r38, $r31);

        $r40 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.RuntimeException createRuntimeException(java.lang.String,java.lang.Throwable)>($r38, $r31);

        throw $r40;

     label09:
        $r21 := @caughtexception;

        $r22 = new java.lang.StringBuffer;

        specialinvoke $r22.<java.lang.StringBuffer: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("DataSourceResourceLoader: database problem while ");

        $r24 = virtualinvoke $r23.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r13);

        $r25 = virtualinvoke $r24.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" of \'");

        $r26 = virtualinvoke $r25.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r1);

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\': ");

        $r28 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.String toString()>();

        $r29 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r29.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r28, $r21);

        $r30 = staticinvoke <org.apache.velocity.util.ExceptionUtils: java.lang.RuntimeException createRuntimeException(java.lang.String,java.lang.Throwable)>($r28, $r21);

        throw $r30;

     label10:
        $r20 := @caughtexception;

     label11:
        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeResultSet(java.sql.ResultSet)>(r42);

        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeStatement(java.sql.PreparedStatement)>(r43);

        specialinvoke r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: void closeDbConnection(java.sql.Connection)>(r41);

        throw $r20;

     label12:
        return $l1;

        catch java.sql.SQLException from label03 to label07 with label08;
        catch javax.naming.NamingException from label03 to label07 with label09;
        catch java.lang.Throwable from label03 to label07 with label10;
        catch java.lang.Throwable from label08 to label11 with label10;
    }

    private java.sql.Connection openDbConnection() throws javax.naming.NamingException, java.sql.SQLException
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r0;
        javax.naming.InitialContext $r2, $r4, $r9;
        java.sql.Connection $r8, $r11;
        javax.sql.DataSource $r1, $r6, $r7, $r10;
        java.lang.Object $r5;
        java.lang.String $r3;

        r0 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        $r1 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.sql.DataSource dataSource>;

        if $r1 == null goto label1;

        $r10 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.sql.DataSource dataSource>;

        $r11 = interfaceinvoke $r10.<javax.sql.DataSource: java.sql.Connection getConnection()>();

        return $r11;

     label1:
        $r2 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.naming.InitialContext ctx>;

        if $r2 != null goto label2;

        $r9 = new javax.naming.InitialContext;

        specialinvoke $r9.<javax.naming.InitialContext: void <init>()>();

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.naming.InitialContext ctx> = $r9;

     label2:
        $r4 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.naming.InitialContext ctx>;

        $r3 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String dataSourceName>;

        $r5 = virtualinvoke $r4.<javax.naming.InitialContext: java.lang.Object lookup(java.lang.String)>($r3);

        $r6 = (javax.sql.DataSource) $r5;

        r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.sql.DataSource dataSource> = $r6;

        $r7 = r0.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: javax.sql.DataSource dataSource>;

        $r8 = interfaceinvoke $r7.<javax.sql.DataSource: java.sql.Connection getConnection()>();

        return $r8;
    }

    private void closeDbConnection(java.sql.Connection)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r2;
        org.apache.velocity.runtime.log.Log $r3;
        java.sql.Connection r0;
        java.lang.RuntimeException $r5;
        org.apache.velocity.exception.VelocityException $r4;
        java.lang.Exception $r1;

        r2 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: java.sql.Connection;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.sql.Connection: void close()>();

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r1 := @caughtexception;

        $r3 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r3.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("DataSourceResourceLoader: problem when closing connection", $r1);

        $r4 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r4.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>("DataSourceResourceLoader: problem when closing connection", $r1);

        throw $r4;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void closeResultSet(java.sql.ResultSet)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r2;
        org.apache.velocity.runtime.log.Log $r3;
        java.sql.ResultSet r0;
        java.lang.RuntimeException $r5;
        org.apache.velocity.exception.VelocityException $r4;
        java.lang.Exception $r1;

        r2 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: java.sql.ResultSet;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.sql.ResultSet: void close()>();

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r1 := @caughtexception;

        $r3 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r3.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("DataSourceResourceLoader: problem when closing result set", $r1);

        $r4 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r4.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>("DataSourceResourceLoader: problem when closing result set", $r1);

        throw $r4;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private void closeStatement(java.sql.PreparedStatement)
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r2;
        org.apache.velocity.runtime.log.Log $r3;
        java.lang.RuntimeException $r5;
        java.sql.PreparedStatement r0;
        org.apache.velocity.exception.VelocityException $r4;
        java.lang.Exception $r1;

        r2 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: java.sql.PreparedStatement;

        if r0 == null goto label5;

     label1:
        interfaceinvoke r0.<java.sql.PreparedStatement: void close()>();

     label2:
        goto label5;

     label3:
        $r5 := @caughtexception;

        throw $r5;

     label4:
        $r1 := @caughtexception;

        $r3 = r2.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r3.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>("DataSourceResourceLoader: problem when closing PreparedStatement ", $r1);

        $r4 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r4.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>("DataSourceResourceLoader: problem when closing PreparedStatement ", $r1);

        throw $r4;

     label5:
        return;

        catch java.lang.RuntimeException from label1 to label2 with label3;
        catch java.lang.Exception from label1 to label2 with label4;
    }

    private java.sql.PreparedStatement getStatement(java.sql.Connection, java.lang.String, java.lang.String) throws java.sql.SQLException
    {
        org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader r6;
        java.sql.Connection r0;
        java.lang.StringBuffer $r1, $r2, $r4, $r5, $r8, $r9, $r11, $r12;
        java.lang.String r3, $r7, $r10, $r13, r15;
        java.sql.PreparedStatement $r14;

        r6 := @this: org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader;

        r0 := @parameter0: java.sql.Connection;

        r3 := @parameter1: java.lang.String;

        r15 := @parameter2: java.lang.String;

        $r1 = new java.lang.StringBuffer;

        specialinvoke $r1.<java.lang.StringBuffer: void <init>()>();

        $r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("SELECT ");

        $r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3);

        $r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" FROM ");

        $r7 = r6.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String tableName>;

        $r8 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r7);

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" WHERE ");

        $r10 = r6.<org.apache.velocity.runtime.resource.loader.DataSourceResourceLoader: java.lang.String keyColumn>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" = ?");

        $r13 = virtualinvoke $r12.<java.lang.StringBuffer: java.lang.String toString()>();

        $r14 = interfaceinvoke r0.<java.sql.Connection: java.sql.PreparedStatement prepareStatement(java.lang.String)>($r13);

        interfaceinvoke $r14.<java.sql.PreparedStatement: void setString(int,java.lang.String)>(1, r15);

        return $r14;
    }
}
