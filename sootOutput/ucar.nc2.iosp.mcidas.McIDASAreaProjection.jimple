public class ucar.nc2.iosp.mcidas.McIDASAreaProjection extends ucar.unidata.geoloc.ProjectionImpl
{
    public static java.lang.String ATTR_AREADIR;
    public static java.lang.String ATTR_NAVBLOCK;
    public static java.lang.String ATTR_AUXBLOCK;
    public static java.lang.String GRID_MAPPING_NAME;
    private edu.wisc.ssec.mcidas.AREAnav anav;
    private int lines;
    private int elements;
    private int[] dirBlock;
    private int[] navBlock;
    private int[] auxBlock;

    public ucar.unidata.geoloc.ProjectionImpl constructCopy()
    {
        int[] $r2, $r3, $r4;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection $r0, r1;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r0 = new ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r4 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] dirBlock>;

        $r3 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] navBlock>;

        $r2 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] auxBlock>;

        specialinvoke $r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void <init>(int[],int[],int[])>($r4, $r3, $r2);

        return $r0;
    }

    public void <init>()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav> = null;

        return;
    }

    public void <init>(edu.wisc.ssec.mcidas.AreaFile)
    {
        int[] $r2, $r3, $r4;
        edu.wisc.ssec.mcidas.AreaFile r1;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r1 := @parameter0: edu.wisc.ssec.mcidas.AreaFile;

        $r2 = virtualinvoke r1.<edu.wisc.ssec.mcidas.AreaFile: int[] getDir()>();

        $r3 = virtualinvoke r1.<edu.wisc.ssec.mcidas.AreaFile: int[] getNav()>();

        $r4 = virtualinvoke r1.<edu.wisc.ssec.mcidas.AreaFile: int[] getAux()>();

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void <init>(int[],int[],int[])>($r2, $r3, $r4);

        return;
    }

    public void <init>(int[], int[])
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;
        int[] r1, r2;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r1 := @parameter0: int[];

        r2 := @parameter1: int[];

        specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void <init>(int[],int[],int[])>(r1, r2, null);

        return;
    }

    public void <init>(int[], int[], int[])
    {
        int[] r1, r2, r4;
        edu.wisc.ssec.mcidas.AREAnav $r3, $r5, $r6, $r7, $r8, $r9;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;
        java.lang.StringBuilder $r22, $r23, $r24;
        java.lang.Throwable $r20;
        double[] $r13, $r16, $r19;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        java.lang.String $r10, $r12, $r15, $r18, $r25;
        java.lang.IllegalArgumentException $r21;
        ucar.unidata.util.Parameter $r11, $r14, $r17;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r4 := @parameter0: int[];

        r1 := @parameter1: int[];

        r2 := @parameter2: int[];

        specialinvoke r0.<ucar.unidata.geoloc.ProjectionImpl: void <init>()>();

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav> = null;

     label1:
        $r3 = staticinvoke <edu.wisc.ssec.mcidas.AREAnav: edu.wisc.ssec.mcidas.AREAnav makeAreaNav(int[],int[])>(r1, r2);

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav> = $r3;

     label2:
        goto label4;

     label3:
        $r20 := @caughtexception;

        $r21 = new java.lang.IllegalArgumentException;

        $r22 = new java.lang.StringBuilder;

        specialinvoke $r22.<java.lang.StringBuilder: void <init>()>();

        $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("McIDASAreaProjection: problem creating projection");

        $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);

        $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r25);

        throw $r21;

     label4:
        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] dirBlock> = r4;

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] navBlock> = r1;

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] auxBlock> = r2;

        $r5 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $i1 = r4[5];

        $i0 = r4[6];

        virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: void setImageStart(int,int)>($i1, $i0);

        $r6 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $i3 = r4[11];

        $i2 = r4[12];

        virtualinvoke $r6.<edu.wisc.ssec.mcidas.AREAnav: void setRes(int,int)>($i3, $i2);

        $r7 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        virtualinvoke $r7.<edu.wisc.ssec.mcidas.AREAnav: void setStart(int,int)>(0, 0);

        $r8 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        virtualinvoke $r8.<edu.wisc.ssec.mcidas.AREAnav: void setMag(int,int)>(1, 1);

        $i4 = r4[8];

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int lines> = $i4;

        $i5 = r4[9];

        r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int elements> = $i5;

        $r9 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $i6 = r4[8];

        virtualinvoke $r9.<edu.wisc.ssec.mcidas.AREAnav: void setFlipLineCoordinates(int)>($i6);

        $r10 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String GRID_MAPPING_NAME>;

        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void addParameter(java.lang.String,java.lang.String)>("grid_mapping_name", $r10);

        $r11 = new ucar.unidata.util.Parameter;

        $r12 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AREADIR>;

        $r13 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: double[] makeDoubleArray(int[])>(r4);

        specialinvoke $r11.<ucar.unidata.util.Parameter: void <init>(java.lang.String,double[])>($r12, $r13);

        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void addParameter(ucar.unidata.util.Parameter)>($r11);

        $r14 = new ucar.unidata.util.Parameter;

        $r15 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_NAVBLOCK>;

        $r16 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: double[] makeDoubleArray(int[])>(r1);

        specialinvoke $r14.<ucar.unidata.util.Parameter: void <init>(java.lang.String,double[])>($r15, $r16);

        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void addParameter(ucar.unidata.util.Parameter)>($r14);

        if r2 == null goto label5;

        $r17 = new ucar.unidata.util.Parameter;

        $r18 = <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AUXBLOCK>;

        $r19 = specialinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: double[] makeDoubleArray(int[])>(r2);

        specialinvoke $r17.<ucar.unidata.util.Parameter: void <init>(java.lang.String,double[])>($r18, $r19);

        virtualinvoke r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void addParameter(ucar.unidata.util.Parameter)>($r17);

     label5:
        return;

        catch edu.wisc.ssec.mcidas.McIDASException from label1 to label2 with label3;
    }

    public int[] getDirBlock()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;
        int[] $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] dirBlock>;

        return $r1;
    }

    public int[] getNavBlock()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;
        int[] $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] navBlock>;

        return $r1;
    }

    public int[] getAuxBlock()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r0;
        int[] $r1;

        r0 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r1 = r0.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int[] auxBlock>;

        return $r1;
    }

    public ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint, ucar.unidata.geoloc.ProjectionPointImpl)
    {
        double[] $r3, $r4, $r7, $r8;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r1;
        ucar.unidata.geoloc.LatLonPoint r0;
        edu.wisc.ssec.mcidas.AREAnav $r5;
        ucar.unidata.geoloc.ProjectionPointImpl r9;
        double[][] $r2, $r6;
        double $d0, $d1, d2, d3;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: ucar.unidata.geoloc.LatLonPoint;

        r9 := @parameter1: ucar.unidata.geoloc.ProjectionPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLatitude()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.LatLonPoint: double getLongitude()>();

        $r5 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r2 = newarray (double[])[2];

        $r3 = newarray (double)[1];

        $r3[0] = $d0;

        $r2[0] = $r3;

        $r4 = newarray (double)[1];

        $r4[0] = $d1;

        $r2[1] = $r4;

        $r6 = virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: double[][] toLinEle(double[][])>($r2);

        $r7 = $r6[0];

        d2 = $r7[0];

        $r8 = $r6[1];

        d3 = $r8[0];

        virtualinvoke r9.<ucar.unidata.geoloc.ProjectionPointImpl: void setLocation(double,double)>(d2, d3);

        return r9;
    }

    public ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.LatLonPointImpl)
    {
        double[] $r3, $r4, $r7, $r8;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r1;
        edu.wisc.ssec.mcidas.AREAnav $r5;
        ucar.unidata.geoloc.LatLonPointImpl r9;
        double[][] $r2, $r6;
        ucar.unidata.geoloc.ProjectionPoint r0;
        double $d0, $d1, d2, d3;

        r1 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r9 := @parameter1: ucar.unidata.geoloc.LatLonPointImpl;

        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $r5 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r2 = newarray (double[])[2];

        $r3 = newarray (double)[1];

        $r3[0] = $d0;

        $r2[0] = $r3;

        $r4 = newarray (double)[1];

        $r4[0] = $d1;

        $r2[1] = $r4;

        $r6 = virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: double[][] toLatLon(double[][])>($r2);

        $r7 = $r6[0];

        d2 = $r7[0];

        $r8 = $r6[1];

        d3 = $r8[0];

        virtualinvoke r9.<ucar.unidata.geoloc.LatLonPointImpl: void setLatitude(double)>(d2);

        virtualinvoke r9.<ucar.unidata.geoloc.LatLonPointImpl: void setLongitude(double)>(d3);

        return r9;
    }

    public float[][] latLonToProj(float[][], float[][], int, int)
    {
        float[][] r0, $r4, $r6, r7;
        float[] r1, r2, $r8, $r9;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r3;
        edu.wisc.ssec.mcidas.AREAnav $r5;
        int i0, i1;

        r3 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: float[][];

        r7 := @parameter1: float[][];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 = r0[i0];

        r2 = r0[i1];

        $r5 = r3.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r4 = newarray (float[])[2];

        $r4[0] = r1;

        $r4[1] = r2;

        $r6 = virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: float[][] toLinEle(float[][])>($r4);

        $r8 = $r6[0];

        r7[0] = $r8;

        $r9 = $r6[1];

        r7[1] = $r9;

        return r7;
    }

    public float[][] projToLatLon(float[][], float[][])
    {
        float[][] r0, $r4, $r6, r7;
        float[] r1, r2, $r8, $r9;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r3;
        edu.wisc.ssec.mcidas.AREAnav $r5;

        r3 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: float[][];

        r7 := @parameter1: float[][];

        r1 = r0[0];

        r2 = r0[1];

        $r5 = r3.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r4 = newarray (float[])[2];

        $r4[0] = r1;

        $r4[1] = r2;

        $r6 = virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: float[][] toLatLon(float[][])>($r4);

        $r8 = $r6[0];

        r7[0] = $r8;

        $r9 = $r6[1];

        r7[1] = $r9;

        return r7;
    }

    public double[][] latLonToProj(double[][], double[][], int, int)
    {
        double[] r1, r2, $r8, $r9;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r3;
        edu.wisc.ssec.mcidas.AREAnav $r5;
        int i0, i1;
        double[][] r0, $r4, $r6, r7;

        r3 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: double[][];

        r7 := @parameter1: double[][];

        i0 := @parameter2: int;

        i1 := @parameter3: int;

        r1 = r0[i0];

        r2 = r0[i1];

        $r5 = r3.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r4 = newarray (double[])[2];

        $r4[0] = r1;

        $r4[1] = r2;

        $r6 = virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: double[][] toLinEle(double[][])>($r4);

        $r8 = $r6[0];

        r7[0] = $r8;

        $r9 = $r6[1];

        r7[1] = $r9;

        return r7;
    }

    public double[][] projToLatLon(double[][], double[][])
    {
        double[] r1, r2, $r8, $r9;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r3;
        edu.wisc.ssec.mcidas.AREAnav $r5;
        double[][] r0, $r4, $r6, r7;

        r3 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: double[][];

        r7 := @parameter1: double[][];

        r1 = r0[0];

        r2 = r0[1];

        $r5 = r3.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r4 = newarray (double[])[2];

        $r4[0] = r1;

        $r4[1] = r2;

        $r6 = virtualinvoke $r5.<edu.wisc.ssec.mcidas.AREAnav: double[][] toLatLon(double[][])>($r4);

        $r8 = $r6[0];

        r7[0] = $r8;

        $r9 = $r6[1];

        r7[1] = $r9;

        return r7;
    }

    public ucar.unidata.geoloc.ProjectionRect getDefaultMapArea()
    {
        ucar.unidata.geoloc.ProjectionRect $r0;
        int $i0, $i1;
        float $f0, $f1;
        java.awt.geom.Rectangle2D$Float $r1;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r2;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r0 = new ucar.unidata.geoloc.ProjectionRect;

        $r1 = new java.awt.geom.Rectangle2D$Float;

        $i0 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int elements>;

        $f1 = (float) $i0;

        $i1 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int lines>;

        $f0 = (float) $i1;

        specialinvoke $r1.<java.awt.geom.Rectangle2D$Float: void <init>(float,float,float,float)>(0.0F, 0.0F, $f1, $f0);

        specialinvoke $r0.<ucar.unidata.geoloc.ProjectionRect: void <init>(java.awt.geom.Rectangle2D)>($r1);

        return $r0;
    }

    public boolean crossSeam(ucar.unidata.geoloc.ProjectionPoint, ucar.unidata.geoloc.ProjectionPoint)
    {
        byte $b0, $b1;
        int $i2, $i3;
        ucar.unidata.geoloc.ProjectionPoint r0, r1;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r2;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: ucar.unidata.geoloc.ProjectionPoint;

        r1 := @parameter1: ucar.unidata.geoloc.ProjectionPoint;

        $z0 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r0);

        if $z0 != 0 goto label1;

        $z1 = staticinvoke <ucar.unidata.geoloc.ProjectionPointImpl: boolean isInfinite(ucar.unidata.geoloc.ProjectionPoint)>(r1);

        if $z1 == 0 goto label2;

     label1:
        return 1;

     label2:
        $d0 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $z2 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z2 != 0 goto label3;

        $d1 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $z3 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d1);

        if $z3 != 0 goto label3;

        $d2 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $z4 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d2);

        if $z4 != 0 goto label3;

        $d3 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getY()>();

        $z5 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d3);

        if $z5 == 0 goto label4;

     label3:
        return 1;

     label4:
        $d4 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d5 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d6 = $d4 * $d5;

        $b0 = $d6 cmpg 0.0;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label5;

        $d7 = interfaceinvoke r0.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d8 = interfaceinvoke r1.<ucar.unidata.geoloc.ProjectionPoint: double getX()>();

        $d9 = $d7 - $d8;

        $d10 = staticinvoke <java.lang.Math: double abs(double)>($d9);

        $b1 = $d10 cmpl 5000.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label5;

        $z6 = 1;

        goto label6;

     label5:
        $z6 = 0;

     label6:
        return $z6;
    }

    public boolean equals(java.lang.Object)
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r1, r2;
        edu.wisc.ssec.mcidas.AREAnav $r3, $r4;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r0;
        boolean $z0, $z1, $z2;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: java.lang.Object;

        $z0 = r0 instanceof ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        if $z0 != 0 goto label1;

        return 0;

     label1:
        r1 = (ucar.nc2.iosp.mcidas.McIDASAreaProjection) r0;

        if r2 == r1 goto label2;

        $r4 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r3 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $z1 = virtualinvoke $r4.<edu.wisc.ssec.mcidas.AREAnav: boolean equals(java.lang.Object)>($r3);

        if $z1 == 0 goto label3;

        $i1 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int lines>;

        $i0 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int lines>;

        if $i1 != $i0 goto label3;

        $i3 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int elements>;

        $i2 = r1.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: int elements>;

        if $i3 != $i2 goto label3;

     label2:
        $z2 = 1;

        goto label4;

     label3:
        $z2 = 0;

     label4:
        return $z2;
    }

    public java.lang.String toString()
    {
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r2;
        edu.wisc.ssec.mcidas.AREAnav $r3;
        java.lang.StringBuilder $r0, $r1, $r5, $r6;
        java.lang.String $r4, $r7;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Image (");

        $r3 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r4 = virtualinvoke $r3.<edu.wisc.ssec.mcidas.AREAnav: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") Projection");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r7;
    }

    public java.lang.String paramsToString()
    {
        edu.wisc.ssec.mcidas.AREAnav $r3;
        java.lang.StringBuilder $r0, $r1, $r5;
        java.lang.String $r4, $r6;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r2;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        $r0 = new java.lang.StringBuilder;

        specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" nav ");

        $r3 = r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: edu.wisc.ssec.mcidas.AREAnav anav>;

        $r4 = virtualinvoke $r3.<edu.wisc.ssec.mcidas.AREAnav: java.lang.String toString()>();

        $r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r6;
    }

    public static void main(java.lang.String[]) throws java.lang.Exception
    {
        edu.wisc.ssec.mcidas.AreaFile $r1;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection $r2;
        java.lang.StringBuilder $r4, $r6, $r7, $r10, $r12, $r13, $r16, $r18, $r19, $r25, $r27, $r29, $r30, $r32, $r35, $r37, $r39, $r40, $r42;
        double[][] $r21, $r24, $r34;
        double[] $r22, $r23, $r28, $r31, $r38, $r41;
        java.lang.String[] r0;
        int $i0;
        java.lang.String $r8, $r14, $r20, $r33, $r43, $r44;
        ucar.unidata.geoloc.ProjectionPoint $r9;
        double $d0, $d1, $d2, $d3;
        java.io.PrintStream $r5, $r11, $r17, $r26, $r36;
        ucar.unidata.geoloc.LatLonPoint $r15;
        ucar.unidata.geoloc.LatLonPointImpl $r3;

        r0 := @parameter0: java.lang.String[];

        $i0 = lengthof r0;

        if $i0 <= 0 goto label1;

        $r44 = r0[0];

        goto label2;

     label1:
        $r44 = "c:/data/satellite/AREA8760";

     label2:
        $r1 = new edu.wisc.ssec.mcidas.AreaFile;

        specialinvoke $r1.<edu.wisc.ssec.mcidas.AreaFile: void <init>(java.lang.String)>($r44);

        $r2 = new ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        specialinvoke $r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: void <init>(edu.wisc.ssec.mcidas.AreaFile)>($r1);

        $r3 = new ucar.unidata.geoloc.LatLonPointImpl;

        specialinvoke $r3.<ucar.unidata.geoloc.LatLonPointImpl: void <init>(double,double)>(45.0, -105.0);

        $r5 = <java.lang.System: java.io.PrintStream out>;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("lat/lon = ");

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r8);

        $r9 = virtualinvoke $r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: ucar.unidata.geoloc.ProjectionPoint latLonToProj(ucar.unidata.geoloc.LatLonPoint)>($r3);

        $r11 = <java.lang.System: java.io.PrintStream out>;

        $r10 = new java.lang.StringBuilder;

        specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();

        $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proj point = ");

        $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);

        $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r11.<java.io.PrintStream: void println(java.lang.String)>($r14);

        $r15 = virtualinvoke $r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: ucar.unidata.geoloc.LatLonPoint projToLatLon(ucar.unidata.geoloc.ProjectionPoint)>($r9);

        $r17 = <java.lang.System: java.io.PrintStream out>;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("reverse llp = ");

        $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15);

        $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r17.<java.io.PrintStream: void println(java.lang.String)>($r20);

        $r21 = newarray (double[])[2];

        $r22 = newarray (double)[1];

        $r22[0] = 45.0;

        $r21[0] = $r22;

        $r23 = newarray (double)[1];

        $r23[0] = -105.0;

        $r21[1] = $r23;

        $r24 = virtualinvoke $r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: double[][] latLonToProj(double[][])>($r21);

        $r26 = <java.lang.System: java.io.PrintStream out>;

        $r25 = new java.lang.StringBuilder;

        specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();

        $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proj point = ");

        $r28 = $r24[0];

        $d0 = $r28[0];

        $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);

        $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r31 = $r24[1];

        $d1 = $r31[0];

        $r32 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);

        $r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r33);

        $r34 = virtualinvoke $r2.<ucar.nc2.iosp.mcidas.McIDASAreaProjection: double[][] projToLatLon(double[][])>($r24);

        $r36 = <java.lang.System: java.io.PrintStream out>;

        $r35 = new java.lang.StringBuilder;

        specialinvoke $r35.<java.lang.StringBuilder: void <init>()>();

        $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("proj point = ");

        $r38 = $r34[0];

        $d2 = $r38[0];

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);

        $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");

        $r41 = $r34[1];

        $d3 = $r41[0];

        $r42 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);

        $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r43);

        return;
    }

    private double[] makeDoubleArray(int[])
    {
        double[] r1;
        ucar.nc2.iosp.mcidas.McIDASAreaProjection r2;
        int[] r0;
        int $i0, $i1, $i2, i3;
        double $d0;

        r2 := @this: ucar.nc2.iosp.mcidas.McIDASAreaProjection;

        r0 := @parameter0: int[];

        $i0 = lengthof r0;

        r1 = newarray (double)[$i0];

        i3 = 0;

     label1:
        $i1 = lengthof r0;

        if i3 >= $i1 goto label2;

        $i2 = r0[i3];

        $d0 = (double) $i2;

        r1[i3] = $d0;

        i3 = i3 + 1;

        goto label1;

     label2:
        return r1;
    }

    static void <clinit>()
    {
        <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AREADIR> = "AreaDirectory";

        <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_NAVBLOCK> = "NavBlock";

        <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String ATTR_AUXBLOCK> = "AuxBlock";

        <ucar.nc2.iosp.mcidas.McIDASAreaProjection: java.lang.String GRID_MAPPING_NAME> = "mcidas_area";

        return;
    }
}
