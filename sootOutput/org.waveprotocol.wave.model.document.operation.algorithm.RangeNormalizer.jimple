public final class org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer extends java.lang.Object implements org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor
{
    private final org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache emptyCache;
    private final org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache skipCache;
    private final org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache charactersCache;
    private final org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache deleteCharactersCache;
    private final org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target;
    private org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache;

    public void <init>(org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$4 $r4;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r5;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor r6;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$1 $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$2 $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$3 $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r6 := @parameter0: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$1;

        specialinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$1: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>(r0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache emptyCache> = $r1;

        $r2 = new org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$2;

        specialinvoke $r2.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$2: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>(r0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache skipCache> = $r2;

        $r3 = new org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$3;

        specialinvoke $r3.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$3: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>(r0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache charactersCache> = $r3;

        $r4 = new org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$4;

        specialinvoke $r4.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$4: void <init>(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)>(r0);

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache deleteCharactersCache> = $r4;

        $r5 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache emptyCache>;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache> = $r5;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target> = r6;

        return;
    }

    public java.lang.Object finish()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;
        java.lang.Object $r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: java.lang.Object finish()>();

        return $r3;
    }

    public void retain(int)
    {
        int i0;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        i0 := @parameter0: int;

        if i0 <= 0 goto label1;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void skip(int)>(i0);

     label1:
        return;
    }

    public void characters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void characters(java.lang.String)>(r0);

     label1:
        return;
    }

    public void elementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r4;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.Attributes r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void elementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }

    public void elementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void elementEnd()>();

        return;
    }

    public void deleteCharacters(java.lang.String)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r2;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r1;
        java.lang.String r0;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r0 := @parameter0: java.lang.String;

        $z0 = virtualinvoke r0.<java.lang.String: boolean isEmpty()>();

        if $z0 != 0 goto label1;

        $r2 = r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r2.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void deleteCharacters(java.lang.String)>(r0);

     label1:
        return;
    }

    public void deleteElementStart(java.lang.String, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r4;
        java.lang.String r2;
        org.waveprotocol.wave.model.document.operation.Attributes r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r2 := @parameter0: java.lang.String;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementStart(java.lang.String,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }

    public void deleteElementEnd()
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r2 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r2.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void deleteElementEnd()>();

        return;
    }

    public void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes, org.waveprotocol.wave.model.document.operation.Attributes)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r4;
        org.waveprotocol.wave.model.document.operation.Attributes r2, r3;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.Attributes;

        r3 := @parameter1: org.waveprotocol.wave.model.document.operation.Attributes;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r4 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r4.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void replaceAttributes(org.waveprotocol.wave.model.document.operation.Attributes,org.waveprotocol.wave.model.document.operation.Attributes)>(r2, r3);

        return;
    }

    public void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.AttributesUpdate r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AttributesUpdate;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void updateAttributes(org.waveprotocol.wave.model.document.operation.AttributesUpdate)>(r2);

        return;
    }

    public void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r3;
        org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap r2;

        r0 := @this: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r2 := @parameter0: org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        virtualinvoke $r1.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache: void flush()>();

        $r3 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        interfaceinvoke $r3.<org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor: void annotationBoundary(org.waveprotocol.wave.model.document.operation.AnnotationBoundaryMap)>(r2);

        return;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$002(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer, org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        r1 := @parameter1: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache;

        r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache> = r1;

        return r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$100(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache skipCache>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$000(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache cache>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$200(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache charactersCache>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$300(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache deleteCharactersCache>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor access$500(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;
        org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor $r1;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.EvaluatingDocOpCursor target>;

        return $r1;
    }

    static org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache access$600(org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer)
    {
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache $r1;
        org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer r0;

        r0 := @parameter0: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer;

        $r1 = r0.<org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer: org.waveprotocol.wave.model.document.operation.algorithm.RangeNormalizer$Cache emptyCache>;

        return $r1;
    }
}
