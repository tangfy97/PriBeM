public class org.dom4j.io.SAXValidator extends java.lang.Object
{
    private org.xml.sax.XMLReader xmlReader;
    private org.xml.sax.ErrorHandler errorHandler;

    public void <init>()
    {
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(org.xml.sax.XMLReader)
    {
        org.xml.sax.XMLReader r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        r1 := @parameter0: org.xml.sax.XMLReader;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader> = r1;

        return;
    }

    public void validate(org.dom4j.Document) throws org.xml.sax.SAXException
    {
        org.dom4j.Document r0;
        java.io.IOException $r6;
        java.lang.RuntimeException $r7;
        org.xml.sax.XMLReader $r2;
        org.xml.sax.ErrorHandler $r3, $r5;
        java.lang.StringBuffer $r8, $r9, $r10;
        org.dom4j.io.DocumentInputSource $r4;
        java.lang.String $r11;
        org.dom4j.io.SAXValidator r1;

        r1 := @this: org.dom4j.io.SAXValidator;

        r0 := @parameter0: org.dom4j.Document;

        if r0 == null goto label4;

        $r2 = virtualinvoke r1.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader getXMLReader()>();

        $r3 = r1.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler>;

        if $r3 == null goto label1;

        $r5 = r1.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler>;

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void setErrorHandler(org.xml.sax.ErrorHandler)>($r5);

     label1:
        $r4 = new org.dom4j.io.DocumentInputSource;

        specialinvoke $r4.<org.dom4j.io.DocumentInputSource: void <init>(org.dom4j.Document)>(r0);

        interfaceinvoke $r2.<org.xml.sax.XMLReader: void parse(org.xml.sax.InputSource)>($r4);

     label2:
        goto label4;

     label3:
        $r6 := @caughtexception;

        $r7 = new java.lang.RuntimeException;

        $r8 = new java.lang.StringBuffer;

        specialinvoke $r8.<java.lang.StringBuffer: void <init>()>();

        $r9 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Caught and exception that should never happen: ");

        $r10 = virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r6);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.String toString()>();

        specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r11);

        throw $r7;

     label4:
        return;

        catch java.io.IOException from label1 to label2 with label3;
    }

    public org.xml.sax.XMLReader getXMLReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r1, $r2, $r3;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader createXMLReader()>();

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader> = $r3;

        virtualinvoke r0.<org.dom4j.io.SAXValidator: void configureReader()>();

     label1:
        $r2 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        return $r2;
    }

    public void setXMLReader(org.xml.sax.XMLReader) throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        r1 := @parameter0: org.xml.sax.XMLReader;

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader> = r1;

        virtualinvoke r0.<org.dom4j.io.SAXValidator: void configureReader()>();

        return;
    }

    public org.xml.sax.ErrorHandler getErrorHandler()
    {
        org.xml.sax.ErrorHandler $r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler>;

        return $r1;
    }

    public void setErrorHandler(org.xml.sax.ErrorHandler)
    {
        org.xml.sax.ErrorHandler r1;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        r1 := @parameter0: org.xml.sax.ErrorHandler;

        r0.<org.dom4j.io.SAXValidator: org.xml.sax.ErrorHandler errorHandler> = r1;

        return;
    }

    protected org.xml.sax.XMLReader createXMLReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.XMLReader $r0;
        org.dom4j.io.SAXValidator r1;

        r1 := @this: org.dom4j.io.SAXValidator;

        $r0 = staticinvoke <org.dom4j.io.SAXHelper: org.xml.sax.XMLReader createXMLReader(boolean)>(1);

        return $r0;
    }

    protected void configureReader() throws org.xml.sax.SAXException
    {
        org.xml.sax.helpers.DefaultHandler $r6;
        org.xml.sax.XMLReader $r1, $r3, $r4, $r5, $r7;
        org.xml.sax.ContentHandler $r2;
        org.dom4j.io.SAXValidator r0;

        r0 := @this: org.dom4j.io.SAXValidator;

        $r1 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        $r2 = interfaceinvoke $r1.<org.xml.sax.XMLReader: org.xml.sax.ContentHandler getContentHandler()>();

        if $r2 != null goto label1;

        $r7 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        $r6 = new org.xml.sax.helpers.DefaultHandler;

        specialinvoke $r6.<org.xml.sax.helpers.DefaultHandler: void <init>()>();

        interfaceinvoke $r7.<org.xml.sax.XMLReader: void setContentHandler(org.xml.sax.ContentHandler)>($r6);

     label1:
        $r3 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r3.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/validation", 1);

        $r4 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r4.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespaces", 1);

        $r5 = r0.<org.dom4j.io.SAXValidator: org.xml.sax.XMLReader xmlReader>;

        interfaceinvoke $r5.<org.xml.sax.XMLReader: void setFeature(java.lang.String,boolean)>("http://xml.org/sax/features/namespace-prefixes", 0);

        return;
    }
}
