class org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator extends org.apache.log4j.pattern.NameAbbreviator
{
    private final org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments;

    public void <init>(java.util.List)
    {
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator r0;
        java.util.List r1;
        int $i0, $i1;
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] $r2, $r3;
        java.lang.IllegalArgumentException $r4;

        r0 := @this: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator;

        r1 := @parameter0: java.util.List;

        specialinvoke r0.<org.apache.log4j.pattern.NameAbbreviator: void <init>()>();

        $i0 = interfaceinvoke r1.<java.util.List: int size()>();

        if $i0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("fragments must have at least one element");

        throw $r4;

     label1:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        $r2 = newarray (org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment)[$i1];

        r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments> = $r2;

        $r3 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        interfaceinvoke r1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>($r3);

        return;
    }

    public void abbreviate(int, java.lang.StringBuffer)
    {
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] $r1, $r2, $r3, $r6;
        java.lang.StringBuffer r4;
        int i0, $i1, $i2, $i3, $i4, $i5, i6, i7, $i8;
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator r0;
        org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment $r5, $r7;

        r0 := @this: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator;

        i0 := @parameter0: int;

        r4 := @parameter1: java.lang.StringBuffer;

        i6 = i0;

        i7 = 0;

     label1:
        $r1 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $i1 = lengthof $r1;

        $i2 = $i1 - 1;

        if i7 >= $i2 goto label2;

        $i5 = virtualinvoke r4.<java.lang.StringBuffer: int length()>();

        if i6 >= $i5 goto label2;

        $r6 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $r7 = $r6[i7];

        i6 = virtualinvoke $r7.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment: int abbreviate(java.lang.StringBuffer,int)>(r4, i6);

        i7 = i7 + 1;

        goto label1;

     label2:
        $r3 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $r2 = r0.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviator: org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment[] fragments>;

        $i3 = lengthof $r2;

        $i4 = $i3 - 1;

        $r5 = $r3[$i4];

     label3:
        $i8 = virtualinvoke r4.<java.lang.StringBuffer: int length()>();

        if i6 >= $i8 goto label4;

        if i6 < 0 goto label4;

        i6 = virtualinvoke $r5.<org.apache.log4j.pattern.NameAbbreviator$PatternAbbreviatorFragment: int abbreviate(java.lang.StringBuffer,int)>(r4, i6);

        goto label3;

     label4:
        return;
    }
}
