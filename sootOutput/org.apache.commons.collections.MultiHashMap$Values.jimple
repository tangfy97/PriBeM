class org.apache.commons.collections.MultiHashMap$Values extends java.util.AbstractCollection
{
    private final org.apache.commons.collections.MultiHashMap this$0;

    private void <init>(org.apache.commons.collections.MultiHashMap)
    {
        org.apache.commons.collections.MultiHashMap$Values r0;
        org.apache.commons.collections.MultiHashMap r1;

        r0 := @this: org.apache.commons.collections.MultiHashMap$Values;

        r1 := @parameter0: org.apache.commons.collections.MultiHashMap;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        r0.<org.apache.commons.collections.MultiHashMap$Values: org.apache.commons.collections.MultiHashMap this$0> = r1;

        return;
    }

    public java.util.Iterator iterator()
    {
        org.apache.commons.collections.MultiHashMap$ValueIterator $r0;
        org.apache.commons.collections.MultiHashMap$Values r1;
        org.apache.commons.collections.MultiHashMap $r2;

        r1 := @this: org.apache.commons.collections.MultiHashMap$Values;

        $r0 = new org.apache.commons.collections.MultiHashMap$ValueIterator;

        $r2 = r1.<org.apache.commons.collections.MultiHashMap$Values: org.apache.commons.collections.MultiHashMap this$0>;

        specialinvoke $r0.<org.apache.commons.collections.MultiHashMap$ValueIterator: void <init>(org.apache.commons.collections.MultiHashMap,org.apache.commons.collections.MultiHashMap$1)>($r2, null);

        return $r0;
    }

    public int size()
    {
        org.apache.commons.collections.MultiHashMap$Values r0;
        java.util.Iterator $r1;
        int i0;
        boolean $z0;

        r0 := @this: org.apache.commons.collections.MultiHashMap$Values;

        i0 = 0;

        $r1 = virtualinvoke r0.<org.apache.commons.collections.MultiHashMap$Values: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        i0 = i0 + 1;

        goto label1;

     label2:
        return i0;
    }

    public void clear()
    {
        org.apache.commons.collections.MultiHashMap$Values r0;
        org.apache.commons.collections.MultiHashMap $r1;

        r0 := @this: org.apache.commons.collections.MultiHashMap$Values;

        $r1 = r0.<org.apache.commons.collections.MultiHashMap$Values: org.apache.commons.collections.MultiHashMap this$0>;

        virtualinvoke $r1.<org.apache.commons.collections.MultiHashMap: void clear()>();

        return;
    }

    void <init>(org.apache.commons.collections.MultiHashMap, org.apache.commons.collections.MultiHashMap$1)
    {
        org.apache.commons.collections.MultiHashMap$1 r2;
        org.apache.commons.collections.MultiHashMap$Values r0;
        org.apache.commons.collections.MultiHashMap r1;

        r0 := @this: org.apache.commons.collections.MultiHashMap$Values;

        r1 := @parameter0: org.apache.commons.collections.MultiHashMap;

        r2 := @parameter1: org.apache.commons.collections.MultiHashMap$1;

        specialinvoke r0.<org.apache.commons.collections.MultiHashMap$Values: void <init>(org.apache.commons.collections.MultiHashMap)>(r1);

        return;
    }
}
