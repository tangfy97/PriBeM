public final class org.apache.xerces.util.NamespaceSupport$Prefixes extends java.lang.Object implements java.util.Enumeration
{
    private java.lang.String[] prefixes;
    private int counter;
    private int size;
    private final org.apache.xerces.util.NamespaceSupport this$0;

    public void <init>(org.apache.xerces.util.NamespaceSupport, java.lang.String[], int)
    {
        org.apache.xerces.util.NamespaceSupport$Prefixes r0;
        org.apache.xerces.util.NamespaceSupport r1;
        int i0;
        java.lang.String[] r2;

        r0 := @this: org.apache.xerces.util.NamespaceSupport$Prefixes;

        r1 := @parameter0: org.apache.xerces.util.NamespaceSupport;

        r2 := @parameter1: java.lang.String[];

        i0 := @parameter2: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: org.apache.xerces.util.NamespaceSupport this$0> = r1;

        r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int counter> = 0;

        r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int size> = 0;

        r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: java.lang.String[] prefixes> = r2;

        r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int size> = i0;

        return;
    }

    public boolean hasMoreElements()
    {
        org.apache.xerces.util.NamespaceSupport$Prefixes r0;
        int $i0, $i1;
        boolean $z0;

        r0 := @this: org.apache.xerces.util.NamespaceSupport$Prefixes;

        $i1 = r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int counter>;

        $i0 = r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int size>;

        if $i1 >= $i0 goto label1;

        $z0 = 1;

        goto label2;

     label1:
        $z0 = 0;

     label2:
        return $z0;
    }

    public java.lang.Object nextElement()
    {
        org.apache.xerces.util.NamespaceSupport$Prefixes r0;
        org.apache.xerces.util.NamespaceSupport $r2;
        java.lang.String[] $r3;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r4;
        java.util.NoSuchElementException $r1;

        r0 := @this: org.apache.xerces.util.NamespaceSupport$Prefixes;

        $i1 = r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int counter>;

        $i0 = r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int size>;

        if $i1 >= $i0 goto label1;

        $r2 = r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: org.apache.xerces.util.NamespaceSupport this$0>;

        $r3 = $r2.<org.apache.xerces.util.NamespaceSupport: java.lang.String[] fPrefixes>;

        $i2 = r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int counter>;

        $i3 = $i2 + 1;

        r0.<org.apache.xerces.util.NamespaceSupport$Prefixes: int counter> = $i3;

        $r4 = $r3[$i2];

        return $r4;

     label1:
        $r1 = new java.util.NoSuchElementException;

        specialinvoke $r1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("Illegal access to Namespace prefixes enumeration.");

        throw $r1;
    }

    public java.lang.String toString()
    {
        org.apache.xerces.util.NamespaceSupport$Prefixes r1;
        java.lang.StringBuffer $r0;
        int $i0, i1;
        java.lang.String[] $r2;
        java.lang.String $r3, $r4;

        r1 := @this: org.apache.xerces.util.NamespaceSupport$Prefixes;

        $r0 = new java.lang.StringBuffer;

        specialinvoke $r0.<java.lang.StringBuffer: void <init>()>();

        i1 = 0;

        goto label2;

     label1:
        $r2 = r1.<org.apache.xerces.util.NamespaceSupport$Prefixes: java.lang.String[] prefixes>;

        $r3 = $r2[i1];

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3);

        virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32);

        i1 = i1 + 1;

     label2:
        $i0 = r1.<org.apache.xerces.util.NamespaceSupport$Prefixes: int size>;

        if i1 < $i0 goto label1;

        $r4 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r4;
    }
}
