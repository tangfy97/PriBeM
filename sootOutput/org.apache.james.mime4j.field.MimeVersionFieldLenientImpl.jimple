public class org.apache.james.mime4j.field.MimeVersionFieldLenientImpl extends org.apache.james.mime4j.field.AbstractField implements org.apache.james.mime4j.dom.field.MimeVersionField
{
    private static final int FULL_STOP;
    private static final java.util.BitSet DELIM;
    public static final int DEFAULT_MINOR_VERSION;
    public static final int DEFAULT_MAJOR_VERSION;
    private boolean parsed;
    private int major;
    private int minor;
    public static final org.apache.james.mime4j.dom.FieldParser PARSER;

    void <init>(org.apache.james.mime4j.stream.Field, org.apache.james.mime4j.codec.DecodeMonitor)
    {
        org.apache.james.mime4j.codec.DecodeMonitor r2;
        org.apache.james.mime4j.stream.Field r1;
        org.apache.james.mime4j.field.MimeVersionFieldLenientImpl r0;

        r0 := @this: org.apache.james.mime4j.field.MimeVersionFieldLenientImpl;

        r1 := @parameter0: org.apache.james.mime4j.stream.Field;

        r2 := @parameter1: org.apache.james.mime4j.codec.DecodeMonitor;

        specialinvoke r0.<org.apache.james.mime4j.field.AbstractField: void <init>(org.apache.james.mime4j.stream.Field,org.apache.james.mime4j.codec.DecodeMonitor)>(r1, r2);

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: boolean parsed> = 0;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int major> = 1;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int minor> = 0;

        return;
    }

    private void parse()
    {
        org.apache.james.mime4j.util.ByteSequence $r2, r10;
        org.apache.james.mime4j.stream.RawField $r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7, i8, $i9, $i10, $i11;
        java.lang.String $r5, $r6, $r11;
        boolean $z0;
        org.apache.james.mime4j.stream.RawFieldParser $r7;
        java.lang.NumberFormatException $r8, $r9;
        org.apache.james.mime4j.stream.ParserCursor $r12;
        java.util.BitSet $r4;
        org.apache.james.mime4j.field.MimeVersionFieldLenientImpl r0;

        r0 := @this: org.apache.james.mime4j.field.MimeVersionFieldLenientImpl;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: boolean parsed> = 1;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int major> = 1;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int minor> = 0;

        $r1 = virtualinvoke r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: org.apache.james.mime4j.stream.RawField getRawField()>();

        $r2 = virtualinvoke $r1.<org.apache.james.mime4j.stream.RawField: org.apache.james.mime4j.util.ByteSequence getRaw()>();

        r10 = $r2;

        $i0 = virtualinvoke $r1.<org.apache.james.mime4j.stream.RawField: int getDelimiterIdx()>();

        i8 = $i0 + 1;

        if $r2 != null goto label02;

        $r6 = virtualinvoke $r1.<org.apache.james.mime4j.stream.RawField: java.lang.String getBody()>();

        if $r6 != null goto label01;

        return;

     label01:
        r10 = staticinvoke <org.apache.james.mime4j.util.ContentUtil: org.apache.james.mime4j.util.ByteSequence encode(java.lang.String)>($r6);

        i8 = 0;

     label02:
        $r7 = <org.apache.james.mime4j.stream.RawFieldParser: org.apache.james.mime4j.stream.RawFieldParser DEFAULT>;

        $r12 = new org.apache.james.mime4j.stream.ParserCursor;

        $i1 = interfaceinvoke r10.<org.apache.james.mime4j.util.ByteSequence: int length()>();

        specialinvoke $r12.<org.apache.james.mime4j.stream.ParserCursor: void <init>(int,int)>(i8, $i1);

        $r4 = <org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: java.util.BitSet DELIM>;

        $r5 = virtualinvoke $r7.<org.apache.james.mime4j.stream.RawFieldParser: java.lang.String parseValue(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>(r10, $r12, $r4);

     label03:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r5);

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int major> = $i2;

        $i3 = r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int major>;

        if $i3 >= 0 goto label04;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int major> = 0;

     label04:
        goto label06;

     label05:
        $r9 := @caughtexception;

     label06:
        $z0 = virtualinvoke $r12.<org.apache.james.mime4j.stream.ParserCursor: boolean atEnd()>();

        if $z0 != 0 goto label07;

        $i4 = virtualinvoke $r12.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $b5 = interfaceinvoke r10.<org.apache.james.mime4j.util.ByteSequence: byte byteAt(int)>($i4);

        $i11 = (int) $b5;

        if $i11 != 46 goto label07;

        $i6 = virtualinvoke $r12.<org.apache.james.mime4j.stream.ParserCursor: int getPos()>();

        $i7 = $i6 + 1;

        virtualinvoke $r12.<org.apache.james.mime4j.stream.ParserCursor: void updatePos(int)>($i7);

     label07:
        $r11 = virtualinvoke $r7.<org.apache.james.mime4j.stream.RawFieldParser: java.lang.String parseValue(org.apache.james.mime4j.util.ByteSequence,org.apache.james.mime4j.stream.ParserCursor,java.util.BitSet)>(r10, $r12, null);

     label08:
        $i9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r11);

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int minor> = $i9;

        $i10 = r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int minor>;

        if $i10 >= 0 goto label09;

        r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int minor> = 0;

     label09:
        goto label11;

     label10:
        $r8 := @caughtexception;

     label11:
        return;

        catch java.lang.NumberFormatException from label03 to label04 with label05;
        catch java.lang.NumberFormatException from label08 to label09 with label10;
    }

    public int getMinorVersion()
    {
        int $i0;
        org.apache.james.mime4j.field.MimeVersionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.MimeVersionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: void parse()>();

     label1:
        $i0 = r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int minor>;

        return $i0;
    }

    public int getMajorVersion()
    {
        int $i0;
        org.apache.james.mime4j.field.MimeVersionFieldLenientImpl r0;
        boolean $z0;

        r0 := @this: org.apache.james.mime4j.field.MimeVersionFieldLenientImpl;

        $z0 = r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: boolean parsed>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: void parse()>();

     label1:
        $i0 = r0.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int major>;

        return $i0;
    }

    static void <clinit>()
    {
        java.util.BitSet $r1;
        int[] $r0;
        org.apache.james.mime4j.field.MimeVersionFieldLenientImpl$1 $r2;

        <org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int DEFAULT_MAJOR_VERSION> = 1;

        <org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int DEFAULT_MINOR_VERSION> = 0;

        <org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: int FULL_STOP> = 46;

        $r0 = newarray (int)[1];

        $r0[0] = 46;

        $r1 = staticinvoke <org.apache.james.mime4j.stream.RawFieldParser: java.util.BitSet INIT_BITSET(int[])>($r0);

        <org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: java.util.BitSet DELIM> = $r1;

        $r2 = new org.apache.james.mime4j.field.MimeVersionFieldLenientImpl$1;

        specialinvoke $r2.<org.apache.james.mime4j.field.MimeVersionFieldLenientImpl$1: void <init>()>();

        <org.apache.james.mime4j.field.MimeVersionFieldLenientImpl: org.apache.james.mime4j.dom.FieldParser PARSER> = $r2;

        return;
    }
}
