public class org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor extends org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor
{
    private static final java.util.logging.Logger LOG;

    public void <init>()
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor r0;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>("setup");

        return;
    }

    public void <init>(java.lang.String)
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.interceptor.AbstractOutDatabindingInterceptor: void <init>(java.lang.String)>(r1);

        return;
    }

    public void handleFault(org.apache.cxf.message.Message)
    {
        org.apache.cxf.jaxrs.lifecycle.ResourceProvider $r10;
        java.util.SortedSet $r22;
        org.apache.cxf.interceptor.InterceptorChain $r11, $r23, $r25;
        org.apache.cxf.message.MessageContentsList $r12;
        org.apache.cxf.phase.PhaseManager $r34;
        boolean $z0, z1, $z2;
        org.apache.cxf.logging.NoOpFaultListener $r33;
        java.util.logging.Logger $r5, $r38;
        javax.ws.rs.core.Response $r4;
        org.apache.cxf.jaxrs.model.ClassResourceInfo $r48;
        java.lang.StringBuilder $r37, $r39, $r41;
        org.apache.cxf.Bus $r19;
        java.lang.Throwable $r36, r44;
        java.lang.Object[] $r13;
        org.apache.cxf.jaxrs.provider.ProviderFactory $r45;
        org.apache.cxf.interceptor.Fault $r35;
        java.lang.Boolean $r1;
        java.lang.String $r15, $r27, $r32, $r40, $r42;
        java.util.Iterator $r24;
        org.apache.cxf.interceptor.Interceptor r29;
        org.apache.cxf.message.Message r0;
        org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor r43;
        org.apache.cxf.message.Exchange $r6, $r8, $r17, $r46;
        org.apache.cxf.phase.PhaseInterceptorChain $r21;
        java.lang.Object $r2, $r3, $r7, $r9, $r16, $r18, $r20, $r28, $r47;
        java.lang.Class $r14, $r26, $r30, $r31;

        r43 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor;

        r0 := @parameter0: org.apache.cxf.message.Message;

        $r1 = <java.lang.Boolean: java.lang.Boolean TRUE>;

        $r2 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object get(java.lang.Object)>("jaxrs.out.fault");

        if $r1 != $r2 goto label01;

        return;

     label01:
        $r3 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        r44 = (java.lang.Throwable) $r3;

        $z0 = r44 instanceof org.apache.cxf.interceptor.Fault;

        if $z0 == 0 goto label02;

        $r35 = (org.apache.cxf.interceptor.Fault) r44;

        r44 = virtualinvoke $r35.<org.apache.cxf.interceptor.Fault: java.lang.Throwable getCause()>();

     label02:
        $r4 = staticinvoke <org.apache.cxf.jaxrs.utils.JAXRSUtils: javax.ws.rs.core.Response convertFaultToResponse(java.lang.Throwable,org.apache.cxf.message.Message)>(r44, r0);

        if $r4 == null goto label08;

        interfaceinvoke r0.<org.apache.cxf.message.Message: void removeContent(java.lang.Class)>(class "Ljava/lang/Exception;");

        $r11 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        interfaceinvoke $r11.<org.apache.cxf.interceptor.InterceptorChain: void setFaultObserver(org.apache.cxf.transport.MessageObserver)>(null);

        $r12 = new org.apache.cxf.message.MessageContentsList;

        $r13 = newarray (java.lang.Object)[1];

        $r13[0] = $r4;

        specialinvoke $r12.<org.apache.cxf.message.MessageContentsList: void <init>(java.lang.Object[])>($r13);

        interfaceinvoke r0.<org.apache.cxf.message.Message: void setContent(java.lang.Class,java.lang.Object)>(class "Ljava/util/List;", $r12);

        $r14 = class "Lorg/apache/cxf/logging/FaultListener;";

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object getContextualProperty(java.lang.String)>($r15);

        if $r16 != null goto label03;

        $r31 = class "Lorg/apache/cxf/logging/FaultListener;";

        $r32 = virtualinvoke $r31.<java.lang.Class: java.lang.String getName()>();

        $r33 = new org.apache.cxf.logging.NoOpFaultListener;

        specialinvoke $r33.<org.apache.cxf.logging.NoOpFaultListener: void <init>()>();

        interfaceinvoke r0.<org.apache.cxf.message.Message: java.lang.Object put(java.lang.Object,java.lang.Object)>($r32, $r33);

     label03:
        $r17 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r18 = interfaceinvoke $r17.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Class)>(class "Lorg/apache/cxf/Bus;");

        $r19 = (org.apache.cxf.Bus) $r18;

        $r20 = interfaceinvoke $r19.<org.apache.cxf.Bus: java.lang.Object getExtension(java.lang.Class)>(class "Lorg/apache/cxf/phase/PhaseManager;");

        $r34 = (org.apache.cxf.phase.PhaseManager) $r20;

        $r21 = new org.apache.cxf.phase.PhaseInterceptorChain;

        $r22 = interfaceinvoke $r34.<org.apache.cxf.phase.PhaseManager: java.util.SortedSet getOutPhases()>();

        specialinvoke $r21.<org.apache.cxf.phase.PhaseInterceptorChain: void <init>(java.util.SortedSet)>($r22);

        z1 = 0;

        $r23 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r24 = interfaceinvoke $r23.<org.apache.cxf.interceptor.InterceptorChain: java.util.Iterator iterator()>();

     label04:
        $z2 = interfaceinvoke $r24.<java.util.Iterator: boolean hasNext()>();

        if $z2 == 0 goto label07;

        $r28 = interfaceinvoke $r24.<java.util.Iterator: java.lang.Object next()>();

        r29 = (org.apache.cxf.interceptor.Interceptor) $r28;

        $r30 = virtualinvoke r29.<java.lang.Object: java.lang.Class getClass()>();

        if $r30 != class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSOutInterceptor;" goto label05;

        z1 = 1;

     label05:
        if z1 == 0 goto label06;

        virtualinvoke $r21.<org.apache.cxf.phase.PhaseInterceptorChain: void add(org.apache.cxf.interceptor.Interceptor)>(r29);

     label06:
        goto label04;

     label07:
        interfaceinvoke r0.<org.apache.cxf.message.Message: void setInterceptorChain(org.apache.cxf.interceptor.InterceptorChain)>($r21);

        $r25 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.interceptor.InterceptorChain getInterceptorChain()>();

        $r26 = class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSOutInterceptor;";

        $r27 = virtualinvoke $r26.<java.lang.Class: java.lang.String getName()>();

        interfaceinvoke $r25.<org.apache.cxf.interceptor.InterceptorChain: boolean doInterceptStartingAt(org.apache.cxf.message.Message,java.lang.String)>(r0, $r27);

        return;

     label08:
        $r5 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor: java.util.logging.Logger LOG>;

        virtualinvoke $r5.<java.util.logging.Logger: void fine(java.lang.String)>("Cleanup thread local variables");

        $r6 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r7 = interfaceinvoke $r6.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.instance");

        $r8 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r9 = interfaceinvoke $r8.<org.apache.cxf.message.Exchange: java.lang.Object remove(java.lang.Object)>("service.root.provider");

        if $r7 == null goto label12;

        if $r9 == null goto label12;

     label09:
        $r10 = (org.apache.cxf.jaxrs.lifecycle.ResourceProvider) $r9;

        interfaceinvoke $r10.<org.apache.cxf.jaxrs.lifecycle.ResourceProvider: void releaseInstance(org.apache.cxf.message.Message,java.lang.Object)>(r0, $r7);

     label10:
        goto label12;

     label11:
        $r36 := @caughtexception;

        $r38 = <org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor: java.util.logging.Logger LOG>;

        $r37 = new java.lang.StringBuilder;

        specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();

        $r39 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception occurred during releasing the service instance, ");

        $r40 = virtualinvoke $r36.<java.lang.Throwable: java.lang.String getMessage()>();

        $r41 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40);

        $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke $r38.<java.util.logging.Logger: void warning(java.lang.String)>($r42);

     label12:
        $r45 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: org.apache.cxf.jaxrs.provider.ProviderFactory getInstance(org.apache.cxf.message.Message)>(r0);

        virtualinvoke $r45.<org.apache.cxf.jaxrs.provider.ProviderFactory: void clearThreadLocalProxies()>();

        $r46 = interfaceinvoke r0.<org.apache.cxf.message.Message: org.apache.cxf.message.Exchange getExchange()>();

        $r47 = interfaceinvoke $r46.<org.apache.cxf.message.Exchange: java.lang.Object get(java.lang.Object)>("root.resource.class");

        $r48 = (org.apache.cxf.jaxrs.model.ClassResourceInfo) $r47;

        if $r48 == null goto label13;

        virtualinvoke $r48.<org.apache.cxf.jaxrs.model.ClassResourceInfo: void clearThreadLocalProxies()>();

     label13:
        return;

        catch java.lang.Throwable from label09 to label10 with label11;
    }

    public void handleMessage(org.apache.cxf.message.Message) throws org.apache.cxf.interceptor.Fault
    {
        org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor r0;
        org.apache.cxf.message.Message r1;

        r0 := @this: org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor;

        r1 := @parameter0: org.apache.cxf.message.Message;

        return;
    }

    static void <clinit>()
    {
        java.util.logging.Logger $r0;

        $r0 = staticinvoke <org.apache.cxf.common.logging.LogUtils: java.util.logging.Logger getL7dLogger(java.lang.Class)>(class "Lorg/apache/cxf/jaxrs/interceptor/JAXRSOutExceptionMapperInterceptor;");

        <org.apache.cxf.jaxrs.interceptor.JAXRSOutExceptionMapperInterceptor: java.util.logging.Logger LOG> = $r0;

        return;
    }
}
