public class org.apache.batik.svggen.SVGLookupOp extends org.apache.batik.svggen.AbstractSVGFilterConverter
{
    private static final double GAMMA;
    private static final int[] linearToSRGBLut;
    private static final int[] sRGBToLinear;

    public void <init>(org.apache.batik.svggen.SVGGeneratorContext)
    {
        org.apache.batik.svggen.SVGLookupOp r0;
        org.apache.batik.svggen.SVGGeneratorContext r1;

        r0 := @this: org.apache.batik.svggen.SVGLookupOp;

        r1 := @parameter0: org.apache.batik.svggen.SVGGeneratorContext;

        specialinvoke r0.<org.apache.batik.svggen.AbstractSVGFilterConverter: void <init>(org.apache.batik.svggen.SVGGeneratorContext)>(r1);

        return;
    }

    public org.apache.batik.svggen.SVGFilterDescriptor toSVG(java.awt.image.BufferedImageOp, java.awt.Rectangle)
    {
        java.awt.Rectangle r4;
        org.apache.batik.svggen.SVGFilterDescriptor $r3;
        org.apache.batik.svggen.SVGLookupOp r1;
        java.awt.image.BufferedImageOp r0;
        java.awt.image.LookupOp $r2;
        boolean $z0;

        r1 := @this: org.apache.batik.svggen.SVGLookupOp;

        r0 := @parameter0: java.awt.image.BufferedImageOp;

        r4 := @parameter1: java.awt.Rectangle;

        $z0 = r0 instanceof java.awt.image.LookupOp;

        if $z0 == 0 goto label1;

        $r2 = (java.awt.image.LookupOp) r0;

        $r3 = virtualinvoke r1.<org.apache.batik.svggen.SVGLookupOp: org.apache.batik.svggen.SVGFilterDescriptor toSVG(java.awt.image.LookupOp)>($r2);

        return $r3;

     label1:
        return null;
    }

    public org.apache.batik.svggen.SVGFilterDescriptor toSVG(java.awt.image.LookupOp)
    {
        org.apache.batik.svggen.SVGLookupOp r0;
        org.w3c.dom.Document r5;
        java.util.Map $r2, $r23;
        java.util.List $r22;
        org.apache.batik.svggen.SVGGeneratorContext $r4, $r12;
        java.lang.String[] $r8;
        java.lang.StringBuffer $r15, $r16, $r18, $r19;
        int $i0, $i1, $i2;
        org.apache.batik.svggen.SVGIDGenerator $r13;
        java.lang.String $r14, $r17, $r20, $r24, $r25, $r26, $r28, $r29, $r30, $r31;
        org.w3c.dom.Element $r6, $r7, $r9, $r10, $r11, $r27, r33;
        org.apache.batik.svggen.SVGFilterDescriptor $r21, r32;
        java.lang.Object $r3;
        java.awt.image.LookupOp r1;

        r0 := @this: org.apache.batik.svggen.SVGLookupOp;

        r1 := @parameter0: java.awt.image.LookupOp;

        $r2 = r0.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.util.Map descMap>;

        $r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1);

        r32 = (org.apache.batik.svggen.SVGFilterDescriptor) $r3;

        $r4 = r0.<org.apache.batik.svggen.AbstractSVGFilterConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        r5 = $r4.<org.apache.batik.svggen.SVGGeneratorContext: org.w3c.dom.Document domFactory>;

        if r32 != null goto label4;

        $r6 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "filter");

        $r7 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "feComponentTransfer");

        $r8 = specialinvoke r0.<org.apache.batik.svggen.SVGLookupOp: java.lang.String[] convertLookupTables(java.awt.image.LookupOp)>(r1);

        $r9 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "feFuncR");

        $r10 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "feFuncG");

        $r11 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "feFuncB");

        r33 = null;

        $i0 = lengthof $r8;

        if $i0 != 1 goto label1;

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        interfaceinvoke $r10.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        interfaceinvoke $r11.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        $r29 = $r8[0];

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r29);

        $r30 = $r8[0];

        interfaceinvoke $r10.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r30);

        $r31 = $r8[0];

        interfaceinvoke $r11.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r31);

        goto label2;

     label1:
        $i1 = lengthof $r8;

        if $i1 < 3 goto label2;

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        interfaceinvoke $r10.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        interfaceinvoke $r11.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        $r24 = $r8[0];

        interfaceinvoke $r9.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r24);

        $r25 = $r8[1];

        interfaceinvoke $r10.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r25);

        $r26 = $r8[2];

        interfaceinvoke $r11.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r26);

        $i2 = lengthof $r8;

        if $i2 != 4 goto label2;

        $r27 = interfaceinvoke r5.<org.w3c.dom.Document: org.w3c.dom.Element createElementNS(java.lang.String,java.lang.String)>("http://www.w3.org/2000/svg", "feFuncA");

        r33 = $r27;

        interfaceinvoke $r27.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "type", "table");

        $r28 = $r8[3];

        interfaceinvoke $r27.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "tableValues", $r28);

     label2:
        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r9);

        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r10);

        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r11);

        if r33 == null goto label3;

        interfaceinvoke $r7.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>(r33);

     label3:
        interfaceinvoke $r6.<org.w3c.dom.Node: org.w3c.dom.Node appendChild(org.w3c.dom.Node)>($r7);

        $r12 = r0.<org.apache.batik.svggen.AbstractSVGFilterConverter: org.apache.batik.svggen.SVGGeneratorContext generatorContext>;

        $r13 = $r12.<org.apache.batik.svggen.SVGGeneratorContext: org.apache.batik.svggen.SVGIDGenerator idGenerator>;

        $r14 = virtualinvoke $r13.<org.apache.batik.svggen.SVGIDGenerator: java.lang.String generateID(java.lang.String)>("componentTransfer");

        interfaceinvoke $r6.<org.w3c.dom.Element: void setAttributeNS(java.lang.String,java.lang.String,java.lang.String)>(null, "id", $r14);

        $r15 = new java.lang.StringBuffer;

        specialinvoke $r15.<java.lang.StringBuffer: void <init>()>();

        $r16 = virtualinvoke $r15.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("url(#");

        $r17 = interfaceinvoke $r6.<org.w3c.dom.Element: java.lang.String getAttributeNS(java.lang.String,java.lang.String)>(null, "id");

        $r18 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r17);

        $r19 = virtualinvoke $r18.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(")");

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.String toString()>();

        $r21 = new org.apache.batik.svggen.SVGFilterDescriptor;

        specialinvoke $r21.<org.apache.batik.svggen.SVGFilterDescriptor: void <init>(java.lang.String,org.w3c.dom.Element)>($r20, $r6);

        r32 = $r21;

        $r22 = r0.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.util.List defSet>;

        interfaceinvoke $r22.<java.util.List: boolean add(java.lang.Object)>($r6);

        $r23 = r0.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.util.Map descMap>;

        interfaceinvoke $r23.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r21);

     label4:
        return r32;
    }

    private java.lang.String[] convertLookupTables(java.awt.image.LookupOp)
    {
        byte[] r25, r26;
        org.apache.batik.svggen.SVGLookupOp r3;
        org.apache.batik.svggen.SVGGraphics2DRuntimeException $r27;
        byte $b3, $b4;
        int[] r23, r24;
        boolean $z0;
        java.lang.StringBuffer[] $r22;
        java.lang.String[] $r20;
        java.awt.image.ByteLookupTable $r7;
        short $s5, $s18;
        java.lang.StringBuffer $r4, $r6, $r8, $r10, $r11, $r14, $r16, $r17, $r19, $r28;
        int $i0, $i1, $i2, $i6, $i7, i8, i9, i10, i11, i12, i13, i14, i15, i16, i17;
        java.awt.image.LookupTable $r1;
        java.lang.String $r5, $r9, $r12, $r13, $r15, $r18;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        java.awt.image.LookupOp r0;

        r3 := @this: org.apache.batik.svggen.SVGLookupOp;

        r0 := @parameter0: java.awt.image.LookupOp;

        $r1 = virtualinvoke r0.<java.awt.image.LookupOp: java.awt.image.LookupTable getTable()>();

        $i0 = virtualinvoke $r1.<java.awt.image.LookupTable: int getNumComponents()>();

        if $i0 == 1 goto label01;

        if $i0 == 3 goto label01;

        if $i0 == 4 goto label01;

        $r27 = new org.apache.batik.svggen.SVGGraphics2DRuntimeException;

        specialinvoke $r27.<org.apache.batik.svggen.SVGGraphics2DRuntimeException: void <init>(java.lang.String)>("BufferedImage LookupOp should have 1, 3 or 4 lookup arrays");

        throw $r27;

     label01:
        $r22 = newarray (java.lang.StringBuffer)[$i0];

        i8 = 0;

        goto label03;

     label02:
        $r28 = new java.lang.StringBuffer;

        specialinvoke $r28.<java.lang.StringBuffer: void <init>()>();

        $r22[i8] = $r28;

        i8 = i8 + 1;

     label03:
        if i8 < $i0 goto label02;

        $z0 = $r1 instanceof java.awt.image.ByteLookupTable;

        if $z0 != 0 goto label12;

        r23 = newarray (int)[$i0];

        r24 = newarray (int)[$i0];

        $i6 = virtualinvoke $r1.<java.awt.image.LookupTable: int getOffset()>();

        i9 = 0;

        goto label07;

     label04:
        i10 = 0;

        goto label06;

     label05:
        $r14 = $r22[i10];

        $d4 = (double) i9;

        $d5 = $d4 / 255.0;

        $r15 = virtualinvoke r3.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.lang.String doubleString(double)>($d5);

        $r16 = virtualinvoke $r14.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r15);

        virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i10 = i10 + 1;

     label06:
        if i10 < $i0 goto label05;

        i9 = i9 + 1;

     label07:
        if i9 < $i6 goto label04;

        i11 = $i6;

        goto label11;

     label08:
        staticinvoke <java.util.Arrays: void fill(int[],int)>(r23, i11);

        virtualinvoke $r1.<java.awt.image.LookupTable: int[] lookupPixel(int[],int[])>(r23, r24);

        i12 = 0;

        goto label10;

     label09:
        $r17 = $r22[i12];

        $i7 = r24[i12];

        $d6 = (double) $i7;

        $d7 = $d6 / 255.0;

        $r18 = virtualinvoke r3.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.lang.String doubleString(double)>($d7);

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i12 = i12 + 1;

     label10:
        if i12 < $i0 goto label09;

        i11 = i11 + 1;

     label11:
        if i11 <= 255 goto label08;

        goto label21;

     label12:
        r25 = newarray (byte)[$i0];

        r26 = newarray (byte)[$i0];

        $i1 = virtualinvoke $r1.<java.awt.image.LookupTable: int getOffset()>();

        i13 = 0;

        goto label16;

     label13:
        i14 = 0;

        goto label15;

     label14:
        $r4 = $r22[i14];

        $d0 = (double) i13;

        $d1 = $d0 / 255.0;

        $r5 = virtualinvoke r3.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.lang.String doubleString(double)>($d1);

        $r6 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i14 = i14 + 1;

     label15:
        if i14 < $i0 goto label14;

        i13 = i13 + 1;

     label16:
        if i13 < $i1 goto label13;

        i15 = 0;

        goto label20;

     label17:
        $i2 = 255 & i15;

        $b3 = (byte) $i2;

        staticinvoke <java.util.Arrays: void fill(byte[],byte)>(r25, $b3);

        $r7 = (java.awt.image.ByteLookupTable) $r1;

        virtualinvoke $r7.<java.awt.image.ByteLookupTable: byte[] lookupPixel(byte[],byte[])>(r25, r26);

        i16 = 0;

        goto label19;

     label18:
        $r8 = $r22[i16];

        $b4 = r26[i16];

        $s18 = (short) $b4;

        $s5 = 255 & $s18;

        $d2 = (double) $s5;

        $d3 = $d2 / 255.0;

        $r9 = virtualinvoke r3.<org.apache.batik.svggen.AbstractSVGFilterConverter: java.lang.String doubleString(double)>($d3);

        $r10 = virtualinvoke $r8.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r9);

        virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");

        i16 = i16 + 1;

     label19:
        if i16 < $i0 goto label18;

        i15 = i15 + 1;

     label20:
        if i15 <= 255 goto label17;

     label21:
        $r20 = newarray (java.lang.String)[$i0];

        i17 = 0;

        goto label23;

     label22:
        $r11 = $r22[i17];

        $r12 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.String toString()>();

        $r13 = virtualinvoke $r12.<java.lang.String: java.lang.String trim()>();

        $r20[i17] = $r13;

        i17 = i17 + 1;

     label23:
        if i17 < $i0 goto label22;

        return $r20;
    }

    static void <clinit>()
    {
        byte $b0, $b2;
        int[] $r0, $r1, $r2, $r3;
        int $i1, $i3, i4, $i5, $i6;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8, f9, f10, f11;

        <org.apache.batik.svggen.SVGLookupOp: double GAMMA> = 0.4166666666666667;

        $r0 = newarray (int)[256];

        <org.apache.batik.svggen.SVGLookupOp: int[] linearToSRGBLut> = $r0;

        $r1 = newarray (int)[256];

        <org.apache.batik.svggen.SVGLookupOp: int[] sRGBToLinear> = $r1;

        i4 = 0;

        goto label6;

     label1:
        $f0 = (float) i4;

        f9 = $f0 / 255.0F;

        $d0 = (double) f9;

        $b0 = $d0 cmpg 0.0031308;

        $i5 = (int) $b0;

        if $i5 > 0 goto label2;

        f10 = f9 * 12.92F;

        goto label3;

     label2:
        $d1 = (double) f9;

        $d2 = staticinvoke <java.lang.Math: double pow(double,double)>($d1, 0.4166666666666667);

        $f1 = (float) $d2;

        $f2 = 1.055F * $f1;

        f10 = $f2 - 0.055F;

     label3:
        $r2 = <org.apache.batik.svggen.SVGLookupOp: int[] linearToSRGBLut>;

        $f3 = f10 * 255.0F;

        $i1 = staticinvoke <java.lang.Math: int round(float)>($f3);

        $r2[i4] = $i1;

        $f4 = (float) i4;

        $f8 = $f4 / 255.0F;

        $d3 = (double) $f8;

        $b2 = $d3 cmpg 0.04045;

        $i6 = (int) $b2;

        if $i6 > 0 goto label4;

        f11 = $f8 / 12.92F;

        goto label5;

     label4:
        $f5 = $f8 + 0.055F;

        $f6 = $f5 / 1.055F;

        $d4 = (double) $f6;

        $d5 = staticinvoke <java.lang.Math: double pow(double,double)>($d4, 2.4);

        f11 = (float) $d5;

     label5:
        $r3 = <org.apache.batik.svggen.SVGLookupOp: int[] sRGBToLinear>;

        $f7 = f11 * 255.0F;

        $i3 = staticinvoke <java.lang.Math: int round(float)>($f7);

        $r3[i4] = $i3;

        i4 = i4 + 1;

     label6:
        if i4 < 256 goto label1;

        return;
    }
}
