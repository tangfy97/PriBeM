public class org.apache.batik.bridge.NoLoadScriptSecurity extends java.lang.Object implements org.apache.batik.bridge.ScriptSecurity
{
    public static final java.lang.String ERROR_NO_SCRIPT_OF_TYPE_ALLOWED;
    protected java.lang.SecurityException se;

    public void checkLoadScript()
    {
        org.apache.batik.bridge.NoLoadScriptSecurity r0;
        java.lang.SecurityException $r1;

        r0 := @this: org.apache.batik.bridge.NoLoadScriptSecurity;

        $r1 = r0.<org.apache.batik.bridge.NoLoadScriptSecurity: java.lang.SecurityException se>;

        throw $r1;
    }

    public void <init>(java.lang.String)
    {
        java.lang.Object[] $r2;
        org.apache.batik.bridge.NoLoadScriptSecurity r0;
        java.lang.SecurityException $r1;
        java.lang.String r3, $r4;

        r0 := @this: org.apache.batik.bridge.NoLoadScriptSecurity;

        r3 := @parameter0: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.lang.SecurityException;

        $r2 = newarray (java.lang.Object)[1];

        $r2[0] = r3;

        $r4 = staticinvoke <org.apache.batik.bridge.Messages: java.lang.String formatMessage(java.lang.String,java.lang.Object[])>("NoLoadScriptSecurity.error.no.script.of.type.allowed", $r2);

        specialinvoke $r1.<java.lang.SecurityException: void <init>(java.lang.String)>($r4);

        r0.<org.apache.batik.bridge.NoLoadScriptSecurity: java.lang.SecurityException se> = $r1;

        return;
    }

    public static void <clinit>()
    {
        <org.apache.batik.bridge.NoLoadScriptSecurity: java.lang.String ERROR_NO_SCRIPT_OF_TYPE_ALLOWED> = "NoLoadScriptSecurity.error.no.script.of.type.allowed";

        return;
    }
}
