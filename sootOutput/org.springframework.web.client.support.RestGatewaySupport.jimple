public class org.springframework.web.client.support.RestGatewaySupport extends java.lang.Object
{
    protected final org.apache.commons.logging.Log logger;
    private org.springframework.web.client.RestTemplate restTemplate;

    public void <init>()
    {
        org.springframework.web.client.support.RestGatewaySupport r0;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.web.client.RestTemplate $r3;

        r0 := @this: org.springframework.web.client.support.RestGatewaySupport;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.web.client.support.RestGatewaySupport: org.apache.commons.logging.Log logger> = $r2;

        $r3 = new org.springframework.web.client.RestTemplate;

        specialinvoke $r3.<org.springframework.web.client.RestTemplate: void <init>()>();

        r0.<org.springframework.web.client.support.RestGatewaySupport: org.springframework.web.client.RestTemplate restTemplate> = $r3;

        return;
    }

    public void <init>(org.springframework.http.client.ClientHttpRequestFactory)
    {
        org.springframework.web.client.support.RestGatewaySupport r0;
        org.springframework.http.client.ClientHttpRequestFactory r3;
        java.lang.Class $r1;
        org.apache.commons.logging.Log $r2;
        org.springframework.web.client.RestTemplate $r4;

        r0 := @this: org.springframework.web.client.support.RestGatewaySupport;

        r3 := @parameter0: org.springframework.http.client.ClientHttpRequestFactory;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.apache.commons.logging.LogFactory: org.apache.commons.logging.Log getLog(java.lang.Class)>($r1);

        r0.<org.springframework.web.client.support.RestGatewaySupport: org.apache.commons.logging.Log logger> = $r2;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r3, "\'requestFactory\' must not be null");

        $r4 = new org.springframework.web.client.RestTemplate;

        specialinvoke $r4.<org.springframework.web.client.RestTemplate: void <init>(org.springframework.http.client.ClientHttpRequestFactory)>(r3);

        r0.<org.springframework.web.client.support.RestGatewaySupport: org.springframework.web.client.RestTemplate restTemplate> = $r4;

        return;
    }

    public void setRestTemplate(org.springframework.web.client.RestTemplate)
    {
        org.springframework.web.client.support.RestGatewaySupport r1;
        org.springframework.web.client.RestTemplate r0;

        r1 := @this: org.springframework.web.client.support.RestGatewaySupport;

        r0 := @parameter0: org.springframework.web.client.RestTemplate;

        staticinvoke <org.springframework.util.Assert: void notNull(java.lang.Object,java.lang.String)>(r0, "\'restTemplate\' must not be null");

        r1.<org.springframework.web.client.support.RestGatewaySupport: org.springframework.web.client.RestTemplate restTemplate> = r0;

        return;
    }

    public org.springframework.web.client.RestTemplate getRestTemplate()
    {
        org.springframework.web.client.support.RestGatewaySupport r0;
        org.springframework.web.client.RestTemplate $r1;

        r0 := @this: org.springframework.web.client.support.RestGatewaySupport;

        $r1 = r0.<org.springframework.web.client.support.RestGatewaySupport: org.springframework.web.client.RestTemplate restTemplate>;

        return $r1;
    }
}
