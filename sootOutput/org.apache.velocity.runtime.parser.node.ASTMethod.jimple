public class org.apache.velocity.runtime.parser.node.ASTMethod extends org.apache.velocity.runtime.parser.node.SimpleNode
{
    private java.lang.String methodName;
    private int paramCount;
    protected org.apache.velocity.util.introspection.Info uberInfo;
    protected boolean strictRef;

    public void <init>(int)
    {
        int i0;
        org.apache.velocity.runtime.parser.node.ASTMethod r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        i0 := @parameter0: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(int)>(i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: boolean strictRef> = 0;

        return;
    }

    public void <init>(org.apache.velocity.runtime.parser.Parser, int)
    {
        int i0;
        org.apache.velocity.runtime.parser.Parser r1;
        org.apache.velocity.runtime.parser.node.ASTMethod r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        r1 := @parameter0: org.apache.velocity.runtime.parser.Parser;

        i0 := @parameter1: int;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: void <init>(org.apache.velocity.runtime.parser.Parser,int)>(r1, i0);

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName> = "";

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount> = 0;

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: boolean strictRef> = 0;

        return;
    }

    public java.lang.Object jjtAccept(org.apache.velocity.runtime.parser.node.ParserVisitor, java.lang.Object)
    {
        org.apache.velocity.runtime.parser.node.ParserVisitor r0;
        java.lang.Object r2, $r3;
        org.apache.velocity.runtime.parser.node.ASTMethod r1;

        r1 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        r0 := @parameter0: org.apache.velocity.runtime.parser.node.ParserVisitor;

        r2 := @parameter1: java.lang.Object;

        $r3 = interfaceinvoke r0.<org.apache.velocity.runtime.parser.node.ParserVisitor: java.lang.Object visit(org.apache.velocity.runtime.parser.node.ASTMethod,java.lang.Object)>(r1, r2);

        return $r3;
    }

    public java.lang.Object init(org.apache.velocity.context.InternalContextAdapter, java.lang.Object) throws org.apache.velocity.exception.TemplateInitException
    {
        org.apache.velocity.context.InternalContextAdapter r1;
        org.apache.velocity.util.introspection.Info $r3;
        org.apache.velocity.runtime.RuntimeServices $r7;
        int $i0, $i1, $i2, $i3;
        java.lang.Object r2;
        org.apache.velocity.runtime.parser.Token $r5;
        java.lang.String $r4, $r6;
        org.apache.velocity.runtime.parser.node.ASTMethod r0;
        boolean $z0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        r1 := @parameter0: org.apache.velocity.context.InternalContextAdapter;

        r2 := @parameter1: java.lang.Object;

        specialinvoke r0.<org.apache.velocity.runtime.parser.node.SimpleNode: java.lang.Object init(org.apache.velocity.context.InternalContextAdapter,java.lang.Object)>(r1, r2);

        $r3 = new org.apache.velocity.util.introspection.Info;

        $r4 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String getTemplateName()>();

        $i0 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int getLine()>();

        $i1 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int getColumn()>();

        specialinvoke $r3.<org.apache.velocity.util.introspection.Info: void <init>(java.lang.String,int,int)>($r4, $i0, $i1);

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: org.apache.velocity.util.introspection.Info uberInfo> = $r3;

        $r5 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: org.apache.velocity.runtime.parser.Token getFirstToken()>();

        $r6 = $r5.<org.apache.velocity.runtime.parser.Token: java.lang.String image>;

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName> = $r6;

        $i2 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int jjtGetNumChildren()>();

        $i3 = $i2 - 1;

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount> = $i3;

        $r7 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $z0 = interfaceinvoke $r7.<org.apache.velocity.runtime.RuntimeServices: boolean getBoolean(java.lang.String,boolean)>("runtime.references.strict", 0);

        r0.<org.apache.velocity.runtime.parser.node.ASTMethod: boolean strictRef> = $z0;

        return r2;
    }

    public java.lang.Object execute(java.lang.Object, org.apache.velocity.context.InternalContextAdapter) throws org.apache.velocity.exception.MethodInvocationException
    {
        org.apache.velocity.exception.VelocityException $r25;
        boolean $z0;
        java.lang.Exception $r15;
        java.lang.reflect.InvocationTargetException $r29;
        java.lang.Throwable $r30;
        java.lang.Object[] r1;
        java.lang.StringBuffer $r16, $r17, $r19, $r20, $r22;
        int $i0, $i1, $i2, $i3, i4, $i5;
        java.lang.String $r5, $r18, $r23;
        org.apache.velocity.runtime.parser.node.Node $r10;
        org.apache.velocity.runtime.parser.node.ASTMethod r0;
        org.apache.velocity.context.InternalContextAdapter r4;
        java.lang.Class[] r2, $r32;
        java.lang.RuntimeException $r26;
        java.lang.IllegalArgumentException $r27;
        org.apache.velocity.runtime.log.Log $r24;
        java.lang.Object r3, $r7, $r11, $r12, $r13, $r28, $r31;
        java.lang.Class $r8, $r9, $r14, $r21;
        org.apache.velocity.util.introspection.VelMethod $r6;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        r3 := @parameter0: java.lang.Object;

        r4 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        $i0 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount>;

        r1 = newarray (java.lang.Object)[$i0];

        $i1 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount>;

        if $i1 <= 0 goto label01;

        $i3 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount>;

        $r32 = newarray (java.lang.Class)[$i3];

        goto label02;

     label01:
        $r32 = <org.apache.commons.lang.ArrayUtils: java.lang.Class[] EMPTY_CLASS_ARRAY>;

     label02:
        r2 = $r32;

        i4 = 0;

     label03:
        $i5 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: int paramCount>;

        if i4 >= $i5 goto label05;

        $i2 = i4 + 1;

        $r10 = virtualinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: org.apache.velocity.runtime.parser.node.Node jjtGetChild(int)>($i2);

        $r11 = interfaceinvoke $r10.<org.apache.velocity.runtime.parser.node.Node: java.lang.Object value(org.apache.velocity.context.InternalContextAdapter)>(r4);

        r1[i4] = $r11;

        $r12 = r1[i4];

        if $r12 == null goto label04;

        $r13 = r1[i4];

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        r2[i4] = $r14;

     label04:
        i4 = i4 + 1;

        goto label03;

     label05:
        $r5 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $z0 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: boolean strictRef>;

        $r6 = staticinvoke <org.apache.velocity.util.ClassUtils: org.apache.velocity.util.introspection.VelMethod getMethod(java.lang.String,java.lang.Object[],java.lang.Class[],java.lang.Object,org.apache.velocity.context.InternalContextAdapter,org.apache.velocity.runtime.parser.node.SimpleNode,boolean)>($r5, r1, r2, r3, r4, r0, $z0);

        if $r6 != null goto label06;

        return null;

     label06:
        $r7 = interfaceinvoke $r6.<org.apache.velocity.util.introspection.VelMethod: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r3, r1);

        if $r7 != null goto label08;

        $r8 = interfaceinvoke $r6.<org.apache.velocity.util.introspection.VelMethod: java.lang.Class getReturnType()>();

        $r9 = <java.lang.Void: java.lang.Class TYPE>;

        if $r8 != $r9 goto label08;

     label07:
        return "";

     label08:
        return $r7;

     label09:
        $r29 := @caughtexception;

        $r30 = virtualinvoke $r29.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getTargetException()>();

        $r31 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.Object handleInvocationException(java.lang.Object,org.apache.velocity.context.InternalContextAdapter,java.lang.Throwable)>(r3, r4, $r30);

        return $r31;

     label10:
        $r27 := @caughtexception;

        $r28 = specialinvoke r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.Object handleInvocationException(java.lang.Object,org.apache.velocity.context.InternalContextAdapter,java.lang.Throwable)>(r3, r4, $r27);

        return $r28;

     label11:
        $r26 := @caughtexception;

        throw $r26;

     label12:
        $r15 := @caughtexception;

        $r16 = new java.lang.StringBuffer;

        specialinvoke $r16.<java.lang.StringBuffer: void <init>()>();

        $r17 = virtualinvoke $r16.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("ASTMethod.execute() : exception invoking method \'");

        $r18 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $r19 = virtualinvoke $r17.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r18);

        $r20 = virtualinvoke $r19.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in ");

        $r21 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>();

        $r22 = virtualinvoke $r20.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r21);

        $r23 = virtualinvoke $r22.<java.lang.StringBuffer: java.lang.String toString()>();

        $r24 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: org.apache.velocity.runtime.log.Log log>;

        virtualinvoke $r24.<org.apache.velocity.runtime.log.Log: void error(java.lang.Object,java.lang.Throwable)>($r23, $r15);

        $r25 = new org.apache.velocity.exception.VelocityException;

        specialinvoke $r25.<org.apache.velocity.exception.VelocityException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r15);

        throw $r25;

        catch java.lang.reflect.InvocationTargetException from label06 to label07 with label09;
        catch java.lang.IllegalArgumentException from label06 to label07 with label10;
        catch java.lang.RuntimeException from label06 to label07 with label11;
        catch java.lang.Exception from label06 to label07 with label12;
    }

    private java.lang.Object handleInvocationException(java.lang.Object, org.apache.velocity.context.InternalContextAdapter, java.lang.Throwable)
    {
        org.apache.velocity.exception.MethodInvocationException $r1, $r25;
        boolean $z0, $z1;
        java.lang.Exception $r20, $r24;
        java.lang.Throwable r0;
        org.apache.velocity.runtime.RuntimeServices $r18;
        java.lang.StringBuffer $r2, $r3, $r6, $r7, $r10, $r11, $r13, $r26, $r27, $r29, $r30, $r32, $r33, $r35;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r5, $r12, $r14, $r15, $r16, $r21, $r28, $r34, $r36, $r37, $r38;
        org.apache.velocity.runtime.parser.node.ASTMethod r4;
        org.apache.velocity.context.InternalContextAdapter r17;
        java.lang.Object r8, $r22;
        java.lang.Class $r9, $r19, $r31;
        org.apache.velocity.runtime.directive.StopCommand $r23;

        r4 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        r8 := @parameter0: java.lang.Object;

        r17 := @parameter1: org.apache.velocity.context.InternalContextAdapter;

        r0 := @parameter2: java.lang.Throwable;

        $z0 = r0 instanceof org.apache.velocity.runtime.directive.StopCommand;

        if $z0 == 0 goto label1;

        $r23 = (org.apache.velocity.runtime.directive.StopCommand) r0;

        throw $r23;

     label1:
        $z1 = r0 instanceof java.lang.Exception;

        if $z1 == 0 goto label5;

     label2:
        $r18 = r4.<org.apache.velocity.runtime.parser.node.ASTMethod: org.apache.velocity.runtime.RuntimeServices rsvc>;

        $r19 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        $r21 = r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $r20 = (java.lang.Exception) r0;

        $r22 = staticinvoke <org.apache.velocity.app.event.EventHandlerUtil: java.lang.Object methodException(org.apache.velocity.runtime.RuntimeServices,org.apache.velocity.context.InternalContextAdapter,java.lang.Class,java.lang.String,java.lang.Exception)>($r18, r17, $r19, $r21, $r20);

     label3:
        return $r22;

     label4:
        $r24 := @caughtexception;

        $r25 = new org.apache.velocity.exception.MethodInvocationException;

        $r26 = new java.lang.StringBuffer;

        specialinvoke $r26.<java.lang.StringBuffer: void <init>()>();

        $r27 = virtualinvoke $r26.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invocation of method \'");

        $r28 = r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $r29 = virtualinvoke $r27.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r28);

        $r30 = virtualinvoke $r29.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in  ");

        $r31 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        $r32 = virtualinvoke $r30.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r31);

        $r33 = virtualinvoke $r32.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" threw exception ");

        $r34 = virtualinvoke $r24.<java.lang.Exception: java.lang.String toString()>();

        $r35 = virtualinvoke $r33.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r34);

        $r36 = virtualinvoke $r35.<java.lang.StringBuffer: java.lang.String toString()>();

        $r37 = r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $r38 = virtualinvoke r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String getTemplateName()>();

        $i2 = virtualinvoke r4.<org.apache.velocity.runtime.parser.node.ASTMethod: int getLine()>();

        $i3 = virtualinvoke r4.<org.apache.velocity.runtime.parser.node.ASTMethod: int getColumn()>();

        specialinvoke $r25.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r36, $r24, $r37, $r38, $i2, $i3);

        throw $r25;

     label5:
        $r1 = new org.apache.velocity.exception.MethodInvocationException;

        $r2 = new java.lang.StringBuffer;

        specialinvoke $r2.<java.lang.StringBuffer: void <init>()>();

        $r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("Invocation of method \'");

        $r5 = r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $r6 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5);

        $r7 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>("\' in  ");

        $r9 = virtualinvoke r8.<java.lang.Object: java.lang.Class getClass()>();

        $r10 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>($r9);

        $r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" threw exception ");

        $r12 = virtualinvoke r0.<java.lang.Throwable: java.lang.String toString()>();

        $r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r12);

        $r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>();

        $r15 = r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        $r16 = virtualinvoke r4.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String getTemplateName()>();

        $i0 = virtualinvoke r4.<org.apache.velocity.runtime.parser.node.ASTMethod: int getLine()>();

        $i1 = virtualinvoke r4.<org.apache.velocity.runtime.parser.node.ASTMethod: int getColumn()>();

        specialinvoke $r1.<org.apache.velocity.exception.MethodInvocationException: void <init>(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.String,int,int)>($r14, r0, $r15, $r16, $i0, $i1);

        throw $r1;

        catch java.lang.Exception from label2 to label3 with label4;
    }

    public java.lang.String getMethodName()
    {
        java.lang.String $r1;
        org.apache.velocity.runtime.parser.node.ASTMethod r0;

        r0 := @this: org.apache.velocity.runtime.parser.node.ASTMethod;

        $r1 = r0.<org.apache.velocity.runtime.parser.node.ASTMethod: java.lang.String methodName>;

        return $r1;
    }
}
