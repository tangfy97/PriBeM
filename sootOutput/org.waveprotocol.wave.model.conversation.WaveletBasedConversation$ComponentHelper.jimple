final class org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper extends java.lang.Object
{
    final org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0;

    void <init>(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper;

        r1 := @parameter0: org.waveprotocol.wave.model.conversation.WaveletBasedConversation;

        r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    org.waveprotocol.wave.model.conversation.WaveletBasedConversation getConversation()
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        return $r1;
    }

    java.lang.String createThreadId()
    {
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper r0;
        java.lang.String $r3;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r1;
        org.waveprotocol.wave.model.id.IdGenerator $r2;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.id.IdGenerator access$000(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r1);

        $r3 = interfaceinvoke $r2.<org.waveprotocol.wave.model.id.IdGenerator: java.lang.String peekBlipId()>();

        return $r3;
    }

    org.waveprotocol.wave.model.wave.Blip createBlip(org.waveprotocol.wave.model.document.operation.DocInitialization)
    {
        org.waveprotocol.wave.model.document.util.XmlStringBuilder $r11;
        org.waveprotocol.wave.model.wave.Blip $r6;
        org.waveprotocol.wave.model.document.operation.DocInitialization r7;
        org.waveprotocol.wave.model.document.Document $r8, $r12;
        org.waveprotocol.wave.model.document.util.Point$El $r10;
        org.waveprotocol.wave.model.id.IdGenerator $r4;
        org.waveprotocol.wave.model.document.operation.Nindo $r13;
        org.waveprotocol.wave.model.wave.ObservableWavelet $r2;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper r0;
        java.lang.Object $r9;
        java.lang.String $r5;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r1, $r3;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper;

        r7 := @parameter0: org.waveprotocol.wave.model.document.operation.DocInitialization;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.wave.ObservableWavelet access$100(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r1);

        $r3 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r4 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.id.IdGenerator access$000(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r3);

        $r5 = interfaceinvoke $r4.<org.waveprotocol.wave.model.id.IdGenerator: java.lang.String newBlipId()>();

        $r6 = interfaceinvoke $r2.<org.waveprotocol.wave.model.wave.ObservableWavelet: org.waveprotocol.wave.model.wave.Blip createBlip(java.lang.String)>($r5);

        if r7 == null goto label1;

        $r12 = interfaceinvoke $r6.<org.waveprotocol.wave.model.wave.Blip: org.waveprotocol.wave.model.document.Document getContent()>();

        $r13 = staticinvoke <org.waveprotocol.wave.model.document.operation.Nindo: org.waveprotocol.wave.model.document.operation.Nindo fromDocOp(org.waveprotocol.wave.model.document.operation.DocOp,boolean)>(r7, 0);

        interfaceinvoke $r12.<org.waveprotocol.wave.model.document.Document: void hackConsume(org.waveprotocol.wave.model.document.operation.Nindo)>($r13);

        goto label2;

     label1:
        $r8 = interfaceinvoke $r6.<org.waveprotocol.wave.model.wave.Blip: org.waveprotocol.wave.model.document.Document getContent()>();

        $r9 = interfaceinvoke $r8.<org.waveprotocol.wave.model.document.Document: java.lang.Object getDocumentElement()>();

        $r10 = staticinvoke <org.waveprotocol.wave.model.document.util.Point: org.waveprotocol.wave.model.document.util.Point$El end(java.lang.Object)>($r9);

        $r11 = <org.waveprotocol.wave.model.conversation.Blips: org.waveprotocol.wave.model.document.util.XmlStringBuilder INITIAL_CONTENT>;

        interfaceinvoke $r8.<org.waveprotocol.wave.model.document.Document: java.lang.Object insertXml(org.waveprotocol.wave.model.document.util.Point,org.waveprotocol.wave.model.document.util.XmlStringBuilder)>($r10, $r11);

     label2:
        return $r6;
    }

    org.waveprotocol.wave.model.wave.Blip getBlip(java.lang.String)
    {
        org.waveprotocol.wave.model.wave.Blip $r4;
        org.waveprotocol.wave.model.wave.ObservableWavelet $r2;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper r0;
        java.lang.String r3;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper;

        r3 := @parameter0: java.lang.String;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.wave.ObservableWavelet access$100(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r1);

        $r4 = interfaceinvoke $r2.<org.waveprotocol.wave.model.wave.ObservableWavelet: org.waveprotocol.wave.model.wave.Blip getBlip(java.lang.String)>(r3);

        return $r4;
    }

    org.waveprotocol.wave.model.wave.SourcesEvents getWaveletEventSource()
    {
        org.waveprotocol.wave.model.wave.ObservableWavelet $r2;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper r0;
        org.waveprotocol.wave.model.conversation.WaveletBasedConversation $r1;

        r0 := @this: org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper;

        $r1 = r0.<org.waveprotocol.wave.model.conversation.WaveletBasedConversation$ComponentHelper: org.waveprotocol.wave.model.conversation.WaveletBasedConversation this$0>;

        $r2 = staticinvoke <org.waveprotocol.wave.model.conversation.WaveletBasedConversation: org.waveprotocol.wave.model.wave.ObservableWavelet access$100(org.waveprotocol.wave.model.conversation.WaveletBasedConversation)>($r1);

        return $r2;
    }
}
