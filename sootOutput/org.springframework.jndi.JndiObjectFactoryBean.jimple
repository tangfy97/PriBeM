public class org.springframework.jndi.JndiObjectFactoryBean extends org.springframework.jndi.JndiObjectLocator implements org.springframework.beans.factory.FactoryBean, org.springframework.beans.factory.BeanClassLoaderAware
{
    private java.lang.Class[] proxyInterfaces;
    private boolean lookupOnStartup;
    private boolean cache;
    private boolean exposeAccessContext;
    private java.lang.Object defaultObject;
    private java.lang.ClassLoader beanClassLoader;
    private java.lang.Object jndiObject;

    public void <init>()
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.ClassLoader $r1;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        specialinvoke r0.<org.springframework.jndi.JndiObjectLocator: void <init>()>();

        r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean lookupOnStartup> = 1;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean cache> = 1;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean exposeAccessContext> = 0;

        $r1 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader getDefaultClassLoader()>();

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.ClassLoader beanClassLoader> = $r1;

        return;
    }

    public void setProxyInterface(java.lang.Class)
    {
        java.lang.Class[] $r1;
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.Class r2;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        r2 := @parameter0: java.lang.Class;

        $r1 = newarray (java.lang.Class)[1];

        $r1[0] = r2;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces> = $r1;

        return;
    }

    public void setProxyInterfaces(java.lang.Class[])
    {
        java.lang.Class[] r1;
        org.springframework.jndi.JndiObjectFactoryBean r0;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        r1 := @parameter0: java.lang.Class[];

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces> = r1;

        return;
    }

    public void setLookupOnStartup(boolean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        boolean z0;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean lookupOnStartup> = z0;

        return;
    }

    public void setCache(boolean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        boolean z0;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean cache> = z0;

        return;
    }

    public void setExposeAccessContext(boolean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        boolean z0;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        z0 := @parameter0: boolean;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean exposeAccessContext> = z0;

        return;
    }

    public void setDefaultObject(java.lang.Object)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.Object r1;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        r1 := @parameter0: java.lang.Object;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject> = r1;

        return;
    }

    public void setBeanClassLoader(java.lang.ClassLoader)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.ClassLoader r1;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        r1 := @parameter0: java.lang.ClassLoader;

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.ClassLoader beanClassLoader> = r1;

        return;
    }

    public void afterPropertiesSet() throws java.lang.IllegalArgumentException, javax.naming.NamingException
    {
        java.lang.String $r15, $r19, $r22;
        boolean $z0, $z1, $z2, $z3;
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.Class[] $r1;
        java.lang.IllegalArgumentException $r3, $r8;
        java.lang.Object $r2, $r4, $r7, $r10, $r13, $r23, $r24;
        java.lang.Class $r5, $r6, $r14, $r18;
        java.lang.StringBuilder $r9, $r11, $r12, $r16, $r17, $r20, $r21;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        specialinvoke r0.<org.springframework.jndi.JndiObjectLocator: void afterPropertiesSet()>();

        $r1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        if $r1 != null goto label1;

        $z0 = r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean lookupOnStartup>;

        if $z0 == 0 goto label1;

        $z1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean cache>;

        if $z1 == 0 goto label1;

        $z2 = r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean exposeAccessContext>;

        if $z2 == 0 goto label3;

     label1:
        $r23 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

        if $r23 == null goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("\'defaultObject\' is not supported in combination with \'proxyInterface\'");

        throw $r3;

     label2:
        $r2 = staticinvoke <org.springframework.jndi.JndiObjectFactoryBean$JndiObjectProxyFactory: java.lang.Object access$0(org.springframework.jndi.JndiObjectFactoryBean)>(r0);

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object jndiObject> = $r2;

        goto label5;

     label3:
        $r4 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

        if $r4 == null goto label4;

        $r5 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class getExpectedType()>();

        if $r5 == null goto label4;

        $r6 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class getExpectedType()>();

        $r7 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

        $z3 = virtualinvoke $r6.<java.lang.Class: boolean isInstance(java.lang.Object)>($r7);

        if $z3 != 0 goto label4;

        $r8 = new java.lang.IllegalArgumentException;

        $r9 = new java.lang.StringBuilder;

        specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("Default object [");

        $r10 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

        $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);

        $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] of type [");

        $r13 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r14.<java.lang.Class: java.lang.String getName()>();

        $r16 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);

        $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not of expected type [");

        $r18 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class getExpectedType()>();

        $r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>();

        $r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);

        $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r22);

        throw $r8;

     label4:
        $r24 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object lookupWithFallback()>();

        r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object jndiObject> = $r24;

     label5:
        return;
    }

    protected java.lang.Object lookupWithFallback() throws javax.naming.NamingException
    {
        java.lang.Throwable $r5;
        javax.naming.NamingException $r7;
        java.lang.Thread $r4, $r6, $r11;
        java.lang.String $r15;
        boolean $z0, $z1;
        org.springframework.jndi.JndiObjectFactoryBean r0;
        org.springframework.jndi.TypeMismatchNamingException $r17;
        java.lang.Object $r3, $r8, $r18;
        org.apache.commons.logging.Log $r9, $r10, $r13, $r16;
        java.lang.StringBuilder $r12, $r14;
        java.lang.ClassLoader $r1, $r2;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        $r1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r2 = staticinvoke <org.springframework.util.ClassUtils: java.lang.ClassLoader overrideThreadContextClassLoader(java.lang.ClassLoader)>($r1);

     label01:
        $r3 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object lookup()>();

     label02:
        if $r2 == null goto label03;

        $r4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r4.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r2);

     label03:
        return $r3;

     label04:
        $r17 := @caughtexception;

        throw $r17;

     label05:
        $r7 := @caughtexception;

        $r8 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

        if $r8 == null goto label10;

        $r9 = r0.<org.springframework.jndi.JndiObjectFactoryBean: org.apache.commons.logging.Log logger>;

        $z0 = interfaceinvoke $r9.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();

        if $z0 == 0 goto label06;

        $r16 = r0.<org.springframework.jndi.JndiObjectFactoryBean: org.apache.commons.logging.Log logger>;

        interfaceinvoke $r16.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>("JNDI lookup failed - returning specified default object instead", $r7);

        goto label07;

     label06:
        $r10 = r0.<org.springframework.jndi.JndiObjectFactoryBean: org.apache.commons.logging.Log logger>;

        $z1 = interfaceinvoke $r10.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();

        if $z1 == 0 goto label07;

        $r13 = r0.<org.springframework.jndi.JndiObjectFactoryBean: org.apache.commons.logging.Log logger>;

        $r12 = new java.lang.StringBuilder;

        specialinvoke $r12.<java.lang.StringBuilder: void <init>(java.lang.String)>("JNDI lookup failed - returning specified default object instead: ");

        $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7);

        $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();

        interfaceinvoke $r13.<org.apache.commons.logging.Log: void info(java.lang.Object)>($r15);

     label07:
        $r18 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object defaultObject>;

     label08:
        if $r2 == null goto label09;

        $r11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r11.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r2);

     label09:
        return $r18;

     label10:
        throw $r7;

     label11:
        $r5 := @caughtexception;

        if $r2 == null goto label12;

        $r6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();

        virtualinvoke $r6.<java.lang.Thread: void setContextClassLoader(java.lang.ClassLoader)>($r2);

     label12:
        throw $r5;

        catch org.springframework.jndi.TypeMismatchNamingException from label01 to label02 with label04;
        catch javax.naming.NamingException from label01 to label02 with label05;
        catch java.lang.Throwable from label01 to label02 with label11;
        catch java.lang.Throwable from label04 to label08 with label11;
        catch java.lang.Throwable from label10 to label11 with label11;
    }

    public java.lang.Object getObject()
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.Object $r1;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        $r1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object jndiObject>;

        return $r1;
    }

    public java.lang.Class getObjectType()
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.Class[] $r1, $r6, $r7, $r8, $r10;
        int $i0, $i1;
        java.lang.Object $r2, $r4;
        java.lang.Class $r3, $r5, $r9, $r11;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        $r1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        if $r1 == null goto label2;

        $r6 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        $i0 = lengthof $r6;

        if $i0 != 1 goto label1;

        $r10 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        $r11 = $r10[0];

        return $r11;

     label1:
        $r7 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        $i1 = lengthof $r7;

        if $i1 <= 1 goto label2;

        $r8 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        $r9 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class createCompositeInterface(java.lang.Class[])>($r8);

        return $r9;

     label2:
        $r2 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object jndiObject>;

        if $r2 == null goto label3;

        $r4 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Object jndiObject>;

        $r5 = virtualinvoke $r4.<java.lang.Object: java.lang.Class getClass()>();

        return $r5;

     label3:
        $r3 = virtualinvoke r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class getExpectedType()>();

        return $r3;
    }

    public boolean isSingleton()
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;

        r0 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        return 1;
    }

    protected java.lang.Class createCompositeInterface(java.lang.Class[])
    {
        org.springframework.jndi.JndiObjectFactoryBean r1;
        java.lang.Class[] r0;
        java.lang.Class $r3;
        java.lang.ClassLoader $r2;

        r1 := @this: org.springframework.jndi.JndiObjectFactoryBean;

        r0 := @parameter0: java.lang.Class[];

        $r2 = r1.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.ClassLoader beanClassLoader>;

        $r3 = staticinvoke <org.springframework.util.ClassUtils: java.lang.Class createCompositeInterface(java.lang.Class[],java.lang.ClassLoader)>(r0, $r2);

        return $r3;
    }

    static boolean access$0(org.springframework.jndi.JndiObjectFactoryBean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.jndi.JndiObjectFactoryBean;

        $z0 = r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean lookupOnStartup>;

        return $z0;
    }

    static boolean access$1(org.springframework.jndi.JndiObjectFactoryBean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.jndi.JndiObjectFactoryBean;

        $z0 = r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean cache>;

        return $z0;
    }

    static java.lang.Class[] access$2(org.springframework.jndi.JndiObjectFactoryBean)
    {
        java.lang.Class[] $r1;
        org.springframework.jndi.JndiObjectFactoryBean r0;

        r0 := @parameter0: org.springframework.jndi.JndiObjectFactoryBean;

        $r1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.Class[] proxyInterfaces>;

        return $r1;
    }

    static java.lang.ClassLoader access$3(org.springframework.jndi.JndiObjectFactoryBean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        java.lang.ClassLoader $r1;

        r0 := @parameter0: org.springframework.jndi.JndiObjectFactoryBean;

        $r1 = r0.<org.springframework.jndi.JndiObjectFactoryBean: java.lang.ClassLoader beanClassLoader>;

        return $r1;
    }

    static boolean access$4(org.springframework.jndi.JndiObjectFactoryBean)
    {
        org.springframework.jndi.JndiObjectFactoryBean r0;
        boolean $z0;

        r0 := @parameter0: org.springframework.jndi.JndiObjectFactoryBean;

        $z0 = r0.<org.springframework.jndi.JndiObjectFactoryBean: boolean exposeAccessContext>;

        return $z0;
    }
}
