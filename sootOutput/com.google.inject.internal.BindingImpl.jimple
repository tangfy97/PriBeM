public abstract class com.google.inject.internal.BindingImpl extends java.lang.Object implements com.google.inject.Binding
{
    private final com.google.inject.internal.InjectorImpl injector;
    private final com.google.inject.Key key;
    private final java.lang.Object source;
    private final com.google.inject.internal.Scoping scoping;
    private final com.google.inject.internal.InternalFactory internalFactory;
    private volatile com.google.inject.Provider provider;

    public void <init>(com.google.inject.internal.InjectorImpl, com.google.inject.Key, java.lang.Object, com.google.inject.internal.InternalFactory, com.google.inject.internal.Scoping)
    {
        com.google.inject.internal.InjectorImpl r1;
        com.google.inject.internal.Scoping r5;
        com.google.inject.internal.BindingImpl r0;
        com.google.inject.internal.InternalFactory r4;
        com.google.inject.Key r2;
        java.lang.Object r3;

        r0 := @this: com.google.inject.internal.BindingImpl;

        r1 := @parameter0: com.google.inject.internal.InjectorImpl;

        r2 := @parameter1: com.google.inject.Key;

        r3 := @parameter2: java.lang.Object;

        r4 := @parameter3: com.google.inject.internal.InternalFactory;

        r5 := @parameter4: com.google.inject.internal.Scoping;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InjectorImpl injector> = r1;

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.Key key> = r2;

        r0.<com.google.inject.internal.BindingImpl: java.lang.Object source> = r3;

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InternalFactory internalFactory> = r4;

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping scoping> = r5;

        return;
    }

    protected void <init>(java.lang.Object, com.google.inject.Key, com.google.inject.internal.Scoping)
    {
        com.google.inject.internal.Scoping r3;
        com.google.inject.internal.BindingImpl r0;
        com.google.inject.Key r2;
        java.lang.Object r1;

        r0 := @this: com.google.inject.internal.BindingImpl;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: com.google.inject.Key;

        r3 := @parameter2: com.google.inject.internal.Scoping;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InternalFactory internalFactory> = null;

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InjectorImpl injector> = null;

        r0.<com.google.inject.internal.BindingImpl: java.lang.Object source> = r1;

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.Key key> = r2;

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping scoping> = r3;

        return;
    }

    public com.google.inject.Key getKey()
    {
        com.google.inject.Key $r1;
        com.google.inject.internal.BindingImpl r0;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.Key key>;

        return $r1;
    }

    public java.lang.Object getSource()
    {
        java.lang.Object $r1;
        com.google.inject.internal.BindingImpl r0;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.BindingImpl: java.lang.Object source>;

        return $r1;
    }

    public com.google.inject.Provider getProvider()
    {
        java.lang.UnsupportedOperationException $r7;
        com.google.inject.Key $r4;
        com.google.inject.Provider $r1, $r2, $r6;
        com.google.inject.internal.InjectorImpl $r3, $r5;
        com.google.inject.internal.BindingImpl r0;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.Provider provider>;

        if $r1 != null goto label2;

        $r3 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InjectorImpl injector>;

        if $r3 != null goto label1;

        $r7 = new java.lang.UnsupportedOperationException;

        specialinvoke $r7.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("getProvider() not supported for module bindings");

        throw $r7;

     label1:
        $r5 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InjectorImpl injector>;

        $r4 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.Key key>;

        $r6 = virtualinvoke $r5.<com.google.inject.internal.InjectorImpl: com.google.inject.Provider getProvider(com.google.inject.Key)>($r4);

        r0.<com.google.inject.internal.BindingImpl: com.google.inject.Provider provider> = $r6;

     label2:
        $r2 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.Provider provider>;

        return $r2;
    }

    public com.google.inject.internal.InternalFactory getInternalFactory()
    {
        com.google.inject.internal.BindingImpl r0;
        com.google.inject.internal.InternalFactory $r1;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InternalFactory internalFactory>;

        return $r1;
    }

    public com.google.inject.internal.Scoping getScoping()
    {
        com.google.inject.internal.Scoping $r1;
        com.google.inject.internal.BindingImpl r0;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping scoping>;

        return $r1;
    }

    public boolean isConstant()
    {
        com.google.inject.internal.BindingImpl r0;
        boolean $z0;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $z0 = r0 instanceof com.google.inject.spi.InstanceBinding;

        return $z0;
    }

    public java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor)
    {
        com.google.inject.spi.ElementVisitor r0;
        java.lang.Object $r2;
        com.google.inject.internal.BindingImpl r1;

        r1 := @this: com.google.inject.internal.BindingImpl;

        r0 := @parameter0: com.google.inject.spi.ElementVisitor;

        $r2 = interfaceinvoke r0.<com.google.inject.spi.ElementVisitor: java.lang.Object visit(com.google.inject.Binding)>(r1);

        return $r2;
    }

    public java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor)
    {
        com.google.inject.internal.Scoping $r2;
        com.google.inject.internal.BindingImpl r0;
        java.lang.Object $r3;
        com.google.inject.spi.BindingScopingVisitor r1;

        r0 := @this: com.google.inject.internal.BindingImpl;

        r1 := @parameter0: com.google.inject.spi.BindingScopingVisitor;

        $r2 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping scoping>;

        $r3 = virtualinvoke $r2.<com.google.inject.internal.Scoping: java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor)>(r1);

        return $r3;
    }

    protected com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping)
    {
        java.lang.AssertionError $r0;
        com.google.inject.internal.Scoping r2;
        com.google.inject.internal.BindingImpl r1;

        r1 := @this: com.google.inject.internal.BindingImpl;

        r2 := @parameter0: com.google.inject.internal.Scoping;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;
    }

    protected com.google.inject.internal.BindingImpl withKey(com.google.inject.Key)
    {
        com.google.inject.Key r2;
        java.lang.AssertionError $r0;
        com.google.inject.internal.BindingImpl r1;

        r1 := @this: com.google.inject.internal.BindingImpl;

        r2 := @parameter0: com.google.inject.Key;

        $r0 = new java.lang.AssertionError;

        specialinvoke $r0.<java.lang.AssertionError: void <init>()>();

        throw $r0;
    }

    public java.lang.String toString()
    {
        com.google.inject.internal.Scoping $r4;
        com.google.inject.Key $r2;
        com.google.inject.internal.util.$ToStringBuilder $r0, $r3, $r5, $r7;
        com.google.inject.internal.BindingImpl r1;
        java.lang.Object $r6;
        java.lang.String $r8;

        r1 := @this: com.google.inject.internal.BindingImpl;

        $r0 = new com.google.inject.internal.util.$ToStringBuilder;

        specialinvoke $r0.<com.google.inject.internal.util.$ToStringBuilder: void <init>(java.lang.Class)>(class "Lcom/google/inject/Binding;");

        $r2 = r1.<com.google.inject.internal.BindingImpl: com.google.inject.Key key>;

        $r3 = virtualinvoke $r0.<com.google.inject.internal.util.$ToStringBuilder: com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object)>("key", $r2);

        $r4 = r1.<com.google.inject.internal.BindingImpl: com.google.inject.internal.Scoping scoping>;

        $r5 = virtualinvoke $r3.<com.google.inject.internal.util.$ToStringBuilder: com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object)>("scope", $r4);

        $r6 = r1.<com.google.inject.internal.BindingImpl: java.lang.Object source>;

        $r7 = virtualinvoke $r5.<com.google.inject.internal.util.$ToStringBuilder: com.google.inject.internal.util.$ToStringBuilder add(java.lang.String,java.lang.Object)>("source", $r6);

        $r8 = virtualinvoke $r7.<com.google.inject.internal.util.$ToStringBuilder: java.lang.String toString()>();

        return $r8;
    }

    public com.google.inject.internal.InjectorImpl getInjector()
    {
        com.google.inject.internal.InjectorImpl $r1;
        com.google.inject.internal.BindingImpl r0;

        r0 := @this: com.google.inject.internal.BindingImpl;

        $r1 = r0.<com.google.inject.internal.BindingImpl: com.google.inject.internal.InjectorImpl injector>;

        return $r1;
    }
}
