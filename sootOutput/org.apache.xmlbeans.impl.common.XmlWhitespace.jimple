public class org.apache.xmlbeans.impl.common.XmlWhitespace extends java.lang.Object
{
    public static final int WS_UNSPECIFIED;
    public static final int WS_PRESERVE;
    public static final int WS_REPLACE;
    public static final int WS_COLLAPSE;

    public void <init>()
    {
        org.apache.xmlbeans.impl.common.XmlWhitespace r0;

        r0 := @this: org.apache.xmlbeans.impl.common.XmlWhitespace;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static boolean isSpace(char)
    {
        int $i1;
        char c0;

        c0 := @parameter0: char;

        $i1 = (int) c0;

        lookupswitch($i1)
        {
            case 9: goto label1;
            case 10: goto label1;
            case 13: goto label1;
            case 32: goto label1;
            default: goto label2;
        };

     label1:
        return 1;

     label2:
        return 0;
    }

    public static boolean isAllSpace(java.lang.String)
    {
        int $i0, i2;
        char $c1;
        java.lang.String r0;
        boolean $z0;

        r0 := @parameter0: java.lang.String;

        i2 = 0;

        $i0 = virtualinvoke r0.<java.lang.String: int length()>();

     label1:
        if i2 >= $i0 goto label3;

        $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i2);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: boolean isSpace(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static boolean isAllSpace(java.lang.CharSequence)
    {
        java.lang.CharSequence r0;
        int $i0, i2;
        char $c1;
        boolean $z0;

        r0 := @parameter0: java.lang.CharSequence;

        i2 = 0;

        $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>();

     label1:
        if i2 >= $i0 goto label3;

        $c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i2);

        $z0 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: boolean isSpace(char)>($c1);

        if $z0 != 0 goto label2;

        return 0;

     label2:
        i2 = i2 + 1;

        goto label1;

     label3:
        return 1;
    }

    public static java.lang.String collapse(java.lang.String)
    {
        java.lang.String r0, $r1;

        r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <org.apache.xmlbeans.impl.common.XmlWhitespace: java.lang.String collapse(java.lang.String,int)>(r0, 3);

        return $r1;
    }

    public static java.lang.String collapse(java.lang.String, int)
    {
        int i0, $i1, $i2, $i3, $i4, $i6, $i7, $i10, $i11, $i14, $i16, $i18, $i21, $i23, i25, i26, $i27, $i28, $i30, $i31, $i32, $i33, $i34, $i35, $i36, $i37, $i38, $i39, $i40;
        java.lang.String r1, $r3;
        char $c5, $c8, $c9, $c12, $c13, $c15, $c17, $c19, $c20, $c22, $c24, $c29;
        char[] $r2;

        r1 := @parameter0: java.lang.String;

        i0 := @parameter1: int;

        if i0 == 1 goto label01;

        if i0 != 0 goto label02;

     label01:
        return r1;

     label02:
        $i1 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10);

        if $i1 < 0 goto label03;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(10, 32);

     label03:
        $i2 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(9);

        if $i2 < 0 goto label04;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(9, 32);

     label04:
        $i3 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13);

        if $i3 < 0 goto label05;

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String replace(char,char)>(13, 32);

     label05:
        if i0 != 2 goto label06;

        return r1;

     label06:
        i25 = 0;

        $i4 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i4 != 0 goto label07;

        return r1;

     label07:
        $c5 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0);

        $i31 = (int) $c5;

        if $i31 == 32 goto label15;

        i25 = 2;

     label08:
        if i25 >= $i4 goto label12;

        $c20 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i25);

        $i32 = (int) $c20;

        if $i32 != 32 goto label11;

        $i21 = i25 - 1;

        $c22 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i21);

        $i33 = (int) $c22;

        if $i33 != 32 goto label09;

        goto label14;

     label09:
        $i23 = $i4 - 1;

        if i25 != $i23 goto label10;

        goto label14;

     label10:
        i25 = i25 + 1;

        $c24 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i25);

        $i34 = (int) $c24;

        if $i34 != 32 goto label11;

        goto label14;

     label11:
        i25 = i25 + 2;

        goto label08;

     label12:
        if i25 != $i4 goto label13;

        $i18 = i25 - 1;

        $c19 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i18);

        $i35 = (int) $c19;

        if $i35 != 32 goto label13;

        goto label14;

     label13:
        return r1;

     label14:
        i26 = i25;

        goto label17;

     label15:
        $i6 = i25 + 1;

        $i7 = virtualinvoke r1.<java.lang.String: int length()>();

        if $i6 >= $i7 goto label16;

        $i16 = i25 + 1;

        $c17 = virtualinvoke r1.<java.lang.String: char charAt(int)>($i16);

        $i36 = (int) $c17;

        if $i36 != 32 goto label16;

        i25 = i25 + 1;

        goto label15;

     label16:
        i26 = 0;

     label17:
        $r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>();

     label18:
        i25 = i25 + 1;

        if i25 < $i4 goto label19;

        goto label23;

     label19:
        $c8 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i25);

        $i37 = (int) $c8;

        if $i37 == 32 goto label18;

        goto label20;

     label20:
        $i27 = i26;

        i26 = i26 + 1;

        $i28 = i25;

        i25 = i25 + 1;

        $c29 = $r2[$i28];

        $r2[$i27] = $c29;

        if i25 < $i4 goto label21;

        goto label23;

     label21:
        $c9 = $r2[i25];

        $i38 = (int) $c9;

        if $i38 != 32 goto label20;

        $i10 = i26;

        i26 = i26 + 1;

        $i11 = i25;

        i25 = i25 + 1;

        $c12 = $r2[$i11];

        $r2[$i10] = $c12;

        if i25 < $i4 goto label22;

        goto label23;

     label22:
        $c13 = $r2[i25];

        $i39 = (int) $c13;

        if $i39 != 32 goto label20;

        goto label18;

     label23:
        $r3 = new java.lang.String;

        if i26 == 0 goto label24;

        $i14 = i26 - 1;

        $c15 = $r2[$i14];

        $i40 = (int) $c15;

        if $i40 == 32 goto label25;

     label24:
        $i30 = i26;

        goto label26;

     label25:
        $i30 = i26 - 1;

     label26:
        specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i30);

        return $r3;
    }

    public static void <clinit>()
    {
        <org.apache.xmlbeans.impl.common.XmlWhitespace: int WS_COLLAPSE> = 3;

        <org.apache.xmlbeans.impl.common.XmlWhitespace: int WS_REPLACE> = 2;

        <org.apache.xmlbeans.impl.common.XmlWhitespace: int WS_PRESERVE> = 1;

        <org.apache.xmlbeans.impl.common.XmlWhitespace: int WS_UNSPECIFIED> = 0;

        return;
    }
}
