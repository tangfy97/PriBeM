public class org.apache.batik.ext.awt.image.DistantLight extends org.apache.batik.ext.awt.image.AbstractLight
{
    private double azimuth;
    private double elevation;
    private double Lx;
    private double Ly;
    private double Lz;

    public double getAzimuth()
    {
        org.apache.batik.ext.awt.image.DistantLight r0;
        double $d0;

        r0 := @this: org.apache.batik.ext.awt.image.DistantLight;

        $d0 = r0.<org.apache.batik.ext.awt.image.DistantLight: double azimuth>;

        return $d0;
    }

    public double getElevation()
    {
        org.apache.batik.ext.awt.image.DistantLight r0;
        double $d0;

        r0 := @this: org.apache.batik.ext.awt.image.DistantLight;

        $d0 = r0.<org.apache.batik.ext.awt.image.DistantLight: double elevation>;

        return $d0;
    }

    public void <init>(double, double, java.awt.Color)
    {
        java.awt.Color r1;
        double d0, d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        org.apache.batik.ext.awt.image.DistantLight r0;

        r0 := @this: org.apache.batik.ext.awt.image.DistantLight;

        d0 := @parameter0: double;

        d1 := @parameter1: double;

        r1 := @parameter2: java.awt.Color;

        specialinvoke r0.<org.apache.batik.ext.awt.image.AbstractLight: void <init>(java.awt.Color)>(r1);

        r0.<org.apache.batik.ext.awt.image.DistantLight: double azimuth> = d0;

        r0.<org.apache.batik.ext.awt.image.DistantLight: double elevation> = d1;

        $d2 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        $d3 = staticinvoke <java.lang.Math: double cos(double)>($d2);

        $d4 = staticinvoke <java.lang.Math: double toRadians(double)>(d1);

        $d5 = staticinvoke <java.lang.Math: double cos(double)>($d4);

        $d6 = $d3 * $d5;

        r0.<org.apache.batik.ext.awt.image.DistantLight: double Lx> = $d6;

        $d7 = staticinvoke <java.lang.Math: double toRadians(double)>(d0);

        $d8 = staticinvoke <java.lang.Math: double sin(double)>($d7);

        $d9 = staticinvoke <java.lang.Math: double toRadians(double)>(d1);

        $d10 = staticinvoke <java.lang.Math: double cos(double)>($d9);

        $d11 = $d8 * $d10;

        r0.<org.apache.batik.ext.awt.image.DistantLight: double Ly> = $d11;

        $d12 = staticinvoke <java.lang.Math: double toRadians(double)>(d1);

        $d13 = staticinvoke <java.lang.Math: double sin(double)>($d12);

        r0.<org.apache.batik.ext.awt.image.DistantLight: double Lz> = $d13;

        return;
    }

    public boolean isConstant()
    {
        org.apache.batik.ext.awt.image.DistantLight r0;

        r0 := @this: org.apache.batik.ext.awt.image.DistantLight;

        return 1;
    }

    public void getLight(double, double, double, double[])
    {
        org.apache.batik.ext.awt.image.DistantLight r1;
        double[] r0;
        double $d0, $d1, $d2, d3, d4, d5;

        r1 := @this: org.apache.batik.ext.awt.image.DistantLight;

        d3 := @parameter0: double;

        d4 := @parameter1: double;

        d5 := @parameter2: double;

        r0 := @parameter3: double[];

        $d0 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Lx>;

        r0[0] = $d0;

        $d1 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Ly>;

        r0[1] = $d1;

        $d2 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Lz>;

        r0[2] = $d2;

        return;
    }

    public double[][] getLightRow(double, double, double, int, double[][], double[][])
    {
        double[] $r2, $r3, $r4, r7;
        int i0, i1, i2;
        double d0, d1, $d2, $d3, $d4, d5, d6, d7, d8;
        org.apache.batik.ext.awt.image.DistantLight r1;
        double[][] r0, r5, r6;

        r1 := @this: org.apache.batik.ext.awt.image.DistantLight;

        d5 := @parameter0: double;

        d6 := @parameter1: double;

        d7 := @parameter2: double;

        i0 := @parameter3: int;

        r5 := @parameter4: double[][];

        r0 := @parameter5: double[][];

        r6 = r0;

        if r0 != null goto label3;

        r6 = newarray (double[])[i0];

        r7 = newarray (double)[3];

        $d2 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Lx>;

        r7[0] = $d2;

        $d3 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Ly>;

        r7[1] = $d3;

        $d4 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Lz>;

        r7[2] = $d4;

        i1 = 0;

        goto label2;

     label1:
        r6[i1] = r7;

        i1 = i1 + 1;

     label2:
        if i1 < i0 goto label1;

        goto label6;

     label3:
        d8 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Lx>;

        d0 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Ly>;

        d1 = r1.<org.apache.batik.ext.awt.image.DistantLight: double Lz>;

        i2 = 0;

        goto label5;

     label4:
        $r2 = r0[i2];

        $r2[0] = d8;

        $r3 = r0[i2];

        $r3[1] = d0;

        $r4 = r0[i2];

        $r4[2] = d1;

        i2 = i2 + 1;

     label5:
        if i2 < i0 goto label4;

     label6:
        return r6;
    }
}
