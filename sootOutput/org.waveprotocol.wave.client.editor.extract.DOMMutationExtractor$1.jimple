class org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1 extends java.lang.Object implements com.google.gwt.user.client.Command
{
    final org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0;

    void <init>(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)
    {
        org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1 r0;
        org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor r1;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1;

        r1 := @parameter0: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor;

        r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0> = r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void execute()
    {
        int $i0;
        org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor $r1, $r3, $r5, $r9, $r12, $r14, $r16, $r17, $r19, $r22;
        org.waveprotocol.wave.client.editor.selection.content.SelectionHelper $r18;
        org.waveprotocol.wave.client.editor.content.ContentElement r26;
        java.lang.String $r8;
        org.waveprotocol.wave.client.editor.content.ContentRange $r15, $r20, $r23;
        org.waveprotocol.wave.model.document.util.Point $r21, $r24;
        boolean $z0;
        java.util.Iterator $r11;
        java.util.List $r6, $r10, $r13;
        org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1 r0;
        java.lang.StringBuilder $r2, $r4, $r7;
        java.lang.Object $r25;

        r0 := @this: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1;

        $r1 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: boolean access$002(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor,boolean)>($r1, 1);

        $r3 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("nodes to revert: ");

        $r5 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r6 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: java.util.List access$100(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r5);

        $i0 = interfaceinvoke $r6.<java.util.List: int size()>();

        $r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: void access$200(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor,java.lang.String)>($r3, $r8);

        $r9 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r10 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: java.util.List access$100(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r9);

        $r11 = interfaceinvoke $r10.<java.util.List: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r25 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r26 = (org.waveprotocol.wave.client.editor.content.ContentElement) $r25;

        specialinvoke r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: void revertElement(org.waveprotocol.wave.client.editor.content.ContentElement)>(r26);

        goto label1;

     label2:
        $r12 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r13 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: java.util.List access$100(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r12);

        interfaceinvoke $r13.<java.util.List: void clear()>();

        $r14 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r15 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: org.waveprotocol.wave.client.editor.content.ContentRange access$300(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r14);

        if $r15 == null goto label3;

        $r17 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r18 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: org.waveprotocol.wave.client.editor.selection.content.SelectionHelper access$400(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r17);

        $r19 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r20 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: org.waveprotocol.wave.client.editor.content.ContentRange access$300(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r19);

        $r21 = virtualinvoke $r20.<org.waveprotocol.wave.client.editor.content.ContentRange: org.waveprotocol.wave.model.document.util.Point getFirst()>();

        $r22 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        $r23 = staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: org.waveprotocol.wave.client.editor.content.ContentRange access$300(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor)>($r22);

        $r24 = virtualinvoke $r23.<org.waveprotocol.wave.client.editor.content.ContentRange: org.waveprotocol.wave.model.document.util.Point getSecond()>();

        interfaceinvoke $r18.<org.waveprotocol.wave.client.editor.selection.content.SelectionHelper: void setSelectionPoints(org.waveprotocol.wave.model.document.util.Point,org.waveprotocol.wave.model.document.util.Point)>($r21, $r24);

     label3:
        $r16 = r0.<org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor this$0>;

        staticinvoke <org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor: boolean access$002(org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor,boolean)>($r16, 0);

        return;
    }

    private void revertElement(org.waveprotocol.wave.client.editor.content.ContentElement)
    {
        org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1 r1;
        org.waveprotocol.wave.client.editor.content.ContentElement r0;
        boolean $z0;

        r1 := @this: org.waveprotocol.wave.client.editor.extract.DOMMutationExtractor$1;

        r0 := @parameter0: org.waveprotocol.wave.client.editor.content.ContentElement;

        if r0 == null goto label1;

        $z0 = virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: boolean isContentAttached()>();

        if $z0 != 0 goto label2;

     label1:
        return;

     label2:
        virtualinvoke r0.<org.waveprotocol.wave.client.editor.content.ContentElement: void revertImplementation()>();

        return;
    }
}
