public class org.apache.cxf.configuration.spring.SpringBeanMap extends org.apache.cxf.configuration.spring.AbstractSpringBeanMap
{
    private static final long serialVersionUID;

    public void <init>()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void <init>()>();

        return;
    }

    protected void processBeans(org.springframework.context.ApplicationContext)
    {
        org.springframework.beans.factory.config.ConfigurableListableBeanFactory $r6;
        org.springframework.context.ConfigurableApplicationContext r4;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8, $z9;
        java.util.Collection $r26, r37;
        java.util.List $r18;
        java.lang.StringBuilder $r30, $r31, $r33, $r34;
        java.lang.Throwable $r36;
        java.lang.String[] $r3;
        java.util.ArrayList $r13;
        org.springframework.beans.Mergeable $r28;
        int $i0, i1;
        org.springframework.beans.factory.config.BeanDefinition $r8;
        java.lang.String $r7, $r9, $r11, $r17, $r19, $r21, $r23, $r24, $r32, $r35;
        java.util.Iterator $r14, $r15;
        org.springframework.beans.PropertyValue $r12;
        org.springframework.beans.MutablePropertyValues $r10;
        java.lang.RuntimeException $r29;
        org.springframework.context.ApplicationContext r0, $r5;
        org.springframework.beans.factory.config.TypedStringValue $r22;
        org.apache.cxf.configuration.spring.SpringBeanMap r1;
        java.lang.Class $r2;
        java.lang.Object $r16, $r20, $r25, $r27;

        r1 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r0 := @parameter0: org.springframework.context.ApplicationContext;

        if r0 != null goto label01;

        return;

     label01:
        $r2 = r1.<org.apache.cxf.configuration.spring.SpringBeanMap: java.lang.Class type>;

        $r3 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: java.lang.String[] getBeanNamesForType(java.lang.Class)>($r2);

        r4 = (org.springframework.context.ConfigurableApplicationContext) r0;

        i1 = 0;

     label02:
        $i0 = lengthof $r3;

        if i1 >= $i0 goto label19;

        $r6 = interfaceinvoke r4.<org.springframework.context.ConfigurableApplicationContext: org.springframework.beans.factory.config.ConfigurableListableBeanFactory getBeanFactory()>();

        $r7 = $r3[i1];

        $r8 = interfaceinvoke $r6.<org.springframework.beans.factory.config.ConfigurableListableBeanFactory: org.springframework.beans.factory.config.BeanDefinition getBeanDefinition(java.lang.String)>($r7);

        $r9 = $r3[i1];

        $z0 = interfaceinvoke r0.<org.springframework.context.ApplicationContext: boolean isSingleton(java.lang.String)>($r9);

        if $z0 == 0 goto label18;

        $z1 = interfaceinvoke $r8.<org.springframework.beans.factory.config.BeanDefinition: boolean isAbstract()>();

        if $z1 == 0 goto label03;

        goto label18;

     label03:
        r37 = null;

        $r10 = interfaceinvoke $r8.<org.springframework.beans.factory.config.BeanDefinition: org.springframework.beans.MutablePropertyValues getPropertyValues()>();

        $r11 = r1.<org.apache.cxf.configuration.spring.SpringBeanMap: java.lang.String idsProperty>;

        $r12 = virtualinvoke $r10.<org.springframework.beans.MutablePropertyValues: org.springframework.beans.PropertyValue getPropertyValue(java.lang.String)>($r11);

        if $r12 == null goto label06;

        $r27 = virtualinvoke $r12.<org.springframework.beans.PropertyValue: java.lang.Object getValue()>();

        $z5 = $r27 instanceof java.util.Collection;

        if $z5 != 0 goto label04;

        $r29 = new java.lang.RuntimeException;

        $r30 = new java.lang.StringBuilder;

        specialinvoke $r30.<java.lang.StringBuilder: void <init>()>();

        $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The property ");

        $r32 = r1.<org.apache.cxf.configuration.spring.SpringBeanMap: java.lang.String idsProperty>;

        $r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32);

        $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" must be a collection!");

        $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r29.<java.lang.RuntimeException: void <init>(java.lang.String)>($r35);

        throw $r29;

     label04:
        $z6 = $r27 instanceof org.springframework.beans.Mergeable;

        if $z6 == 0 goto label05;

        $r28 = (org.springframework.beans.Mergeable) $r27;

        $z7 = interfaceinvoke $r28.<org.springframework.beans.Mergeable: boolean isMergeEnabled()>();

        if $z7 != 0 goto label06;

        r37 = (java.util.Collection) $r27;

        goto label06;

     label05:
        r37 = (java.util.Collection) $r27;

     label06:
        if r37 != null goto label08;

        $r24 = $r3[i1];

        $r25 = interfaceinvoke r4.<org.springframework.context.ConfigurableApplicationContext: java.lang.Object getBean(java.lang.String)>($r24);

        $r26 = virtualinvoke r1.<org.apache.cxf.configuration.spring.SpringBeanMap: java.util.Collection getIds(java.lang.Object)>($r25);

        r37 = $r26;

        if $r26 != null goto label08;

     label07:
        goto label18;

     label08:
        $z2 = r37 instanceof org.springframework.beans.factory.support.ManagedSet;

        if $z2 != 0 goto label09;

        $z4 = r37 instanceof org.springframework.beans.factory.support.ManagedList;

        if $z4 == 0 goto label14;

     label09:
        $r13 = new java.util.ArrayList;

        specialinvoke $r13.<java.util.ArrayList: void <init>()>();

        $r14 = interfaceinvoke r37.<java.util.Collection: java.util.Iterator iterator()>();

     label10:
        $z8 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z8 == 0 goto label13;

        $r20 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        $z3 = $r20 instanceof org.springframework.beans.factory.config.TypedStringValue;

        if $z3 == 0 goto label11;

        $r22 = (org.springframework.beans.factory.config.TypedStringValue) $r20;

        $r23 = virtualinvoke $r22.<org.springframework.beans.factory.config.TypedStringValue: java.lang.String getValue()>();

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r23);

        goto label12;

     label11:
        $r21 = (java.lang.String) $r20;

        interfaceinvoke $r13.<java.util.List: boolean add(java.lang.Object)>($r21);

     label12:
        goto label10;

     label13:
        r37 = $r13;

     label14:
        $r15 = interfaceinvoke r37.<java.util.Collection: java.util.Iterator iterator()>();

     label15:
        $z9 = interfaceinvoke $r15.<java.util.Iterator: boolean hasNext()>();

        if $z9 == 0 goto label16;

        $r16 = interfaceinvoke $r15.<java.util.Iterator: java.lang.Object next()>();

        $r17 = virtualinvoke $r16.<java.lang.Object: java.lang.String toString()>();

        $r18 = virtualinvoke r1.<org.apache.cxf.configuration.spring.SpringBeanMap: java.util.List getBeanListForId(java.lang.Object)>($r17);

        $r19 = $r3[i1];

        interfaceinvoke $r18.<java.util.List: boolean add(java.lang.Object)>($r19);

        goto label15;

     label16:
        goto label18;

     label17:
        $r36 := @caughtexception;

        goto label18;

     label18:
        i1 = i1 + 1;

        goto label02;

     label19:
        $r5 = interfaceinvoke r4.<org.springframework.context.ConfigurableApplicationContext: org.springframework.context.ApplicationContext getParent()>();

        virtualinvoke r1.<org.apache.cxf.configuration.spring.SpringBeanMap: void processBeans(org.springframework.context.ApplicationContext)>($r5);

        return;

        catch org.springframework.beans.factory.BeanIsAbstractException from label03 to label07 with label17;
        catch org.springframework.beans.factory.BeanIsAbstractException from label08 to label16 with label17;
    }

    public volatile java.util.Collection values()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.util.Collection $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Collection values()>();

        return $r1;
    }

    public volatile int size()
    {
        int $i0;
        org.apache.cxf.configuration.spring.SpringBeanMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $i0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: int size()>();

        return $i0;
    }

    public volatile java.lang.Object remove(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object remove(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile void putAll(java.util.Map)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.util.Map r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.util.Map;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void putAll(java.util.Map)>(r1);

        return;
    }

    public volatile java.util.Set keySet()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Set keySet()>();

        return $r1;
    }

    public volatile boolean isEmpty()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $z0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean isEmpty()>();

        return $z0;
    }

    public volatile java.lang.Object get(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Object r1, $r2;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.Object;

        $r2 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object get(java.lang.Object)>(r1);

        return $r2;
    }

    public volatile java.util.Set entrySet()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.util.Set $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Set entrySet()>();

        return $r1;
    }

    public volatile boolean containsValue(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean containsValue(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile boolean containsKey(java.lang.Object)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Object r1;
        boolean $z0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.Object;

        $z0 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: boolean containsKey(java.lang.Object)>(r1);

        return $z0;
    }

    public volatile void clear()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void clear()>();

        return;
    }

    public volatile void setStaticFieldName(java.lang.String)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setStaticFieldName(java.lang.String)>(r1);

        return;
    }

    public volatile java.lang.String getStaticFieldName()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.String getStaticFieldName()>();

        return $r1;
    }

    public volatile void setIdsProperty(java.lang.String)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.String r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setIdsProperty(java.lang.String)>(r1);

        return;
    }

    public volatile java.lang.String getIdsProperty()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.String $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.String getIdsProperty()>();

        return $r1;
    }

    public volatile void setType(java.lang.Class)
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Class r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setType(java.lang.Class)>(r1);

        return;
    }

    public volatile java.lang.Class getType()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Class $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Class getType()>();

        return $r1;
    }

    public volatile java.lang.Object postProcessBeforeInitialization(java.lang.Object, java.lang.String) throws org.springframework.beans.BeansException
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.lang.Object r1, $r3;
        java.lang.String r2;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.String;

        $r3 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.lang.Object postProcessBeforeInitialization(java.lang.Object,java.lang.String)>(r1, r2);

        return $r3;
    }

    public volatile java.util.Map createMap()
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        java.util.Map $r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        $r1 = specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: java.util.Map createMap()>();

        return $r1;
    }

    public volatile void afterPropertiesSet() throws java.lang.Exception
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void afterPropertiesSet()>();

        return;
    }

    public volatile void setApplicationContext(org.springframework.context.ApplicationContext) throws org.springframework.beans.BeansException
    {
        org.apache.cxf.configuration.spring.SpringBeanMap r0;
        org.springframework.context.ApplicationContext r1;

        r0 := @this: org.apache.cxf.configuration.spring.SpringBeanMap;

        r1 := @parameter0: org.springframework.context.ApplicationContext;

        specialinvoke r0.<org.apache.cxf.configuration.spring.AbstractSpringBeanMap: void setApplicationContext(org.springframework.context.ApplicationContext)>(r1);

        return;
    }

    public static void <clinit>()
    {
        <org.apache.cxf.configuration.spring.SpringBeanMap: long serialVersionUID> = 283807699147781432L;

        return;
    }
}
