public class com.hp.hpl.jena.sparql.vocabulary.TestManifestX extends java.lang.Object
{
    private static com.hp.hpl.jena.rdf.model.Model m_model;
    public static final java.lang.String NS;
    public static final com.hp.hpl.jena.rdf.model.Resource NAMESPACE;
    public static final com.hp.hpl.jena.rdf.model.Property dataSyntax;
    public static final com.hp.hpl.jena.rdf.model.Property defaultTestType;
    public static final com.hp.hpl.jena.rdf.model.Property include;
    public static final com.hp.hpl.jena.rdf.model.Property option;
    public static final com.hp.hpl.jena.rdf.model.Property querySyntax;
    public static final com.hp.hpl.jena.rdf.model.Property textIndex;
    public static final com.hp.hpl.jena.rdf.model.Resource NegativeSyntaxTestARQ;
    public static final com.hp.hpl.jena.rdf.model.Resource PositiveSyntaxTestARQ;
    public static final com.hp.hpl.jena.rdf.model.Resource TestQuery;
    public static final com.hp.hpl.jena.rdf.model.Resource TestSerialization;
    public static final com.hp.hpl.jena.rdf.model.Resource TestSurpressed;

    public void <init>()
    {
        com.hp.hpl.jena.sparql.vocabulary.TestManifestX r0;

        r0 := @this: com.hp.hpl.jena.sparql.vocabulary.TestManifestX;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String getURI()
    {
        return "http://jena.hpl.hp.com/2005/05/test-manifest-extra#";
    }

    static void <clinit>()
    {
        com.hp.hpl.jena.rdf.model.Property $r4, $r6, $r8, $r10, $r12, $r14;
        com.hp.hpl.jena.rdf.model.Resource $r2, $r16, $r18, $r20, $r22, $r24;
        com.hp.hpl.jena.rdf.model.Model $r0, $r1, $r3, $r5, $r7, $r9, $r11, $r13, $r15, $r17, $r19, $r21, $r23;

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: java.lang.String NS> = "http://jena.hpl.hp.com/2005/05/test-manifest-extra#";

        $r0 = staticinvoke <com.hp.hpl.jena.rdf.model.ModelFactory: com.hp.hpl.jena.rdf.model.Model createDefaultModel()>();

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model> = $r0;

        $r1 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r2 = interfaceinvoke $r1.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Resource NAMESPACE> = $r2;

        $r3 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r4 = interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#dataSyntax");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Property dataSyntax> = $r4;

        $r5 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r6 = interfaceinvoke $r5.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#defaultTestType");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Property defaultTestType> = $r6;

        $r7 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r8 = interfaceinvoke $r7.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#include");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Property include> = $r8;

        $r9 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r10 = interfaceinvoke $r9.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#option");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Property option> = $r10;

        $r11 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r12 = interfaceinvoke $r11.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#querySyntax");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Property querySyntax> = $r12;

        $r13 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r14 = interfaceinvoke $r13.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Property createProperty(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#textIndex");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Property textIndex> = $r14;

        $r15 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r16 = interfaceinvoke $r15.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#NegativeSyntaxTestARQ");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Resource NegativeSyntaxTestARQ> = $r16;

        $r17 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r18 = interfaceinvoke $r17.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#PositiveSyntaxTestARQ");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Resource PositiveSyntaxTestARQ> = $r18;

        $r19 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r20 = interfaceinvoke $r19.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#TestQuery");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Resource TestQuery> = $r20;

        $r21 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r22 = interfaceinvoke $r21.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#TestSerialization");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Resource TestSerialization> = $r22;

        $r23 = <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Model m_model>;

        $r24 = interfaceinvoke $r23.<com.hp.hpl.jena.rdf.model.Model: com.hp.hpl.jena.rdf.model.Resource createResource(java.lang.String)>("http://jena.hpl.hp.com/2005/05/test-manifest-extra#TestSurpressed");

        <com.hp.hpl.jena.sparql.vocabulary.TestManifestX: com.hp.hpl.jena.rdf.model.Resource TestSurpressed> = $r24;

        return;
    }
}
