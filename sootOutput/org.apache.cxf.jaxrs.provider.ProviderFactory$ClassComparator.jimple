class org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator extends java.lang.Object implements java.util.Comparator
{
    private java.lang.Class expectedCls;

    public void <init>()
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void <init>(java.lang.Class)
    {
        java.lang.Class r1;
        org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator r0;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator: java.lang.Class expectedCls> = r1;

        return;
    }

    public int compare(java.lang.Object, java.lang.Object)
    {
        org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator r0;
        int $i0;
        java.lang.Object r1, r2;
        java.lang.Class $r3;

        r0 := @this: org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator;

        r1 := @parameter0: java.lang.Object;

        r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.apache.cxf.jaxrs.provider.ProviderFactory$ClassComparator: java.lang.Class expectedCls>;

        $i0 = staticinvoke <org.apache.cxf.jaxrs.provider.ProviderFactory: int compareClasses(java.lang.Class,java.lang.Object,java.lang.Object)>($r3, r1, r2);

        return $i0;
    }
}
