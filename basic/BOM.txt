<java.io.BufferedInputStream: int available()>
<java.io.BufferedInputStream: int read()>
<java.io.BufferedInputStream: int read(byte[],int,int)>

<java.io.BufferedReader: int available()>
<java.io.BufferedReader: int read()>
<java.io.BufferedReader: int read(char[],int,int)>
<java.io.BufferedReader: java.lang.String readLine()>

<java.io.ByteArrayInputStream: int available()>
<java.io.ByteArrayInputStream: int read()>
<java.io.ByteArrayInputStream: int read(byte[],int,int)>

<java.io.CharArrayReader: int available()>
<java.io.CharArrayReader: int read()>
<java.io.CharArrayReader: int read(char[],int,int)>

<java.io.DataInputStream: int read(byte[])>
<java.io.DataInputStream: int read(byte[],int,int)>
<java.io.DataInputStream: byte readByte()>
<java.io.DataInputStream: char readChar()>
<java.io.DataInputStream: double readDouble()>
<java.io.DataInputStream: float	readFloat()>
<java.io.DataInputStream: java.lang.String readLine()>
<java.io.DataInputStream: long readLong()>
<java.io.DataInputStream: short readShort()>
<java.io.DataInputStream: int readUnsignedByte()>
<java.io.DataInputStream: int readUnsignedShort()>
<java.io.DataInputStream: java.lang.String readUTF()>


<java.io.File: File createTempFile(java.lang.String,java.lang.String)>
<java.io.File: File createTempFile(java.lang.String,java.lang.String,File)>
<java.io.File: File getAbsoluteFile()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.io.File: File getCanonicalFile()>
<java.io.File: java.lang.String getCanonicalPath()>
<java.io.File: java.lang.String getName()>
<java.io.File: java.lang.String getParent()>
<java.io.File: File getParentFile()>
<java.io.File: java.lang.String getPath()>
<java.io.File: int hashCode()>
<java.io.File: java.lang.String[] list()>
<java.io.File: java.lang.String[] list(FilenameFilter)>
<java.io.File: File[] listFiles()>
<java.io.File: File[] listFiles(FileFilter)>
<java.io.File: File[] listFiles(FilenameFilter)>
<java.io.File: File[] listRoots()>
<java.io.File: Path toPath()>
<java.io.File: java.lang.String tojava.lang.String()>
<java.io.File: URI toURI()>

<java.io.FileInputStream: int available()>
<java.io.FileInputStream: FileChannel getChannel()>
<java.io.FileInputStream: FileDescriptor getFD()>
<java.io.FileInputStream: int read()>
<java.io.FileInputStream: int read(byte[])>
<java.io.FileInputStream: int read(byte[],int,int)>

<java.io.FilterInputStream: int available()>
<java.io.FilterInputStream: int read()>
<java.io.FilterInputStream: int read(byte[])>
<java.io.FilterInputStream: int read(byte[],int,int)>

<java.io.FilterReader: int read()>
<java.io.FilterReader: int read(char[],int,int)>

<java.io.InputStream: int available()>
<java.io.InputStream: int read(byte[])>
<java.io.InputStream: int read(byte[],int,int)>

<java.io.InputStreamReader: java.lang.String getEncoding()>
<java.io.InputStreamReader: int read()>
<java.io.InputStreamReader: int read(char[],int,int)>

<java.io.LineNumberReader: int read()>
<java.io.LineNumberReader: int read(char[],int,int)>
<java.io.LineNumberReader: java.lang.String readLine()>

<java.io.ObjectInputStream: int available()>
<java.io.ObjectInputStream: int read()>
<java.io.ObjectInputStream: int read(byte[],int,int)>
<java.io.ObjectInputStream: byte readByte()>
<java.io.ObjectInputStream: char readChar()>
<java.io.ObjectInputStream: double readDouble()>
<java.io.ObjectInputStream: float readFloat()>
<java.io.ObjectInputStream: java.lang.String readLine()>
<java.io.ObjectInputStream: long readLong()>
<java.io.ObjectInputStream: short readShort()>
<java.io.ObjectInputStream: ObjectInputStream.GetField readFields()>
<java.io.ObjectInputStream: int readInt()>
<java.io.ObjectInputStream: Object readObject()>
<java.io.ObjectInputStream: int available()>
<java.io.ObjectInputStream: java.lang.String readUTF()>

<java.io.PipedInputStream: int available()>
<java.io.PipedInputStream: int read()>
<java.io.PipedInputStream: int read(byte[],int,int)>

<java.io.PipedReader: int read()>
<java.io.PipedReader: int read(char[],int,int)>

<java.io.PushbackInputStream: int available()>
<java.io.PushbackInputStream: int read()>
<java.io.PushbackInputStream: int read(byte[],int,int)>

<java.io.RandomAccessFile: int read()>
<java.io.RandomAccessFile: int read(byte[])>
<java.io.RandomAccessFile: int read(byte[],int,int)>
<java.io.RandomAccessFile: byte readByte()>
<java.io.RandomAccessFile: char readChar()>
<java.io.RandomAccessFile: double readDouble()>
<java.io.RandomAccessFile: float readFloat()>
<java.io.RandomAccessFile: java.lang.String readLine()>
<java.io.RandomAccessFile: long readLong()>
<java.io.RandomAccessFile: short readShort()>
<java.io.RandomAccessFile: int readInt()>

<java.io.Reader: int read()>
<java.io.Reader: int read(char[])>
<java.io.Reader: int read(char[],int,int)>
<java.io.Reader: int read(CharBuffer)>

<java.io.SequenceInputStream: int available()>
<java.io.SequenceInputStream: int read()>
<java.io.SequenceInputStream: int read(byte[],int,int)>

<java.io.java.lang.StringReader: int read()>
<java.io.java.lang.StringReader: int read(char[],int,int)>

<java.util.Scanner: java.lang.String next()>
<java.util.Scanner: java.lang.String next(Pattern)>
<java.util.Scanner: java.lang.String next(java.lang.String)>
<java.util.Scanner: boolean nextBoolean()>
<java.util.Scanner: byte nextByte()>
<java.util.Scanner: double nextDouble()>
<java.util.Scanner: float nextFloat()>
<java.util.Scanner: int	nextInt()>
<java.util.Scanner: int	nextInt(int radix)>
<java.util.Scanner: java.lang.String nextLine()>
<java.util.Scanner: long nextLong()>
<java.util.Scanner: long nextLong(int)>
<java.util.Scanner: short nextShort()>
<java.util.Scanner: short nextShort(int)>
<java.util.Scanner: java.lang.String toString()>

<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.net.URL: java.io.InputStream openStream()>
<java.net.URL: java.lang.Object getContent()>


<java.net.URL: java.lang.String getAuthority()>
<java.net.URL: java.lang.String getFile()>
<java.net.URL: java.lang.String getHost()>
<java.net.URL: java.lang.String getPath()>
<java.net.URL: java.lang.String getProtocol()>
<java.net.URL: java.lang.String getQuery()>
<java.net.URL: int getPort()>
<java.net.URL: java.io.InputStream openStream()>

<java.net.URLClassLoader: java.net.URL findResource(java.lang.String)>
<java.net.URLClassLoader: java.io.InputStream getResourceAsStream(java.lang.String)>
<java.net.URLClassLoader: java.net.URL[] getURLs()>

<java.net.URLConnection: java.lang.Object getContent()>
<java.net.URLConnection: java.lang.Object getContent(java.lang.Classes[])>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.net.URLConnection: java.lang.String getRequestProperty(java.lang.String)>
<java.net.URLConnection: java.net.URL getURL()>

<java.sql.Connection: java.sql.Statement createStatement()>
<java.sql.Connection: java.sql.Statement createStatement(int,int)>
<java.sql.Connection: java.sql.Statement createStatement(int,int,int)>

<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>
<java.sql.Statement: java.sql.ResultSet getGeneratedKeys()>
<java.sql.Statement: java.sql.ResultSet getResultSet()>

<java.sql.SQLInput: java.io.InputStream readAsciiStream()>
<java.sql.SQLInput: java.io.InputStream readBinaryStream()>
<java.sql.SQLInput: java.sql.Date readDate()>
<java.sql.SQLInput: java.sql.Time readTime()>
<java.sql.SQLInput: java.net.URL readURL()>
<java.sql.SQLInput: java.lang.String readNString()>
<java.sql.SQLInput: java.lang.String readString()>
<java.sql.SQLInput: java.lang.Object readObject()>

<java.lang.management.MemoryUsage: long getUsed()>
<java.lang.System: java.util.Properties getProperties()>
<java.lang.System: java.lang.String getenv(java.lang.String)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>

<javax.mail.PasswordAuthentication: java.lang.String getPassword()>
<javax.mail.PasswordAuthentication: java.lang.String getUserName()>

<javax.mail.Message: javax.mail.Address[] getAllRecipients()>
<javax.mail.Message: javax.mail.Folder getFolder()>
<javax.mail.Message: int getMessageNumber()>
<javax.mail.Message: java.util.Date getReceivedDate()>
<javax.mail.Message: java.util.Date getSentDate()>
<javax.mail.Message: java.lang.String getSubject()>