<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File getOrCreateTransferFile(org.thoughtcrime.securesms.attachments.AttachmentId)>
<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getCleanFile(int)>
<com.bumptech.glide.load.data.HttpUrlFetcher: java.io.InputStream getStreamForSuccessfulRequest(java.net.HttpURLConnection)>
<com.fasterxml.jackson.core.io.SegmentedStringWriter: java.io.Writer append(java.lang.CharSequence)>
<com.airbnb.lottie.network.NetworkCache: java.io.File writeTempCacheFile(java.lang.String,java.io.InputStream,com.airbnb.lottie.network.FileExtension)>
<org.thoughtcrime.securesms.mms.MediaStream: java.io.InputStream getStream()>
<androidx.camera.core.VideoCapture$OutputFileOptions: java.io.File getFile()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String)>
<com.bumptech.glide.util.ByteBufferUtil: java.io.InputStream toStream(java.nio.ByteBuffer)>
<android.content.Context: java.io.File[] getExternalCacheDirs()>
<com.google.android.exoplayer2.upstream.Loader: java.io.IOException access$202(com.google.android.exoplayer2.upstream.Loader,java.io.IOException)>
<org.thoughtcrime.securesms.mms.PartAuthority: java.io.InputStream getAttachmentStream(android.content.Context,android.net.Uri)>
<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.IOException invalidLengths(java.lang.String[])>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.InputStream getStream(android.content.Context,android.net.Uri)>
<org.thoughtcrime.securesms.contacts.avatars.ProfileContactPhoto: java.io.InputStream openInputStream(android.content.Context)>
<androidx.navigation.NavType$SerializableArrayType: java.io.Serializable[] parseValue(java.lang.String)>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.InputStream getStream(android.content.Context,android.net.Uri,long)>
<com.google.android.exoplayer2.upstream.FileDataSource: java.io.RandomAccessFile openLocalFile(android.net.Uri)>
<com.bumptech.glide.load.engine.cache.DiskCache: java.io.File get(com.bumptech.glide.load.Key)>
<androidx.navigation.NavType$SerializableType: java.io.Serializable parseValue(java.lang.String)>
<com.airbnb.lottie.network.LottieNetworkCacheProvider: java.io.File getCacheDir()>
<android.content.res.AssetManager: java.io.InputStream open(java.lang.String,int)>
<android.content.res.Resources: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<com.bumptech.glide.disklrucache.DiskLruCache$Entry: java.io.File getDirtyFile(int)>
<androidx.core.content.ContextCompat: java.io.File[] getExternalCacheDirs(android.content.Context)>
<androidx.multidex.MultiDex: java.io.File getDexDir(android.content.Context,java.io.File,java.lang.String)>
<android.content.ContentResolver: java.io.InputStream openInputStream(android.net.Uri)>
<com.bumptech.glide.load.engine.cache.DiskLruCacheFactory$CacheDirectoryGetter: java.io.File getCacheDirectory()>
<com.fasterxml.jackson.core.io.SegmentedStringWriter: java.io.Writer append(java.lang.CharSequence,int,int)>
<com.fasterxml.jackson.core.JsonFactory: java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>
<com.bumptech.glide.load.data.HttpUrlFetcher: java.io.InputStream loadDataWithRedirects(java.net.URL,int,java.net.URL,java.util.Map)>
<com.bumptech.glide.load.data.StreamLocalUriFetcher: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri)>
<com.bumptech.glide.Glide: java.io.File getPhotoCacheDir(android.content.Context)>
<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>
<org.thoughtcrime.securesms.database.helpers.SQLCipherOpenHelper: java.io.File getDatabaseFile(android.content.Context)>
<androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int)>
<com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory$1: java.io.File getCacheDirectory()>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.InputStream $r8$lambda$Wupm4pB0ZfTLONwGUyoqjn2nzkM(long,android.net.Uri,byte[])>
<com.bumptech.glide.load.model.ByteArrayLoader$StreamFactory$1: java.io.InputStream convert(byte[])>
<com.bumptech.glide.load.data.StreamLocalUriFetcher: java.io.InputStream loadResource(android.net.Uri,android.content.ContentResolver)>
<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>
<java.io.File: java.io.File[] listFiles()>
<androidx.core.content.FileProvider: java.io.File buildPath(java.io.File,java.lang.String[])>
<androidx.core.content.ContextCompat: java.io.File createFilesDir(java.io.File)>
<org.thoughtcrime.securesms.database.PartFileProtector: java.io.File protect(org.thoughtcrime.securesms.database.PartFileProtector$CreateFile)>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.InputStream getAttachmentStream(org.thoughtcrime.securesms.attachments.AttachmentId,long)>
<com.google.android.datatransport.cct.CctTransportBackend: java.io.InputStream maybeUnGzip(java.io.InputStream,java.lang.String)>
<android.provider.ContactsContract$Contacts: java.io.InputStream openContactPhotoInputStream(android.content.ContentResolver,android.net.Uri,boolean)>
<com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream: java.io.IOException streamClosed()>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.InputStream lambda$getStream$1(android.content.Context,long,java.io.File)>
<androidx.appcompat.widget.ResourcesWrapper: java.io.InputStream openRawResource(int,android.util.TypedValue)>
<com.bumptech.glide.load.engine.cache.DiskCacheAdapter: java.io.File get(com.bumptech.glide.load.Key)>
<org.thoughtcrime.securesms.crypto.ModernDecryptingPartInputStream: java.io.InputStream createFor(org.thoughtcrime.securesms.crypto.AttachmentSecret,java.io.File,long)>
<com.airbnb.lottie.L$1: java.io.File getCacheDir()>
<com.bumptech.glide.disklrucache.DiskLruCache: java.io.File access$2000(com.bumptech.glide.disklrucache.DiskLruCache)>
<org.thoughtcrime.securesms.database.AttachmentDatabase$DataInfo: java.io.File access$300(org.thoughtcrime.securesms.database.AttachmentDatabase$DataInfo)>
<androidx.core.content.FileProvider$SimplePathStrategy: java.io.File getFileForUri(android.net.Uri)>
<android.content.Context: java.io.File getExternalCacheDir()>
<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>
<androidx.core.content.FileProvider$PathStrategy: java.io.File getFileForUri(android.net.Uri)>
<androidx.camera.core.VideoCapture$OutputFileOptions: java.io.FileDescriptor getFileDescriptor()>
<org.thoughtcrime.securesms.contacts.avatars.GroupRecordContactPhoto: java.io.InputStream openInputStream(android.content.Context)>
<com.airbnb.lottie.network.LottieFetchResult: java.io.InputStream bodyByteStream()>
<com.bumptech.glide.load.data.mediastore.ThumbFetcher: java.io.InputStream openThumbInputStream()>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File newFile(android.content.Context)>
<com.airbnb.lottie.network.NetworkCache: java.io.File parentDir()>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File newFile()>
<org.thoughtcrime.securesms.crypto.ClassicDecryptingPartInputStream: java.io.InputStream createFor(org.thoughtcrime.securesms.crypto.AttachmentSecret,java.io.File)>
<java.util.zip.ZipFile: java.io.InputStream getInputStream(java.util.zip.ZipEntry)>
<com.fasterxml.jackson.core.io.SegmentedStringWriter: java.io.Writer append(char)>
<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: java.io.IOException _wrapAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File $r8$lambda$Lp8f5TzvJx1vhzmf8LIgmWJoWvA(java.io.File)>
<android.content.Intent: java.io.Serializable getSerializableExtra(java.lang.String)>
<android.content.Context: java.io.File getCacheDir()>
<com.bumptech.glide.Glide: java.io.File getPhotoCacheDir(android.content.Context,java.lang.String)>
<java.net.HttpURLConnection: java.io.InputStream getErrorStream()>
<androidx.navigation.NavType$SerializableArrayType: java.io.Serializable[] get(android.os.Bundle,java.lang.String)>
<android.content.res.AssetFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File lambda$newFile$2(java.io.File)>
<com.bumptech.glide.load.data.StreamLocalUriFetcher: java.io.InputStream loadResourceFromUri(android.net.Uri,android.content.ContentResolver)>
<java.io.File: java.io.File getCanonicalFile()>
<com.fasterxml.jackson.databind.deser.SettableBeanProperty: java.io.IOException _throwAsIOE(com.fasterxml.jackson.core.JsonParser,java.lang.Exception)>
<android.content.Context: java.io.File getDir(java.lang.String,int)>
<org.thoughtcrime.securesms.emoji.EmojiFilesKt: java.io.File access$getEmojiDirectory(android.content.Context)>
<android.content.Context: java.io.File[] getExternalFilesDirs(java.lang.String)>
<androidx.navigation.NavType$SerializableType: java.io.Serializable get(android.os.Bundle,java.lang.String)>
<com.bumptech.glide.load.resource.bitmap.Downsampler: java.io.IOException newIoExceptionForInBitmapAssertion(java.lang.IllegalArgumentException,int,int,java.lang.String,android.graphics.BitmapFactory$Options)>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File newTransferFile()>
<org.thoughtcrime.securesms.contacts.avatars.ContactPhoto: java.io.InputStream openInputStream(android.content.Context)>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.InputStream $r8$lambda$uokncM81r1WlNSXLHYLlQmlItzg(org.thoughtcrime.securesms.providers.BlobProvider,android.content.Context,long,java.io.File)>
<org.thoughtcrime.securesms.profiles.AvatarHelper: java.io.InputStream getAvatar(android.content.Context,org.thoughtcrime.securesms.recipients.RecipientId)>
<java.io.PrintWriter: java.io.PrintWriter append(java.lang.CharSequence)>
<com.google.android.gms.common.util.ProcessUtils: java.io.BufferedReader zza(java.lang.String)>
<android.content.Context: java.io.File getDatabasePath(java.lang.String)>
<com.bumptech.glide.load.model.FileLoader$StreamFactory$1: java.io.InputStream open(java.io.File)>
<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>
<com.bumptech.glide.load.data.InputStreamRewinder: java.io.InputStream rewindAndGet()>
<androidx.core.content.ContextCompat: java.io.File getNoBackupFilesDir(android.content.Context)>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File lambda$newTransferFile$1(java.io.File)>
<java.io.File: java.io.File getParentFile()>
<com.bumptech.glide.disklrucache.DiskLruCache$Editor: java.io.File getFile(int)>
<com.fasterxml.jackson.core.io.UTF8Writer: java.io.Writer append(char)>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.InputStream lambda$getStream$0(long,android.net.Uri,byte[])>
<android.os.ParcelFileDescriptor: java.io.FileDescriptor getFileDescriptor()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<com.bumptech.glide.load.model.stream.QMediaStoreUriLoader$QMediaStoreUriFetcher: java.io.File queryForFilePath(android.net.Uri)>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.InputStream getDataStream(org.thoughtcrime.securesms.attachments.AttachmentId,java.lang.String,long)>
<org.thoughtcrime.securesms.jobs.MultiDeviceContactUpdateJob$WriteDetails: java.io.OutputStream access$000(org.thoughtcrime.securesms.jobs.MultiDeviceContactUpdateJob$WriteDetails)>
<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>
<com.bumptech.glide.load.engine.cache.DiskLruCacheWrapper: java.io.File get(com.bumptech.glide.load.Key)>
<com.bumptech.glide.load.data.mediastore.ThumbnailStreamOpener: java.io.InputStream open(android.net.Uri)>
<androidx.navigation.NavType$EnumType: java.io.Serializable parseValue(java.lang.String)>
<okio.BufferedSource: java.io.InputStream inputStream()>
<com.bumptech.glide.disklrucache.DiskLruCache$Value: java.io.File getFile(int)>
<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: java.io.Reader constructReader()>
<java.io.FileOutputStream: java.io.FileDescriptor getFD()>
<org.thoughtcrime.securesms.providers.BlobProvider$BlobSpec: java.io.InputStream access$1500(org.thoughtcrime.securesms.providers.BlobProvider$BlobSpec)>
<org.thoughtcrime.securesms.emoji.EmojiFiles$Version: java.io.File getDirectory(android.content.Context)>
<android.content.Context: java.io.File getNoBackupFilesDir()>
<org.thoughtcrime.securesms.emoji.EmojiFiles: java.io.OutputStream openForWriting(android.content.Context,org.thoughtcrime.securesms.emoji.EmojiFiles$Version,java.util.UUID)>
<android.content.res.Resources: java.io.InputStream openRawResource(int)>
<com.airbnb.lottie.network.NetworkCache: java.io.File getCachedFile(java.lang.String)>
<org.thoughtcrime.securesms.util.storage.FileStorage: java.io.InputStream read(android.content.Context,java.lang.String,java.lang.String)>
<org.thoughtcrime.securesms.emoji.EmojiFiles$Version: java.io.File getFile(android.content.Context,java.util.UUID)>
<android.content.res.AssetFileDescriptor: java.io.FileInputStream createInputStream()>
<java.io.File: java.io.File[] listRoots()>
<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>
<com.bumptech.glide.load.data.mediastore.FileService: java.io.File get(java.lang.String)>
<com.bumptech.glide.disklrucache.DiskLruCache: java.io.Writer access$100(com.bumptech.glide.disklrucache.DiskLruCache)>
<android.content.Context: java.io.File getExternalFilesDir(java.lang.String)>
<org.thoughtcrime.securesms.emoji.EmojiFiles: java.io.File getBaseDirectory(android.content.Context)>
<com.bumptech.glide.util.ExceptionCatchingInputStream: java.io.IOException getException()>
<androidx.core.util.AtomicFile: java.io.File getBaseFile()>
<androidx.core.util.AtomicFile: java.io.FileOutputStream startWrite()>
<org.thoughtcrime.securesms.providers.BlobProvider: java.io.File getOrCreateDirectory(android.content.Context,java.lang.String)>
<androidx.core.graphics.drawable.IconCompat: java.io.InputStream getUriInputStream(android.content.Context)>
<com.airbnb.lottie.network.DefaultLottieFetchResult: java.io.InputStream bodyByteStream()>
<java.io.Writer: java.io.Writer append(char)>
<com.bumptech.glide.util.ContentLengthInputStream: java.io.InputStream obtain(java.io.InputStream,long)>
<com.google.android.gms.internal.firebase_messaging.zzl: java.io.InputStream zzb(java.io.InputStream,long)>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<android.content.Context: java.io.File[] getExternalMediaDirs()>
<org.thoughtcrime.securesms.crypto.ModernDecryptingPartInputStream: java.io.InputStream createFor(org.thoughtcrime.securesms.crypto.AttachmentSecret,byte[],java.io.File,long)>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File $r8$lambda$iGEdq68qBSFItn-ovZ4lgY93Wno(java.io.File)>
<androidx.core.graphics.TypefaceCompatUtil: java.io.File getTempFile(android.content.Context)>
<androidx.core.graphics.TypefaceCompatApi21Impl: java.io.File getFile(android.os.ParcelFileDescriptor)>
<androidx.core.content.ContextCompat: java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String)>
<android.os.Environment: java.io.File getExternalStorageDirectory()>
<com.bumptech.glide.load.model.DataUrlLoader$StreamFactory$1: java.io.InputStream decode(java.lang.String)>
<org.thoughtcrime.securesms.contacts.avatars.SystemContactPhoto: java.io.InputStream openInputStream(android.content.Context)>
<org.thoughtcrime.securesms.util.StorageUtil: java.io.File getOrCreateBackupDirectory()>
<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>
<com.bumptech.glide.load.data.StreamAssetPathFetcher: java.io.InputStream loadResource(android.content.res.AssetManager,java.lang.String)>
<org.thoughtcrime.securesms.avatar.AvatarPickerStorage: java.io.InputStream read(android.content.Context,java.lang.String)>
<android.content.Context: java.io.File getFilesDir()>
<org.thoughtcrime.securesms.database.AttachmentDatabase: java.io.File getTransferFile(org.thoughtcrime.securesms.database.SQLiteDatabase,org.thoughtcrime.securesms.attachments.AttachmentId)>
<android.os.Bundle: java.io.Serializable getSerializable(java.lang.String)>
<org.thoughtcrime.securesms.util.storage.FileStorage: java.io.File getFile(android.content.Context,java.lang.String,java.lang.String)>
<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>
