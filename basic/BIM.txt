<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String)>
<java.util.logging.Logger: void	log(java.util.logging.Level,java.lang.String,java.lang.Object)>
<java.util.logging.Logger: void	log(java.util.logging.Level,java.lang.String,java.lang.Object[])>
<java.util.logging.Logger: void	log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>
<java.util.logging.Logger: void	log(java.util.logging.LogRecord)>
<java.util.logging.Logger: void	logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String)>
<java.util.logging.Logger: void	logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<java.util.logging.Logger: void	logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>
<java.util.logging.Logger: void	logp(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.logging.Logger: void	logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<java.util.logging.Logger: void	logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object)>
<java.util.logging.Logger: void	logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Object[])>
<java.util.logging.Logger: void	logrb(java.util.logging.Level,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.logging.Logger: void	fine(java.lang.String)>
<java.util.logging.Logger: void	finer(java.lang.String)>
<java.util.logging.Logger: void	finest(java.lang.String)>
<java.util.logging.Logger: void	info(java.lang.String)>
<java.util.logging.Logger: void	config(java.lang.String)>
<java.util.logging.Logger: void	severe(java.lang.String)>
<java.util.logging.Logger: void	warning(java.lang.String)>
<java.util.logging.Logger: void	throwing(java.lang.String,java.lang.String,java.lang.Throwable)>
<java.util.logging.Logger: void	entering(java.lang.String,java.lang.String)>
<java.util.logging.Logger: void	entering(java.lang.String,java.lang.String,java.lang.Object)>
<java.util.logging.Logger: void	entering(java.lang.String,java.lang.String,java.lang.Object[])>
<java.util.logging.Logger: void	exiting(java.lang.String,java.lang.String,java.lang.Object)>
<java.util.logging.Logger: void	exiting(java.lang.String,java.lang.String,java.lang.Object[])>

<java.io.BufferedOutputStream: void write(byte[],int,int)>
<java.io.BufferedOutputStream: void write(int)>

<java.io.BufferedWriter: void write(char[,int,int)>
<java.io.BufferedWriter: void write(int)>
<java.io.BufferedWriter: void write(java.lang.String,int,int)>

<java.io.ByteArrayOutputStream: byte[] toByteArray()>
<java.io.ByteArrayOutputStream: String toString()>
<java.io.ByteArrayOutputStream: String toString(java.lang.String)>
<java.io.ByteArrayOutputStream: void write(byte[],int,int)>
<java.io.ByteArrayOutputStream: void writeTo(java.io.OutputStream)>

<java.io.CharArrayWriter: char[] toCharArray()>
<java.io.CharArrayWriter: String toString()>
<java.io.CharArrayWriter: void write(char[],int,int)>
<java.io.CharArrayWriter: void write(int)>
<java.io.CharArrayWriter: void write(java.lang.String,int,int)>
<java.io.CharArrayWriter: void writeTo(java.io.Writer)>

<java.io.DataOutputStream: void	write(byte[],int,int)>
<java.io.DataOutputStream: void	write(int)>
<java.io.DataOutputStream: void	writeBoolean(boolean)>
<java.io.DataOutputStream: void	writeByte(int)>
<java.io.DataOutputStream: void	writeBytes(java.lang.String)>
<java.io.DataOutputStream: void	writeChar(int)>
<java.io.DataOutputStream: void	writeChars(java.lang.String)>
<java.io.DataOutputStream: void	writeDouble(double)>
<java.io.DataOutputStream: void	writeFloat(float)>
<java.io.DataOutputStream: void	writeInt(int)>
<java.io.DataOutputStream: void	writeLong(long)>
<java.io.DataOutputStream: void	writeShort(int)>
<java.io.DataOutputStream: void	writeUTF(java.lang.String)>

<java.io.File: boolean delete()>

<java.io.FileOutputStream: void	write(byte[])>
<java.io.FileOutputStream: void	write(byte[],int,int)>
<java.io.FileOutputStream: void	write(int)>

<java.io.FilterOutputStream: void write(byte[])>
<java.io.FilterOutputStream: void write(byte[],int,int)>
<java.io.FilterOutputStream: void write(int)>

<java.io.FilterWriter: void write(char[],int,int)>
<java.io.FilterWriter: void write(int)>
<java.io.FilterWriter: void write(java.lang.String,int,int)>

<java.io.ObjectOutputStream: void write(byte[])>
<java.io.ObjectOutputStream: void write(byte[],int,int)>
<java.io.ObjectOutputStream: void write(int)>
<java.io.ObjectOutputStream: void writeBoolean(boolean)>
<java.io.ObjectOutputStream: void writeByte(int)>
<java.io.ObjectOutputStream: void writeBytes(String)>
<java.io.ObjectOutputStream: void writeChar(int)>
<java.io.ObjectOutputStream: void writeChars(String)>
<java.io.ObjectOutputStream: void writeFields()>
<java.io.ObjectOutputStream: void writeFloat(float)>
<java.io.ObjectOutputStream: void writeInt(int)>
<java.io.ObjectOutputStream: void writeLong(long)>
<java.io.ObjectOutputStream: void writeObject(Object)>
<java.io.ObjectOutputStream: void writeShort(int)>
<java.io.ObjectOutputStream: void writeUTF(String)>

<java.io.OutputStreamWriter: void write(char[] cbuf, int off, int len)>
<java.io.OutputStreamWriter: void write(int c)>
<java.io.OutputStreamWriter: void write(String str, int off, int len)>

<java.io.PipedOutputStream: void write(byte[] b, int off, int len)>
<java.io.PipedOutputStream: void write(int b)>

<java.io.PipedWriter: void write(char[] cbuf, int off, int len)>
<java.io.PipedWriter: void write(int c)>

<java.io.PrintStream: PrintStream append(char c)>
<java.io.PrintStream: PrintStream append(CharSequence csq)>
<java.io.PrintStream: PrintStream append(CharSequence csq, int start, int end)>
<java.io.PrintStream: PrintStream format(Locale l, String format, Object... args)>
<java.io.PrintStream: PrintStream format(String format, Object... args)>
<java.io.PrintStream: void print(boolean b)>
<java.io.PrintStream: void print(char c)>
<java.io.PrintStream: void print(char[] s)>
<java.io.PrintStream: void print(double d)>
<java.io.PrintStream: void print(float f)>
<java.io.PrintStream: void print(int i)>
<java.io.PrintStream: void print(long l)>
<java.io.PrintStream: void print(Object obj)>
<java.io.PrintStream: void print(String s)>
<java.io.PrintStream: PrintStream printf(Locale l, String format, Object... args)>
<java.io.PrintStream: PrintStream printf(String format, Object... args)>
<java.io.PrintStream: void println()>
<java.io.PrintStream: void println(boolean x)>
<java.io.PrintStream: void println(char x)>
<java.io.PrintStream: void println(char[] x)>
<java.io.PrintStream: void println(double x)>
<java.io.PrintStream: void println(float x)>
<java.io.PrintStream: void println(int x)>
<java.io.PrintStream: void println(long x)>
<java.io.PrintStream: void println(Object x)>
<java.io.PrintStream: void println(String x)>
<java.io.PrintStream: void write(byte[] buf, int off, int len)>
<java.io.PrintStream: void write(int b)>

<java.io.PrintWriter: PrintWriter append(char c)>
<java.io.PrintWriter: PrintWriter append(CharSequence csq)>
<java.io.PrintWriter: PrintWriter append(CharSequence csq, int start, int end)>
<java.io.PrintWriter: PrintWriter format(Locale l, String format, Object... args)>
<java.io.PrintWriter: PrintWriter format(String format, Object... args)>
<java.io.PrintWriter: void print(boolean b)>
<java.io.PrintWriter: void print(char c)>
<java.io.PrintWriter: void print(char[] s)>
<java.io.PrintWriter: void print(double d)>
<java.io.PrintWriter: void print(float f)>
<java.io.PrintWriter: void print(int i)>
<java.io.PrintWriter: void print(long l)>
<java.io.PrintWriter: void print(Object obj)>
<java.io.PrintWriter: void print(String s)>
<java.io.PrintWriter: PrintWriter printf(Locale l, String format, Object... args)>
<java.io.PrintWriter: PrintWriter printf(String format, Object... args)>
<java.io.PrintWriter: void println()>
<java.io.PrintWriter: void println(boolean x)>
<java.io.PrintWriter: void println(char x)>
<java.io.PrintWriter: void println(char[] x)>
<java.io.PrintWriter: void println(double x)>
<java.io.PrintWriter: void println(float x)>
<java.io.PrintWriter: void println(int x)>
<java.io.PrintWriter: void println(long x)>
<java.io.PrintWriter: void println(Object x)>
<java.io.PrintWriter: void println(String x)>
<java.io.PrintWriter: void write(char[] buf)>
<java.io.PrintWriter: void write(char[] buf, int off, int len)>
<java.io.PrintWriter: void write(int c)>
<java.io.PrintWriter: void write(String s)>
<java.io.PrintWriter: void write(String s, int off, int len)>

<java.io.PushbackReader: int read()>
<java.io.PushbackReader: int read(char[] cbuf, int off, int len)>

<java.io.StringWriter: StringWriter append(char c)>
<java.io.StringWriter: StringWriter append(CharSequence csq)>
<java.io.StringWriter: StringWriter append(CharSequence csq, int start, int end)>
<java.io.StringWriter: StringBuffer getBuffer()>
<java.io.StringWriter: String toString()>
<java.io.StringWriter: void write(char[] cbuf, int off, int len)>
<java.io.StringWriter: void write(int c)>
<java.io.StringWriter: void write(String str)>
<java.io.StringWriter: void write(String str, int off, int len)>

<java.io.Writer: Writer	append(char c)>
<java.io.Writer: Writer	append(CharSequence csq)>
<java.io.Writer: Writer	append(CharSequence csq, int start, int end)>
<java.io.Writer: void write(char[] cbuf)>
<java.io.Writer: void write(int c)>
<java.io.Writer: void write(String str)>
<java.io.Writer: void write(String str, int off, int len)>

<java.lang.Runtime: java.lang.Process exec(java.lang.String)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[])>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[])>
<java.lang.Runtime: java.lang.Process exec(java.lang.String[],java.lang.String[],java.io.File)>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[])>
<java.lang.Runtime: java.lang.Process exec(java.lang.String,java.lang.String[],java.io.File)>

<javax.servlet.http.Cookie: void setComment(java.lang.String)>
<javax.servlet.http.Cookie: void setDomain(java.lang.String)>
<javax.servlet.http.Cookie: void setPath(java.lang.String)>
<javax.servlet.http.Cookie: void setValue(java.lang.String)>

<javax.servlet.ServletOutputStream: void print(boolean)>
<javax.servlet.ServletOutputStream: void print(char)>
<javax.servlet.ServletOutputStream: void print(double)>
<javax.servlet.ServletOutputStream: void print(float)>
<javax.servlet.ServletOutputStream: void print(int)>
<javax.servlet.ServletOutputStream: void print(long)>
<javax.servlet.ServletOutputStream: void print(java.lang.String)>
<javax.servlet.ServletOutputStream: void println(boolean)>
<javax.servlet.ServletOutputStream: void println(char)>
<javax.servlet.ServletOutputStream: void println(double)>
<javax.servlet.ServletOutputStream: void println(float)>
<javax.servlet.ServletOutputStream: void println(int)>
<javax.servlet.ServletOutputStream: void println(long)>
<javax.servlet.ServletOutputStream: void println(java.lang.String)>

<javax.servlet.jsp.JspWriter: void print(boolean)>
<javax.servlet.jsp.JspWriter: void print(char)>
<javax.servlet.jsp.JspWriter: void print(double)>
<javax.servlet.jsp.JspWriter: void print(float)>
<javax.servlet.jsp.JspWriter: void print(int)>
<javax.servlet.jsp.JspWriter: void print(long)>
<javax.servlet.jsp.JspWriter: void print(java.lang.String)>
<javax.servlet.jsp.JspWriter: void println(boolean)>
<javax.servlet.jsp.JspWriter: void println(char)>
<javax.servlet.jsp.JspWriter: void println(double)>
<javax.servlet.jsp.JspWriter: void println(float)>
<javax.servlet.jsp.JspWriter: void println(int)>
<javax.servlet.jsp.JspWriter: void println(long)>
<javax.servlet.jsp.JspWriter: void println(java.lang.String)>

<javax.servlet.ServletRequest: void setAttribute(java.lang.String,java.lang.Object)>
<javax.servlet.ServletRequest: void setCharacterEncoding(java.lang.String)>

<javax.servlet.http.HttpServletResponse: javax.servlet.http.Cookie addCookie(javax.servlet.http.Cookie)>
<javax.servlet.http.HttpServletResponse: void addDateHeader(java.lang.String,long)>
<javax.servlet.http.HttpServletResponse: void addHeader(java.lang.String,java.lang.String)>
<javax.servlet.http.HttpServletResponse: void addIntHeader(java.lang.String,int)>
<javax.servlet.http.HttpServletResponse: void sendError(int)>
<javax.servlet.http.HttpServletResponse: void sendError(int,java.lang.String)>
<javax.servlet.http.HttpServletResponse: void setDateHeader(java.lang.String,long)>
<javax.servlet.http.HttpServletResponse: void setHeader(java.lang.String,java.lang.String)>
<javax.servlet.http.HttpServletResponse: void setIntHeader(java.lang.String,int)>

<javax.servlet.http.HttpSession: void setAttribute(java.lang.String,java.lang.Object)>

<javax.servlet.ServletContext: void log(java.lang.String,java.lang.Throwable)>
<javax.servlet.ServletContext: void log(java.lang.String)>


<javax.servlet.GenericServlet: void log(java.lang.String,java.lang.Throwable)>
<javax.servlet.GenericServlet: void log(java.lang.String)>


<javax.persistence.EntityManager: javax.persistence.TypedQuery createQuery(java.lang.String,java.lang.Class)>
<javax.servlet.http.HttpServletResponse: void sendRedirect(java.lang.String)>
<com.mysql.jdbc.Statement: java.sql.ResultSet executeQuery(java.lang.String)>
<org.apache.xmlrpc.webserver.ConnectionServer: void writeResponse(org.apache.xmlrpc.common.XmlRpcStreamRequestConfig,java.io.OutputStream,java.lang.Object)>
<org.apache.xmlrpc.webserver.Connection: void writeResponseHeader(org.apache.xmlrpc.webserver.RequestData,int)>
<org.springframework.web.socket.handler.ConcurrentWebSocketSessionDecorator: void sendMessage(org.springframework.web.socket.WebSocketMessage)>

<java.net.URLConnection: void connect()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>

<java.net.URL: java.io.InputStream openStream()>
<java.net.URL: java.lang.Object getContent()>
<java.net.URL: java.lang.Object getContent(java.lang.Class[])>

<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String)>
<java.net.URL: void set(java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)>

<android.util.Log: int d(java.lang.String,java.lang.String)>
<android.util.Log: int d(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.util.Log: int e(java.lang.String,java.lang.String)>
<android.util.Log: int e(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.util.Log: int i(java.lang.String,java.lang.String)>
<android.util.Log: int i(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.util.Log: int v(java.lang.String,java.lang.String)>
<android.util.Log: int v(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.util.Log: int w(java.lang.String,java.lang.Throwable)>
<android.util.Log: int w(java.lang.String,java.lang.String)>
<android.util.Log: int w(java.lang.String,java.lang.String,java.lang.Throwable)>
<android.util.Log: int wtf(java.lang.String,java.lang.Throwable)>
<android.util.Log: int wtf(java.lang.String,java.lang.String)>
<android.util.Log: int wtf(java.lang.String,java.lang.String,java.lang.Throwable)>

<java.lang.ProcessBuilder: java.lang.Process start()>

<android.bluetooth.BluetoothSocket: InputStream	getInputStream()>
<android.bluetooth.BluetoothSocket: OutputStream getOutputStream()>

<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] parse(java.lang.String)>
<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] parse(java.lang.String,boolean)>
<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] parseHeader(java.lang.String,boolean)>
<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] setAddress(java.lang.String)>
<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] setPersonal(java.lang.String)>
<javax.mail.internet.InternetAddress: javax.mail.internet.InternetAddress[] setPersonal(java.lang.String,java.lang.String)>


























