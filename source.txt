<java.io.RandomAccessFile: int read()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<java.io.Reader: int read(char[],int,int)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.io.FilterReader: int read()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.io.RandomAccessFile: int read(byte[],int,int)>
<java.io.File: java.net.URI toURI()>
<java.io.InputStream: int available()>
<java.io.FilterInputStream: int read()>
<java.io.File: java.lang.String getName()>
<java.io.Reader: int read()>
<java.io.InputStreamReader: java.lang.String getEncoding()>
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
<java.io.ObjectInputStream: int readInt()>
<java.io.PipedInputStream: int read()>
<java.io.FilterInputStream: int read(byte[],int,int)>
<java.io.File: java.lang.String getPath()>
<java.io.InputStream: int read(byte[],int,int)>
<java.net.URL: java.io.InputStream openStream()>
<java.io.DataInputStream: java.lang.String readUTF()>
<java.io.BufferedReader: java.lang.String readLine()>
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()>
<java.io.File: java.lang.String getAbsolutePath()>
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()>
<java.io.File: java.io.File getParentFile()>
<java.io.File: java.lang.String getCanonicalPath()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>
