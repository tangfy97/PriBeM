<es.gob.afirma.ui.utils.SelectionDialog: java.io.File saveDataToFile(java.lang.String,byte[],java.lang.String,es.gob.afirma.ui.utils.ExtFilter,java.lang.Object)>
<com.sun.java.help.impl.MyBufferedReader: int read(char[],int,int)>
<org.bouncycastle.util.io.TeeInputStream: int read(byte[],int,int)>
<es.gob.afirma.core.misc.AOUtil: void loadNativeLibrary(java.lang.String)>
<es.gob.afirma.signers.tsp.pkcs7.CMSTimestamper: byte[] getTSAResponseHttp(byte[])>
<java.io.FilterInputStream: int available()>
<es.gob.afirma.core.misc.Platform: java.lang.String getJavaLibraryPath()>
<com.sun.java.help.search.DefaultIndexBuilder: void close()>
<com.lowagie.text.pdf.RandomAccessFileOrArray: byte[] InputStreamToArray(java.io.InputStream)>
<com.lowagie.text.pdf.codec.GifImage: int readShort()>
<java.io.File: java.io.File getAbsoluteFile()>
<com.lowagie.text.Image: com.lowagie.text.Image getInstance(java.net.URL)>
<es.gob.afirma.ui.wizardmultifirmamasiva.PanelMultifirmaMasiva$ExtensionsFileFilter: java.lang.String getExtension(java.io.File)>
<com.lowagie.text.pdf.codec.BmpImage: com.lowagie.text.Image read8Bit(int)>
<es.gob.afirma.ui.principal.Firma: void examinarActionPerformed(javax.swing.JTextField)>
<java.io.BufferedReader: int read()>
<org.bouncycastle.jcajce.provider.asymmetric.ec.BCECPublicKey: java.lang.String toString()>
<com.lowagie.text.pdf.codec.GifImage: int readBlock()>
<org.bouncycastle.asn1.ConstructedOctetStream: int read(byte[],int,int)>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getMozillaUserProfileDirectoryWindows()>
<com.lowagie.text.pdf.codec.GifImage: boolean decodeImageData()>
<es.gob.afirma.massive.DirectorySignatureHelper: es.gob.afirma.core.signers.AOSigner getAppropiatedSigner(java.io.File)>
<java.io.PushbackInputStream: int read()>
<es.gob.afirma.keystores.mozilla.AOSecMod: java.util.List getModules(java.lang.String)>
<es.gob.afirma.ui.principal.Ensobrado: void examinarActionPerformed(javax.swing.JTextField)>
<com.sun.java.help.search.RAFFile: int read()>
<com.sun.java.help.search.RAFFileFactory: com.sun.java.help.search.RAFFile get(java.net.URL,boolean)>
<es.gob.afirma.core.misc.Platform: java.lang.String getUserHome()>
<es.gob.afirma.signature.ValidateXMLSignature: es.gob.afirma.signature.SignValidity validate(byte[])>
<net.sf.jmimemagic.MagicMatcher: java.lang.ClassLoader getCleanClassLoader()>
<com.lowagie.text.xml.simpleparser.SimpleXMLParser: void parse(com.lowagie.text.xml.simpleparser.SimpleXMLDocHandler,java.io.InputStream)>
<es.gob.afirma.ui.utils.MultisignUtils: es.gob.afirma.keystores.main.common.AOKeyStoreManager getAOKeyStoreManager(es.gob.afirma.keystores.main.common.KeyStoreConfiguration,java.awt.Component)>
<es.gob.afirma.signers.odf.AOODFSigner: es.gob.afirma.core.util.tree.AOTreeModel getSignersStructure(byte[],boolean)>
<java.io.FilterInputStream: int read(byte[])>
<javax.help.plaf.gtk.GTKCursorFactory: java.awt.Cursor createCursor(java.lang.String)>
<com.lowagie.text.pdf.PdfSignatureAppearance$RangeStream: int read()>
<es.gob.afirma.ui.visor.ui.ShowFileLinkAction: void openData(byte[],java.awt.Component)>
<es.gob.afirma.keystores.single.SingleCertKeyStore: void getCertificatesFromStream(byte[])>
<es.gob.afirma.massive.DirectorySignatureHelper: boolean massiveSign(es.gob.afirma.massive.MassiveType,java.lang.String,boolean,java.lang.String,boolean,boolean,java.security.KeyStore$PrivateKeyEntry,java.util.Properties)>
<java.io.RandomAccessFile: int read()>
<org.bouncycastle.asn1.DefiniteLengthInputStream: int read(byte[],int,int)>
<com.lowagie.text.pdf.PdfReader: byte[] FlateDecode(byte[],boolean)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.net.URL: java.lang.String getProtocol()>
<javax.help.HelpUtilities: java.net.URL getLocalizedResource(java.lang.ClassLoader,java.lang.String,java.lang.String,java.util.Locale,boolean)>
<com.lowagie.text.pdf.PdfEFStream: void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream)>
<org.bouncycastle.asn1.x509.DistributionPointName: java.lang.String toString()>
<es.gob.afirma.keystores.main.common.AOKeyStoreManagerFactory: es.gob.afirma.keystores.main.common.AOKeyStoreManager getPkcs12KeyStoreManager(java.lang.String,javax.security.auth.callback.PasswordCallback,java.lang.Object)>
<java.io.File: java.lang.String getName()>
<es.gob.afirma.core.misc.Platform: java.lang.String getJavaArch()>
<es.gob.afirma.core.misc.Platform: java.lang.String getSystemJavaExtDir()>
<java.net.URL: java.lang.String getPath()>
<com.sun.java.help.search.HTMLIndexerKit$HTMLParserCallback$AnchorAction: boolean isPost4207472()>
<es.gob.afirma.core.misc.Platform: java.lang.String getJavaExtDir()>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getShort(java.lang.String)>
<es.gob.afirma.core.misc.AOFileUtils: java.util.zip.ZipFile createTempZipFile(byte[])>
<org.apache.commons.io.input.ProxyInputStream: int read(byte[])>
<es.gob.afirma.core.signers.AdESPolicy: void setValues(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>
<com.lowagie.text.pdf.codec.GifImage: void readGraphicControlExt()>
<org.bouncycastle.asn1.x509.CRLDistPoint: java.lang.String toString()>
<com.lowagie.text.pdf.PdfPKCS7: java.security.KeyStore loadCacertsKeyStore(java.lang.String)>
<java.net.URLConnection: java.lang.String getContentEncoding()>
<es.gob.afirma.keystores.main.common.AOKeyStoreManagerFactory: es.gob.afirma.keystores.main.common.AOKeyStoreManager getFileKeyStoreManager(es.gob.afirma.keystores.main.common.AOKeyStore,java.lang.String,javax.security.auth.callback.PasswordCallback,java.lang.Object)>
<org.bouncycastle.asn1.StreamUtil: int findLimit(java.io.InputStream)>
<net.java.xades.util.SystemUtils: java.lang.String getIOTempDir()>
<net.java.xades.util.ResourceHelper$FileResourceEntry: java.lang.String getPathName()>
<net.java.xades.security.xml.XAdES.SignaturePolicyIdentifierImpl: void setIdentifier(java.lang.String,java.lang.String,java.lang.String)>
<com.lowagie.text.pdf.codec.BmpImage: com.lowagie.text.Image read4Bit(int)>
<es.gob.afirma.ui.utils.Utils: void openFile(java.io.File)>
<es.gob.afirma.ui.core.jse.AWTUIManager: java.io.File saveDataToFile(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)>
<es.gob.afirma.signers.odf.AOODFSigner: java.io.File createTempFile(byte[])>
<es.gob.afirma.ui.core.jse.CertificateUtils: void openCert(java.awt.Component,java.security.cert.X509Certificate)>
<java.io.FilterInputStream: int read()>
<es.gob.afirma.ui.utils.ExtFilter: java.lang.String getExtension(java.io.File)>
<com.sun.java.help.search.RAFFileFactoryOn12$1: java.lang.Object run()>
<com.lowagie.text.pdf.PdfStamper: com.lowagie.text.pdf.PdfStamper createSignature(com.lowagie.text.pdf.PdfReader,java.io.OutputStream,char,java.io.File,boolean,java.util.Calendar)>
<com.lowagie.text.pdf.codec.GifImage: void readImage()>
<javax.help.SwingHelpUtilities: javax.swing.ImageIcon getImageIcon(java.lang.Class,java.lang.String)>
<es.gob.afirma.ui.wizardmultifirmamasiva.PanelMultifirmaMasiva: void examinarFicheroLogActionPerformed()>
<es.gob.afirma.ui.wizardmultifirmamasiva.PanelEntrada: void examinarActionPerformed()>
<com.lowagie.text.FontFactoryImp: int registerDirectory(java.lang.String,boolean)>
<com.sun.java.help.search.DocumentCompressor: boolean isFileURL(java.net.URL)>
<com.lowagie.text.pdf.RandomAccessFileOrArray: int read(byte[],int,int)>
<es.gob.afirma.signers.tsp.pkcs7.CMSTimestamper: byte[] getTSAResponseExternalSocket(byte[],java.net.Socket)>
<org.bouncycastle.asn1.ASN1InputStream: org.bouncycastle.asn1.ASN1Primitive readObject()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<es.gob.afirma.ui.utils.OpenFileMessageDialog: void show(java.awt.Component,java.lang.Object,java.lang.String,java.io.File,int)>
<java.io.Reader: int read(char[],int,int)>
<org.bouncycastle.util.io.Streams: void drain(java.io.InputStream)>
<com.sun.java.help.search.Indexer: void parseFile(java.io.InputStream,java.lang.String,boolean)>
<com.lowagie.text.pdf.PdfImage: void transferBytes(java.io.InputStream,java.io.OutputStream,int)>
<es.gob.afirma.ui.wizardmultifirmamasiva.PanelMultifirmaMasiva: void examinarDirectorioActionPerformed()>
<com.sun.java.help.search.TemporaryRAFFile: int read(byte[],int,int)>
<net.java.xades.util.SystemUtils: java.lang.String getOSName()>
<org.bouncycastle.asn1.x509.IssuingDistributionPoint: java.lang.String toString()>
<es.gob.afirma.ui.principal.Desensobrado: void examinarActionPerformed(javax.swing.JTextField)>
<com.lowagie.text.pdf.PdfEncodings: void encodeStream(java.io.InputStream,java.util.ArrayList)>
<com.sun.java.help.search.PlainTextIndexerKit: void parse(java.io.Reader,java.lang.String,boolean,javax.help.search.IndexBuilder,javax.help.search.ConfigFile)>
<es.gob.afirma.ui.wizardmultifirmacofirma.PanelCofirma: void examinarFirmaActionPerformed()>
<com.sun.java.help.search.RAFFileFactory: boolean isFileURL(java.net.URL)>
<es.gob.afirma.ui.wizardmultifirmamasiva.PanelMultifirmaMasiva: boolean multifirmarFicheros()>
<org.bouncycastle.jce.provider.X509CRLObject: java.lang.String toString()>
<com.lowagie.text.pdf.codec.GifImage: void readHeader()>
<java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>
<com.sun.java.help.impl.XmlReader: int read(char[],int,int)>
<com.lowagie.text.xml.simpleparser.SimpleXMLParser: void go(java.io.Reader)>
<com.lowagie.text.pdf.codec.BmpImage: com.lowagie.text.Image readRLE4()>
<com.lowagie.text.Utilities: java.net.URL toURL(java.lang.String)>
<com.lowagie.text.ImgWMF: void processParameters()>
<java.io.RandomAccessFile: int readInt()>
<java.io.File: java.net.URI toURI()>
<com.sun.java.help.impl.XmlReader: char utf8char()>
<es.gob.afirma.ui.visor.ui.SignDataPanel: void loadSignatureFileProperties(java.io.File,byte[],javax.swing.JComponent)>
<org.bouncycastle.jce.provider.X509CertificateObject: java.lang.String toString()>
<es.gob.afirma.ui.principal.Cifrado: void examinarActionPerformed(javax.swing.JTextField)>
<es.gob.afirma.ui.core.jse.AWTUIManager: boolean isJava7()>
<com.lowagie.text.Jpeg2000: void processParameters()>
<java.io.InputStream: int read(byte[])>
<org.bouncycastle.asn1.util.ASN1Dump: void _dumpAsString(java.lang.String,boolean,org.bouncycastle.asn1.ASN1Primitive,java.lang.StringBuffer)>
<net.java.xades.util.ResourceHelper: java.util.Enumeration resourceEntries()>
<com.sun.java.help.search.Indexer: java.util.Vector loadFiles(java.lang.String,java.util.Vector)>
<java.io.LineNumberReader: java.lang.String readLine()>
<java.io.InputStream: int available()>
<javax.help.plaf.basic.BasicContentViewerUI$PageLoader: java.lang.String findTitle(java.net.URL)>
<com.lowagie.text.pdf.codec.BmpImage: void read24Bit(byte[])>
<com.sun.java.help.search.SearchEnvironment: void readChildrenData()>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getShortPath(java.lang.String)>
<com.lowagie.text.pdf.TrueTypeFont: java.lang.String getBaseFont()>
<com.lowagie.text.pdf.AcroFields$RevisionStream: int read()>
<com.lowagie.text.pdf.PdfStamper: void close(java.util.Calendar)>
<org.bouncycastle.asn1.x509.DistributionPoint: java.lang.String toString()>
<java.io.InputStream: int read(byte[],int,int)>
<es.gob.afirma.massive.DirectorySignatureHelper: boolean saveSignToDirectory(java.lang.String,byte[],java.io.File,es.gob.afirma.core.signers.AOSigner,java.lang.String)>
<es.gob.afirma.ui.core.jse.CertificateUtils: java.io.File saveTemp(byte[],java.lang.String)>
<es.gob.afirma.core.misc.UrlHttpManagerImpl: byte[] readUrlByPost(java.lang.String)>
<com.sun.java.help.impl.DocumentParser: char skipWhite(char)>
<net.java.xades.util.SystemUtils: java.lang.String getUserHome()>
<com.sun.java.help.search.TemporaryRAFFile: int read()>
<com.sun.java.help.impl.DocumentParser: void parse()>
<com.sun.java.help.search.RAFFile: int readInt()>
<com.sun.java.help.impl.DocumentParser: char readChar()>
<es.gob.afirma.ui.principal.Validacion: void browseActionPerformed(java.lang.String,es.gob.afirma.ui.utils.ExtFilter,javax.swing.JTextField)>
<es.gob.afirma.keystores.main.common.AOKeyStoreManagerFactory: es.gob.afirma.keystores.main.common.AOKeyStoreManager getPkcs11KeyStoreManager(es.gob.afirma.keystores.main.common.AOKeyStore,java.lang.String,java.lang.String,javax.security.auth.callback.PasswordCallback,java.lang.Object)>
<java.io.File: java.lang.String getParent()>
<com.lowagie.text.pdf.PdfFileSpecification: com.lowagie.text.pdf.PdfFileSpecification fileEmbedded(com.lowagie.text.pdf.PdfWriter,java.lang.String,java.lang.String,byte[],java.lang.String,com.lowagie.text.pdf.PdfDictionary,int)>
<java.io.File: java.io.File[] listFiles()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String)>
<com.lowagie.text.pdf.codec.BmpImage: com.lowagie.text.Image readRLE8()>
<java.net.URL: java.lang.String getHost()>
<es.gob.afirma.ui.principal.Descifrado: void examinarActionPerformed(javax.swing.JTextField)>
<java.io.ByteArrayInputStream: int available()>
<com.lowagie.text.pdf.PdfSignatureAppearance: void close(com.lowagie.text.pdf.PdfDictionary)>
<java.io.BufferedReader: int read(char[],int,int)>
<java.io.BufferedInputStream: int read()>
<org.apache.commons.io.input.ProxyInputStream: int read(byte[],int,int)>
<es.gob.afirma.ui.core.jse.JSEUIManager: java.io.File saveDataToFile(byte[],java.lang.String,java.lang.String,java.lang.String,java.lang.String[],java.lang.String,java.lang.Object)>
<com.lowagie.text.pdf.codec.PngImage: void decodePass(int,int,int,int,int,int)>
<java.io.File: java.lang.String[] list()>
<java.net.URL: java.io.InputStream openStream()>
<es.gob.afirma.core.misc.Platform: java.lang.String recoverJavaHome()>
<java.io.InputStreamReader: int read(char[],int,int)>
<com.sun.java.help.impl.XmlReader: int read()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<com.lowagie.text.pdf.codec.PngImage: void readPng()>
<com.sun.java.help.impl.XmlReader: boolean ready()>
<es.gob.afirma.signers.ooxml.be.fedict.eid.applet.service.signer.AbstractXmlSignatureService: void addDigestInfosAsReferences(java.util.List,javax.xml.crypto.dsig.XMLSignatureFactory,java.util.List)>
<org.bouncycastle.util.io.Streams: int readFully(java.io.InputStream,byte[],int,int)>
<java.io.File: java.lang.String getPath()>
<javax.help.FavoritesView: void saveFavorites(javax.help.FavoritesNode)>
<es.gob.afirma.core.misc.AOUtil: java.io.InputStream loadFile(java.net.URI)>
<org.bouncycastle.asn1.IndefiniteLengthInputStream: int read(byte[],int,int)>
<java.io.RandomAccessFile: int read(byte[],int,int)>
<es.gob.afirma.ui.wizardsobres.PanelRemitentes: boolean ensobrar()>
<javax.help.plaf.basic.BasicCursorFactory: java.awt.Cursor createCursor(java.lang.String)>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String searchLastFirefoxVersion(java.lang.String)>
<es.gob.afirma.core.misc.Platform: es.gob.afirma.core.misc.Platform$OS recoverOsName()>
<java.io.DataInputStream: byte readByte()>
<java.net.URL: int getPort()>
<net.java.xades.util.Base64: byte[] decode(java.lang.String,int)>
<javax.help.FavoritesView: javax.help.FavoritesNode parse(javax.help.HelpSet,java.util.Locale,javax.help.TreeItemFactory)>
<es.gob.afirma.ui.wizardmultifirmacontrafirma.PanelEntrada: void examinarFirmaActionPerformed()>
<org.bouncycastle.asn1.x509.GeneralNames: java.lang.String toString()>
<java.io.InputStreamReader: int read()>
<com.lowagie.text.pdf.PdfStream: void toPdf(com.lowagie.text.pdf.PdfWriter,java.io.OutputStream)>
<org.apache.commons.io.input.ProxyInputStream: int available()>
<com.sun.java.help.impl.DocumentParser: char scanIdentifier(char)>
<com.sun.java.help.search.Schema: void read()>
<java.io.File: java.io.File getParentFile()>
<net.java.xades.util.ResourceHelper: void loadFiles(java.io.File,java.util.List)>
<es.gob.afirma.ui.wizardsobres.PanelDestinatarios: void anadirActionPerformed(javax.swing.JComboBox,javax.swing.DefaultListModel,javax.swing.JButton)>
<java.net.URL: java.lang.String getFile()>
<es.gob.afirma.ui.principal.Firma: void firmarActionPerformed(javax.swing.JComboBox,javax.swing.JComboBox,javax.swing.JTextField)>
<es.gob.afirma.ui.principal.Desensobrado: void extraerActionPerformed(javax.swing.JComboBox,javax.swing.JTextField,javax.swing.JCheckBox)>
<org.bouncycastle.util.io.Streams: void pipeAll(java.io.InputStream,java.io.OutputStream)>
<es.gob.afirma.ui.core.jse.JSEUIManager$ExtFilter: java.lang.String getExtension(java.io.File)>
<es.gob.afirma.ui.wizardmultifirmacofirma.PanelCofirma: void examinarDatosActionPerformed()>
<net.sf.jmimemagic.MagicMatcher: net.sf.jmimemagic.MagicMatch test(java.io.File,boolean)>
<com.sun.java.help.search.SearchEnvironment: void readFromDB()>
<com.lowagie.text.pdf.codec.BmpImage: com.lowagie.text.Image read1Bit(int)>
<es.gob.afirma.ui.principal.Firma: java.lang.String getFilename(java.lang.String)>
<es.gob.afirma.ui.core.jse.FileExtensionFilter: boolean accept(java.io.File)>
<com.lowagie.text.pdf.codec.Base64: byte[] decode(java.lang.String,int)>
<com.lowagie.text.Jpeg: void processParameters()>
<es.gob.afirma.massive.DirectorySignatureHelper: boolean massiveCosignOperation(java.io.File[],java.io.File,boolean,java.security.KeyStore$PrivateKeyEntry,java.util.Properties)>
<es.gob.afirma.massive.DirectorySignatureHelper: boolean massiveCounterSignOperation(es.gob.afirma.massive.MassiveType,java.io.File[],java.io.File,boolean,java.security.KeyStore$PrivateKeyEntry,java.util.Properties)>
<javax.help.search.ConfigFile: void addStopWordsFile(java.lang.String)>
<org.bouncycastle.cms.CMSEnvelopedHelper$CMSDigestAuthenticatedSecureReadable$1: int read(byte[],int,int)>
<es.gob.afirma.ui.principal.PrincipalGUI: void setHighContrast(boolean)>
<java.io.File: java.lang.String getCanonicalPath()>
<javax.help.HelpSet$DefaultHelpSetFactory: void processSubHelpSet(javax.help.HelpSet,java.util.Hashtable)>
<org.bouncycastle.jce.provider.X509CRLEntryObject: java.lang.String toString()>
<net.java.xades.security.xml.XAdES.SignaturePolicyIdentifierImpl: byte[] inputStreamToByteArray(java.io.InputStream)>
<net.java.xades.util.SystemUtils: void copy(java.io.InputStream,java.io.OutputStream)>
<org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>
<org.bouncycastle.asn1.util.ASN1Dump: java.lang.String dumpBinaryDataAsString(java.lang.String,byte[])>
<es.gob.afirma.ui.visor.ui.ShowFileLinkAction: void openFile(java.io.File,java.awt.Component)>
<es.gob.afirma.ui.principal.Desensobrado: es.gob.afirma.keystores.main.common.AOKeyStoreManager getKeyStoreManager(es.gob.afirma.keystores.main.common.KeyStoreConfiguration)>
<com.lowagie.text.pdf.PdfReader: byte[] decodePredictor(byte[],com.lowagie.text.pdf.PdfObject)>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getSystemNSSLibDirWindows()>
<java.io.File: java.io.File createTempFile(java.lang.String,java.lang.String,java.io.File)>
<com.sun.java.help.search.BtreeDictParameters: com.sun.java.help.search.BtreeDictParameters read(java.lang.String,java.net.URL)>
<com.lowagie.text.pdf.codec.GifImage: void readContents()>
<com.sun.java.help.search.TemporaryRAFFile: int readInt()>
<com.sun.java.help.search.RAFFile: int read(byte[],int,int)>
<com.lowagie.text.pdf.codec.BmpImage: void readPalette(int)>
<com.lowagie.text.pdf.codec.PngImage: com.lowagie.text.Image getImage(java.net.URL)>
<es.gob.afirma.keystores.mozilla.MozillaKeyStoreUtilities: java.lang.String getMozillaUserProfileDirectoryMacOsX()>
<com.lowagie.text.pdf.fonts.cmaps.CMapParser: java.lang.Object parseNextToken(java.io.PushbackInputStream)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<es.gob.afirma.ui.utils.SelectionDialog: java.io.File showOpenDialog(java.awt.Component,java.lang.String,java.lang.String,int,es.gob.afirma.ui.utils.ExtFilter)>
<es.gob.afirma.ui.wizardsobresremitentes.PanelRemitentes: boolean anadirRemitentes()>
<com.lowagie.text.ImgWMF: void readWMF(com.lowagie.text.pdf.PdfTemplate)>
<es.gob.afirma.massive.DirectorySignatureHelper: java.io.FileInputStream getFileInputStream(java.io.File)>
<es.gob.afirma.core.misc.UrlHttpManagerImpl: byte[] readUrlByGet(java.lang.String)>
<es.gob.afirma.core.misc.AOUtil: byte[] getDataFromInputStream(java.io.InputStream)>
<com.lowagie.text.pdf.RandomAccessFileOrArray: int read()>
<es.gob.afirma.signers.odf.AOODFSigner: byte[] sign(byte[],java.lang.String,java.security.PrivateKey,java.security.cert.Certificate[],java.util.Properties)>
<com.sun.java.help.impl.XmlReader: java.io.Reader createReader(java.net.URLConnection)>
<javax.help.plaf.basic.BasicContentViewerUI: void linkActivated(java.net.URL)>
<java.io.File: java.lang.String getAbsolutePath()>
<es.gob.afirma.ui.wizardsobres.PanelRemitentes: void anadirActionPerformed(javax.swing.JComboBox,javax.swing.JButton,javax.swing.JButton)>
<es.gob.afirma.ui.wizardsobresremitentes.PanelRemitentes: void anadirActionPerformed(javax.swing.JComboBox,javax.swing.JButton,javax.swing.JButton)>
<com.lowagie.text.pdf.codec.BmpImage: com.lowagie.text.Image getImage(java.net.URL)>
<org.bouncycastle.util.io.Streams: long pipeAllLimited(java.io.InputStream,long,java.io.OutputStream)>
<es.gob.afirma.keystores.main.common.KeyStoreUtilities: java.lang.String createPKCS11ConfigFile(java.lang.String,java.lang.String,java.lang.Integer)>
<java.net.URLClassLoader: java.net.URL[] getURLs()>
<es.gob.afirma.keystores.mozilla.NSPreferences: es.gob.afirma.keystores.mozilla.NSPreferences$FirefoxProfile[] readProfiles(java.io.File)>
<com.lowagie.text.pdf.codec.GifImage: void readLSD()>
<com.sun.java.help.search.Indexer: void compile(java.lang.String[])>
<es.gob.afirma.massive.DirectorySignatureHelper: boolean massiveSignOperation(java.io.File[],java.io.File,java.security.KeyStore$PrivateKeyEntry,java.util.Properties)>
<com.sun.java.help.impl.DocumentParser: void skipToCloseAngle(char)>
<es.gob.afirma.ui.visor.ui.SignDataPanel: void openCertificate(java.security.cert.X509Certificate)>
