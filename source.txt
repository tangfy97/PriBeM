<org.jsoup.Jsoup: org.jsoup.nodes.Document parse(java.io.File,java.lang.String)>
<java.io.ObjectInputStream: java.lang.String readUTF()>
<java.io.DataInputStream: int readUnsignedShort()>
<org.joda.time.DateTimeZone: org.joda.time.DateTimeZone getDefault()>
<java.io.File: java.lang.String getAbsolutePath()>
<java.io.File: java.io.File getParentFile()>
<org.jsoup.helper.HttpConnection$Response: void setupFromConnection(java.net.HttpURLConnection,org.jsoup.Connection$Response)>
<org.joda.time.DateTimeZone: org.joda.time.tz.NameProvider getDefaultNameProvider()>
<org.jsoup.helper.HttpConnection$Response: void serialiseRequestUrl(org.jsoup.Connection$Request)>
<java.net.URL: java.lang.String getAuthority()>
<org.jsoup.helper.HttpConnection$Response: org.jsoup.helper.HttpConnection$Response execute(org.jsoup.Connection$Request,org.jsoup.helper.HttpConnection$Response)>
<java.net.URL: java.lang.String getProtocol()>
<java.io.InputStream: int read(byte[])>
<org.joda.time.DateTimeZone$Stub: void readObject(java.io.ObjectInputStream)>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<org.jsoup.nodes.Node: java.lang.String absUrl(java.lang.String)>
<javax.validation.Validation$DefaultValidationProviderResolver: java.util.List getValidationProviders()>
<java.net.URLConnection: java.net.URL getURL()>
<java.net.URLConnection: java.io.OutputStream getOutputStream()>
<java.net.URL: int getPort()>
<org.joda.time.tz.ZoneInfoCompiler: java.util.Map compile(java.io.File,java.io.File[])>
<org.jsoup.helper.DataUtil: java.nio.ByteBuffer readToByteBuffer(java.io.InputStream)>
<java.io.BufferedReader: java.lang.String readLine()>
<java.net.URL: java.io.InputStream openStream()>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<org.hibernate.validator.constraints.impl.URLValidator: boolean isValid(java.lang.String,javax.validation.ConstraintValidatorContext)>
<org.joda.time.tz.ZoneInfoCompiler: void parseDataFile(java.io.BufferedReader)>
<org.joda.time.DateTimeZone: org.joda.time.tz.Provider getDefaultProvider()>
<org.joda.time.tz.ZoneInfoProvider: void readZoneInfoMap(java.io.DataInputStream,java.util.Map)>
<java.io.DataInputStream: java.lang.String readUTF()>
<java.net.URL: java.lang.String getHost()>
<java.net.URL: java.lang.String getPath()>
<java.net.URL: java.lang.String getQuery()>
