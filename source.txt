<com.google.gwt.user.server.rpc.impl.ServerSerializationStreamReader: void deserializeClass(java.lang.Class,java.lang.Object,java.lang.reflect.Type,java.lang.reflect.Type[],com.google.gwt.user.server.rpc.impl.DequeMap)>
<com.vaadin.server.communication.PublishedFileHandler: boolean handleRequest(com.vaadin.server.VaadinSession,com.vaadin.server.VaadinRequest,com.vaadin.server.VaadinResponse)>
<com.vaadin.data.util.FilesystemContainer: java.util.Collection getChildren(java.lang.Object)>
<com.vaadin.server.widgetsetutils.ClassPathExplorer: java.util.List getRawClasspathEntries()>
<java.net.URLConnection: java.io.InputStream getInputStream()>
<java.io.File: java.lang.String getName()>
<com.vaadin.data.util.FilesystemContainer$FileItem: java.lang.String toString()>
<com.google.gwt.user.server.rpc.RemoteServiceServlet: int getCodeServerPort()>
<com.vaadin.data.util.FilesystemContainer: int size()>
<com.vaadin.data.util.sqlcontainer.query.TableQuery: com.vaadin.data.util.sqlcontainer.RowId storeRowImmediately(com.vaadin.data.util.sqlcontainer.RowItem)>
<com.vaadin.server.VaadinPortletService: java.io.File getBaseDirectory()>
<com.vaadin.server.VaadinServlet: boolean isAllowedVAADINResourceUrl(javax.servlet.http.HttpServletRequest,java.net.URL)>
<com.vaadin.data.util.sqlcontainer.query.FreeformQuery: boolean containsRowWithKey(java.lang.Object[])>
<com.google.gwt.rpc.server.RpcServlet: java.lang.String getRequestModuleBasePath()>
<com.vaadin.server.communication.FileUploadHandler: boolean streamToReceiver(com.vaadin.server.VaadinSession,java.io.InputStream,com.vaadin.server.StreamVariable,java.lang.String,java.lang.String,long)>
<java.net.URL: java.lang.String getHost()>
<com.vaadin.server.FileResource: java.lang.String getFilename()>
<com.vaadin.server.DownloadStream: void writeResponse(com.vaadin.server.VaadinRequest,com.vaadin.server.VaadinResponse)>
<com.vaadin.data.util.sqlcontainer.connection.SimpleJDBCConnectionPool: java.sql.Connection createConnection()>
<java.net.URL: java.lang.String getProtocol()>
<com.vaadin.data.util.FilesystemContainer: void addItemIds(java.util.Collection,java.io.File)>
<java.net.URL: java.lang.String getPath()>
<com.google.gwt.core.server.StackTraceDeobfuscator$3: java.io.InputStream openInputStream(java.lang.String)>
<com.vaadin.server.themeutils.SASSAddonImportFileCreator: void updateTheme(java.lang.String)>
<java.io.Reader: int read(char[])>
<java.io.ObjectInputStream: int readInt()>
<java.io.File: java.lang.String getAbsolutePath()>
<com.vaadin.data.util.FilesystemContainer: java.util.Collection getItemIds()>
<com.vaadin.server.widgetsetutils.ClassPathExplorer: boolean acceptClassPathEntry(java.lang.String)>
<com.vaadin.server.FileResource: com.vaadin.server.DownloadStream getStream()>
<com.vaadin.server.VaadinServlet: java.lang.String getResourcePath(javax.servlet.ServletContext,java.lang.String)>
<java.sql.Connection: java.sql.Statement createStatement(int,int)>
<com.vaadin.server.communication.AtmospherePushConnection$FragmentedMessage: boolean append(java.io.Reader)>
<com.vaadin.data.util.FilesystemContainer$FileItem: int hashCode()>
<com.vaadin.server.DefaultDeploymentConfiguration: java.lang.String getSystemProperty(java.lang.String)>
<com.google.gwt.user.server.rpc.RPCServletUtils: java.lang.String readContent(javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<com.vaadin.util.FileTypeResolver: java.lang.String getMIMEType(java.io.File)>
<com.vaadin.server.widgetsetutils.WidgetSetBuilder: java.lang.String readFile(java.io.File)>
<java.io.File: java.io.File getParentFile()>
<com.vaadin.data.util.FilesystemContainer$FileItem: java.lang.String getName()>
<com.vaadin.data.util.TextFileProperty: java.lang.String getValue()>
<com.vaadin.server.communication.ServerRpcHandler: java.lang.String getMessage(java.io.Reader)>
<com.vaadin.server.widgetsetutils.ClassPathExplorer: java.net.URL getDefaultSourceDirectory()>
<java.io.File: java.io.File[] listFiles()>
<com.vaadin.server.VaadinServlet: void writeStaticResourceResponse(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.net.URL)>
<java.lang.System: java.lang.String getProperty(java.lang.String)>
<java.io.File: java.lang.String getPath()>
<java.sql.Statement: java.sql.ResultSet executeQuery(java.lang.String)>
<java.net.URL: java.io.InputStream openStream()>
<java.net.URL: java.lang.String getFile()>
<com.google.gwt.user.server.rpc.RemoteServiceServlet: com.google.gwt.user.server.rpc.SerializationPolicy loadSerializationPolicy(javax.servlet.http.HttpServlet,javax.servlet.http.HttpServletRequest,java.lang.String,java.lang.String)>
<com.vaadin.data.util.sqlcontainer.query.FreeformQuery: int countByDelegate()>
<com.vaadin.data.util.sqlcontainer.query.FreeformQuery: java.sql.ResultSet getResults(int,int)>
<com.vaadin.data.util.FilesystemContainer: java.lang.Object getParent(java.lang.Object)>
<com.vaadin.data.util.FilesystemContainer: int getFileCounts(java.io.File)>
<java.util.Scanner: java.lang.String next()>
<com.vaadin.server.widgetsetutils.ClassPathExplorer: void include(java.lang.String,java.io.File,java.util.Map)>
<com.vaadin.server.widgetsetutils.ClassPathExplorer: void includeJar(java.io.File,java.util.Map)>
<java.net.URL: int getPort()>
<com.vaadin.server.widgetsetutils.ClassPathExplorer: void searchForWidgetSetsAndAddonStyles(java.lang.String,java.util.Map,java.util.Map)>
<java.sql.Statement: java.sql.ResultSet getGeneratedKeys()>
<com.vaadin.server.widgetsetutils.WidgetSetBuilder: void updateWidgetSet(java.lang.String)>
<com.google.gwt.core.server.StackTraceDeobfuscator: java.util.Map loadSymbolMap(java.lang.String,java.util.Set)>
<java.io.InputStream: int read(byte[])>
<com.vaadin.data.util.FilesystemContainer: java.util.Collection rootItemIds()>
<com.vaadin.data.util.FilesystemContainer: boolean containsId(java.lang.Object)>
<java.io.BufferedReader: java.lang.String readLine()>
<com.google.gwt.core.server.StackTraceDeobfuscator: java.lang.String loadStreamAsString(java.io.InputStream)>
<java.sql.Connection: java.sql.Statement createStatement()>
<com.vaadin.data.util.FilesystemContainer: boolean hasChildren(java.lang.Object)>
<com.vaadin.server.communication.ResourceWriter: void write(com.vaadin.ui.UI,java.io.Writer,com.vaadin.server.JsonPaintTarget)>
<com.google.gwt.user.server.rpc.SerializationPolicyLoader: com.google.gwt.user.server.rpc.SerializationPolicy loadFromStream(java.io.InputStream,java.util.List)>
<java.io.File: int hashCode()>
<com.vaadin.data.util.sqlcontainer.query.TableQuery: int executeUpdateReturnKeys(com.vaadin.data.util.sqlcontainer.query.generator.StatementHelper,com.vaadin.data.util.sqlcontainer.RowItem)>
<java.io.File: java.lang.String getCanonicalPath()>
<com.vaadin.server.themeutils.SASSAddonImportFileCreator: void printImportComment(java.io.PrintStream,java.net.URL)>
<java.io.File: java.lang.String[] list()>
<com.google.gwt.user.server.rpc.SerializationPolicyClient: com.google.gwt.user.server.rpc.SerializationPolicy loadPolicy(java.lang.String,com.google.gwt.user.server.rpc.SerializationPolicyClient$Logger)>
<com.vaadin.data.util.sqlcontainer.query.FreeformQuery: int getCount()>
<com.vaadin.server.VaadinServlet: void serveStaticResourcesInVAADIN(java.lang.String,javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)>
<com.google.gwt.junit.server.JUnitHostImpl: java.lang.String getRequestModuleBasePath()>
