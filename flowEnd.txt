$r2 = virtualinvoke r0.<org.apache.jena.iri.impl.AbsIRIFactoryImpl: org.apache.jena.iri.IRI create(java.lang.String)>(r1)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.YearDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>()
staticinvoke <org.apache.jena.riot.LangBuilder: void copy(java.lang.String[],java.util.List)>(r0, $r2)
$r2 = staticinvoke <com.hp.hpl.jena.graph.impl.LiteralLabelFactory: com.hp.hpl.jena.graph.impl.LiteralLabel create(java.lang.String,java.lang.String,boolean)>("", "", 0)
interfaceinvoke r6.<org.apache.log4j.Appender: void close()>()
$r11 = staticinvoke <org.apache.jena.riot.system.IRIResolver: org.apache.jena.riot.system.IRIResolver create(org.apache.jena.iri.IRI)>($r10)
virtualinvoke $r3.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r2, $r4, r1, null)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r19)
$r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>(r12)
interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>()
$i1 = virtualinvoke r0.<org.apache.jena.iri.impl.Parser: int start(int)>(11)
$r1 = staticinvoke <org.apache.jena.atlas.logging.Log: org.slf4j.Logger log(java.lang.Class)>(r0)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r41, $r36)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
$i3 = virtualinvoke $r2.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>()
$r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r5)
$r1 = staticinvoke <org.apache.xerces.impl.dv.util.Base64: byte[] decode(java.lang.String)>(r0)
$r21 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#now")
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
$r12 = staticinvoke <org.apache.xerces.impl.dv.util.Base64: byte[] decode(java.lang.String)>($r11)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("[log4j.configDebug] is deprecated. Use [log4j.debug] instead.")
virtualinvoke $r22.<java.io.IOException: void printStackTrace()>()
interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>()
$r24 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#namedVarAlloc")
$r4 = staticinvoke <com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl: com.hp.hpl.jena.rdf.model.impl.ReifiedStatementImpl create(com.hp.hpl.jena.rdf.model.impl.ModelCom,java.lang.String,com.hp.hpl.jena.rdf.model.Statement)>($r3, r1, r2)
$r2 = virtualinvoke $r1.<com.hp.hpl.jena.enhanced.Personality: com.hp.hpl.jena.enhanced.Personality copy()>()
staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: void close(java.util.Iterator)>($r1)
interfaceinvoke $r9.<org.slf4j.Logger: void warn(java.lang.String)>($r15)
$r2 = specialinvoke r0.<org.apache.jena.iri.impl.AbsIRIFactoryImpl: org.apache.jena.iri.IRI create(java.lang.String)>(r1)
$r3 = staticinvoke <org.apache.jena.iri.impl.IDNP: java.lang.String check(java.lang.String)>($r2)
virtualinvoke r25.<java.io.InputStream: void close()>()
$r30 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("RDF/JSON", "application/rdf+json")
$i2 = virtualinvoke $r2.<java.util.regex.Matcher: int start()>()
interfaceinvoke $r1.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>()
specialinvoke r0.<arq.cmdline.CmdMain: void process()>()
$r19 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#datasetDescription")
virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, "Unexpected Thorwable", r2)
virtualinvoke $r4.<java.io.StringWriter: void write(char[],int,int)>(r1, 0, $i0)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r29, $r22)
$i1 = virtualinvoke $r1.<java.util.regex.Matcher: int start(int)>($i2)
virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null)
$r21 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("N-Triples", "application/n-triples")
$r15 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#opExecutorFactory")
$i1 = virtualinvoke r0.<org.apache.jena.iri.impl.Parser: int start(int)>(i0)
interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to initialize JMX", r3)
staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String)>($r1, r2)
virtualinvoke r6.<java.lang.Throwable: void printStackTrace()>()
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r50, $r43)
virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, "No classloader", null)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
$i3 = virtualinvoke $r2.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
virtualinvoke r2.<java.io.Reader: void close()>()
$r9 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r6, $r7, $r8)
$r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>()
virtualinvoke $r4.<java.io.StringWriter: void close()>()
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.DurationDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String,int)>(r1, 0)
$r14 = staticinvoke <org.apache.xerces.impl.dv.util.HexBin: byte[] decode(java.lang.String)>($r13)
virtualinvoke r6.<java.lang.Throwable: void printStackTrace()>()
virtualinvoke $r8.<java.lang.Exception: void printStackTrace()>()
$r4 = staticinvoke <org.apache.jena.riot.Lang: java.util.List copy(java.util.List)>(r3)
$i1 = virtualinvoke $r2.<java.util.regex.Matcher: int start(int)>(i2)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
$r4 = staticinvoke <com.hp.hpl.jena.util.iterator.WrappedIterator: com.hp.hpl.jena.util.iterator.ExtendedIterator create(java.util.Iterator)>(r3)
$r4 = virtualinvoke r0.<org.apache.jena.iri.impl.AbsIRIImpl: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r1)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r58)
$r1 = staticinvoke <org.apache.jena.atlas.logging.Log: org.slf4j.Logger log(java.lang.Class)>(r0)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.TimeDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
$i3 = virtualinvoke $r4.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
virtualinvoke r25.<java.io.InputStream: void close()>()
virtualinvoke $r8.<java.lang.ExceptionInInitializerError: void printStackTrace(java.io.PrintStream)>($r3)
interfaceinvoke $r44.<org.slf4j.Logger: void warn(java.lang.String)>($r51)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.MonthDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
virtualinvoke $r18.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("")
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r16)
virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null)
$r42 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("N-Quads", "application/n-quads")
interfaceinvoke $r6.<org.slf4j.Logger: void warn(java.lang.String)>($r13)
interfaceinvoke $r3.<com.hp.hpl.jena.rdf.model.StmtIterator: void close()>()
$r1 = staticinvoke <org.apache.xerces.impl.dv.util.HexBin: byte[] decode(java.lang.String)>(r0)
virtualinvoke r0.<arq.cmdline.CmdMain: void exec()>()
$r6 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r1, $r3, $r5)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.DateDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.MonthDayDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
$r3 = virtualinvoke r1.<org.apache.jena.iri.impl.IRIFactoryImpl: org.apache.jena.iri.IRI create(java.lang.String)>($r2)
virtualinvoke r6.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r7)
$r3 = interfaceinvoke $r2.<com.hp.hpl.jena.datatypes.RDFDatatype: java.lang.Object parse(java.lang.String)>(r1)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r7)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("See http://logging.apache.org/log4j/1.2/faq.html#noconfig for more info.")
$r11 = staticinvoke <org.apache.jena.riot.Lang: java.util.List copy(java.util.List)>(r10)
virtualinvoke r8.<org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)>($r0, r9)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.YearMonthDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
$r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r5)
virtualinvoke r1.<arq.cmdline.Arg: void setValue(java.lang.String)>(r6)
$r2 = virtualinvoke r0.<org.apache.jena.iri.IRI: org.apache.jena.iri.IRI create(java.lang.String)>(r1)
virtualinvoke $r0.<org.apache.log4j.PropertyConfigurator: void doConfigure(java.util.Properties,org.apache.log4j.spi.LoggerRepository)>(r1, $r2)
interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>("Null configuration")
interfaceinvoke $r2.<org.slf4j.Logger: void warn(java.lang.String,java.lang.Throwable)>("Failed to get charset for UTF-8", $r1)
virtualinvoke r0.<arq.cmdline.CmdMain: void process()>()
$r4 = virtualinvoke $r2.<org.apache.jena.iri.impl.IRIFactoryImpl: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>(r3)
virtualinvoke $r5.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r4, $r3, r1, r2)
$r2 = specialinvoke r0.<com.hp.hpl.jena.datatypes.xsd.XSDDatatype: java.lang.Object parse(java.lang.String)>(r1)
interfaceinvoke $r5.<org.slf4j.Logger: void info(java.lang.String)>($r10)
interfaceinvoke $r3.<org.slf4j.Logger: void info(java.lang.String)>($r8)
$r2 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>(r1)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
virtualinvoke $r23.<java.lang.Throwable: void printStackTrace()>()
$r2 = staticinvoke <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node$NodeMaker,java.lang.Object)>($r1, r0)
$i1 = virtualinvoke $r1.<java.util.regex.Matcher: int start(int)>(i0)
$r0 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("RDF/XML", "application/rdf+xml")
$r15 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("N3", "text/rdf+n3")
staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.StatsMatcher: void check(com.hp.hpl.jena.sparql.sse.Item)>($r3)
$r5 = interfaceinvoke r2.<com.hp.hpl.jena.rdf.model.ReifiedStatement: com.hp.hpl.jena.rdf.model.Statement getStatement()>()
$r4 = virtualinvoke $r5.<org.apache.xerces.impl.xpath.regex.RegexParser: org.apache.xerces.impl.xpath.regex.Token parse(java.lang.String,int)>($r3, $i2)
virtualinvoke r3.<java.lang.Throwable: void printStackTrace()>()
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.YearMonthDurationDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String,int)>(r1, 1)
staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator: void close(java.util.Iterator)>($r1)
$r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
$r2 = staticinvoke <org.apache.jena.atlas.web.MediaType: org.apache.jena.atlas.web.MediaType create(java.lang.String)>(r1)
$r2 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>()
virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>("****")
virtualinvoke $r4.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("")
staticinvoke <com.hp.hpl.jena.util.iterator.NiceIterator: void close(java.util.Iterator)>(r0)
$i7 = virtualinvoke r0.<org.apache.jena.iri.impl.Parser: int start(int)>(i17)
$r16 = staticinvoke <org.apache.jena.atlas.web.ContentType: org.apache.jena.atlas.web.ContentType create(java.lang.String)>(r2)
$r7 = virtualinvoke $r6.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
$r23 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#version/Jena")
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
$i3 = virtualinvoke $r2.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
virtualinvoke $r4.<org.apache.log4j.Logger: void log(java.lang.String,org.apache.log4j.Priority,java.lang.Object,java.lang.Throwable)>($r3, $r2, r1, null)
$r4 = virtualinvoke $r2.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>(r3)
$i1 = virtualinvoke $r2.<java.util.regex.Matcher: int start()>()
$r2 = virtualinvoke $r1.<java.lang.String: byte[] getBytes(java.lang.String)>("utf-8")
$r0 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>()
staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Object,java.lang.String)>(r2, $r11)
$r14 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#query")
staticinvoke <org.apache.jena.riot.LangBuilder: void copy(java.lang.String[],java.util.List)>(r0, $r2)
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>("Reported exception:")
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>($r13)
virtualinvoke $r25.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("")
$r8 = staticinvoke <org.apache.jena.atlas.lib.PoolSync: org.apache.jena.atlas.lib.Pool create(org.apache.jena.atlas.lib.Pool)>($r7)
$r2 = staticinvoke <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node$NodeMaker,java.lang.Object)>($r1, r0)
interfaceinvoke r3.<org.apache.log4j.Appender: void close()>()
interfaceinvoke r19.<org.apache.log4j.spi.Configurator: void doConfigure(java.net.URL,org.apache.log4j.spi.LoggerRepository)>(r0, r3)
virtualinvoke $r6.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>($r7)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("Please initialize the log4j system properly.")
$r16 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#optimizerFactory")
interfaceinvoke $r1.<org.slf4j.Logger: void warn(java.lang.String)>(r2)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
virtualinvoke $r7.<java.io.InputStream: void close()>()
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r38, $r31)
$r7 = staticinvoke <org.apache.jena.riot.Lang: java.util.List copy(java.util.List)>(r6)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r52, $r46)
virtualinvoke $r2.<java.io.PrintStream: void println(java.lang.String)>($r3)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r59, $r39)
$i4 = virtualinvoke $r2.<java.util.regex.Matcher: int start()>()
$r6 = interfaceinvoke r4.<org.apache.jena.riot.stream.Locator: org.apache.jena.atlas.web.TypedInputStream open(java.lang.String)>(r5)
interfaceinvoke $r12.<org.slf4j.Logger: void warn(java.lang.String)>("Detected a NaN anomaly believed to be due to use of JDK 1.4.1")
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String)>("The root logger cannot be set to null.")
$r0 = staticinvoke <org.apache.jena.riot.system.PrefixMapFactory: org.apache.jena.riot.system.PrefixMap create()>()
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r35, $r30)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Error during default initialization", $r21)
$r7 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>($r6, $r5, $r4)
$r17 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#optimizer")
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>($r68, $r42)
$r10 = staticinvoke <org.apache.jena.atlas.lib.PoolSync: org.apache.jena.atlas.lib.Pool create(org.apache.jena.atlas.lib.Pool)>($r9)
staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.StatsMatcher: void check(com.hp.hpl.jena.sparql.sse.Item)>($r1)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>(r0)
specialinvoke r0.<com.hp.hpl.jena.graph.impl.LiteralLabelImpl: void setValue(java.lang.String)>(r1)
$r25 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#namedVarAnon")
$r1 = staticinvoke <org.apache.jena.atlas.logging.Log: org.slf4j.Logger log(java.lang.Class)>(r0)
$i3 = virtualinvoke $r2.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
$r4 = staticinvoke <com.hp.hpl.jena.graph.Triple: com.hp.hpl.jena.graph.Triple create(com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node,com.hp.hpl.jena.graph.Node)>(r1, r2, r3)
$r22 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#version/ARQ")
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r10)
$r18 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#dataset")
$r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.DayTimeDurationDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String,int)>(r1, 2)
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r24)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)
$r2 = staticinvoke <com.hp.hpl.jena.graph.Node: com.hp.hpl.jena.graph.Node create(com.hp.hpl.jena.graph.Node$NodeMaker,java.lang.Object)>($r1, r0)
staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.StatsMatcher: void check(com.hp.hpl.jena.sparql.sse.Item)>($r2)
$i3 = virtualinvoke $r2.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
$r1 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8")
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.DayDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
$r2 = virtualinvoke r0.<org.apache.xerces.impl.dv.xs.DateTimeDV: org.apache.xerces.impl.dv.xs.AbstractDateTimeDV$DateTimeData parse(java.lang.String)>(r1)
$r20 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>("http://jena.hpl.hp.com/ARQ/system#algebra")
staticinvoke <org.apache.jena.riot.LangBuilder: void copy(java.lang.String[],java.util.List)>(r0, $r2)
$r15 = staticinvoke <com.hp.hpl.jena.assembler.assemblers.AssemblerGroup: com.hp.hpl.jena.assembler.assemblers.AssemblerGroup create()>()
$r2 = staticinvoke <org.apache.jena.atlas.web.MediaType: org.apache.jena.atlas.web.MediaType$ParsedMediaType parse(java.lang.String)>(r0)
interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>()
virtualinvoke $r7.<java.lang.Throwable: void printStackTrace(java.io.PrintWriter)>($r5)
staticinvoke <org.apache.jena.atlas.logging.Log: void warn(java.lang.Class,java.lang.String,java.lang.Throwable)>(class "Lcom/hp/hpl/jena/sparql/mgt/ARQMgt;", "Failed to initialize JMX", $r12)
interfaceinvoke $r8.<org.slf4j.Logger: void warn(java.lang.String)>("Can\'t determine the data model")
$r12 = staticinvoke <com.hp.hpl.jena.shared.PrefixMapping$Factory: com.hp.hpl.jena.shared.PrefixMapping create()>()
$r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r5)
interfaceinvoke $r2.<com.hp.hpl.jena.util.iterator.ClosableIterator: void close()>()
interfaceinvoke $r4.<com.hp.hpl.jena.util.iterator.ExtendedIterator: void close()>()
$r1 = staticinvoke <org.apache.jena.atlas.logging.Log: org.slf4j.Logger log(java.lang.Class)>(r0)
virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r6)
$r4 = virtualinvoke r0.<org.apache.jena.iri.impl.AbsIRIFactoryImpl: org.apache.jena.iri.IRI create(org.apache.jena.iri.IRI)>($r1)
staticinvoke <com.hp.hpl.jena.sparql.engine.optimizer.StatsMatcher: void check(com.hp.hpl.jena.sparql.engine.optimizer.Pattern)>(r0)
virtualinvoke $r14.<org.apache.jena.iri.IRIFactory: org.apache.jena.iri.IRI create(java.lang.String)>("")
$r6 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("Turtle", "text/turtle")
staticinvoke <org.apache.log4j.helpers.LogLog: void warn(java.lang.String,java.lang.Throwable)>("Caught Exception while in Loader.getResource. This may be innocuous.", $r20)
interfaceinvoke $r25.<org.slf4j.Logger: void warn(java.lang.String)>($r32)
$i3 = virtualinvoke $r2.<org.apache.jena.iri.impl.Parser: int start(int)>($i2)
$r51 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("rdf/null", "null/rdf")
$r36 = staticinvoke <org.apache.jena.riot.LangBuilder: org.apache.jena.riot.LangBuilder create(java.lang.String,java.lang.String)>("TriG", "text/trig")
$r6 = staticinvoke <com.hp.hpl.jena.sparql.util.Symbol: com.hp.hpl.jena.sparql.util.Symbol create(java.lang.String)>($r5)
$r0 = staticinvoke <com.hp.hpl.jena.rdf.model.AnonId: com.hp.hpl.jena.rdf.model.AnonId create()>()
